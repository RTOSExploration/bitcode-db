; ModuleID = 'build/adafruit_feather_stm32f405/subsys/zbus/hello_world/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type {}
%struct._thread_arch = type { i32, i32 }
%struct.version_msg = type { i8, i8, i16 }
%struct.zbus_observer = type { i8*, i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.zbus_channel = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233472 to i8*), void (i8*)* inttoptr (i32 134231501 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233472 to i8*), void (i8*)* inttoptr (i32 134231481 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233472 to i8*), void (i8*)* inttoptr (i32 134231471 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233472 to i8*), void (i8*)* inttoptr (i32 134231571 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233472 to i8*), void (i8*)* inttoptr (i32 134231561 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233472 to i8*), void (i8*)* inttoptr (i32 134231551 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233472 to i8*), void (i8*)* inttoptr (i32 134231541 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233472 to i8*), void (i8*)* inttoptr (i32 134231531 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233472 to i8*), void (i8*)* inttoptr (i32 134231521 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233472 to i8*), void (i8*)* inttoptr (i32 134231511 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233472 to i8*), void (i8*)* inttoptr (i32 134231491 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [55 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_subscriber_task_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_acc_data_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_simple_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_version_chan to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_bar_sub to i8*), i8* bitcast (%struct.zbus_channel* @acc_data_chan to i8*), i8* bitcast (%struct.zbus_observer* @bar_sub to i8*), i8* bitcast (%struct.zbus_observer* @foo_lis to i8*), i8* bitcast (%struct.zbus_channel* @simple_chan to i8*), i8* bitcast (%struct.zbus_channel* @version_chan to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_mutex_version_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_version_chan", align 4, !dbg !25
@.str = private unnamed_addr constant [13 x i8] c"version_chan\00", align 1
@_zbus_message_version_chan = internal global %struct.version_msg { i8 0, i8 1, i16 2 }, align 2, !dbg !358
@_zbus_observers_version_chan = internal constant [1 x %struct.zbus_observer*] zeroinitializer, align 4, !dbg !365
@version_chan = dso_local constant %struct.zbus_channel { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i16 4, i8* null, i8* getelementptr inbounds (%struct.version_msg, %struct.version_msg* @_zbus_message_version_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_version_chan, %struct.zbus_observer** getelementptr inbounds ([1 x %struct.zbus_observer*], [1 x %struct.zbus_observer*]* @_zbus_observers_version_chan, i32 0, i32 0) }, section "._zbus_channel.static.version_chan", align 4, !dbg !112
@_zbus_mutex_acc_data_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_acc_data_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_acc_data_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_acc_data_chan", align 4, !dbg !295
@.str.1 = private unnamed_addr constant [14 x i8] c"acc_data_chan\00", align 1
@_zbus_message_acc_data_chan = internal global %struct._thread_stack_info zeroinitializer, align 4, !dbg !370
@_zbus_observers_acc_data_chan = internal constant [3 x %struct.zbus_observer*] [%struct.zbus_observer* @foo_lis, %struct.zbus_observer* @bar_sub, %struct.zbus_observer* null], align 4, !dbg !377
@acc_data_chan = dso_local constant %struct.zbus_channel { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i16 12, i8* null, i8* bitcast (%struct._thread_stack_info* @_zbus_message_acc_data_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_acc_data_chan, %struct.zbus_observer** getelementptr inbounds ([3 x %struct.zbus_observer*], [3 x %struct.zbus_observer*]* @_zbus_observers_acc_data_chan, i32 0, i32 0) }, section "._zbus_channel.static.acc_data_chan", align 4, !dbg !297
@_zbus_mutex_simple_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_simple_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_simple_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_simple_chan", align 4, !dbg !299
@.str.2 = private unnamed_addr constant [12 x i8] c"simple_chan\00", align 1
@_zbus_message_simple_chan = internal global i32 0, align 4, !dbg !382
@_zbus_observers_simple_chan = internal constant [1 x %struct.zbus_observer*] zeroinitializer, align 4, !dbg !384
@simple_chan = dso_local constant %struct.zbus_channel { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i16 4, i8* null, i8* bitcast (i32* @_zbus_message_simple_chan to i8*), i1 (i8*, i32)* @simple_chan_validator, %struct.k_mutex* @_zbus_mutex_simple_chan, %struct.zbus_observer** getelementptr inbounds ([1 x %struct.zbus_observer*], [1 x %struct.zbus_observer*]* @_zbus_observers_simple_chan, i32 0, i32 0) }, section "._zbus_channel.static.simple_chan", align 4, !dbg !301
@.str.3 = private unnamed_addr constant [8 x i8] c"foo_lis\00", align 1
@foo_lis = dso_local global %struct.zbus_observer { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @listener_callback_example }, section "._zbus_observer.static.foo_lis", align 4, !dbg !303
@_zbus_observer_queue_bar_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_bar_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_bar_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bar_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bar_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bar_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bar_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_bar_sub", align 4, !dbg !305
@_k_fifo_buf__zbus_observer_queue_bar_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 4, !dbg !344
@.str.4 = private unnamed_addr constant [8 x i8] c"bar_sub\00", align 1
@bar_sub = dso_local global %struct.zbus_observer { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8 1, %struct.k_msgq* @_zbus_observer_queue_bar_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.bar_sub", align 4, !dbg !307
@_k_thread_obj_subscriber_task_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !354
@_k_thread_stack_subscriber_task_id = dso_local global [576 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !349
@.str.5 = private unnamed_addr constant [19 x i8] c"subscriber_task_id\00", align 1
@_k_thread_data_subscriber_task_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_subscriber_task_id, %struct.z_thread_stack_element* getelementptr inbounds ([576 x %struct.z_thread_stack_element], [576 x %struct.z_thread_stack_element]* @_k_thread_stack_subscriber_task_id, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* bitcast (void ()* @subscriber_task to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_subscriber_task_id", align 4, !dbg !309
@subscriber_task_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_subscriber_task_id, align 4, !dbg !340
@__const.main.acc1 = private unnamed_addr constant %struct._thread_stack_info { i32 1, i32 1, i32 1 }, align 4
@.str.6 = private unnamed_addr constant [58 x i8] c"%c: Sensor sample started raw reading, version %u.%u-%u!\0A\00", align 1
@count = internal unnamed_addr global i32 0, align 4, !dbg !356
@.str.7 = private unnamed_addr constant [19 x i8] c"%c: Channel list:\0A\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"%c: Observers list:\0A\00", align 1
@.str.9 = private unnamed_addr constant [65 x i8] c"%c: Pub a valid value to a channel with validator successfully.\0A\00", align 1
@.str.10 = private unnamed_addr constant [68 x i8] c"%c: Pub an invalid value to a channel with validator successfully.\0A\00", align 1
@.str.11 = private unnamed_addr constant [43 x i8] c"%c: From listener -> Acc x=%d, y=%d, z=%d\0A\00", align 1
@.str.12 = private unnamed_addr constant [45 x i8] c"%c: From subscriber -> Acc x=%d, y=%d, z=%d\0A\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"%c: %d - Channel %s:\0A\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"%c:       Message size: %d\0A\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"%c:       Observers:\0A\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"%c:       - %s\0A\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"%c: %d - %s %s\0A\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"Subscriber\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"Listener\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !386
@.str.1.22 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !410
@.str.25 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !420
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !470
@.str.30 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.32 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.33 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.31 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.35 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.36 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.37 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.38 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.39 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.40 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.64 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.59 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.60 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.61 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.62 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.63 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.54 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.55 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.48 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.56 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10.57 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11.58 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12.53 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14.47 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.49 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16.50 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17.51 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18.52 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19.43 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20.44 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25.45 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.70 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !499
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !628
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !505
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !637
@.str.76 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !673
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.89, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !683
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !688
@.str.88 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.89 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.90 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !708
@.str.1.94 = private unnamed_addr constant [60 x i8] c"%c: Observer %s at %p could not be notified. Error code %d\0A\00", align 1
@_zbus_channel_list_start = external dso_local global [0 x %struct.zbus_channel], align 4
@_zbus_channel_list_end = external dso_local global [0 x %struct.zbus_channel], align 4
@_zbus_observer_list_start = external dso_local global [0 x %struct.zbus_observer], align 4
@_zbus_observer_list_end = external dso_local global [0 x %struct.zbus_observer], align 4
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !720
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !913
@.str.103 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !875
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !858
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.103, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !831
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !847
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !877
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !890
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !892
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !894
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !896
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !898
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !900
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !902
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !904
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !906
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !908
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !918
@.str.105 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !945
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1039
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1028
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_POST_KERNEL60_", align 4, !dbg !1080
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !940
@.str.114 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1146
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1432
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1398
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1384
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1323
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !938
@.str.1.115 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1434
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1402
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1400
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1340
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !936
@.str.2.116 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1447
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1406
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1404
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1346
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !934
@.str.3.117 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1449
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1410
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1408
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1352
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !932
@.str.4.118 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1451
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1414
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1412
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1358
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !930
@.str.5.119 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1453
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1418
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1416
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1364
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !928
@.str.6.120 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1455
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1422
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1420
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1370
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !926
@.str.7.121 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1457
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1426
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1424
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1376
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !924
@.str.8.122 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1459
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1430
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1428
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1382
@.str.126 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.126, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1461
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !942
@.str.1.129 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1617
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1672
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1615
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1674
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.129, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1606
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1608
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1661
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1664
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1666
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1669
@.str.2.131 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.134 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.4.136 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.5.137 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1012
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.6 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1685
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1794
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1796
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1792
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1763
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1798
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1321
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.115, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1338
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.116, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1344
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.117, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1350
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.118, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1356
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.119, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1362
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.120, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1368
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.121, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1374
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.122, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1380
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1888
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1928
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1931
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1936
@.str.172 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.176 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.177 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.178 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.182 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.183 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.184 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.185 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.186 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.181 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.180 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.182, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.183, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.184, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.185, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.186, i32 0, i32 0)], align 4
@.str.188 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.188, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1943
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2165
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2152
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2160
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2172
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2177
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.197 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.203, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.204, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.205, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.206, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.207, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.208, i32 0, i32 0)], align 4, !dbg !2205
@.str.202 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.203 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.204 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.205 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.206 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.207 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.201 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.208 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2317
@.str.8.200 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2330
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2438
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2546
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2549
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2551
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2170
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2162
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2553
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2589
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2030
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2587
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2592
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3338 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #26, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #26, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #26, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #26, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #26, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #26, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #26, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #26, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #26, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #26, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #26, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #26, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #26, !dbg !3364, !srcloc !3365
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #26, !dbg !3366, !srcloc !3367
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #26, !dbg !3368, !srcloc !3369
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #26, !dbg !3370, !srcloc !3371
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #26, !dbg !3372, !srcloc !3373
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #26, !dbg !3374, !srcloc !3375
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3376, !srcloc !3377
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #26, !dbg !3378, !srcloc !3379
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #26, !dbg !3380, !srcloc !3381
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3382, !srcloc !3383
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #26, !dbg !3384, !srcloc !3385
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #26, !dbg !3386, !srcloc !3387
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #26, !dbg !3388, !srcloc !3389
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #26, !dbg !3390, !srcloc !3391
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #26, !dbg !3392, !srcloc !3393
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #26, !dbg !3394, !srcloc !3397
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #26, !dbg !3398, !srcloc !3399
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3400, !srcloc !3401
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3402, !srcloc !3403
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3404, !srcloc !3405
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3406, !srcloc !3407
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #26, !dbg !3408, !srcloc !3409
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #26, !dbg !3410, !srcloc !3411
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #26, !dbg !3412, !srcloc !3413
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #26, !dbg !3414, !srcloc !3415
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3416, !srcloc !3417
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3418, !srcloc !3419
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3420, !srcloc !3421
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3422, !srcloc !3423
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3424, !srcloc !3425
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3426, !srcloc !3427
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #26, !dbg !3428, !srcloc !3429
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #26, !dbg !3430, !srcloc !3431
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #26, !dbg !3432, !srcloc !3433
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #26, !dbg !3434, !srcloc !3435
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #26, !dbg !3436, !srcloc !3437
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #26, !dbg !3438, !srcloc !3439
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3440, !srcloc !3441
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #26, !dbg !3442, !srcloc !3443
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3444, !srcloc !3445
  ret void, !dbg !3446
}

; Function Attrs: noinline nounwind optsize
define internal void @listener_callback_example(%struct.zbus_channel* nocapture noundef readonly %0) #1 !dbg !3449 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3451, metadata !DIExpression()), !dbg !3455
  %2 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef %0) #27, !dbg !3456
  call void @llvm.dbg.value(metadata i8* %2, metadata !3452, metadata !DIExpression()), !dbg !3455
  %3 = bitcast i8* %2 to i32*, !dbg !3457
  %4 = load i32, i32* %3, align 4, !dbg !3457
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3457
  %6 = bitcast i8* %5 to i32*, !dbg !3457
  %7 = load i32, i32* %6, align 4, !dbg !3457
  %8 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !3457
  %9 = bitcast i8* %8 to i32*, !dbg !3457
  %10 = load i32, i32* %9, align 4, !dbg !3457
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i32 0, i32 0), i32 noundef 73, i32 noundef %4, i32 noundef %7, i32 noundef %10) #28, !dbg !3457
  ret void, !dbg !3462
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #3 !dbg !3463 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3467, metadata !DIExpression()), !dbg !3468
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !3469
  %3 = load i8*, i8** %2, align 4, !dbg !3469
  ret i8* %3, !dbg !3470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal zeroext i1 @simple_chan_validator(i8* nocapture noundef readonly %0, i32 noundef %1) #3 !dbg !3471 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3473, metadata !DIExpression()), !dbg !3477
  call void @llvm.dbg.value(metadata i32 %1, metadata !3474, metadata !DIExpression()), !dbg !3477
  %3 = bitcast i8* %0 to i32*, !dbg !3478
  call void @llvm.dbg.value(metadata i32* %3, metadata !3475, metadata !DIExpression()), !dbg !3477
  %4 = load i32, i32* %3, align 4, !dbg !3479
  %5 = icmp ult i32 %4, 10, !dbg !3481
  ret i1 %5, !dbg !3482
}

; Function Attrs: noinline nounwind optsize
define internal void @subscriber_task() #1 !dbg !3483 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca %struct._thread_stack_info, align 4
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3488
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !3488
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3485, metadata !DIExpression(DW_OP_deref)), !dbg !3489
  %4 = call i32 @zbus_sub_wait(%struct.zbus_observer* noundef nonnull @bar_sub, %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #28, !dbg !3490
  %5 = icmp eq i32 %4, 0, !dbg !3491
  br i1 %5, label %6, label %24, !dbg !3492

6:                                                ; preds = %0
  %7 = bitcast %struct._thread_stack_info* %2 to i8*
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0
  %9 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1
  %10 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2
  br label %11, !dbg !3492

11:                                               ; preds = %6, %21
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #26, !dbg !3493
  call void @llvm.dbg.declare(metadata %struct._thread_stack_info* %2, metadata !3486, metadata !DIExpression()), !dbg !3494
  %12 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3495
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %12, metadata !3485, metadata !DIExpression()), !dbg !3489
  %13 = icmp eq %struct.zbus_channel* %12, @acc_data_chan, !dbg !3497
  br i1 %13, label %14, label %21, !dbg !3498

14:                                               ; preds = %11
  %15 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #27, !dbg !3499
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !3501
  %17 = call i32 @zbus_chan_read(%struct.zbus_channel* noundef nonnull @acc_data_chan, i8* noundef nonnull %7, [1 x i64] %16) #28, !dbg !3501
  %18 = load i32, i32* %8, align 4, !dbg !3502
  %19 = load i32, i32* %9, align 4, !dbg !3502
  %20 = load i32, i32* %10, align 4, !dbg !3502
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.12, i32 0, i32 0), i32 noundef 73, i32 noundef %18, i32 noundef %19, i32 noundef %20) #28, !dbg !3502
  br label %21, !dbg !3507

21:                                               ; preds = %14, %11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #26, !dbg !3508
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3485, metadata !DIExpression(DW_OP_deref)), !dbg !3489
  %22 = call i32 @zbus_sub_wait(%struct.zbus_observer* noundef nonnull @bar_sub, %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #28, !dbg !3490
  %23 = icmp eq i32 %22, 0, !dbg !3491
  br i1 %23, label %11, label %24, !dbg !3492, !llvm.loop !3509

24:                                               ; preds = %21, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !3510
  ret void, !dbg !3510
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !3511 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3516, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata i64 %0, metadata !3518, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i32 1000, metadata !3523, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i32 10000, metadata !3524, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i8 1, metadata !3525, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i8 0, metadata !3526, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i8 1, metadata !3527, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i8 0, metadata !3528, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i8 1, metadata !3529, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i8 0, metadata !3530, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i64 0, metadata !3531, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i64 0, metadata !3531, metadata !DIExpression()), !dbg !3535
  %2 = mul i64 %0, 10, !dbg !3537
  ret i64 %2, !dbg !3543
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3544 {
  %1 = alloca i32, align 4
  %2 = alloca %struct._thread_stack_info, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3552
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !3552
  %4 = bitcast %struct._thread_stack_info* %2 to i8*, !dbg !3553
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #26, !dbg !3553
  call void @llvm.dbg.declare(metadata %struct._thread_stack_info* %2, metadata !3548, metadata !DIExpression()), !dbg !3554
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(12) %4, i8* noundef nonnull align 4 dereferenceable(12) bitcast (%struct._thread_stack_info* @__const.main.acc1 to i8*), i32 12, i1 false), !dbg !3554
  %5 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef nonnull @version_chan) #27, !dbg !3555
  call void @llvm.dbg.value(metadata i8* %5, metadata !3549, metadata !DIExpression()), !dbg !3556
  %6 = load i8, i8* %5, align 2, !dbg !3557
  %7 = zext i8 %6 to i32, !dbg !3557
  %8 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !3557
  %9 = load i8, i8* %8, align 1, !dbg !3557
  %10 = zext i8 %9 to i32, !dbg !3557
  %11 = getelementptr inbounds i8, i8* %5, i32 2, !dbg !3557
  %12 = bitcast i8* %11 to i16*, !dbg !3557
  %13 = load i16, i16* %12, align 2, !dbg !3557
  %14 = zext i16 %13 to i32, !dbg !3557
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.6, i32 0, i32 0), i32 noundef 73, i32 noundef %7, i32 noundef %10, i32 noundef %14) #28, !dbg !3557
  store i32 0, i32* @count, align 4, !dbg !3562
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i32 0, i32 0), i32 noundef 73) #28, !dbg !3563
  %15 = tail call zeroext i1 @zbus_iterate_over_channels(i1 (%struct.zbus_channel*)* noundef nonnull @print_channel_data_iterator) #28, !dbg !3568
  store i32 0, i32* @count, align 4, !dbg !3569
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i32 0, i32 0), i32 noundef 73) #28, !dbg !3570
  %16 = tail call zeroext i1 @zbus_iterate_over_observers(i1 (%struct.zbus_observer*)* noundef nonnull @print_observer_data_iterator) #28, !dbg !3575
  %17 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1000) #27, !dbg !3576
  %18 = insertvalue [1 x i64] poison, i64 %17, 0, !dbg !3577
  %19 = call i32 @zbus_chan_pub(%struct.zbus_channel* noundef nonnull @acc_data_chan, i8* noundef nonnull %4, [1 x i64] %18) #28, !dbg !3577
  call fastcc void @k_msleep() #27, !dbg !3578
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !3579
  store i32 2, i32* %20, align 4, !dbg !3580
  %21 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !3581
  store i32 2, i32* %21, align 4, !dbg !3582
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !3583
  store i32 2, i32* %22, align 4, !dbg !3584
  %23 = call i32 @zbus_chan_pub(%struct.zbus_channel* noundef nonnull @acc_data_chan, i8* noundef nonnull %4, [1 x i64] %18) #28, !dbg !3585
  call void @llvm.dbg.value(metadata i32 5, metadata !3547, metadata !DIExpression()), !dbg !3556
  store i32 5, i32* %1, align 4, !dbg !3586
  %24 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 200) #27, !dbg !3587
  %25 = insertvalue [1 x i64] poison, i64 %24, 0, !dbg !3588
  call void @llvm.dbg.value(metadata i32* %1, metadata !3547, metadata !DIExpression(DW_OP_deref)), !dbg !3556
  %26 = call i32 @zbus_chan_pub(%struct.zbus_channel* noundef nonnull @simple_chan, i8* noundef nonnull %3, [1 x i64] %25) #28, !dbg !3588
  call void @llvm.dbg.value(metadata i32 %26, metadata !3546, metadata !DIExpression()), !dbg !3556
  %27 = icmp eq i32 %26, 0, !dbg !3589
  br i1 %27, label %28, label %29, !dbg !3591

28:                                               ; preds = %0
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.9, i32 0, i32 0), i32 noundef 73) #28, !dbg !3592
  br label %29, !dbg !3598

29:                                               ; preds = %28, %0
  call void @llvm.dbg.value(metadata i32 15, metadata !3547, metadata !DIExpression()), !dbg !3556
  store i32 15, i32* %1, align 4, !dbg !3599
  call void @llvm.dbg.value(metadata i32* %1, metadata !3547, metadata !DIExpression(DW_OP_deref)), !dbg !3556
  %30 = call i32 @zbus_chan_pub(%struct.zbus_channel* noundef nonnull @simple_chan, i8* noundef nonnull %3, [1 x i64] %25) #28, !dbg !3600
  call void @llvm.dbg.value(metadata i32 %30, metadata !3546, metadata !DIExpression()), !dbg !3556
  %31 = icmp eq i32 %30, -35, !dbg !3601
  br i1 %31, label %32, label %33, !dbg !3603

32:                                               ; preds = %29
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.10, i32 0, i32 0), i32 noundef 73) #28, !dbg !3604
  br label %33, !dbg !3610

33:                                               ; preds = %32, %29
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #26, !dbg !3611
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !3611
  ret void, !dbg !3611
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #6

; Function Attrs: noinline nounwind optsize
define internal zeroext i1 @print_channel_data_iterator(%struct.zbus_channel* nocapture noundef readonly %0) #1 !dbg !3612 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3616, metadata !DIExpression()), !dbg !3619
  %2 = load i32, i32* @count, align 4, !dbg !3620
  %3 = tail call fastcc i8* @zbus_chan_name(%struct.zbus_channel* noundef %0) #27, !dbg !3620
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i32 0, i32 0), i32 noundef 73, i32 noundef %2, i8* noundef %3) #28, !dbg !3620
  %4 = tail call fastcc zeroext i16 @zbus_chan_msg_size(%struct.zbus_channel* noundef %0) #27, !dbg !3625
  %5 = zext i16 %4 to i32, !dbg !3625
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i32 0, i32 0), i32 noundef 73, i32 noundef %5) #28, !dbg !3625
  %6 = load i32, i32* @count, align 4, !dbg !3630
  %7 = add nsw i32 %6, 1, !dbg !3630
  store i32 %7, i32* @count, align 4, !dbg !3630
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i32 0, i32 0), i32 noundef 73) #28, !dbg !3631
  %8 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 6, !dbg !3636
  %9 = load %struct.zbus_observer**, %struct.zbus_observer*** %8, align 4, !dbg !3636
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %9, metadata !3617, metadata !DIExpression()), !dbg !3637
  %10 = load %struct.zbus_observer*, %struct.zbus_observer** %9, align 4, !dbg !3638
  %11 = icmp eq %struct.zbus_observer* %10, null, !dbg !3640
  br i1 %11, label %12, label %13, !dbg !3641

12:                                               ; preds = %13, %1
  ret i1 true, !dbg !3642

13:                                               ; preds = %1, %13
  %14 = phi %struct.zbus_observer* [ %19, %13 ], [ %10, %1 ]
  %15 = phi %struct.zbus_observer** [ %18, %13 ], [ %9, %1 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %15, metadata !3617, metadata !DIExpression()), !dbg !3637
  %16 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %14, i32 0, i32 0, !dbg !3643
  %17 = load i8*, i8** %16, align 4, !dbg !3643
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i32 0, i32 0), i32 noundef 73, i8* noundef %17) #28, !dbg !3643
  %18 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %15, i32 1, !dbg !3649
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !3617, metadata !DIExpression()), !dbg !3637
  %19 = load %struct.zbus_observer*, %struct.zbus_observer** %18, align 4, !dbg !3638
  %20 = icmp eq %struct.zbus_observer* %19, null, !dbg !3640
  br i1 %20, label %12, label %13, !dbg !3641, !llvm.loop !3650
}

; Function Attrs: noinline nounwind optsize
define internal zeroext i1 @print_observer_data_iterator(%struct.zbus_observer* nocapture noundef readonly %0) #1 !dbg !3652 {
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !3656, metadata !DIExpression()), !dbg !3657
  %2 = load i32, i32* @count, align 4, !dbg !3658
  %3 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 2, !dbg !3658
  %4 = load %struct.k_msgq*, %struct.k_msgq** %3, align 4, !dbg !3658
  %5 = icmp eq %struct.k_msgq* %4, null, !dbg !3658
  %6 = select i1 %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i32 0, i32 0), !dbg !3658
  %7 = tail call fastcc i8* @zbus_obs_name(%struct.zbus_observer* noundef %0) #27, !dbg !3658
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i32 0, i32 0), i32 noundef 73, i32 noundef %2, i8* noundef %6, i8* noundef %7) #28, !dbg !3658
  %8 = load i32, i32* @count, align 4, !dbg !3663
  %9 = add nsw i32 %8, 1, !dbg !3663
  store i32 %9, i32* @count, align 4, !dbg !3663
  ret i1 true, !dbg !3664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3665 {
  call void @llvm.dbg.value(metadata i32 1000, metadata !3669, metadata !DIExpression()), !dbg !3670
  %1 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1000) #27, !dbg !3671
  %2 = insertvalue [1 x i64] poison, i64 %1, 0, !dbg !3672
  tail call fastcc void @k_sleep([1 x i64] %2) #27, !dbg !3672
  ret void, !dbg !3673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3674 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3683, metadata !DIExpression()), !dbg !3684
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3685, !srcloc !3687
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #28, !dbg !3688
  ret void, !dbg !3689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_obs_name(%struct.zbus_observer* nocapture noundef readonly %0) unnamed_addr #3 !dbg !3690 {
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !3694, metadata !DIExpression()), !dbg !3695
  %2 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 0, !dbg !3696
  %3 = load i8*, i8** %2, align 4, !dbg !3696
  ret i8* %3, !dbg !3697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_name(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #3 !dbg !3698 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3702, metadata !DIExpression()), !dbg !3703
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !3704
  %3 = load i8*, i8** %2, align 4, !dbg !3704
  ret i8* %3, !dbg !3705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i16 @zbus_chan_msg_size(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #3 !dbg !3706 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3710, metadata !DIExpression()), !dbg !3711
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 1, !dbg !3712
  %3 = load i16, i16* %2, align 4, !dbg !3712
  ret i16 %3, !dbg !3713
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3714 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3729, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %0, metadata !3725, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %1, metadata !3726, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %2, metadata !3727, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %3, metadata !3728, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %0, metadata !3730, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %0, metadata !3731, metadata !DIExpression()), !dbg !3792
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3793
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #26, !dbg !3793
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3734, metadata !DIExpression()), !dbg !3794
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3795
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #26, !dbg !3795
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3736, metadata !DIExpression()), !dbg !3796
  call void @llvm.dbg.value(metadata i32 0, metadata !3737, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 0, metadata !3738, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 0, metadata !3739, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 -1, metadata !3740, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 0, metadata !3743, metadata !DIExpression()), !dbg !3792
  %12 = and i32 %2, 4, !dbg !3797
  %13 = icmp eq i32 %12, 0, !dbg !3798
  call void @llvm.dbg.value(metadata i1 %13, metadata !3744, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3792
  %14 = lshr i32 %2, 3, !dbg !3799
  %15 = and i32 %14, 7, !dbg !3799
  %16 = add nuw nsw i32 %15, 1, !dbg !3800
  call void @llvm.dbg.value(metadata i32 %16, metadata !3745, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 0, metadata !3746, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %0, metadata !3747, metadata !DIExpression()), !dbg !3792
  %17 = ptrtoint i8* %0 to i32, !dbg !3801
  %18 = and i32 %17, 3, !dbg !3803
  %19 = icmp eq i32 %18, 0, !dbg !3803
  br i1 %19, label %20, label %316, !dbg !3804

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3805
  call void @llvm.dbg.value(metadata i8* %21, metadata !3731, metadata !DIExpression()), !dbg !3792
  %22 = icmp eq i8* %0, null, !dbg !3806
  %23 = and i32 %1, 7, !dbg !3808
  %24 = sub nuw nsw i32 8, %23, !dbg !3808
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3808
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3808
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3808
  call void @llvm.dbg.value(metadata i32 %27, metadata !3726, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %26, metadata !3731, metadata !DIExpression()), !dbg !3792
  br i1 %22, label %33, label %28, !dbg !3809

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3811
  %30 = sub i32 4, %17, !dbg !3811
  %31 = add i32 %30, %29, !dbg !3812
  %32 = icmp ugt i32 %31, %27, !dbg !3813
  br i1 %32, label %316, label %33, !dbg !3814

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3815
  call void @llvm.dbg.value(metadata i8* %34, metadata !3728, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %3, metadata !3742, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 4, metadata !3733, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 4, metadata !3732, metadata !DIExpression()), !dbg !3792
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3816

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3729, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %42, metadata !3728, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %43, metadata !3731, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %44, metadata !3732, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %45, metadata !3733, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %72, metadata !3740, metadata !DIExpression()), !dbg !3792
  br i1 %46, label %73, label %47, !dbg !3817

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3818
  %49 = zext i1 %48 to i32, !dbg !3822
  %50 = add nsw i32 %72, %49, !dbg !3822
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3822
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3822
  call void @llvm.dbg.value(metadata i32 %52, metadata !3732, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %51, metadata !3733, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 poison, metadata !3743, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %50, metadata !3740, metadata !DIExpression()), !dbg !3792
  br label %53, !dbg !3823

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3729, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %40, metadata !3728, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %58, metadata !3731, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %57, metadata !3732, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %56, metadata !3733, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 poison, metadata !3743, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %54, metadata !3740, metadata !DIExpression()), !dbg !3792
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3824
  call void @llvm.dbg.value(metadata i8* %60, metadata !3728, metadata !DIExpression()), !dbg !3792
  %61 = load i8, i8* %60, align 1, !dbg !3826
  %62 = icmp eq i8 %61, 0, !dbg !3827
  br i1 %62, label %223, label %63, !dbg !3828, !llvm.loop !3829

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !3817

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3832

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3743, metadata !DIExpression()), !dbg !3792
  %75 = add nsw i32 %72, -1, !dbg !3833
  call void @llvm.dbg.value(metadata i32 %75, metadata !3740, metadata !DIExpression()), !dbg !3792
  br label %53, !dbg !3834

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3835

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3733, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 4, metadata !3732, metadata !DIExpression()), !dbg !3792
  br label %53, !dbg !3836

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3733, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 4, metadata !3732, metadata !DIExpression()), !dbg !3792
  br label %53, !dbg !3837

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3838
  %81 = icmp eq i8 %80, 108, !dbg !3840
  br i1 %81, label %82, label %109, !dbg !3841

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3842
  %84 = load i8, i8* %83, align 1, !dbg !3842
  %85 = icmp eq i8 %84, 108, !dbg !3845
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3846
  %89 = add i32 %88, 7, !dbg !3846
  %90 = and i32 %89, -8, !dbg !3846
  %91 = inttoptr i32 %90 to i8*, !dbg !3846
  %92 = inttoptr i32 %90 to double*, !dbg !3846
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3846
  %94 = load double, double* %92, align 8, !dbg !3846
  call void @llvm.dbg.value(metadata i8* %93, metadata !3729, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 8, metadata !3732, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 8, metadata !3733, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata double %94, metadata !3760, metadata !DIExpression()), !dbg !3848
  %95 = ptrtoint i8* %43 to i32, !dbg !3849
  %96 = add i32 %95, 7, !dbg !3849
  %97 = and i32 %96, -8, !dbg !3849
  %98 = inttoptr i32 %97 to i8*, !dbg !3850
  call void @llvm.dbg.value(metadata i8* %98, metadata !3731, metadata !DIExpression()), !dbg !3792
  br i1 %22, label %104, label %99, !dbg !3851

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3852
  %101 = icmp ugt i32 %100, %194, !dbg !3856
  br i1 %101, label %316, label %102, !dbg !3857

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3858
  store double %94, double* %103, align 8, !dbg !3858
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3861
  call void @llvm.dbg.value(metadata i8* %105, metadata !3731, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 poison, metadata !3743, metadata !DIExpression()), !dbg !3792
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3743, metadata !DIExpression()), !dbg !3792
  br label %53, !dbg !3862

107:                                              ; preds = %73, %73
  br label %109, !dbg !3863

108:                                              ; preds = %73
  br label %109, !dbg !3863

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3792
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3792
  call void @llvm.dbg.value(metadata i32 %113, metadata !3732, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %112, metadata !3733, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 poison, metadata !3746, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 poison, metadata !3743, metadata !DIExpression()), !dbg !3792
  %114 = ptrtoint i8* %43 to i32, !dbg !3863
  %115 = add i32 %114, -1, !dbg !3863
  %116 = add i32 %115, %112, !dbg !3863
  %117 = sub i32 0, %112, !dbg !3863
  %118 = and i32 %116, %117, !dbg !3863
  %119 = inttoptr i32 %118 to i8*, !dbg !3864
  call void @llvm.dbg.value(metadata i8* %119, metadata !3731, metadata !DIExpression()), !dbg !3792
  br i1 %22, label %124, label %120, !dbg !3865

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3867
  %122 = add i32 %121, %118, !dbg !3868
  %123 = icmp ugt i32 %122, %194, !dbg !3869
  br i1 %123, label %316, label %124, !dbg !3870

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !3871

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3864
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3872
  call void @llvm.dbg.value(metadata i8* %127, metadata !3729, metadata !DIExpression()), !dbg !3792
  %128 = bitcast i8* %41 to i8**, !dbg !3872
  %129 = load i8*, i8** %128, align 4, !dbg !3872
  call void @llvm.dbg.value(metadata i8* %129, metadata !3742, metadata !DIExpression()), !dbg !3792
  br label %130, !dbg !3873

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !3874
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3875
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3792
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !3876
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3792
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3877
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3792
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3792
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3792
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3792
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !3878
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3729, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %142, metadata !3726, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %141, metadata !3728, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %140, metadata !3731, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %139, metadata !3732, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %138, metadata !3733, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %137, metadata !3737, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %136, metadata !3745, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %135, metadata !3738, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 poison, metadata !3743, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %133, metadata !3742, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %132, metadata !3740, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %131, metadata !3739, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.label(metadata !3791), !dbg !3880
  br i1 %22, label %146, label %144, !dbg !3881

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3882
  store i8* %133, i8** %145, align 4, !dbg !3885
  br label %146, !dbg !3886

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3887
  call void @llvm.dbg.value(metadata i32 %147, metadata !3745, metadata !DIExpression()), !dbg !3792
  %148 = icmp sgt i32 %136, 0, !dbg !3888
  br i1 %148, label %152, label %149, !dbg !3889

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #27, !dbg !3890
  %151 = zext i1 %150 to i32, !dbg !3890
  br label %152, !dbg !3889

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3889
  %154 = icmp eq i32 %153, 0, !dbg !3889
  call void @llvm.dbg.value(metadata i1 %154, metadata !3769, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3891
  call void @llvm.dbg.value(metadata i1 %36, metadata !3772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3891
  %155 = or i1 %36, %154, !dbg !3892
  br i1 %155, label %156, label %190, !dbg !3892

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3893
  %158 = sub i32 %157, %17, !dbg !3893
  %159 = lshr i32 %158, 2, !dbg !3894
  call void @llvm.dbg.value(metadata i32 %159, metadata !3773, metadata !DIExpression()), !dbg !3895
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3896
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !3896
  br i1 %163, label %316, label %164, !dbg !3896

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !3898

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !3899
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3902
  store i8 %166, i8* %167, align 1, !dbg !3903
  %168 = trunc i32 %132 to i8, !dbg !3904
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3905
  store i8 %168, i8* %169, align 1, !dbg !3906
  br i1 %154, label %173, label %170, !dbg !3907

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !3908
  store i8 %171, i8* %167, align 1, !dbg !3908
  %172 = add i32 %131, 1, !dbg !3911
  call void @llvm.dbg.value(metadata i32 %172, metadata !3739, metadata !DIExpression()), !dbg !3792
  br label %185, !dbg !3912

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !3913
  call void @llvm.dbg.value(metadata i32 %174, metadata !3738, metadata !DIExpression()), !dbg !3792
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !3915

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !3916
  call void @llvm.dbg.value(metadata i32 %177, metadata !3726, metadata !DIExpression()), !dbg !3792
  br label %185, !dbg !3919

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !3920

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !3921
  call void @llvm.dbg.value(metadata i32 %180, metadata !3726, metadata !DIExpression()), !dbg !3792
  br label %185, !dbg !3924

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #28, !dbg !3925
  %183 = add i32 %142, 2, !dbg !3927
  %184 = add i32 %183, %182, !dbg !3928
  call void @llvm.dbg.value(metadata i32 %184, metadata !3726, metadata !DIExpression()), !dbg !3792
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !3792
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !3792
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !3792
  call void @llvm.dbg.value(metadata i32 %188, metadata !3726, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %187, metadata !3738, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %186, metadata !3739, metadata !DIExpression()), !dbg !3792
  %189 = add nuw nsw i32 %137, 1, !dbg !3929
  call void @llvm.dbg.value(metadata i32 undef, metadata !3726, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 undef, metadata !3737, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 undef, metadata !3738, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 undef, metadata !3739, metadata !DIExpression()), !dbg !3792
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !3874
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !3876
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !3877
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !3878
  call void @llvm.dbg.value(metadata i32 %194, metadata !3726, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %193, metadata !3737, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %192, metadata !3738, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %191, metadata !3739, metadata !DIExpression()), !dbg !3792
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3930
  call void @llvm.dbg.value(metadata i8* %195, metadata !3731, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %143, metadata !3729, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %141, metadata !3728, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %139, metadata !3732, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %138, metadata !3733, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 poison, metadata !3746, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 poison, metadata !3743, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %132, metadata !3740, metadata !DIExpression()), !dbg !3792
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3824
  call void @llvm.dbg.value(metadata i8* %196, metadata !3728, metadata !DIExpression()), !dbg !3792
  %197 = load i8, i8* %196, align 1, !dbg !3826
  %198 = icmp eq i8 %197, 0, !dbg !3827
  br i1 %198, label %223, label %63, !dbg !3828

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !3931

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3932
  call void @llvm.dbg.value(metadata i8* %201, metadata !3729, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 undef, metadata !3776, metadata !DIExpression()), !dbg !3933
  br i1 %22, label %216, label %202, !dbg !3934

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !3932
  %204 = load i32, i32* %203, align 4, !dbg !3932
  call void @llvm.dbg.value(metadata i32 %204, metadata !3776, metadata !DIExpression()), !dbg !3933
  %205 = inttoptr i32 %118 to i32*, !dbg !3935
  store i32 %204, i32* %205, align 4, !dbg !3938
  br label %216, !dbg !3939

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !3940
  %208 = add i32 %207, 7, !dbg !3940
  %209 = and i32 %208, -8, !dbg !3940
  %210 = inttoptr i32 %209 to i8*, !dbg !3940
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !3940
  call void @llvm.dbg.value(metadata i8* %211, metadata !3729, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i64 undef, metadata !3782, metadata !DIExpression()), !dbg !3941
  br i1 %22, label %216, label %212, !dbg !3942

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !3940
  %214 = load i64, i64* %213, align 8, !dbg !3940
  call void @llvm.dbg.value(metadata i64 %214, metadata !3782, metadata !DIExpression()), !dbg !3941
  %215 = inttoptr i32 %118 to i64*, !dbg !3943
  store i64 %214, i64* %215, align 8, !dbg !3948
  br label %216, !dbg !3949

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !3950
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !3950
  call void @llvm.dbg.value(metadata i8* %218, metadata !3729, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %40, metadata !3728, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %219, metadata !3731, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %113, metadata !3732, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %112, metadata !3733, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 poison, metadata !3746, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 poison, metadata !3743, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %72, metadata !3740, metadata !DIExpression()), !dbg !3792
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3824
  call void @llvm.dbg.value(metadata i8* %220, metadata !3728, metadata !DIExpression()), !dbg !3792
  %221 = load i8, i8* %220, align 1, !dbg !3826
  %222 = icmp eq i8 %221, 0, !dbg !3827
  br i1 %222, label %223, label %38, !dbg !3828

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !3951
  %225 = ptrtoint i8* %224 to i32, !dbg !3952
  %226 = sub i32 %225, %17, !dbg !3952
  %227 = lshr i32 %226, 2, !dbg !3954
  %228 = icmp ugt i32 %226, 1023, !dbg !3955
  br i1 %228, label %316, label %229, !dbg !3956

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !3957

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !3958
  %232 = add i32 %231, %226, !dbg !3961
  br label %316, !dbg !3962

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !3963
  store i8 %234, i8* %0, align 1, !dbg !3964
  %235 = trunc i32 %192 to i8, !dbg !3965
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3967
  store i8 %236, i8* %238, align 1, !dbg !3969
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3970
  store i8 %237, i8* %239, align 1, !dbg !3971
  %240 = trunc i32 %191 to i8, !dbg !3972
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3973
  store i8 %240, i8* %241, align 1, !dbg !3974
  %242 = icmp eq i32 %191, 0, !dbg !3975
  %243 = xor i1 %242, true, !dbg !3976
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !3976
  call void @llvm.dbg.value(metadata i8* %224, metadata !3731, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 0, metadata !3741, metadata !DIExpression()), !dbg !3792
  br i1 %245, label %246, label %265, !dbg !3976

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !3977

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !3731, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %250, metadata !3741, metadata !DIExpression()), !dbg !3792
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !3978
  %252 = load i8, i8* %251, align 1, !dbg !3978
  %253 = icmp sgt i8 %252, -1, !dbg !3980
  br i1 %253, label %261, label %254, !dbg !3981

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !3785, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3982
  %255 = ptrtoint i8* %249 to i32, !dbg !3983
  %256 = add i32 %247, %255, !dbg !3985
  %257 = icmp ugt i32 %256, %194, !dbg !3986
  br i1 %257, label %316, label %258, !dbg !3987

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !3988
  call void @llvm.dbg.value(metadata i8 %259, metadata !3785, metadata !DIExpression()), !dbg !3982
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !3989
  call void @llvm.dbg.value(metadata i8* %260, metadata !3731, metadata !DIExpression()), !dbg !3792
  store i8 %259, i8* %249, align 1, !dbg !3990
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !3930
  call void @llvm.dbg.value(metadata i8* %262, metadata !3731, metadata !DIExpression()), !dbg !3792
  %263 = add nuw i32 %250, 1, !dbg !3991
  call void @llvm.dbg.value(metadata i32 %263, metadata !3741, metadata !DIExpression()), !dbg !3792
  %264 = icmp eq i32 %263, %193, !dbg !3992
  br i1 %264, label %265, label %248, !dbg !3977, !llvm.loop !3993

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !3930
  call void @llvm.dbg.value(metadata i8* %266, metadata !3731, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 0, metadata !3741, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %133, metadata !3742, metadata !DIExpression()), !dbg !3792
  %267 = icmp eq i32 %193, 0, !dbg !3995
  br i1 %267, label %312, label %268, !dbg !3998

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !3998

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !3731, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %272, metadata !3742, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %273, metadata !3741, metadata !DIExpression()), !dbg !3792
  br i1 %242, label %278, label %274, !dbg !3999

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4002
  %276 = load i8, i8* %275, align 1, !dbg !4002
  %277 = icmp sgt i8 %276, -1, !dbg !4003
  br i1 %277, label %278, label %307, !dbg !4004

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4005

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !3732, metadata !DIExpression()), !dbg !3792
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4006
  %281 = load i8, i8* %280, align 1, !dbg !4006
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4009
  call void @llvm.dbg.value(metadata i8* %282, metadata !3731, metadata !DIExpression()), !dbg !3792
  store i8 %281, i8* %271, align 1, !dbg !4010
  br label %293, !dbg !4011

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4012
  %285 = load i8, i8* %284, align 1, !dbg !4012
  %286 = zext i8 %285 to i32, !dbg !4012
  %287 = shl nuw nsw i32 %286, 2, !dbg !4014
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4015
  %289 = bitcast i8* %288 to i8**, !dbg !4016
  %290 = load i8*, i8** %289, align 4, !dbg !4016
  call void @llvm.dbg.value(metadata i8* %290, metadata !3742, metadata !DIExpression()), !dbg !3792
  store i8* null, i8** %289, align 4, !dbg !4017
  %291 = tail call i32 @strlen(i8* noundef %290) #28, !dbg !4018
  %292 = add i32 %291, 1, !dbg !4019
  call void @llvm.dbg.value(metadata i32 %292, metadata !3732, metadata !DIExpression()), !dbg !3792
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !3792
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4020
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !3792
  call void @llvm.dbg.value(metadata i8* %296, metadata !3731, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %295, metadata !3732, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %294, metadata !3742, metadata !DIExpression()), !dbg !3792
  %297 = ptrtoint i8* %296 to i32, !dbg !4021
  %298 = add i32 %269, %295, !dbg !4023
  %299 = add i32 %298, %297, !dbg !4024
  %300 = icmp ugt i32 %299, %194, !dbg !4025
  br i1 %300, label %316, label %301, !dbg !4026

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4027
  %303 = load i8, i8* %302, align 1, !dbg !4027
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4028
  call void @llvm.dbg.value(metadata i8* %304, metadata !3731, metadata !DIExpression()), !dbg !3792
  store i8 %303, i8* %296, align 1, !dbg !4029
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #28, !dbg !4030
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4031
  call void @llvm.dbg.value(metadata i8* %306, metadata !3731, metadata !DIExpression()), !dbg !3792
  br label %307, !dbg !4032

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4033
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !3792
  call void @llvm.dbg.value(metadata i8* %309, metadata !3731, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8* %308, metadata !3742, metadata !DIExpression()), !dbg !3792
  %310 = add nuw i32 %273, 1, !dbg !4034
  call void @llvm.dbg.value(metadata i32 %310, metadata !3741, metadata !DIExpression()), !dbg !3792
  %311 = icmp eq i32 %310, %193, !dbg !3995
  br i1 %311, label %312, label %270, !dbg !3998, !llvm.loop !4035

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !3930
  %314 = ptrtoint i8* %313 to i32, !dbg !4037
  %315 = sub i32 %314, %17, !dbg !4037
  br label %316, !dbg !4038

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !3792
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4039
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4039
  ret i32 %317, !dbg !4039
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4040 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4044, metadata !DIExpression()), !dbg !4045
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #27, !dbg !4046
  ret i1 %2, !dbg !4047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4048 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4053, metadata !DIExpression()), !dbg !4054
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4055
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4056
  %4 = and i1 %2, %3, !dbg !4056
  ret i1 %4, !dbg !4057
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4058 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4062, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i32 %1, metadata !4063, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i32 %2, metadata !4064, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i8* %3, metadata !4065, metadata !DIExpression()), !dbg !4068
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4069
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4069
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4066, metadata !DIExpression()), !dbg !4070
  call void @llvm.va_start(i8* nonnull %6), !dbg !4071
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4072
  %8 = load i32, i32* %7, align 4, !dbg !4072
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4072
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #27, !dbg !4072
  call void @llvm.dbg.value(metadata i32 %10, metadata !4067, metadata !DIExpression()), !dbg !4068
  call void @llvm.va_end(i8* nonnull %6), !dbg !4073
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4074
  ret i32 %10, !dbg !4075
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4076 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4088, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4089, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata i8* %2, metadata !4090, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata i8* %3, metadata !4091, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata i8* %3, metadata !4092, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata i8* %3, metadata !4093, metadata !DIExpression()), !dbg !4107
  %5 = icmp eq i8* %3, null, !dbg !4108
  br i1 %5, label %45, label %6, !dbg !4110

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4102, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4107
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4111
  %8 = load i8, i8* %7, align 1, !dbg !4111
  %9 = zext i8 %8 to i32, !dbg !4112
  call void @llvm.dbg.value(metadata i32 %9, metadata !4103, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata i8 undef, metadata !4104, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4107
  call void @llvm.dbg.value(metadata i8 undef, metadata !4105, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4107
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4099, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4107
  call void @llvm.dbg.value(metadata i32 0, metadata !4101, metadata !DIExpression()), !dbg !4107
  %10 = icmp eq i8 %8, 0, !dbg !4113
  br i1 %10, label %39, label %11, !dbg !4116

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4117
  call void @llvm.dbg.value(metadata i8 %12, metadata !4102, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4107
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4099, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4107
  %13 = zext i8 %12 to i32, !dbg !4118
  call void @llvm.dbg.value(metadata i32 %13, metadata !4102, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4107
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4099, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4107
  %14 = shl nuw nsw i32 %13, 2, !dbg !4119
  call void @llvm.dbg.value(metadata i32 %14, metadata !4102, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4099, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4107
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4120
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4099, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4107
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4121
  %17 = load i8, i8* %16, align 1, !dbg !4121
  call void @llvm.dbg.value(metadata i8 %17, metadata !4104, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4107
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4099, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4107
  %18 = zext i8 %17 to i32, !dbg !4122
  call void @llvm.dbg.value(metadata i32 %18, metadata !4104, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4099, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4107
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4123
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4099, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4107
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4124
  %21 = load i8, i8* %20, align 1, !dbg !4124
  call void @llvm.dbg.value(metadata i8 %21, metadata !4105, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4107
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4099, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4107
  %22 = zext i8 %21 to i32, !dbg !4125
  call void @llvm.dbg.value(metadata i32 %22, metadata !4105, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4099, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4107
  %23 = shl nuw nsw i32 %22, 1, !dbg !4126
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4099, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4107
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4127
  call void @llvm.dbg.value(metadata i8* %24, metadata !4099, metadata !DIExpression()), !dbg !4107
  br label %25, !dbg !4116

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4099, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata i32 %27, metadata !4101, metadata !DIExpression()), !dbg !4107
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4128
  call void @llvm.dbg.value(metadata i8* %28, metadata !4099, metadata !DIExpression()), !dbg !4107
  %29 = load i8, i8* %26, align 1, !dbg !4130
  %30 = zext i8 %29 to i32, !dbg !4130
  call void @llvm.dbg.value(metadata i32 %30, metadata !4106, metadata !DIExpression()), !dbg !4107
  %31 = shl nuw nsw i32 %30, 2, !dbg !4131
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4132
  %33 = bitcast i8* %32 to i8**, !dbg !4133
  call void @llvm.dbg.value(metadata i8** %33, metadata !4100, metadata !DIExpression()), !dbg !4107
  store i8* %28, i8** %33, align 4, !dbg !4134
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #28, !dbg !4135
  %35 = add i32 %34, 1, !dbg !4136
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4137
  call void @llvm.dbg.value(metadata i8* %36, metadata !4099, metadata !DIExpression()), !dbg !4107
  %37 = add nuw nsw i32 %27, 1, !dbg !4138
  call void @llvm.dbg.value(metadata i32 %37, metadata !4101, metadata !DIExpression()), !dbg !4107
  %38 = icmp eq i32 %37, %9, !dbg !4113
  br i1 %38, label %39, label %25, !dbg !4116, !llvm.loop !4139

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4141
  call void @llvm.dbg.value(metadata i8* %40, metadata !4092, metadata !DIExpression()), !dbg !4107
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4142
  %42 = bitcast i8* %41 to i8**, !dbg !4142
  %43 = load i8*, i8** %42, align 1, !dbg !4142
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #27, !dbg !4143
  br label %45, !dbg !4144

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4107
  ret i32 %46, !dbg !4145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4146 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4150, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4151, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i8* %2, metadata !4152, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i8* %3, metadata !4153, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i8* %4, metadata !4154, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i8* %4, metadata !4155, metadata !DIExpression()), !dbg !4160
  %6 = ptrtoint i8* %4 to i32, !dbg !4161
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4161
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #28, !dbg !4161
  ret i32 %8, !dbg !4162
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4163 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4167, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i32 %1, metadata !4168, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i8 0, metadata !4170, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i32 0, metadata !4171, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i8 poison, metadata !4170, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i8* %0, metadata !4167, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4172
  %3 = load i8, i8* %0, align 1, !dbg !4173
  call void @llvm.dbg.value(metadata i8 %3, metadata !4169, metadata !DIExpression()), !dbg !4172
  %4 = icmp eq i8 %3, 0, !dbg !4174
  br i1 %4, label %29, label %5, !dbg !4175

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4176
  call void @llvm.dbg.value(metadata i32 %8, metadata !4171, metadata !DIExpression()), !dbg !4172
  br i1 %9, label %11, label %22, !dbg !4177

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4179
  br i1 %12, label %13, label %17, !dbg !4183

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4184
  br i1 %14, label %29, label %15, !dbg !4187

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4188
  br i1 %16, label %29, label %22, !dbg !4190

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4191
  %19 = xor i1 %18, true, !dbg !4193
  %20 = zext i1 %18 to i32, !dbg !4193
  %21 = add nsw i32 %8, %20, !dbg !4193
  br label %22, !dbg !4193

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4172
  call void @llvm.dbg.value(metadata i32 %24, metadata !4171, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i8 poison, metadata !4170, metadata !DIExpression()), !dbg !4172
  %25 = icmp eq i8 %6, 37, !dbg !4194
  %26 = xor i1 %25, %23, !dbg !4196
  call void @llvm.dbg.value(metadata i8* %10, metadata !4167, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i8* %10, metadata !4167, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4172
  %27 = load i8, i8* %10, align 1, !dbg !4173
  call void @llvm.dbg.value(metadata i8 %27, metadata !4169, metadata !DIExpression()), !dbg !4172
  %28 = icmp eq i8 %27, 0, !dbg !4174
  br i1 %28, label %29, label %5, !dbg !4175, !llvm.loop !4197

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4172
  ret i1 %30, !dbg !4199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4200 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4204, metadata !DIExpression()), !dbg !4205
  %2 = add i8 %0, -64, !dbg !4206
  %3 = icmp ult i8 %2, 59, !dbg !4206
  ret i1 %3, !dbg !4207
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4208 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4216, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 %1, metadata !4217, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4218, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %3, metadata !4219, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 %4, metadata !4220, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i16* %5, metadata !4221, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 %6, metadata !4222, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %0, metadata !4223, metadata !DIExpression()), !dbg !4285
  %11 = bitcast i8* %0 to i32*, !dbg !4286
  call void @llvm.dbg.value(metadata i32* %11, metadata !4224, metadata !DIExpression()), !dbg !4285
  %12 = and i32 %4, 8, !dbg !4287
  %13 = icmp eq i32 %12, 0, !dbg !4288
  call void @llvm.dbg.value(metadata i1 %13, metadata !4228, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %0, metadata !4231, metadata !DIExpression()), !dbg !4285
  %14 = icmp eq i32 %1, 0, !dbg !4289
  br i1 %14, label %15, label %17, !dbg !4290

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #27, !dbg !4291
  br label %17, !dbg !4290

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4290
  call void @llvm.dbg.value(metadata i32 %18, metadata !4217, metadata !DIExpression()), !dbg !4285
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4292
  %20 = load i8, i8* %19, align 1, !dbg !4292
  %21 = zext i8 %20 to i32, !dbg !4293
  call void @llvm.dbg.value(metadata i32 %21, metadata !4226, metadata !DIExpression()), !dbg !4285
  %22 = icmp ne i8 %20, 0, !dbg !4294
  %23 = and i32 %4, 1, !dbg !4295
  %24 = icmp ne i32 %23, 0, !dbg !4295
  %25 = and i1 %24, %22, !dbg !4295
  call void @llvm.dbg.value(metadata i1 %25, metadata !4230, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4285
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4296
  %27 = load i8, i8* %26, align 1, !dbg !4296
  %28 = zext i8 %27 to i32, !dbg !4297
  call void @llvm.dbg.value(metadata i32 %28, metadata !4227, metadata !DIExpression()), !dbg !4285
  %29 = icmp ne i8 %27, 0, !dbg !4298
  %30 = and i32 %4, 2, !dbg !4299
  %31 = icmp ne i32 %30, 0, !dbg !4299
  %32 = and i1 %31, %29, !dbg !4299
  call void @llvm.dbg.value(metadata i1 %32, metadata !4229, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4285
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4300
  br i1 %33, label %38, label %34, !dbg !4300

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4302
  br i1 %35, label %267, label %36, !dbg !4305

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #28, !dbg !4306
  br label %267, !dbg !4308

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4309
  %40 = zext i8 %39 to i32, !dbg !4310
  %41 = shl nuw nsw i32 %40, 2, !dbg !4311
  call void @llvm.dbg.value(metadata i32 %41, metadata !4225, metadata !DIExpression()), !dbg !4285
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4312
  %43 = bitcast i8* %42 to i8**, !dbg !4313
  %44 = load i8*, i8** %43, align 4, !dbg !4313
  call void @llvm.dbg.value(metadata i8* %44, metadata !4234, metadata !DIExpression()), !dbg !4285
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4314
  call void @llvm.dbg.value(metadata i8* %45, metadata !4235, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 0, metadata !4236, metadata !DIExpression()), !dbg !4285
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4315
  br i1 %46, label %47, label %132, !dbg !4316

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4233, metadata !DIExpression()), !dbg !4285
  br i1 %25, label %48, label %73, !dbg !4317

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4233, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %45, metadata !4235, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 0, metadata !4236, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 0, metadata !4237, metadata !DIExpression()), !dbg !4318
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4319

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4233, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %52, metadata !4235, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 %53, metadata !4236, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 %54, metadata !4237, metadata !DIExpression()), !dbg !4318
  %55 = load i8, i8* %52, align 1, !dbg !4320
  %56 = zext i8 %55 to i32, !dbg !4321
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4321
  %58 = bitcast i32* %57 to i8**, !dbg !4322
  %59 = load i8*, i8** %58, align 4, !dbg !4322
  call void @llvm.dbg.value(metadata i8* %59, metadata !4243, metadata !DIExpression()), !dbg !4323
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #27, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %60, metadata !4246, metadata !DIExpression()), !dbg !4323
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4325
  br i1 %62, label %63, label %67, !dbg !4325

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4327
  %65 = add nuw i32 %53, 1, !dbg !4329
  call void @llvm.dbg.value(metadata i32 %65, metadata !4236, metadata !DIExpression()), !dbg !4285
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4330
  store i16 %64, i16* %66, align 2, !dbg !4331
  br label %67, !dbg !4332

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4285
  call void @llvm.dbg.value(metadata i32 %68, metadata !4236, metadata !DIExpression()), !dbg !4285
  %69 = add nsw i32 %60, %51, !dbg !4333
  call void @llvm.dbg.value(metadata i32 %69, metadata !4233, metadata !DIExpression()), !dbg !4285
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4334
  call void @llvm.dbg.value(metadata i8* %70, metadata !4235, metadata !DIExpression()), !dbg !4285
  %71 = add nuw nsw i32 %54, 1, !dbg !4335
  call void @llvm.dbg.value(metadata i32 %71, metadata !4237, metadata !DIExpression()), !dbg !4318
  %72 = icmp eq i32 %71, %21, !dbg !4336
  br i1 %72, label %79, label %50, !dbg !4319, !llvm.loop !4337

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4339
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4339
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4339
  br label %79, !dbg !4339

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4342
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4285
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4343
  call void @llvm.dbg.value(metadata i1 undef, metadata !4247, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4344
  call void @llvm.dbg.value(metadata i32 0, metadata !4248, metadata !DIExpression()), !dbg !4345
  call void @llvm.dbg.value(metadata i32 %82, metadata !4233, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %81, metadata !4235, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 %80, metadata !4236, metadata !DIExpression()), !dbg !4285
  %83 = icmp eq i8 %27, 0, !dbg !4346
  br i1 %83, label %267, label %84, !dbg !4347

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4348
  %86 = icmp eq i32 %85, 0, !dbg !4349
  call void @llvm.dbg.value(metadata i1 %86, metadata !4247, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4344
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4347

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4233, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %93, metadata !4235, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 %94, metadata !4236, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 %95, metadata !4248, metadata !DIExpression()), !dbg !4345
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4350
  call void @llvm.dbg.value(metadata i8* %96, metadata !4235, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8 undef, metadata !4250, metadata !DIExpression()), !dbg !4351
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4352
  call void @llvm.dbg.value(metadata i8* %97, metadata !4235, metadata !DIExpression()), !dbg !4285
  %98 = load i8, i8* %96, align 1, !dbg !4353
  call void @llvm.dbg.value(metadata i8 %98, metadata !4253, metadata !DIExpression()), !dbg !4351
  %99 = zext i8 %98 to i32, !dbg !4354
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4354
  %101 = bitcast i32* %100 to i8**, !dbg !4355
  %102 = load i8*, i8** %101, align 4, !dbg !4355
  call void @llvm.dbg.value(metadata i8* %102, metadata !4254, metadata !DIExpression()), !dbg !4351
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #27, !dbg !4356
  call void @llvm.dbg.value(metadata i1 %103, metadata !4255, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4351
  br i1 %13, label %110, label %104, !dbg !4357

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4359
  call void @llvm.dbg.value(metadata i8 %105, metadata !4250, metadata !DIExpression()), !dbg !4351
  %106 = zext i8 %105 to i32, !dbg !4360
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #27, !dbg !4361
  br i1 %107, label %108, label %110, !dbg !4362

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #28, !dbg !4363
  %109 = add nsw i32 %92, -2, !dbg !4369
  call void @llvm.dbg.value(metadata i32 %109, metadata !4233, metadata !DIExpression()), !dbg !4285
  br label %127, !dbg !4370

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4371

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4372

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4374
  call void @llvm.dbg.value(metadata i32 %113, metadata !4233, metadata !DIExpression()), !dbg !4285
  br label %127, !dbg !4377

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4378

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4281), !dbg !4379
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #27, !dbg !4380
  call void @llvm.dbg.value(metadata i32 %116, metadata !4256, metadata !DIExpression()), !dbg !4351
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4381
  br i1 %118, label %119, label %123, !dbg !4381

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4383
  %121 = add nuw i32 %94, 1, !dbg !4385
  call void @llvm.dbg.value(metadata i32 %121, metadata !4236, metadata !DIExpression()), !dbg !4285
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4386
  store i16 %120, i16* %122, align 2, !dbg !4387
  br label %123, !dbg !4388

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4285
  call void @llvm.dbg.value(metadata i32 %124, metadata !4236, metadata !DIExpression()), !dbg !4285
  %125 = add i32 %92, -1, !dbg !4389
  %126 = add i32 %125, %116, !dbg !4390
  call void @llvm.dbg.value(metadata i32 %126, metadata !4233, metadata !DIExpression()), !dbg !4285
  br label %127, !dbg !4391

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4285
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4351
  call void @llvm.dbg.value(metadata i32 %129, metadata !4233, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 %128, metadata !4236, metadata !DIExpression()), !dbg !4285
  %130 = add nuw nsw i32 %95, 1, !dbg !4392
  call void @llvm.dbg.value(metadata i8* %97, metadata !4235, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 %130, metadata !4248, metadata !DIExpression()), !dbg !4345
  %131 = icmp eq i32 %130, %28, !dbg !4346
  br i1 %131, label %267, label %91, !dbg !4347, !llvm.loop !4393

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4258, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4259, metadata !DIExpression()), !dbg !4396
  br i1 %25, label %133, label %135, !dbg !4397

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4260, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8 0, metadata !4261, metadata !DIExpression()), !dbg !4285
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4398
  call void @llvm.dbg.value(metadata i8* %134, metadata !4262, metadata !DIExpression()), !dbg !4285
  br label %140, !dbg !4401

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4402
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4402

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4262, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8 undef, metadata !4261, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8 0, metadata !4260, metadata !DIExpression()), !dbg !4285
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #28, !dbg !4404
  br label %145, !dbg !4407

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4408
  call void @llvm.dbg.value(metadata i8* %148, metadata !4235, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 0, metadata !4264, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.value(metadata i8 %146, metadata !4261, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8 %147, metadata !4260, metadata !DIExpression()), !dbg !4285
  %149 = icmp eq i8 %27, 0, !dbg !4410
  br i1 %149, label %150, label %152, !dbg !4411

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4412
  br label %157, !dbg !4411

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4411

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4412
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4413
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4414
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4285
  call void @llvm.dbg.value(metadata i8 undef, metadata !4257, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4285
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4415
  %163 = load i8, i8* %162, align 1, !dbg !4415
  %164 = zext i8 %159 to i32, !dbg !4416
  %165 = add i8 %163, %159, !dbg !4417
  call void @llvm.dbg.value(metadata i8 %165, metadata !4257, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4285
  %166 = icmp eq i32 %30, 0, !dbg !4418
  %167 = lshr i8 %160, 1, !dbg !4419
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4419
  call void @llvm.dbg.value(metadata i8 %168, metadata !4257, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4285
  %169 = icmp eq i32 %23, 0, !dbg !4420
  %170 = icmp eq i32 %158, 0, !dbg !4412
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4412
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4412
  call void @llvm.dbg.value(metadata i8 %172, metadata !4257, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4285
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4272, metadata !DIExpression()), !dbg !4421
  %173 = load i32, i32* %11, align 1, !dbg !4422
  store i8 %165, i8* %162, align 1, !dbg !4423
  store i8 %172, i8* %19, align 1, !dbg !4423
  store i8 %168, i8* %26, align 1, !dbg !4423
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #28, !dbg !4424
  call void @llvm.dbg.value(metadata i32 %174, metadata !4263, metadata !DIExpression()), !dbg !4285
  %175 = icmp slt i32 %174, 0, !dbg !4425
  br i1 %175, label %267, label %220, !dbg !4427

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4235, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 %178, metadata !4264, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.value(metadata i8 %179, metadata !4261, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8 %180, metadata !4260, metadata !DIExpression()), !dbg !4285
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4428
  call void @llvm.dbg.value(metadata i8* %181, metadata !4235, metadata !DIExpression()), !dbg !4285
  %182 = load i8, i8* %177, align 1, !dbg !4429
  call void @llvm.dbg.value(metadata i8 %182, metadata !4266, metadata !DIExpression()), !dbg !4430
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4431
  call void @llvm.dbg.value(metadata i8* %183, metadata !4235, metadata !DIExpression()), !dbg !4285
  %184 = load i8, i8* %181, align 1, !dbg !4432
  call void @llvm.dbg.value(metadata i8 %184, metadata !4269, metadata !DIExpression()), !dbg !4430
  %185 = zext i8 %184 to i32, !dbg !4433
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4433
  %187 = bitcast i32* %186 to i8**, !dbg !4434
  %188 = load i8*, i8** %187, align 4, !dbg !4434
  call void @llvm.dbg.value(metadata i8* %188, metadata !4270, metadata !DIExpression()), !dbg !4430
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #27, !dbg !4435
  call void @llvm.dbg.value(metadata i1 %189, metadata !4271, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4430
  br i1 %13, label %193, label %190, !dbg !4436

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4438
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #27, !dbg !4439
  br i1 %192, label %215, label %193, !dbg !4440

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4441

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4442

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4445
  call void @llvm.dbg.value(metadata i8 %196, metadata !4260, metadata !DIExpression()), !dbg !4285
  br label %208, !dbg !4448

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4449

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4450
  call void @llvm.dbg.value(metadata i8 %199, metadata !4261, metadata !DIExpression()), !dbg !4285
  br label %208, !dbg !4453

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4454

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4456
  call void @llvm.dbg.value(metadata i8 %202, metadata !4260, metadata !DIExpression()), !dbg !4285
  br label %208, !dbg !4459

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4460
  call void @llvm.dbg.value(metadata i8 %204, metadata !4261, metadata !DIExpression()), !dbg !4285
  %205 = zext i8 %179 to i32, !dbg !4462
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4462
  store i8 %182, i8* %206, align 1, !dbg !4463
  %207 = add i8 %179, 2, !dbg !4464
  call void @llvm.dbg.value(metadata i8 %207, metadata !4261, metadata !DIExpression()), !dbg !4285
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4465
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4465
  store i8 %184, i8* %214, align 1, !dbg !4465
  br label %215, !dbg !4466

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4285
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4414
  call void @llvm.dbg.value(metadata i8 %217, metadata !4261, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8 %216, metadata !4260, metadata !DIExpression()), !dbg !4285
  %218 = add nuw nsw i32 %178, 1, !dbg !4466
  call void @llvm.dbg.value(metadata i8* %183, metadata !4235, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 %218, metadata !4264, metadata !DIExpression()), !dbg !4409
  %219 = icmp eq i32 %218, %28, !dbg !4410
  br i1 %219, label %157, label %176, !dbg !4411, !llvm.loop !4467

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4419
  call void @llvm.dbg.value(metadata i32 %174, metadata !4233, metadata !DIExpression()), !dbg !4285
  store i32 %173, i32* %11, align 1, !dbg !4469
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4470
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #28, !dbg !4471
  call void @llvm.dbg.value(metadata i32 %223, metadata !4263, metadata !DIExpression()), !dbg !4285
  %224 = icmp slt i32 %223, 0, !dbg !4472
  br i1 %224, label %267, label %225, !dbg !4474

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4233, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4285
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4475
  %228 = add nuw nsw i32 %41, %21, !dbg !4475
  %229 = sub i32 %227, %228, !dbg !4475
  call void @llvm.dbg.value(metadata i32 %229, metadata !4273, metadata !DIExpression()), !dbg !4285
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #28, !dbg !4476
  call void @llvm.dbg.value(metadata i32 %230, metadata !4263, metadata !DIExpression()), !dbg !4285
  %231 = icmp slt i32 %230, 0, !dbg !4477
  br i1 %231, label %267, label %232, !dbg !4479

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4480
  call void @llvm.dbg.value(metadata i32 %233, metadata !4233, metadata !DIExpression()), !dbg !4285
  %234 = add nuw nsw i32 %233, %230, !dbg !4481
  call void @llvm.dbg.value(metadata i32 %234, metadata !4233, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 0, metadata !4274, metadata !DIExpression()), !dbg !4482
  %235 = icmp eq i8 %159, 0, !dbg !4483
  br i1 %235, label %264, label %236, !dbg !4484

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4484

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4274, metadata !DIExpression()), !dbg !4482
  call void @llvm.dbg.value(metadata i32 %240, metadata !4233, metadata !DIExpression()), !dbg !4285
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4485
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4486
  %242 = load i8, i8* %241, align 1, !dbg !4486
  call void @llvm.dbg.value(metadata i8 %242, metadata !4276, metadata !DIExpression()), !dbg !4487
  store i8 %242, i8* %10, align 1, !dbg !4488
  %243 = zext i8 %242 to i32, !dbg !4489
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4489
  %245 = bitcast i32* %244 to i8**, !dbg !4490
  %246 = load i8*, i8** %245, align 4, !dbg !4490
  call void @llvm.dbg.value(metadata i8* %246, metadata !4279, metadata !DIExpression()), !dbg !4487
  br i1 %237, label %250, label %247, !dbg !4491

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4492
  %249 = load i16, i16* %248, align 2, !dbg !4492
  br label %250, !dbg !4491

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4491
  call void @llvm.dbg.value(metadata i32 undef, metadata !4280, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %10, metadata !4276, metadata !DIExpression(DW_OP_deref)), !dbg !4487
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #28, !dbg !4493
  call void @llvm.dbg.value(metadata i32 %252, metadata !4263, metadata !DIExpression()), !dbg !4285
  %253 = icmp slt i32 %252, 0, !dbg !4494
  br i1 %253, label %257, label %254, !dbg !4496

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4280, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4233, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4285
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #27, !dbg !4497
  call void @llvm.dbg.value(metadata i32 %255, metadata !4263, metadata !DIExpression()), !dbg !4285
  %256 = icmp slt i32 %255, 0, !dbg !4498
  br i1 %256, label %257, label %259, !dbg !4500

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4233, metadata !DIExpression()), !dbg !4285
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4501
  call void @llvm.dbg.value(metadata i32 undef, metadata !4233, metadata !DIExpression()), !dbg !4285
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4502
  call void @llvm.dbg.value(metadata i32 %260, metadata !4233, metadata !DIExpression()), !dbg !4285
  %261 = add nsw i32 %260, %255, !dbg !4503
  call void @llvm.dbg.value(metadata i32 %261, metadata !4233, metadata !DIExpression()), !dbg !4285
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4501
  %262 = add nuw nsw i32 %239, 1, !dbg !4504
  call void @llvm.dbg.value(metadata i32 %262, metadata !4274, metadata !DIExpression()), !dbg !4482
  %263 = icmp eq i32 %262, %164, !dbg !4483
  br i1 %263, label %264, label %238, !dbg !4484, !llvm.loop !4505

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4481
  call void @llvm.dbg.value(metadata i32 %265, metadata !4233, metadata !DIExpression()), !dbg !4285
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #28, !dbg !4507
  br label %267, !dbg !4508

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4285
  ret i32 %268, !dbg !4509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4510 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4514, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i8* %0, metadata !4515, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i8* %0, metadata !4516, metadata !DIExpression()), !dbg !4522
  %2 = load i8, i8* %0, align 1, !dbg !4523
  %3 = zext i8 %2 to i32, !dbg !4523
  %4 = shl nuw nsw i32 %3, 2, !dbg !4524
  call void @llvm.dbg.value(metadata i32 %4, metadata !4517, metadata !DIExpression()), !dbg !4522
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4525
  %6 = load i8, i8* %5, align 1, !dbg !4525
  %7 = zext i8 %6 to i32, !dbg !4525
  call void @llvm.dbg.value(metadata i32 %7, metadata !4518, metadata !DIExpression()), !dbg !4522
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4526
  %9 = load i8, i8* %8, align 1, !dbg !4526
  %10 = zext i8 %9 to i32, !dbg !4526
  call void @llvm.dbg.value(metadata i32 %10, metadata !4519, metadata !DIExpression()), !dbg !4522
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4527
  call void @llvm.dbg.value(metadata i8* %11, metadata !4515, metadata !DIExpression()), !dbg !4522
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4528
  call void @llvm.dbg.value(metadata i8* %12, metadata !4515, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i32 0, metadata !4520, metadata !DIExpression()), !dbg !4529
  %13 = icmp eq i8 %6, 0, !dbg !4530
  br i1 %13, label %14, label %19, !dbg !4532

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4522
  %16 = ptrtoint i8* %15 to i32, !dbg !4533
  %17 = ptrtoint i8* %0 to i32, !dbg !4533
  %18 = sub i32 %16, %17, !dbg !4533
  ret i32 %18, !dbg !4534

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4520, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i8* %21, metadata !4515, metadata !DIExpression()), !dbg !4522
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4535
  call void @llvm.dbg.value(metadata i8* %22, metadata !4515, metadata !DIExpression()), !dbg !4522
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #28, !dbg !4537
  %24 = add i32 %23, 1, !dbg !4538
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4539
  call void @llvm.dbg.value(metadata i8* %25, metadata !4515, metadata !DIExpression()), !dbg !4522
  %26 = add nuw nsw i32 %20, 1, !dbg !4540
  call void @llvm.dbg.value(metadata i32 %26, metadata !4520, metadata !DIExpression()), !dbg !4529
  %27 = icmp eq i32 %26, %7, !dbg !4530
  br i1 %27, label %14, label %19, !dbg !4532, !llvm.loop !4541
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4543 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4547, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i8* %1, metadata !4548, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i8* %2, metadata !4549, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i16 %3, metadata !4550, metadata !DIExpression()), !dbg !4551
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4552
  br i1 %5, label %6, label %9, !dbg !4554

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #28, !dbg !4555
  %8 = add i32 %7, 1, !dbg !4557
  br label %20, !dbg !4558

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4559
  br i1 %10, label %13, label %11, !dbg !4560

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4560
  br label %16, !dbg !4560

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #28, !dbg !4561
  %15 = add i32 %14, 1, !dbg !4562
  br label %16, !dbg !4560

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4560
  %18 = and i32 %17, 65535, !dbg !4563
  call void @llvm.dbg.value(metadata i32 %17, metadata !4550, metadata !DIExpression()), !dbg !4551
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #28, !dbg !4564
  br label %20, !dbg !4565

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4551
  ret i32 %21, !dbg !4566
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4569, metadata !DIExpression()), !dbg !4570
  ret i32 0, !dbg !4571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !4572 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4576, metadata !DIExpression()), !dbg !4577
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4578
  ret void, !dbg !4579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #3 !dbg !4580 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4583
  ret i8* %1, !dbg !4584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4585 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4596, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8* %0, metadata !4595, metadata !DIExpression()), !dbg !4605
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !4606
  ret void, !dbg !4608
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4613, metadata !DIExpression()), !dbg !4615
  call void @llvm.dbg.value(metadata i8* %1, metadata !4614, metadata !DIExpression()), !dbg !4615
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4616
  %4 = tail call i32 %3(i32 noundef %0) #28, !dbg !4616
  ret i32 %4, !dbg !4617
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4618 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4625, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4622, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i8* %1, metadata !4623, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i8* %2, metadata !4624, metadata !DIExpression()), !dbg !4626
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #28, !dbg !4627
  ret void, !dbg !4628
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4629 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4633, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %1, metadata !4634, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 0, metadata !4635, metadata !DIExpression()), !dbg !4636
  %3 = icmp eq i32 %1, 0, !dbg !4637
  br i1 %3, label %13, label %4, !dbg !4640

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4635, metadata !DIExpression()), !dbg !4636
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4641
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4643
  %8 = load i8, i8* %7, align 1, !dbg !4643
  %9 = zext i8 %8 to i32, !dbg !4643
  %10 = tail call i32 %6(i32 noundef %9) #28, !dbg !4641
  %11 = add nuw i32 %5, 1, !dbg !4644
  call void @llvm.dbg.value(metadata i32 %11, metadata !4635, metadata !DIExpression()), !dbg !4636
  %12 = icmp eq i32 %11, %1, !dbg !4637
  br i1 %12, label %13, label %4, !dbg !4640, !llvm.loop !4645

13:                                               ; preds = %4, %2
  ret void, !dbg !4647
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4648 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4652, metadata !DIExpression()), !dbg !4654
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4655
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4655
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4653, metadata !DIExpression()), !dbg !4656
  call void @llvm.va_start(i8* nonnull %3), !dbg !4657
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4658
  %5 = load i32, i32* %4, align 4, !dbg !4658
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4658
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !4658
  call void @llvm.va_end(i8* nonnull %3), !dbg !4659
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4660
  ret void, !dbg !4660
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4661 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4665, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 %1, metadata !4666, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i8* %2, metadata !4667, metadata !DIExpression()), !dbg !4670
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4671
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !4671
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4668, metadata !DIExpression()), !dbg !4672
  call void @llvm.va_start(i8* nonnull %5), !dbg !4673
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4674
  %7 = load i32, i32* %6, align 4, !dbg !4674
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4674
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !4674
  call void @llvm.dbg.value(metadata i32 %9, metadata !4669, metadata !DIExpression()), !dbg !4670
  call void @llvm.va_end(i8* nonnull %5), !dbg !4675
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !4676
  ret i32 %9, !dbg !4677
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4678 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4685, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i8* %0, metadata !4682, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i32 %1, metadata !4683, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i8* %2, metadata !4684, metadata !DIExpression()), !dbg !4692
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4693
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #26, !dbg !4693
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4686, metadata !DIExpression()), !dbg !4694
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4695
  store i8* %0, i8** %7, align 4, !dbg !4695
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4695
  store i32 %1, i32* %8, align 4, !dbg !4695
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4695
  store i32 0, i32* %9, align 4, !dbg !4695
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !4696
  %10 = load i32, i32* %9, align 4, !dbg !4697
  %11 = load i32, i32* %8, align 4, !dbg !4699
  %12 = icmp slt i32 %10, %11, !dbg !4700
  br i1 %12, label %13, label %15, !dbg !4701

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4702
  store i8 0, i8* %14, align 1, !dbg !4704
  br label %15, !dbg !4705

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #26, !dbg !4706
  ret i32 %10, !dbg !4707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #10 !dbg !4708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4713, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4714, metadata !DIExpression()), !dbg !4715
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4716
  %4 = load i8*, i8** %3, align 4, !dbg !4716
  %5 = icmp eq i8* %4, null, !dbg !4718
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4719
  br i1 %5, label %12, label %8, !dbg !4720

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4721
  %10 = load i32, i32* %9, align 4, !dbg !4721
  %11 = icmp slt i32 %7, %10, !dbg !4722
  br i1 %11, label %15, label %12, !dbg !4723

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4724
  %14 = add nsw i32 %7, 1, !dbg !4726
  store i32 %14, i32* %13, align 4, !dbg !4726
  br label %25, !dbg !4727

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4728
  %17 = icmp eq i32 %7, %16, !dbg !4730
  br i1 %17, label %18, label %21, !dbg !4731

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4732
  store i32 %19, i32* %6, align 4, !dbg !4732
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4734
  store i8 0, i8* %20, align 1, !dbg !4735
  br label %25, !dbg !4736

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4737
  %23 = add nsw i32 %7, 1, !dbg !4739
  store i32 %23, i32* %6, align 4, !dbg !4739
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4740
  store i8 %22, i8* %24, align 1, !dbg !4741
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4742
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #11 !dbg !4743 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4748, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i8* %1, metadata !4749, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i8* %2, metadata !4750, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i8* %3, metadata !4751, metadata !DIExpression()), !dbg !4752
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !4753
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #29, !dbg !4754
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !4755
  unreachable, !dbg !4756
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #12 !dbg !4757 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #29, !dbg !4861
  ret %struct.k_thread* %1, !dbg !4862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4863 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4867, metadata !DIExpression()), !dbg !4868
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !4869, !srcloc !4871
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #28, !dbg !4872
  ret void, !dbg !4873
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #12 !dbg !4874 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !4875, !srcloc !4877
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #28, !dbg !4878
  ret %struct.k_thread* %1, !dbg !4879
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #13 !dbg !4880 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4891, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i8* %1, metadata !4892, metadata !DIExpression()), !dbg !4895
  %3 = icmp eq i8* %1, null, !dbg !4896
  br i1 %3, label %8, label %4, !dbg !4898

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4899
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4899
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4893, metadata !DIExpression()), !dbg !4895
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !4900, !range !4901
  call void @llvm.dbg.value(metadata i32 %7, metadata !4894, metadata !DIExpression()), !dbg !4895
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !4902
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !4903
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !4904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !4905 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4909, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %1, metadata !4910, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %1, metadata !4911, metadata !DIExpression()), !dbg !4913
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4914
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4912, metadata !DIExpression()), !dbg !4913
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4915
  %5 = ptrtoint i8* %4 to i32, !dbg !4916
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4916
  %7 = sub i32 %5, %6, !dbg !4916
  %8 = lshr i32 %7, 3, !dbg !4917
  ret i32 %8, !dbg !4918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #10 !dbg !4919 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4923, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i32 %1, metadata !4924, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i1 %2, metadata !4925, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4928
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4929
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4926, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4927, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4928
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4930
  %6 = bitcast i8* %5 to i16*, !dbg !4930
  %7 = load i16, i16* %6, align 2, !dbg !4930
  %8 = and i16 %7, -2, !dbg !4934
  %9 = zext i1 %2 to i16, !dbg !4934
  %10 = or i16 %8, %9, !dbg !4934
  store i16 %10, i16* %6, align 2, !dbg !4930
  ret void, !dbg !4935
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4936 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4940, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i32 %1, metadata !4941, metadata !DIExpression()), !dbg !4942
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4943
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !4945
  br i1 %4, label %7, label %5, !dbg !4946

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !4947
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4949
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !4950
  br label %7, !dbg !4951

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4952, !range !4954
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !4955
  br i1 %9, label %13, label %10, !dbg !4956

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !4957
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4959, !range !4954
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !4960
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4961
  call void @llvm.dbg.value(metadata i32 %12, metadata !4941, metadata !DIExpression()), !dbg !4942
  br label %13, !dbg !4962

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4941, metadata !DIExpression()), !dbg !4942
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !4963
  ret void, !dbg !4964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !4965 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4969, metadata !DIExpression()), !dbg !4971
  call void @llvm.dbg.value(metadata i32 %1, metadata !4970, metadata !DIExpression()), !dbg !4971
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4972
  %4 = add i32 %3, %1, !dbg !4973
  ret i32 %4, !dbg !4974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !4975 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4979, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i32 %1, metadata !4980, metadata !DIExpression()), !dbg !4981
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !4982
  %4 = and i32 %3, 1, !dbg !4983
  %5 = icmp ne i32 %4, 0, !dbg !4982
  ret i1 %5, !dbg !4984
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4985 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4987, metadata !DIExpression()), !dbg !4992
  call void @llvm.dbg.value(metadata i32 %1, metadata !4988, metadata !DIExpression()), !dbg !4992
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4993, !range !4994
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !4995
  call void @llvm.dbg.value(metadata i32 %4, metadata !4989, metadata !DIExpression()), !dbg !4996
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !4997
  ret void, !dbg !4998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !4999 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5003, metadata !DIExpression()), !dbg !5008
  call void @llvm.dbg.value(metadata i32 %1, metadata !5004, metadata !DIExpression()), !dbg !5008
  call void @llvm.dbg.value(metadata i32 %2, metadata !5005, metadata !DIExpression()), !dbg !5008
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5009
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5010
  %6 = add i32 %5, %4, !dbg !5011
  call void @llvm.dbg.value(metadata i32 %6, metadata !5006, metadata !DIExpression()), !dbg !5008
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5012
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5013
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5014
  ret void, !dbg !5015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !5016 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5018, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i32 %1, metadata !5019, metadata !DIExpression()), !dbg !5020
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !5021
  %4 = sub i32 %1, %3, !dbg !5022
  ret i32 %4, !dbg !5023
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5024 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5026, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i32 %1, metadata !5027, metadata !DIExpression()), !dbg !5031
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5032, !range !4994
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5033
  call void @llvm.dbg.value(metadata i32 %4, metadata !5028, metadata !DIExpression()), !dbg !5034
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5035
  ret void, !dbg !5036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !5037 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5041, metadata !DIExpression()), !dbg !5043
  call void @llvm.dbg.value(metadata i32 %1, metadata !5042, metadata !DIExpression()), !dbg !5043
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5044
  %4 = lshr i32 %3, 1, !dbg !5045
  ret i32 %4, !dbg !5046
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #12 !dbg !5047 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5051, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i32 %1, metadata !5052, metadata !DIExpression()), !dbg !5054
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !5055
  %4 = add i32 %1, 1, !dbg !5056
  %5 = sub i32 %4, %3, !dbg !5057
  call void @llvm.dbg.value(metadata i32 %5, metadata !5053, metadata !DIExpression()), !dbg !5054
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5058, !range !5059
  %7 = sub nsw i32 31, %6, !dbg !5060
  ret i32 %7, !dbg !5061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5062 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5066, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i32 %1, metadata !5067, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i32 %2, metadata !5068, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5069, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5075
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5076
  %5 = load i32, i32* %4, align 4, !dbg !5076
  %6 = icmp eq i32 %5, 0, !dbg !5077
  br i1 %6, label %7, label %12, !dbg !5078

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5079
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5081
  %10 = load i32, i32* %9, align 4, !dbg !5082
  %11 = or i32 %10, %8, !dbg !5082
  store i32 %11, i32* %9, align 4, !dbg !5082
  store i32 %1, i32* %4, align 4, !dbg !5083
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5084
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5085
  br label %14, !dbg !5086

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5071, metadata !DIExpression()), !dbg !5087
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !5088, !range !5089
  call void @llvm.dbg.value(metadata i32 %13, metadata !5074, metadata !DIExpression()), !dbg !5087
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !5090
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5091
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !5092
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !5093
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5095 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5097, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i32 %1, metadata !5098, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i32 %2, metadata !5099, metadata !DIExpression()), !dbg !5100
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !5101
  ret void, !dbg !5102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5103 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5105, metadata !DIExpression()), !dbg !5108
  call void @llvm.dbg.value(metadata i32 %1, metadata !5106, metadata !DIExpression()), !dbg !5108
  call void @llvm.dbg.value(metadata i32 %2, metadata !5107, metadata !DIExpression()), !dbg !5108
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !5109
  ret void, !dbg !5110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #3 !dbg !5111 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5113, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i32 %1, metadata !5114, metadata !DIExpression()), !dbg !5115
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !5116
  ret i32 %3, !dbg !5117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #3 !dbg !5118 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5122, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i32 %1, metadata !5123, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i32 %2, metadata !5124, metadata !DIExpression()), !dbg !5127
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5128
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5125, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5126, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5127
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5126, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5127
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5129
  call void @llvm.dbg.value(metadata i8* %5, metadata !5126, metadata !DIExpression()), !dbg !5127
  %6 = bitcast i8* %5 to i16*, !dbg !5130
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5133
  %8 = load i16, i16* %7, align 2, !dbg !5133
  %9 = zext i16 %8 to i32, !dbg !5133
  ret i32 %9, !dbg !5134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5135 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5139, metadata !DIExpression()), !dbg !5140
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5141
  ret %struct.chunk_unit_t* %2, !dbg !5142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #9 !dbg !5143 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5147, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i32 %1, metadata !5148, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i32 %2, metadata !5149, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i32 %3, metadata !5150, metadata !DIExpression()), !dbg !5153
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5154
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5151, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5152, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5153
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5155
  call void @llvm.dbg.value(metadata i8* %6, metadata !5152, metadata !DIExpression()), !dbg !5153
  %7 = trunc i32 %3 to i16, !dbg !5156
  %8 = bitcast i8* %6 to i16*, !dbg !5159
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5160
  store i16 %7, i16* %9, align 2, !dbg !5161
  ret void, !dbg !5162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5163 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5167, metadata !DIExpression()), !dbg !5168
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !5169
  ret i32 %2, !dbg !5170
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5171 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5175, metadata !DIExpression()), !dbg !5177
  call void @llvm.dbg.value(metadata i32 %1, metadata !5176, metadata !DIExpression()), !dbg !5177
  %3 = add i32 %1, 4, !dbg !5178
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !5179
  ret i32 %4, !dbg !5180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5181 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5185, metadata !DIExpression()), !dbg !5186
  %2 = add i32 %0, 7, !dbg !5187
  %3 = lshr i32 %2, 3, !dbg !5188
  ret i32 %3, !dbg !5189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5190 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5194, metadata !DIExpression()), !dbg !5197
  call void @llvm.dbg.value(metadata i32 %1, metadata !5195, metadata !DIExpression()), !dbg !5197
  call void @llvm.dbg.value(metadata i32 %2, metadata !5196, metadata !DIExpression()), !dbg !5197
  %4 = shl i32 %2, 1, !dbg !5198
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !5199
  ret void, !dbg !5200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5201 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5203, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.value(metadata i32 %1, metadata !5204, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.value(metadata i32 %2, metadata !5205, metadata !DIExpression()), !dbg !5206
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !5207
  ret void, !dbg !5208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5209 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5211, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.value(metadata i32 %1, metadata !5212, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.value(metadata i32 %2, metadata !5213, metadata !DIExpression()), !dbg !5219
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5220
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !5214, metadata !DIExpression()), !dbg !5219
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5221
  %6 = icmp eq i32 %5, %1, !dbg !5222
  br i1 %6, label %7, label %14, !dbg !5223

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5224
  %9 = xor i32 %8, -1, !dbg !5226
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5227
  %11 = load i32, i32* %10, align 4, !dbg !5228
  %12 = and i32 %11, %9, !dbg !5228
  store i32 %12, i32* %10, align 4, !dbg !5228
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5229
  store i32 0, i32* %13, align 4, !dbg !5230
  br label %17, !dbg !5231

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5232
  call void @llvm.dbg.value(metadata i32 %15, metadata !5215, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.value(metadata i32 %5, metadata !5218, metadata !DIExpression()), !dbg !5233
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5234
  store i32 %5, i32* %16, align 4, !dbg !5235
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !5236
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !5237
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #3 !dbg !5239 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5241, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata i32 %1, metadata !5242, metadata !DIExpression()), !dbg !5243
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !5244
  ret i32 %3, !dbg !5245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #3 !dbg !5246 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5250, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i8* %1, metadata !5251, metadata !DIExpression()), !dbg !5257
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5258
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5258
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5252, metadata !DIExpression()), !dbg !5257
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !5259
  call void @llvm.dbg.value(metadata i32 %5, metadata !5253, metadata !DIExpression()), !dbg !5257
  %6 = ptrtoint i8* %1 to i32, !dbg !5260
  call void @llvm.dbg.value(metadata i32 %6, metadata !5254, metadata !DIExpression()), !dbg !5257
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !5261
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5261
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5262
  call void @llvm.dbg.value(metadata i32 %9, metadata !5255, metadata !DIExpression()), !dbg !5257
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !5263
  %11 = shl i32 %10, 3, !dbg !5264
  call void @llvm.dbg.value(metadata i32 %11, metadata !5256, metadata !DIExpression()), !dbg !5257
  %12 = sub i32 %9, %6, !dbg !5265
  %13 = add i32 %12, %11, !dbg !5266
  ret i32 %13, !dbg !5267
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #14 !dbg !5268 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5272, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i32 %1, metadata !5273, metadata !DIExpression()), !dbg !5278
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5279
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5279
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5274, metadata !DIExpression()), !dbg !5278
  %5 = icmp eq i32 %1, 0, !dbg !5280
  br i1 %5, label %19, label %6, !dbg !5282

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !5283
  br i1 %7, label %19, label %8, !dbg !5284

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !5285, !range !4901
  call void @llvm.dbg.value(metadata i32 %9, metadata !5276, metadata !DIExpression()), !dbg !5278
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !5286
  call void @llvm.dbg.value(metadata i32 %10, metadata !5277, metadata !DIExpression()), !dbg !5278
  %11 = icmp eq i32 %10, 0, !dbg !5287
  br i1 %11, label %19, label %12, !dbg !5289

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !5290
  %14 = icmp ugt i32 %13, %9, !dbg !5292
  br i1 %14, label %15, label %17, !dbg !5293

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5294
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !5296
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !5297
  br label %17, !dbg !5298

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !5299
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !5300
  call void @llvm.dbg.value(metadata i8* %18, metadata !5275, metadata !DIExpression()), !dbg !5278
  br label %19, !dbg !5301

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5278
  ret i8* %20, !dbg !5302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #3 !dbg !5303 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5307, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.value(metadata i32 %1, metadata !5308, metadata !DIExpression()), !dbg !5309
  %3 = lshr i32 %1, 3, !dbg !5310
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5311
  %5 = load i32, i32* %4, align 4, !dbg !5311
  %6 = icmp uge i32 %3, %5, !dbg !5312
  ret i1 %6, !dbg !5313
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !5314 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5318, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata i32 %1, metadata !5319, metadata !DIExpression()), !dbg !5333
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5334
  call void @llvm.dbg.value(metadata i32 %3, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5321, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5333
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5335
  %5 = load i32, i32* %4, align 4, !dbg !5335
  %6 = icmp eq i32 %5, 0, !dbg !5336
  br i1 %6, label %19, label %7, !dbg !5337

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5338
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5339
  call void @llvm.dbg.value(metadata i32 %9, metadata !5325, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.value(metadata i32 %8, metadata !5326, metadata !DIExpression()), !dbg !5340
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !5341
  %11 = icmp ult i32 %10, %1, !dbg !5343
  br i1 %11, label %13, label %12, !dbg !5344

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !5345
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !5347
  store i32 %14, i32* %4, align 4, !dbg !5348
  %15 = add nsw i32 %9, -1, !dbg !5349
  call void @llvm.dbg.value(metadata i32 %15, metadata !5325, metadata !DIExpression()), !dbg !5339
  %16 = icmp eq i32 %15, 0, !dbg !5349
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5350
  br i1 %18, label %19, label %7, !dbg !5350, !llvm.loop !5351

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5354
  %21 = load i32, i32* %20, align 4, !dbg !5354
  %22 = add nsw i32 %3, 1, !dbg !5355
  %23 = shl nsw i32 -1, %22, !dbg !5355
  %24 = and i32 %21, %23, !dbg !5356
  call void @llvm.dbg.value(metadata i32 %24, metadata !5328, metadata !DIExpression()), !dbg !5333
  %25 = icmp eq i32 %24, 0, !dbg !5357
  br i1 %25, label %30, label %26, !dbg !5358

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5359, !range !5059
  call void @llvm.dbg.value(metadata i32 %27, metadata !5329, metadata !DIExpression()), !dbg !5360
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5361
  %29 = load i32, i32* %28, align 4, !dbg !5361
  call void @llvm.dbg.value(metadata i32 %29, metadata !5332, metadata !DIExpression()), !dbg !5360
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !5362
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5333
  ret i32 %31, !dbg !5363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5364 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5366, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.value(metadata i32 %1, metadata !5367, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.value(metadata i32 %2, metadata !5368, metadata !DIExpression()), !dbg !5372
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5373
  call void @llvm.dbg.value(metadata i32 %4, metadata !5369, metadata !DIExpression()), !dbg !5372
  %5 = sub i32 %2, %1, !dbg !5374
  call void @llvm.dbg.value(metadata i32 %5, metadata !5370, metadata !DIExpression()), !dbg !5372
  %6 = sub i32 %4, %5, !dbg !5375
  call void @llvm.dbg.value(metadata i32 %6, metadata !5371, metadata !DIExpression()), !dbg !5372
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5376
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !5377
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !5378
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5379
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5380
  ret void, !dbg !5381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5382 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5386, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.value(metadata i32 %1, metadata !5387, metadata !DIExpression()), !dbg !5390
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5391
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5388, metadata !DIExpression()), !dbg !5390
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5392
  call void @llvm.dbg.value(metadata i8* %4, metadata !5389, metadata !DIExpression()), !dbg !5390
  ret i8* %4, !dbg !5393
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !5394 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5398, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.value(metadata i32 %1, metadata !5399, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.value(metadata i32 %2, metadata !5400, metadata !DIExpression()), !dbg !5410
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5411
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5411
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5401, metadata !DIExpression()), !dbg !5410
  %6 = sub i32 0, %1, !dbg !5412
  %7 = and i32 %6, %1, !dbg !5413
  call void @llvm.dbg.value(metadata i32 %7, metadata !5403, metadata !DIExpression()), !dbg !5410
  %8 = icmp eq i32 %7, %1, !dbg !5414
  br i1 %8, label %13, label %9, !dbg !5416

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5417
  call void @llvm.dbg.value(metadata i32 %10, metadata !5399, metadata !DIExpression()), !dbg !5410
  %11 = icmp ult i32 %7, 4, !dbg !5419
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5419
  br label %17, !dbg !5419

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5420
  br i1 %14, label %15, label %17, !dbg !5423

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !5424
  br label %57, !dbg !5426

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5410
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5427
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5399, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.value(metadata i32 %19, metadata !5402, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.value(metadata i32 %18, metadata !5403, metadata !DIExpression()), !dbg !5410
  %21 = icmp eq i32 %2, 0, !dbg !5428
  br i1 %21, label %57, label %22, !dbg !5430

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !5431
  br i1 %23, label %57, label %24, !dbg !5432

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !5433
  %26 = add i32 %25, %20, !dbg !5434
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #27, !dbg !5435, !range !4901
  call void @llvm.dbg.value(metadata i32 %27, metadata !5404, metadata !DIExpression()), !dbg !5410
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #27, !dbg !5436
  call void @llvm.dbg.value(metadata i32 %28, metadata !5405, metadata !DIExpression()), !dbg !5410
  %29 = icmp eq i32 %28, 0, !dbg !5437
  br i1 %29, label %57, label %30, !dbg !5439

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !5440
  call void @llvm.dbg.value(metadata i8* %31, metadata !5406, metadata !DIExpression()), !dbg !5410
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !5441
  %33 = ptrtoint i8* %32 to i32, !dbg !5441
  %34 = add i32 %20, -1, !dbg !5441
  %35 = add i32 %34, %33, !dbg !5441
  %36 = sub i32 0, %20, !dbg !5441
  %37 = and i32 %35, %36, !dbg !5441
  %38 = inttoptr i32 %37 to i8*, !dbg !5442
  %39 = sub i32 0, %18, !dbg !5443
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !5443
  call void @llvm.dbg.value(metadata i8* %40, metadata !5406, metadata !DIExpression()), !dbg !5410
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !5444
  %42 = ptrtoint i8* %41 to i32, !dbg !5444
  %43 = add i32 %42, 7, !dbg !5444
  %44 = and i32 %43, -8, !dbg !5444
  call void @llvm.dbg.value(metadata i32 %44, metadata !5407, metadata !DIExpression()), !dbg !5410
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #27, !dbg !5445
  call void @llvm.dbg.value(metadata i32 %45, metadata !5408, metadata !DIExpression()), !dbg !5410
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !5446
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !5447
  %48 = sub i32 %44, %47, !dbg !5447
  %49 = ashr exact i32 %48, 3, !dbg !5447
  call void @llvm.dbg.value(metadata i32 %49, metadata !5409, metadata !DIExpression()), !dbg !5410
  %50 = icmp ugt i32 %45, %28, !dbg !5448
  br i1 %50, label %51, label %52, !dbg !5450

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #27, !dbg !5451
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !5453
  br label %52, !dbg !5454

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #27, !dbg !5455
  %54 = icmp ugt i32 %53, %49, !dbg !5457
  br i1 %54, label %55, label %56, !dbg !5458

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #27, !dbg !5459
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !5461
  br label %56, !dbg !5462

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #27, !dbg !5463
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !5410
  ret i8* %58, !dbg !5464
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5465 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5469, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.value(metadata i8* %1, metadata !5470, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.value(metadata i32 %2, metadata !5471, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.value(metadata i32 %3, metadata !5472, metadata !DIExpression()), !dbg !5488
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5489
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5489
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5473, metadata !DIExpression()), !dbg !5488
  %7 = icmp eq i8* %1, null, !dbg !5490
  br i1 %7, label %8, label %10, !dbg !5492

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !5493
  br label %59, !dbg !5495

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5496
  br i1 %11, label %12, label %13, !dbg !5498

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !5499
  br label %59, !dbg !5501

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !5502
  br i1 %14, label %59, label %15, !dbg !5504

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !5505, !range !4901
  call void @llvm.dbg.value(metadata i32 %16, metadata !5474, metadata !DIExpression()), !dbg !5488
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !5506
  call void @llvm.dbg.value(metadata i32 %17, metadata !5475, metadata !DIExpression()), !dbg !5488
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !5507
  %19 = ptrtoint i8* %1 to i32, !dbg !5508
  %20 = ptrtoint i8* %18 to i32, !dbg !5508
  %21 = sub i32 %19, %20, !dbg !5508
  call void @llvm.dbg.value(metadata i32 %21, metadata !5476, metadata !DIExpression()), !dbg !5488
  %22 = add i32 %21, %3, !dbg !5509
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !5510
  call void @llvm.dbg.value(metadata i32 %23, metadata !5477, metadata !DIExpression()), !dbg !5488
  %24 = icmp eq i32 %2, 0, !dbg !5511
  br i1 %24, label %29, label %25, !dbg !5512

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !5513
  %27 = and i32 %26, %19, !dbg !5514
  %28 = icmp eq i32 %27, 0, !dbg !5514
  br i1 %28, label %29, label %49, !dbg !5515

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !5516
  %31 = icmp eq i32 %23, %30, !dbg !5517
  br i1 %31, label %59, label %32, !dbg !5518

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !5519
  br i1 %33, label %34, label %36, !dbg !5520

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !5521
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #27, !dbg !5523
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !5524
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #27, !dbg !5525
  br label %59, !dbg !5526

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !5527
  br i1 %37, label %49, label %38, !dbg !5528

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !5529
  %40 = add i32 %39, %30, !dbg !5530
  %41 = icmp ult i32 %40, %23, !dbg !5531
  br i1 %41, label %49, label %42, !dbg !5532

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !5533
  call void @llvm.dbg.value(metadata i32 %43, metadata !5478, metadata !DIExpression()), !dbg !5534
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !5535
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !5536
  %45 = icmp ult i32 %43, %44, !dbg !5538
  br i1 %45, label %46, label %48, !dbg !5539

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !5540
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #27, !dbg !5542
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #27, !dbg !5543
  br label %48, !dbg !5544

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #27, !dbg !5545
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !5546
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !5547
  call void @llvm.dbg.value(metadata i8* %50, metadata !5484, metadata !DIExpression()), !dbg !5488
  %51 = icmp eq i8* %50, null, !dbg !5548
  br i1 %51, label %59, label %52, !dbg !5549

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !5550, !range !4994
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #27, !dbg !5551
  %55 = sub i32 %54, %21, !dbg !5552
  call void @llvm.dbg.value(metadata i32 %55, metadata !5485, metadata !DIExpression()), !dbg !5553
  %56 = icmp ult i32 %55, %3, !dbg !5554
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !5554
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #28, !dbg !5555
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !5556
  br label %59, !dbg !5557

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !5488
  ret i8* %60, !dbg !5558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5559 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5563, metadata !DIExpression()), !dbg !5565
  call void @llvm.dbg.value(metadata i32 %1, metadata !5564, metadata !DIExpression()), !dbg !5565
  %3 = shl i32 %1, 3, !dbg !5566
  %4 = add i32 %3, -4, !dbg !5567
  ret i32 %4, !dbg !5568
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !5569 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5573, metadata !DIExpression()), !dbg !5584
  call void @llvm.dbg.value(metadata i8* %1, metadata !5574, metadata !DIExpression()), !dbg !5584
  call void @llvm.dbg.value(metadata i32 %2, metadata !5575, metadata !DIExpression()), !dbg !5584
  %4 = add i32 %2, -4, !dbg !5585
  call void @llvm.dbg.value(metadata i32 %4, metadata !5575, metadata !DIExpression()), !dbg !5584
  %5 = ptrtoint i8* %1 to i32, !dbg !5586
  %6 = add i32 %5, 7, !dbg !5586
  %7 = and i32 %6, -8, !dbg !5586
  call void @llvm.dbg.value(metadata i32 %7, metadata !5576, metadata !DIExpression()), !dbg !5584
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !5587
  %9 = ptrtoint i8* %8 to i32, !dbg !5587
  %10 = and i32 %9, -8, !dbg !5587
  call void @llvm.dbg.value(metadata i32 %10, metadata !5577, metadata !DIExpression()), !dbg !5584
  %11 = sub i32 %10, %7, !dbg !5588
  %12 = lshr exact i32 %11, 3, !dbg !5589
  call void @llvm.dbg.value(metadata i32 %12, metadata !5578, metadata !DIExpression()), !dbg !5584
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !5590
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !5579, metadata !DIExpression()), !dbg !5584
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5591
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !5592
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !5593
  store i32 %12, i32* %15, align 8, !dbg !5594
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !5595
  store i32 0, i32* %16, align 4, !dbg !5596
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #27, !dbg !5597
  call void @llvm.dbg.value(metadata i32 %17, metadata !5580, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5584
  %18 = shl i32 %17, 2, !dbg !5598
  %19 = add i32 %18, 20, !dbg !5599
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #27, !dbg !5600
  call void @llvm.dbg.value(metadata i32 %20, metadata !5581, metadata !DIExpression()), !dbg !5584
  call void @llvm.dbg.value(metadata i32 0, metadata !5582, metadata !DIExpression()), !dbg !5601
  %21 = icmp slt i32 %17, 0, !dbg !5602
  br i1 %21, label %22, label %24, !dbg !5604

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #27, !dbg !5605
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #27, !dbg !5606
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !5607
  %23 = sub i32 %12, %20, !dbg !5608
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #27, !dbg !5609
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #27, !dbg !5610
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #27, !dbg !5611
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #27, !dbg !5612
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #27, !dbg !5613
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #27, !dbg !5614
  ret void, !dbg !5615

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !5582, metadata !DIExpression()), !dbg !5601
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !5616
  store i32 0, i32* %26, align 4, !dbg !5618
  %27 = add nuw i32 %25, 1, !dbg !5619
  call void @llvm.dbg.value(metadata i32 %27, metadata !5582, metadata !DIExpression()), !dbg !5601
  %28 = icmp eq i32 %25, %17, !dbg !5602
  br i1 %28, label %22, label %24, !dbg !5604, !llvm.loop !5620
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5622 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5635, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5632, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %1, metadata !5633, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %2, metadata !5634, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %4, metadata !5636, metadata !DIExpression()), !dbg !5761
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5762
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #26, !dbg !5762
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5637, metadata !DIExpression()), !dbg !5763
  call void @llvm.dbg.value(metadata i32 0, metadata !5641, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i1 undef, metadata !5643, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5761
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5764

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5764

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5765
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5635, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %30, metadata !5634, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %29, metadata !5641, metadata !DIExpression()), !dbg !5761
  %31 = load i8, i8* %30, align 1, !dbg !5766
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5764

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5766
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5767
  call void @llvm.dbg.value(metadata i8* %34, metadata !5634, metadata !DIExpression()), !dbg !5761
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #28, !dbg !5767
  call void @llvm.dbg.value(metadata i32 %35, metadata !5645, metadata !DIExpression()), !dbg !5768
  %36 = icmp slt i32 %35, 0, !dbg !5769
  %37 = add i32 %29, 1, !dbg !5767
  call void @llvm.dbg.value(metadata i32 undef, metadata !5641, metadata !DIExpression()), !dbg !5761
  br i1 %36, label %365, label %28, !llvm.loop !5771

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #26, !dbg !5773
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5650, metadata !DIExpression()), !dbg !5774
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5774
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5693, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5696, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i8* %30, metadata !5699, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i32 -1, metadata !5700, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i32 -1, metadata !5701, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i8* null, metadata !5702, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i8* %14, metadata !5703, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i8 0, metadata !5704, metadata !DIExpression()), !dbg !5775
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !5776
  call void @llvm.dbg.value(metadata i8* %39, metadata !5634, metadata !DIExpression()), !dbg !5761
  %40 = load i24, i24* %15, align 8, !dbg !5777
  %41 = and i24 %40, 256, !dbg !5777
  %42 = icmp eq i24 %41, 0, !dbg !5777
  br i1 %42, label %51, label %43, !dbg !5779

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5780
  call void @llvm.dbg.value(metadata i8* %44, metadata !5635, metadata !DIExpression()), !dbg !5761
  %45 = bitcast i8* %27 to i32*, !dbg !5780
  %46 = load i32, i32* %45, align 4, !dbg !5780
  call void @llvm.dbg.value(metadata i32 %46, metadata !5700, metadata !DIExpression()), !dbg !5775
  %47 = icmp slt i32 %46, 0, !dbg !5782
  br i1 %47, label %48, label %56, !dbg !5784

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5785
  store i24 %49, i24* %15, align 8, !dbg !5785
  %50 = sub nsw i32 0, %46, !dbg !5787
  call void @llvm.dbg.value(metadata i32 %50, metadata !5700, metadata !DIExpression()), !dbg !5775
  br label %56, !dbg !5788

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5789
  %53 = icmp eq i24 %52, 0, !dbg !5789
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5791
  br label %56, !dbg !5791

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5792
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5775
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5635, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %58, metadata !5700, metadata !DIExpression()), !dbg !5775
  %60 = and i24 %57, 1024, !dbg !5792
  %61 = icmp eq i24 %60, 0, !dbg !5792
  br i1 %61, label %69, label %62, !dbg !5793

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5794
  call void @llvm.dbg.value(metadata i8* %63, metadata !5635, metadata !DIExpression()), !dbg !5761
  %64 = bitcast i8* %59 to i32*, !dbg !5794
  %65 = load i32, i32* %64, align 4, !dbg !5794
  call void @llvm.dbg.value(metadata i32 %65, metadata !5705, metadata !DIExpression()), !dbg !5795
  %66 = icmp slt i32 %65, 0, !dbg !5796
  br i1 %66, label %67, label %74, !dbg !5798

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5799
  store i24 %68, i24* %15, align 8, !dbg !5799
  br label %74, !dbg !5801

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5802
  %71 = icmp eq i24 %70, 0, !dbg !5802
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5804
  br label %74, !dbg !5804

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5805
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5775
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5775
  call void @llvm.dbg.value(metadata i8* %77, metadata !5635, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %76, metadata !5701, metadata !DIExpression()), !dbg !5775
  store i32 0, i32* %16, align 4, !dbg !5806
  store i32 0, i32* %17, align 8, !dbg !5807
  %78 = lshr i24 %75, 16, !dbg !5805
  call void @llvm.dbg.value(metadata i24 %78, metadata !5708, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5775
  %79 = lshr i24 %75, 11, !dbg !5808
  %80 = and i24 %79, 15, !dbg !5808
  %81 = zext i24 %80 to i32, !dbg !5808
  call void @llvm.dbg.value(metadata i32 %81, metadata !5709, metadata !DIExpression()), !dbg !5775
  %82 = trunc i24 %78 to i3, !dbg !5809
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5809

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5810

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5813
  call void @llvm.dbg.value(metadata i8* %85, metadata !5635, metadata !DIExpression()), !dbg !5761
  %86 = bitcast i8* %77 to i32*, !dbg !5813
  %87 = load i32, i32* %86, align 4, !dbg !5813
  %88 = sext i32 %87 to i64, !dbg !5813
  store i64 %88, i64* %20, align 8, !dbg !5815
  br label %115, !dbg !5816

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5817
  call void @llvm.dbg.value(metadata i8* %90, metadata !5635, metadata !DIExpression()), !dbg !5761
  %91 = bitcast i8* %77 to i32*, !dbg !5817
  %92 = load i32, i32* %91, align 4, !dbg !5817
  %93 = sext i32 %92 to i64, !dbg !5817
  store i64 %93, i64* %20, align 8, !dbg !5820
  br label %115, !dbg !5821

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5822
  %96 = add i32 %95, 7, !dbg !5822
  %97 = and i32 %96, -8, !dbg !5822
  %98 = inttoptr i32 %97 to i8*, !dbg !5822
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5822
  call void @llvm.dbg.value(metadata i8* %99, metadata !5635, metadata !DIExpression()), !dbg !5761
  %100 = inttoptr i32 %97 to i64*, !dbg !5822
  %101 = load i64, i64* %100, align 8, !dbg !5822
  store i64 %101, i64* %20, align 8, !dbg !5823
  br label %115, !dbg !5824

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5825
  %104 = add i32 %103, 7, !dbg !5825
  %105 = and i32 %104, -8, !dbg !5825
  %106 = inttoptr i32 %105 to i8*, !dbg !5825
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5825
  call void @llvm.dbg.value(metadata i8* %107, metadata !5635, metadata !DIExpression()), !dbg !5761
  %108 = inttoptr i32 %105 to i64*, !dbg !5825
  %109 = load i64, i64* %108, align 8, !dbg !5825
  store i64 %109, i64* %20, align 8, !dbg !5826
  br label %115, !dbg !5827

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5828
  call void @llvm.dbg.value(metadata i8* %111, metadata !5635, metadata !DIExpression()), !dbg !5761
  %112 = bitcast i8* %77 to i32*, !dbg !5828
  %113 = load i32, i32* %112, align 4, !dbg !5828
  %114 = sext i32 %113 to i64, !dbg !5829
  store i64 %114, i64* %20, align 8, !dbg !5830
  br label %115, !dbg !5831

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5832
  call void @llvm.dbg.value(metadata i8* %117, metadata !5635, metadata !DIExpression()), !dbg !5761
  %118 = trunc i24 %79 to i4, !dbg !5833
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5833

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5834
  %121 = ashr exact i64 %120, 56, !dbg !5834
  store i64 %121, i64* %20, align 8, !dbg !5837
  br label %177, !dbg !5838

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5839
  %124 = ashr exact i64 %123, 48, !dbg !5839
  store i64 %124, i64* %20, align 8, !dbg !5842
  br label %177, !dbg !5843

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5844

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5847
  call void @llvm.dbg.value(metadata i8* %127, metadata !5635, metadata !DIExpression()), !dbg !5761
  %128 = bitcast i8* %77 to i32*, !dbg !5847
  %129 = load i32, i32* %128, align 4, !dbg !5847
  %130 = zext i32 %129 to i64, !dbg !5847
  store i64 %130, i64* %20, align 8, !dbg !5849
  br label %157, !dbg !5850

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5851
  call void @llvm.dbg.value(metadata i8* %132, metadata !5635, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %132, metadata !5635, metadata !DIExpression()), !dbg !5761
  %133 = bitcast i8* %77 to i32*, !dbg !5851
  %134 = load i32, i32* %133, align 4, !dbg !5851
  %135 = zext i32 %134 to i64, !dbg !5851
  store i64 %135, i64* %20, align 8, !dbg !5851
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5853
  %138 = add i32 %137, 7, !dbg !5853
  %139 = and i32 %138, -8, !dbg !5853
  %140 = inttoptr i32 %139 to i8*, !dbg !5853
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5853
  call void @llvm.dbg.value(metadata i8* %141, metadata !5635, metadata !DIExpression()), !dbg !5761
  %142 = inttoptr i32 %139 to i64*, !dbg !5853
  %143 = load i64, i64* %142, align 8, !dbg !5853
  store i64 %143, i64* %20, align 8, !dbg !5854
  br label %157, !dbg !5855

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5856
  %146 = add i32 %145, 7, !dbg !5856
  %147 = and i32 %146, -8, !dbg !5856
  %148 = inttoptr i32 %147 to i8*, !dbg !5856
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5856
  call void @llvm.dbg.value(metadata i8* %149, metadata !5635, metadata !DIExpression()), !dbg !5761
  %150 = inttoptr i32 %147 to i64*, !dbg !5856
  %151 = load i64, i64* %150, align 8, !dbg !5856
  store i64 %151, i64* %20, align 8, !dbg !5857
  br label %157, !dbg !5858

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5859
  call void @llvm.dbg.value(metadata i8* %153, metadata !5635, metadata !DIExpression()), !dbg !5761
  %154 = bitcast i8* %77 to i32*, !dbg !5859
  %155 = load i32, i32* %154, align 4, !dbg !5859
  %156 = zext i32 %155 to i64, !dbg !5860
  store i64 %156, i64* %20, align 8, !dbg !5861
  br label %157, !dbg !5862

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5863
  call void @llvm.dbg.value(metadata i8* %159, metadata !5635, metadata !DIExpression()), !dbg !5761
  %160 = trunc i24 %79 to i4, !dbg !5864
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5864

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5865
  store i64 %162, i64* %20, align 8, !dbg !5868
  br label %177, !dbg !5869

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5870
  store i64 %164, i64* %20, align 8, !dbg !5873
  br label %177, !dbg !5874

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5875
  %167 = add i32 %166, 7, !dbg !5875
  %168 = and i32 %167, -8, !dbg !5875
  %169 = inttoptr i32 %168 to i8*, !dbg !5875
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5875
  call void @llvm.dbg.value(metadata i8* %170, metadata !5635, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %170, metadata !5635, metadata !DIExpression()), !dbg !5761
  %171 = inttoptr i32 %168 to double*, !dbg !5875
  %172 = load double, double* %171, align 8, !dbg !5875
  store double %172, double* %19, align 8, !dbg !5875
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5879
  call void @llvm.dbg.value(metadata i8* %174, metadata !5635, metadata !DIExpression()), !dbg !5761
  %175 = bitcast i8* %77 to i8**, !dbg !5879
  %176 = load i8*, i8** %175, align 4, !dbg !5879
  store i8* %176, i8** %18, align 8, !dbg !5882
  br label %177, !dbg !5883

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5775
  call void @llvm.dbg.value(metadata i8* %178, metadata !5635, metadata !DIExpression()), !dbg !5761
  %179 = and i24 %75, 3, !dbg !5884
  %180 = icmp eq i24 %179, 0, !dbg !5884
  br i1 %180, label %185, label %181, !dbg !5884

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !5885
  call void @llvm.dbg.value(metadata i32 %182, metadata !5710, metadata !DIExpression()), !dbg !5886
  %183 = icmp slt i32 %182, 0, !dbg !5887
  %184 = add i32 %182, %29, !dbg !5885
  call void @llvm.dbg.value(metadata i32 undef, metadata !5641, metadata !DIExpression()), !dbg !5761
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5889
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5890

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #28, !dbg !5891
  call void @llvm.dbg.value(metadata i32 %188, metadata !5714, metadata !DIExpression()), !dbg !5892
  %189 = icmp slt i32 %188, 0, !dbg !5893
  %190 = add i32 %29, 1, !dbg !5891
  call void @llvm.dbg.value(metadata i32 undef, metadata !5641, metadata !DIExpression()), !dbg !5761
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5895
  call void @llvm.dbg.value(metadata i8* %192, metadata !5702, metadata !DIExpression()), !dbg !5775
  %193 = icmp sgt i32 %76, -1, !dbg !5896
  br i1 %193, label %194, label %196, !dbg !5898

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #28, !dbg !5899
  call void @llvm.dbg.value(metadata i32 %195, metadata !5717, metadata !DIExpression()), !dbg !5901
  br label %241, !dbg !5902

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #28, !dbg !5903
  call void @llvm.dbg.value(metadata i32 %197, metadata !5717, metadata !DIExpression()), !dbg !5901
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5702, metadata !DIExpression()), !dbg !5775
  %199 = load i64, i64* %20, align 8, !dbg !5905
  %200 = trunc i64 %199 to i8, !dbg !5906
  store i8 %200, i8* %10, align 1, !dbg !5907
  call void @llvm.dbg.value(metadata i8* %23, metadata !5703, metadata !DIExpression()), !dbg !5775
  br label %245, !dbg !5908

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5909
  %203 = icmp eq i24 %202, 0, !dbg !5909
  %204 = trunc i24 %75 to i8, !dbg !5911
  %205 = shl i8 %204, 1, !dbg !5911
  %206 = and i8 %205, 32, !dbg !5911
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5911
  call void @llvm.dbg.value(metadata i8 %207, metadata !5704, metadata !DIExpression()), !dbg !5775
  %208 = load i64, i64* %20, align 8, !dbg !5912
  call void @llvm.dbg.value(metadata i64 %208, metadata !5642, metadata !DIExpression()), !dbg !5761
  %209 = icmp slt i64 %208, 0, !dbg !5913
  br i1 %209, label %210, label %212, !dbg !5915

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5704, metadata !DIExpression()), !dbg !5775
  %211 = sub nsw i64 0, %208, !dbg !5916
  store i64 %211, i64* %20, align 8, !dbg !5918
  br label %212, !dbg !5919

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5775
  call void @llvm.dbg.value(metadata i8 %213, metadata !5704, metadata !DIExpression()), !dbg !5775
  %214 = load i64, i64* %20, align 8, !dbg !5920
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !5921
  call void @llvm.dbg.value(metadata i8* %215, metadata !5702, metadata !DIExpression()), !dbg !5775
  br label %216, !dbg !5922

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5923
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5924
  call void @llvm.dbg.value(metadata i8* %218, metadata !5702, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i8 %217, metadata !5704, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.label(metadata !5760), !dbg !5925
  %219 = icmp sgt i32 %76, -1, !dbg !5926
  br i1 %219, label %222, label %220, !dbg !5927

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5928
  br label %245, !dbg !5927

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5930
  %224 = sub i32 %22, %223, !dbg !5930
  call void @llvm.dbg.value(metadata i32 %224, metadata !5719, metadata !DIExpression()), !dbg !5931
  %225 = load i24, i24* %15, align 8, !dbg !5932
  %226 = and i24 %225, -65, !dbg !5932
  store i24 %226, i24* %15, align 8, !dbg !5932
  %227 = icmp ugt i32 %76, %224, !dbg !5933
  br i1 %227, label %228, label %245, !dbg !5935

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5936
  store i32 %229, i32* %16, align 4, !dbg !5938
  br label %245, !dbg !5939

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5940
  %232 = icmp eq i8* %231, null, !dbg !5942
  br i1 %232, label %245, label %233, !dbg !5943

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5944
  %235 = zext i32 %234 to i64, !dbg !5944
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !5946
  call void @llvm.dbg.value(metadata i8* %236, metadata !5702, metadata !DIExpression()), !dbg !5775
  %237 = load i24, i24* %15, align 8, !dbg !5947
  %238 = or i24 %237, 1048576, !dbg !5947
  store i24 %238, i24* %15, align 8, !dbg !5947
  store i8 120, i8* %21, align 1, !dbg !5948
  br label %216, !dbg !5949

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5950
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !5953
  br label %363, !dbg !5954

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5955
  call void @llvm.dbg.value(metadata i32 %242, metadata !5717, metadata !DIExpression()), !dbg !5901
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5956
  call void @llvm.dbg.value(metadata i32 -1, metadata !5701, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i32 %29, metadata !5641, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %192, metadata !5702, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i8* %243, metadata !5703, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i8 0, metadata !5704, metadata !DIExpression()), !dbg !5775
  %244 = icmp eq i8* %192, null, !dbg !5957
  br i1 %244, label %363, label %245, !dbg !5959, !llvm.loop !5771

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5928
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5775
  call void @llvm.dbg.value(metadata i32 0, metadata !5723, metadata !DIExpression()), !dbg !5775
  %250 = zext i8 %249 to i32, !dbg !5960
  %251 = icmp eq i8 %249, 0, !dbg !5962
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5775
  call void @llvm.dbg.value(metadata i32 undef, metadata !5722, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5775
  call void @llvm.dbg.value(metadata i32 undef, metadata !5722, metadata !DIExpression()), !dbg !5775
  %252 = icmp sgt i32 %58, 0, !dbg !5963
  br i1 %252, label %253, label %302, !dbg !5964

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5928
  %255 = icmp eq i24 %254, 0, !dbg !5928
  %256 = ptrtoint i8* %248 to i32, !dbg !5965
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5775
  %257 = ptrtoint i8* %247 to i32, !dbg !5965
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5775
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5775
  %258 = xor i1 %251, true, !dbg !5966
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5775
  %259 = sext i1 %258 to i32, !dbg !5966
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5775
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5775
  %260 = lshr i24 %246, 19, !dbg !5967
  %261 = and i24 %260, 1, !dbg !5967
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5967
  %263 = zext i24 %262 to i32, !dbg !5967
  %264 = add i32 %257, %259, !dbg !5967
  %265 = add i32 %256, %263, !dbg !5967
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5775
  %266 = and i24 %246, 4194304, !dbg !5968
  %267 = icmp eq i24 %266, 0, !dbg !5968
  %268 = load i32, i32* %16, align 4, !dbg !5970
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5775
  call void @llvm.dbg.value(metadata i32 undef, metadata !5722, metadata !DIExpression()), !dbg !5775
  %269 = load i32, i32* %17, align 8, !dbg !5971
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5971
  call void @llvm.dbg.value(metadata i32 undef, metadata !5722, metadata !DIExpression()), !dbg !5775
  %271 = add i32 %264, %58, !dbg !5971
  %272 = add i32 %265, %268, !dbg !5971
  %273 = add i32 %272, %270, !dbg !5972
  %274 = sub i32 %271, %273, !dbg !5972
  call void @llvm.dbg.value(metadata i32 %274, metadata !5700, metadata !DIExpression()), !dbg !5775
  %275 = and i24 %246, 4, !dbg !5973
  %276 = icmp eq i24 %275, 0, !dbg !5973
  br i1 %276, label %277, label %302, !dbg !5974

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5724, metadata !DIExpression()), !dbg !5975
  %278 = and i24 %246, 64, !dbg !5976
  %279 = icmp eq i24 %278, 0, !dbg !5976
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5977
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5977
  %282 = select i1 %279, i32 32, i32 48, !dbg !5977
  br i1 %280, label %287, label %283, !dbg !5977

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #28, !dbg !5978
  call void @llvm.dbg.value(metadata i32 %284, metadata !5729, metadata !DIExpression()), !dbg !5979
  %285 = icmp slt i32 %284, 0, !dbg !5980
  %286 = add i32 %29, 1, !dbg !5978
  call void @llvm.dbg.value(metadata i32 undef, metadata !5641, metadata !DIExpression()), !dbg !5761
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5775
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5765
  call void @llvm.dbg.value(metadata i32 %290, metadata !5641, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8 undef, metadata !5724, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.value(metadata i8 %288, metadata !5704, metadata !DIExpression()), !dbg !5775
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5982
  %292 = add i32 %291, -1, !dbg !5982
  br label %293, !dbg !5982

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5983
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5765
  call void @llvm.dbg.value(metadata i32 %295, metadata !5641, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %294, metadata !5700, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i32 %294, metadata !5700, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5775
  %296 = icmp sgt i32 %294, 0, !dbg !5984
  br i1 %296, label %297, label %302, !dbg !5982

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5985
  call void @llvm.dbg.value(metadata i32 %298, metadata !5700, metadata !DIExpression()), !dbg !5775
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #28, !dbg !5986
  call void @llvm.dbg.value(metadata i32 %299, metadata !5735, metadata !DIExpression()), !dbg !5987
  %300 = icmp slt i32 %299, 0, !dbg !5988
  %301 = add i32 %295, 1, !dbg !5986
  call void @llvm.dbg.value(metadata i32 undef, metadata !5641, metadata !DIExpression()), !dbg !5761
  br i1 %300, label %361, label %293, !llvm.loop !5990

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5775
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5775
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5765
  call void @llvm.dbg.value(metadata i32 %305, metadata !5641, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %304, metadata !5700, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i8 %303, metadata !5704, metadata !DIExpression()), !dbg !5775
  %306 = icmp eq i8 %303, 0, !dbg !5992
  br i1 %306, label %312, label %307, !dbg !5993

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5994
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #28, !dbg !5995
  call void @llvm.dbg.value(metadata i32 %309, metadata !5738, metadata !DIExpression()), !dbg !5996
  %310 = icmp slt i32 %309, 0, !dbg !5997
  %311 = add i32 %305, 1, !dbg !5995
  call void @llvm.dbg.value(metadata i32 undef, metadata !5641, metadata !DIExpression()), !dbg !5761
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5765
  call void @llvm.dbg.value(metadata i32 %313, metadata !5641, metadata !DIExpression()), !dbg !5761
  %314 = lshr i24 %246, 20, !dbg !5999
  %315 = lshr i24 %246, 19, !dbg !6000
  %316 = or i24 %314, %315, !dbg !6001
  %317 = and i24 %316, 1, !dbg !6001
  %318 = icmp eq i24 %317, 0, !dbg !6001
  br i1 %318, label %323, label %319, !dbg !6002

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #28, !dbg !6003
  call void @llvm.dbg.value(metadata i32 %320, metadata !5742, metadata !DIExpression()), !dbg !6004
  %321 = icmp slt i32 %320, 0, !dbg !6005
  %322 = add i32 %313, 1, !dbg !6003
  call void @llvm.dbg.value(metadata i32 undef, metadata !5641, metadata !DIExpression()), !dbg !5761
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5765
  call void @llvm.dbg.value(metadata i32 %324, metadata !5641, metadata !DIExpression()), !dbg !5761
  %325 = and i24 %246, 1048576, !dbg !6007
  %326 = icmp eq i24 %325, 0, !dbg !6007
  br i1 %326, label %333, label %327, !dbg !6008

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6009
  %329 = zext i8 %328 to i32, !dbg !6009
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #28, !dbg !6009
  call void @llvm.dbg.value(metadata i32 %330, metadata !5748, metadata !DIExpression()), !dbg !6010
  %331 = icmp slt i32 %330, 0, !dbg !6011
  %332 = add i32 %324, 1, !dbg !6009
  call void @llvm.dbg.value(metadata i32 undef, metadata !5641, metadata !DIExpression()), !dbg !5761
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5765
  call void @llvm.dbg.value(metadata i32 %334, metadata !5641, metadata !DIExpression()), !dbg !5761
  %335 = load i32, i32* %16, align 4, !dbg !6013
  call void @llvm.dbg.value(metadata i32 %335, metadata !5723, metadata !DIExpression()), !dbg !5775
  br label %336, !dbg !6014

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6015
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5765
  call void @llvm.dbg.value(metadata i32 %338, metadata !5641, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %337, metadata !5723, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5775
  %339 = icmp sgt i32 %337, 0, !dbg !6016
  br i1 %339, label %340, label %345, !dbg !6014

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6017
  call void @llvm.dbg.value(metadata i32 %341, metadata !5723, metadata !DIExpression()), !dbg !5775
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #28, !dbg !6018
  call void @llvm.dbg.value(metadata i32 %342, metadata !5752, metadata !DIExpression()), !dbg !6019
  %343 = icmp slt i32 %342, 0, !dbg !6020
  %344 = add i32 %338, 1, !dbg !6018
  call void @llvm.dbg.value(metadata i32 undef, metadata !5641, metadata !DIExpression()), !dbg !5761
  br i1 %343, label %361, label %336, !llvm.loop !6022

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !6024
  call void @llvm.dbg.value(metadata i32 %346, metadata !5755, metadata !DIExpression()), !dbg !6025
  %347 = icmp slt i32 %346, 0, !dbg !6026
  call void @llvm.dbg.value(metadata i32 undef, metadata !5641, metadata !DIExpression()), !dbg !5761
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6024
  call void @llvm.dbg.value(metadata i32 %349, metadata !5641, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %304, metadata !5700, metadata !DIExpression()), !dbg !5775
  %350 = icmp sgt i32 %304, 0, !dbg !6028
  br i1 %350, label %351, label %363, !dbg !6029

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6029
  %353 = add i32 %352, %338, !dbg !6029
  br label %354, !dbg !6029

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5641, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %355, metadata !5700, metadata !DIExpression()), !dbg !5775
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #28, !dbg !6030
  call void @llvm.dbg.value(metadata i32 %356, metadata !5757, metadata !DIExpression()), !dbg !6031
  %357 = icmp slt i32 %356, 0, !dbg !6032
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6034
  call void @llvm.dbg.value(metadata i32 undef, metadata !5641, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %359, metadata !5700, metadata !DIExpression()), !dbg !5775
  %360 = icmp sgt i32 %355, 1, !dbg !6028
  br i1 %360, label %354, label %363, !dbg !6029, !llvm.loop !6035

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5641, metadata !DIExpression()), !dbg !5761
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !5772
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5765
  call void @llvm.dbg.value(metadata i32 %364, metadata !5641, metadata !DIExpression()), !dbg !5761
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !5772
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5761
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6037
  ret i32 %366, !dbg !6037
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #16 !dbg !6038 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6042, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.value(metadata i8* %1, metadata !6043, metadata !DIExpression()), !dbg !6044
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6045
  store i24 0, i24* %3, align 4, !dbg !6045
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6045
  store i8 0, i8* %4, align 1, !dbg !6045
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6045
  store i32 0, i32* %5, align 4, !dbg !6045
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6045
  store i32 0, i32* %6, align 4, !dbg !6045
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6046
  call void @llvm.dbg.value(metadata i8* %7, metadata !6043, metadata !DIExpression()), !dbg !6044
  %8 = load i8, i8* %7, align 1, !dbg !6047
  %9 = icmp eq i8 %8, 37, !dbg !6049
  br i1 %9, label %10, label %12, !dbg !6050

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6051
  call void @llvm.dbg.value(metadata i8* %11, metadata !6043, metadata !DIExpression()), !dbg !6044
  store i8 37, i8* %4, align 1, !dbg !6053
  br label %18, !dbg !6054

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !6055
  call void @llvm.dbg.value(metadata i8* %13, metadata !6043, metadata !DIExpression()), !dbg !6044
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !6056
  call void @llvm.dbg.value(metadata i8* %14, metadata !6043, metadata !DIExpression()), !dbg !6044
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !6057
  call void @llvm.dbg.value(metadata i8* %15, metadata !6043, metadata !DIExpression()), !dbg !6044
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !6058
  call void @llvm.dbg.value(metadata i8* %16, metadata !6043, metadata !DIExpression()), !dbg !6044
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !6059
  call void @llvm.dbg.value(metadata i8* %17, metadata !6043, metadata !DIExpression()), !dbg !6044
  br label %18, !dbg !6060

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6044
  ret i8* %19, !dbg !6061
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6062 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6066, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.value(metadata i8* %1, metadata !6067, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.value(metadata i8* %2, metadata !6068, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.value(metadata i8* %3, metadata !6069, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.value(metadata i32 0, metadata !6070, metadata !DIExpression()), !dbg !6073
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6074

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6075
  call void @llvm.dbg.value(metadata i32 %9, metadata !6070, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.value(metadata i8* %8, metadata !6068, metadata !DIExpression()), !dbg !6073
  %10 = icmp ult i8* %8, %3, !dbg !6076
  br i1 %10, label %11, label %13, !dbg !6077

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6078
  br label %17, !dbg !6077

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6079

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6080
  %16 = icmp eq i8 %15, 0, !dbg !6079
  br i1 %16, label %24, label %17, !dbg !6074

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6078
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6081
  call void @llvm.dbg.value(metadata i8* %19, metadata !6068, metadata !DIExpression()), !dbg !6073
  %20 = zext i8 %18 to i32, !dbg !6082
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #28, !dbg !6083
  call void @llvm.dbg.value(metadata i32 %21, metadata !6071, metadata !DIExpression()), !dbg !6084
  %22 = icmp slt i32 %21, 0, !dbg !6085
  %23 = add i32 %9, 1, !dbg !6087
  call void @llvm.dbg.value(metadata i32 undef, metadata !6070, metadata !DIExpression()), !dbg !6073
  br i1 %22, label %24, label %7, !llvm.loop !6088

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6073
  ret i32 %25, !dbg !6090
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #16 !dbg !6091 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6095, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6096, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata i8* %2, metadata !6097, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata i8* %3, metadata !6098, metadata !DIExpression()), !dbg !6105
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6106
  %6 = load i8, i8* %5, align 1, !dbg !6106
  %7 = zext i8 %6 to i32, !dbg !6107
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !6108
  %9 = icmp eq i32 %8, 0, !dbg !6108
  call void @llvm.dbg.value(metadata i1 %9, metadata !6099, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6105
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !6109
  call void @llvm.dbg.value(metadata i32 %10, metadata !6100, metadata !DIExpression()), !dbg !6105
  %11 = ptrtoint i8* %3 to i32, !dbg !6110
  %12 = ptrtoint i8* %2 to i32, !dbg !6110
  %13 = sub i32 %11, %12, !dbg !6110
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6111
  call void @llvm.dbg.value(metadata i8* %14, metadata !6102, metadata !DIExpression()), !dbg !6105
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6112

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6105
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6095, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata i8* %18, metadata !6102, metadata !DIExpression()), !dbg !6105
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6113
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6114
  call void @llvm.dbg.value(metadata i32 %25, metadata !6103, metadata !DIExpression()), !dbg !6115
  %26 = icmp ult i32 %25, 10, !dbg !6116
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6117
  %28 = add i32 %27, %25, !dbg !6115
  %29 = trunc i32 %28 to i8, !dbg !6117
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6118
  call void @llvm.dbg.value(metadata i8* %30, metadata !6102, metadata !DIExpression()), !dbg !6105
  store i8 %29, i8* %30, align 1, !dbg !6119
  call void @llvm.dbg.value(metadata i64 %22, metadata !6095, metadata !DIExpression()), !dbg !6105
  %31 = icmp uge i64 %19, %15, !dbg !6120
  %32 = icmp ugt i8* %30, %2, !dbg !6121
  %33 = and i1 %31, %32, !dbg !6121
  br i1 %33, label %17, label %34, !dbg !6122, !llvm.loop !6123

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6125
  %36 = load i24, i24* %35, align 4, !dbg !6125
  %37 = and i24 %36, 32, !dbg !6125
  %38 = icmp eq i24 %37, 0, !dbg !6125
  br i1 %38, label %44, label %39, !dbg !6127

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6128

40:                                               ; preds = %39
  br label %41, !dbg !6130

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6134
  store i24 %43, i24* %35, align 4, !dbg !6134
  br label %44, !dbg !6135

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6136 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6142, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i8* %1, metadata !6143, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 %2, metadata !6144, metadata !DIExpression()), !dbg !6145
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6146
  %5 = load i24, i24* %4, align 4, !dbg !6146
  %6 = lshr i24 %5, 11, !dbg !6146
  %7 = and i24 %6, 15, !dbg !6146
  %8 = zext i24 %7 to i32, !dbg !6146
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6147

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6148
  store i32 %2, i32* %10, align 4, !dbg !6150
  br label %28, !dbg !6151

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6152
  store i8 %12, i8* %1, align 1, !dbg !6153
  br label %28, !dbg !6154

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6155
  %15 = bitcast i8* %1 to i16*, !dbg !6156
  store i16 %14, i16* %15, align 2, !dbg !6157
  br label %28, !dbg !6158

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6159
  store i32 %2, i32* %17, align 4, !dbg !6160
  br label %28, !dbg !6161

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6162
  %20 = bitcast i8* %1 to i64*, !dbg !6163
  store i64 %19, i64* %20, align 8, !dbg !6164
  br label %28, !dbg !6165

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6166
  %23 = bitcast i8* %1 to i64*, !dbg !6167
  store i64 %22, i64* %23, align 8, !dbg !6168
  br label %28, !dbg !6169

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6170
  store i32 %2, i32* %25, align 4, !dbg !6171
  br label %28, !dbg !6172

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6173
  store i32 %2, i32* %27, align 4, !dbg !6174
  br label %28, !dbg !6175

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6176
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6180, metadata !DIExpression()), !dbg !6181
  %2 = add i32 %0, -65, !dbg !6182
  %3 = icmp ult i32 %2, 26, !dbg !6183
  %4 = zext i1 %3 to i32, !dbg !6183
  ret i32 %4, !dbg !6184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6185 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6189, metadata !DIExpression()), !dbg !6190
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6191

2:                                                ; preds = %1
  br label %4, !dbg !6192

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6194

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6195
  ret i32 %5, !dbg !6196
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #16 !dbg !6197 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6199, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.value(metadata i8* %1, metadata !6200, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.value(metadata i8 1, metadata !6201, metadata !DIExpression()), !dbg !6202
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6203

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6201, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.value(metadata i8* %5, metadata !6200, metadata !DIExpression()), !dbg !6202
  %6 = load i8, i8* %5, align 1, !dbg !6204
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6206

7:                                                ; preds = %4
  br label %11, !dbg !6207

8:                                                ; preds = %4
  br label %11, !dbg !6209

9:                                                ; preds = %4
  br label %11, !dbg !6210

10:                                               ; preds = %4
  br label %11, !dbg !6211

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6212
  %14 = or i24 %13, %12, !dbg !6212
  store i24 %14, i24* %3, align 4, !dbg !6212
  call void @llvm.dbg.value(metadata i8 poison, metadata !6201, metadata !DIExpression()), !dbg !6202
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6200, metadata !DIExpression()), !dbg !6202
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6201, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.value(metadata i8* %15, metadata !6200, metadata !DIExpression()), !dbg !6202
  %17 = load i24, i24* %3, align 4, !dbg !6213
  %18 = and i24 %17, 68, !dbg !6215
  %19 = icmp eq i24 %18, 68, !dbg !6215
  br i1 %19, label %20, label %22, !dbg !6215

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6216
  store i24 %21, i24* %3, align 4, !dbg !6216
  br label %22, !dbg !6218

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6219
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #16 !dbg !6220 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6222, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i8* %1, metadata !6223, metadata !DIExpression()), !dbg !6226
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6227
  %5 = load i24, i24* %4, align 4, !dbg !6228
  %6 = or i24 %5, 128, !dbg !6228
  store i24 %6, i24* %4, align 4, !dbg !6228
  call void @llvm.dbg.value(metadata i8* %1, metadata !6223, metadata !DIExpression()), !dbg !6226
  %7 = load i8, i8* %1, align 1, !dbg !6229
  %8 = icmp eq i8 %7, 42, !dbg !6231
  br i1 %8, label %9, label %12, !dbg !6232

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6233
  store i24 %10, i24* %4, align 4, !dbg !6233
  call void @llvm.dbg.value(metadata i8* %1, metadata !6223, metadata !DIExpression()), !dbg !6226
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6235
  call void @llvm.dbg.value(metadata i8* %11, metadata !6223, metadata !DIExpression()), !dbg !6226
  store i8* %11, i8** %3, align 4, !dbg !6235
  br label %29, !dbg !6236

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6224, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i8** %3, metadata !6223, metadata !DIExpression(DW_OP_deref)), !dbg !6226
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !6237
  call void @llvm.dbg.value(metadata i32 %13, metadata !6225, metadata !DIExpression()), !dbg !6226
  %14 = load i8*, i8** %3, align 4, !dbg !6238
  call void @llvm.dbg.value(metadata i8* %14, metadata !6223, metadata !DIExpression()), !dbg !6226
  %15 = icmp eq i8* %14, %1, !dbg !6240
  br i1 %15, label %29, label %16, !dbg !6241

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6242
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6244
  store i32 %13, i32* %18, align 4, !dbg !6245
  %19 = lshr i32 %13, 31, !dbg !6246
  %20 = lshr i24 %17, 1, !dbg !6247
  %21 = and i24 %20, 1, !dbg !6247
  %22 = zext i24 %21 to i32, !dbg !6247
  %23 = or i32 %19, %22, !dbg !6247
  %24 = trunc i32 %23 to i24, !dbg !6247
  %25 = shl nuw nsw i24 %24, 1, !dbg !6247
  %26 = and i24 %17, -131, !dbg !6247
  %27 = or i24 %26, 128, !dbg !6247
  %28 = or i24 %25, %27, !dbg !6247
  store i24 %28, i24* %4, align 4, !dbg !6247
  br label %29, !dbg !6248

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6226
  ret i8* %30, !dbg !6249
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #16 !dbg !6250 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6252, metadata !DIExpression()), !dbg !6255
  call void @llvm.dbg.value(metadata i8* %1, metadata !6253, metadata !DIExpression()), !dbg !6255
  %4 = load i8, i8* %1, align 1, !dbg !6256
  %5 = icmp eq i8 %4, 46, !dbg !6257
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6258
  %7 = load i24, i24* %6, align 4, !dbg !6259
  %8 = select i1 %5, i24 512, i24 0, !dbg !6259
  %9 = and i24 %7, -513, !dbg !6259
  %10 = or i24 %9, %8, !dbg !6259
  store i24 %10, i24* %6, align 4, !dbg !6259
  br i1 %5, label %11, label %32, !dbg !6260

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6253, metadata !DIExpression()), !dbg !6255
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6261
  call void @llvm.dbg.value(metadata i8* %12, metadata !6253, metadata !DIExpression()), !dbg !6255
  store i8* %12, i8** %3, align 4, !dbg !6261
  %13 = load i8, i8* %12, align 1, !dbg !6262
  %14 = icmp eq i8 %13, 42, !dbg !6264
  br i1 %14, label %15, label %18, !dbg !6265

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6266
  store i24 %16, i24* %6, align 4, !dbg !6266
  call void @llvm.dbg.value(metadata i8* %12, metadata !6253, metadata !DIExpression()), !dbg !6255
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6268
  call void @llvm.dbg.value(metadata i8* %17, metadata !6253, metadata !DIExpression()), !dbg !6255
  store i8* %17, i8** %3, align 4, !dbg !6268
  br label %32, !dbg !6269

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6253, metadata !DIExpression(DW_OP_deref)), !dbg !6255
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !6270
  call void @llvm.dbg.value(metadata i32 %19, metadata !6254, metadata !DIExpression()), !dbg !6255
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6271
  store i32 %19, i32* %20, align 4, !dbg !6272
  %21 = lshr i32 %19, 31, !dbg !6273
  %22 = load i24, i24* %6, align 4, !dbg !6274
  %23 = lshr i24 %22, 1, !dbg !6274
  %24 = and i24 %23, 1, !dbg !6274
  %25 = zext i24 %24 to i32, !dbg !6274
  %26 = or i32 %21, %25, !dbg !6274
  %27 = trunc i32 %26 to i24, !dbg !6274
  %28 = shl nuw nsw i24 %27, 1, !dbg !6274
  %29 = and i24 %22, -3, !dbg !6274
  %30 = or i24 %28, %29, !dbg !6274
  store i24 %30, i24* %6, align 4, !dbg !6274
  %31 = load i8*, i8** %3, align 4, !dbg !6275
  call void @llvm.dbg.value(metadata i8* %31, metadata !6253, metadata !DIExpression()), !dbg !6255
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6255
  ret i8* %33, !dbg !6276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !6277 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6279, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.value(metadata i8* %1, metadata !6280, metadata !DIExpression()), !dbg !6281
  %3 = load i8, i8* %1, align 1, !dbg !6282
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6283

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6284
  call void @llvm.dbg.value(metadata i8* %5, metadata !6280, metadata !DIExpression()), !dbg !6281
  %6 = load i8, i8* %5, align 1, !dbg !6287
  %7 = icmp eq i8 %6, 104, !dbg !6288
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6289
  %9 = load i24, i24* %8, align 4, !dbg !6289
  %10 = and i24 %9, -30721, !dbg !6289
  br i1 %7, label %11, label %14, !dbg !6290

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6291
  store i24 %12, i24* %8, align 4, !dbg !6291
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6293
  call void @llvm.dbg.value(metadata i8* %13, metadata !6280, metadata !DIExpression()), !dbg !6281
  br label %56, !dbg !6294

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6295
  store i24 %15, i24* %8, align 4, !dbg !6295
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6297
  call void @llvm.dbg.value(metadata i8* %17, metadata !6280, metadata !DIExpression()), !dbg !6281
  %18 = load i8, i8* %17, align 1, !dbg !6299
  %19 = icmp eq i8 %18, 108, !dbg !6300
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6301
  %21 = load i24, i24* %20, align 4, !dbg !6301
  %22 = and i24 %21, -30721, !dbg !6301
  br i1 %19, label %23, label %26, !dbg !6302

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6303
  store i24 %24, i24* %20, align 4, !dbg !6303
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6305
  call void @llvm.dbg.value(metadata i8* %25, metadata !6280, metadata !DIExpression()), !dbg !6281
  br label %56, !dbg !6306

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6307
  store i24 %27, i24* %20, align 4, !dbg !6307
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6309
  %30 = load i24, i24* %29, align 4, !dbg !6310
  %31 = and i24 %30, -30721, !dbg !6310
  %32 = or i24 %31, 10240, !dbg !6310
  store i24 %32, i24* %29, align 4, !dbg !6310
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6311
  call void @llvm.dbg.value(metadata i8* %33, metadata !6280, metadata !DIExpression()), !dbg !6281
  br label %56, !dbg !6312

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6313
  %36 = load i24, i24* %35, align 4, !dbg !6314
  %37 = and i24 %36, -30721, !dbg !6314
  %38 = or i24 %37, 12288, !dbg !6314
  store i24 %38, i24* %35, align 4, !dbg !6314
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6315
  call void @llvm.dbg.value(metadata i8* %39, metadata !6280, metadata !DIExpression()), !dbg !6281
  br label %56, !dbg !6316

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6317
  %42 = load i24, i24* %41, align 4, !dbg !6318
  %43 = and i24 %42, -30721, !dbg !6318
  %44 = or i24 %43, 14336, !dbg !6318
  store i24 %44, i24* %41, align 4, !dbg !6318
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6319
  call void @llvm.dbg.value(metadata i8* %45, metadata !6280, metadata !DIExpression()), !dbg !6281
  br label %56, !dbg !6320

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6321
  %48 = load i24, i24* %47, align 4, !dbg !6322
  %49 = and i24 %48, -30723, !dbg !6322
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6323
  call void @llvm.dbg.value(metadata i8* %50, metadata !6280, metadata !DIExpression()), !dbg !6281
  %51 = or i24 %49, 16386, !dbg !6324
  store i24 %51, i24* %47, align 4, !dbg !6324
  br label %56, !dbg !6325

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6326
  %54 = load i24, i24* %53, align 4, !dbg !6327
  %55 = and i24 %54, -30721, !dbg !6327
  store i24 %55, i24* %53, align 4, !dbg !6327
  br label %56, !dbg !6328

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6280, metadata !DIExpression()), !dbg !6281
  ret i8* %57, !dbg !6329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !6330 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6332, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i8* %1, metadata !6333, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i8 0, metadata !6334, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i8* %1, metadata !6333, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6337
  %3 = load i8, i8* %1, align 1, !dbg !6338
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6339
  store i8 %3, i8* %4, align 1, !dbg !6340
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6341

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6342

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6343
  %9 = load i24, i24* %8, align 4, !dbg !6343
  %10 = and i24 %9, -458753, !dbg !6343
  %11 = or i24 %10, %7, !dbg !6343
  call void @llvm.dbg.label(metadata !6335), !dbg !6344
  %12 = and i24 %9, 30720, !dbg !6345
  %13 = icmp eq i24 %12, 16384, !dbg !6345
  %14 = zext i1 %13 to i24, !dbg !6347
  %15 = or i24 %11, %14, !dbg !6347
  %16 = icmp eq i8 %3, 99, !dbg !6348
  br i1 %16, label %17, label %43, !dbg !6350

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6351
  %19 = icmp ne i24 %18, 0, !dbg !6351
  call void @llvm.dbg.value(metadata i1 %19, metadata !6334, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6337
  br label %43, !dbg !6353

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6354
  %22 = load i24, i24* %21, align 4, !dbg !6355
  %23 = and i24 %22, -458753, !dbg !6355
  %24 = or i24 %23, 262144, !dbg !6355
  call void @llvm.dbg.value(metadata i8 1, metadata !6334, metadata !DIExpression()), !dbg !6337
  br label %43, !dbg !6356

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6359
  %27 = load i24, i24* %26, align 4, !dbg !6360
  %28 = and i24 %27, -458753, !dbg !6360
  %29 = or i24 %28, 196608, !dbg !6360
  %30 = and i24 %27, 30720, !dbg !6361
  %31 = icmp eq i24 %30, 16384, !dbg !6361
  br label %43, !dbg !6363

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6364
  %34 = load i24, i24* %33, align 4, !dbg !6365
  %35 = and i24 %34, -458753, !dbg !6365
  %36 = or i24 %35, 196608, !dbg !6365
  %37 = and i24 %34, 30720, !dbg !6366
  %38 = icmp ne i24 %37, 0, !dbg !6366
  br label %43, !dbg !6368

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6369
  %41 = load i24, i24* %40, align 4, !dbg !6370
  %42 = or i24 %41, 1, !dbg !6370
  br label %43, !dbg !6371

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6372
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6373
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6374
  call void @llvm.dbg.value(metadata i8* %48, metadata !6333, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i8 poison, metadata !6334, metadata !DIExpression()), !dbg !6337
  %49 = lshr i24 %44, 1, !dbg !6372
  %50 = and i24 %49, 1, !dbg !6372
  %51 = zext i24 %50 to i32, !dbg !6372
  %52 = or i32 %51, %47, !dbg !6372
  %53 = trunc i32 %52 to i24, !dbg !6372
  %54 = shl nuw nsw i24 %53, 1, !dbg !6372
  %55 = and i24 %44, -3, !dbg !6372
  %56 = or i24 %54, %55, !dbg !6372
  store i24 %56, i24* %46, align 4, !dbg !6372
  ret i8* %48, !dbg !6375
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #16 !dbg !6376 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6380, metadata !DIExpression()), !dbg !6383
  %2 = load i8*, i8** %0, align 4, !dbg !6384
  call void @llvm.dbg.value(metadata i8* %2, metadata !6381, metadata !DIExpression()), !dbg !6383
  call void @llvm.dbg.value(metadata i32 0, metadata !6382, metadata !DIExpression()), !dbg !6383
  %3 = load i8, i8* %2, align 1, !dbg !6385
  %4 = zext i8 %3 to i32, !dbg !6386
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !6387
  %6 = icmp eq i32 %5, 0, !dbg !6388
  br i1 %6, label %19, label %7, !dbg !6388

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6382, metadata !DIExpression()), !dbg !6383
  call void @llvm.dbg.value(metadata i8* %10, metadata !6381, metadata !DIExpression()), !dbg !6383
  %11 = mul i32 %9, 10, !dbg !6389
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6391
  call void @llvm.dbg.value(metadata i8* %12, metadata !6381, metadata !DIExpression()), !dbg !6383
  %13 = add i32 %11, -48, !dbg !6392
  %14 = add i32 %13, %8, !dbg !6393
  call void @llvm.dbg.value(metadata i32 %14, metadata !6382, metadata !DIExpression()), !dbg !6383
  %15 = load i8, i8* %12, align 1, !dbg !6385
  %16 = zext i8 %15 to i32, !dbg !6386
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !6387
  %18 = icmp eq i32 %17, 0, !dbg !6388
  br i1 %18, label %19, label %7, !dbg !6388, !llvm.loop !6394

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6383
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6383
  store i8* %20, i8** %0, align 4, !dbg !6396
  ret i32 %21, !dbg !6397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6400, metadata !DIExpression()), !dbg !6401
  %2 = add i32 %0, -48, !dbg !6402
  %3 = icmp ult i32 %2, 10, !dbg !6403
  %4 = zext i1 %3 to i32, !dbg !6403
  ret i32 %4, !dbg !6404
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6405 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #26, !dbg !6407, !srcloc !6408
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #26, !dbg !6409, !srcloc !6410
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #26, !dbg !6411, !srcloc !6412
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #26, !dbg !6413, !srcloc !6414
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #26, !dbg !6415, !srcloc !6416
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #26, !dbg !6417, !srcloc !6418
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #26, !dbg !6419, !srcloc !6420
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #26, !dbg !6421, !srcloc !6422
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #26, !dbg !6423, !srcloc !6424
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #26, !dbg !6425, !srcloc !6426
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #26, !dbg !6427, !srcloc !6428
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #26, !dbg !6429, !srcloc !6430
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #26, !dbg !6431, !srcloc !6432
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #26, !dbg !6433, !srcloc !6434
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #26, !dbg !6435, !srcloc !6436
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #26, !dbg !6437, !srcloc !6438
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #26, !dbg !6439, !srcloc !6440
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #26, !dbg !6441, !srcloc !6442
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #26, !dbg !6443, !srcloc !6444
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #26, !dbg !6445, !srcloc !6446
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #26, !dbg !6447, !srcloc !6448
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #26, !dbg !6449, !srcloc !6450
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #26, !dbg !6451, !srcloc !6452
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #26, !dbg !6453, !srcloc !6454
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #26, !dbg !6455, !srcloc !6456
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #26, !dbg !6457, !srcloc !6458
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #26, !dbg !6459, !srcloc !6460
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #26, !dbg !6461, !srcloc !6462
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #26, !dbg !6463, !srcloc !6464
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #26, !dbg !6465, !srcloc !6466
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #26, !dbg !6467, !srcloc !6468
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #26, !dbg !6469, !srcloc !6470
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #26, !dbg !6471, !srcloc !6472
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #26, !dbg !6473, !srcloc !6474
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6475, !srcloc !6476
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #26, !dbg !6477, !srcloc !6478
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #26, !dbg !6479, !srcloc !6480
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6481, !srcloc !6482
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #26, !dbg !6483, !srcloc !6484
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #26, !dbg !6485, !srcloc !6486
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #26, !dbg !6487, !srcloc !6488
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6489, !srcloc !6490
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #26, !dbg !6491, !srcloc !6492
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #26, !dbg !6493, !srcloc !6494
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #26, !dbg !6495, !srcloc !6496
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #26, !dbg !6497, !srcloc !6498
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #26, !dbg !6499, !srcloc !6500
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #26, !dbg !6501, !srcloc !6502
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #26, !dbg !6503, !srcloc !6504
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6505, !srcloc !6506
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #26, !dbg !6507, !srcloc !6508
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #26, !dbg !6509, !srcloc !6510
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #26, !dbg !6511, !srcloc !6512
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #26, !dbg !6513, !srcloc !6514
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #26, !dbg !6515, !srcloc !6516
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #26, !dbg !6517, !srcloc !6518
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #26, !dbg !6519, !srcloc !6520
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #26, !dbg !6521, !srcloc !6522
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #26, !dbg !6523, !srcloc !6524
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #26, !dbg !6525, !srcloc !6526
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #26, !dbg !6527, !srcloc !6528
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #26, !dbg !6529, !srcloc !6530
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #26, !dbg !6531, !srcloc !6532
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #26, !dbg !6533, !srcloc !6534
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #26, !dbg !6535, !srcloc !6536
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #26, !dbg !6537, !srcloc !6538
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #26, !dbg !6539, !srcloc !6540
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #26, !dbg !6541, !srcloc !6542
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #26, !dbg !6543, !srcloc !6544
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #26, !dbg !6545, !srcloc !6546
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #26, !dbg !6547, !srcloc !6548
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #26, !dbg !6549, !srcloc !6550
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #26, !dbg !6551, !srcloc !6552
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #26, !dbg !6553, !srcloc !6554
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #26, !dbg !6555, !srcloc !6556
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #26, !dbg !6557, !srcloc !6558
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #26, !dbg !6559, !srcloc !6560
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #26, !dbg !6561, !srcloc !6562
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #26, !dbg !6563, !srcloc !6564
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #26, !dbg !6565, !srcloc !6566
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #26, !dbg !6567, !srcloc !6568
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #26, !dbg !6569, !srcloc !6570
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #26, !dbg !6571, !srcloc !6572
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #26, !dbg !6573, !srcloc !6574
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #26, !dbg !6575, !srcloc !6576
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #26, !dbg !6577, !srcloc !6578
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #26, !dbg !6579, !srcloc !6580
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #26, !dbg !6581, !srcloc !6582
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #26, !dbg !6583, !srcloc !6584
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #26, !dbg !6585, !srcloc !6586
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #26, !dbg !6587, !srcloc !6588
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #26, !dbg !6589, !srcloc !6590
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #26, !dbg !6591, !srcloc !6592
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #26, !dbg !6593, !srcloc !6594
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #26, !dbg !6595, !srcloc !6596
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #26, !dbg !6597, !srcloc !6598
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #26, !dbg !6599, !srcloc !6600
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #26, !dbg !6601, !srcloc !6602
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #26, !dbg !6603, !srcloc !6604
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #26, !dbg !6605, !srcloc !6606
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #26, !dbg !6607, !srcloc !6608
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #26, !dbg !6609, !srcloc !6610
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #26, !dbg !6611, !srcloc !6612
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #26, !dbg !6613, !srcloc !6614
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #26, !dbg !6615, !srcloc !6616
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #26, !dbg !6617, !srcloc !6618
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #26, !dbg !6619, !srcloc !6620
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #26, !dbg !6621, !srcloc !6622
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #26, !dbg !6623, !srcloc !6624
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #26, !dbg !6625, !srcloc !6626
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #26, !dbg !6627, !srcloc !6628
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #26, !dbg !6629, !srcloc !6630
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #26, !dbg !6631, !srcloc !6632
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #26, !dbg !6633, !srcloc !6634
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #26, !dbg !6635, !srcloc !6636
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #26, !dbg !6637, !srcloc !6638
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #26, !dbg !6639, !srcloc !6640
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #26, !dbg !6641, !srcloc !6642
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #26, !dbg !6643, !srcloc !6644
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #26, !dbg !6645, !srcloc !6646
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #26, !dbg !6647, !srcloc !6648
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #26, !dbg !6649, !srcloc !6650
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #26, !dbg !6651, !srcloc !6652
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #26, !dbg !6653, !srcloc !6654
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #26, !dbg !6655, !srcloc !6656
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #26, !dbg !6657, !srcloc !6658
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #26, !dbg !6659, !srcloc !6660
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #26, !dbg !6661, !srcloc !6662
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #26, !dbg !6663, !srcloc !6664
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #26, !dbg !6665, !srcloc !6666
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #26, !dbg !6667, !srcloc !6668
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #26, !dbg !6669, !srcloc !6670
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #26, !dbg !6671, !srcloc !6672
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #26, !dbg !6673, !srcloc !6674
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #26, !dbg !6675, !srcloc !6676
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #26, !dbg !6677, !srcloc !6678
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #26, !dbg !6679, !srcloc !6680
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #26, !dbg !6681, !srcloc !6682
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #26, !dbg !6683, !srcloc !6684
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #26, !dbg !6685, !srcloc !6686
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #26, !dbg !6687, !srcloc !6688
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #26, !dbg !6689, !srcloc !6690
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #26, !dbg !6691, !srcloc !6692
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #26, !dbg !6693, !srcloc !6694
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #26, !dbg !6695, !srcloc !6696
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #26, !dbg !6697, !srcloc !6698
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #26, !dbg !6699, !srcloc !6700
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #26, !dbg !6701, !srcloc !6702
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #26, !dbg !6703, !srcloc !6704
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #26, !dbg !6705, !srcloc !6706
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #26, !dbg !6707, !srcloc !6708
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #26, !dbg !6709, !srcloc !6710
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !6711, !srcloc !6712
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #26, !dbg !6713, !srcloc !6714
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #26, !dbg !6715, !srcloc !6716
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #26, !dbg !6717, !srcloc !6718
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #26, !dbg !6719, !srcloc !6720
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #26, !dbg !6721, !srcloc !6722
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #26, !dbg !6723, !srcloc !6724
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #26, !dbg !6725, !srcloc !6726
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #26, !dbg !6727, !srcloc !6728
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #26, !dbg !6729, !srcloc !6730
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #26, !dbg !6731, !srcloc !6732
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #26, !dbg !6733, !srcloc !6734
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #26, !dbg !6735, !srcloc !6736
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #26, !dbg !6737, !srcloc !6738
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #26, !dbg !6739, !srcloc !6740
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #26, !dbg !6741, !srcloc !6742
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #26, !dbg !6743, !srcloc !6744
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,5\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #26, !dbg !6745, !srcloc !6746
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #26, !dbg !6747, !srcloc !6748
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #26, !dbg !6749, !srcloc !6750
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #26, !dbg !6751, !srcloc !6752
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #26, !dbg !6753, !srcloc !6754
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #26, !dbg !6755, !srcloc !6756
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #26, !dbg !6757, !srcloc !6758
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #26, !dbg !6759, !srcloc !6760
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #26, !dbg !6761, !srcloc !6762
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #26, !dbg !6763, !srcloc !6764
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #26, !dbg !6765, !srcloc !6766
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #26, !dbg !6767, !srcloc !6768
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #26, !dbg !6769, !srcloc !6770
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #26, !dbg !6771, !srcloc !6772
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #26, !dbg !6773, !srcloc !6774
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #26, !dbg !6775, !srcloc !6776
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #26, !dbg !6777, !srcloc !6778
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #26, !dbg !6779, !srcloc !6780
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #26, !dbg !6781, !srcloc !6782
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #26, !dbg !6783, !srcloc !6784
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #26, !dbg !6785, !srcloc !6786
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #26, !dbg !6787, !srcloc !6788
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #26, !dbg !6789, !srcloc !6790
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #26, !dbg !6791, !srcloc !6792
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #26, !dbg !6793, !srcloc !6794
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #26, !dbg !6795, !srcloc !6796
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #26, !dbg !6797, !srcloc !6798
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #26, !dbg !6799, !srcloc !6800
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #26, !dbg !6801, !srcloc !6802
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #26, !dbg !6803, !srcloc !6804
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #26, !dbg !6805, !srcloc !6806
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #26, !dbg !6807, !srcloc !6808
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !6809, !srcloc !6810
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #26, !dbg !6811, !srcloc !6812
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #26, !dbg !6813, !srcloc !6814
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #26, !dbg !6815, !srcloc !6816
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #26, !dbg !6817, !srcloc !6818
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #26, !dbg !6819, !srcloc !6820
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #26, !dbg !6821, !srcloc !6822
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #26, !dbg !6823, !srcloc !6824
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #26, !dbg !6825, !srcloc !6826
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #26, !dbg !6827, !srcloc !6828
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #26, !dbg !6829, !srcloc !6830
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #26, !dbg !6831, !srcloc !6832
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #26, !dbg !6833, !srcloc !6834
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #26, !dbg !6835, !srcloc !6836
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #26, !dbg !6837, !srcloc !6838
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #26, !dbg !6839, !srcloc !6840
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #26, !dbg !6841, !srcloc !6842
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #26, !dbg !6843, !srcloc !6844
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #26, !dbg !6845, !srcloc !6846
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #26, !dbg !6847, !srcloc !6848
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #26, !dbg !6849, !srcloc !6850
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #26, !dbg !6851, !srcloc !6852
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #26, !dbg !6853, !srcloc !6854
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #26, !dbg !6855, !srcloc !6856
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #26, !dbg !6857, !srcloc !6858
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #26, !dbg !6859, !srcloc !6860
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #26, !dbg !6861, !srcloc !6862
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #26, !dbg !6863, !srcloc !6864
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #26, !dbg !6865, !srcloc !6866
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #26, !dbg !6867, !srcloc !6868
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #26, !dbg !6869, !srcloc !6870
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #26, !dbg !6871, !srcloc !6872
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #26, !dbg !6873, !srcloc !6874
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #26, !dbg !6875, !srcloc !6876
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #26, !dbg !6877, !srcloc !6878
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #26, !dbg !6879, !srcloc !6880
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #26, !dbg !6881, !srcloc !6882
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #26, !dbg !6883, !srcloc !6884
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #26, !dbg !6885, !srcloc !6886
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #26, !dbg !6887, !srcloc !6888
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #26, !dbg !6889, !srcloc !6890
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #26, !dbg !6891, !srcloc !6892
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #26, !dbg !6893, !srcloc !6894
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #26, !dbg !6895, !srcloc !6896
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #26, !dbg !6897, !srcloc !6898
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #26, !dbg !6899, !srcloc !6900
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #26, !dbg !6901, !srcloc !6902
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #26, !dbg !6903, !srcloc !6904
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #26, !dbg !6905, !srcloc !6906
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #26, !dbg !6907, !srcloc !6908
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #26, !dbg !6909, !srcloc !6910
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #26, !dbg !6911, !srcloc !6912
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #26, !dbg !6913, !srcloc !6914
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #26, !dbg !6915, !srcloc !6916
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #26, !dbg !6917, !srcloc !6918
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #26, !dbg !6919, !srcloc !6920
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #26, !dbg !6921, !srcloc !6922
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #26, !dbg !6923, !srcloc !6924
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #26, !dbg !6925, !srcloc !6926
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #26, !dbg !6927, !srcloc !6928
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #26, !dbg !6929, !srcloc !6930
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #26, !dbg !6931, !srcloc !6932
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #26, !dbg !6933, !srcloc !6934
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #26, !dbg !6935, !srcloc !6936
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #26, !dbg !6937, !srcloc !6938
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #26, !dbg !6939, !srcloc !6940
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #26, !dbg !6941, !srcloc !6942
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #26, !dbg !6943, !srcloc !6944
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #26, !dbg !6945, !srcloc !6946
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #26, !dbg !6947, !srcloc !6948
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #26, !dbg !6949, !srcloc !6950
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #26, !dbg !6951, !srcloc !6952
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #26, !dbg !6953, !srcloc !6954
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #26, !dbg !6955, !srcloc !6956
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #26, !dbg !6957, !srcloc !6958
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #26, !dbg !6959, !srcloc !6960
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #26, !dbg !6961, !srcloc !6962
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #26, !dbg !6963, !srcloc !6964
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #26, !dbg !6965, !srcloc !6966
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #26, !dbg !6967, !srcloc !6968
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #26, !dbg !6969, !srcloc !6970
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #26, !dbg !6971, !srcloc !6972
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #26, !dbg !6973, !srcloc !6974
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #26, !dbg !6975, !srcloc !6976
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #26, !dbg !6977, !srcloc !6978
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_CHANNEL_NAME\0A\09.equ\09CONFIG_ZBUS_CHANNEL_NAME,1\0A\09.type\09CONFIG_ZBUS_CHANNEL_NAME,%object", ""() #26, !dbg !6979, !srcloc !6980
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_OBSERVER_NAME\0A\09.equ\09CONFIG_ZBUS_OBSERVER_NAME,1\0A\09.type\09CONFIG_ZBUS_OBSERVER_NAME,%object", ""() #26, !dbg !6981, !srcloc !6982
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #26, !dbg !6983, !srcloc !6984
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #26, !dbg !6985, !srcloc !6986
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #26, !dbg !6987, !srcloc !6988
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #26, !dbg !6989, !srcloc !6990
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !6991, !srcloc !6992
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #26, !dbg !6993, !srcloc !6994
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !6995, !srcloc !6996
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !6997, !srcloc !6998
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #26, !dbg !6999, !srcloc !7000
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #26, !dbg !7001, !srcloc !7002
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #26, !dbg !7003, !srcloc !7004
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #26, !dbg !7005, !srcloc !7006
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #26, !dbg !7007, !srcloc !7008
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #26, !dbg !7009, !srcloc !7010
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #26, !dbg !7011, !srcloc !7012
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #26, !dbg !7013, !srcloc !7014
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #26, !dbg !7015, !srcloc !7016
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #26, !dbg !7017, !srcloc !7018
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #26, !dbg !7019, !srcloc !7020
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #26, !dbg !7021, !srcloc !7022
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #26, !dbg !7023, !srcloc !7024
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #26, !dbg !7025, !srcloc !7026
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #26, !dbg !7027, !srcloc !7028
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #26, !dbg !7029, !srcloc !7030
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #26, !dbg !7031, !srcloc !7032
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #26, !dbg !7033, !srcloc !7034
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #26, !dbg !7035, !srcloc !7036
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #26, !dbg !7037, !srcloc !7038
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #26, !dbg !7039, !srcloc !7040
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #26, !dbg !7041, !srcloc !7042
  ret void, !dbg !7043
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7046, metadata !DIExpression()), !dbg !7048
  tail call fastcc void @LL_FLASH_EnableInstCache() #27, !dbg !7049
  tail call fastcc void @LL_FLASH_EnableDataCache() #27, !dbg !7050
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !7051, !srcloc !7060
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7051
  call void @llvm.dbg.value(metadata i32 %3, metadata !7057, metadata !DIExpression()) #26, !dbg !7061
  call void @llvm.dbg.value(metadata i32 undef, metadata !7058, metadata !DIExpression()) #26, !dbg !7061
  call void @llvm.dbg.value(metadata i32 %3, metadata !7047, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 %3, metadata !7062, metadata !DIExpression()) #26, !dbg !7067
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !7069, !srcloc !7070
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7071
  ret i32 0, !dbg !7072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #17 !dbg !7073 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7075
  %2 = or i32 %1, 512, !dbg !7075
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7075
  ret void, !dbg !7076
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #17 !dbg !7077 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7078
  %2 = or i32 %1, 1024, !dbg !7078
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7078
  ret void, !dbg !7079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !7080 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7082, metadata !DIExpression()), !dbg !7083
  ret i32 0, !dbg !7084
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7085 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7088, metadata !DIExpression()), !dbg !7096
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7097
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7097
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7089, metadata !DIExpression()), !dbg !7098
  call void @llvm.va_start(i8* nonnull %3), !dbg !7099
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7100
  %5 = load i32, i32* %4, align 4, !dbg !7100
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7100
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #28, !dbg !7100
  call void @llvm.va_end(i8* nonnull %3), !dbg !7101
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7102
  ret void, !dbg !7102
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7103 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7108, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata i8* %0, metadata !7107, metadata !DIExpression()), !dbg !7109
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #28, !dbg !7110
  ret void, !dbg !7111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7116, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i8* %1, metadata !7117, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i32 %2, metadata !7118, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i8* %1, metadata !7119, metadata !DIExpression()), !dbg !7120
  %4 = icmp eq i32 %2, 0, !dbg !7121
  br i1 %4, label %14, label %5, !dbg !7122

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #27, !dbg !7120
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7122

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7119, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i32 %10, metadata !7118, metadata !DIExpression()), !dbg !7120
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i32 noundef %7) #28, !dbg !7123
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #27, !dbg !7125
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7126
  call void @llvm.dbg.value(metadata i32 %11, metadata !7118, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i8* %12, metadata !7119, metadata !DIExpression()), !dbg !7120
  br i1 %13, label %14, label %8, !dbg !7126, !llvm.loop !7127

14:                                               ; preds = %8, %3
  ret void, !dbg !7129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !7130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7135, metadata !DIExpression()), !dbg !7136
  %2 = add i32 %0, -1, !dbg !7137
  %3 = icmp ult i32 %2, 4, !dbg !7137
  %4 = shl i32 %2, 3, !dbg !7137
  %5 = lshr i32 1145657157, %4, !dbg !7137
  %6 = trunc i32 %5 to i8, !dbg !7137
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7137
  ret i8 %7, !dbg !7138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7139 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7143, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata i32 %1, metadata !7144, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata i32 0, metadata !7145, metadata !DIExpression()), !dbg !7155
  br label %4, !dbg !7156

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.31, i32 0, i32 0)) #28, !dbg !7157
  call void @llvm.dbg.value(metadata i32 0, metadata !7147, metadata !DIExpression()), !dbg !7158
  br label %16, !dbg !7159

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7145, metadata !DIExpression()), !dbg !7155
  %6 = icmp ult i32 %5, %1, !dbg !7160
  br i1 %6, label %7, label %11, !dbg !7164

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7165
  %9 = load i8, i8* %8, align 1, !dbg !7165
  %10 = zext i8 %9 to i32, !dbg !7167
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.32, i32 0, i32 0), i32 noundef %10) #28, !dbg !7168
  br label %12, !dbg !7169

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.33, i32 0, i32 0)) #28, !dbg !7170
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7172
  call void @llvm.dbg.value(metadata i32 %13, metadata !7145, metadata !DIExpression()), !dbg !7155
  %14 = icmp eq i32 %13, 8, !dbg !7173
  br i1 %14, label %3, label %4, !dbg !7156, !llvm.loop !7174

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.34, i32 0, i32 0)) #28, !dbg !7176
  ret void, !dbg !7177

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7147, metadata !DIExpression()), !dbg !7158
  %18 = icmp ult i32 %17, %1, !dbg !7178
  br i1 %18, label %19, label %26, !dbg !7179

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7180
  %21 = load i8, i8* %20, align 1, !dbg !7180
  call void @llvm.dbg.value(metadata i8 %21, metadata !7149, metadata !DIExpression()), !dbg !7181
  %22 = zext i8 %21 to i32, !dbg !7182
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #27, !dbg !7183
  %24 = icmp eq i32 %23, 0, !dbg !7184
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7183
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.35, i32 0, i32 0), i32 noundef %25) #28, !dbg !7185
  br label %27, !dbg !7186

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.36, i32 0, i32 0)) #28, !dbg !7187
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7189
  call void @llvm.dbg.value(metadata i32 %28, metadata !7147, metadata !DIExpression()), !dbg !7158
  %29 = icmp eq i32 %28, 8, !dbg !7190
  br i1 %29, label %15, label %16, !dbg !7159, !llvm.loop !7191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7193 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7195, metadata !DIExpression()), !dbg !7196
  %2 = add i32 %0, -32, !dbg !7197
  %3 = icmp ult i32 %2, 95, !dbg !7197
  %4 = zext i1 %3 to i32, !dbg !7197
  ret i32 %4, !dbg !7198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7248, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7249, metadata !DIExpression()), !dbg !7250
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7251
  br i1 %3, label %5, label %4, !dbg !7253

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #27, !dbg !7254
  br label %5, !dbg !7256

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #28, !dbg !7257
  ret void, !dbg !7258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7259 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7263, metadata !DIExpression()), !dbg !7264
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7265
  %3 = load i32, i32* %2, align 4, !dbg !7265
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7265
  %5 = load i32, i32* %4, align 4, !dbg !7265
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7265
  %7 = load i32, i32* %6, align 4, !dbg !7265
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.37, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #28, !dbg !7265
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7270
  %9 = load i32, i32* %8, align 4, !dbg !7270
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7270
  %11 = load i32, i32* %10, align 4, !dbg !7270
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7270
  %13 = load i32, i32* %12, align 4, !dbg !7270
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.38, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #28, !dbg !7270
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7275
  %15 = load i32, i32* %14, align 4, !dbg !7275
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #28, !dbg !7275
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7280
  %17 = load i32, i32* %16, align 4, !dbg !7280
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.40, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #28, !dbg !7280
  ret void, !dbg !7285
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7286 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7303, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7304, metadata !DIExpression()), !dbg !7306
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7307
  %4 = load i32, i32* %3, align 4, !dbg !7307
  call void @llvm.dbg.value(metadata i32 %4, metadata !7305, metadata !DIExpression()), !dbg !7306
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !7308
  ret void, !dbg !7309
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !7310 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7314, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.value(metadata i8* %0, metadata !7315, metadata !DIExpression()), !dbg !7317
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7318
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #26, !dbg !7318
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7316, metadata !DIExpression()), !dbg !7319
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7319
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7320
  %5 = bitcast i8* %4 to i32*, !dbg !7320
  %6 = load i32, i32* %5, align 4, !dbg !7320
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7321
  store i32 %6, i32* %7, align 4, !dbg !7322
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !7323
  unreachable, !dbg !7324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7328, metadata !DIExpression()), !dbg !7329
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !7330
  ret void, !dbg !7331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7336, metadata !DIExpression()), !dbg !7337
  %2 = icmp sgt i32 %0, -1, !dbg !7338
  br i1 %2, label %3, label %8, !dbg !7340

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7341, !srcloc !7343
  %4 = and i32 %0, 31, !dbg !7344
  %5 = shl nuw i32 1, %4, !dbg !7345
  %6 = lshr i32 %0, 5, !dbg !7346
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7347
  store volatile i32 %5, i32* %7, align 4, !dbg !7348
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7349, !srcloc !7350
  br label %8, !dbg !7351

8:                                                ; preds = %3, %1
  ret void, !dbg !7352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7355, metadata !DIExpression()), !dbg !7356
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !7357
  ret void, !dbg !7358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7361, metadata !DIExpression()), !dbg !7362
  %2 = icmp sgt i32 %0, -1, !dbg !7363
  br i1 %2, label %3, label %8, !dbg !7365

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7366
  %5 = shl nuw i32 1, %4, !dbg !7368
  %6 = lshr i32 %0, 5, !dbg !7369
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7370
  store volatile i32 %5, i32* %7, align 4, !dbg !7371
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7372, !srcloc !7376
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7377, !srcloc !7380
  br label %8, !dbg !7381

8:                                                ; preds = %3, %1
  ret void, !dbg !7382
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #18 !dbg !7383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7387, metadata !DIExpression()), !dbg !7388
  %2 = lshr i32 %0, 5, !dbg !7389
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7390
  %4 = load volatile i32, i32* %3, align 4, !dbg !7390
  %5 = and i32 %0, 31, !dbg !7391
  %6 = shl nuw i32 1, %5, !dbg !7391
  %7 = and i32 %4, %6, !dbg !7392
  ret i32 %7, !dbg !7393
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !7394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7398, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.value(metadata i32 %1, metadata !7399, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.value(metadata i32 %2, metadata !7400, metadata !DIExpression()), !dbg !7401
  %4 = add i32 %1, 1, !dbg !7402
  call void @llvm.dbg.value(metadata i32 %4, metadata !7399, metadata !DIExpression()), !dbg !7401
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !7405
  ret void, !dbg !7406
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !7407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7411, metadata !DIExpression()), !dbg !7413
  call void @llvm.dbg.value(metadata i32 %1, metadata !7412, metadata !DIExpression()), !dbg !7413
  %3 = trunc i32 %1 to i8, !dbg !7414
  %4 = shl i8 %3, 4, !dbg !7414
  %5 = and i32 %0, 15, !dbg !7416
  %6 = add nsw i32 %5, -4, !dbg !7416
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7416
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7416
  %9 = icmp slt i32 %0, 0, !dbg !7416
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7416
  store volatile i8 %4, i8* %10, align 1, !dbg !7414
  ret void, !dbg !7417
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7418 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7420, metadata !DIExpression()), !dbg !7421
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #28, !dbg !7422
  ret void, !dbg !7423
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7424 {
  tail call void @z_SysNmiOnReset() #28, !dbg !7426
  tail call void @z_arm_int_exit() #28, !dbg !7427
  ret void, !dbg !7428
}

; Function Attrs: optsize
declare !dbg !7429 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7430 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #11 !dbg !7432 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !7434
  tail call fastcc void @z_arm_floating_point_init() #27, !dbg !7435
  tail call void @z_bss_zero() #28, !dbg !7436
  tail call void @z_data_copy() #28, !dbg !7437
  tail call void @z_arm_interrupt_init() #28, !dbg !7438
  tail call void @z_cstart() #30, !dbg !7439
  unreachable, !dbg !7439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7440 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7441
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7442, !srcloc !7445
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7446, !srcloc !7449
  ret void, !dbg !7450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7451 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7452
  %2 = and i32 %1, -15728641, !dbg !7452
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7452
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #26, !dbg !7453, !srcloc !7460
  call void @llvm.dbg.value(metadata i32 %3, metadata !7458, metadata !DIExpression()) #26, !dbg !7461
  %4 = and i32 %3, -5, !dbg !7462
  call void @llvm.dbg.value(metadata i32 %4, metadata !7463, metadata !DIExpression()) #26, !dbg !7468
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #26, !dbg !7470, !srcloc !7471
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7472, !srcloc !7449
  ret void, !dbg !7474
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7478, metadata !DIExpression()), !dbg !7479
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7480
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7481
  store i32 %0, i32* %3, align 4, !dbg !7482
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7483
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7484
  store i32 %4, i32* %5, align 4, !dbg !7485
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7486
  %7 = or i32 %6, 268435456, !dbg !7486
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7486
  call void @llvm.dbg.value(metadata i32 0, metadata !7487, metadata !DIExpression()) #26, !dbg !7490
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !7492, !srcloc !7493
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7494
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7495
  %10 = load i32, i32* %9, align 4, !dbg !7495
  ret i32 %10, !dbg !7496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !7497 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7607, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7608, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata i8* %2, metadata !7609, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7610, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata i8* %4, metadata !7611, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata i8* %5, metadata !7612, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata i8* %6, metadata !7613, metadata !DIExpression()), !dbg !7615
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7616
  call void @llvm.dbg.value(metadata i8* %8, metadata !7614, metadata !DIExpression()), !dbg !7615
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7617
  %10 = bitcast i8* %9 to i32*, !dbg !7617
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7618
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7619
  %12 = bitcast i8* %8 to i32*, !dbg !7620
  store i32 %11, i32* %12, align 4, !dbg !7621
  %13 = ptrtoint i8* %4 to i32, !dbg !7622
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7623
  %15 = bitcast i8* %14 to i32*, !dbg !7623
  store i32 %13, i32* %15, align 4, !dbg !7624
  %16 = ptrtoint i8* %5 to i32, !dbg !7625
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7626
  %18 = bitcast i8* %17 to i32*, !dbg !7626
  store i32 %16, i32* %18, align 4, !dbg !7627
  %19 = ptrtoint i8* %6 to i32, !dbg !7628
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7629
  %21 = bitcast i8* %20 to i32*, !dbg !7629
  store i32 %19, i32* %21, align 4, !dbg !7630
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7631
  %23 = bitcast i8* %22 to i32*, !dbg !7631
  store i32 16777216, i32* %23, align 4, !dbg !7632
  %24 = ptrtoint i8* %8 to i32, !dbg !7633
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7634
  store i32 %24, i32* %25, align 8, !dbg !7635
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7636
  store i32 0, i32* %26, align 4, !dbg !7637
  ret void, !dbg !7638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !7639 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7644, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.value(metadata i32 %1, metadata !7645, metadata !DIExpression()), !dbg !7650
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7651
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7646, metadata !DIExpression()), !dbg !7650
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7652
  br i1 %4, label %19, label %5, !dbg !7654

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7649, metadata !DIExpression()), !dbg !7650
  %6 = icmp eq i32 %0, -22, !dbg !7655
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7655
  %8 = load i32, i32* %7, align 4, !dbg !7655
  br i1 %6, label %16, label %9, !dbg !7657

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7655
  %11 = icmp ule i32 %10, %0, !dbg !7655
  %12 = icmp ugt i32 %8, %0, !dbg !7655
  %13 = and i1 %12, %11, !dbg !7655
  %14 = icmp ugt i32 %8, %1, !dbg !7655
  %15 = and i1 %14, %13, !dbg !7655
  br i1 %15, label %18, label %19, !dbg !7655

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7655
  br i1 %17, label %18, label %19, !dbg !7657

18:                                               ; preds = %9, %16
  br label %19, !dbg !7658

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7650
  ret i32 %20, !dbg !7660
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #11 !dbg !7661 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7665, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i8* %1, metadata !7666, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7667, metadata !DIExpression()), !dbg !7668
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7669
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #28, !dbg !7670
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #26, !dbg !7671, !srcloc !7672
  unreachable, !dbg !7673
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7674 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7692, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.value(metadata i32 %1, metadata !7693, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.value(metadata i32 %2, metadata !7694, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7695, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.value(metadata i32 0, metadata !7696, metadata !DIExpression()), !dbg !7702
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7703
  %9 = and i32 %8, 511, !dbg !7704
  call void @llvm.dbg.value(metadata i32 %9, metadata !7697, metadata !DIExpression()), !dbg !7702
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #26, !dbg !7705
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #26, !dbg !7705
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7706
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #26, !dbg !7706
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7701, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata i32 0, metadata !7708, metadata !DIExpression()) #26, !dbg !7711
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !7713, !srcloc !7714
  call void @llvm.dbg.value(metadata i8* %6, metadata !7699, metadata !DIExpression(DW_OP_deref)), !dbg !7702
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !7715
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7700, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.value(metadata i8* %5, metadata !7698, metadata !DIExpression(DW_OP_deref)), !dbg !7702
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #27, !dbg !7716
  call void @llvm.dbg.value(metadata i32 %12, metadata !7696, metadata !DIExpression()), !dbg !7702
  %13 = load i8, i8* %5, align 1, !dbg !7717, !range !7719
  call void @llvm.dbg.value(metadata i8 %13, metadata !7698, metadata !DIExpression()), !dbg !7702
  %14 = icmp eq i8 %13, 0, !dbg !7717
  br i1 %14, label %15, label %32, !dbg !7720

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7721
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #28, !dbg !7722
  %18 = load i8, i8* %6, align 1, !dbg !7723, !range !7719
  call void @llvm.dbg.value(metadata i8 %18, metadata !7699, metadata !DIExpression()), !dbg !7702
  %19 = icmp eq i8 %18, 0, !dbg !7723
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7725
  %21 = load i32, i32* %20, align 4, !dbg !7725
  br i1 %19, label %27, label %22, !dbg !7726

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7727
  %24 = icmp eq i32 %23, 0, !dbg !7730
  br i1 %24, label %25, label %31, !dbg !7731

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7732
  br label %29, !dbg !7734

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7735
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7725
  br label %31, !dbg !7737

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #28, !dbg !7737
  br label %32, !dbg !7738

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #26, !dbg !7738
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #26, !dbg !7738
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #26, !dbg !7738
  ret void, !dbg !7738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7744, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata i32 %1, metadata !7745, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata i32 %2, metadata !7746, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata i8* %3, metadata !7747, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata i8 0, metadata !7748, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7749, metadata !DIExpression()), !dbg !7750
  store i8 0, i8* %3, align 1, !dbg !7751
  %5 = icmp ugt i32 %2, -16777217, !dbg !7752
  br i1 %5, label %6, label %17, !dbg !7754

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7755
  %8 = icmp eq i32 %7, 8, !dbg !7755
  br i1 %8, label %9, label %10, !dbg !7755

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.64, i32 0, i32 0), i32 noundef 69) #28, !dbg !7757
  br label %17, !dbg !7763

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7764
  %12 = icmp eq i32 %11, 0, !dbg !7764
  br i1 %12, label %13, label %14, !dbg !7765

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7749, metadata !DIExpression()), !dbg !7750
  store i8 1, i8* %3, align 1, !dbg !7768
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7750
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7749, metadata !DIExpression()), !dbg !7750
  br label %17, !dbg !7771

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7750
  ret %struct.__esf* %18, !dbg !7772
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7773 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7777, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata i32 %1, metadata !7778, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata i8* %2, metadata !7779, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata i32 0, metadata !7780, metadata !DIExpression()), !dbg !7781
  store i8 0, i8* %2, align 1, !dbg !7782
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7783

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !7784
  call void @llvm.dbg.value(metadata i32 %5, metadata !7780, metadata !DIExpression()), !dbg !7781
  br label %12, !dbg !7786

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !7787
  call void @llvm.dbg.value(metadata i32 %7, metadata !7780, metadata !DIExpression()), !dbg !7781
  br label %12, !dbg !7788

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !7789
  call void @llvm.dbg.value(metadata i32 0, metadata !7780, metadata !DIExpression()), !dbg !7781
  br label %12, !dbg !7790

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !7791
  call void @llvm.dbg.value(metadata i32 0, metadata !7780, metadata !DIExpression()), !dbg !7781
  br label %12, !dbg !7792

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !7793
  br label %12, !dbg !7794

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #27, !dbg !7795
  br label %12, !dbg !7796

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7781
  call void @llvm.dbg.value(metadata i32 %13, metadata !7780, metadata !DIExpression()), !dbg !7781
  ret i32 %13, !dbg !7797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7798 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7802, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i8* %1, metadata !7803, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i32 0, metadata !7804, metadata !DIExpression()), !dbg !7805
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.59, i32 0, i32 0), i32 noundef 69) #28, !dbg !7806
  store i8 0, i8* %1, align 1, !dbg !7811
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7812
  %4 = and i32 %3, 2, !dbg !7814
  %5 = icmp eq i32 %4, 0, !dbg !7815
  br i1 %5, label %7, label %6, !dbg !7816

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.60, i32 0, i32 0), i32 noundef 69) #28, !dbg !7817
  br label %36, !dbg !7823

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7824
  %9 = icmp sgt i32 %8, -1, !dbg !7826
  br i1 %9, label %11, label %10, !dbg !7827

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.61, i32 0, i32 0), i32 noundef 69) #28, !dbg !7828
  br label %36, !dbg !7834

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7835
  %13 = and i32 %12, 1073741824, !dbg !7837
  %14 = icmp eq i32 %13, 0, !dbg !7838
  br i1 %14, label %36, label %15, !dbg !7839

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.62, i32 0, i32 0), i32 noundef 69) #28, !dbg !7840
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !7846
  br i1 %16, label %17, label %21, !dbg !7848

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7849
  %19 = load i32, i32* %18, align 4, !dbg !7849
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.63, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #28, !dbg !7849
  %20 = load i32, i32* %18, align 4, !dbg !7855
  call void @llvm.dbg.value(metadata i32 %20, metadata !7804, metadata !DIExpression()), !dbg !7805
  br label %36, !dbg !7856

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7857
  %23 = and i32 %22, 255, !dbg !7859
  %24 = icmp eq i32 %23, 0, !dbg !7860
  br i1 %24, label %27, label %25, !dbg !7861

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !7862
  call void @llvm.dbg.value(metadata i32 %26, metadata !7804, metadata !DIExpression()), !dbg !7805
  br label %36, !dbg !7864

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7865
  %29 = and i32 %28, 65280, !dbg !7867
  %30 = icmp eq i32 %29, 0, !dbg !7868
  br i1 %30, label %32, label %31, !dbg !7869

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !7870
  call void @llvm.dbg.value(metadata i32 0, metadata !7804, metadata !DIExpression()), !dbg !7805
  br label %36, !dbg !7872

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7873
  %34 = icmp ult i32 %33, 65536, !dbg !7875
  br i1 %34, label %36, label %35, !dbg !7876

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #27, !dbg !7877
  call void @llvm.dbg.value(metadata i32 0, metadata !7804, metadata !DIExpression()), !dbg !7805
  br label %36, !dbg !7879

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7805
  call void @llvm.dbg.value(metadata i32 %37, metadata !7804, metadata !DIExpression()), !dbg !7805
  ret i32 %37, !dbg !7880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7881 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7883, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata i32 %1, metadata !7884, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata i8* %2, metadata !7885, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata i32 0, metadata !7886, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata i32 -22, metadata !7887, metadata !DIExpression()), !dbg !7896
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.54, i32 0, i32 0), i32 noundef 69) #28, !dbg !7897
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7902
  %5 = and i32 %4, 16, !dbg !7904
  %6 = icmp eq i32 %5, 0, !dbg !7905
  br i1 %6, label %8, label %7, !dbg !7906

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.55, i32 0, i32 0), i32 noundef 69) #28, !dbg !7907
  br label %8, !dbg !7913

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7914
  %10 = and i32 %9, 8, !dbg !7916
  %11 = icmp eq i32 %10, 0, !dbg !7917
  br i1 %11, label %13, label %12, !dbg !7918

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.48, i32 0, i32 0), i32 noundef 69) #28, !dbg !7919
  br label %13, !dbg !7925

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7926
  %15 = and i32 %14, 2, !dbg !7927
  %16 = icmp eq i32 %15, 0, !dbg !7928
  br i1 %16, label %27, label %17, !dbg !7929

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.56, i32 0, i32 0), i32 noundef 69) #28, !dbg !7930
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7935
  call void @llvm.dbg.value(metadata i32 %18, metadata !7888, metadata !DIExpression()), !dbg !7936
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7937
  %20 = and i32 %19, 128, !dbg !7939
  %21 = icmp eq i32 %20, 0, !dbg !7940
  br i1 %21, label %27, label %22, !dbg !7941

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7887, metadata !DIExpression()), !dbg !7896
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.57, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #28, !dbg !7942
  %23 = icmp eq i32 %1, 0, !dbg !7948
  br i1 %23, label %27, label %24, !dbg !7950

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7951
  %26 = and i32 %25, -129, !dbg !7951
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7951
  br label %27, !dbg !7953

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7896
  call void @llvm.dbg.value(metadata i32 %28, metadata !7887, metadata !DIExpression()), !dbg !7896
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7954
  %30 = and i32 %29, 1, !dbg !7956
  %31 = icmp eq i32 %30, 0, !dbg !7957
  br i1 %31, label %33, label %32, !dbg !7958

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.58, i32 0, i32 0), i32 noundef 69) #28, !dbg !7959
  br label %33, !dbg !7965

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7966
  %35 = and i32 %34, 32, !dbg !7968
  %36 = icmp eq i32 %35, 0, !dbg !7969
  br i1 %36, label %38, label %37, !dbg !7970

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.53, i32 0, i32 0), i32 noundef 69) #28, !dbg !7971
  br label %38, !dbg !7977

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7978
  %40 = and i32 %39, 16, !dbg !7979
  %41 = icmp eq i32 %40, 0, !dbg !7979
  br i1 %41, label %42, label %46, !dbg !7980

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7981
  %44 = and i32 %43, 2, !dbg !7982
  %45 = icmp eq i32 %44, 0, !dbg !7982
  br i1 %45, label %55, label %46, !dbg !7983

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7984
  %48 = and i32 %47, 2048, !dbg !7985
  %49 = icmp eq i32 %48, 0, !dbg !7985
  br i1 %49, label %55, label %50, !dbg !7986

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7987
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #28, !dbg !7988
  call void @llvm.dbg.value(metadata i32 %52, metadata !7891, metadata !DIExpression()), !dbg !7989
  %53 = icmp eq i32 %52, 0, !dbg !7990
  br i1 %53, label %55, label %54, !dbg !7992

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7993, metadata !DIExpression()) #26, !dbg !7996
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #26, !dbg !7999, !srcloc !8000
  call void @llvm.dbg.value(metadata i32 2, metadata !7886, metadata !DIExpression()), !dbg !7896
  br label %55, !dbg !8001

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7896
  call void @llvm.dbg.value(metadata i32 %56, metadata !7886, metadata !DIExpression()), !dbg !7896
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8002
  %58 = and i32 %57, 32, !dbg !8004
  %59 = icmp eq i32 %58, 0, !dbg !8005
  br i1 %59, label %63, label %60, !dbg !8006

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8007
  %62 = and i32 %61, -8193, !dbg !8007
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8007
  br label %63, !dbg !8009

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8010
  %65 = or i32 %64, 255, !dbg !8010
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8010
  store i8 0, i8* %2, align 1, !dbg !8011
  ret i32 %56, !dbg !8012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8013 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8017, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i32 %0, metadata !8018, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i8* %1, metadata !8019, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i32 0, metadata !8020, metadata !DIExpression()), !dbg !8024
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #28, !dbg !8025
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8030
  %4 = and i32 %3, 4096, !dbg !8032
  %5 = icmp eq i32 %4, 0, !dbg !8032
  br i1 %5, label %7, label %6, !dbg !8033

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.47, i32 0, i32 0), i32 noundef 69) #28, !dbg !8034
  br label %7, !dbg !8040

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8041
  %9 = and i32 %8, 2048, !dbg !8043
  %10 = icmp eq i32 %9, 0, !dbg !8043
  br i1 %10, label %12, label %11, !dbg !8044

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.48, i32 0, i32 0), i32 noundef 69) #28, !dbg !8045
  br label %12, !dbg !8051

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8052
  %14 = and i32 %13, 512, !dbg !8053
  %15 = icmp eq i32 %14, 0, !dbg !8053
  br i1 %15, label %26, label %16, !dbg !8054

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.49, i32 0, i32 0), i32 noundef 69) #28, !dbg !8055
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8060
  call void @llvm.dbg.value(metadata i32 %17, metadata !8021, metadata !DIExpression()), !dbg !8061
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8062
  %19 = and i32 %18, 32768, !dbg !8064
  %20 = icmp eq i32 %19, 0, !dbg !8065
  br i1 %20, label %26, label %21, !dbg !8066

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.50, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #28, !dbg !8067
  %22 = icmp eq i32 %0, 0, !dbg !8073
  br i1 %22, label %26, label %23, !dbg !8075

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8076
  %25 = and i32 %24, -32769, !dbg !8076
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8076
  br label %26, !dbg !8078

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8079
  %28 = and i32 %27, 1024, !dbg !8081
  %29 = icmp eq i32 %28, 0, !dbg !8081
  br i1 %29, label %31, label %30, !dbg !8082

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.51, i32 0, i32 0), i32 noundef 69) #28, !dbg !8083
  br label %31, !dbg !8089

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8090
  %33 = and i32 %32, 256, !dbg !8092
  %34 = icmp eq i32 %33, 0, !dbg !8093
  br i1 %34, label %35, label %39, !dbg !8094

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8095
  %37 = and i32 %36, 8192, !dbg !8097
  %38 = icmp eq i32 %37, 0, !dbg !8097
  br i1 %38, label %41, label %39, !dbg !8098

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.52, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.53, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #28, !dbg !8099
  br label %41, !dbg !8100

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8100
  %43 = or i32 %42, 65280, !dbg !8100
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8100
  store i8 0, i8* %1, align 1, !dbg !8101
  ret void, !dbg !8102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8103 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8109, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i32 0, metadata !8110, metadata !DIExpression()), !dbg !8111
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.43, i32 0, i32 0), i32 noundef 69) #28, !dbg !8112
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8117
  %2 = and i32 %1, 33554432, !dbg !8119
  %3 = icmp eq i32 %2, 0, !dbg !8120
  br i1 %3, label %5, label %4, !dbg !8121

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.44, i32 0, i32 0), i32 noundef 69) #28, !dbg !8122
  br label %5, !dbg !8128

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8129
  %7 = and i32 %6, 16777216, !dbg !8131
  %8 = icmp eq i32 %7, 0, !dbg !8132
  br i1 %8, label %10, label %9, !dbg !8133

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #28, !dbg !8134
  br label %10, !dbg !8140

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8141
  %12 = and i32 %11, 524288, !dbg !8143
  %13 = icmp eq i32 %12, 0, !dbg !8144
  br i1 %13, label %15, label %14, !dbg !8145

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #28, !dbg !8146
  br label %15, !dbg !8152

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8153
  %17 = and i32 %16, 262144, !dbg !8155
  %18 = icmp eq i32 %17, 0, !dbg !8156
  br i1 %18, label %20, label %19, !dbg !8157

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #28, !dbg !8158
  br label %20, !dbg !8164

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8165
  %22 = and i32 %21, 131072, !dbg !8167
  %23 = icmp eq i32 %22, 0, !dbg !8168
  br i1 %23, label %25, label %24, !dbg !8169

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #28, !dbg !8170
  br label %25, !dbg !8176

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8177
  %27 = and i32 %26, 65536, !dbg !8179
  %28 = icmp eq i32 %27, 0, !dbg !8180
  br i1 %28, label %30, label %29, !dbg !8181

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25.45, i32 0, i32 0), i32 noundef 69) #28, !dbg !8182
  br label %30, !dbg !8188

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8189
  %32 = or i32 %31, -65536, !dbg !8189
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8189
  ret void, !dbg !8190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8191 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8195, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.value(metadata i8* %0, metadata !8196, metadata !DIExpression()), !dbg !8197
  store i8 0, i8* %0, align 1, !dbg !8198
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #28, !dbg !8199
  ret void, !dbg !8204
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8205 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8209, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i32 %0, metadata !8210, metadata !DIExpression()), !dbg !8211
  %2 = icmp slt i32 %0, 16, !dbg !8212
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !8212
  %4 = add nsw i32 %0, -16, !dbg !8212
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #28, !dbg !8212
  ret void, !dbg !8217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8218 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8222, metadata !DIExpression()), !dbg !8225
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8226
  %3 = load i32, i32* %2, align 4, !dbg !8226
  %4 = inttoptr i32 %3 to i16*, !dbg !8227
  call void @llvm.dbg.value(metadata i16* %4, metadata !8223, metadata !DIExpression()), !dbg !8225
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8228
  %6 = or i32 %5, 256, !dbg !8228
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8228
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8229, !srcloc !8232
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8233, !srcloc !8236
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8237
  %8 = load i16, i16* %7, align 2, !dbg !8238
  call void @llvm.dbg.value(metadata i16 %8, metadata !8224, metadata !DIExpression()), !dbg !8225
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8239
  %10 = and i32 %9, -257, !dbg !8239
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8239
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8240, !srcloc !8232
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8242, !srcloc !8236
  %11 = icmp eq i16 %8, -8446, !dbg !8244
  ret i1 %11, !dbg !8246
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #17 !dbg !8247 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8248
  %2 = or i32 %1, 16, !dbg !8248
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8248
  ret void, !dbg !8249
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #17 !dbg !8250 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8253, metadata !DIExpression()), !dbg !8254
  br label %1, !dbg !8255

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8253, metadata !DIExpression()), !dbg !8254
  tail call fastcc void @__NVIC_SetPriority.67(i32 noundef %2) #27, !dbg !8257
  %3 = add nuw nsw i32 %2, 1, !dbg !8260
  call void @llvm.dbg.value(metadata i32 %3, metadata !8253, metadata !DIExpression()), !dbg !8254
  %4 = icmp eq i32 %3, 82, !dbg !8261
  br i1 %4, label %5, label %1, !dbg !8255, !llvm.loop !8262

5:                                                ; preds = %1
  ret void, !dbg !8264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.67(i32 noundef %0) unnamed_addr #17 !dbg !8265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8267, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i32 1, metadata !8268, metadata !DIExpression()), !dbg !8269
  %2 = and i32 %0, 15, !dbg !8270
  %3 = add nsw i32 %2, -4, !dbg !8270
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8270
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8270
  %6 = icmp slt i32 %0, 0, !dbg !8270
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8270
  store volatile i8 16, i8* %7, align 1, !dbg !8271
  ret void, !dbg !8273
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8274 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8380, metadata !DIExpression()), !dbg !8381
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8382
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8384
  br i1 %3, label %4, label %12, !dbg !8385

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !8386, !srcloc !8398
  call void @llvm.dbg.value(metadata i32 %5, metadata !8389, metadata !DIExpression()) #26, !dbg !8399
  %6 = icmp eq i32 %5, 0, !dbg !8400
  br i1 %6, label %12, label %7, !dbg !8401

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8402
  %9 = or i32 %8, 268435456, !dbg !8402
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8402
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8404
  %11 = and i32 %10, -32769, !dbg !8404
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8404
  br label %12, !dbg !8405

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #28, !dbg !8406
  ret void, !dbg !8407
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8408 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #28, !dbg !8409
  ret void, !dbg !8410
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !507 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !612, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata i8 0, metadata !613, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata i32 64, metadata !615, metadata !DIExpression()), !dbg !8411
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8412
  %3 = load i32, i32* %2, align 4, !dbg !8412
  %4 = add i32 %3, -64, !dbg !8414
  call void @llvm.dbg.value(metadata i32 %4, metadata !614, metadata !DIExpression()), !dbg !8411
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8415
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8416
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8417
  call void @llvm.dbg.value(metadata i8 1, metadata !613, metadata !DIExpression()), !dbg !8411
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #28, !dbg !8418
  ret void, !dbg !8419
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8420 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8421
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8422, !srcloc !8425
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8426, !srcloc !8429
  ret void, !dbg !8430
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8431 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #26, !dbg !8432, !srcloc !8435
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8436
  ret void, !dbg !8437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8438 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8453, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i8 %1, metadata !8454, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i32 %2, metadata !8455, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i32 %3, metadata !8456, metadata !DIExpression()), !dbg !8457
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !8458
  ret void, !dbg !8460
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8461 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8466, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i8 %1, metadata !8467, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i32 undef, metadata !8468, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i32 undef, metadata !8469, metadata !DIExpression()), !dbg !8471
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8472
  call void @llvm.dbg.value(metadata i8 %3, metadata !8470, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8471
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !8473
  call void @llvm.dbg.value(metadata i32 %4, metadata !8470, metadata !DIExpression()), !dbg !8471
  %5 = trunc i32 %4 to i8, !dbg !8474
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8475
  ret void, !dbg !8476
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8477 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8481, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.value(metadata i8 %1, metadata !8482, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.value(metadata i8 %2, metadata !8483, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.value(metadata i1 %3, metadata !8484, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8487
  %5 = zext i8 %2 to i32, !dbg !8488
  call void @llvm.dbg.value(metadata i32 %5, metadata !8486, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.value(metadata i32 0, metadata !8485, metadata !DIExpression()), !dbg !8487
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8486, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.value(metadata i32 0, metadata !8485, metadata !DIExpression()), !dbg !8487
  %7 = icmp eq i8 %1, 0, !dbg !8489
  br i1 %7, label %30, label %8, !dbg !8492

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8486, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.value(metadata i32 %10, metadata !8485, metadata !DIExpression()), !dbg !8487
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8493
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8496
  %13 = load i32, i32* %12, align 4, !dbg !8496
  %14 = icmp eq i32 %13, 0, !dbg !8497
  br i1 %14, label %26, label %15, !dbg !8498

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8499

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !8501
  %18 = icmp eq i32 %17, 0, !dbg !8501
  br i1 %18, label %19, label %20, !dbg !8502

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.76, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #28, !dbg !8503
  br label %30, !dbg !8509

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8510
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !8511
  call void @llvm.dbg.value(metadata i32 %22, metadata !8486, metadata !DIExpression()), !dbg !8487
  %23 = icmp eq i32 %22, -22, !dbg !8512
  br i1 %23, label %30, label %24, !dbg !8514

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8515
  call void @llvm.dbg.value(metadata i32 %25, metadata !8486, metadata !DIExpression()), !dbg !8487
  br label %26, !dbg !8516

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8487
  call void @llvm.dbg.value(metadata i32 %27, metadata !8486, metadata !DIExpression()), !dbg !8487
  %28 = add nuw nsw i32 %10, 1, !dbg !8517
  call void @llvm.dbg.value(metadata i32 %28, metadata !8485, metadata !DIExpression()), !dbg !8487
  %29 = icmp eq i32 %28, %6, !dbg !8489
  br i1 %29, label %30, label %8, !dbg !8492, !llvm.loop !8518

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8487
  ret i32 %31, !dbg !8520
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !8521 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8525, metadata !DIExpression()), !dbg !8527
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8528
  %3 = load i32, i32* %2, align 4, !dbg !8528
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8529, !range !5059
  %5 = icmp ult i32 %4, 2, !dbg !8529
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8530
  br i1 %7, label %8, label %15, !dbg !8530

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8531
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8532
  %11 = load i32, i32* %10, align 4, !dbg !8532
  %12 = and i32 %11, %9, !dbg !8533
  %13 = icmp eq i32 %12, 0, !dbg !8534
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8526, metadata !DIExpression()), !dbg !8527
  ret i32 %16, !dbg !8535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8536 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8540, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8541, metadata !DIExpression()), !dbg !8543
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8544
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #26, !dbg !8544
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8542, metadata !DIExpression()), !dbg !8545
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8546
  %6 = load i32, i32* %5, align 4, !dbg !8546
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8547
  store i32 %6, i32* %7, align 4, !dbg !8548
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8549
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8550
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8551
  %11 = load i32, i32* %10, align 4, !dbg !8551
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #27, !dbg !8552
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !8553
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #26, !dbg !8554
  ret i32 %12, !dbg !8555
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #13 !dbg !8556 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !8563, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !8564, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata i32 undef, metadata !8565, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata i32 %2, metadata !8566, metadata !DIExpression()), !dbg !8567
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !8568
  %5 = load i32, i32* %4, align 4, !dbg !8568
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !8569
  %7 = or i32 %6, %5, !dbg !8570
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !8571
  store i32 %7, i32* %8, align 4, !dbg !8572
  ret void, !dbg !8573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8574 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8578, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8579, metadata !DIExpression()), !dbg !8580
  %3 = zext i8 %0 to i32, !dbg !8581
  %4 = icmp ugt i8 %0, 7, !dbg !8583
  br i1 %4, label %5, label %6, !dbg !8584

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.77, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #28, !dbg !8585
  br label %7, !dbg !8591

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !8592
  br label %7, !dbg !8593

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8580
  ret i32 %8, !dbg !8594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #17 !dbg !8595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8599, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8600, metadata !DIExpression()), !dbg !8601
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !8602
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8603
  %4 = load i32, i32* %3, align 4, !dbg !8603
  %5 = and i32 %4, -32, !dbg !8604
  %6 = or i32 %5, %0, !dbg !8605
  %7 = or i32 %6, 16, !dbg !8605
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8606
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8607
  %9 = load i32, i32* %8, align 4, !dbg !8607
  %10 = or i32 %9, 1, !dbg !8608
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8609
  ret void, !dbg !8610
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #17 !dbg !8611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8614, metadata !DIExpression()), !dbg !8615
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8616
  ret void, !dbg !8617
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #12 !dbg !8618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8622, metadata !DIExpression()), !dbg !8623
  %2 = icmp ult i32 %0, 33, !dbg !8624
  br i1 %2, label %11, label %3, !dbg !8626

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8627
  br i1 %4, label %11, label %5, !dbg !8629

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8630
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8631, !range !5059
  %8 = mul nsw i32 %7, -2, !dbg !8632
  %9 = add nsw i32 %8, 62, !dbg !8632
  %10 = and i32 %9, 62, !dbg !8633
  br label %11, !dbg !8634

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8623
  ret i32 %12, !dbg !8635
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8636 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8640, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i8 %1, metadata !8641, metadata !DIExpression()), !dbg !8642
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !8643
  ret void, !dbg !8645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8646 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8650, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i8 %1, metadata !8651, metadata !DIExpression()), !dbg !8657
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8658
  call void @llvm.dbg.value(metadata i8 %3, metadata !8652, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8657
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !8659
  call void @llvm.dbg.value(metadata i32 %4, metadata !8652, metadata !DIExpression()), !dbg !8657
  %5 = icmp ne i32 %4, -22, !dbg !8660
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8661
  call void @llvm.dbg.value(metadata i32 %4, metadata !8653, metadata !DIExpression()), !dbg !8662
  br i1 %7, label %8, label %12, !dbg !8661

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8653, metadata !DIExpression()), !dbg !8662
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !8663
  %10 = add i32 %9, 1, !dbg !8666
  call void @llvm.dbg.value(metadata i32 %10, metadata !8653, metadata !DIExpression()), !dbg !8662
  %11 = icmp eq i32 %10, 8, !dbg !8667
  br i1 %11, label %12, label %8, !dbg !8668, !llvm.loop !8669

12:                                               ; preds = %8, %2
  ret void, !dbg !8671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #17 !dbg !8672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8675, metadata !DIExpression()), !dbg !8676
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8677
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8678
  ret void, !dbg !8679
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8680 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8685
  %2 = icmp ugt i32 %1, 8, !dbg !8687
  br i1 %2, label %14, label %3, !dbg !8688

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !8689
  call void @llvm.dbg.value(metadata i32 0, metadata !8684, metadata !DIExpression()), !dbg !8690
  %4 = icmp eq i32 %1, 0, !dbg !8691
  br i1 %4, label %12, label %5, !dbg !8694

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8694

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8684, metadata !DIExpression()), !dbg !8690
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8695
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #27, !dbg !8697
  %10 = add nuw i32 %8, 1, !dbg !8698
  call void @llvm.dbg.value(metadata i32 %10, metadata !8684, metadata !DIExpression()), !dbg !8690
  %11 = icmp eq i32 %10, %1, !dbg !8691
  br i1 %11, label %12, label %7, !dbg !8694, !llvm.loop !8699

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8701
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8702
  tail call void @arm_core_mpu_enable() #27, !dbg !8703
  br label %14, !dbg !8704

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8690
  ret i32 %15, !dbg !8705
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !8706 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8713, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i8* %1, metadata !8714, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i8* %0, metadata !8715, metadata !DIExpression()), !dbg !8716
  %3 = load i8, i8* %1, align 1, !dbg !8717
  %4 = icmp eq i8 %3, 0, !dbg !8718
  br i1 %4, label %13, label %5, !dbg !8719

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8713, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i8* %8, metadata !8714, metadata !DIExpression()), !dbg !8716
  store i8 %6, i8* %7, align 1, !dbg !8720
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8722
  call void @llvm.dbg.value(metadata i8* %9, metadata !8713, metadata !DIExpression()), !dbg !8716
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8723
  call void @llvm.dbg.value(metadata i8* %10, metadata !8714, metadata !DIExpression()), !dbg !8716
  %11 = load i8, i8* %10, align 1, !dbg !8717
  %12 = icmp eq i8 %11, 0, !dbg !8718
  br i1 %12, label %13, label %5, !dbg !8719, !llvm.loop !8724

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8726
  ret i8* %0, !dbg !8727
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #16 !dbg !8728 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8732, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i8* %1, metadata !8733, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i32 %2, metadata !8734, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i8* %0, metadata !8735, metadata !DIExpression()), !dbg !8736
  %4 = icmp eq i32 %2, 0, !dbg !8737
  br i1 %4, label %22, label %5, !dbg !8738

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8732, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i32 %7, metadata !8734, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i8* %8, metadata !8733, metadata !DIExpression()), !dbg !8736
  %9 = load i8, i8* %8, align 1, !dbg !8739
  %10 = icmp eq i8 %9, 0, !dbg !8740
  br i1 %10, label %16, label %11, !dbg !8741

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8742
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8744
  call void @llvm.dbg.value(metadata i8* %12, metadata !8733, metadata !DIExpression()), !dbg !8736
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8745
  call void @llvm.dbg.value(metadata i8* %13, metadata !8732, metadata !DIExpression()), !dbg !8736
  %14 = add i32 %7, -1, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %14, metadata !8734, metadata !DIExpression()), !dbg !8736
  %15 = icmp eq i32 %14, 0, !dbg !8737
  br i1 %15, label %22, label %5, !dbg !8738, !llvm.loop !8747

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8732, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i32 %18, metadata !8734, metadata !DIExpression()), !dbg !8736
  store i8 0, i8* %17, align 1, !dbg !8749
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8751
  call void @llvm.dbg.value(metadata i8* %19, metadata !8732, metadata !DIExpression()), !dbg !8736
  %20 = add i32 %18, -1, !dbg !8752
  call void @llvm.dbg.value(metadata i32 %20, metadata !8734, metadata !DIExpression()), !dbg !8736
  %21 = icmp eq i32 %20, 0, !dbg !8753
  br i1 %21, label %22, label %16, !dbg !8754, !llvm.loop !8755

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8757
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8758 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8762, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata i32 %1, metadata !8763, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata i32 %1, metadata !8764, metadata !DIExpression()), !dbg !8765
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8766

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8762, metadata !DIExpression()), !dbg !8765
  %6 = load i8, i8* %5, align 1, !dbg !8767
  %7 = icmp eq i8 %6, %3, !dbg !8768
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8769
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8770
  call void @llvm.dbg.value(metadata i8* %10, metadata !8762, metadata !DIExpression()), !dbg !8765
  br i1 %9, label %11, label %4, !dbg !8769, !llvm.loop !8772

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8774
  ret i8* %12, !dbg !8775
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8776 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8778, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i32 %1, metadata !8779, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i8* null, metadata !8780, metadata !DIExpression()), !dbg !8781
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8782

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8781
  call void @llvm.dbg.value(metadata i8* %6, metadata !8780, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i8* %5, metadata !8778, metadata !DIExpression()), !dbg !8781
  %7 = load i8, i8* %5, align 1, !dbg !8783
  %8 = icmp eq i8 %7, %3, !dbg !8786
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8787
  call void @llvm.dbg.value(metadata i8* %9, metadata !8780, metadata !DIExpression()), !dbg !8781
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8788
  call void @llvm.dbg.value(metadata i8* %10, metadata !8778, metadata !DIExpression()), !dbg !8781
  %11 = icmp eq i8 %7, 0, !dbg !8789
  br i1 %11, label %12, label %4, !dbg !8789, !llvm.loop !8790

12:                                               ; preds = %4
  ret i8* %9, !dbg !8792
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !8793 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8797, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i32 0, metadata !8798, metadata !DIExpression()), !dbg !8799
  %2 = load i8, i8* %0, align 1, !dbg !8800
  %3 = icmp eq i8 %2, 0, !dbg !8801
  br i1 %3, label %11, label %4, !dbg !8802

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8798, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i8* %6, metadata !8797, metadata !DIExpression()), !dbg !8799
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8803
  call void @llvm.dbg.value(metadata i8* %7, metadata !8797, metadata !DIExpression()), !dbg !8799
  %8 = add i32 %5, 1, !dbg !8805
  call void @llvm.dbg.value(metadata i32 %8, metadata !8798, metadata !DIExpression()), !dbg !8799
  %9 = load i8, i8* %7, align 1, !dbg !8800
  %10 = icmp eq i8 %9, 0, !dbg !8801
  br i1 %10, label %11, label %4, !dbg !8802, !llvm.loop !8806

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8799
  ret i32 %12, !dbg !8808
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8809 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8813, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata i32 %1, metadata !8814, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata i32 0, metadata !8815, metadata !DIExpression()), !dbg !8816
  %3 = load i8, i8* %0, align 1, !dbg !8817
  %4 = icmp ne i8 %3, 0, !dbg !8818
  %5 = icmp ne i32 %1, 0, !dbg !8819
  %6 = and i1 %4, %5, !dbg !8819
  br i1 %6, label %7, label %16, !dbg !8820

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8815, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata i8* %9, metadata !8813, metadata !DIExpression()), !dbg !8816
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8821
  call void @llvm.dbg.value(metadata i8* %10, metadata !8813, metadata !DIExpression()), !dbg !8816
  %11 = add nuw i32 %8, 1, !dbg !8823
  call void @llvm.dbg.value(metadata i32 %11, metadata !8815, metadata !DIExpression()), !dbg !8816
  %12 = load i8, i8* %10, align 1, !dbg !8817
  %13 = icmp ne i8 %12, 0, !dbg !8818
  %14 = icmp ult i32 %11, %1, !dbg !8819
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8819
  br i1 %15, label %7, label %16, !dbg !8820, !llvm.loop !8824

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8816
  ret i32 %17, !dbg !8826
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !8827 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8831, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i8* %1, metadata !8832, metadata !DIExpression()), !dbg !8833
  %3 = load i8, i8* %0, align 1, !dbg !8834
  %4 = load i8, i8* %1, align 1, !dbg !8835
  %5 = icmp ne i8 %3, %4, !dbg !8836
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8837
  br i1 %7, label %18, label %8, !dbg !8837

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8832, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i8* %10, metadata !8831, metadata !DIExpression()), !dbg !8833
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8838
  call void @llvm.dbg.value(metadata i8* %11, metadata !8831, metadata !DIExpression()), !dbg !8833
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8840
  call void @llvm.dbg.value(metadata i8* %12, metadata !8832, metadata !DIExpression()), !dbg !8833
  %13 = load i8, i8* %11, align 1, !dbg !8834
  %14 = load i8, i8* %12, align 1, !dbg !8835
  %15 = icmp ne i8 %13, %14, !dbg !8836
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8837
  br i1 %17, label %18, label %8, !dbg !8837, !llvm.loop !8841

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8834
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8835
  %21 = zext i8 %19 to i32, !dbg !8844
  %22 = zext i8 %20 to i32, !dbg !8845
  %23 = sub nsw i32 %21, %22, !dbg !8846
  ret i32 %23, !dbg !8847
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8848 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8852, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i8* %1, metadata !8853, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i32 %2, metadata !8854, metadata !DIExpression()), !dbg !8855
  %4 = icmp eq i32 %2, 0, !dbg !8856
  br i1 %4, label %23, label %5, !dbg !8856

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8854, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i8* %7, metadata !8853, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i8* %8, metadata !8852, metadata !DIExpression()), !dbg !8855
  %9 = load i8, i8* %8, align 1, !dbg !8857
  %10 = load i8, i8* %7, align 1, !dbg !8858
  %11 = icmp ne i8 %9, %10, !dbg !8859
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8860
  br i1 %13, label %19, label %14, !dbg !8860

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8861
  call void @llvm.dbg.value(metadata i8* %15, metadata !8852, metadata !DIExpression()), !dbg !8855
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8863
  call void @llvm.dbg.value(metadata i8* %16, metadata !8853, metadata !DIExpression()), !dbg !8855
  %17 = add i32 %6, -1, !dbg !8864
  call void @llvm.dbg.value(metadata i32 %17, metadata !8854, metadata !DIExpression()), !dbg !8855
  %18 = icmp eq i32 %17, 0, !dbg !8856
  br i1 %18, label %23, label %5, !dbg !8856, !llvm.loop !8865

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8868
  %21 = zext i8 %10 to i32, !dbg !8869
  %22 = sub nsw i32 %20, %21, !dbg !8870
  br label %23, !dbg !8871

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8871
  ret i32 %24, !dbg !8872
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #16 !dbg !8873 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8877, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i8* %1, metadata !8878, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i8** %2, metadata !8879, metadata !DIExpression()), !dbg !8882
  %4 = icmp eq i8* %0, null, !dbg !8883
  br i1 %4, label %5, label %7, !dbg !8883

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8884
  br label %7, !dbg !8883

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8883
  call void @llvm.dbg.value(metadata i8* %8, metadata !8880, metadata !DIExpression()), !dbg !8882
  %9 = load i8, i8* %8, align 1, !dbg !8885
  %10 = icmp eq i8 %9, 0, !dbg !8885
  br i1 %10, label %33, label %11, !dbg !8886

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8880, metadata !DIExpression()), !dbg !8882
  %14 = zext i8 %12 to i32, !dbg !8885
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !8887
  %16 = icmp eq i8* %15, null, !dbg !8886
  br i1 %16, label %21, label %17, !dbg !8888

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8889
  call void @llvm.dbg.value(metadata i8* %18, metadata !8880, metadata !DIExpression()), !dbg !8882
  %19 = load i8, i8* %18, align 1, !dbg !8885
  %20 = icmp eq i8 %19, 0, !dbg !8885
  br i1 %20, label %33, label %11, !dbg !8886, !llvm.loop !8891

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8881, metadata !DIExpression()), !dbg !8882
  %24 = zext i8 %22 to i32, !dbg !8893
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !8894
  %26 = icmp eq i8* %25, null, !dbg !8895
  br i1 %26, label %27, label %31, !dbg !8896

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8897
  call void @llvm.dbg.value(metadata i8* %28, metadata !8881, metadata !DIExpression()), !dbg !8882
  %29 = load i8, i8* %28, align 1, !dbg !8893
  %30 = icmp eq i8 %29, 0, !dbg !8893
  br i1 %30, label %33, label %21, !dbg !8899, !llvm.loop !8900

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8902
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8905
  br label %33, !dbg !8906

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8882
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8882
  store i8* %34, i8** %2, align 4, !dbg !8882
  ret i8* %35, !dbg !8907
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !8908 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8910, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i8* %1, metadata !8911, metadata !DIExpression()), !dbg !8912
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !8913
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8914
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !8915
  ret i8* %0, !dbg !8916
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #16 !dbg !8917 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8919, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i8* %1, metadata !8920, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %2, metadata !8921, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i8* %0, metadata !8922, metadata !DIExpression()), !dbg !8924
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !8925
  call void @llvm.dbg.value(metadata i32 %4, metadata !8923, metadata !DIExpression()), !dbg !8924
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8926
  call void @llvm.dbg.value(metadata i8* %5, metadata !8919, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i8* %1, metadata !8920, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %2, metadata !8921, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %2, metadata !8921, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8924
  %6 = icmp eq i32 %2, 0, !dbg !8927
  br i1 %6, label %18, label %7, !dbg !8928

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8929
  call void @llvm.dbg.value(metadata i8* %9, metadata !8919, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i8* %10, metadata !8920, metadata !DIExpression()), !dbg !8924
  %12 = load i8, i8* %10, align 1, !dbg !8930
  %13 = icmp eq i8 %12, 0, !dbg !8931
  br i1 %13, label %18, label %14, !dbg !8932

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8933
  call void @llvm.dbg.value(metadata i8* %15, metadata !8920, metadata !DIExpression()), !dbg !8924
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8935
  call void @llvm.dbg.value(metadata i8* %16, metadata !8919, metadata !DIExpression()), !dbg !8924
  store i8 %12, i8* %9, align 1, !dbg !8936
  call void @llvm.dbg.value(metadata i32 %11, metadata !8921, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %11, metadata !8921, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8924
  %17 = icmp eq i32 %11, 0, !dbg !8927
  br i1 %17, label %18, label %7, !dbg !8928, !llvm.loop !8937

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8924
  store i8 0, i8* %19, align 1, !dbg !8939
  ret i8* %0, !dbg !8940
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8941 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8945, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i8* %1, metadata !8946, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i32 %2, metadata !8947, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i8* %0, metadata !8948, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i8* %1, metadata !8949, metadata !DIExpression()), !dbg !8950
  %4 = icmp eq i32 %2, 0, !dbg !8951
  br i1 %4, label %31, label %5, !dbg !8953

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8949, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i8* %0, metadata !8948, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i32 %2, metadata !8947, metadata !DIExpression()), !dbg !8950
  %6 = add i32 %2, -1, !dbg !8954
  call void @llvm.dbg.value(metadata i32 %6, metadata !8947, metadata !DIExpression()), !dbg !8950
  %7 = icmp eq i32 %6, 0, !dbg !8955
  br i1 %7, label %23, label %8, !dbg !8956

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8957
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8957
  br label %11, !dbg !8957

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8949, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i8* %14, metadata !8948, metadata !DIExpression()), !dbg !8950
  %15 = load i8, i8* %14, align 1, !dbg !8958
  %16 = load i8, i8* %13, align 1, !dbg !8959
  %17 = icmp eq i8 %15, %16, !dbg !8960
  br i1 %17, label %18, label %23, !dbg !8957

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8961
  call void @llvm.dbg.value(metadata i8* %19, metadata !8948, metadata !DIExpression()), !dbg !8950
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8963
  call void @llvm.dbg.value(metadata i8* %20, metadata !8949, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i32 %12, metadata !8947, metadata !DIExpression()), !dbg !8950
  %21 = add i32 %12, -1, !dbg !8954
  call void @llvm.dbg.value(metadata i32 %21, metadata !8947, metadata !DIExpression()), !dbg !8950
  %22 = icmp eq i32 %21, 0, !dbg !8955
  br i1 %22, label %23, label %11, !dbg !8956, !llvm.loop !8964

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8950
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8950
  %26 = load i8, i8* %24, align 1, !dbg !8966
  %27 = zext i8 %26 to i32, !dbg !8966
  %28 = load i8, i8* %25, align 1, !dbg !8967
  %29 = zext i8 %28 to i32, !dbg !8967
  %30 = sub nsw i32 %27, %29, !dbg !8968
  br label %31, !dbg !8969

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8950
  ret i32 %32, !dbg !8970
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !8971 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8975, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i8* %1, metadata !8976, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i32 %2, metadata !8977, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i8* %0, metadata !8978, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i8* %1, metadata !8979, metadata !DIExpression()), !dbg !8980
  %4 = ptrtoint i8* %0 to i32, !dbg !8981
  %5 = ptrtoint i8* %1 to i32, !dbg !8981
  %6 = sub i32 %4, %5, !dbg !8981
  %7 = icmp ult i32 %6, %2, !dbg !8983
  br i1 %7, label %10, label %8, !dbg !8984

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8979, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i8* %0, metadata !8978, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i32 %2, metadata !8977, metadata !DIExpression()), !dbg !8980
  %9 = icmp eq i32 %2, 0, !dbg !8985
  br i1 %9, label %26, label %17, !dbg !8987

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8977, metadata !DIExpression()), !dbg !8980
  %12 = add i32 %11, -1, !dbg !8988
  call void @llvm.dbg.value(metadata i32 %12, metadata !8977, metadata !DIExpression()), !dbg !8980
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8991
  %14 = load i8, i8* %13, align 1, !dbg !8991
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8992
  store i8 %14, i8* %15, align 1, !dbg !8993
  %16 = icmp eq i32 %12, 0, !dbg !8994
  br i1 %16, label %26, label %10, !dbg !8995, !llvm.loop !8996

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8979, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i8* %19, metadata !8978, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i32 %20, metadata !8977, metadata !DIExpression()), !dbg !8980
  %21 = load i8, i8* %18, align 1, !dbg !8998
  store i8 %21, i8* %19, align 1, !dbg !9000
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9001
  call void @llvm.dbg.value(metadata i8* %22, metadata !8978, metadata !DIExpression()), !dbg !8980
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9002
  call void @llvm.dbg.value(metadata i8* %23, metadata !8979, metadata !DIExpression()), !dbg !8980
  %24 = add i32 %20, -1, !dbg !9003
  call void @llvm.dbg.value(metadata i32 %24, metadata !8977, metadata !DIExpression()), !dbg !8980
  %25 = icmp eq i32 %24, 0, !dbg !8985
  br i1 %25, label %26, label %17, !dbg !8987, !llvm.loop !9004

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9006
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #16 !dbg !9007 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9013, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i8* %1, metadata !9014, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i32 %2, metadata !9015, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i8* %0, metadata !9016, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i8* %1, metadata !9017, metadata !DIExpression()), !dbg !9018
  %4 = icmp eq i32 %2, 0, !dbg !9019
  br i1 %4, label %14, label %5, !dbg !9020

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9017, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i8* %7, metadata !9016, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i32 %8, metadata !9015, metadata !DIExpression()), !dbg !9018
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9021
  call void @llvm.dbg.value(metadata i8* %9, metadata !9017, metadata !DIExpression()), !dbg !9018
  %10 = load i8, i8* %6, align 1, !dbg !9023
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9024
  call void @llvm.dbg.value(metadata i8* %11, metadata !9016, metadata !DIExpression()), !dbg !9018
  store i8 %10, i8* %7, align 1, !dbg !9025
  %12 = add i32 %8, -1, !dbg !9026
  call void @llvm.dbg.value(metadata i32 %12, metadata !9015, metadata !DIExpression()), !dbg !9018
  %13 = icmp eq i32 %12, 0, !dbg !9019
  br i1 %13, label %14, label %5, !dbg !9020, !llvm.loop !9027

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9029
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9030 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9034, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.value(metadata i32 %1, metadata !9035, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.value(metadata i32 %2, metadata !9036, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.value(metadata i8* %0, metadata !9037, metadata !DIExpression()), !dbg !9039
  %4 = trunc i32 %1 to i8, !dbg !9040
  call void @llvm.dbg.value(metadata i8 %4, metadata !9038, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.value(metadata i32 %2, metadata !9036, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.value(metadata i8* %0, metadata !9037, metadata !DIExpression()), !dbg !9039
  %5 = icmp eq i32 %2, 0, !dbg !9041
  br i1 %5, label %12, label %6, !dbg !9042

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9036, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.value(metadata i8* %8, metadata !9037, metadata !DIExpression()), !dbg !9039
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9043
  call void @llvm.dbg.value(metadata i8* %9, metadata !9037, metadata !DIExpression()), !dbg !9039
  store i8 %4, i8* %8, align 1, !dbg !9045
  %10 = add i32 %7, -1, !dbg !9046
  call void @llvm.dbg.value(metadata i32 %10, metadata !9036, metadata !DIExpression()), !dbg !9039
  %11 = icmp eq i32 %10, 0, !dbg !9041
  br i1 %11, label %12, label %6, !dbg !9042, !llvm.loop !9047

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9049
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9050 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9054, metadata !DIExpression()), !dbg !9060
  call void @llvm.dbg.value(metadata i32 %1, metadata !9055, metadata !DIExpression()), !dbg !9060
  call void @llvm.dbg.value(metadata i32 %2, metadata !9056, metadata !DIExpression()), !dbg !9060
  %4 = icmp eq i32 %2, 0, !dbg !9061
  br i1 %4, label %17, label %5, !dbg !9062

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9063

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9064
  call void @llvm.dbg.value(metadata i8* %9, metadata !9057, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata i32 %8, metadata !9056, metadata !DIExpression()), !dbg !9060
  call void @llvm.dbg.value(metadata i8* %9, metadata !9057, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9064
  %10 = load i8, i8* %9, align 1, !dbg !9065
  %11 = icmp eq i8 %10, %6, !dbg !9068
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9069
  call void @llvm.dbg.value(metadata i8* %12, metadata !9057, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata i32 %13, metadata !9056, metadata !DIExpression()), !dbg !9060
  br i1 %15, label %16, label %7, !dbg !9069, !llvm.loop !9070

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9072

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9060
  ret i8* %19, !dbg !9073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !9074 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9076, metadata !DIExpression()), !dbg !9077
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9078
  ret void, !dbg !9079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9082, metadata !DIExpression()), !dbg !9083
  ret i32 -1, !dbg !9084
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9089, metadata !DIExpression()), !dbg !9091
  call void @llvm.dbg.value(metadata i32* %1, metadata !9090, metadata !DIExpression()), !dbg !9091
  %3 = ptrtoint i32* %1 to i32, !dbg !9092
  %4 = and i32 %3, -2, !dbg !9092
  %5 = icmp eq i32 %4, 2, !dbg !9092
  br i1 %5, label %6, label %9, !dbg !9092

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9093
  %8 = tail call i32 %7(i32 noundef %0) #28, !dbg !9093
  br label %9, !dbg !9094

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9094
  ret i32 %10, !dbg !9095
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9098, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32* %1, metadata !9099, metadata !DIExpression()), !dbg !9100
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9101
  ret i32 %3, !dbg !9102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9106, metadata !DIExpression()), !dbg !9108
  call void @llvm.dbg.value(metadata i32* %1, metadata !9107, metadata !DIExpression()), !dbg !9108
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9109, !srcloc !9111
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9112
  ret i32 %3, !dbg !9113
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9114 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9119, metadata !DIExpression()), !dbg !9123
  call void @llvm.dbg.value(metadata i32* %1, metadata !9120, metadata !DIExpression()), !dbg !9123
  %3 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9124
  call void @llvm.dbg.value(metadata i32 %3, metadata !9121, metadata !DIExpression()), !dbg !9123
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !9125
  call void @llvm.dbg.value(metadata i32 %4, metadata !9122, metadata !DIExpression()), !dbg !9123
  %5 = icmp ne i32 %3, %4, !dbg !9126
  %6 = sext i1 %5 to i32, !dbg !9127
  ret i32 %6, !dbg !9128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9133, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32 %1, metadata !9134, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32 %2, metadata !9135, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32* %3, metadata !9136, metadata !DIExpression()), !dbg !9137
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !9138
  ret i32 %5, !dbg !9139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9140 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9142, metadata !DIExpression()), !dbg !9146
  call void @llvm.dbg.value(metadata i32 %1, metadata !9143, metadata !DIExpression()), !dbg !9146
  call void @llvm.dbg.value(metadata i32 %2, metadata !9144, metadata !DIExpression()), !dbg !9146
  call void @llvm.dbg.value(metadata i32* %3, metadata !9145, metadata !DIExpression()), !dbg !9146
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9147, !srcloc !9149
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !9150
  ret i32 %5, !dbg !9151
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9152 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9154, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 %1, metadata !9155, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 %2, metadata !9156, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32* %3, metadata !9157, metadata !DIExpression()), !dbg !9162
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9163
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9165
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9165
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9165
  br i1 %11, label %33, label %12, !dbg !9165

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9162
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9162
  call void @llvm.dbg.value(metadata i8* %14, metadata !9160, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 %13, metadata !9158, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 %1, metadata !9159, metadata !DIExpression()), !dbg !9162
  br label %15, !dbg !9166

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9168
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9162
  call void @llvm.dbg.value(metadata i8* %17, metadata !9160, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 %16, metadata !9159, metadata !DIExpression()), !dbg !9162
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9169
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9172
  call void @llvm.dbg.value(metadata i8* %19, metadata !9160, metadata !DIExpression()), !dbg !9162
  %20 = load i8, i8* %17, align 1, !dbg !9173
  %21 = zext i8 %20 to i32, !dbg !9174
  %22 = tail call i32 %18(i32 noundef %21) #28, !dbg !9169
  %23 = icmp eq i32 %22, -1, !dbg !9175
  br i1 %23, label %30, label %24, !dbg !9176

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9177
  call void @llvm.dbg.value(metadata i32 %25, metadata !9159, metadata !DIExpression()), !dbg !9162
  %26 = icmp eq i32 %25, 0, !dbg !9178
  br i1 %26, label %27, label %15, !dbg !9179, !llvm.loop !9180

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9182
  call void @llvm.dbg.value(metadata i32 %28, metadata !9158, metadata !DIExpression()), !dbg !9162
  %29 = icmp eq i32 %28, 0, !dbg !9183
  br i1 %29, label %30, label %12, !dbg !9184, !llvm.loop !9185

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9162
  call void @llvm.dbg.value(metadata i32 %31, metadata !9158, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.label(metadata !9161), !dbg !9188
  %32 = sub i32 %2, %31, !dbg !9189
  br label %33, !dbg !9190

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9162
  ret i32 %34, !dbg !9191
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9192 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9196, metadata !DIExpression()), !dbg !9197
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !9198
  %3 = icmp eq i32 %2, -1, !dbg !9200
  br i1 %3, label %8, label %4, !dbg !9201

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !9202
  %6 = icmp eq i32 %5, -1, !dbg !9203
  %7 = sext i1 %6 to i32, !dbg !9202
  br label %8, !dbg !9204

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9197
  ret i32 %9, !dbg !9205
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9206 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9214, metadata !DIExpression()), !dbg !9216
  %3 = tail call i64 @sys_clock_tick_get() #28, !dbg !9217
  call void @llvm.dbg.value(metadata i64 %3, metadata !9215, metadata !DIExpression()), !dbg !9216
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9218
  %5 = sub i64 %1, %3, !dbg !9218
  store i64 %5, i64* %4, align 8, !dbg !9218
  ret void, !dbg !9219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9220 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9372, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9370, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.value(metadata i8* %1, metadata !9371, metadata !DIExpression()), !dbg !9375
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #28, !dbg !9376
  call void @llvm.dbg.value(metadata i64 %4, metadata !9374, metadata !DIExpression()), !dbg !9375
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9377
  %6 = load i1 (i8*, i32)*, i1 (i8*, i32)** %5, align 4, !dbg !9377
  %7 = icmp eq i1 (i8*, i32)* %6, null, !dbg !9379
  br i1 %7, label %13, label %8, !dbg !9380

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 1, !dbg !9381
  %10 = load i16, i16* %9, align 4, !dbg !9381
  %11 = zext i16 %10 to i32, !dbg !9382
  %12 = tail call zeroext i1 %6(i8* noundef %1, i32 noundef %11) #28, !dbg !9383
  br i1 %12, label %13, label %28, !dbg !9384

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9385
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9385
  %16 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %15, [1 x i64] %2) #27, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %16, metadata !9373, metadata !DIExpression()), !dbg !9375
  %17 = icmp eq i32 %16, 0, !dbg !9387
  br i1 %17, label %18, label %28, !dbg !9389

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !9390
  %20 = load i8*, i8** %19, align 4, !dbg !9390
  %21 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 1, !dbg !9391
  %22 = load i16, i16* %21, align 4, !dbg !9391
  %23 = zext i16 %22 to i32, !dbg !9392
  %24 = tail call i8* @memcpy(i8* noundef %20, i8* noundef %1, i32 noundef %23) #28, !dbg !9393
  %25 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %4) #27, !dbg !9394
  call void @llvm.dbg.value(metadata i32 %25, metadata !9373, metadata !DIExpression()), !dbg !9375
  %26 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9395
  %27 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %26) #27, !dbg !9396
  br label %28, !dbg !9397

28:                                               ; preds = %13, %8, %18
  %29 = phi i32 [ %25, %18 ], [ -35, %8 ], [ %16, %13 ], !dbg !9375
  ret i32 %29, !dbg !9398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9399 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9404, metadata !DIExpression()), !dbg !9405
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9403, metadata !DIExpression()), !dbg !9405
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9406, !srcloc !9408
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #28, !dbg !9409
  ret i32 %3, !dbg !9410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9411 {
  %3 = alloca %struct.zbus_channel*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9415, metadata !DIExpression()), !dbg !9423
  store %struct.zbus_channel* %0, %struct.zbus_channel** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9416, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.value(metadata i32 0, metadata !9417, metadata !DIExpression()), !dbg !9423
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 6, !dbg !9424
  %6 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9424
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %6, metadata !9419, metadata !DIExpression()), !dbg !9425
  %7 = load %struct.zbus_observer*, %struct.zbus_observer** %6, align 4, !dbg !9426
  %8 = icmp eq %struct.zbus_observer* %7, null, !dbg !9428
  br i1 %8, label %31, label %16, !dbg !9429

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9430
  %11 = load %struct.zbus_observer*, %struct.zbus_observer** %10, align 4, !dbg !9431
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9415, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %10, metadata !9421, metadata !DIExpression()), !dbg !9433
  call void @llvm.dbg.value(metadata i32 0, metadata !9417, metadata !DIExpression()), !dbg !9423
  %12 = icmp eq %struct.zbus_observer* %11, null, !dbg !9434
  br i1 %12, label %31, label %13, !dbg !9435

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %33, !dbg !9435

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !9419, metadata !DIExpression()), !dbg !9425
  %19 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 1, !dbg !9436
  %20 = load i8, i8* %19, align 4, !dbg !9436, !range !7719
  %21 = icmp eq i8 %20, 0, !dbg !9436
  br i1 %21, label %27, label %22, !dbg !9439

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 3, !dbg !9440
  %24 = load void (%struct.zbus_channel*)*, void (%struct.zbus_channel*)** %23, align 4, !dbg !9440
  %25 = icmp eq void (%struct.zbus_channel*)* %24, null, !dbg !9441
  br i1 %25, label %27, label %26, !dbg !9442

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9415, metadata !DIExpression()), !dbg !9423
  tail call void %24(%struct.zbus_channel* noundef %0) #28, !dbg !9443
  br label %27, !dbg !9445

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %18, i32 1, !dbg !9446
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %28, metadata !9419, metadata !DIExpression()), !dbg !9425
  %29 = load %struct.zbus_observer*, %struct.zbus_observer** %28, align 4, !dbg !9426
  %30 = icmp eq %struct.zbus_observer* %29, null, !dbg !9428
  br i1 %30, label %9, label %16, !dbg !9429, !llvm.loop !9447

31:                                               ; preds = %53, %2, %9
  %32 = phi i32 [ 0, %9 ], [ 0, %2 ], [ %54, %53 ], !dbg !9423
  ret i32 %32, !dbg !9449

33:                                               ; preds = %13, %53
  %34 = phi %struct.zbus_observer* [ %11, %13 ], [ %56, %53 ]
  %35 = phi %struct.zbus_observer** [ %10, %13 ], [ %55, %53 ]
  %36 = phi i32 [ 0, %13 ], [ %54, %53 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %35, metadata !9421, metadata !DIExpression()), !dbg !9433
  call void @llvm.dbg.value(metadata i32 %36, metadata !9417, metadata !DIExpression()), !dbg !9423
  %37 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 1, !dbg !9450
  %38 = load i8, i8* %37, align 4, !dbg !9450, !range !7719
  %39 = icmp eq i8 %38, 0, !dbg !9450
  br i1 %39, label %53, label %40, !dbg !9453

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 2, !dbg !9454
  %42 = load %struct.k_msgq*, %struct.k_msgq** %41, align 4, !dbg !9454
  %43 = icmp eq %struct.k_msgq* %42, null, !dbg !9455
  br i1 %43, label %53, label %44, !dbg !9456

44:                                               ; preds = %40
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #27, !dbg !9457
  %45 = load i64, i64* %15, align 8, !dbg !9459
  %46 = insertvalue [1 x i64] poison, i64 %45, 0, !dbg !9459
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %3, metadata !9415, metadata !DIExpression(DW_OP_deref)), !dbg !9423
  %47 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %42, i8* noundef nonnull %14, [1 x i64] %46) #27, !dbg !9459
  call void @llvm.dbg.value(metadata i32 %47, metadata !9418, metadata !DIExpression()), !dbg !9423
  %48 = icmp eq i32 %47, 0, !dbg !9460
  br i1 %48, label %53, label %49, !dbg !9462

49:                                               ; preds = %44
  %50 = load %struct.zbus_observer*, %struct.zbus_observer** %35, align 4, !dbg !9463
  %51 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %50, i32 0, i32 0, !dbg !9463
  %52 = load i8*, i8** %51, align 4, !dbg !9463
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1.94, i32 0, i32 0), i32 noundef 69, i8* noundef %52, %struct.zbus_observer* noundef %50, i32 noundef %47) #28, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %47, metadata !9417, metadata !DIExpression()), !dbg !9423
  br label %53, !dbg !9469

53:                                               ; preds = %33, %40, %49, %44
  %54 = phi i32 [ %47, %49 ], [ %36, %44 ], [ %36, %40 ], [ %36, %33 ], !dbg !9423
  call void @llvm.dbg.value(metadata i32 %54, metadata !9417, metadata !DIExpression()), !dbg !9423
  %55 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %35, i32 1, !dbg !9470
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %55, metadata !9421, metadata !DIExpression()), !dbg !9433
  %56 = load %struct.zbus_observer*, %struct.zbus_observer** %55, align 4, !dbg !9431
  %57 = icmp eq %struct.zbus_observer* %56, null, !dbg !9434
  br i1 %57, label %31, label %33, !dbg !9435, !llvm.loop !9471
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !9473 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9477, metadata !DIExpression()), !dbg !9478
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9479, !srcloc !9481
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #28, !dbg !9482
  ret i32 %2, !dbg !9483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9484 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9490, metadata !DIExpression()), !dbg !9491
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9488, metadata !DIExpression()), !dbg !9491
  call void @llvm.dbg.value(metadata i8* %1, metadata !9489, metadata !DIExpression()), !dbg !9491
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9492, !srcloc !9494
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #28, !dbg !9495
  ret i32 %4, !dbg !9496
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel* nocapture noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9497 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9503, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9501, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata i8* %1, metadata !9502, metadata !DIExpression()), !dbg !9505
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9506
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9506
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %2) #27, !dbg !9507
  call void @llvm.dbg.value(metadata i32 %6, metadata !9504, metadata !DIExpression()), !dbg !9505
  %7 = icmp eq i32 %6, 0, !dbg !9508
  br i1 %7, label %8, label %17, !dbg !9510

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !9511
  %10 = load i8*, i8** %9, align 4, !dbg !9511
  %11 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 1, !dbg !9512
  %12 = load i16, i16* %11, align 4, !dbg !9512
  %13 = zext i16 %12 to i32, !dbg !9513
  %14 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %10, i32 noundef %13) #28, !dbg !9514
  %15 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9515
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #27, !dbg !9516
  br label %17, !dbg !9517

17:                                               ; preds = %3, %8
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ], !dbg !9505
  ret i32 %18, !dbg !9518
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9519 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9524, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9523, metadata !DIExpression()), !dbg !9527
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #28, !dbg !9528
  call void @llvm.dbg.value(metadata i64 %3, metadata !9526, metadata !DIExpression()), !dbg !9527
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9529
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9529
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %1) #27, !dbg !9530
  call void @llvm.dbg.value(metadata i32 %6, metadata !9525, metadata !DIExpression()), !dbg !9527
  %7 = icmp eq i32 %6, 0, !dbg !9531
  br i1 %7, label %8, label %12, !dbg !9533

8:                                                ; preds = %2
  %9 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %3) #27, !dbg !9534
  call void @llvm.dbg.value(metadata i32 %9, metadata !9525, metadata !DIExpression()), !dbg !9527
  %10 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9535
  %11 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %10) #27, !dbg !9536
  br label %12, !dbg !9537

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %9, %8 ], [ %6, %2 ], !dbg !9527
  ret i32 %13, !dbg !9538
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel* nocapture noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9539 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9542, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9541, metadata !DIExpression()), !dbg !9544
  %3 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9545
  %4 = load %struct.k_mutex*, %struct.k_mutex** %3, align 4, !dbg !9545
  %5 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %4, [1 x i64] %1) #27, !dbg !9546
  call void @llvm.dbg.value(metadata i32 %5, metadata !9543, metadata !DIExpression()), !dbg !9544
  ret i32 %5, !dbg !9547
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9548 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9552, metadata !DIExpression()), !dbg !9554
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9555
  %3 = load %struct.k_mutex*, %struct.k_mutex** %2, align 4, !dbg !9555
  %4 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %3) #27, !dbg !9556
  call void @llvm.dbg.value(metadata i32 %4, metadata !9553, metadata !DIExpression()), !dbg !9554
  ret i32 %4, !dbg !9557
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer* nocapture noundef readonly %0, %struct.zbus_channel** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9558 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9565, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !9563, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !9564, metadata !DIExpression()), !dbg !9566
  %4 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 2, !dbg !9567
  %5 = load %struct.k_msgq*, %struct.k_msgq** %4, align 4, !dbg !9567
  %6 = icmp eq %struct.k_msgq* %5, null, !dbg !9569
  br i1 %6, label %10, label %7, !dbg !9570

7:                                                ; preds = %3
  %8 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !9571
  %9 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %5, i8* noundef %8, [1 x i64] %2) #27, !dbg !9572
  br label %10, !dbg !9573

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ -22, %3 ], !dbg !9566
  ret i32 %11, !dbg !9574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9575 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9581, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9579, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i8* %1, metadata !9580, metadata !DIExpression()), !dbg !9582
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9583, !srcloc !9585
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #28, !dbg !9586
  ret i32 %4, !dbg !9587
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @zbus_iterate_over_channels(i1 (%struct.zbus_channel*)* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9588 {
  call void @llvm.dbg.value(metadata i1 (%struct.zbus_channel*)* %0, metadata !9742, metadata !DIExpression()), !dbg !9746
  call void @llvm.dbg.value(metadata %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), metadata !9743, metadata !DIExpression()), !dbg !9747
  br i1 icmp ult (%struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_end, i32 0, i32 0)), label %2, label %10, !dbg !9748

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), metadata !9743, metadata !DIExpression()), !dbg !9747
  %3 = tail call zeroext i1 %0(%struct.zbus_channel* noundef nonnull getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0)) #28, !dbg !9749
  call void @llvm.dbg.value(metadata %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 1), metadata !9743, metadata !DIExpression()), !dbg !9747
  br i1 %3, label %4, label %10, !dbg !9753

4:                                                ; preds = %2, %7
  %5 = phi %struct.zbus_channel* [ %9, %7 ], [ getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 1), %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %5, metadata !9743, metadata !DIExpression()), !dbg !9747
  %6 = icmp ult %struct.zbus_channel* %5, getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_end, i32 0, i32 0), !dbg !9754
  br i1 %6, label %7, label %10, !dbg !9748, !llvm.loop !9756

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %5, metadata !9743, metadata !DIExpression()), !dbg !9747
  %8 = tail call zeroext i1 %0(%struct.zbus_channel* noundef nonnull %5) #28, !dbg !9749
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %5, i32 1, !dbg !9758
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %9, metadata !9743, metadata !DIExpression()), !dbg !9747
  br i1 %8, label %4, label %10, !dbg !9753, !llvm.loop !9756

10:                                               ; preds = %7, %4, %2, %1
  %11 = phi i1 [ icmp ult (%struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_end, i32 0, i32 0)), %1 ], [ icmp ult (%struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_end, i32 0, i32 0)), %2 ], [ %6, %4 ], [ %6, %7 ], !dbg !9754
  %12 = xor i1 %11, true, !dbg !9759
  ret i1 %12, !dbg !9759
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @zbus_iterate_over_observers(i1 (%struct.zbus_observer*)* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9760 {
  call void @llvm.dbg.value(metadata i1 (%struct.zbus_observer*)* %0, metadata !9767, metadata !DIExpression()), !dbg !9771
  call void @llvm.dbg.value(metadata %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), metadata !9768, metadata !DIExpression()), !dbg !9772
  br i1 icmp ult (%struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_end, i32 0, i32 0)), label %2, label %10, !dbg !9773

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), metadata !9768, metadata !DIExpression()), !dbg !9772
  %3 = tail call zeroext i1 %0(%struct.zbus_observer* noundef nonnull getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0)) #28, !dbg !9774
  call void @llvm.dbg.value(metadata %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 1), metadata !9768, metadata !DIExpression()), !dbg !9772
  br i1 %3, label %4, label %10, !dbg !9778

4:                                                ; preds = %2, %7
  %5 = phi %struct.zbus_observer* [ %9, %7 ], [ getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 1), %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %5, metadata !9768, metadata !DIExpression()), !dbg !9772
  %6 = icmp ult %struct.zbus_observer* %5, getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_end, i32 0, i32 0), !dbg !9779
  br i1 %6, label %7, label %10, !dbg !9773, !llvm.loop !9781

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %5, metadata !9768, metadata !DIExpression()), !dbg !9772
  %8 = tail call zeroext i1 %0(%struct.zbus_observer* noundef nonnull %5) #28, !dbg !9774
  %9 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %5, i32 1, !dbg !9783
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %9, metadata !9768, metadata !DIExpression()), !dbg !9772
  br i1 %8, label %4, label %10, !dbg !9778, !llvm.loop !9781

10:                                               ; preds = %7, %4, %2, %1
  %11 = phi i1 [ icmp ult (%struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_end, i32 0, i32 0)), %1 ], [ icmp ult (%struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_end, i32 0, i32 0)), %2 ], [ %6, %4 ], [ %6, %7 ], !dbg !9779
  %12 = xor i1 %11, true, !dbg !9784
  ret i1 %12, !dbg !9784
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9787, metadata !DIExpression()), !dbg !9788
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !9789
  ret void, !dbg !9790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9795, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %1, metadata !9796, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9797, metadata !DIExpression()), !dbg !9801
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9802
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9802
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9802
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9798, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %0, metadata !9800, metadata !DIExpression()), !dbg !9801
  %7 = icmp slt i32 %0, %1, !dbg !9803
  br i1 %7, label %8, label %22, !dbg !9806

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9800, metadata !DIExpression()), !dbg !9801
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !9807
  %11 = icmp eq i32 %10, 0, !dbg !9807
  br i1 %11, label %19, label %12, !dbg !9810

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !9811
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9813
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9813
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9815
  br i1 %15, label %19, label %16, !dbg !9816

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9817
  %18 = load i8*, i8** %17, align 4, !dbg !9817
  tail call void %14(i32 noundef %9, i8* noundef %18) #28, !dbg !9818
  br label %19, !dbg !9819

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9820
  call void @llvm.dbg.value(metadata i32 %20, metadata !9800, metadata !DIExpression()), !dbg !9801
  %21 = icmp eq i32 %20, %1, !dbg !9803
  br i1 %21, label %22, label %8, !dbg !9806, !llvm.loop !9821

22:                                               ; preds = %19, %3
  ret void, !dbg !9823
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #18 !dbg !9824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9826, metadata !DIExpression()), !dbg !9827
  %2 = shl nuw i32 1, %0, !dbg !9828
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !9831
  ret i32 %3, !dbg !9832
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #17 !dbg !9833 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9837, metadata !DIExpression()), !dbg !9838
  %2 = shl nuw i32 1, %0, !dbg !9839
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !9842
  ret void, !dbg !9843
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9844 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9847, metadata !DIExpression()), !dbg !9848
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9849
  ret void, !dbg !9850
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9853, metadata !DIExpression()), !dbg !9854
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9855
  %3 = and i32 %2, %0, !dbg !9855
  %4 = icmp eq i32 %3, %0, !dbg !9856
  %5 = zext i1 %4 to i32, !dbg !9856
  ret i32 %5, !dbg !9857
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9858 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9860, metadata !DIExpression()), !dbg !9861
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !9862
  ret void, !dbg !9863
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9864 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9866, metadata !DIExpression()), !dbg !9867
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !9868
  ret void, !dbg !9869
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9872, metadata !DIExpression()), !dbg !9873
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !9874
  ret void, !dbg !9875
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9876 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9878, metadata !DIExpression()), !dbg !9879
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #27, !dbg !9880
  ret void, !dbg !9881
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9882 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9884, metadata !DIExpression()), !dbg !9885
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #27, !dbg !9886
  ret void, !dbg !9887
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9888 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9890, metadata !DIExpression()), !dbg !9891
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !9892
  ret void, !dbg !9893
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9894 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9896, metadata !DIExpression()), !dbg !9897
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #27, !dbg !9898
  ret void, !dbg !9899
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9900 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9902, metadata !DIExpression()), !dbg !9903
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #27, !dbg !9904
  ret void, !dbg !9905
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9906 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9908, metadata !DIExpression()), !dbg !9909
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !9910
  ret void, !dbg !9911
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9912 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9914, metadata !DIExpression()), !dbg !9915
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !9916
  ret void, !dbg !9917
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9920, metadata !DIExpression()), !dbg !9921
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !9922
  ret i32 0, !dbg !9923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !879 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !883, metadata !DIExpression()), !dbg !9924
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #28, !dbg !9925
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #28, !dbg !9927
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #28, !dbg !9929
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #28, !dbg !9931
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #28, !dbg !9933
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #28, !dbg !9935
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #28, !dbg !9937
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #28, !dbg !9939
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #28, !dbg !9941
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #28, !dbg !9943
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #28, !dbg !9945
  ret void, !dbg !9947
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9950, metadata !DIExpression()), !dbg !9952
  call void @llvm.dbg.value(metadata i32 0, metadata !9951, metadata !DIExpression()), !dbg !9952
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9953
  %3 = load i32, i32* %2, align 4, !dbg !9953
  call void @llvm.dbg.value(metadata i32 %3, metadata !9951, metadata !DIExpression()), !dbg !9952
  %4 = shl nuw i32 1, %0, !dbg !9954
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #27, !dbg !9955
  tail call void @arch_irq_enable(i32 noundef %3) #28, !dbg !9956
  ret void, !dbg !9957
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9960, metadata !DIExpression()), !dbg !9961
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9962
  %3 = or i32 %2, %0, !dbg !9962
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9962
  ret void, !dbg !9963
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #17 !dbg !9964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9966, metadata !DIExpression()), !dbg !9967
  %2 = icmp slt i32 %0, 32, !dbg !9968
  br i1 %2, label %3, label %5, !dbg !9970

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9971
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !9973
  br label %5, !dbg !9974

5:                                                ; preds = %1, %3
  ret void, !dbg !9975
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9978, metadata !DIExpression()), !dbg !9979
  %2 = xor i32 %0, -1, !dbg !9980
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9980
  %4 = and i32 %3, %2, !dbg !9980
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9980
  ret void, !dbg !9981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #17 !dbg !9982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9986, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata i32 %1, metadata !9987, metadata !DIExpression()), !dbg !9988
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9989

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9990
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !9992
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !9993
  br label %11, !dbg !9994

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9995
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !9996
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !9997
  br label %11, !dbg !9998

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9999
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !10000
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !10001
  br label %11, !dbg !10002

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !10003
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !10004
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !10005
  br label %11, !dbg !10006

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !10007
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10010, metadata !DIExpression()), !dbg !10011
  %2 = xor i32 %0, -1, !dbg !10012
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10012
  %4 = and i32 %3, %2, !dbg !10012
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10012
  ret void, !dbg !10013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10016, metadata !DIExpression()), !dbg !10017
  %2 = xor i32 %0, -1, !dbg !10018
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10018
  %4 = and i32 %3, %2, !dbg !10018
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10018
  ret void, !dbg !10019
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10022, metadata !DIExpression()), !dbg !10023
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10024
  %3 = or i32 %2, %0, !dbg !10024
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10024
  ret void, !dbg !10025
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10026 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10028, metadata !DIExpression()), !dbg !10029
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10030
  %3 = or i32 %2, %0, !dbg !10030
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10030
  ret void, !dbg !10031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #10 !dbg !10032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10036, metadata !DIExpression()), !dbg !10042
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !10037, metadata !DIExpression()), !dbg !10042
  call void @llvm.dbg.value(metadata i8* %2, metadata !10038, metadata !DIExpression()), !dbg !10042
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !10039, metadata !DIExpression()), !dbg !10042
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10041, metadata !DIExpression()), !dbg !10042
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10043
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10043
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10045
  br i1 %6, label %7, label %9, !dbg !10046

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10047
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10048
  store i8* %2, i8** %8, align 4, !dbg !10049
  br label %9, !dbg !10050

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10042
  ret i32 %10, !dbg !10051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !10052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10054, metadata !DIExpression()), !dbg !10057
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !10055, metadata !DIExpression()), !dbg !10057
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10056, metadata !DIExpression()), !dbg !10057
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10058
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10059
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10060
  store i8* null, i8** %3, align 4, !dbg !10061
  ret void, !dbg !10062
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #17 !dbg !10063 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10065, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i8* %1, metadata !10066, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i8* %1, metadata !10067, metadata !DIExpression()), !dbg !10070
  %3 = bitcast i8* %1 to i32*, !dbg !10071
  %4 = load i32, i32* %3, align 4, !dbg !10071
  %5 = add i32 %4, -169, !dbg !10071
  %6 = icmp ult i32 %5, -121, !dbg !10071
  br i1 %6, label %15, label %7, !dbg !10073

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10074
  %9 = inttoptr i32 %8 to i32*, !dbg !10075
  call void @llvm.dbg.value(metadata i32* %9, metadata !10068, metadata !DIExpression()), !dbg !10070
  %10 = load volatile i32, i32* %9, align 4, !dbg !10076
  call void @llvm.dbg.value(metadata i32 %10, metadata !10069, metadata !DIExpression()), !dbg !10070
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10077
  %12 = bitcast i8* %11 to i32*, !dbg !10077
  %13 = load i32, i32* %12, align 4, !dbg !10077
  %14 = or i32 %13, %10, !dbg !10078
  call void @llvm.dbg.value(metadata i32 %14, metadata !10069, metadata !DIExpression()), !dbg !10070
  store volatile i32 %14, i32* %9, align 4, !dbg !10079
  br label %15, !dbg !10080

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10070
  ret i32 %16, !dbg !10081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #17 !dbg !10082 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10084, metadata !DIExpression()), !dbg !10089
  call void @llvm.dbg.value(metadata i8* %1, metadata !10085, metadata !DIExpression()), !dbg !10089
  call void @llvm.dbg.value(metadata i8* %1, metadata !10086, metadata !DIExpression()), !dbg !10089
  %3 = bitcast i8* %1 to i32*, !dbg !10090
  %4 = load i32, i32* %3, align 4, !dbg !10090
  %5 = add i32 %4, -169, !dbg !10090
  %6 = icmp ult i32 %5, -121, !dbg !10090
  br i1 %6, label %16, label %7, !dbg !10092

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10093
  %9 = inttoptr i32 %8 to i32*, !dbg !10094
  call void @llvm.dbg.value(metadata i32* %9, metadata !10087, metadata !DIExpression()), !dbg !10089
  %10 = load volatile i32, i32* %9, align 4, !dbg !10095
  call void @llvm.dbg.value(metadata i32 %10, metadata !10088, metadata !DIExpression()), !dbg !10089
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10096
  %12 = bitcast i8* %11 to i32*, !dbg !10096
  %13 = load i32, i32* %12, align 4, !dbg !10096
  %14 = xor i32 %13, -1, !dbg !10097
  %15 = and i32 %10, %14, !dbg !10098
  call void @llvm.dbg.value(metadata i32 %15, metadata !10088, metadata !DIExpression()), !dbg !10089
  store volatile i32 %15, i32* %9, align 4, !dbg !10099
  br label %16, !dbg !10100

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10089
  ret i32 %17, !dbg !10101
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10102 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10104, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.value(metadata i8* %1, metadata !10105, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.value(metadata i32* %2, metadata !10106, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.value(metadata i8* %1, metadata !10107, metadata !DIExpression()), !dbg !10112
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10113
  call void @llvm.dbg.value(metadata i32 %4, metadata !10108, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.value(metadata i32 undef, metadata !10109, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.value(metadata i32 undef, metadata !10110, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.value(metadata i32 %4, metadata !10111, metadata !DIExpression()), !dbg !10112
  %5 = bitcast i8* %1 to i32*, !dbg !10114
  %6 = load i32, i32* %5, align 4, !dbg !10114
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !10115

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #27, !dbg !10116
  call void @llvm.dbg.value(metadata i32 %8, metadata !10109, metadata !DIExpression()), !dbg !10112
  br label %19, !dbg !10117

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #27, !dbg !10119
  call void @llvm.dbg.value(metadata i32 %10, metadata !10110, metadata !DIExpression()), !dbg !10112
  br label %19, !dbg !10120

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #28, !dbg !10121
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #27, !dbg !10122
  br label %19, !dbg !10123

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #28, !dbg !10124
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #27, !dbg !10125
  br label %19, !dbg !10126

17:                                               ; preds = %3
  br label %19, !dbg !10127

18:                                               ; preds = %3
  br label %19, !dbg !10128

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !10129
  br label %21, !dbg !10130

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !10112
  ret i32 %22, !dbg !10130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #17 !dbg !10131 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10133, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata i8* %1, metadata !10134, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata i8* %2, metadata !10135, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata i8* %1, metadata !10136, metadata !DIExpression()), !dbg !10141
  %4 = bitcast i8* %1 to i32*, !dbg !10142
  %5 = load i32, i32* %4, align 4, !dbg !10142
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !10143
  call void @llvm.dbg.value(metadata i32 %6, metadata !10140, metadata !DIExpression()), !dbg !10141
  %7 = icmp slt i32 %6, 0, !dbg !10144
  br i1 %7, label %22, label %8, !dbg !10146

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10136, metadata !DIExpression()), !dbg !10141
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10147
  %10 = bitcast i8* %9 to i32*, !dbg !10147
  %11 = load i32, i32* %10, align 4, !dbg !10147
  %12 = lshr i32 %11, 16, !dbg !10147
  %13 = and i32 %12, 7, !dbg !10147
  %14 = lshr i32 %11, 8, !dbg !10148
  %15 = and i32 %14, 31, !dbg !10148
  %16 = shl i32 %13, %15, !dbg !10149
  call void @llvm.dbg.value(metadata i32 %16, metadata !10139, metadata !DIExpression()), !dbg !10141
  %17 = and i32 %11, 255, !dbg !10150
  %18 = or i32 %17, 1073887232, !dbg !10151
  %19 = inttoptr i32 %18 to i32*, !dbg !10152
  call void @llvm.dbg.value(metadata i32* %19, metadata !10137, metadata !DIExpression()), !dbg !10141
  %20 = load volatile i32, i32* %19, align 4, !dbg !10153
  call void @llvm.dbg.value(metadata i32 %20, metadata !10138, metadata !DIExpression()), !dbg !10141
  %21 = or i32 %16, %20, !dbg !10154
  call void @llvm.dbg.value(metadata i32 %21, metadata !10138, metadata !DIExpression()), !dbg !10141
  store volatile i32 %21, i32* %19, align 4, !dbg !10155
  br label %22, !dbg !10156

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10141
  ret i32 %23, !dbg !10157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !10158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10162, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 0, metadata !10163, metadata !DIExpression()), !dbg !10164
  %2 = add i32 %0, -1, !dbg !10165
  %3 = icmp ult i32 %2, 6, !dbg !10165
  br i1 %3, label %4, label %7, !dbg !10165

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10165
  %6 = load i32, i32* %5, align 4, !dbg !10165
  call void @llvm.dbg.value(metadata i32 %6, metadata !10163, metadata !DIExpression()), !dbg !10164
  br label %7, !dbg !10166

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10164
  ret i32 %8, !dbg !10167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !10168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10172, metadata !DIExpression()), !dbg !10174
  call void @llvm.dbg.value(metadata i32 %1, metadata !10173, metadata !DIExpression()), !dbg !10174
  %3 = udiv i32 %0, %1, !dbg !10175
  ret i32 %3, !dbg !10176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !10177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10181, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 12, metadata !10182, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 336, metadata !10183, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %1, metadata !10184, metadata !DIExpression()), !dbg !10185
  %3 = mul i32 %0, 336, !dbg !10186
  %4 = mul nsw i32 %1, 12, !dbg !10187
  %5 = udiv i32 %3, %4, !dbg !10188
  ret i32 %5, !dbg !10189
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10190 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10192, metadata !DIExpression()), !dbg !10195
  tail call void @config_enable_default_clocks() #28, !dbg !10196
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #28, !dbg !10197
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !10197
  %4 = lshr i32 %3, 4, !dbg !10197
  %5 = and i32 %4, 15, !dbg !10197
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10197
  %7 = load i8, i8* %6, align 1, !dbg !10197
  %8 = zext i8 %7 to i32, !dbg !10197
  %9 = lshr i32 %2, %8, !dbg !10197
  call void @llvm.dbg.value(metadata i32 %9, metadata !10193, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !10194, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10195
  %10 = icmp ult i32 %9, 168000000, !dbg !10198
  br i1 %10, label %11, label %13, !dbg !10200

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #28, !dbg !10201
  br label %13, !dbg !10203

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !10204
  tail call fastcc void @set_up_plls() #27, !dbg !10205
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !10206
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #27, !dbg !10209
  br label %14, !dbg !10210

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10211
  %16 = icmp eq i32 %15, 8, !dbg !10212
  br i1 %16, label %17, label %14, !dbg !10210, !llvm.loop !10213

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !10215
  br i1 %18, label %19, label %21, !dbg !10217

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #28, !dbg !10218
  br label %21, !dbg !10220

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !10221
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !10222
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !10223
  ret i32 0, !dbg !10224
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #18 !dbg !10225 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10227
  %2 = and i32 %1, 240, !dbg !10227
  ret i32 %2, !dbg !10228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #17 !dbg !10229 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !10230
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !10235
  br label %1, !dbg !10236

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !10237
  %3 = icmp eq i32 %2, 1, !dbg !10238
  br i1 %3, label %4, label %1, !dbg !10236, !llvm.loop !10239

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !10241
  br label %5, !dbg !10244

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !10245
  %7 = icmp eq i32 %6, 1, !dbg !10246
  br i1 %7, label %8, label %5, !dbg !10244, !llvm.loop !10247

8:                                                ; preds = %5
  ret void, !dbg !10249
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10250 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10251
  %2 = icmp eq i32 %1, 8, !dbg !10253
  br i1 %2, label %3, label %4, !dbg !10254

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !10255
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !10257
  br label %4, !dbg !10258

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !10259
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10260
  %6 = and i32 %5, -196609, !dbg !10260
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10260
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10261
  %8 = and i32 %7, -251658241, !dbg !10261
  %9 = or i32 %8, 117440512, !dbg !10261
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10261
  tail call void @config_pll_sysclock() #28, !dbg !10262
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !10263
  br label %10, !dbg !10264

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !10265
  %12 = icmp eq i32 %11, 1, !dbg !10266
  br i1 %12, label %13, label %10, !dbg !10264, !llvm.loop !10267

13:                                               ; preds = %10
  ret void, !dbg !10269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #17 !dbg !10270 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10272, metadata !DIExpression()), !dbg !10273
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10274
  %2 = and i32 %1, -241, !dbg !10274
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10274
  ret void, !dbg !10275
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #17 !dbg !10276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10278, metadata !DIExpression()), !dbg !10279
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10280
  %3 = and i32 %2, -4, !dbg !10280
  %4 = or i32 %3, %0, !dbg !10280
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10280
  ret void, !dbg !10281
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #18 !dbg !10282 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10283
  %2 = and i32 %1, 12, !dbg !10283
  ret i32 %2, !dbg !10284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #17 !dbg !10285 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !10287, metadata !DIExpression()), !dbg !10288
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10289
  %2 = and i32 %1, -7169, !dbg !10289
  %3 = or i32 %2, 5120, !dbg !10289
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10289
  ret void, !dbg !10290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #17 !dbg !10291 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !10293, metadata !DIExpression()), !dbg !10294
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10295
  %2 = and i32 %1, -57345, !dbg !10295
  %3 = or i32 %2, 32768, !dbg !10295
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10295
  ret void, !dbg !10296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #17 !dbg !10297 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10298
  %2 = icmp eq i32 %1, 1, !dbg !10300
  br i1 %2, label %7, label %3, !dbg !10301

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !10302
  br label %4, !dbg !10304

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10305
  %6 = icmp eq i32 %5, 1, !dbg !10306
  br i1 %6, label %7, label %4, !dbg !10304, !llvm.loop !10307

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #27, !dbg !10309
  br label %8, !dbg !10310

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10311
  %10 = icmp eq i32 %9, 0, !dbg !10312
  br i1 %10, label %11, label %8, !dbg !10310, !llvm.loop !10313

11:                                               ; preds = %8
  ret void, !dbg !10315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #17 !dbg !10316 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10317
  %2 = and i32 %1, -16777217, !dbg !10317
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10317
  ret void, !dbg !10318
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #17 !dbg !10319 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10320
  %2 = or i32 %1, 16777216, !dbg !10320
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10320
  ret void, !dbg !10321
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #18 !dbg !10322 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10323
  %2 = lshr i32 %1, 25, !dbg !10324
  %3 = and i32 %2, 1, !dbg !10324
  ret i32 %3, !dbg !10325
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #18 !dbg !10326 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10327
  %2 = lshr i32 %1, 1, !dbg !10328
  %3 = and i32 %2, 1, !dbg !10328
  ret i32 %3, !dbg !10329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #17 !dbg !10330 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10331
  %2 = or i32 %1, 1, !dbg !10331
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10331
  ret void, !dbg !10332
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #17 !dbg !10333 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10334
  %2 = and i32 %1, -262145, !dbg !10334
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10334
  ret void, !dbg !10335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #17 !dbg !10336 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10337
  %2 = or i32 %1, 65536, !dbg !10337
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10337
  ret void, !dbg !10338
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #18 !dbg !10339 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10340
  %2 = lshr i32 %1, 17, !dbg !10341
  %3 = and i32 %2, 1, !dbg !10341
  ret i32 %3, !dbg !10342
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #17 !dbg !10343 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10344
  %2 = or i32 %1, 1, !dbg !10344
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10344
  ret void, !dbg !10345
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #18 !dbg !10346 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10347
  %2 = lshr i32 %1, 1, !dbg !10348
  %3 = and i32 %2, 1, !dbg !10348
  ret i32 %3, !dbg !10349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10350 {
  ret i32 12000000, !dbg !10352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #17 !dbg !10356 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !10357
  ret void, !dbg !10358
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #17 !dbg !10359 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10363, metadata !DIExpression()), !dbg !10367
  call void @llvm.dbg.value(metadata i32 12, metadata !10364, metadata !DIExpression()), !dbg !10367
  call void @llvm.dbg.value(metadata i32 336, metadata !10365, metadata !DIExpression()), !dbg !10367
  call void @llvm.dbg.value(metadata i32 0, metadata !10366, metadata !DIExpression()), !dbg !10367
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10368
  %2 = and i32 %1, -4227072, !dbg !10368
  %3 = or i32 %2, 4215820, !dbg !10368
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10368
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10369
  %5 = and i32 %4, -196609, !dbg !10369
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10369
  ret void, !dbg !10370
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10371 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !10372
  ret void, !dbg !10373
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10374 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10377, metadata !DIExpression()), !dbg !10379
  %2 = bitcast i32* %1 to i8*, !dbg !10380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10380
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10378, metadata !DIExpression()), !dbg !10381
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10382
  %4 = or i32 %3, 268435456, !dbg !10382
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10382
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10383
  %6 = and i32 %5, 268435456, !dbg !10383
  store volatile i32 %6, i32* %1, align 4, !dbg !10384
  %7 = load volatile i32, i32* %1, align 4, !dbg !10385
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10386
  ret void, !dbg !10386
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10387 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10389, metadata !DIExpression()), !dbg !10390
  %2 = tail call fastcc zeroext i1 @device_is_ready() #27, !dbg !10391
  br i1 %2, label %3, label %4, !dbg !10393

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !10394
  br label %4, !dbg !10395

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10390
  ret i32 %5, !dbg !10396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10397 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10402, metadata !DIExpression()), !dbg !10403
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10404, !srcloc !10406
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #27, !dbg !10407
  ret i1 %1, !dbg !10408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10409 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #28, !dbg !10410
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #28, !dbg !10411
  ret void, !dbg !10412
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10415, metadata !DIExpression()), !dbg !10416
  %2 = icmp eq i32 %0, 10, !dbg !10417
  br i1 %2, label %3, label %4, !dbg !10419

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !10420
  br label %4, !dbg !10422

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10423
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !10424
  ret i32 %0, !dbg !10425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10426 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10429, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i8 %0, metadata !10430, metadata !DIExpression()), !dbg !10431
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10432, !srcloc !10434
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !10435
  ret void, !dbg !10436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10437 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10439, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.value(metadata i8 %0, metadata !10440, metadata !DIExpression()), !dbg !10442
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10443
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10441, metadata !DIExpression()), !dbg !10442
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10444
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10444
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #28, !dbg !10445
  ret void, !dbg !10446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10447 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10449, metadata !DIExpression()), !dbg !10450
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #28, !dbg !10451
  ret i1 %1, !dbg !10452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10453 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10500, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10501, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10502, metadata !DIExpression()), !dbg !10503
  ret void, !dbg !10504
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10505 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10507, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i8 %1, metadata !10508, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32 %2, metadata !10509, metadata !DIExpression()), !dbg !10512
  %5 = bitcast i32* %4 to i8*, !dbg !10513
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10513
  call void @llvm.dbg.value(metadata i32* %4, metadata !10511, metadata !DIExpression(DW_OP_deref)), !dbg !10512
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !10514
  call void @llvm.dbg.value(metadata i32 %6, metadata !10510, metadata !DIExpression()), !dbg !10512
  %7 = icmp eq i32 %6, 0, !dbg !10515
  br i1 %7, label %8, label %31, !dbg !10517

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10510, metadata !DIExpression()), !dbg !10512
  %9 = and i32 %2, 131072, !dbg !10518
  %10 = icmp eq i32 %9, 0, !dbg !10520
  br i1 %10, label %28, label %11, !dbg !10521

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10522
  %13 = icmp eq i32 %12, 0, !dbg !10525
  br i1 %13, label %18, label %14, !dbg !10526

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10527
  %16 = shl nuw i32 1, %15, !dbg !10527
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !10529
  br label %25, !dbg !10530

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10531
  %20 = icmp eq i32 %19, 0, !dbg !10533
  %21 = zext i8 %1 to i32, !dbg !10512
  br i1 %20, label %25, label %22, !dbg !10534

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10535
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !10537
  br label %25, !dbg !10538

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10539
  %27 = load i32, i32* %4, align 4, !dbg !10540
  call void @llvm.dbg.value(metadata i32 %30, metadata !10511, metadata !DIExpression()), !dbg !10512
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !10541
  br label %31, !dbg !10542

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10539
  %30 = load i32, i32* %4, align 4, !dbg !10540
  call void @llvm.dbg.value(metadata i32 %30, metadata !10511, metadata !DIExpression()), !dbg !10512
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !10541
  call void @llvm.dbg.value(metadata i32 0, metadata !10510, metadata !DIExpression()), !dbg !10512
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10543
  ret i32 %6, !dbg !10543
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #18 !dbg !10544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10548, metadata !DIExpression()), !dbg !10553
  call void @llvm.dbg.value(metadata i32* %1, metadata !10549, metadata !DIExpression()), !dbg !10553
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10554
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10554
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10554
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10550, metadata !DIExpression()), !dbg !10553
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10555
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10555
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10555
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10552, metadata !DIExpression()), !dbg !10553
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !10556
  store i32 %9, i32* %1, align 4, !dbg !10557
  ret i32 0, !dbg !10558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #17 !dbg !10559 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10561, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata i32 %1, metadata !10562, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata i32 %2, metadata !10563, metadata !DIExpression()), !dbg !10567
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10568
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10568
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10568
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10564, metadata !DIExpression()), !dbg !10567
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10569
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10569
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10569
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10565, metadata !DIExpression()), !dbg !10567
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !10570
  call void @llvm.dbg.value(metadata i32 %10, metadata !10566, metadata !DIExpression()), !dbg !10567
  %11 = xor i32 %1, -1, !dbg !10571
  %12 = and i32 %10, %11, !dbg !10572
  %13 = and i32 %2, %1, !dbg !10573
  %14 = or i32 %12, %13, !dbg !10574
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !10575
  ret i32 0, !dbg !10576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !10577 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10579, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata i32 %1, metadata !10580, metadata !DIExpression()), !dbg !10583
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10584
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10584
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10584
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10581, metadata !DIExpression()), !dbg !10583
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10585
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10585
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10585
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10582, metadata !DIExpression()), !dbg !10583
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10586
  store volatile i32 %1, i32* %9, align 4, !dbg !10586
  ret i32 0, !dbg !10587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !10588 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10590, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata i32 %1, metadata !10591, metadata !DIExpression()), !dbg !10594
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10595
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10595
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10595
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10592, metadata !DIExpression()), !dbg !10594
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10596
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10596
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10596
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10593, metadata !DIExpression()), !dbg !10594
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !10597
  ret i32 0, !dbg !10598
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !10599 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10601, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 %1, metadata !10602, metadata !DIExpression()), !dbg !10605
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10606
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10606
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10606
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10603, metadata !DIExpression()), !dbg !10605
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10607
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10607
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10607
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10604, metadata !DIExpression()), !dbg !10605
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10608
  %10 = load volatile i32, i32* %9, align 4, !dbg !10608
  %11 = xor i32 %10, %1, !dbg !10608
  store volatile i32 %11, i32* %9, align 4, !dbg !10608
  ret i32 0, !dbg !10609
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10610 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10612, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i8 %1, metadata !10613, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32 %2, metadata !10614, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32 %3, metadata !10615, metadata !DIExpression()), !dbg !10622
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10623
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10623
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10623
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10616, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i8* undef, metadata !10617, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32 0, metadata !10619, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32 0, metadata !10620, metadata !DIExpression()), !dbg !10622
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10624

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10625
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !10629
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10630
  %12 = load i32, i32* %11, align 4, !dbg !10630
  %13 = icmp eq i32 %10, %12, !dbg !10631
  br i1 %13, label %14, label %29, !dbg !10632

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #28, !dbg !10633
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #28, !dbg !10635
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #28, !dbg !10636
  br label %29, !dbg !10637

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10638
  %17 = load i8*, i8** %16, align 4, !dbg !10638
  call void @llvm.dbg.value(metadata i8* %17, metadata !10617, metadata !DIExpression()), !dbg !10622
  %18 = zext i8 %1 to i32, !dbg !10639
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #28, !dbg !10641
  %20 = icmp eq i32 %19, 0, !dbg !10642
  br i1 %20, label %21, label %29, !dbg !10643

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10644
  %23 = load i32, i32* %22, align 4, !dbg !10644
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !10645
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10646

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10619, metadata !DIExpression()), !dbg !10622
  br label %27, !dbg !10647

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10619, metadata !DIExpression()), !dbg !10622
  br label %27, !dbg !10649

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10619, metadata !DIExpression()), !dbg !10622
  br label %27, !dbg !10650

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10622
  call void @llvm.dbg.value(metadata i32 %28, metadata !10619, metadata !DIExpression()), !dbg !10622
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #28, !dbg !10651
  tail call void @stm32_exti_enable(i32 noundef %18) #28, !dbg !10652
  br label %29, !dbg !10652

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10622
  call void @llvm.dbg.value(metadata i32 %30, metadata !10620, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.label(metadata !10621), !dbg !10653
  ret i32 %30, !dbg !10654
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #16 !dbg !10655 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10657, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10658, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata i1 %2, metadata !10659, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10661
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10662
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10662
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10662
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10660, metadata !DIExpression()), !dbg !10661
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10663
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !10664
  ret i32 %8, !dbg !10665
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #16 !dbg !10666 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10672, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10673, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.value(metadata i1 %2, metadata !10674, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10675
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !10676
  br i1 %4, label %10, label %5, !dbg !10678

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10679
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #27, !dbg !10682
  %8 = or i1 %7, %2, !dbg !10683
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10683
  br i1 %2, label %11, label %13, !dbg !10683

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10684

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10685
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #27, !dbg !10688
  br label %13, !dbg !10689

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10675
  ret i32 %14, !dbg !10690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10691 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10695, metadata !DIExpression()), !dbg !10696
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10697
  %3 = icmp eq %struct._snode* %2, null, !dbg !10697
  ret i1 %3, !dbg !10697
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #16 !dbg !10698 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10702, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10703, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10704, metadata !DIExpression()), !dbg !10706
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10707
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10705, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10704, metadata !DIExpression()), !dbg !10706
  %4 = icmp eq %struct._snode* %3, null, !dbg !10709
  br i1 %4, label %15, label %5, !dbg !10707

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10705, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10704, metadata !DIExpression()), !dbg !10706
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10711
  br i1 %6, label %9, label %11, !dbg !10714

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10705, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10704, metadata !DIExpression()), !dbg !10706
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10711
  br i1 %8, label %9, label %11, !dbg !10714, !llvm.loop !10715

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !10716
  br label %15, !dbg !10716

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10705, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10704, metadata !DIExpression()), !dbg !10706
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #27, !dbg !10709
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10705, metadata !DIExpression()), !dbg !10706
  %14 = icmp eq %struct._snode* %13, null, !dbg !10709
  br i1 %14, label %15, label %7, !dbg !10707, !llvm.loop !10715

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !10719 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10723, metadata !DIExpression()), !dbg !10725
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10724, metadata !DIExpression()), !dbg !10725
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10726
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !10726
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !10726
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10727
  %5 = icmp eq %struct._snode* %4, null, !dbg !10727
  br i1 %5, label %6, label %8, !dbg !10726

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10729
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !10729
  br label %8, !dbg !10729

8:                                                ; preds = %6, %2
  ret void, !dbg !10726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10731 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10735, metadata !DIExpression()), !dbg !10736
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10737
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10737
  ret %struct._snode* %3, !dbg !10738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10739 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10743, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10744, metadata !DIExpression()), !dbg !10745
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10746
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10747
  ret void, !dbg !10748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10749 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10751, metadata !DIExpression()), !dbg !10753
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10752, metadata !DIExpression()), !dbg !10753
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10754
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10755
  ret void, !dbg !10756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10757 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10759, metadata !DIExpression()), !dbg !10760
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10761
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10761
  ret %struct._snode* %3, !dbg !10762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10763 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10765, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10766, metadata !DIExpression()), !dbg !10767
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10768
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10769
  ret void, !dbg !10770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #10 !dbg !10771 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10775, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10776, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10777, metadata !DIExpression()), !dbg !10778
  %4 = icmp eq %struct._snode* %1, null, !dbg !10779
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #27, !dbg !10781
  br i1 %4, label %6, label %11, !dbg !10782

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !10783
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10785
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10785
  br i1 %8, label %9, label %15, !dbg !10783

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10787
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !10787
  br label %15, !dbg !10787

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !10789
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10791
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10791
  br i1 %13, label %14, label %15, !dbg !10789

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !10793
  br label %15, !dbg !10793

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !10782
  ret void, !dbg !10782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #3 !dbg !10795 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10799, metadata !DIExpression()), !dbg !10800
  %2 = icmp eq %struct._snode* %0, null, !dbg !10801
  br i1 %2, label %5, label %3, !dbg !10801

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !10801
  br label %5, !dbg !10801

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10801
  ret %struct._snode* %6, !dbg !10801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10802 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10804, metadata !DIExpression()), !dbg !10805
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !10806
  ret %struct._snode* %2, !dbg !10806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10807 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10809, metadata !DIExpression()), !dbg !10810
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10811
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10811
  ret %struct._snode* %3, !dbg !10812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10815, metadata !DIExpression()), !dbg !10818
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !10819, !range !10820
  call void @llvm.dbg.value(metadata i32 %2, metadata !10816, metadata !DIExpression()), !dbg !10818
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !10821
  call void @llvm.dbg.value(metadata i32 %3, metadata !10817, metadata !DIExpression()), !dbg !10818
  ret i32 %3, !dbg !10822
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10825, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i8* %1, metadata !10826, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i8* %1, metadata !10827, metadata !DIExpression()), !dbg !10828
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10829
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10829
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10830
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10830
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10830
  %8 = shl nuw i32 1, %0, !dbg !10831
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !10832
  ret void, !dbg !10833
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10834 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10838, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata i32 %1, metadata !10839, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10840, metadata !DIExpression()), !dbg !10844
  %4 = bitcast i64* %3 to i8*, !dbg !10845
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10845
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10842, metadata !DIExpression()), !dbg !10844
  store i64 70368744177732, i64* %3, align 8, !dbg !10846
  call void @llvm.dbg.value(metadata i64* %3, metadata !10842, metadata !DIExpression(DW_OP_deref)), !dbg !10844
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %5, metadata !10843, metadata !DIExpression()), !dbg !10844
  %6 = icmp eq i32 %5, 0, !dbg !10848
  br i1 %6, label %7, label %8, !dbg !10850

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !10851
  br label %8, !dbg !10852

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10853
  ret void, !dbg !10853
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10854 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10856, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata i8* %0, metadata !10857, metadata !DIExpression()), !dbg !10859
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10860
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10858, metadata !DIExpression()), !dbg !10859
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10861
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10861
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #28, !dbg !10862
  ret i32 %5, !dbg !10863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10866, metadata !DIExpression()), !dbg !10869
  call void @llvm.dbg.value(metadata i32 %1, metadata !10867, metadata !DIExpression()), !dbg !10869
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !10870
  call void @llvm.dbg.value(metadata i32 %3, metadata !10868, metadata !DIExpression()), !dbg !10869
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !10871
  ret void, !dbg !10872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10877, metadata !DIExpression()), !dbg !10878
  %2 = sdiv i32 %0, 4, !dbg !10879
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10880
  %6 = add nsw i32 %5, 16, !dbg !10881
  %7 = shl i32 15, %6, !dbg !10882
  %8 = or i32 %7, %2, !dbg !10883
  ret i32 %8, !dbg !10884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10889, metadata !DIExpression()), !dbg !10891
  call void @llvm.dbg.value(metadata i32 %1, metadata !10890, metadata !DIExpression()), !dbg !10891
  %3 = and i32 %1, 255, !dbg !10892
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10892
  %5 = load volatile i32, i32* %4, align 4, !dbg !10892
  %6 = lshr i32 %1, 16, !dbg !10892
  %7 = xor i32 %6, -1, !dbg !10892
  %8 = and i32 %5, %7, !dbg !10892
  call void @llvm.dbg.value(metadata i32 %6, metadata !10893, metadata !DIExpression()) #26, !dbg !10897
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !10899, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %9, metadata !10896, metadata !DIExpression()) #26, !dbg !10897
  call void @llvm.dbg.value(metadata i32 %9, metadata !10901, metadata !DIExpression()) #26, !dbg !10906
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #26, !dbg !10908, !range !5059
  %11 = shl i32 %0, %10, !dbg !10892
  %12 = or i32 %11, %8, !dbg !10892
  store volatile i32 %12, i32* %4, align 4, !dbg !10892
  ret void, !dbg !10909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10910 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10914, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10915, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata i32 %2, metadata !10916, metadata !DIExpression()), !dbg !10919
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10920
  %5 = icmp eq %struct._snode* %4, null, !dbg !10920
  br i1 %5, label %21, label %6, !dbg !10920

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #27, !dbg !10922
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10918, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10917, metadata !DIExpression()), !dbg !10919
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10923
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10923
  %11 = load i32, i32* %10, align 4, !dbg !10923
  %12 = and i32 %11, %2, !dbg !10927
  %13 = icmp eq i32 %12, 0, !dbg !10927
  br i1 %13, label %19, label %14, !dbg !10928

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10917, metadata !DIExpression()), !dbg !10919
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10929
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10929
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10929
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #28, !dbg !10931
  br label %19, !dbg !10932

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10917, metadata !DIExpression()), !dbg !10919
  %20 = icmp eq %struct._snode* %8, null, !dbg !10933
  br i1 %20, label %21, label %6, !dbg !10933

21:                                               ; preds = %19, %3
  ret void, !dbg !10934
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10937, metadata !DIExpression()), !dbg !10938
  %2 = and i32 %0, 255, !dbg !10939
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10939
  %4 = load volatile i32, i32* %3, align 4, !dbg !10939
  %5 = lshr i32 %0, 16, !dbg !10939
  %6 = and i32 %4, %5, !dbg !10939
  call void @llvm.dbg.value(metadata i32 %5, metadata !10893, metadata !DIExpression()) #26, !dbg !10940
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #31, !dbg !10942, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %7, metadata !10896, metadata !DIExpression()) #26, !dbg !10940
  call void @llvm.dbg.value(metadata i32 %7, metadata !10901, metadata !DIExpression()) #26, !dbg !10943
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !10945, !range !5059
  %9 = lshr i32 %6, %8, !dbg !10946
  ret i32 %9, !dbg !10947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10948 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10953, metadata !DIExpression()), !dbg !10955
  call void @llvm.dbg.value(metadata i32 %1, metadata !10954, metadata !DIExpression()), !dbg !10955
  %3 = shl i32 %1, 16, !dbg !10956
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10956
  store volatile i32 %3, i32* %4, align 4, !dbg !10956
  ret void, !dbg !10957
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !10958 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10962, metadata !DIExpression()), !dbg !10963
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10964
  %3 = load volatile i32, i32* %2, align 4, !dbg !10964
  ret i32 %3, !dbg !10965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10966 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10968, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata i32 %1, metadata !10969, metadata !DIExpression()), !dbg !10970
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10971
  store volatile i32 %1, i32* %3, align 4, !dbg !10971
  ret void, !dbg !10972
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !10973 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10975, metadata !DIExpression()), !dbg !10976
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10977
  %3 = load volatile i32, i32* %2, align 4, !dbg !10977
  ret i32 %3, !dbg !10978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #10 !dbg !10979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10983, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %1, metadata !10984, metadata !DIExpression()), !dbg !10985
  %3 = and i32 %0, 131072, !dbg !10986
  %4 = icmp eq i32 %3, 0, !dbg !10988
  br i1 %4, label %22, label %5, !dbg !10989

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10990
  %6 = and i32 %0, 2, !dbg !10992
  %7 = icmp eq i32 %6, 0, !dbg !10994
  br i1 %7, label %11, label %8, !dbg !10995

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10996
  %10 = icmp eq i32 %9, 0, !dbg !10996
  br i1 %10, label %33, label %11, !dbg !10999

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !11000
  store i32 %12, i32* %1, align 4, !dbg !11000
  %13 = and i32 %0, 16, !dbg !11001
  %14 = icmp eq i32 %13, 0, !dbg !11003
  br i1 %14, label %17, label %15, !dbg !11004

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !11005
  br label %31, !dbg !11007

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !11008
  %19 = icmp eq i32 %18, 0, !dbg !11010
  br i1 %19, label %33, label %20, !dbg !11011

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !11012
  br label %31, !dbg !11014

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !11015
  %24 = icmp eq i32 %23, 0, !dbg !11017
  br i1 %24, label %31, label %25, !dbg !11018

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !11019
  %27 = icmp eq i32 %26, 0, !dbg !11022
  br i1 %27, label %28, label %31, !dbg !11023

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11024
  br label %33, !dbg !11025

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10985
  ret i32 %34, !dbg !11025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11026 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11030, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.value(metadata i32 %1, metadata !11031, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.value(metadata i32 %2, metadata !11032, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.value(metadata i32 %3, metadata !11033, metadata !DIExpression()), !dbg !11041
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11042
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11042
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11042
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11034, metadata !DIExpression()), !dbg !11041
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11043
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11043
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11043
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11035, metadata !DIExpression()), !dbg !11041
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !11044
  call void @llvm.dbg.value(metadata i32 %11, metadata !11036, metadata !DIExpression()), !dbg !11041
  %12 = and i32 %2, 48, !dbg !11045
  call void @llvm.dbg.value(metadata i32 %12, metadata !11037, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.value(metadata i32 %2, metadata !11038, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11041
  call void @llvm.dbg.value(metadata i32 %2, metadata !11039, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11041
  call void @llvm.dbg.value(metadata i32 %2, metadata !11040, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11041
  %13 = lshr i32 %2, 6, !dbg !11046
  %14 = and i32 %13, 1, !dbg !11046
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !11047
  %15 = lshr i32 %2, 7, !dbg !11048
  %16 = and i32 %15, 3, !dbg !11048
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !11049
  %17 = lshr i32 %2, 9, !dbg !11050
  %18 = and i32 %17, 3, !dbg !11050
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !11051
  %19 = icmp eq i32 %12, 32, !dbg !11052
  br i1 %19, label %20, label %24, !dbg !11054

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11055
  br i1 %21, label %22, label %23, !dbg !11058

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !11059
  br label %24, !dbg !11061

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !11062
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11064
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !11065
  ret void, !dbg !11066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !11067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11069, metadata !DIExpression()), !dbg !11071
  %2 = shl nuw i32 1, %0, !dbg !11072
  call void @llvm.dbg.value(metadata i32 %2, metadata !11070, metadata !DIExpression()), !dbg !11071
  ret i32 %2, !dbg !11073
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !11074 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11078, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata i32 %1, metadata !11079, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata i32 %2, metadata !11080, metadata !DIExpression()), !dbg !11081
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11082
  %5 = load volatile i32, i32* %4, align 4, !dbg !11082
  %6 = xor i32 %1, -1, !dbg !11082
  %7 = and i32 %5, %6, !dbg !11082
  %8 = mul i32 %2, %1, !dbg !11082
  %9 = or i32 %7, %8, !dbg !11082
  store volatile i32 %9, i32* %4, align 4, !dbg !11082
  ret void, !dbg !11083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11084 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11086, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i32 %1, metadata !11087, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i32 %2, metadata !11088, metadata !DIExpression()), !dbg !11089
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11090
  %5 = load volatile i32, i32* %4, align 4, !dbg !11090
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11091
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11093, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11091
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11094
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11096, !range !5059
  %8 = shl nuw nsw i32 %7, 1, !dbg !11090
  %9 = shl i32 3, %8, !dbg !11090
  %10 = xor i32 %9, -1, !dbg !11090
  %11 = and i32 %5, %10, !dbg !11090
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11097
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11097
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11099
  %12 = shl i32 %2, %8, !dbg !11090
  %13 = or i32 %11, %12, !dbg !11090
  store volatile i32 %13, i32* %4, align 4, !dbg !11090
  ret void, !dbg !11101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11102 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11104, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %1, metadata !11105, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %2, metadata !11106, metadata !DIExpression()), !dbg !11107
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11108
  %5 = load volatile i32, i32* %4, align 4, !dbg !11108
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11109
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11111, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11109
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11112
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11114, !range !5059
  %8 = shl nuw nsw i32 %7, 1, !dbg !11108
  %9 = shl i32 3, %8, !dbg !11108
  %10 = xor i32 %9, -1, !dbg !11108
  %11 = and i32 %5, %10, !dbg !11108
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11115
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11115
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11117
  %12 = shl i32 %2, %8, !dbg !11108
  %13 = or i32 %11, %12, !dbg !11108
  store volatile i32 %13, i32* %4, align 4, !dbg !11108
  ret void, !dbg !11119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11120 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11122, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i32 %1, metadata !11123, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i32 %2, metadata !11124, metadata !DIExpression()), !dbg !11125
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11126
  %5 = load volatile i32, i32* %4, align 4, !dbg !11126
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11127
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11129, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11127
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11130
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11132, !range !5059
  %8 = shl nuw nsw i32 %7, 2, !dbg !11126
  %9 = shl i32 15, %8, !dbg !11126
  %10 = xor i32 %9, -1, !dbg !11126
  %11 = and i32 %5, %10, !dbg !11126
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11133
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11133
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11135
  %12 = shl i32 %2, %8, !dbg !11126
  %13 = or i32 %11, %12, !dbg !11126
  store volatile i32 %13, i32* %4, align 4, !dbg !11126
  ret void, !dbg !11137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11138 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11140, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata i32 %1, metadata !11141, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata i32 %2, metadata !11142, metadata !DIExpression()), !dbg !11143
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11144
  %5 = load volatile i32, i32* %4, align 4, !dbg !11144
  %6 = lshr i32 %1, 8, !dbg !11144
  call void @llvm.dbg.value(metadata i32 %6, metadata !10893, metadata !DIExpression()) #26, !dbg !11145
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !11147, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %7, metadata !10896, metadata !DIExpression()) #26, !dbg !11145
  call void @llvm.dbg.value(metadata i32 %7, metadata !10901, metadata !DIExpression()) #26, !dbg !11148
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !11150, !range !5059
  %9 = shl nuw nsw i32 %8, 2, !dbg !11144
  %10 = shl i32 15, %9, !dbg !11144
  %11 = xor i32 %10, -1, !dbg !11144
  %12 = and i32 %5, %11, !dbg !11144
  call void @llvm.dbg.value(metadata i32 %6, metadata !10893, metadata !DIExpression()) #26, !dbg !11151
  call void @llvm.dbg.value(metadata i32 %7, metadata !10896, metadata !DIExpression()) #26, !dbg !11151
  call void @llvm.dbg.value(metadata i32 %7, metadata !10901, metadata !DIExpression()) #26, !dbg !11153
  %13 = shl i32 %2, %9, !dbg !11144
  %14 = or i32 %12, %13, !dbg !11144
  store volatile i32 %14, i32* %4, align 4, !dbg !11144
  ret void, !dbg !11155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11156 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11158, metadata !DIExpression()), !dbg !11161
  call void @llvm.dbg.value(metadata i32 %1, metadata !11159, metadata !DIExpression()), !dbg !11161
  call void @llvm.dbg.value(metadata i32 %2, metadata !11160, metadata !DIExpression()), !dbg !11161
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11162
  %5 = load volatile i32, i32* %4, align 4, !dbg !11162
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11163
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11165, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11163
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11166
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11168, !range !5059
  %8 = shl nuw nsw i32 %7, 1, !dbg !11162
  %9 = shl i32 3, %8, !dbg !11162
  %10 = xor i32 %9, -1, !dbg !11162
  %11 = and i32 %5, %10, !dbg !11162
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11169
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11169
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11171
  %12 = shl i32 %2, %8, !dbg !11162
  %13 = or i32 %11, %12, !dbg !11162
  store volatile i32 %13, i32* %4, align 4, !dbg !11162
  ret void, !dbg !11173
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11174 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11176, metadata !DIExpression()), !dbg !11179
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11180
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11180
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11180
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11177, metadata !DIExpression()), !dbg !11179
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11181
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11182
  %6 = tail call fastcc zeroext i1 @device_is_ready.124() #27, !dbg !11183
  br i1 %6, label %7, label %11, !dbg !11185

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !11186
  call void @llvm.dbg.value(metadata i32 %8, metadata !11178, metadata !DIExpression()), !dbg !11179
  %9 = icmp slt i32 %8, 0, !dbg !11187
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11189
  br label %11, !dbg !11189

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11179
  ret i32 %12, !dbg !11190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.124() unnamed_addr #1 !dbg !11191 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11195, metadata !DIExpression()), !dbg !11196
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11197, !srcloc !11199
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.125() #27, !dbg !11200
  ret i1 %1, !dbg !11201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11202 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11206, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata i8 1, metadata !11207, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !11208, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata i32 0, metadata !11209, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11210, metadata !DIExpression()), !dbg !11211
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11212
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11212
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11212
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11208, metadata !DIExpression()), !dbg !11211
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11213
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11216
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !11217
  call void @llvm.dbg.value(metadata i32 %7, metadata !11209, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata i32 %7, metadata !11209, metadata !DIExpression()), !dbg !11211
  ret i32 %7, !dbg !11218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.125() unnamed_addr #1 !dbg !11219 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11221, metadata !DIExpression()), !dbg !11222
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #28, !dbg !11223
  ret i1 %1, !dbg !11224
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11225 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11229, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata i32 %1, metadata !11230, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata i32 %2, metadata !11231, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata i32 %3, metadata !11232, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata i32 0, metadata !11233, metadata !DIExpression()), !dbg !11237
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !11238
  %5 = icmp eq i32 %3, 17, !dbg !11239
  br i1 %5, label %6, label %14, !dbg !11240

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11241
  call void @llvm.dbg.value(metadata i32 %7, metadata !11234, metadata !DIExpression()), !dbg !11242
  %8 = icmp eq i32 %7, 0, !dbg !11243
  %9 = shl nuw i32 1, %1, !dbg !11245
  br i1 %8, label %12, label %10, !dbg !11246

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !11247
  br label %14, !dbg !11249

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !11250
  br label %14, !dbg !11253

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11254
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !11255 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11257, metadata !DIExpression()), !dbg !11261
  call void @llvm.dbg.value(metadata i8* %1, metadata !11258, metadata !DIExpression()), !dbg !11261
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11262
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11262
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11262
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11259, metadata !DIExpression()), !dbg !11261
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11263
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11263
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !11265
  %9 = icmp eq i32 %8, 0, !dbg !11265
  br i1 %9, label %12, label %10, !dbg !11266

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11267
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !11269
  br label %12, !dbg !11270

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11271
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !11273
  %15 = icmp eq i32 %14, 0, !dbg !11273
  br i1 %15, label %19, label %16, !dbg !11274

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11275
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !11276
  store i8 %18, i8* %1, align 1, !dbg !11277
  br label %19, !dbg !11278

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11261
  ret i32 %20, !dbg !11279
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11280 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11282, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i8 %1, metadata !11283, metadata !DIExpression()), !dbg !11286
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11287
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11287
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11287
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11284, metadata !DIExpression()), !dbg !11286
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11288

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11289
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !11292
  %10 = icmp eq i32 %9, 0, !dbg !11292
  br i1 %10, label %18, label %11, !dbg !11293

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !11294, !srcloc !11301
  call void @llvm.dbg.value(metadata i32 undef, metadata !11297, metadata !DIExpression()) #26, !dbg !11302
  call void @llvm.dbg.value(metadata i32 undef, metadata !11298, metadata !DIExpression()) #26, !dbg !11302
  call void @llvm.dbg.value(metadata i32 undef, metadata !11285, metadata !DIExpression()), !dbg !11286
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11303
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !11305
  %15 = icmp eq i32 %14, 0, !dbg !11305
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11294
  br i1 %15, label %17, label %19, !dbg !11306

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11297, metadata !DIExpression()) #26, !dbg !11302
  call void @llvm.dbg.value(metadata i32 %16, metadata !11285, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32 undef, metadata !11307, metadata !DIExpression()) #26, !dbg !11310
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !11312, !srcloc !11313
  br label %18, !dbg !11314

18:                                               ; preds = %17, %7
  br label %7, !dbg !11289, !llvm.loop !11315

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11294
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11317
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !11318
  call void @llvm.dbg.value(metadata i32 %20, metadata !11307, metadata !DIExpression()) #26, !dbg !11319
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !11321, !srcloc !11313
  ret void, !dbg !11322
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !11323 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11325, metadata !DIExpression()), !dbg !11328
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11329
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11329
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11329
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11326, metadata !DIExpression()), !dbg !11328
  call void @llvm.dbg.value(metadata i32 0, metadata !11327, metadata !DIExpression()), !dbg !11328
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11330
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11330
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !11332
  %8 = icmp ne i32 %7, 0, !dbg !11332
  %9 = zext i1 %8 to i32, !dbg !11333
  call void @llvm.dbg.value(metadata i32 %9, metadata !11327, metadata !DIExpression()), !dbg !11328
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11334
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !11336
  %12 = icmp eq i32 %11, 0, !dbg !11336
  %13 = or i32 %9, 2, !dbg !11337
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11337
  call void @llvm.dbg.value(metadata i32 %14, metadata !11327, metadata !DIExpression()), !dbg !11328
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11338
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !11340
  %17 = icmp eq i32 %16, 0, !dbg !11340
  %18 = or i32 %14, 4, !dbg !11341
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11341
  call void @llvm.dbg.value(metadata i32 %19, metadata !11327, metadata !DIExpression()), !dbg !11328
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11342
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !11344
  %22 = icmp eq i32 %21, 0, !dbg !11344
  %23 = or i32 %19, 8, !dbg !11345
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11345
  call void @llvm.dbg.value(metadata i32 %24, metadata !11327, metadata !DIExpression()), !dbg !11328
  %25 = and i32 %24, 8, !dbg !11346
  %26 = icmp eq i32 %25, 0, !dbg !11346
  br i1 %26, label %29, label %27, !dbg !11348

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11349
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !11351
  br label %29, !dbg !11352

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11353
  %31 = icmp eq i32 %30, 0, !dbg !11353
  br i1 %31, label %34, label %32, !dbg !11355

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11356
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !11358
  br label %34, !dbg !11359

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11360
  %36 = icmp eq i32 %35, 0, !dbg !11360
  br i1 %36, label %39, label %37, !dbg !11362

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11363
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !11365
  br label %39, !dbg !11366

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11367
  %41 = icmp eq i32 %40, 0, !dbg !11367
  br i1 %41, label %44, label %42, !dbg !11369

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11370
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !11372
  br label %44, !dbg !11373

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11374
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !11375
  ret i32 %24, !dbg !11376
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11377 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11379, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11380, metadata !DIExpression()), !dbg !11388
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11389
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11389
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11389
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11381, metadata !DIExpression()), !dbg !11388
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11390
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11390
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11390
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11382, metadata !DIExpression()), !dbg !11388
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11391
  %10 = load i8, i8* %9, align 4, !dbg !11391
  %11 = zext i8 %10 to i32, !dbg !11392
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !11393
  call void @llvm.dbg.value(metadata i32 %12, metadata !11384, metadata !DIExpression()), !dbg !11388
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11394
  %14 = load i8, i8* %13, align 1, !dbg !11394
  %15 = zext i8 %14 to i32, !dbg !11395
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !11396
  call void @llvm.dbg.value(metadata i32 %16, metadata !11385, metadata !DIExpression()), !dbg !11388
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11397
  %18 = load i8, i8* %17, align 2, !dbg !11397
  %19 = zext i8 %18 to i32, !dbg !11398
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !11399
  call void @llvm.dbg.value(metadata i32 %20, metadata !11386, metadata !DIExpression()), !dbg !11388
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11400
  %22 = load i8, i8* %21, align 1, !dbg !11400
  %23 = zext i8 %22 to i32, !dbg !11401
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !11402
  call void @llvm.dbg.value(metadata i32 %24, metadata !11387, metadata !DIExpression()), !dbg !11388
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11403

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11405
  br i1 %26, label %69, label %27, !dbg !11407

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11408

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11409
  br i1 %29, label %65, label %30, !dbg !11409

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11411
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11388
  br i1 %31, label %38, label %34, !dbg !11413

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11414
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !11414

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11417
  br i1 %37, label %38, label %69, !dbg !11418

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11419
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !11420
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !11421
  %41 = icmp eq i32 %12, %40, !dbg !11423
  br i1 %41, label %43, label %42, !dbg !11424

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !11425
  br label %43, !dbg !11427

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !11428
  %45 = icmp eq i32 %16, %44, !dbg !11430
  br i1 %45, label %47, label %46, !dbg !11431

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !11432
  br label %47, !dbg !11434

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !11435
  %49 = icmp eq i32 %20, %48, !dbg !11437
  br i1 %49, label %51, label %50, !dbg !11438

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !11439
  br label %51, !dbg !11441

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !11442
  %53 = icmp eq i32 %24, %52, !dbg !11444
  br i1 %53, label %55, label %54, !dbg !11445

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !11446
  br label %55, !dbg !11448

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11449
  %57 = load i32, i32* %56, align 4, !dbg !11449
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11451
  %59 = load i32, i32* %58, align 4, !dbg !11451
  %60 = icmp eq i32 %57, %59, !dbg !11452
  br i1 %60, label %63, label %61, !dbg !11453

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !11454
  %62 = load i32, i32* %56, align 4, !dbg !11456
  store i32 %62, i32* %58, align 4, !dbg !11457
  br label %63, !dbg !11458

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11459
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !11460
  br label %69, !dbg !11461

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11409
  %67 = and i8 %66, 1, !dbg !11409
  %68 = icmp eq i8 %67, 0, !dbg !11409
  br i1 %68, label %30, label %69, !dbg !11409

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11388
  ret i32 %70, !dbg !11462
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !11463 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11465, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11466, metadata !DIExpression()), !dbg !11468
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11469
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11469
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11469
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11467, metadata !DIExpression()), !dbg !11468
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11470
  %7 = load i32, i32* %6, align 4, !dbg !11470
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11471
  store i32 %7, i32* %8, align 4, !dbg !11472
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !11473, !range !11474
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !11475
  %11 = trunc i32 %10 to i8, !dbg !11475
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11476
  store i8 %11, i8* %12, align 4, !dbg !11477
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !11478, !range !11479
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !11480
  %15 = trunc i32 %14 to i8, !dbg !11480
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11481
  store i8 %15, i8* %16, align 1, !dbg !11482
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !11483
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !11484, !range !11474
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !11485
  %20 = trunc i32 %19 to i8, !dbg !11485
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11486
  store i8 %20, i8* %21, align 2, !dbg !11487
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !11488, !range !11489
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !11490
  %24 = trunc i32 %23 to i8, !dbg !11490
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11491
  store i8 %24, i8* %25, align 1, !dbg !11492
  ret i32 0, !dbg !11493
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11494 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11498, metadata !DIExpression()), !dbg !11500
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11501
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11501
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11501
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11499, metadata !DIExpression()), !dbg !11500
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11502
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11502
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !11503
  ret i32 %7, !dbg !11504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11509, metadata !DIExpression()), !dbg !11510
  %2 = icmp eq i32 %0, 1024, !dbg !11511
  %3 = select i1 %2, i32 2, i32 0, !dbg !11511
  %4 = icmp eq i32 %0, 1536, !dbg !11511
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11511
  ret i32 %5, !dbg !11512
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11513 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11515, metadata !DIExpression()), !dbg !11517
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11518
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11518
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11518
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11516, metadata !DIExpression()), !dbg !11517
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11519
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11519
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !11520
  ret i32 %7, !dbg !11521
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !11522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11526, metadata !DIExpression()), !dbg !11527
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11528
  %3 = icmp ult i32 %2, 4, !dbg !11528
  br i1 %3, label %4, label %7, !dbg !11528

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11528
  %6 = load i32, i32* %5, align 4, !dbg !11528
  br label %7, !dbg !11528

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11529
  ret i32 %8, !dbg !11531
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11532 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11534, metadata !DIExpression()), !dbg !11536
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11537
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11537
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11537
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11535, metadata !DIExpression()), !dbg !11536
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11538
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11538
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !11539
  ret i32 %7, !dbg !11540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11545, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.value(metadata i32 %1, metadata !11546, metadata !DIExpression()), !dbg !11547
  %3 = icmp eq i32 %0, 4096, !dbg !11548
  %4 = icmp eq i32 %1, 0, !dbg !11548
  %5 = select i1 %4, i32 4, i32 3, !dbg !11548
  %6 = select i1 %4, i32 3, i32 2, !dbg !11548
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11548
  ret i32 %7, !dbg !11549
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11552, metadata !DIExpression()), !dbg !11554
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11555
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11555
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11555
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11553, metadata !DIExpression()), !dbg !11554
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11556
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11556
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !11557
  ret i32 %7, !dbg !11558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11563, metadata !DIExpression()), !dbg !11564
  %2 = icmp eq i32 %0, 768, !dbg !11565
  %3 = zext i1 %2 to i32, !dbg !11564
  ret i32 %3, !dbg !11567
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11568 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11573, metadata !DIExpression()), !dbg !11574
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11575
  %3 = load volatile i32, i32* %2, align 4, !dbg !11575
  %4 = and i32 %3, 768, !dbg !11575
  ret i32 %4, !dbg !11576
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11577 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11579, metadata !DIExpression()), !dbg !11580
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11581
  %3 = load volatile i32, i32* %2, align 4, !dbg !11581
  %4 = and i32 %3, 4096, !dbg !11581
  ret i32 %4, !dbg !11582
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11583 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11585, metadata !DIExpression()), !dbg !11586
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11587
  %3 = load volatile i32, i32* %2, align 4, !dbg !11587
  %4 = and i32 %3, 12288, !dbg !11587
  ret i32 %4, !dbg !11588
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11589 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11591, metadata !DIExpression()), !dbg !11592
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11593
  %3 = load volatile i32, i32* %2, align 4, !dbg !11593
  %4 = and i32 %3, 1536, !dbg !11593
  ret i32 %4, !dbg !11594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11599, metadata !DIExpression()), !dbg !11600
  %2 = icmp eq i32 %0, 2, !dbg !11601
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11601
  %4 = icmp eq i32 %0, 1, !dbg !11601
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11601
  ret i32 %5, !dbg !11602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11607, metadata !DIExpression()), !dbg !11608
  %2 = icmp ult i32 %0, 3, !dbg !11609
  br i1 %2, label %3, label %6, !dbg !11609

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11609
  %5 = load i32, i32* %4, align 4, !dbg !11609
  br label %6, !dbg !11609

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11610
  ret i32 %7, !dbg !11612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11617, metadata !DIExpression()), !dbg !11619
  call void @llvm.dbg.value(metadata i32 %1, metadata !11618, metadata !DIExpression()), !dbg !11619
  %3 = icmp eq i32 %0, 4, !dbg !11620
  %4 = icmp eq i32 %1, 0, !dbg !11620
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11620
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11620
  ret i32 %6, !dbg !11621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11626, metadata !DIExpression()), !dbg !11627
  %2 = icmp eq i32 %0, 1, !dbg !11628
  %3 = select i1 %2, i32 768, i32 0, !dbg !11627
  ret i32 %3, !dbg !11630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11631 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11635, metadata !DIExpression()), !dbg !11636
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11637
  %3 = load volatile i32, i32* %2, align 4, !dbg !11637
  %4 = and i32 %3, -8193, !dbg !11637
  store volatile i32 %4, i32* %2, align 4, !dbg !11637
  ret void, !dbg !11638
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11639 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11643, metadata !DIExpression()), !dbg !11646
  call void @llvm.dbg.value(metadata i32 %1, metadata !11644, metadata !DIExpression()), !dbg !11646
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11647
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11647
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11647
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11645, metadata !DIExpression()), !dbg !11646
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11648
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11648
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !11649
  ret void, !dbg !11650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11653, metadata !DIExpression()), !dbg !11656
  call void @llvm.dbg.value(metadata i32 %1, metadata !11654, metadata !DIExpression()), !dbg !11656
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11657
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11657
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11657
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11655, metadata !DIExpression()), !dbg !11656
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11658
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11658
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !11659
  ret void, !dbg !11660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11661 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11663, metadata !DIExpression()), !dbg !11666
  call void @llvm.dbg.value(metadata i32 %1, metadata !11664, metadata !DIExpression()), !dbg !11666
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11667
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11667
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11667
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11665, metadata !DIExpression()), !dbg !11666
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11668
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11668
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !11669
  ret void, !dbg !11670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11671 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11673, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata i32 %1, metadata !11674, metadata !DIExpression()), !dbg !11676
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11677
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11677
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11677
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11675, metadata !DIExpression()), !dbg !11676
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11678
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11678
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !11679
  ret void, !dbg !11680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11681 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11683, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata i32 %1, metadata !11684, metadata !DIExpression()), !dbg !11688
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11689
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11689
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11689
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11685, metadata !DIExpression()), !dbg !11688
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11690
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11690
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11690
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11686, metadata !DIExpression()), !dbg !11688
  %10 = bitcast i32* %3 to i8*, !dbg !11691
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11691
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11692
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11692
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11696
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11696
  %15 = load i8*, i8** %14, align 4, !dbg !11696
  call void @llvm.dbg.value(metadata i32* %3, metadata !11687, metadata !DIExpression(DW_OP_deref)), !dbg !11688
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !11697
  %17 = icmp slt i32 %16, 0, !dbg !11698
  br i1 %17, label %18, label %21, !dbg !11699

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.130(i32 noundef 1) #27, !dbg !11700
  %20 = zext i8 %19 to i32, !dbg !11700
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.131, i32 0, i32 0), i32 noundef %20) #28, !dbg !11700
  br label %26, !dbg !11706

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11707
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11707
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #27, !dbg !11708
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11709
  %25 = load i32, i32* %3, align 4, !dbg !11710
  call void @llvm.dbg.value(metadata i32 %25, metadata !11687, metadata !DIExpression()), !dbg !11688
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #27, !dbg !11711
  br label %26, !dbg !11712

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11712
  ret void, !dbg !11712
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11713 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11715, metadata !DIExpression()), !dbg !11716
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11717
  %3 = load volatile i32, i32* %2, align 4, !dbg !11717
  %4 = or i32 %3, 8192, !dbg !11717
  store volatile i32 %4, i32* %2, align 4, !dbg !11717
  ret void, !dbg !11718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11719 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11721, metadata !DIExpression()), !dbg !11725
  call void @llvm.dbg.value(metadata i8* %1, metadata !11722, metadata !DIExpression()), !dbg !11725
  call void @llvm.dbg.value(metadata i32* %2, metadata !11723, metadata !DIExpression()), !dbg !11725
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11726
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11726
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11726
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11724, metadata !DIExpression()), !dbg !11725
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11727
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11727
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11729
  br i1 %9, label %12, label %10, !dbg !11730

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #28, !dbg !11731
  br label %12, !dbg !11732

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11725
  ret i32 %13, !dbg !11733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.130(i32 noundef %0) unnamed_addr #5 !dbg !11734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11736, metadata !DIExpression()), !dbg !11737
  %2 = icmp eq i32 %0, 2, !dbg !11738
  %3 = select i1 %2, i8 87, i8 63, !dbg !11738
  %4 = icmp eq i32 %0, 1, !dbg !11738
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11738
  ret i8 %5, !dbg !11739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11740 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11744, metadata !DIExpression()), !dbg !11746
  call void @llvm.dbg.value(metadata i32 0, metadata !11745, metadata !DIExpression()), !dbg !11746
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11747
  %3 = load volatile i32, i32* %2, align 4, !dbg !11747
  %4 = and i32 %3, -32769, !dbg !11747
  store volatile i32 %4, i32* %2, align 4, !dbg !11747
  ret void, !dbg !11748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !11749 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11753, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.value(metadata i32 %1, metadata !11754, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.value(metadata i32 0, metadata !11755, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.value(metadata i32 %2, metadata !11756, metadata !DIExpression()), !dbg !11757
  %4 = zext i32 %1 to i64, !dbg !11758
  %5 = mul nuw nsw i64 %4, 25, !dbg !11758
  %6 = zext i32 %2 to i64, !dbg !11758
  %7 = shl nuw nsw i64 %6, 2, !dbg !11758
  %8 = udiv i64 %5, %7, !dbg !11758
  %9 = trunc i64 %8 to i32, !dbg !11758
  %10 = udiv i32 %9, 100, !dbg !11758
  %11 = shl nuw nsw i32 %10, 4, !dbg !11758
  %12 = mul i32 %10, -100, !dbg !11758
  %13 = add i32 %12, %9, !dbg !11758
  %14 = shl i32 %13, 4, !dbg !11758
  %15 = add i32 %14, 50, !dbg !11758
  %16 = udiv i32 %15, 100, !dbg !11758
  %17 = and i32 %16, 240, !dbg !11758
  %18 = add nuw nsw i32 %17, %11, !dbg !11758
  %19 = and i32 %16, 15, !dbg !11758
  %20 = and i32 %18, 65520, !dbg !11761
  %21 = or i32 %20, %19, !dbg !11761
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11762
  store volatile i32 %21, i32* %22, align 4, !dbg !11763
  ret void, !dbg !11764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11765 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11767, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata i32 %1, metadata !11768, metadata !DIExpression()), !dbg !11769
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11770
  %4 = load volatile i32, i32* %3, align 4, !dbg !11770
  %5 = and i32 %4, -769, !dbg !11770
  %6 = or i32 %5, %1, !dbg !11770
  store volatile i32 %6, i32* %3, align 4, !dbg !11770
  ret void, !dbg !11771
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11772 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11774, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata i32 %1, metadata !11775, metadata !DIExpression()), !dbg !11776
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11777
  %4 = load volatile i32, i32* %3, align 4, !dbg !11777
  %5 = and i32 %4, -4097, !dbg !11777
  %6 = or i32 %5, %1, !dbg !11777
  store volatile i32 %6, i32* %3, align 4, !dbg !11777
  ret void, !dbg !11778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11779 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 %1, metadata !11782, metadata !DIExpression()), !dbg !11783
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11784
  %4 = load volatile i32, i32* %3, align 4, !dbg !11784
  %5 = and i32 %4, -12289, !dbg !11784
  %6 = or i32 %5, %1, !dbg !11784
  store volatile i32 %6, i32* %3, align 4, !dbg !11784
  ret void, !dbg !11785
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11786 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11788, metadata !DIExpression()), !dbg !11790
  call void @llvm.dbg.value(metadata i32 %1, metadata !11789, metadata !DIExpression()), !dbg !11790
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11791
  %4 = load volatile i32, i32* %3, align 4, !dbg !11791
  %5 = and i32 %4, -1537, !dbg !11791
  %6 = or i32 %5, %1, !dbg !11791
  store volatile i32 %6, i32* %3, align 4, !dbg !11791
  ret void, !dbg !11792
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11793 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11795, metadata !DIExpression()), !dbg !11796
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11797
  %3 = load volatile i32, i32* %2, align 4, !dbg !11797
  %4 = lshr i32 %3, 3, !dbg !11798
  %5 = and i32 %4, 1, !dbg !11798
  ret i32 %5, !dbg !11799
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11800 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11802, metadata !DIExpression()), !dbg !11803
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11804
  %3 = load volatile i32, i32* %2, align 4, !dbg !11804
  %4 = and i32 %3, 1, !dbg !11804
  ret i32 %4, !dbg !11805
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11806 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11808, metadata !DIExpression()), !dbg !11809
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11810
  %3 = load volatile i32, i32* %2, align 4, !dbg !11810
  %4 = lshr i32 %3, 1, !dbg !11811
  %5 = and i32 %4, 1, !dbg !11811
  ret i32 %5, !dbg !11812
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11813 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11815, metadata !DIExpression()), !dbg !11816
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11817
  %3 = load volatile i32, i32* %2, align 4, !dbg !11817
  %4 = lshr i32 %3, 8, !dbg !11818
  %5 = and i32 %4, 1, !dbg !11818
  ret i32 %5, !dbg !11819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11820 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11822, metadata !DIExpression()), !dbg !11823
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11824
  store volatile i32 -257, i32* %2, align 4, !dbg !11824
  ret void, !dbg !11825
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11826 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11828, metadata !DIExpression()), !dbg !11830
  %3 = bitcast i32* %2 to i8*, !dbg !11831
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11831
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11829, metadata !DIExpression()), !dbg !11832
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11833
  %5 = load volatile i32, i32* %4, align 4, !dbg !11833
  store volatile i32 %5, i32* %2, align 4, !dbg !11834
  %6 = load volatile i32, i32* %2, align 4, !dbg !11835
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11836
  %8 = load volatile i32, i32* %7, align 4, !dbg !11836
  store volatile i32 %8, i32* %2, align 4, !dbg !11837
  %9 = load volatile i32, i32* %2, align 4, !dbg !11838
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11839
  ret void, !dbg !11839
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11840 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11842, metadata !DIExpression()), !dbg !11844
  %3 = bitcast i32* %2 to i8*, !dbg !11845
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11845
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11843, metadata !DIExpression()), !dbg !11846
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11847
  %5 = load volatile i32, i32* %4, align 4, !dbg !11847
  store volatile i32 %5, i32* %2, align 4, !dbg !11848
  %6 = load volatile i32, i32* %2, align 4, !dbg !11849
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11850
  %8 = load volatile i32, i32* %7, align 4, !dbg !11850
  store volatile i32 %8, i32* %2, align 4, !dbg !11851
  %9 = load volatile i32, i32* %2, align 4, !dbg !11852
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11853
  ret void, !dbg !11853
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11854 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11856, metadata !DIExpression()), !dbg !11858
  %3 = bitcast i32* %2 to i8*, !dbg !11859
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11859
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11857, metadata !DIExpression()), !dbg !11860
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11861
  %5 = load volatile i32, i32* %4, align 4, !dbg !11861
  store volatile i32 %5, i32* %2, align 4, !dbg !11862
  %6 = load volatile i32, i32* %2, align 4, !dbg !11863
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11864
  %8 = load volatile i32, i32* %7, align 4, !dbg !11864
  store volatile i32 %8, i32* %2, align 4, !dbg !11865
  %9 = load volatile i32, i32* %2, align 4, !dbg !11866
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11867
  ret void, !dbg !11867
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11868 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11870, metadata !DIExpression()), !dbg !11872
  %3 = bitcast i32* %2 to i8*, !dbg !11873
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11873
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11871, metadata !DIExpression()), !dbg !11874
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11875
  %5 = load volatile i32, i32* %4, align 4, !dbg !11875
  store volatile i32 %5, i32* %2, align 4, !dbg !11876
  %6 = load volatile i32, i32* %2, align 4, !dbg !11877
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11878
  %8 = load volatile i32, i32* %7, align 4, !dbg !11878
  store volatile i32 %8, i32* %2, align 4, !dbg !11879
  %9 = load volatile i32, i32* %2, align 4, !dbg !11880
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11881
  ret void, !dbg !11881
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11882 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11884, metadata !DIExpression()), !dbg !11885
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11886
  %3 = load volatile i32, i32* %2, align 4, !dbg !11886
  %4 = lshr i32 %3, 7, !dbg !11887
  %5 = and i32 %4, 1, !dbg !11887
  ret i32 %5, !dbg !11888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !11889 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11893, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.value(metadata i8 %1, metadata !11894, metadata !DIExpression()), !dbg !11895
  %3 = zext i8 %1 to i32, !dbg !11896
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11897
  store volatile i32 %3, i32* %4, align 4, !dbg !11898
  ret void, !dbg !11899
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11900 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11902, metadata !DIExpression()), !dbg !11903
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11904
  %3 = load volatile i32, i32* %2, align 4, !dbg !11904
  %4 = lshr i32 %3, 5, !dbg !11905
  %5 = and i32 %4, 1, !dbg !11905
  ret i32 %5, !dbg !11906
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11907 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11911, metadata !DIExpression()), !dbg !11912
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11913
  %3 = load volatile i32, i32* %2, align 4, !dbg !11913
  %4 = trunc i32 %3 to i8, !dbg !11914
  ret i8 %4, !dbg !11915
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11916 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11918, metadata !DIExpression()), !dbg !11924
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11925
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11925
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11925
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11919, metadata !DIExpression()), !dbg !11924
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11926
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11926
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11926
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11920, metadata !DIExpression()), !dbg !11924
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !11927
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11928
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11928
  %10 = tail call fastcc zeroext i1 @device_is_ready.133(%struct.device* noundef %9) #27, !dbg !11930
  br i1 %10, label %14, label %11, !dbg !11931

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.130(i32 noundef 1) #27, !dbg !11932
  %13 = zext i8 %12 to i32, !dbg !11932
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.134, i32 0, i32 0), i32 noundef %13) #28, !dbg !11932
  br label %62, !dbg !11938

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11939
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11940
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11940
  %18 = load i8*, i8** %17, align 4, !dbg !11940
  %19 = tail call fastcc i32 @clock_control_on.135(%struct.device* noundef %15, i8* noundef %18) #27, !dbg !11941
  call void @llvm.dbg.value(metadata i32 %19, metadata !11923, metadata !DIExpression()), !dbg !11924
  %20 = icmp eq i32 %19, 0, !dbg !11942
  br i1 %20, label %24, label %21, !dbg !11944

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.130(i32 noundef 1) #27, !dbg !11945
  %23 = zext i8 %22 to i32, !dbg !11945
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.136, i32 0, i32 0), i32 noundef %23) #28, !dbg !11945
  br label %62, !dbg !11951

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11952
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11952
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #27, !dbg !11953
  call void @llvm.dbg.value(metadata i32 %27, metadata !11923, metadata !DIExpression()), !dbg !11924
  %28 = icmp slt i32 %27, 0, !dbg !11954
  br i1 %28, label %62, label %29, !dbg !11956

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11957
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11957
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #27, !dbg !11958
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11959
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #27, !dbg !11960
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11961
  %34 = load i32, i32* %33, align 4, !dbg !11961
  %35 = icmp ult i32 %34, 3, !dbg !11963
  br i1 %35, label %39, label %36, !dbg !11963

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.130(i32 noundef 2) #27, !dbg !11964
  %38 = zext i8 %37 to i32, !dbg !11964
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5.137, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #28, !dbg !11964
  call void @llvm.dbg.value(metadata i32 0, metadata !11921, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 0, metadata !11922, metadata !DIExpression()), !dbg !11924
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11963
  %41 = load i32, i32* %40, align 4, !dbg !11963
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.6, i32 0, i32 %34, !dbg !11963
  %43 = load i32, i32* %42, align 4, !dbg !11963
  br label %44, !dbg !11963

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11973
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11973
  call void @llvm.dbg.value(metadata i32 %46, metadata !11922, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %45, metadata !11921, metadata !DIExpression()), !dbg !11924
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11974
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #27, !dbg !11975
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11976
  %49 = load i8, i8* %48, align 4, !dbg !11976, !range !7719
  %50 = icmp eq i8 %49, 0, !dbg !11976
  br i1 %50, label %52, label %51, !dbg !11978

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !11979
  br label %52, !dbg !11981

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11982
  %54 = load i32, i32* %53, align 4, !dbg !11982
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #27, !dbg !11983
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11984
  %56 = load i8, i8* %55, align 4, !dbg !11984, !range !7719
  %57 = icmp eq i8 %56, 0, !dbg !11984
  br i1 %57, label %60, label %58, !dbg !11986

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11987
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #27, !dbg !11989
  br label %60, !dbg !11990

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11991
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #27, !dbg !11992
  br label %62, !dbg !11993

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11924
  ret i32 %63, !dbg !11994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11995 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11999, metadata !DIExpression()), !dbg !12003
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12004
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !12004
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !12004
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !12000, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !12001, metadata !DIExpression()), !dbg !12003
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !12005
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !12006
  ret void, !dbg !12007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.133(%struct.device* noundef %0) unnamed_addr #1 !dbg !12008 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12012, metadata !DIExpression()), !dbg !12013
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !12014, !srcloc !12016
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.138(%struct.device* noundef %0) #27, !dbg !12017
  ret i1 %2, !dbg !12018
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.135(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12021, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i8* %1, metadata !12022, metadata !DIExpression()), !dbg !12024
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12025
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12025
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12025
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12023, metadata !DIExpression()), !dbg !12024
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12026
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12026
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #28, !dbg !12027
  ret i32 %8, !dbg !12028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12029 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12033, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.value(metadata i8 0, metadata !12034, metadata !DIExpression()), !dbg !12037
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12038
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !12038
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12036, metadata !DIExpression(DW_OP_deref)), !dbg !12037
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #28, !dbg !12039
  call void @llvm.dbg.value(metadata i32 %4, metadata !12035, metadata !DIExpression()), !dbg !12037
  %5 = icmp slt i32 %4, 0, !dbg !12040
  br i1 %5, label %9, label %6, !dbg !12042

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12043
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12036, metadata !DIExpression()), !dbg !12037
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !12044
  br label %9, !dbg !12045

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12037
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !12046
  ret i32 %10, !dbg !12046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !12047 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12049, metadata !DIExpression()), !dbg !12053
  call void @llvm.dbg.value(metadata i32 12, metadata !12050, metadata !DIExpression()), !dbg !12053
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !12054

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !12055, metadata !DIExpression()) #26, !dbg !12061
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #26, !dbg !12064, !srcloc !12065
  call void @llvm.dbg.value(metadata i32 %4, metadata !12060, metadata !DIExpression()) #26, !dbg !12061
  %5 = or i32 %4, 12, !dbg !12066
  call void @llvm.dbg.value(metadata i32 %5, metadata !12051, metadata !DIExpression()), !dbg !12067
  call void @llvm.dbg.value(metadata i32 %5, metadata !12068, metadata !DIExpression()) #26, !dbg !12075
  call void @llvm.dbg.value(metadata i32* %2, metadata !12073, metadata !DIExpression()) #26, !dbg !12075
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #26, !dbg !12077, !srcloc !12078
  call void @llvm.dbg.value(metadata i32 %6, metadata !12074, metadata !DIExpression()) #26, !dbg !12075
  %7 = icmp eq i32 %6, 0, !dbg !12054
  br i1 %7, label %8, label %3, !dbg !12066, !llvm.loop !12079

8:                                                ; preds = %3
  ret void, !dbg !12080
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !12081 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12083, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 %1, metadata !12084, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 %2, metadata !12085, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 0, metadata !12086, metadata !DIExpression()), !dbg !12087
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12088
  %5 = load volatile i32, i32* %4, align 4, !dbg !12088
  %6 = and i32 %5, -5633, !dbg !12088
  %7 = or i32 %2, %1, !dbg !12088
  %8 = or i32 %7, %6, !dbg !12088
  store volatile i32 %8, i32* %4, align 4, !dbg !12088
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12089
  %10 = load volatile i32, i32* %9, align 4, !dbg !12089
  %11 = and i32 %10, -12289, !dbg !12089
  store volatile i32 %11, i32* %9, align 4, !dbg !12089
  ret void, !dbg !12090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12091 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12093, metadata !DIExpression()), !dbg !12094
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12095
  %3 = load volatile i32, i32* %2, align 4, !dbg !12095
  %4 = or i32 %3, 8, !dbg !12095
  store volatile i32 %4, i32* %2, align 4, !dbg !12095
  ret void, !dbg !12096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12097 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12101, metadata !DIExpression()), !dbg !12104
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12102, metadata !DIExpression()), !dbg !12104
  call void @llvm.dbg.value(metadata i32 0, metadata !12103, metadata !DIExpression()), !dbg !12104
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12105
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12105
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12106
  %5 = load i8, i8* %4, align 4, !dbg !12106
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #28, !dbg !12107
  ret i32 %6, !dbg !12108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.138(%struct.device* noundef %0) unnamed_addr #1 !dbg !12109 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12111, metadata !DIExpression()), !dbg !12112
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #28, !dbg !12113
  ret i1 %2, !dbg !12114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #17 !dbg !12115 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12117, metadata !DIExpression()), !dbg !12118
  tail call fastcc void @__NVIC_SetPriority.140() #27, !dbg !12119
  store i32 16799, i32* @last_load, align 4, !dbg !12120
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12121
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12122
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12123
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12124
  %3 = or i32 %2, 7, !dbg !12124
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12124
  ret i32 0, !dbg !12125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.140() unnamed_addr #17 !dbg !12126 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12128, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.value(metadata i32 1, metadata !12129, metadata !DIExpression()), !dbg !12130
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12131
  ret void, !dbg !12134
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12135 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12137, metadata !DIExpression()), !dbg !12139
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !12140
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12141
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12142
  %5 = add i32 %4, %3, !dbg !12142
  store i32 %5, i32* @cycle_count, align 4, !dbg !12142
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12143
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12144
  %7 = sub i32 %5, %6, !dbg !12147
  %8 = udiv i32 %7, 16800, !dbg !12148
  call void @llvm.dbg.value(metadata i32 %8, metadata !12138, metadata !DIExpression()), !dbg !12139
  %9 = mul nuw i32 %8, 16800, !dbg !12149
  %10 = add i32 %9, %6, !dbg !12150
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12150
  tail call void @sys_clock_announce(i32 noundef %8) #28, !dbg !12151
  tail call void @z_arm_int_exit() #28, !dbg !12152
  ret void, !dbg !12153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #17 !dbg !12154 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12159
  call void @llvm.dbg.value(metadata i32 %1, metadata !12156, metadata !DIExpression()), !dbg !12160
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12161
  call void @llvm.dbg.value(metadata i32 %2, metadata !12157, metadata !DIExpression()), !dbg !12160
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12162
  call void @llvm.dbg.value(metadata i32 %3, metadata !12158, metadata !DIExpression()), !dbg !12160
  %4 = and i32 %2, 65536, !dbg !12163
  %5 = icmp ne i32 %4, 0, !dbg !12163
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12165
  %8 = load i32, i32* @last_load, align 4, !dbg !12160
  br i1 %7, label %9, label %13, !dbg !12165

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12166
  %11 = add i32 %10, %8, !dbg !12166
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12166
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12168
  br label %13, !dbg !12169

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12170
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12171
  %16 = add i32 %14, %15, !dbg !12172
  ret i32 %16, !dbg !12173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12178, metadata !DIExpression()), !dbg !12191
  call void @llvm.dbg.value(metadata i1 %1, metadata !12179, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12191
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12192
  br i1 %4, label %5, label %8, !dbg !12192

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12194
  %7 = and i32 %6, -2, !dbg !12194
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12194
  store i32 -16777216, i32* @last_load, align 4, !dbg !12196
  br label %54, !dbg !12197

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12198
  call void @llvm.dbg.value(metadata i32 %9, metadata !12183, metadata !DIExpression()), !dbg !12191
  br i1 %3, label %18, label %10, !dbg !12199

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12199
  call void @llvm.dbg.value(metadata i32 undef, metadata !12178, metadata !DIExpression()), !dbg !12191
  %12 = icmp slt i32 %11, 1, !dbg !12200
  br i1 %12, label %18, label %13, !dbg !12200

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !12200
  %15 = select i1 %14, i32 %11, i32 997, !dbg !12200
  %16 = mul nuw nsw i32 %15, 16800, !dbg !12200
  %17 = add nuw nsw i32 %16, 16799, !dbg !12200
  br label %18, !dbg !12200

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12178, metadata !DIExpression()), !dbg !12191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12201, metadata !DIExpression()) #26, !dbg !12208
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12210, !srcloc !12216
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !12210
  call void @llvm.dbg.value(metadata i32 %21, metadata !12213, metadata !DIExpression()) #26, !dbg !12217
  call void @llvm.dbg.value(metadata i32 undef, metadata !12214, metadata !DIExpression()) #26, !dbg !12217
  call void @llvm.dbg.value(metadata i32 %21, metadata !12207, metadata !DIExpression()) #26, !dbg !12208
  call void @llvm.dbg.value(metadata i32 %21, metadata !12184, metadata !DIExpression()), !dbg !12191
  %22 = tail call fastcc i32 @elapsed() #27, !dbg !12218
  call void @llvm.dbg.value(metadata i32 %22, metadata !12189, metadata !DIExpression()), !dbg !12191
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12219
  call void @llvm.dbg.value(metadata i32 %23, metadata !12181, metadata !DIExpression()), !dbg !12191
  %24 = load i32, i32* @cycle_count, align 4, !dbg !12220
  %25 = add i32 %24, %22, !dbg !12220
  store i32 %25, i32* @cycle_count, align 4, !dbg !12220
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12221
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !12222
  %27 = sub i32 %25, %26, !dbg !12223
  call void @llvm.dbg.value(metadata i32 %27, metadata !12190, metadata !DIExpression()), !dbg !12191
  %28 = icmp slt i32 %27, 0, !dbg !12224
  br i1 %28, label %38, label %29, !dbg !12226

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()), !dbg !12191
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()), !dbg !12191
  %30 = add nuw i32 %19, %27, !dbg !12227
  %31 = urem i32 %30, 16800, !dbg !12229
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !12180, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12191
  %32 = sub nuw nsw i32 %19, %31, !dbg !12230
  call void @llvm.dbg.value(metadata i32 %32, metadata !12180, metadata !DIExpression()), !dbg !12191
  %33 = icmp ugt i32 %32, 1050, !dbg !12231
  br i1 %33, label %34, label %36, !dbg !12231

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !12180, metadata !DIExpression()), !dbg !12191
  %35 = icmp ugt i32 %32, 16749600, !dbg !12232
  br i1 %35, label %38, label %36, !dbg !12234

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !12235
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12236
  call void @llvm.dbg.value(metadata i32 %40, metadata !12182, metadata !DIExpression()), !dbg !12191
  %41 = add nsw i32 %39, -1, !dbg !12237
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12238
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12239
  %42 = icmp ult i32 %23, %40, !dbg !12240
  br i1 %42, label %43, label %48, !dbg !12242

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12243
  %45 = add i32 %23, %9, !dbg !12245
  %46 = sub i32 %45, %40, !dbg !12246
  %47 = add i32 %46, %44, !dbg !12243
  br label %52, !dbg !12247

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12248
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12250
  %51 = add i32 %49, %50, !dbg !12250
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12251
  store i32 %53, i32* @cycle_count, align 4, !dbg !12251
  call void @llvm.dbg.value(metadata i32 %21, metadata !12252, metadata !DIExpression()) #26, !dbg !12258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12257, metadata !DIExpression()) #26, !dbg !12258
  call void @llvm.dbg.value(metadata i32 %21, metadata !12260, metadata !DIExpression()) #26, !dbg !12263
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #26, !dbg !12265, !srcloc !12266
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12267
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12268 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12201, metadata !DIExpression()) #26, !dbg !12272
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12274, !srcloc !12216
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12274
  call void @llvm.dbg.value(metadata i32 %2, metadata !12213, metadata !DIExpression()) #26, !dbg !12276
  call void @llvm.dbg.value(metadata i32 undef, metadata !12214, metadata !DIExpression()) #26, !dbg !12276
  call void @llvm.dbg.value(metadata i32 %2, metadata !12207, metadata !DIExpression()) #26, !dbg !12272
  call void @llvm.dbg.value(metadata i32 %2, metadata !12270, metadata !DIExpression()), !dbg !12277
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !12278
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12279
  %5 = add i32 %4, %3, !dbg !12280
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12281
  %7 = sub i32 %5, %6, !dbg !12282
  call void @llvm.dbg.value(metadata i32 %7, metadata !12271, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 %2, metadata !12252, metadata !DIExpression()) #26, !dbg !12283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12257, metadata !DIExpression()) #26, !dbg !12283
  call void @llvm.dbg.value(metadata i32 %2, metadata !12260, metadata !DIExpression()) #26, !dbg !12285
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !12287, !srcloc !12266
  %8 = udiv i32 %7, 16800, !dbg !12288
  ret i32 %8, !dbg !12289
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12290 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12201, metadata !DIExpression()) #26, !dbg !12294
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12296, !srcloc !12216
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12296
  call void @llvm.dbg.value(metadata i32 %2, metadata !12213, metadata !DIExpression()) #26, !dbg !12298
  call void @llvm.dbg.value(metadata i32 undef, metadata !12214, metadata !DIExpression()) #26, !dbg !12298
  call void @llvm.dbg.value(metadata i32 %2, metadata !12207, metadata !DIExpression()) #26, !dbg !12294
  call void @llvm.dbg.value(metadata i32 %2, metadata !12292, metadata !DIExpression()), !dbg !12299
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !12300
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12301
  %5 = add i32 %4, %3, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %5, metadata !12293, metadata !DIExpression()), !dbg !12299
  call void @llvm.dbg.value(metadata i32 %2, metadata !12252, metadata !DIExpression()) #26, !dbg !12303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12257, metadata !DIExpression()) #26, !dbg !12303
  call void @llvm.dbg.value(metadata i32 %2, metadata !12260, metadata !DIExpression()) #26, !dbg !12305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !12307, !srcloc !12266
  ret i32 %5, !dbg !12308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #17 !dbg !12309 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12310
  %2 = icmp eq i32 %1, -16777216, !dbg !12312
  br i1 %2, label %3, label %6, !dbg !12313

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12314
  %5 = or i32 %4, 1, !dbg !12314
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12314
  br label %6, !dbg !12316

6:                                                ; preds = %3, %0
  ret void, !dbg !12317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #17 !dbg !12318 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12319
  %2 = and i32 %1, -2, !dbg !12319
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12319
  ret void, !dbg !12320
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #16 !dbg !12321 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12347, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i8 %1, metadata !12348, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12349, metadata !DIExpression()), !dbg !12350
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12351
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12351
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12350
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12352
  %8 = load i8, i8* %6, align 4, !dbg !12353
  %9 = zext i8 %8 to i32, !dbg !12354
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12354
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12355
  br i1 %11, label %18, label %24, !dbg !12356

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12350
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12352
  %14 = load i8, i8* %6, align 4, !dbg !12353
  %15 = zext i8 %14 to i32, !dbg !12354
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12354
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12355
  br i1 %17, label %18, label %24, !dbg !12356, !llvm.loop !12357

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12359
  %21 = load i8, i8* %20, align 1, !dbg !12359
  %22 = icmp eq i8 %21, %1, !dbg !12362
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12363
  br i1 %22, label %24, label %12, !dbg !12364

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12350
  ret i32 %25, !dbg !12365
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12366 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12377, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i8 %1, metadata !12378, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i32 %2, metadata !12379, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i32 0, metadata !12382, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i32 0, metadata !12383, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i8 0, metadata !12384, metadata !DIExpression()), !dbg !12394
  %4 = icmp eq i8 %1, 0, !dbg !12395
  br i1 %4, label %35, label %5, !dbg !12396

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12395
  br label %9, !dbg !12396

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12384, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.value(metadata i32 %29, metadata !12382, metadata !DIExpression()), !dbg !12393
  %8 = icmp eq i32 %34, %6, !dbg !12395
  br i1 %8, label %35, label %9, !dbg !12396, !llvm.loop !12397

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12384, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.value(metadata i32 %11, metadata !12382, metadata !DIExpression()), !dbg !12393
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12399
  %13 = load i32, i32* %12, align 4, !dbg !12399
  call void @llvm.dbg.value(metadata i32 %13, metadata !12381, metadata !DIExpression()), !dbg !12393
  %14 = and i32 %13, 31, !dbg !12400
  %15 = icmp ult i32 %14, 16, !dbg !12401
  br i1 %15, label %16, label %20, !dbg !12402

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12403
  %18 = load i32, i32* %17, align 4, !dbg !12403
  %19 = or i32 %18, 32, !dbg !12405
  call void @llvm.dbg.value(metadata i32 %19, metadata !12382, metadata !DIExpression()), !dbg !12393
  br label %28, !dbg !12406

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12407

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12408
  %23 = load i32, i32* %22, align 4, !dbg !12408
  call void @llvm.dbg.value(metadata i32 %23, metadata !12386, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12409
  %24 = lshr i32 %23, 7, !dbg !12410
  %25 = and i32 %24, 16, !dbg !12410
  %26 = or i32 %25, %23, !dbg !12410
  call void @llvm.dbg.value(metadata i32 %26, metadata !12382, metadata !DIExpression()), !dbg !12393
  br label %28, !dbg !12411

27:                                               ; preds = %20
  br label %28, !dbg !12412

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12393
  call void @llvm.dbg.value(metadata i32 %29, metadata !12382, metadata !DIExpression()), !dbg !12393
  %30 = lshr i32 %13, 5, !dbg !12412
  %31 = and i32 %30, 255, !dbg !12412
  call void @llvm.dbg.value(metadata i32 %31, metadata !12380, metadata !DIExpression()), !dbg !12393
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !12413
  call void @llvm.dbg.value(metadata i32 %32, metadata !12383, metadata !DIExpression()), !dbg !12393
  %33 = icmp slt i32 %32, 0, !dbg !12414
  %34 = add nuw nsw i32 %10, 1, !dbg !12416
  call void @llvm.dbg.value(metadata i32 %34, metadata !12384, metadata !DIExpression()), !dbg !12394
  br i1 %33, label %35, label %7, !dbg !12417

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12423, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 %1, metadata !12424, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 %2, metadata !12425, metadata !DIExpression()), !dbg !12427
  %4 = icmp ugt i32 %0, 175, !dbg !12428
  br i1 %4, label %16, label %5, !dbg !12430

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12431
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12432
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12432
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12426, metadata !DIExpression()), !dbg !12427
  %9 = add nsw i32 %6, -9, !dbg !12433
  %10 = icmp ult i32 %9, 2, !dbg !12433
  br i1 %10, label %16, label %11, !dbg !12435

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.145(%struct.device* noundef %8) #27, !dbg !12436
  br i1 %12, label %13, label %16, !dbg !12437

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12438
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #28, !dbg !12439
  br label %16, !dbg !12440

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12427
  ret i32 %17, !dbg !12441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.145(%struct.device* noundef %0) unnamed_addr #1 !dbg !12442 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12446, metadata !DIExpression()), !dbg !12447
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !12448, !srcloc !12450
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.146(%struct.device* noundef %0) #27, !dbg !12451
  ret i1 %2, !dbg !12452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.146(%struct.device* noundef %0) unnamed_addr #1 !dbg !12453 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12455, metadata !DIExpression()), !dbg !12456
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #28, !dbg !12457
  ret i1 %2, !dbg !12458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12459 {
  ret void, !dbg !12460
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #18 !dbg !12461 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12463, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 0, metadata !12464, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 2, metadata !12465, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 0, metadata !12466, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 2, metadata !12467, metadata !DIExpression()), !dbg !12468
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12469
  %2 = and i32 %1, 12, !dbg !12470
  call void @llvm.dbg.value(metadata i32 %2, metadata !12463, metadata !DIExpression()), !dbg !12468
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12471

3:                                                ; preds = %0
  br label %21, !dbg !12472

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12474
  call void @llvm.dbg.value(metadata i32 %5, metadata !12466, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12468
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12475
  %7 = and i32 %6, 63, !dbg !12476
  call void @llvm.dbg.value(metadata i32 %7, metadata !12467, metadata !DIExpression()), !dbg !12468
  %8 = and i32 %5, 4194304, !dbg !12477
  %9 = icmp eq i32 %8, 0, !dbg !12477
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !12479
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12479
  %13 = lshr i32 %12, 6, !dbg !12479
  %14 = and i32 %13, 511, !dbg !12479
  %15 = mul i32 %14, %11, !dbg !12479
  call void @llvm.dbg.value(metadata i32 %15, metadata !12464, metadata !DIExpression()), !dbg !12468
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12480
  %17 = lshr i32 %16, 15, !dbg !12481
  %18 = and i32 %17, 6, !dbg !12481
  %19 = add nuw nsw i32 %18, 2, !dbg !12481
  call void @llvm.dbg.value(metadata i32 %19, metadata !12465, metadata !DIExpression()), !dbg !12468
  %20 = udiv i32 %15, %19, !dbg !12482
  br label %21, !dbg !12483

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12484
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12485
  %24 = lshr i32 %23, 4, !dbg !12486
  %25 = and i32 %24, 15, !dbg !12486
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12487
  %27 = load i8, i8* %26, align 1, !dbg !12487
  %28 = zext i8 %27 to i32, !dbg !12487
  call void @llvm.dbg.value(metadata i32 %28, metadata !12463, metadata !DIExpression()), !dbg !12468
  %29 = lshr i32 %22, %28, !dbg !12488
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12488
  ret void, !dbg !12489
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12490 {
  ret i32 0, !dbg !12495
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12496 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12522, metadata !DIExpression()), !dbg !12533
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12534
  br i1 %3, label %311, label %4, !dbg !12536

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12537
  %6 = load i32, i32* %5, align 4, !dbg !12537
  %7 = and i32 %6, 1, !dbg !12539
  %8 = icmp eq i32 %7, 0, !dbg !12540
  br i1 %8, label %66, label %9, !dbg !12541

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12542
  %11 = and i32 %10, 12, !dbg !12542
  %12 = icmp eq i32 %11, 4, !dbg !12545
  br i1 %12, label %21, label %13, !dbg !12546

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12547
  %15 = and i32 %14, 12, !dbg !12547
  %16 = icmp eq i32 %15, 8, !dbg !12548
  br i1 %16, label %17, label %29, !dbg !12549

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12550
  %19 = and i32 %18, 4194304, !dbg !12551
  %20 = icmp eq i32 %19, 0, !dbg !12552
  br i1 %20, label %29, label %21, !dbg !12553

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12554
  %23 = and i32 %22, 131072, !dbg !12554
  %24 = icmp eq i32 %23, 0, !dbg !12554
  br i1 %24, label %66, label %25, !dbg !12557

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12558
  %27 = load i32, i32* %26, align 4, !dbg !12558
  %28 = icmp eq i32 %27, 0, !dbg !12559
  br i1 %28, label %311, label %66, !dbg !12560

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12561
  %31 = load i32, i32* %30, align 4, !dbg !12561
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12565

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12566
  %34 = or i32 %33, 65536, !dbg !12566
  br label %45, !dbg !12566

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12568
  %37 = or i32 %36, 262144, !dbg !12568
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12568
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12568
  %39 = or i32 %38, 65536, !dbg !12568
  br label %45, !dbg !12568

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12571
  %42 = and i32 %41, -65537, !dbg !12571
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12571
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12571
  %44 = and i32 %43, -262145, !dbg !12571
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12573
  %47 = load i32, i32* %30, align 4, !dbg !12574
  %48 = icmp eq i32 %47, 0, !dbg !12576
  %49 = tail call i32 @HAL_GetTick() #28, !dbg !12577
  call void @llvm.dbg.value(metadata i32 %49, metadata !12523, metadata !DIExpression()), !dbg !12533
  call void @llvm.dbg.value(metadata i32 %49, metadata !12523, metadata !DIExpression()), !dbg !12533
  br i1 %48, label %58, label %50, !dbg !12578

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12579
  %52 = and i32 %51, 131072, !dbg !12581
  %53 = icmp eq i32 %52, 0, !dbg !12581
  br i1 %53, label %54, label %66, !dbg !12582

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #28, !dbg !12583
  %56 = sub i32 %55, %49, !dbg !12586
  %57 = icmp ugt i32 %56, 100, !dbg !12587
  br i1 %57, label %311, label %50, !dbg !12588, !llvm.loop !12589

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12591
  %60 = and i32 %59, 131072, !dbg !12591
  %61 = icmp eq i32 %60, 0, !dbg !12591
  br i1 %61, label %66, label %62, !dbg !12593

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #28, !dbg !12594
  %64 = sub i32 %63, %49, !dbg !12597
  %65 = icmp ugt i32 %64, 100, !dbg !12598
  br i1 %65, label %311, label %58, !dbg !12599, !llvm.loop !12600

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12602
  %68 = and i32 %67, 2, !dbg !12604
  %69 = icmp eq i32 %68, 0, !dbg !12605
  br i1 %69, label %121, label %70, !dbg !12606

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12607
  %72 = and i32 %71, 12, !dbg !12607
  %73 = icmp eq i32 %72, 0, !dbg !12610
  br i1 %73, label %82, label %74, !dbg !12611

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12612
  %76 = and i32 %75, 12, !dbg !12612
  %77 = icmp eq i32 %76, 8, !dbg !12613
  br i1 %77, label %78, label %90, !dbg !12614

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12615
  %80 = and i32 %79, 4194304, !dbg !12616
  %81 = icmp eq i32 %80, 0, !dbg !12617
  br i1 %81, label %82, label %90, !dbg !12618

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12619
  %84 = and i32 %83, 2, !dbg !12619
  %85 = icmp eq i32 %84, 0, !dbg !12619
  br i1 %85, label %114, label %86, !dbg !12622

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12623
  %88 = load i32, i32* %87, align 4, !dbg !12623
  %89 = icmp eq i32 %88, 1, !dbg !12624
  br i1 %89, label %114, label %311, !dbg !12625

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12626
  %92 = load i32, i32* %91, align 4, !dbg !12626
  %93 = icmp eq i32 %92, 0, !dbg !12629
  br i1 %93, label %104, label %94, !dbg !12630

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12631
  %95 = tail call i32 @HAL_GetTick() #28, !dbg !12633
  call void @llvm.dbg.value(metadata i32 %95, metadata !12523, metadata !DIExpression()), !dbg !12533
  br label %96, !dbg !12634

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12635
  %98 = and i32 %97, 2, !dbg !12636
  %99 = icmp eq i32 %98, 0, !dbg !12636
  br i1 %99, label %100, label %114, !dbg !12634

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #28, !dbg !12637
  %102 = sub i32 %101, %95, !dbg !12640
  %103 = icmp ugt i32 %102, 2, !dbg !12641
  br i1 %103, label %311, label %96, !dbg !12642, !llvm.loop !12643

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12645
  %105 = tail call i32 @HAL_GetTick() #28, !dbg !12647
  call void @llvm.dbg.value(metadata i32 %105, metadata !12523, metadata !DIExpression()), !dbg !12533
  br label %106, !dbg !12648

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12649
  %108 = and i32 %107, 2, !dbg !12649
  %109 = icmp eq i32 %108, 0, !dbg !12649
  br i1 %109, label %121, label %110, !dbg !12648

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #28, !dbg !12650
  %112 = sub i32 %111, %105, !dbg !12653
  %113 = icmp ugt i32 %112, 2, !dbg !12654
  br i1 %113, label %311, label %106, !dbg !12655, !llvm.loop !12656

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12658
  %116 = and i32 %115, -249, !dbg !12658
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12658
  %118 = load i32, i32* %117, align 4, !dbg !12658
  %119 = shl i32 %118, 3, !dbg !12658
  %120 = or i32 %119, %116, !dbg !12658
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12658
  br label %121, !dbg !12659

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12659
  %123 = and i32 %122, 8, !dbg !12661
  %124 = icmp eq i32 %123, 0, !dbg !12662
  br i1 %124, label %149, label %125, !dbg !12663

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12664
  %127 = load i32, i32* %126, align 4, !dbg !12664
  %128 = icmp eq i32 %127, 0, !dbg !12667
  br i1 %128, label %139, label %129, !dbg !12668

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12669
  %130 = tail call i32 @HAL_GetTick() #28, !dbg !12671
  call void @llvm.dbg.value(metadata i32 %130, metadata !12523, metadata !DIExpression()), !dbg !12533
  br label %131, !dbg !12672

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12673
  %133 = and i32 %132, 2, !dbg !12674
  %134 = icmp eq i32 %133, 0, !dbg !12674
  br i1 %134, label %135, label %149, !dbg !12672

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #28, !dbg !12675
  %137 = sub i32 %136, %130, !dbg !12678
  %138 = icmp ugt i32 %137, 2, !dbg !12679
  br i1 %138, label %311, label %131, !dbg !12680, !llvm.loop !12681

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12683
  %140 = tail call i32 @HAL_GetTick() #28, !dbg !12685
  call void @llvm.dbg.value(metadata i32 %140, metadata !12523, metadata !DIExpression()), !dbg !12533
  br label %141, !dbg !12686

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12687
  %143 = and i32 %142, 2, !dbg !12687
  %144 = icmp eq i32 %143, 0, !dbg !12687
  br i1 %144, label %149, label %145, !dbg !12686

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #28, !dbg !12688
  %147 = sub i32 %146, %140, !dbg !12691
  %148 = icmp ugt i32 %147, 2, !dbg !12692
  br i1 %148, label %311, label %141, !dbg !12693, !llvm.loop !12694

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12696
  %151 = and i32 %150, 4, !dbg !12697
  %152 = icmp eq i32 %151, 0, !dbg !12698
  br i1 %152, label %221, label %153, !dbg !12699

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12525, metadata !DIExpression()), !dbg !12700
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12701
  %155 = and i32 %154, 268435456, !dbg !12701
  %156 = icmp eq i32 %155, 0, !dbg !12701
  br i1 %156, label %157, label %164, !dbg !12702

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12703
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12703
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12529, metadata !DIExpression()), !dbg !12703
  store volatile i32 0, i32* %2, align 4, !dbg !12703
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12703
  %160 = or i32 %159, 268435456, !dbg !12703
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12703
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12703
  %162 = and i32 %161, 268435456, !dbg !12703
  store volatile i32 %162, i32* %2, align 4, !dbg !12703
  %163 = load volatile i32, i32* %2, align 4, !dbg !12703
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12704
  call void @llvm.dbg.value(metadata i32 1, metadata !12525, metadata !DIExpression()), !dbg !12700
  br label %164, !dbg !12705

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12525, metadata !DIExpression()), !dbg !12700
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12706
  %166 = and i32 %165, 256, !dbg !12706
  %167 = icmp eq i32 %166, 0, !dbg !12706
  br i1 %167, label %168, label %180, !dbg !12708

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12709
  %170 = or i32 %169, 256, !dbg !12709
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12709
  %171 = tail call i32 @HAL_GetTick() #28, !dbg !12711
  call void @llvm.dbg.value(metadata i32 %171, metadata !12523, metadata !DIExpression()), !dbg !12533
  br label %172, !dbg !12712

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12713
  %174 = and i32 %173, 256, !dbg !12713
  %175 = icmp eq i32 %174, 0, !dbg !12713
  br i1 %175, label %176, label %180, !dbg !12712

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #28, !dbg !12714
  %178 = sub i32 %177, %171, !dbg !12717
  %179 = icmp ugt i32 %178, 2, !dbg !12718
  br i1 %179, label %311, label %172, !dbg !12719, !llvm.loop !12720

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12722
  %182 = load i32, i32* %181, align 4, !dbg !12722
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12725

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12726
  %185 = or i32 %184, 1, !dbg !12726
  br label %196, !dbg !12726

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12728
  %188 = or i32 %187, 4, !dbg !12728
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12728
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12728
  %190 = or i32 %189, 1, !dbg !12728
  br label %196, !dbg !12728

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12731
  %193 = and i32 %192, -2, !dbg !12731
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12731
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12731
  %195 = and i32 %194, -5, !dbg !12731
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12733
  %198 = load i32, i32* %181, align 4, !dbg !12734
  %199 = icmp eq i32 %198, 0, !dbg !12736
  %200 = tail call i32 @HAL_GetTick() #28, !dbg !12737
  call void @llvm.dbg.value(metadata i32 %200, metadata !12523, metadata !DIExpression()), !dbg !12533
  call void @llvm.dbg.value(metadata i32 %200, metadata !12523, metadata !DIExpression()), !dbg !12533
  br i1 %199, label %209, label %201, !dbg !12738

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12739
  %203 = and i32 %202, 2, !dbg !12741
  %204 = icmp eq i32 %203, 0, !dbg !12741
  br i1 %204, label %205, label %217, !dbg !12742

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #28, !dbg !12743
  %207 = sub i32 %206, %200, !dbg !12746
  %208 = icmp ugt i32 %207, 5000, !dbg !12747
  br i1 %208, label %311, label %201, !dbg !12748, !llvm.loop !12749

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12751
  %211 = and i32 %210, 2, !dbg !12751
  %212 = icmp eq i32 %211, 0, !dbg !12751
  br i1 %212, label %217, label %213, !dbg !12753

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #28, !dbg !12754
  %215 = sub i32 %214, %200, !dbg !12757
  %216 = icmp ugt i32 %215, 5000, !dbg !12758
  br i1 %216, label %311, label %209, !dbg !12759, !llvm.loop !12760

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12762

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12763
  %220 = and i32 %219, -268435457, !dbg !12763
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12763
  br label %221, !dbg !12766

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12767
  %223 = load i32, i32* %222, align 4, !dbg !12767
  %224 = icmp eq i32 %223, 0, !dbg !12769
  br i1 %224, label %310, label %225, !dbg !12770

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12771
  %227 = and i32 %226, 12, !dbg !12771
  %228 = icmp eq i32 %227, 8, !dbg !12774
  br i1 %228, label %277, label %229, !dbg !12775

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12776
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12779
  %231 = tail call i32 @HAL_GetTick() #28, !dbg !12779
  call void @llvm.dbg.value(metadata i32 %231, metadata !12523, metadata !DIExpression()), !dbg !12533
  call void @llvm.dbg.value(metadata i32 %231, metadata !12523, metadata !DIExpression()), !dbg !12533
  br i1 %230, label %232, label %269, !dbg !12780

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12781
  %234 = and i32 %233, 33554432, !dbg !12781
  %235 = icmp eq i32 %234, 0, !dbg !12781
  br i1 %235, label %240, label %236, !dbg !12783

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #28, !dbg !12784
  %238 = sub i32 %237, %231, !dbg !12787
  %239 = icmp ugt i32 %238, 2, !dbg !12788
  br i1 %239, label %311, label %232, !dbg !12789, !llvm.loop !12790

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12792
  %242 = load i32, i32* %241, align 4, !dbg !12792
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12792
  %244 = load i32, i32* %243, align 4, !dbg !12792
  %245 = or i32 %244, %242, !dbg !12792
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12792
  %247 = load i32, i32* %246, align 4, !dbg !12792
  %248 = shl i32 %247, 6, !dbg !12792
  %249 = or i32 %245, %248, !dbg !12792
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12792
  %251 = load i32, i32* %250, align 4, !dbg !12792
  %252 = shl i32 %251, 15, !dbg !12792
  %253 = add i32 %252, -65536, !dbg !12792
  %254 = and i32 %253, -65536, !dbg !12792
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12792
  %256 = load i32, i32* %255, align 4, !dbg !12792
  %257 = shl i32 %256, 24, !dbg !12792
  %258 = or i32 %249, %257, !dbg !12792
  %259 = or i32 %258, %254, !dbg !12792
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12792
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12793
  %260 = tail call i32 @HAL_GetTick() #28, !dbg !12794
  call void @llvm.dbg.value(metadata i32 %260, metadata !12523, metadata !DIExpression()), !dbg !12533
  br label %261, !dbg !12795

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12796
  %263 = and i32 %262, 33554432, !dbg !12797
  %264 = icmp eq i32 %263, 0, !dbg !12797
  br i1 %264, label %265, label %310, !dbg !12795

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #28, !dbg !12798
  %267 = sub i32 %266, %260, !dbg !12801
  %268 = icmp ugt i32 %267, 2, !dbg !12802
  br i1 %268, label %311, label %261, !dbg !12803, !llvm.loop !12804

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12806
  %271 = and i32 %270, 33554432, !dbg !12806
  %272 = icmp eq i32 %271, 0, !dbg !12806
  br i1 %272, label %310, label %273, !dbg !12808

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #28, !dbg !12809
  %275 = sub i32 %274, %231, !dbg !12812
  %276 = icmp ugt i32 %275, 2, !dbg !12813
  br i1 %276, label %311, label %269, !dbg !12814, !llvm.loop !12815

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12817
  br i1 %278, label %311, label %279, !dbg !12820

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12821
  call void @llvm.dbg.value(metadata i32 %280, metadata !12524, metadata !DIExpression()), !dbg !12533
  %281 = and i32 %280, 4194304, !dbg !12823
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12825
  %283 = load i32, i32* %282, align 4, !dbg !12825
  %284 = icmp eq i32 %281, %283, !dbg !12826
  br i1 %284, label %285, label %311, !dbg !12827

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12828
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12829
  %288 = load i32, i32* %287, align 4, !dbg !12829
  %289 = icmp eq i32 %286, %288, !dbg !12830
  br i1 %289, label %290, label %311, !dbg !12831

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12832
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12833
  %293 = load i32, i32* %292, align 4, !dbg !12833
  %294 = shl i32 %293, 6, !dbg !12834
  %295 = icmp eq i32 %291, %294, !dbg !12835
  br i1 %295, label %296, label %311, !dbg !12836

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12837
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12838
  %299 = load i32, i32* %298, align 4, !dbg !12838
  %300 = shl i32 %299, 15, !dbg !12839
  %301 = add i32 %300, -65536, !dbg !12839
  %302 = and i32 %301, -65536, !dbg !12839
  %303 = icmp eq i32 %297, %302, !dbg !12840
  br i1 %303, label %304, label %311, !dbg !12841

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12842
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12843
  %307 = load i32, i32* %306, align 4, !dbg !12843
  %308 = shl i32 %307, 24, !dbg !12844
  %309 = icmp eq i32 %305, %308, !dbg !12845
  br i1 %309, label %310, label %311, !dbg !12846

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12847

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12533
  ret i32 %312, !dbg !12848
}

; Function Attrs: optsize
declare !dbg !12849 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12851 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12864, metadata !DIExpression()), !dbg !12867
  call void @llvm.dbg.value(metadata i32 %1, metadata !12865, metadata !DIExpression()), !dbg !12867
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12868
  br i1 %3, label %115, label %4, !dbg !12870

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12871
  %6 = and i32 %5, 7, !dbg !12871
  %7 = icmp ult i32 %6, %1, !dbg !12873
  br i1 %7, label %8, label %13, !dbg !12874

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12875
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12875
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12877
  %11 = and i32 %10, 7, !dbg !12877
  %12 = icmp eq i32 %11, %1, !dbg !12879
  br i1 %12, label %13, label %115, !dbg !12880

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12881
  %15 = load i32, i32* %14, align 4, !dbg !12881
  %16 = and i32 %15, 2, !dbg !12883
  %17 = icmp eq i32 %16, 0, !dbg !12884
  br i1 %17, label %39, label %18, !dbg !12885

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12886
  %20 = icmp eq i32 %19, 0, !dbg !12889
  br i1 %20, label %25, label %21, !dbg !12890

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12891
  %23 = or i32 %22, 7168, !dbg !12891
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12891
  %24 = load i32, i32* %14, align 4, !dbg !12893
  br label %25, !dbg !12895

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12893
  %27 = and i32 %26, 8, !dbg !12896
  %28 = icmp eq i32 %27, 0, !dbg !12897
  br i1 %28, label %32, label %29, !dbg !12898

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12899
  %31 = or i32 %30, 57344, !dbg !12899
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12899
  br label %32, !dbg !12901

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12902
  %34 = and i32 %33, -241, !dbg !12902
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12902
  %36 = load i32, i32* %35, align 4, !dbg !12902
  %37 = or i32 %34, %36, !dbg !12902
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12902
  %38 = load i32, i32* %14, align 4, !dbg !12903
  br label %39, !dbg !12905

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12903
  %41 = and i32 %40, 1, !dbg !12906
  %42 = icmp eq i32 %41, 0, !dbg !12907
  br i1 %42, label %73, label %43, !dbg !12908

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12909
  %45 = load i32, i32* %44, align 4, !dbg !12909
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12912

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12913
  %48 = and i32 %47, 131072, !dbg !12916
  %49 = icmp eq i32 %48, 0, !dbg !12916
  br i1 %49, label %115, label %58, !dbg !12917

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12918
  %52 = and i32 %51, 33554432, !dbg !12922
  %53 = icmp eq i32 %52, 0, !dbg !12922
  br i1 %53, label %115, label %58, !dbg !12923

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12924
  %56 = and i32 %55, 2, !dbg !12927
  %57 = icmp eq i32 %56, 0, !dbg !12927
  br i1 %57, label %115, label %58, !dbg !12928

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12929
  %60 = and i32 %59, -4, !dbg !12929
  %61 = or i32 %60, %45, !dbg !12929
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12929
  %62 = tail call i32 @HAL_GetTick() #28, !dbg !12930
  call void @llvm.dbg.value(metadata i32 %62, metadata !12866, metadata !DIExpression()), !dbg !12867
  br label %63, !dbg !12931

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12932
  %65 = and i32 %64, 12, !dbg !12932
  %66 = load i32, i32* %44, align 4, !dbg !12933
  %67 = shl i32 %66, 2, !dbg !12934
  %68 = icmp eq i32 %65, %67, !dbg !12935
  br i1 %68, label %73, label %69, !dbg !12931

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #28, !dbg !12936
  %71 = sub i32 %70, %62, !dbg !12939
  %72 = icmp ugt i32 %71, 5000, !dbg !12940
  br i1 %72, label %115, label %63, !dbg !12941, !llvm.loop !12942

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12944
  %75 = and i32 %74, 7, !dbg !12944
  %76 = icmp ugt i32 %75, %1, !dbg !12946
  br i1 %76, label %77, label %82, !dbg !12947

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12948
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12948
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12950
  %80 = and i32 %79, 7, !dbg !12950
  %81 = icmp eq i32 %80, %1, !dbg !12952
  br i1 %81, label %82, label %115, !dbg !12953

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12954
  %84 = and i32 %83, 4, !dbg !12956
  %85 = icmp eq i32 %84, 0, !dbg !12957
  br i1 %85, label %93, label %86, !dbg !12958

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12959
  %88 = and i32 %87, -7169, !dbg !12959
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12959
  %90 = load i32, i32* %89, align 4, !dbg !12959
  %91 = or i32 %88, %90, !dbg !12959
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12959
  %92 = load i32, i32* %14, align 4, !dbg !12961
  br label %93, !dbg !12963

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12961
  %95 = and i32 %94, 8, !dbg !12964
  %96 = icmp eq i32 %95, 0, !dbg !12965
  br i1 %96, label %104, label %97, !dbg !12966

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12967
  %99 = and i32 %98, -57345, !dbg !12967
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12967
  %101 = load i32, i32* %100, align 4, !dbg !12967
  %102 = shl i32 %101, 3, !dbg !12967
  %103 = or i32 %102, %99, !dbg !12967
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12967
  br label %104, !dbg !12969

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !12970
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12971
  %107 = lshr i32 %106, 4, !dbg !12972
  %108 = and i32 %107, 15, !dbg !12972
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12973
  %110 = load i8, i8* %109, align 1, !dbg !12973
  %111 = zext i8 %110 to i32, !dbg !12973
  %112 = lshr i32 %105, %111, !dbg !12974
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12975
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12976
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #28, !dbg !12977
  br label %115, !dbg !12978

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12867
  ret i32 %116, !dbg !12979
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12980 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12982, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i32 0, metadata !12983, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i32 0, metadata !12984, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i32 0, metadata !12985, metadata !DIExpression()), !dbg !12986
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12987
  %2 = and i32 %1, 12, !dbg !12988
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12989

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !12985, metadata !DIExpression()), !dbg !12986
  br label %24, !dbg !12990

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12993
  %6 = and i32 %5, 63, !dbg !12995
  call void @llvm.dbg.value(metadata i32 %6, metadata !12982, metadata !DIExpression()), !dbg !12986
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12996
  %8 = and i32 %7, 4194304, !dbg !12996
  %9 = icmp eq i32 %8, 0, !dbg !12998
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12999
  %11 = lshr i32 %10, 6, !dbg !12999
  %12 = and i32 %11, 511, !dbg !12999
  %13 = zext i32 %12 to i64, !dbg !12999
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !12999
  %16 = zext i32 %6 to i64, !dbg !12999
  %17 = udiv i64 %15, %16, !dbg !12999
  %18 = trunc i64 %17 to i32, !dbg !12999
  call void @llvm.dbg.value(metadata i32 %18, metadata !12983, metadata !DIExpression()), !dbg !12986
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13000
  %20 = lshr i32 %19, 15, !dbg !13001
  %21 = and i32 %20, 6, !dbg !13001
  %22 = add nuw nsw i32 %21, 2, !dbg !13001
  call void @llvm.dbg.value(metadata i32 %22, metadata !12984, metadata !DIExpression()), !dbg !12986
  %23 = udiv i32 %18, %22, !dbg !13002
  call void @llvm.dbg.value(metadata i32 %23, metadata !12985, metadata !DIExpression()), !dbg !12986
  br label %24, !dbg !13003

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !13004
  call void @llvm.dbg.value(metadata i32 %25, metadata !12985, metadata !DIExpression()), !dbg !12986
  ret i32 %25, !dbg !13005
}

; Function Attrs: optsize
declare !dbg !13006 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13009 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13013, metadata !DIExpression()), !dbg !13033
  call void @llvm.dbg.value(metadata i32 %1, metadata !13014, metadata !DIExpression()), !dbg !13033
  call void @llvm.dbg.value(metadata i32 %2, metadata !13015, metadata !DIExpression()), !dbg !13033
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !13034
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !13034
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !13016, metadata !DIExpression()), !dbg !13035
  %8 = icmp eq i32 %0, 0, !dbg !13036
  br i1 %8, label %9, label %23, !dbg !13037

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !13038
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !13038
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13026, metadata !DIExpression()), !dbg !13038
  store volatile i32 0, i32* %5, align 4, !dbg !13038
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13038
  %12 = or i32 %11, 1, !dbg !13038
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13038
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13038
  %14 = and i32 %13, 1, !dbg !13038
  store volatile i32 %14, i32* %5, align 4, !dbg !13038
  %15 = load volatile i32, i32* %5, align 4, !dbg !13038
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !13039
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13040
  store i32 256, i32* %16, align 4, !dbg !13041
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13042
  store i32 2, i32* %17, align 4, !dbg !13043
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13044
  store i32 3, i32* %18, align 4, !dbg !13045
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13046
  store i32 0, i32* %19, align 4, !dbg !13047
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13048
  store i32 0, i32* %20, align 4, !dbg !13049
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #28, !dbg !13050
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13051
  %22 = and i32 %21, -123731969, !dbg !13051
  br label %38, !dbg !13052

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !13053
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !13053
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13030, metadata !DIExpression()), !dbg !13053
  store volatile i32 0, i32* %6, align 4, !dbg !13053
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13053
  %26 = or i32 %25, 4, !dbg !13053
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13053
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13053
  %28 = and i32 %27, 4, !dbg !13053
  store volatile i32 %28, i32* %6, align 4, !dbg !13053
  %29 = load volatile i32, i32* %6, align 4, !dbg !13053
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !13054
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13055
  store i32 512, i32* %30, align 4, !dbg !13056
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13057
  store i32 2, i32* %31, align 4, !dbg !13058
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13059
  store i32 3, i32* %32, align 4, !dbg !13060
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13061
  store i32 0, i32* %33, align 4, !dbg !13062
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13063
  store i32 0, i32* %34, align 4, !dbg !13064
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #28, !dbg !13065
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13066
  %36 = and i32 %35, 134217727, !dbg !13066
  %37 = shl i32 %2, 3, !dbg !13066
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !13067
  %42 = or i32 %41, %40, !dbg !13067
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13067
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #26, !dbg !13068
  ret void, !dbg !13068
}

; Function Attrs: optsize
declare !dbg !13069 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #17 !dbg !13073 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13074
  ret void, !dbg !13075
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #17 !dbg !13076 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13077
  ret void, !dbg !13078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #3 !dbg !13079 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13080
  ret i32 %1, !dbg !13081
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #18 !dbg !13082 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !13083
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13084
  %3 = lshr i32 %2, 10, !dbg !13085
  %4 = and i32 %3, 7, !dbg !13085
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13086
  %6 = load i8, i8* %5, align 1, !dbg !13086
  %7 = zext i8 %6 to i32, !dbg !13086
  %8 = lshr i32 %1, %7, !dbg !13087
  ret i32 %8, !dbg !13088
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #18 !dbg !13089 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !13090
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13091
  %3 = lshr i32 %2, 13, !dbg !13092
  %4 = and i32 %3, 7, !dbg !13092
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13093
  %6 = load i8, i8* %5, align 1, !dbg !13093
  %7 = zext i8 %6 to i32, !dbg !13093
  %8 = lshr i32 %1, %7, !dbg !13094
  ret i32 %8, !dbg !13095
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13096 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13100, metadata !DIExpression()), !dbg !13101
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13102
  store i32 15, i32* %2, align 4, !dbg !13103
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13104
  %4 = and i32 %3, 262144, !dbg !13106
  %5 = icmp eq i32 %4, 0, !dbg !13107
  br i1 %5, label %8, label %6, !dbg !13108

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13109
  store i32 327680, i32* %7, align 4, !dbg !13111
  br label %15, !dbg !13112

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13113
  %10 = and i32 %9, 65536, !dbg !13115
  %11 = icmp eq i32 %10, 0, !dbg !13116
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13117
  br i1 %11, label %14, label %13, !dbg !13118

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13119
  br label %15, !dbg !13121

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13122
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13124
  %17 = and i32 %16, 1, !dbg !13126
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13127
  store i32 %17, i32* %18, align 4, !dbg !13129
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13130
  %20 = lshr i32 %19, 3, !dbg !13131
  %21 = and i32 %20, 31, !dbg !13131
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13132
  store i32 %21, i32* %22, align 4, !dbg !13133
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13134
  %24 = and i32 %23, 4, !dbg !13136
  %25 = icmp eq i32 %24, 0, !dbg !13137
  br i1 %25, label %28, label %26, !dbg !13138

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13139
  store i32 5, i32* %27, align 4, !dbg !13141
  br label %35, !dbg !13142

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13143
  %30 = and i32 %29, 1, !dbg !13145
  %31 = icmp eq i32 %30, 0, !dbg !13146
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13147
  br i1 %31, label %34, label %33, !dbg !13148

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13149
  br label %35, !dbg !13151

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13152
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13154
  %37 = and i32 %36, 1, !dbg !13156
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13157
  store i32 %37, i32* %38, align 4, !dbg !13159
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13160
  %40 = and i32 %39, 16777216, !dbg !13162
  %41 = icmp eq i32 %40, 0, !dbg !13163
  %42 = select i1 %41, i32 1, i32 2, !dbg !13164
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13165
  store i32 %42, i32* %43, align 4, !dbg !13167
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13168
  %45 = and i32 %44, 4194304, !dbg !13169
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13170
  store i32 %45, i32* %46, align 4, !dbg !13171
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13172
  %48 = and i32 %47, 63, !dbg !13173
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13174
  store i32 %48, i32* %49, align 4, !dbg !13175
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13176
  %51 = lshr i32 %50, 6, !dbg !13177
  %52 = and i32 %51, 511, !dbg !13177
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13178
  store i32 %52, i32* %53, align 4, !dbg !13179
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13180
  %55 = shl i32 %54, 1, !dbg !13181
  %56 = and i32 %55, 393216, !dbg !13181
  %57 = add nuw nsw i32 %56, 131072, !dbg !13181
  %58 = lshr exact i32 %57, 16, !dbg !13182
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13183
  store i32 %58, i32* %59, align 4, !dbg !13184
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13185
  %61 = lshr i32 %60, 24, !dbg !13186
  %62 = and i32 %61, 15, !dbg !13186
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13187
  store i32 %62, i32* %63, align 4, !dbg !13188
  ret void, !dbg !13189
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #18 !dbg !13190 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13194, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i32* %1, metadata !13195, metadata !DIExpression()), !dbg !13196
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13197
  store i32 15, i32* %3, align 4, !dbg !13198
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13199
  %5 = and i32 %4, 3, !dbg !13200
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13201
  store i32 %5, i32* %6, align 4, !dbg !13202
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13203
  %8 = and i32 %7, 240, !dbg !13204
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13205
  store i32 %8, i32* %9, align 4, !dbg !13206
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13207
  %11 = and i32 %10, 7168, !dbg !13208
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13209
  store i32 %11, i32* %12, align 4, !dbg !13210
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13211
  %14 = lshr i32 %13, 3, !dbg !13212
  %15 = and i32 %14, 7168, !dbg !13212
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13213
  store i32 %15, i32* %16, align 4, !dbg !13214
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13215
  %18 = and i32 %17, 7, !dbg !13216
  store i32 %18, i32* %1, align 4, !dbg !13217
  ret void, !dbg !13218
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13219 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13220
  %2 = and i32 %1, 128, !dbg !13220
  %3 = icmp eq i32 %2, 0, !dbg !13220
  br i1 %3, label %5, label %4, !dbg !13222

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #27, !dbg !13223
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13225
  br label %5, !dbg !13226

5:                                                ; preds = %4, %0
  ret void, !dbg !13227
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13228 {
  ret void, !dbg !13229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #17 !dbg !13230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13233, metadata !DIExpression()), !dbg !13234
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !13235
  ret void, !dbg !13236
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #17 !dbg !13237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13240, metadata !DIExpression()), !dbg !13242
  call void @llvm.dbg.value(metadata i32 1000, metadata !13241, metadata !DIExpression()), !dbg !13242
  %2 = udiv i32 %0, 1000, !dbg !13243
  %3 = add nsw i32 %2, -1, !dbg !13244
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13245
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13246
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13247
  ret void, !dbg !13248
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !13249 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13251, metadata !DIExpression()), !dbg !13253
  %3 = bitcast i32* %2 to i8*, !dbg !13254
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13254
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13252, metadata !DIExpression()), !dbg !13255
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13256
  store volatile i32 %4, i32* %2, align 4, !dbg !13255
  %5 = load volatile i32, i32* %2, align 4, !dbg !13257
  %6 = icmp eq i32 %0, -1, !dbg !13258
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13251, metadata !DIExpression()), !dbg !13253
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13253
  call void @llvm.dbg.value(metadata i32 %8, metadata !13251, metadata !DIExpression()), !dbg !13253
  br label %9, !dbg !13260

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13251, metadata !DIExpression()), !dbg !13253
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13261
  call void @llvm.dbg.value(metadata i32 undef, metadata !13251, metadata !DIExpression()), !dbg !13253
  %12 = shl i32 %11, 15, !dbg !13253
  %13 = ashr i32 %12, 31, !dbg !13253
  %14 = add i32 %13, %10, !dbg !13253
  call void @llvm.dbg.value(metadata i32 %14, metadata !13251, metadata !DIExpression()), !dbg !13253
  %15 = icmp eq i32 %14, 0, !dbg !13260
  br i1 %15, label %16, label %9, !dbg !13260

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13264
  ret void, !dbg !13264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !13265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13267, metadata !DIExpression()), !dbg !13268
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13269
  ret void, !dbg !13270
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #17 !dbg !13271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13276, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata i32 0, metadata !13279, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata i32 0, metadata !13280, metadata !DIExpression()), !dbg !13281
  %2 = icmp eq i32 %0, 0, !dbg !13282
  br i1 %2, label %52, label %3, !dbg !13284

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !13285
  %5 = icmp eq i32 %4, 16384, !dbg !13288
  br i1 %5, label %6, label %21, !dbg !13289

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13290
  %8 = select i1 %7, i32 0, i32 5, !dbg !13293
  call void @llvm.dbg.value(metadata i32 %8, metadata !13279, metadata !DIExpression()), !dbg !13281
  %9 = add i32 %0, -120000001, !dbg !13294
  %10 = icmp ult i32 %9, 30000000, !dbg !13294
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13294
  call void @llvm.dbg.value(metadata i32 %11, metadata !13279, metadata !DIExpression()), !dbg !13281
  %12 = icmp ult i32 %9, -30000000, !dbg !13296
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13296
  call void @llvm.dbg.value(metadata i32 %13, metadata !13279, metadata !DIExpression()), !dbg !13281
  %14 = icmp ugt i32 %0, 60000000, !dbg !13298
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13300
  br i1 %16, label %21, label %17, !dbg !13300

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13301
  %19 = and i1 %18, %15, !dbg !13304
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13304
  br label %21, !dbg !13304

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13281
  call void @llvm.dbg.value(metadata i32 %22, metadata !13279, metadata !DIExpression()), !dbg !13281
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !13305
  %24 = icmp eq i32 %23, 0, !dbg !13307
  br i1 %24, label %25, label %41, !dbg !13308

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !13309
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13312
  %29 = select i1 %28, i32 4, i32 %22, !dbg !13312
  call void @llvm.dbg.value(metadata i32 %29, metadata !13279, metadata !DIExpression()), !dbg !13281
  %30 = icmp ugt i32 %0, 90000000, !dbg !13313
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13315
  %33 = select i1 %32, i32 3, i32 %29, !dbg !13315
  call void @llvm.dbg.value(metadata i32 %33, metadata !13279, metadata !DIExpression()), !dbg !13281
  %34 = icmp ugt i32 %0, 60000000, !dbg !13316
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13318
  br i1 %36, label %41, label %37, !dbg !13318

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !13319
  %39 = and i1 %38, %35, !dbg !13322
  %40 = select i1 %39, i32 1, i32 %33, !dbg !13322
  br label %41, !dbg !13322

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !13323
  call void @llvm.dbg.value(metadata i32 %42, metadata !13279, metadata !DIExpression()), !dbg !13281
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #27, !dbg !13324
  call void @llvm.dbg.value(metadata i32 2, metadata !13277, metadata !DIExpression()), !dbg !13281
  br label %43, !dbg !13325

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !13323
  call void @llvm.dbg.value(metadata i32 %44, metadata !13277, metadata !DIExpression()), !dbg !13281
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !13326
  call void @llvm.dbg.value(metadata i32 %45, metadata !13278, metadata !DIExpression()), !dbg !13281
  %46 = add nsw i32 %44, -1, !dbg !13328
  call void @llvm.dbg.value(metadata i32 %46, metadata !13277, metadata !DIExpression()), !dbg !13281
  %47 = icmp ne i32 %45, %42, !dbg !13329
  %48 = icmp ne i32 %46, 0, !dbg !13330
  %49 = select i1 %47, i1 %48, i1 false, !dbg !13330
  br i1 %49, label %43, label %50, !dbg !13331, !llvm.loop !13332

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !13334
  call void @llvm.dbg.value(metadata i32 %53, metadata !13280, metadata !DIExpression()), !dbg !13281
  ret i32 %53, !dbg !13335
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #18 !dbg !13336 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13338
  %2 = and i32 %1, 16384, !dbg !13338
  ret i32 %2, !dbg !13339
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #17 !dbg !13340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13342, metadata !DIExpression()), !dbg !13343
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13344
  %3 = and i32 %2, -8, !dbg !13344
  %4 = or i32 %3, %0, !dbg !13344
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13344
  ret void, !dbg !13345
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #18 !dbg !13346 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13347
  %2 = and i32 %1, 7, !dbg !13347
  ret i32 %2, !dbg !13348
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !13349 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13367, metadata !DIExpression()), !dbg !13371
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13368, metadata !DIExpression()), !dbg !13371
  call void @llvm.dbg.value(metadata i32 0, metadata !13369, metadata !DIExpression()), !dbg !13371
  call void @llvm.dbg.value(metadata i32 0, metadata !13370, metadata !DIExpression()), !dbg !13371
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !13372
  %4 = icmp eq i32 %3, 0, !dbg !13374
  br i1 %4, label %5, label %21, !dbg !13375

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #27, !dbg !13376
  call void @llvm.dbg.value(metadata i32 %6, metadata !13370, metadata !DIExpression()), !dbg !13371
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.155() #27, !dbg !13378
  %8 = icmp eq i32 %7, 1, !dbg !13380
  br i1 %8, label %13, label %9, !dbg !13381

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.156() #27, !dbg !13382
  br label %10, !dbg !13384

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.155() #27, !dbg !13385
  %12 = icmp eq i32 %11, 1, !dbg !13386
  br i1 %12, label %13, label %10, !dbg !13384, !llvm.loop !13387

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13389
  %15 = load i32, i32* %14, align 4, !dbg !13389
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13390
  %17 = load i32, i32* %16, align 4, !dbg !13390
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13391
  %19 = load i32, i32* %18, align 4, !dbg !13391
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.157(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #27, !dbg !13392
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !13393
  call void @llvm.dbg.value(metadata i32 %20, metadata !13369, metadata !DIExpression()), !dbg !13371
  br label %21, !dbg !13394

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13395
  call void @llvm.dbg.value(metadata i32 %22, metadata !13369, metadata !DIExpression()), !dbg !13371
  ret i32 %22, !dbg !13396
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #18 !dbg !13397 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13401, metadata !DIExpression()), !dbg !13402
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.159() #27, !dbg !13403
  %2 = icmp ne i32 %1, 0, !dbg !13405
  call void @llvm.dbg.value(metadata i1 %2, metadata !13401, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13402
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #27, !dbg !13406
  %4 = icmp ne i32 %3, 0, !dbg !13408
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13409
  %6 = zext i1 %5 to i32, !dbg !13409
  call void @llvm.dbg.value(metadata i32 %6, metadata !13401, metadata !DIExpression()), !dbg !13402
  ret i32 %6, !dbg !13410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #3 !dbg !13411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13415, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13416, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.value(metadata i32 0, metadata !13417, metadata !DIExpression()), !dbg !13418
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13419
  %4 = load i32, i32* %3, align 4, !dbg !13419
  %5 = and i32 %4, 63, !dbg !13420
  %6 = udiv i32 %0, %5, !dbg !13421
  call void @llvm.dbg.value(metadata i32 %6, metadata !13417, metadata !DIExpression()), !dbg !13418
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13422
  %8 = load i32, i32* %7, align 4, !dbg !13422
  %9 = and i32 %8, 511, !dbg !13423
  %10 = mul i32 %9, %6, !dbg !13424
  call void @llvm.dbg.value(metadata i32 %10, metadata !13417, metadata !DIExpression()), !dbg !13418
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13425
  %12 = load i32, i32* %11, align 4, !dbg !13425
  %13 = lshr i32 %12, 15, !dbg !13426
  %14 = and i32 %13, 131070, !dbg !13426
  %15 = add nuw nsw i32 %14, 2, !dbg !13426
  %16 = udiv i32 %10, %15, !dbg !13427
  call void @llvm.dbg.value(metadata i32 %16, metadata !13417, metadata !DIExpression()), !dbg !13418
  ret i32 %16, !dbg !13428
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.155() unnamed_addr #18 !dbg !13429 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13430
  %2 = lshr i32 %1, 1, !dbg !13431
  %3 = and i32 %2, 1, !dbg !13431
  ret i32 %3, !dbg !13432
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.156() unnamed_addr #17 !dbg !13433 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13434
  %2 = or i32 %1, 1, !dbg !13434
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13434
  ret void, !dbg !13435
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.157(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #17 !dbg !13436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13438, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.value(metadata i32 %1, metadata !13439, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.value(metadata i32 %2, metadata !13440, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.value(metadata i32 %3, metadata !13441, metadata !DIExpression()), !dbg !13442
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13443
  %6 = and i32 %5, -4227072, !dbg !13443
  %7 = or i32 %1, %0, !dbg !13443
  %8 = shl i32 %2, 6, !dbg !13443
  %9 = or i32 %7, %8, !dbg !13443
  %10 = or i32 %9, %6, !dbg !13443
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13443
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13444
  %12 = and i32 %11, -196609, !dbg !13444
  %13 = or i32 %12, %3, !dbg !13444
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13444
  ret void, !dbg !13445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #17 !dbg !13446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13450, metadata !DIExpression()), !dbg !13454
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13451, metadata !DIExpression()), !dbg !13454
  call void @llvm.dbg.value(metadata i32 0, metadata !13452, metadata !DIExpression()), !dbg !13454
  call void @llvm.dbg.value(metadata i32 0, metadata !13453, metadata !DIExpression()), !dbg !13454
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13455
  %4 = load i32, i32* %3, align 4, !dbg !13455
  %5 = lshr i32 %4, 4, !dbg !13455
  %6 = and i32 %5, 15, !dbg !13455
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13455
  %8 = load i8, i8* %7, align 1, !dbg !13455
  %9 = zext i8 %8 to i32, !dbg !13455
  %10 = lshr i32 %0, %9, !dbg !13455
  call void @llvm.dbg.value(metadata i32 %10, metadata !13453, metadata !DIExpression()), !dbg !13454
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13456
  %12 = icmp ult i32 %11, %10, !dbg !13458
  br i1 %12, label %13, label %16, !dbg !13459

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !13460
  call void @llvm.dbg.value(metadata i32 %14, metadata !13452, metadata !DIExpression()), !dbg !13454
  %15 = icmp eq i32 %14, 0, !dbg !13462
  br i1 %15, label %16, label %30, !dbg !13464

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.158() #27, !dbg !13465
  br label %17, !dbg !13467

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.159() #27, !dbg !13468
  %19 = icmp eq i32 %18, 1, !dbg !13469
  br i1 %19, label %20, label %17, !dbg !13467, !llvm.loop !13470

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13472
  tail call fastcc void @LL_RCC_SetAHBPrescaler.160(i32 noundef %21) #27, !dbg !13473
  tail call fastcc void @LL_RCC_SetSysClkSource.161() #27, !dbg !13474
  br label %22, !dbg !13475

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.162() #27, !dbg !13476
  %24 = icmp eq i32 %23, 8, !dbg !13477
  br i1 %24, label %25, label %22, !dbg !13475, !llvm.loop !13478

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13480
  %27 = load i32, i32* %26, align 4, !dbg !13480
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.163(i32 noundef %27) #27, !dbg !13481
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13482
  %29 = load i32, i32* %28, align 4, !dbg !13482
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.164(i32 noundef %29) #27, !dbg !13483
  br label %30, !dbg !13484

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13485
  %33 = icmp ugt i32 %32, %10, !dbg !13487
  br i1 %33, label %34, label %36, !dbg !13488

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !13489
  call void @llvm.dbg.value(metadata i32 %35, metadata !13452, metadata !DIExpression()), !dbg !13454
  br label %36, !dbg !13491

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13454
  call void @llvm.dbg.value(metadata i32 %37, metadata !13452, metadata !DIExpression()), !dbg !13454
  %38 = icmp eq i32 %37, 0, !dbg !13492
  br i1 %38, label %39, label %40, !dbg !13494

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !13495
  br label %40, !dbg !13497

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.158() unnamed_addr #17 !dbg !13499 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13500
  %2 = or i32 %1, 16777216, !dbg !13500
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13500
  ret void, !dbg !13501
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.159() unnamed_addr #18 !dbg !13502 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13503
  %2 = lshr i32 %1, 25, !dbg !13504
  %3 = and i32 %2, 1, !dbg !13504
  ret i32 %3, !dbg !13505
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.160(i32 noundef %0) unnamed_addr #17 !dbg !13506 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13508, metadata !DIExpression()), !dbg !13509
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13510
  %3 = and i32 %2, -241, !dbg !13510
  %4 = or i32 %3, %0, !dbg !13510
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13510
  ret void, !dbg !13511
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.161() unnamed_addr #17 !dbg !13512 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13514, metadata !DIExpression()), !dbg !13515
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13516
  %2 = and i32 %1, -4, !dbg !13516
  %3 = or i32 %2, 2, !dbg !13516
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13516
  ret void, !dbg !13517
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.162() unnamed_addr #18 !dbg !13518 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13519
  %2 = and i32 %1, 12, !dbg !13519
  ret i32 %2, !dbg !13520
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.163(i32 noundef %0) unnamed_addr #17 !dbg !13521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13523, metadata !DIExpression()), !dbg !13524
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13525
  %3 = and i32 %2, -7169, !dbg !13525
  %4 = or i32 %3, %0, !dbg !13525
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13525
  ret void, !dbg !13526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.164(i32 noundef %0) unnamed_addr #17 !dbg !13527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13529, metadata !DIExpression()), !dbg !13530
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13531
  %3 = and i32 %2, -57345, !dbg !13531
  %4 = or i32 %3, %0, !dbg !13531
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13531
  ret void, !dbg !13532
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #18 !dbg !13533 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13534
  %2 = lshr i32 %1, 27, !dbg !13535
  %3 = and i32 %2, 1, !dbg !13535
  ret i32 %3, !dbg !13536
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #17 !dbg !13537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13541, metadata !DIExpression()), !dbg !13547
  call void @llvm.dbg.value(metadata i32 %1, metadata !13542, metadata !DIExpression()), !dbg !13547
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13543, metadata !DIExpression()), !dbg !13547
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13544, metadata !DIExpression()), !dbg !13547
  call void @llvm.dbg.value(metadata i32 0, metadata !13545, metadata !DIExpression()), !dbg !13547
  call void @llvm.dbg.value(metadata i32 0, metadata !13546, metadata !DIExpression()), !dbg !13547
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !13548
  %6 = icmp eq i32 %5, 0, !dbg !13550
  br i1 %6, label %7, label %27, !dbg !13551

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #27, !dbg !13552
  call void @llvm.dbg.value(metadata i32 %8, metadata !13546, metadata !DIExpression()), !dbg !13547
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.165() #27, !dbg !13554
  %10 = icmp eq i32 %9, 1, !dbg !13556
  br i1 %10, label %19, label %11, !dbg !13557

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13558
  br i1 %12, label %13, label %14, !dbg !13561

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !13562
  br label %15, !dbg !13564

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.166() #27, !dbg !13565
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.167() #27, !dbg !13567
  br label %16, !dbg !13568

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.165() #27, !dbg !13569
  %18 = icmp eq i32 %17, 1, !dbg !13570
  br i1 %18, label %19, label %16, !dbg !13568, !llvm.loop !13571

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13573
  %21 = load i32, i32* %20, align 4, !dbg !13573
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13574
  %23 = load i32, i32* %22, align 4, !dbg !13574
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13575
  %25 = load i32, i32* %24, align 4, !dbg !13575
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.157(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #27, !dbg !13576
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !13577
  call void @llvm.dbg.value(metadata i32 %26, metadata !13545, metadata !DIExpression()), !dbg !13547
  br label %27, !dbg !13578

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13579
  call void @llvm.dbg.value(metadata i32 %28, metadata !13545, metadata !DIExpression()), !dbg !13547
  ret i32 %28, !dbg !13580
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.165() unnamed_addr #18 !dbg !13581 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13582
  %2 = lshr i32 %1, 17, !dbg !13583
  %3 = and i32 %2, 1, !dbg !13583
  ret i32 %3, !dbg !13584
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #17 !dbg !13585 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13586
  %2 = or i32 %1, 262144, !dbg !13586
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13586
  ret void, !dbg !13587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.166() unnamed_addr #17 !dbg !13588 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13589
  %2 = and i32 %1, -262145, !dbg !13589
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13589
  ret void, !dbg !13590
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.167() unnamed_addr #17 !dbg !13591 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13592
  %2 = or i32 %1, 65536, !dbg !13592
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13592
  ret void, !dbg !13593
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !13594 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13597, metadata !DIExpression()), !dbg !13613
  call void @llvm.dbg.value(metadata i32 undef, metadata !13597, metadata !DIExpression()), !dbg !13613
  call void @llvm.dbg.value(metadata i32 undef, metadata !13597, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13613
  ret void, !dbg !13614
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13615 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13619, metadata !DIExpression()), !dbg !13621
  %2 = icmp eq i8* %0, null, !dbg !13622
  br i1 %2, label %29, label %3, !dbg !13624

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13625
  %5 = icmp eq i8 %4, 0, !dbg !13626
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13627
  br i1 %6, label %29, label %8, !dbg !13627

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13620, metadata !DIExpression()), !dbg !13621
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13628

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13620, metadata !DIExpression()), !dbg !13621
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !13630
  br i1 %10, label %11, label %15, !dbg !13635

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13636
  %13 = load i8*, i8** %12, align 4, !dbg !13636
  %14 = icmp eq i8* %13, %0, !dbg !13637
  br i1 %14, label %29, label %15, !dbg !13638

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13639
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13620, metadata !DIExpression()), !dbg !13621
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13640
  br i1 %17, label %7, label %8, !dbg !13641, !llvm.loop !13642

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13620, metadata !DIExpression()), !dbg !13621
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !13644
  br i1 %20, label %21, label %26, !dbg !13648

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13649
  %23 = load i8*, i8** %22, align 4, !dbg !13649
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #28, !dbg !13650
  %25 = icmp eq i32 %24, 0, !dbg !13651
  br i1 %25, label %29, label %26, !dbg !13652

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13653
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13620, metadata !DIExpression()), !dbg !13621
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13654
  br i1 %28, label %29, label %18, !dbg !13628, !llvm.loop !13655

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13621
  ret %struct.device* %30, !dbg !13657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #3 !dbg !13658 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13662, metadata !DIExpression()), !dbg !13663
  %2 = icmp eq %struct.device* %0, null, !dbg !13664
  br i1 %2, label %14, label %3, !dbg !13666

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13667
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13667
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13668
  %7 = load i8, i8* %6, align 1, !dbg !13668
  %8 = and i8 %7, 1, !dbg !13668
  %9 = icmp eq i8 %8, 0, !dbg !13668
  br i1 %9, label %14, label %10, !dbg !13669

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13670
  %12 = load i8, i8* %11, align 1, !dbg !13670
  %13 = icmp eq i8 %12, 0, !dbg !13671
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13663
  ret i1 %15, !dbg !13672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13673 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13678, metadata !DIExpression()), !dbg !13679
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13680
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13681
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13682 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13690, metadata !DIExpression()), !dbg !13695
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13691, metadata !DIExpression()), !dbg !13695
  call void @llvm.dbg.value(metadata i8* %2, metadata !13692, metadata !DIExpression()), !dbg !13695
  %5 = bitcast i32* %4 to i8*, !dbg !13696
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13696
  call void @llvm.dbg.value(metadata i32 0, metadata !13693, metadata !DIExpression()), !dbg !13695
  store i32 0, i32* %4, align 4, !dbg !13697
  call void @llvm.dbg.value(metadata i32* %4, metadata !13693, metadata !DIExpression(DW_OP_deref)), !dbg !13695
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !13698
  call void @llvm.dbg.value(metadata i16* %6, metadata !13694, metadata !DIExpression()), !dbg !13695
  %7 = load i32, i32* %4, align 4, !dbg !13699
  call void @llvm.dbg.value(metadata i32 %7, metadata !13693, metadata !DIExpression()), !dbg !13695
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !13700
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13701
  ret i32 %8, !dbg !13702
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #16 !dbg !13703 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13707, metadata !DIExpression()), !dbg !13713
  call void @llvm.dbg.value(metadata i32* %1, metadata !13708, metadata !DIExpression()), !dbg !13713
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13714
  %4 = load i16*, i16** %3, align 4, !dbg !13714
  call void @llvm.dbg.value(metadata i16* %4, metadata !13709, metadata !DIExpression()), !dbg !13713
  %5 = icmp eq i16* %4, null, !dbg !13715
  br i1 %5, label %14, label %6, !dbg !13716

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13717
  call void @llvm.dbg.value(metadata i32 %7, metadata !13710, metadata !DIExpression()), !dbg !13717
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13718
  %9 = load i16, i16* %8, align 2, !dbg !13718
  %10 = add i16 %9, -32767, !dbg !13719
  %11 = icmp ult i16 %10, 2, !dbg !13719
  %12 = add i32 %7, 1, !dbg !13720
  call void @llvm.dbg.value(metadata i32 %12, metadata !13710, metadata !DIExpression()), !dbg !13717
  br i1 %11, label %13, label %6, !dbg !13719, !llvm.loop !13722

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13725
  br label %14, !dbg !13726

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13728 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13732, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.value(metadata i32 %1, metadata !13733, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13734, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.value(metadata i8* %3, metadata !13735, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.value(metadata i32 0, metadata !13736, metadata !DIExpression()), !dbg !13744
  %5 = icmp eq i32 %1, 0, !dbg !13745
  br i1 %5, label %16, label %8, !dbg !13746

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13736, metadata !DIExpression()), !dbg !13744
  %7 = icmp eq i32 %15, %1, !dbg !13745
  br i1 %7, label %16, label %8, !dbg !13746, !llvm.loop !13747

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13736, metadata !DIExpression()), !dbg !13744
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13749
  %11 = load i16, i16* %10, align 2, !dbg !13749
  call void @llvm.dbg.value(metadata i16 %11, metadata !13738, metadata !DIExpression()), !dbg !13750
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !13751
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13741, metadata !DIExpression()), !dbg !13750
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #28, !dbg !13752
  call void @llvm.dbg.value(metadata i32 %13, metadata !13742, metadata !DIExpression()), !dbg !13750
  %14 = icmp slt i32 %13, 0, !dbg !13753
  %15 = add nuw i32 %9, 1, !dbg !13755
  call void @llvm.dbg.value(metadata i32 %15, metadata !13736, metadata !DIExpression()), !dbg !13744
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !13757 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13761, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13762, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13763, metadata !DIExpression()), !dbg !13764
  %2 = sext i16 %0 to i32, !dbg !13765
  %3 = icmp slt i16 %0, 1, !dbg !13767
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13768
  %6 = add nsw i32 %2, -1, !dbg !13768
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13768
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13768
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13762, metadata !DIExpression()), !dbg !13764
  ret %struct.device* %8, !dbg !13769
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13770 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13772, metadata !DIExpression()), !dbg !13777
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13773, metadata !DIExpression()), !dbg !13777
  call void @llvm.dbg.value(metadata i8* %2, metadata !13774, metadata !DIExpression()), !dbg !13777
  %5 = bitcast i32* %4 to i8*, !dbg !13778
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13778
  call void @llvm.dbg.value(metadata i32 0, metadata !13775, metadata !DIExpression()), !dbg !13777
  store i32 0, i32* %4, align 4, !dbg !13779
  call void @llvm.dbg.value(metadata i32* %4, metadata !13775, metadata !DIExpression(DW_OP_deref)), !dbg !13777
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !13780
  call void @llvm.dbg.value(metadata i16* %6, metadata !13776, metadata !DIExpression()), !dbg !13777
  %7 = load i32, i32* %4, align 4, !dbg !13781
  call void @llvm.dbg.value(metadata i32 %7, metadata !13775, metadata !DIExpression()), !dbg !13777
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !13782
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13783
  ret i32 %8, !dbg !13784
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #16 !dbg !13785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13787, metadata !DIExpression()), !dbg !13792
  call void @llvm.dbg.value(metadata i32* %1, metadata !13788, metadata !DIExpression()), !dbg !13792
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13793
  %4 = load i16*, i16** %3, align 4, !dbg !13793
  call void @llvm.dbg.value(metadata i16* %4, metadata !13789, metadata !DIExpression()), !dbg !13792
  call void @llvm.dbg.value(metadata i32 0, metadata !13790, metadata !DIExpression()), !dbg !13792
  call void @llvm.dbg.value(metadata i32 0, metadata !13791, metadata !DIExpression()), !dbg !13792
  %5 = icmp eq i16* %4, null, !dbg !13794
  br i1 %5, label %22, label %6, !dbg !13796

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13790, metadata !DIExpression()), !dbg !13792
  call void @llvm.dbg.value(metadata i16* %8, metadata !13789, metadata !DIExpression()), !dbg !13792
  %9 = load i16, i16* %8, align 2, !dbg !13797
  %10 = icmp eq i16 %9, -32768, !dbg !13801
  call void @llvm.dbg.value(metadata i32 undef, metadata !13790, metadata !DIExpression()), !dbg !13792
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13802
  call void @llvm.dbg.value(metadata i16* %11, metadata !13789, metadata !DIExpression()), !dbg !13792
  %12 = zext i1 %10 to i32, !dbg !13803
  %13 = add i32 %7, %12, !dbg !13803
  call void @llvm.dbg.value(metadata i32 %13, metadata !13790, metadata !DIExpression()), !dbg !13792
  %14 = icmp eq i32 %13, 2, !dbg !13804
  br i1 %14, label %15, label %6, !dbg !13805

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13792
  call void @llvm.dbg.value(metadata i32 %16, metadata !13791, metadata !DIExpression()), !dbg !13792
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13806
  %18 = load i16, i16* %17, align 2, !dbg !13806
  %19 = icmp eq i16 %18, 32767, !dbg !13807
  %20 = add i32 %16, 1, !dbg !13808
  call void @llvm.dbg.value(metadata i32 %20, metadata !13791, metadata !DIExpression()), !dbg !13792
  br i1 %19, label %21, label %15, !dbg !13810, !llvm.loop !13811

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13813
  br label %22, !dbg !13814

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13815
  call void @llvm.dbg.value(metadata i16* %23, metadata !13789, metadata !DIExpression()), !dbg !13792
  ret i16* %23, !dbg !13816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #3 !dbg !13817 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13820
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13821
  ret i32* %2, !dbg !13822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !13823 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13971, metadata !DIExpression()), !dbg !13974
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13972, metadata !DIExpression()), !dbg !13974
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13973, metadata !DIExpression()), !dbg !13974
  ret void, !dbg !13975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13980, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata i32 %1, metadata !13981, metadata !DIExpression()), !dbg !13982
  ret void, !dbg !13983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13984 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13988, metadata !DIExpression()), !dbg !13990
  call void @llvm.dbg.value(metadata i32 %1, metadata !13989, metadata !DIExpression()), !dbg !13990
  ret void, !dbg !13991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13996, metadata !DIExpression()), !dbg !13998
  call void @llvm.dbg.value(metadata i8* %1, metadata !13997, metadata !DIExpression()), !dbg !13998
  ret i32 -134, !dbg !13999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14000 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14004, metadata !DIExpression()), !dbg !14006
  call void @llvm.dbg.value(metadata i8* %1, metadata !14005, metadata !DIExpression()), !dbg !14006
  ret i32 -134, !dbg !14007
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #11 !dbg !14008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14011, metadata !DIExpression()), !dbg !14012
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14013, !srcloc !14019
  call void @llvm.dbg.value(metadata i32 undef, metadata !14016, metadata !DIExpression()) #26, !dbg !14020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14017, metadata !DIExpression()) #26, !dbg !14020
  br label %3, !dbg !14021

3:                                                ; preds = %3, %1
  br label %3, !dbg !14022, !llvm.loop !14025
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14028 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14032, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14033, metadata !DIExpression()), !dbg !14034
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.172, i32 0, i32 0), i32 noundef 69) #28, !dbg !14035
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !14040
  unreachable, !dbg !14040
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #11 !dbg !14041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14043, metadata !DIExpression()), !dbg !14044
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !14045
  unreachable, !dbg !14045
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14048, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14049, metadata !DIExpression()), !dbg !14052
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14053, !srcloc !14019
  call void @llvm.dbg.value(metadata i32 undef, metadata !14016, metadata !DIExpression()) #26, !dbg !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14017, metadata !DIExpression()) #26, !dbg !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()), !dbg !14052
  %4 = tail call fastcc %struct.k_thread* @k_current_get.175() #29, !dbg !14056
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14051, metadata !DIExpression()), !dbg !14052
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #27, !dbg !14057
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.176, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #28, !dbg !14057
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14062
  br i1 %6, label %15, label %7, !dbg !14064

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14065, metadata !DIExpression()), !dbg !14070
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14072
  %9 = load i32, i32* %8, align 4, !dbg !14072
  %10 = and i32 %9, 511, !dbg !14073
  %11 = icmp eq i32 %10, 0, !dbg !14074
  br i1 %11, label %13, label %12, !dbg !14075

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.177, i32 0, i32 0), i32 noundef 69) #28, !dbg !14076
  br label %13, !dbg !14082

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #27, !dbg !14083
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.178, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #28, !dbg !14083
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #27, !dbg !14088
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14065, metadata !DIExpression()), !dbg !14089
  br label %17, !dbg !14094

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #27, !dbg !14083
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.178, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #28, !dbg !14083
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #27, !dbg !14088
  br label %17, !dbg !14095

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14053
  call void @llvm.dbg.value(metadata i32 %18, metadata !14016, metadata !DIExpression()) #26, !dbg !14055
  call void @llvm.dbg.value(metadata i32 %18, metadata !14050, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14096, metadata !DIExpression()) #26, !dbg !14099
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !14101, !srcloc !14102
  tail call fastcc void @k_thread_abort.179(%struct.k_thread* noundef %4) #27, !dbg !14103
  ret void, !dbg !14106
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.175() unnamed_addr #12 !dbg !14107 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.187() #29, !dbg !14111
  ret %struct.k_thread* %1, !dbg !14112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !14113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14117, metadata !DIExpression()), !dbg !14118
  %2 = icmp ult i32 %0, 5, !dbg !14119
  br i1 %2, label %3, label %6, !dbg !14119

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14119
  %5 = load i8*, i8** %4, align 4, !dbg !14119
  br label %6, !dbg !14119

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.181, i32 0, i32 0), %1 ], !dbg !14120
  ret i8* %7, !dbg !14122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14123 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14127, metadata !DIExpression()), !dbg !14129
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14130
  br i1 %2, label %9, label %3, !dbg !14131

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #28, !dbg !14132
  call void @llvm.dbg.value(metadata i8* %4, metadata !14128, metadata !DIExpression()), !dbg !14129
  %5 = icmp eq i8* %4, null, !dbg !14133
  br i1 %5, label %9, label %6, !dbg !14135

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14136
  %8 = icmp eq i8 %7, 0, !dbg !14137
  br i1 %8, label %9, label %10, !dbg !14138

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.180, i32 0, i32 0), metadata !14128, metadata !DIExpression()), !dbg !14129
  br label %10, !dbg !14139

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.180, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14129
  call void @llvm.dbg.value(metadata i8* %11, metadata !14128, metadata !DIExpression()), !dbg !14129
  ret i8* %11, !dbg !14141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.179(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14142 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14146, metadata !DIExpression()), !dbg !14147
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14148, !srcloc !14150
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #28, !dbg !14151
  ret void, !dbg !14152
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.187() unnamed_addr #12 !dbg !14153 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14154, !srcloc !14156
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #28, !dbg !14157
  ret %struct.k_thread* %1, !dbg !14158
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14159 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14163, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %1, metadata !14164, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %2, metadata !14165, metadata !DIExpression()), !dbg !14166
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #28, !dbg !14167
  ret void, !dbg !14168
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14169 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14173, metadata !DIExpression()), !dbg !14176
  call void @llvm.dbg.value(metadata i8* %1, metadata !14174, metadata !DIExpression()), !dbg !14176
  call void @llvm.dbg.value(metadata i32 %2, metadata !14175, metadata !DIExpression()), !dbg !14176
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #28, !dbg !14177
  ret void, !dbg !14178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14179 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !14180
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #27, !dbg !14181
  ret void, !dbg !14182
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14185, metadata !DIExpression()), !dbg !14186
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !14187
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14188
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14189
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14190
  %4 = trunc i32 %0 to i8, !dbg !14191
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14192
  store i8 %4, i8* %5, align 4, !dbg !14193
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14194
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !14195
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14196
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14197
  store i8* %8, i8** %9, align 4, !dbg !14198
  ret void, !dbg !14199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14202, metadata !DIExpression()), !dbg !14208
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14209
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14203, metadata !DIExpression()), !dbg !14208
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14210
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14204, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i8* null, metadata !14207, metadata !DIExpression()), !dbg !14208
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14211
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14212
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #28, !dbg !14213
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !14214
  ret void, !dbg !14215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14216 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14220, metadata !DIExpression()), !dbg !14221
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14222
  ret i8* %2, !dbg !14223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14229, metadata !DIExpression()), !dbg !14230
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14231
  %3 = load i8, i8* %2, align 1, !dbg !14232
  %4 = and i8 %3, -5, !dbg !14232
  store i8 %4, i8* %2, align 1, !dbg !14232
  ret void, !dbg !14233
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #11 !dbg !14234 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !14237
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #28, !dbg !14238
  %3 = ptrtoint i8* %2 to i32, !dbg !14247
  %4 = add i32 %3, 2048, !dbg !14248
  call void @llvm.dbg.value(metadata i32 %4, metadata !14242, metadata !DIExpression()) #26, !dbg !14249
  call void @llvm.dbg.value(metadata i32 %4, metadata !14250, metadata !DIExpression()) #26, !dbg !14253
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #26, !dbg !14255, !srcloc !14256
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14257
  %6 = or i32 %5, 512, !dbg !14257
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14257
  tail call fastcc void @__NVIC_SetPriority.196(i32 noundef -2, i32 noundef 255) #28, !dbg !14258
  tail call fastcc void @__NVIC_SetPriority.196(i32 noundef -5, i32 noundef 0) #28, !dbg !14261
  tail call fastcc void @__NVIC_SetPriority.196(i32 noundef -12, i32 noundef 0) #28, !dbg !14262
  tail call fastcc void @__NVIC_SetPriority.196(i32 noundef -11, i32 noundef 0) #28, !dbg !14263
  tail call fastcc void @__NVIC_SetPriority.196(i32 noundef -10, i32 noundef 0) #28, !dbg !14264
  tail call fastcc void @__NVIC_SetPriority.196(i32 noundef -4, i32 noundef 0) #28, !dbg !14265
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14266
  %8 = or i32 %7, 458752, !dbg !14266
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14266
  tail call void @z_arm_fault_init() #28, !dbg !14267
  tail call void @z_arm_cpu_idle_init() #28, !dbg !14268
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14269
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14272
  %9 = tail call i32 @z_arm_mpu_init() #28, !dbg !14273
  tail call void @z_arm_configure_static_mpu_regions() #28, !dbg !14274
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14275
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #26, !dbg !14275
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14236, metadata !DIExpression()), !dbg !14276
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !14277
  call void @z_device_state_init() #28, !dbg !14278
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !14279
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !14280
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !14281
  call fastcc void @switch_to_main_thread(i8* noundef %11) #32, !dbg !14282
  unreachable, !dbg !14282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2183, metadata !DIExpression()), !dbg !14283
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14284
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14284
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2184, metadata !DIExpression()), !dbg !14283
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2184, metadata !DIExpression()), !dbg !14283
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14285
  br i1 %7, label %8, label %35, !dbg !14286

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2184, metadata !DIExpression()), !dbg !14283
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14287
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14287
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2194, metadata !DIExpression()), !dbg !14288
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14289
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14289
  %14 = tail call i32 %13(%struct.device* noundef %11) #28, !dbg !14290
  call void @llvm.dbg.value(metadata i32 %14, metadata !2198, metadata !DIExpression()), !dbg !14288
  %15 = icmp eq %struct.device* %11, null, !dbg !14291
  br i1 %15, label %32, label %16, !dbg !14293

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14294
  br i1 %17, label %26, label %18, !dbg !14297

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14298
  call void @llvm.dbg.value(metadata i32 %19, metadata !2198, metadata !DIExpression()), !dbg !14288
  %20 = icmp ult i32 %19, 255, !dbg !14300
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14300
  call void @llvm.dbg.value(metadata i32 %21, metadata !2198, metadata !DIExpression()), !dbg !14288
  %22 = trunc i32 %21 to i8, !dbg !14301
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14302
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14302
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14303
  store i8 %22, i8* %25, align 1, !dbg !14304
  br label %26, !dbg !14305

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14306
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14306
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14307
  %30 = load i8, i8* %29, align 1, !dbg !14308
  %31 = or i8 %30, 1, !dbg !14308
  store i8 %31, i8* %29, align 1, !dbg !14308
  br label %32, !dbg !14309

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14310
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2184, metadata !DIExpression()), !dbg !14283
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14285
  br i1 %34, label %8, label %35, !dbg !14286, !llvm.loop !14311

35:                                               ; preds = %32, %1
  ret void, !dbg !14313
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.196(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !14314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14316, metadata !DIExpression()), !dbg !14318
  call void @llvm.dbg.value(metadata i32 %1, metadata !14317, metadata !DIExpression()), !dbg !14318
  %3 = trunc i32 %1 to i8, !dbg !14319
  %4 = shl i8 %3, 4, !dbg !14319
  %5 = and i32 %0, 15, !dbg !14322
  %6 = add nsw i32 %5, -4, !dbg !14323
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14324
  store volatile i8 %4, i8* %7, align 1, !dbg !14325
  ret void, !dbg !14326
}

; Function Attrs: optsize
declare !dbg !14327 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !14328 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14331, metadata !DIExpression()), !dbg !14332
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14333
  store i8 1, i8* %2, align 1, !dbg !14334
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14335
  store i8 1, i8* %3, align 4, !dbg !14336
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14337
  store i32 0, i32* %4, align 4, !dbg !14338
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14339
  store i32 0, i32* %5, align 4, !dbg !14340
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14341
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14342
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14343
  ret void, !dbg !14344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14345 {
  tail call void @z_sched_init() #28, !dbg !14350
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14351
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 5, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.197, i32 0, i32 0)) #28, !dbg !14352
  call void @llvm.dbg.value(metadata i8* %1, metadata !14349, metadata !DIExpression()), !dbg !14353
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14354
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #28, !dbg !14355
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !14356
  ret i8* %1, !dbg !14357
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #11 !dbg !14358 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14362, metadata !DIExpression()), !dbg !14363
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #28, !dbg !14364
  unreachable, !dbg !14365
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14366 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14368, metadata !DIExpression()), !dbg !14371
  call void @llvm.dbg.value(metadata i8* %1, metadata !14369, metadata !DIExpression()), !dbg !14371
  call void @llvm.dbg.value(metadata i8* %2, metadata !14370, metadata !DIExpression()), !dbg !14371
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14372
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !14373
  tail call void @boot_banner() #28, !dbg !14374
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !14375
  tail call void @z_init_static_threads() #28, !dbg !14376
  tail call void @main() #28, !dbg !14377
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14378
  %5 = and i8 %4, -2, !dbg !14378
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14378
  ret void, !dbg !14379
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14380 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14390, metadata !DIExpression()), !dbg !14392
  call void @llvm.dbg.value(metadata i8* %1, metadata !14391, metadata !DIExpression()), !dbg !14392
  ret void, !dbg !14393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14394 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14396, metadata !DIExpression()), !dbg !14398
  call void @llvm.dbg.value(metadata i8* %1, metadata !14397, metadata !DIExpression()), !dbg !14398
  ret void, !dbg !14399
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14400 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !14401, !srcloc !14408
  call void @llvm.dbg.value(metadata i32 %1, metadata !14404, metadata !DIExpression()) #26, !dbg !14409
  %2 = icmp ne i32 %1, 0, !dbg !14410
  ret i1 %2, !dbg !14411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #10 !dbg !14412 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14413
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14414
  %3 = load i8, i8* %2, align 4, !dbg !14415
  %4 = or i8 %3, 1, !dbg !14415
  store i8 %4, i8* %2, align 4, !dbg !14415
  ret void, !dbg !14416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #10 !dbg !14417 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14418
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14419
  %3 = load i8, i8* %2, align 4, !dbg !14420
  %4 = and i8 %3, -2, !dbg !14420
  store i8 %4, i8* %2, align 4, !dbg !14420
  ret void, !dbg !14421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #3 !dbg !14422 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14423
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14424
  %3 = load i8, i8* %2, align 4, !dbg !14424
  %4 = and i8 %3, 1, !dbg !14425
  %5 = icmp ne i8 %4, 0, !dbg !14426
  ret i1 %5, !dbg !14427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14428 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14432, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i8* %1, metadata !14433, metadata !DIExpression()), !dbg !14434
  ret i32 -88, !dbg !14435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14436 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14440, metadata !DIExpression()), !dbg !14441
  ret i8* null, !dbg !14442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !14443 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14447, metadata !DIExpression()), !dbg !14450
  call void @llvm.dbg.value(metadata i8* %1, metadata !14448, metadata !DIExpression()), !dbg !14450
  call void @llvm.dbg.value(metadata i32 %2, metadata !14449, metadata !DIExpression()), !dbg !14450
  ret i32 -88, !dbg !14451
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2207 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2321, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i8* %1, metadata !2322, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 %2, metadata !2323, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 0, metadata !2324, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i8 undef, metadata !2326, metadata !DIExpression()), !dbg !14452
  %4 = icmp eq i8* %1, null, !dbg !14453
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14455
  br i1 %6, label %46, label %7, !dbg !14455

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14456
  %9 = load i8, i8* %8, align 1, !dbg !14456
  call void @llvm.dbg.value(metadata i8 %9, metadata !2326, metadata !DIExpression()), !dbg !14452
  %10 = add i32 %2, -1, !dbg !14457
  call void @llvm.dbg.value(metadata i32 %10, metadata !2323, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i8 0, metadata !2327, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata i8 %9, metadata !2326, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 0, metadata !2324, metadata !DIExpression()), !dbg !14452
  %11 = icmp eq i8 %9, 0, !dbg !14459
  br i1 %11, label %12, label %15, !dbg !14461

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14462
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14463
  store i8 0, i8* %14, align 1, !dbg !14464
  br label %46, !dbg !14465

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2327, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata i8 %17, metadata !2326, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 %18, metadata !2324, metadata !DIExpression()), !dbg !14452
  %19 = zext i8 %17 to i32, !dbg !14466
  %20 = zext i8 %16 to i32, !dbg !14467
  %21 = shl nuw i32 1, %20, !dbg !14467
  call void @llvm.dbg.value(metadata i32 %21, metadata !2325, metadata !DIExpression()), !dbg !14452
  %22 = and i32 %21, %19, !dbg !14469
  %23 = icmp eq i32 %22, 0, !dbg !14471
  br i1 %23, label %42, label %24, !dbg !14472

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14473
  %26 = sub i32 %10, %18, !dbg !14474
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14475
  %28 = load i8*, i8** %27, align 4, !dbg !14475
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14476
  %30 = load i32, i32* %29, align 4, !dbg !14476
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !14477
  %32 = add i32 %31, %18, !dbg !14478
  call void @llvm.dbg.value(metadata i32 %32, metadata !2324, metadata !DIExpression()), !dbg !14452
  %33 = trunc i32 %21 to i8, !dbg !14479
  %34 = xor i8 %33, -1, !dbg !14479
  %35 = and i8 %17, %34, !dbg !14479
  call void @llvm.dbg.value(metadata i8 %35, metadata !2326, metadata !DIExpression()), !dbg !14452
  %36 = icmp eq i8 %35, 0, !dbg !14480
  br i1 %36, label %12, label %37, !dbg !14482

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14483
  %39 = sub i32 %10, %32, !dbg !14485
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.200, i32 0, i32 0), i32 noundef 1) #27, !dbg !14486
  %41 = add i32 %40, %32, !dbg !14487
  call void @llvm.dbg.value(metadata i32 %41, metadata !2324, metadata !DIExpression()), !dbg !14452
  br label %42, !dbg !14488

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14452
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14452
  call void @llvm.dbg.value(metadata i8 %44, metadata !2326, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 %43, metadata !2324, metadata !DIExpression()), !dbg !14452
  %45 = add i8 %16, 1, !dbg !14489
  call void @llvm.dbg.value(metadata i8 %45, metadata !2327, metadata !DIExpression()), !dbg !14458
  br label %15, !dbg !14461

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.201, i32 0, i32 0), %3 ], !dbg !14452
  ret i8* %47, !dbg !14490
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14491 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14495, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.value(metadata i32 %1, metadata !14496, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.value(metadata i8* %2, metadata !14497, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.value(metadata i32 %3, metadata !14498, metadata !DIExpression()), !dbg !14500
  %5 = icmp ult i32 %1, %3, !dbg !14501
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14501
  call void @llvm.dbg.value(metadata i32 %6, metadata !14499, metadata !DIExpression()), !dbg !14500
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #28, !dbg !14502
  ret i32 %6, !dbg !14503
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14504 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14508, metadata !DIExpression()), !dbg !14509
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #28, !dbg !14510
  ret void, !dbg !14511
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14512 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14521, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14522, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i32 %2, metadata !14523, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14524, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i8* %4, metadata !14525, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i8* %5, metadata !14526, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i8* %6, metadata !14527, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i32 %7, metadata !14528, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i32 %8, metadata !14529, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i8* undef, metadata !14530, metadata !DIExpression()), !dbg !14532
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14533
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #27, !dbg !14534
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14535
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !14536
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !14537
  call void @llvm.dbg.value(metadata i8* %13, metadata !14531, metadata !DIExpression()), !dbg !14532
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #28, !dbg !14538
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14539
  store i8* null, i8** %14, align 4, !dbg !14540
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14541
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14541
  br i1 %16, label %20, label %17, !dbg !14543

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14544
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14544
  br label %20, !dbg !14545

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14532
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14546
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14548
  ret i8* %13, !dbg !14549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !14550 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14555, metadata !DIExpression()), !dbg !14556
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14557
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !14558
  ret void, !dbg !14559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !14560 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14565, metadata !DIExpression()), !dbg !14569
  call void @llvm.dbg.value(metadata i32 %1, metadata !14566, metadata !DIExpression()), !dbg !14569
  call void @llvm.dbg.value(metadata i32 %2, metadata !14567, metadata !DIExpression()), !dbg !14569
  call void @llvm.dbg.value(metadata i32 %3, metadata !14568, metadata !DIExpression()), !dbg !14569
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14570
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14571
  %6 = trunc i32 %3 to i8, !dbg !14572
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14573
  store i8 %6, i8* %7, align 4, !dbg !14574
  %8 = trunc i32 %2 to i8, !dbg !14575
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14576
  store i8 %8, i8* %9, align 1, !dbg !14577
  %10 = trunc i32 %1 to i8, !dbg !14578
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14579
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14579
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14579
  store i8 %10, i8* %13, align 2, !dbg !14580
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14581
  store i8 0, i8* %14, align 1, !dbg !14582
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !14583
  ret void, !dbg !14584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !14585 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14589, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14590, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i32 %2, metadata !14591, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i32 0, metadata !14596, metadata !DIExpression()), !dbg !14597
  %4 = add i32 %2, 7, !dbg !14598
  %5 = and i32 %4, -8, !dbg !14598
  %6 = add i32 %5, 64, !dbg !14598
  call void @llvm.dbg.value(metadata i32 %6, metadata !14592, metadata !DIExpression()), !dbg !14597
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.211(%struct.z_thread_stack_element* noundef %1) #27, !dbg !14600
  call void @llvm.dbg.value(metadata i8* %7, metadata !14595, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i32 %5, metadata !14593, metadata !DIExpression()), !dbg !14597
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14601
  call void @llvm.dbg.value(metadata i8* %8, metadata !14594, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i32 0, metadata !14596, metadata !DIExpression()), !dbg !14597
  %9 = ptrtoint i8* %7 to i32, !dbg !14602
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14603
  store i32 %9, i32* %10, align 4, !dbg !14604
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14605
  store i32 %5, i32* %11, align 4, !dbg !14606
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14607
  store i32 0, i32* %12, align 4, !dbg !14608
  call void @llvm.dbg.value(metadata i8* %8, metadata !14594, metadata !DIExpression()), !dbg !14597
  ret i8* %8, !dbg !14609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.211(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14610 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14614, metadata !DIExpression()), !dbg !14615
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14616
  ret i8* %2, !dbg !14617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14618 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14623, metadata !DIExpression()), !dbg !14624
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14625
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14626
  ret void, !dbg !14627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14628 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14630, metadata !DIExpression()), !dbg !14631
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14632
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !14633
  ret void, !dbg !14634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14635 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14639, metadata !DIExpression()), !dbg !14640
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14641
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14642
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14643
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14644
  ret void, !dbg !14645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !14646 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14651, metadata !DIExpression()), !dbg !14652
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14653
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14654
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14655
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14656
  ret void, !dbg !14657
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14658 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14675, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14666, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14667, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata i32 %2, metadata !14668, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14669, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata i8* %4, metadata !14670, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata i8* %5, metadata !14671, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata i8* %6, metadata !14672, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata i32 %7, metadata !14673, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata i32 %8, metadata !14674, metadata !DIExpression()), !dbg !14676
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !14677
  %13 = icmp eq i64 %11, -1, !dbg !14678
  br i1 %13, label %15, label %14, !dbg !14680

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !14681
  br label %15, !dbg !14683

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14685 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14690, metadata !DIExpression()), !dbg !14691
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()), !dbg !14691
  %4 = icmp eq i64 %3, 0, !dbg !14692
  br i1 %4, label %5, label %6, !dbg !14694

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !14695
  br label %7, !dbg !14697

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !14698
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14705, metadata !DIExpression()), !dbg !14706
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14707, !srcloc !14709
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !14710
  ret void, !dbg !14711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14712 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14715, metadata !DIExpression()), !dbg !14716
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14714, metadata !DIExpression()), !dbg !14716
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14717
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #28, !dbg !14718
  ret void, !dbg !14719
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14720 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14722, metadata !DIExpression()), !dbg !14741
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14742

1:                                                ; preds = %2
  tail call void @k_sched_lock() #28, !dbg !14743
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14739, metadata !DIExpression()), !dbg !14744
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14745

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14722, metadata !DIExpression()), !dbg !14741
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14746
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14746
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14749
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14749
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14750
  %9 = load i32, i32* %8, align 4, !dbg !14750
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14751
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14751
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14752
  %13 = load i8*, i8** %12, align 4, !dbg !14752
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14753
  %15 = load i8*, i8** %14, align 4, !dbg !14753
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14754
  %17 = load i8*, i8** %16, align 4, !dbg !14754
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14755
  %19 = load i32, i32* %18, align 4, !dbg !14755
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14756
  %21 = load i32, i32* %20, align 4, !dbg !14756
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #27, !dbg !14757
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14758
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14759
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14760
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14760
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14761
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14722, metadata !DIExpression()), !dbg !14741
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14762
  br i1 %27, label %2, label %1, !dbg !14742, !llvm.loop !14764

28:                                               ; preds = %0
  tail call void @k_sched_lock() #28, !dbg !14743
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14739, metadata !DIExpression()), !dbg !14744
  br label %29, !dbg !14745

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #28, !dbg !14766
  ret void, !dbg !14767

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14739, metadata !DIExpression()), !dbg !14744
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14768
  %33 = load i32, i32* %32, align 4, !dbg !14768
  %34 = icmp eq i32 %33, -1, !dbg !14772
  br i1 %34, label %43, label %35, !dbg !14773

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14774
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14774
  %38 = icmp sgt i32 %33, 0, !dbg !14776
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14776
  %40 = zext i32 %39 to i64, !dbg !14776
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.214(i64 noundef %40) #27, !dbg !14776
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14777
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #27, !dbg !14777
  br label %43, !dbg !14778

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14779
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14739, metadata !DIExpression()), !dbg !14744
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14780
  br i1 %45, label %30, label %29, !dbg !14745, !llvm.loop !14782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.214(i64 noundef %0) unnamed_addr #5 !dbg !14784 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14786, metadata !DIExpression()), !dbg !14787
  call void @llvm.dbg.value(metadata i64 %0, metadata !14788, metadata !DIExpression()), !dbg !14803
  call void @llvm.dbg.value(metadata i32 1000, metadata !14791, metadata !DIExpression()), !dbg !14803
  call void @llvm.dbg.value(metadata i32 10000, metadata !14792, metadata !DIExpression()), !dbg !14803
  call void @llvm.dbg.value(metadata i8 1, metadata !14793, metadata !DIExpression()), !dbg !14803
  call void @llvm.dbg.value(metadata i8 0, metadata !14794, metadata !DIExpression()), !dbg !14803
  call void @llvm.dbg.value(metadata i8 1, metadata !14795, metadata !DIExpression()), !dbg !14803
  call void @llvm.dbg.value(metadata i8 0, metadata !14796, metadata !DIExpression()), !dbg !14803
  call void @llvm.dbg.value(metadata i8 1, metadata !14797, metadata !DIExpression()), !dbg !14803
  call void @llvm.dbg.value(metadata i8 0, metadata !14798, metadata !DIExpression()), !dbg !14803
  call void @llvm.dbg.value(metadata i64 0, metadata !14799, metadata !DIExpression()), !dbg !14803
  call void @llvm.dbg.value(metadata i64 0, metadata !14799, metadata !DIExpression()), !dbg !14803
  %2 = mul i64 %0, 10, !dbg !14805
  ret i64 %2, !dbg !14811
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #11 !dbg !14812 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14814, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i8* %1, metadata !14815, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i8* %2, metadata !14816, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i8* %3, metadata !14817, metadata !DIExpression()), !dbg !14818
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14819
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14820
  %7 = load i8, i8* %6, align 4, !dbg !14821
  %8 = or i8 %7, 4, !dbg !14821
  store i8 %8, i8* %6, align 4, !dbg !14821
  tail call void @z_thread_essential_clear() #27, !dbg !14822
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #30, !dbg !14823
  unreachable, !dbg !14823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14824 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14828, metadata !DIExpression()), !dbg !14829
  ret i32 -134, !dbg !14830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14831 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14835, metadata !DIExpression()), !dbg !14837
  call void @llvm.dbg.value(metadata i32 %1, metadata !14836, metadata !DIExpression()), !dbg !14837
  ret i32 -134, !dbg !14838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #5 !dbg !14839 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14846, metadata !DIExpression()), !dbg !14848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14847, metadata !DIExpression()), !dbg !14848
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14849
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14851
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14848
  ret i32 %6, !dbg !14852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #5 !dbg !14853 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14857, metadata !DIExpression()), !dbg !14858
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14859
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14858
  ret i32 %3, !dbg !14861
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14862 {
  tail call void @sys_clock_idle_exit() #28, !dbg !14864
  ret void, !dbg !14865
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #11 !dbg !14866 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14868, metadata !DIExpression()), !dbg !14871
  call void @llvm.dbg.value(metadata i8* %1, metadata !14869, metadata !DIExpression()), !dbg !14871
  call void @llvm.dbg.value(metadata i8* %2, metadata !14870, metadata !DIExpression()), !dbg !14871
  br label %4, !dbg !14872

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14873, !srcloc !14880
  call void @llvm.dbg.value(metadata i32 undef, metadata !14876, metadata !DIExpression()) #26, !dbg !14881
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #26, !dbg !14881
  tail call fastcc void @k_cpu_idle() #27, !dbg !14882
  br label %4, !dbg !14872, !llvm.loop !14883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14885 {
  tail call void @arch_cpu_idle() #28, !dbg !14886
  ret void, !dbg !14887
}

; Function Attrs: optsize
declare !dbg !14888 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !14889 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14907, metadata !DIExpression()), !dbg !14911
  call void @llvm.dbg.value(metadata i8* %1, metadata !14908, metadata !DIExpression()), !dbg !14911
  call void @llvm.dbg.value(metadata i32 %2, metadata !14909, metadata !DIExpression()), !dbg !14911
  call void @llvm.dbg.value(metadata i32 %3, metadata !14910, metadata !DIExpression()), !dbg !14911
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14912
  store i32 %2, i32* %5, align 4, !dbg !14913
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14914
  store i32 %3, i32* %6, align 4, !dbg !14915
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14916
  store i8* %1, i8** %7, align 4, !dbg !14917
  %8 = mul i32 %3, %2, !dbg !14918
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !14919
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14920
  store i8* %9, i8** %10, align 4, !dbg !14921
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14922
  store i8* %1, i8** %11, align 4, !dbg !14923
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14924
  store i8* %1, i8** %12, align 4, !dbg !14925
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14926
  store i32 0, i32* %13, align 4, !dbg !14927
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14928
  store i8 0, i8* %14, align 4, !dbg !14929
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14930
  tail call fastcc void @z_waitq_init.217(%struct._wait_q_t* noundef %15) #27, !dbg !14931
  ret void, !dbg !14932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.217(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !14933 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14937, metadata !DIExpression()), !dbg !14938
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14939
  tail call fastcc void @sys_dlist_init.218(%struct._dnode* noundef %2) #27, !dbg !14940
  ret void, !dbg !14941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.218(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !14942 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14947, metadata !DIExpression()), !dbg !14948
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14949
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14950
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14951
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14952
  ret void, !dbg !14953
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14954 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14958, metadata !DIExpression()), !dbg !14964
  call void @llvm.dbg.value(metadata i32 %1, metadata !14959, metadata !DIExpression()), !dbg !14964
  call void @llvm.dbg.value(metadata i32 %2, metadata !14960, metadata !DIExpression()), !dbg !14964
  %5 = bitcast i32* %4 to i8*, !dbg !14965
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !14965
  call void @llvm.dbg.value(metadata i32* %4, metadata !14963, metadata !DIExpression(DW_OP_deref)), !dbg !14964
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !14966
  br i1 %6, label %13, label %7, !dbg !14968

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !14969
  call void @llvm.dbg.value(metadata i32 %8, metadata !14963, metadata !DIExpression()), !dbg !14964
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #27, !dbg !14971
  call void @llvm.dbg.value(metadata i8* %9, metadata !14961, metadata !DIExpression()), !dbg !14964
  %10 = icmp eq i8* %9, null, !dbg !14972
  br i1 %10, label %13, label %11, !dbg !14974

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #27, !dbg !14975
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14977
  store i8 1, i8* %12, align 4, !dbg !14978
  call void @llvm.dbg.value(metadata i32 0, metadata !14962, metadata !DIExpression()), !dbg !14964
  br label %13, !dbg !14979

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !14980
  call void @llvm.dbg.value(metadata i32 %14, metadata !14962, metadata !DIExpression()), !dbg !14964
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !14981
  ret i32 %14, !dbg !14982
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #24 !dbg !14983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14988, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i32 %1, metadata !14989, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i32* %2, metadata !14990, metadata !DIExpression()), !dbg !14991
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !14992
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !14992
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !14992
  store i32 %6, i32* %2, align 4, !dbg !14992
  ret i1 %5, !dbg !14993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !14994 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14998, metadata !DIExpression()), !dbg !14999
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #28, !dbg !15000
  ret i8* %2, !dbg !15001
}

; Function Attrs: optsize
declare !dbg !15002 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15005 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15009, metadata !DIExpression()), !dbg !15010
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15011
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #27, !dbg !15011
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15011
  br i1 %4, label %5, label %15, !dbg !15013

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15014
  %7 = load i8, i8* %6, align 4, !dbg !15014
  %8 = and i8 %7, 1, !dbg !15016
  %9 = icmp eq i8 %8, 0, !dbg !15017
  br i1 %9, label %15, label %10, !dbg !15018

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15019
  %12 = load i8*, i8** %11, align 4, !dbg !15019
  tail call void @k_free(i8* noundef %12) #28, !dbg !15021
  %13 = load i8, i8* %6, align 4, !dbg !15022
  %14 = and i8 %13, -2, !dbg !15022
  store i8 %14, i8* %6, align 4, !dbg !15022
  br label %15, !dbg !15023

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !15010
  ret i32 %16, !dbg !15024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #3 !dbg !15025 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15029, metadata !DIExpression()), !dbg !15030
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15031
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !15032
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15033
  ret %struct.k_thread* %4, !dbg !15034
}

; Function Attrs: optsize
declare !dbg !15035 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !15036 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15040, metadata !DIExpression()), !dbg !15041
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !15042
  br i1 %2, label %6, label %3, !dbg !15042

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15043
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15043
  br label %6, !dbg !15042

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15042
  ret %struct._dnode* %7, !dbg !15044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !15045 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15049, metadata !DIExpression()), !dbg !15050
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15051
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15051
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15052
  ret i1 %4, !dbg !15053
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15054 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15064, metadata !DIExpression()), !dbg !15072
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15062, metadata !DIExpression()), !dbg !15072
  call void @llvm.dbg.value(metadata i8* %1, metadata !15063, metadata !DIExpression()), !dbg !15072
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15073
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15074, metadata !DIExpression()) #26, !dbg !15081
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15083, !srcloc !15089
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !15083
  call void @llvm.dbg.value(metadata i32 %6, metadata !15086, metadata !DIExpression()) #26, !dbg !15090
  call void @llvm.dbg.value(metadata i32 undef, metadata !15087, metadata !DIExpression()) #26, !dbg !15090
  call void @llvm.dbg.value(metadata i32 %6, metadata !15080, metadata !DIExpression()) #26, !dbg !15081
  call void @llvm.dbg.value(metadata i32 %6, metadata !15066, metadata !DIExpression()), !dbg !15072
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15091
  %8 = load i32, i32* %7, align 4, !dbg !15091
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15093
  %10 = load i32, i32* %9, align 4, !dbg !15093
  %11 = icmp ult i32 %8, %10, !dbg !15094
  br i1 %11, label %12, label %42, !dbg !15095

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15096
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #28, !dbg !15098
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15065, metadata !DIExpression()), !dbg !15072
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !15099
  br i1 %15, label %24, label %16, !dbg !15101

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !15102
  %18 = load i8*, i8** %17, align 4, !dbg !15102
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15104
  %20 = load i32, i32* %19, align 4, !dbg !15104
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #28, !dbg !15105
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15106, metadata !DIExpression()), !dbg !15112
  call void @llvm.dbg.value(metadata i32 0, metadata !15111, metadata !DIExpression()), !dbg !15112
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !15114
  store i32 0, i32* %22, align 4, !dbg !15115
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #28, !dbg !15116
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15117
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #28, !dbg !15117
  br label %53, !dbg !15118

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15119
  %26 = load i8*, i8** %25, align 4, !dbg !15119
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15121
  %28 = load i32, i32* %27, align 4, !dbg !15121
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #28, !dbg !15122
  %30 = load i32, i32* %27, align 4, !dbg !15123
  %31 = load i8*, i8** %25, align 4, !dbg !15124
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !15124
  store i8* %32, i8** %25, align 4, !dbg !15124
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15125
  %34 = load i8*, i8** %33, align 4, !dbg !15125
  %35 = icmp eq i8* %32, %34, !dbg !15127
  br i1 %35, label %36, label %39, !dbg !15128

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15129
  %38 = load i8*, i8** %37, align 4, !dbg !15129
  store i8* %38, i8** %25, align 4, !dbg !15131
  br label %39, !dbg !15132

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !15133
  %41 = add i32 %40, 1, !dbg !15133
  store i32 %41, i32* %7, align 4, !dbg !15133
  call void @llvm.dbg.value(metadata i32 0, metadata !15071, metadata !DIExpression()), !dbg !15072
  br label %51, !dbg !15134

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !15064, metadata !DIExpression()), !dbg !15072
  %44 = icmp eq i64 %43, 0, !dbg !15135
  br i1 %44, label %51, label %45, !dbg !15137

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15138
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !15140
  store i8* %1, i8** %47, align 4, !dbg !15141
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15142
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15143
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #28, !dbg !15143
  call void @llvm.dbg.value(metadata i32 %50, metadata !15071, metadata !DIExpression()), !dbg !15072
  br label %53, !dbg !15144

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !15145
  call void @llvm.dbg.value(metadata i32 %52, metadata !15071, metadata !DIExpression()), !dbg !15072
  call void @llvm.dbg.value(metadata i32 %6, metadata !15146, metadata !DIExpression()) #26, !dbg !15152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15151, metadata !DIExpression()) #26, !dbg !15152
  call void @llvm.dbg.value(metadata i32 %6, metadata !15154, metadata !DIExpression()) #26, !dbg !15157
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !15159, !srcloc !15160
  br label %53, !dbg !15161

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !15072
  ret i32 %54, !dbg !15162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #10 !dbg !15163 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15173, metadata !DIExpression()), !dbg !15175
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15174, metadata !DIExpression()), !dbg !15175
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15176
  %4 = load i32, i32* %3, align 4, !dbg !15176
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15177
  store i32 %4, i32* %5, align 4, !dbg !15178
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15179
  %7 = load i32, i32* %6, align 4, !dbg !15179
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15180
  store i32 %7, i32* %8, align 4, !dbg !15181
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15182
  %10 = load i32, i32* %9, align 4, !dbg !15182
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15183
  store i32 %10, i32* %11, align 4, !dbg !15184
  ret void, !dbg !15185
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15186 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15192, metadata !DIExpression()), !dbg !15196
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15190, metadata !DIExpression()), !dbg !15196
  call void @llvm.dbg.value(metadata i8* %1, metadata !15191, metadata !DIExpression()), !dbg !15196
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15197
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15074, metadata !DIExpression()) #26, !dbg !15198
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15200, !srcloc !15089
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !15200
  call void @llvm.dbg.value(metadata i32 %6, metadata !15086, metadata !DIExpression()) #26, !dbg !15202
  call void @llvm.dbg.value(metadata i32 undef, metadata !15087, metadata !DIExpression()) #26, !dbg !15202
  call void @llvm.dbg.value(metadata i32 %6, metadata !15080, metadata !DIExpression()) #26, !dbg !15198
  call void @llvm.dbg.value(metadata i32 %6, metadata !15193, metadata !DIExpression()), !dbg !15196
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15203
  %8 = load i32, i32* %7, align 4, !dbg !15203
  %9 = icmp eq i32 %8, 0, !dbg !15205
  br i1 %9, label %51, label %10, !dbg !15206

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15207
  %12 = load i8*, i8** %11, align 4, !dbg !15207
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15209
  %14 = load i32, i32* %13, align 4, !dbg !15209
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #28, !dbg !15210
  %16 = load i32, i32* %13, align 4, !dbg !15211
  %17 = load i8*, i8** %11, align 4, !dbg !15212
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !15212
  store i8* %18, i8** %11, align 4, !dbg !15212
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15213
  %20 = load i8*, i8** %19, align 4, !dbg !15213
  %21 = icmp eq i8* %18, %20, !dbg !15215
  br i1 %21, label %22, label %25, !dbg !15216

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15217
  %24 = load i8*, i8** %23, align 4, !dbg !15217
  store i8* %24, i8** %11, align 4, !dbg !15219
  br label %25, !dbg !15220

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !15221
  %27 = add i32 %26, -1, !dbg !15221
  store i32 %27, i32* %7, align 4, !dbg !15221
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15222
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #28, !dbg !15223
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !15194, metadata !DIExpression()), !dbg !15196
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !15224
  br i1 %30, label %60, label %31, !dbg !15226

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15227
  %33 = load i8*, i8** %32, align 4, !dbg !15227
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !15229
  %35 = load i8*, i8** %34, align 4, !dbg !15229
  %36 = load i32, i32* %13, align 4, !dbg !15230
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #28, !dbg !15231
  %38 = load i32, i32* %13, align 4, !dbg !15232
  %39 = load i8*, i8** %32, align 4, !dbg !15233
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !15233
  store i8* %40, i8** %32, align 4, !dbg !15233
  %41 = load i8*, i8** %19, align 4, !dbg !15234
  %42 = icmp eq i8* %40, %41, !dbg !15236
  br i1 %42, label %43, label %46, !dbg !15237

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15238
  %45 = load i8*, i8** %44, align 4, !dbg !15238
  store i8* %45, i8** %32, align 4, !dbg !15240
  br label %46, !dbg !15241

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !15242
  %48 = add i32 %47, 1, !dbg !15242
  store i32 %48, i32* %7, align 4, !dbg !15242
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !15106, metadata !DIExpression()), !dbg !15243
  call void @llvm.dbg.value(metadata i32 0, metadata !15111, metadata !DIExpression()), !dbg !15243
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !15245
  store i32 0, i32* %49, align 4, !dbg !15246
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #28, !dbg !15247
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15248
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #28, !dbg !15248
  br label %62, !dbg !15249

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !15192, metadata !DIExpression()), !dbg !15196
  %53 = icmp eq i64 %52, 0, !dbg !15250
  br i1 %53, label %60, label %54, !dbg !15252

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15253
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !15255
  store i8* %1, i8** %56, align 4, !dbg !15256
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15257
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15258
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #28, !dbg !15258
  call void @llvm.dbg.value(metadata i32 %59, metadata !15195, metadata !DIExpression()), !dbg !15196
  br label %62, !dbg !15259

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !15260
  call void @llvm.dbg.value(metadata i32 %61, metadata !15195, metadata !DIExpression()), !dbg !15196
  call void @llvm.dbg.value(metadata i32 %6, metadata !15146, metadata !DIExpression()) #26, !dbg !15261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15151, metadata !DIExpression()) #26, !dbg !15261
  call void @llvm.dbg.value(metadata i32 %6, metadata !15154, metadata !DIExpression()) #26, !dbg !15263
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !15265, !srcloc !15160
  br label %62, !dbg !15266

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !15196
  ret i32 %63, !dbg !15267
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15268 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15272, metadata !DIExpression()), !dbg !15276
  call void @llvm.dbg.value(metadata i8* %1, metadata !15273, metadata !DIExpression()), !dbg !15276
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15074, metadata !DIExpression()) #26, !dbg !15277
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15279, !srcloc !15089
  call void @llvm.dbg.value(metadata i32 undef, metadata !15086, metadata !DIExpression()) #26, !dbg !15281
  call void @llvm.dbg.value(metadata i32 undef, metadata !15087, metadata !DIExpression()) #26, !dbg !15281
  call void @llvm.dbg.value(metadata i32 undef, metadata !15080, metadata !DIExpression()) #26, !dbg !15277
  call void @llvm.dbg.value(metadata i32 undef, metadata !15274, metadata !DIExpression()), !dbg !15276
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15282
  %5 = load i32, i32* %4, align 4, !dbg !15282
  %6 = icmp eq i32 %5, 0, !dbg !15284
  br i1 %6, label %13, label %7, !dbg !15285

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15286
  %9 = load i8*, i8** %8, align 4, !dbg !15286
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15288
  %11 = load i32, i32* %10, align 4, !dbg !15288
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #28, !dbg !15289
  call void @llvm.dbg.value(metadata i32 0, metadata !15275, metadata !DIExpression()), !dbg !15276
  br label %13, !dbg !15290

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !15291
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15279
  call void @llvm.dbg.value(metadata i32 %15, metadata !15086, metadata !DIExpression()) #26, !dbg !15281
  call void @llvm.dbg.value(metadata i32 %15, metadata !15080, metadata !DIExpression()) #26, !dbg !15277
  call void @llvm.dbg.value(metadata i32 %15, metadata !15274, metadata !DIExpression()), !dbg !15276
  call void @llvm.dbg.value(metadata i32 %14, metadata !15275, metadata !DIExpression()), !dbg !15276
  call void @llvm.dbg.value(metadata i32 undef, metadata !15146, metadata !DIExpression()) #26, !dbg !15292
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15151, metadata !DIExpression()) #26, !dbg !15292
  call void @llvm.dbg.value(metadata i32 undef, metadata !15154, metadata !DIExpression()) #26, !dbg !15294
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !15296, !srcloc !15160
  ret i32 %14, !dbg !15297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15298 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15302, metadata !DIExpression()), !dbg !15305
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15074, metadata !DIExpression()) #26, !dbg !15306
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15308, !srcloc !15089
  call void @llvm.dbg.value(metadata i32 undef, metadata !15086, metadata !DIExpression()) #26, !dbg !15310
  call void @llvm.dbg.value(metadata i32 undef, metadata !15087, metadata !DIExpression()) #26, !dbg !15310
  call void @llvm.dbg.value(metadata i32 undef, metadata !15080, metadata !DIExpression()) #26, !dbg !15306
  call void @llvm.dbg.value(metadata i32 undef, metadata !15303, metadata !DIExpression()), !dbg !15305
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #28, !dbg !15311
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15304, metadata !DIExpression()), !dbg !15305
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15312
  br i1 %5, label %11, label %6, !dbg !15313

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15106, metadata !DIExpression()), !dbg !15314
  call void @llvm.dbg.value(metadata i32 -35, metadata !15111, metadata !DIExpression()), !dbg !15314
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15317
  store i32 -35, i32* %8, align 4, !dbg !15318
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #28, !dbg !15319
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #28, !dbg !15311
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15304, metadata !DIExpression()), !dbg !15305
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15312
  br i1 %10, label %11, label %6, !dbg !15313, !llvm.loop !15320

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %12, metadata !15086, metadata !DIExpression()) #26, !dbg !15310
  call void @llvm.dbg.value(metadata i32 %12, metadata !15080, metadata !DIExpression()) #26, !dbg !15306
  call void @llvm.dbg.value(metadata i32 %12, metadata !15303, metadata !DIExpression()), !dbg !15305
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15322
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15323
  store i32 0, i32* %14, align 4, !dbg !15324
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15325
  %16 = load i8*, i8** %15, align 4, !dbg !15325
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15326
  store i8* %16, i8** %17, align 4, !dbg !15327
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !15328
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #28, !dbg !15328
  ret void, !dbg !15329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #9 !dbg !15330 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15341, metadata !DIExpression()), !dbg !15342
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15343
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !15344
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15345
  store i32 0, i32* %3, align 4, !dbg !15346
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15347
  tail call fastcc void @z_waitq_init.223(%struct._wait_q_t* noundef %4) #27, !dbg !15348
  ret i32 0, !dbg !15349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.223(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !15350 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15354, metadata !DIExpression()), !dbg !15355
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15356
  tail call fastcc void @sys_dlist_init.224(%struct._dnode* noundef %2) #27, !dbg !15357
  ret void, !dbg !15358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.224(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15359 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15364, metadata !DIExpression()), !dbg !15365
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15366
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15367
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15368
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15369
  ret void, !dbg !15370
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15371 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15380, metadata !DIExpression()), !dbg !15392
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15379, metadata !DIExpression()), !dbg !15392
  call void @llvm.dbg.value(metadata i8 0, metadata !15387, metadata !DIExpression()), !dbg !15392
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15393, metadata !DIExpression()) #26, !dbg !15400
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15402, !srcloc !15408
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15402
  call void @llvm.dbg.value(metadata i32 %5, metadata !15405, metadata !DIExpression()) #26, !dbg !15409
  call void @llvm.dbg.value(metadata i32 undef, metadata !15406, metadata !DIExpression()) #26, !dbg !15409
  call void @llvm.dbg.value(metadata i32 %5, metadata !15399, metadata !DIExpression()) #26, !dbg !15400
  call void @llvm.dbg.value(metadata i32 %5, metadata !15382, metadata !DIExpression()), !dbg !15392
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15410
  %7 = load i32, i32* %6, align 4, !dbg !15410
  %8 = icmp eq i32 %7, 0, !dbg !15410
  br i1 %8, label %14, label %9, !dbg !15410

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15410
  %11 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15410
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15410
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15410
  br i1 %13, label %20, label %29, !dbg !15412, !prof !15413

14:                                               ; preds = %2
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15414
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 0, i32 4, !dbg !15416
  %17 = bitcast %union.anon.2* %16 to i8*, !dbg !15416
  %18 = load i8, i8* %17, align 2, !dbg !15416
  %19 = sext i8 %18 to i32, !dbg !15414
  br label %23, !dbg !15417

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15418
  %22 = load i32, i32* %21, align 4, !dbg !15418
  br label %23, !dbg !15417

23:                                               ; preds = %20, %14
  %24 = phi %struct.k_thread* [ %15, %14 ], [ %11, %20 ], !dbg !15419
  %25 = phi i32 [ %19, %14 ], [ %22, %20 ], !dbg !15417
  %26 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15420
  store i32 %25, i32* %26, align 4, !dbg !15421
  %27 = add i32 %7, 1, !dbg !15422
  store i32 %27, i32* %6, align 4, !dbg !15422
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15423
  store %struct.k_thread* %24, %struct.k_thread** %28, align 4, !dbg !15424
  call void @llvm.dbg.value(metadata i32 %5, metadata !15425, metadata !DIExpression()) #26, !dbg !15431
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15430, metadata !DIExpression()) #26, !dbg !15431
  call void @llvm.dbg.value(metadata i32 %5, metadata !15433, metadata !DIExpression()) #26, !dbg !15436
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #26, !dbg !15438, !srcloc !15439
  br label %78, !dbg !15440

29:                                               ; preds = %9
  %30 = icmp eq i64 %3, 0, !dbg !15441
  br i1 %30, label %31, label %32, !dbg !15443, !prof !15444

31:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %5, metadata !15425, metadata !DIExpression()) #26, !dbg !15445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15430, metadata !DIExpression()) #26, !dbg !15445
  call void @llvm.dbg.value(metadata i32 %5, metadata !15433, metadata !DIExpression()) #26, !dbg !15448
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #26, !dbg !15450, !srcloc !15439
  br label %78, !dbg !15451

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 0, i32 4, !dbg !15452
  %34 = bitcast %union.anon.2* %33 to i8*, !dbg !15452
  %35 = load i8, i8* %34, align 2, !dbg !15452
  %36 = sext i8 %35 to i32, !dbg !15453
  %37 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 0, i32 4, !dbg !15454
  %38 = bitcast %union.anon.2* %37 to i8*, !dbg !15454
  %39 = load i8, i8* %38, align 2, !dbg !15454
  %40 = sext i8 %39 to i32, !dbg !15455
  %41 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %36, i32 noundef %40) #27, !dbg !15456
  call void @llvm.dbg.value(metadata i32 %41, metadata !15381, metadata !DIExpression()), !dbg !15392
  %42 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %41, i32 noundef %40) #27, !dbg !15457
  br i1 %42, label %43, label %45, !dbg !15459

43:                                               ; preds = %32
  %44 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %41) #27, !dbg !15460
  call void @llvm.dbg.value(metadata i1 %44, metadata !15387, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15392
  br label %45, !dbg !15462

45:                                               ; preds = %43, %32
  %46 = phi i1 [ %44, %43 ], [ false, %32 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !15387, metadata !DIExpression()), !dbg !15392
  %47 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15463
  %48 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !15464
  %49 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %48, %struct._wait_q_t* noundef %47, [1 x i64] %1) #28, !dbg !15464
  call void @llvm.dbg.value(metadata i32 %49, metadata !15388, metadata !DIExpression()), !dbg !15392
  %50 = icmp eq i32 %49, 0, !dbg !15465
  br i1 %50, label %78, label %51, !dbg !15467

51:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15393, metadata !DIExpression()) #26, !dbg !15468
  %52 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15470, !srcloc !15408
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !15470
  call void @llvm.dbg.value(metadata i32 %53, metadata !15405, metadata !DIExpression()) #26, !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !15406, metadata !DIExpression()) #26, !dbg !15472
  call void @llvm.dbg.value(metadata i32 %53, metadata !15399, metadata !DIExpression()) #26, !dbg !15468
  call void @llvm.dbg.value(metadata i32 %53, metadata !15382, metadata !DIExpression()), !dbg !15392
  %54 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15473
  %55 = icmp eq %struct.k_thread* %54, null, !dbg !15473
  br i1 %55, label %74, label %56, !dbg !15474, !prof !15444

56:                                               ; preds = %51
  %57 = tail call fastcc %struct.k_thread* @z_waitq_head.227(%struct._wait_q_t* noundef nonnull %47) #27, !dbg !15475
  call void @llvm.dbg.value(metadata %struct.k_thread* %57, metadata !15389, metadata !DIExpression()), !dbg !15476
  %58 = icmp eq %struct.k_thread* %57, null, !dbg !15477
  br i1 %58, label %67, label %59, !dbg !15478

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %57, i32 0, i32 0, i32 4, !dbg !15479
  %61 = bitcast %union.anon.2* %60 to i8*, !dbg !15479
  %62 = load i8, i8* %61, align 2, !dbg !15479
  %63 = sext i8 %62 to i32, !dbg !15480
  %64 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15481
  %65 = load i32, i32* %64, align 4, !dbg !15481
  %66 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %63, i32 noundef %65) #27, !dbg !15482
  br label %70, !dbg !15478

67:                                               ; preds = %56
  %68 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15483
  %69 = load i32, i32* %68, align 4, !dbg !15483
  br label %70, !dbg !15478

70:                                               ; preds = %67, %59
  %71 = phi i32 [ %66, %59 ], [ %69, %67 ], !dbg !15478
  call void @llvm.dbg.value(metadata i32 %71, metadata !15381, metadata !DIExpression()), !dbg !15392
  %72 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %71) #27, !dbg !15484
  %73 = select i1 %72, i1 true, i1 %46, !dbg !15485
  call void @llvm.dbg.value(metadata i1 %73, metadata !15387, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15392
  call void @llvm.dbg.value(metadata i8 poison, metadata !15387, metadata !DIExpression()), !dbg !15392
  br i1 %73, label %75, label %77, !dbg !15486

74:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8 poison, metadata !15387, metadata !DIExpression()), !dbg !15392
  br i1 %46, label %75, label %77, !dbg !15486

75:                                               ; preds = %70, %74
  %76 = insertvalue [1 x i32] poison, i32 %53, 0, !dbg !15487
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %76) #28, !dbg !15487
  br label %78, !dbg !15490

77:                                               ; preds = %70, %74
  call void @llvm.dbg.value(metadata i32 %53, metadata !15425, metadata !DIExpression()) #26, !dbg !15491
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15430, metadata !DIExpression()) #26, !dbg !15491
  call void @llvm.dbg.value(metadata i32 %53, metadata !15433, metadata !DIExpression()) #26, !dbg !15494
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %53) #26, !dbg !15496, !srcloc !15439
  br label %78

78:                                               ; preds = %45, %75, %77, %31, %23
  %79 = phi i32 [ 0, %23 ], [ -16, %31 ], [ 0, %45 ], [ -11, %75 ], [ -11, %77 ], !dbg !15392
  ret i32 %79, !dbg !15497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15502, metadata !DIExpression()), !dbg !15505
  call void @llvm.dbg.value(metadata i32 %1, metadata !15503, metadata !DIExpression()), !dbg !15505
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #27, !dbg !15506
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !15506
  call void @llvm.dbg.value(metadata i32 %4, metadata !15504, metadata !DIExpression()), !dbg !15505
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #27, !dbg !15507
  call void @llvm.dbg.value(metadata i32 %5, metadata !15504, metadata !DIExpression()), !dbg !15505
  ret i32 %5, !dbg !15508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15513, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata i32 %1, metadata !15514, metadata !DIExpression()), !dbg !15515
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !15516
  ret i1 %3, !dbg !15517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !15518 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15522, metadata !DIExpression()), !dbg !15524
  call void @llvm.dbg.value(metadata i32 %1, metadata !15523, metadata !DIExpression()), !dbg !15524
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15525
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !15525
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15527
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15527
  %7 = load i8, i8* %6, align 2, !dbg !15527
  %8 = sext i8 %7 to i32, !dbg !15528
  %9 = icmp eq i32 %8, %1, !dbg !15529
  br i1 %9, label %12, label %10, !dbg !15530

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #28, !dbg !15531
  br label %12, !dbg !15533

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !15524
  ret i1 %13, !dbg !15534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.227(%struct._wait_q_t* noundef readonly %0) unnamed_addr #3 !dbg !15535 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15539, metadata !DIExpression()), !dbg !15540
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15541
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.228(%struct._dnode* noundef %2) #27, !dbg !15542
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15543
  ret %struct.k_thread* %4, !dbg !15544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.228(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !15545 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15549, metadata !DIExpression()), !dbg !15550
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.229(%struct._dnode* noundef %0) #27, !dbg !15551
  br i1 %2, label %6, label %3, !dbg !15551

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15552
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15552
  br label %6, !dbg !15551

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15551
  ret %struct._dnode* %7, !dbg !15553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.229(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !15554 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15558, metadata !DIExpression()), !dbg !15559
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15560
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15560
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15561
  ret i1 %4, !dbg !15562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15565, metadata !DIExpression()), !dbg !15567
  call void @llvm.dbg.value(metadata i32 %1, metadata !15566, metadata !DIExpression()), !dbg !15567
  %3 = icmp slt i32 %0, %1, !dbg !15568
  ret i1 %3, !dbg !15569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15572, metadata !DIExpression()), !dbg !15573
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #27, !dbg !15574
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !15574
  ret i32 %3, !dbg !15575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15580, metadata !DIExpression()), !dbg !15581
  %2 = icmp sgt i32 %0, -128, !dbg !15582
  ret i1 %2, !dbg !15583
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !15584 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15586, metadata !DIExpression()), !dbg !15590
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15591
  %3 = load %struct.k_thread*, %struct.k_thread** %2, align 4, !dbg !15591
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15591
  br i1 %4, label %31, label %5, !dbg !15593

5:                                                ; preds = %1
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15594
  %7 = icmp eq %struct.k_thread* %3, %6, !dbg !15594
  br i1 %7, label %8, label %31, !dbg !15596

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15597
  %10 = load i32, i32* %9, align 4, !dbg !15597
  %11 = icmp ugt i32 %10, 1, !dbg !15599
  br i1 %11, label %12, label %14, !dbg !15600

12:                                               ; preds = %8
  %13 = add i32 %10, -1, !dbg !15601
  store i32 %13, i32* %9, align 4, !dbg !15601
  br label %31, !dbg !15603

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15393, metadata !DIExpression()) #26, !dbg !15604
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15606, !srcloc !15408
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15606
  call void @llvm.dbg.value(metadata i32 %16, metadata !15405, metadata !DIExpression()) #26, !dbg !15608
  call void @llvm.dbg.value(metadata i32 undef, metadata !15406, metadata !DIExpression()) #26, !dbg !15608
  call void @llvm.dbg.value(metadata i32 %16, metadata !15399, metadata !DIExpression()) #26, !dbg !15604
  call void @llvm.dbg.value(metadata i32 %16, metadata !15588, metadata !DIExpression()), !dbg !15590
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15609
  %18 = load i32, i32* %17, align 4, !dbg !15609
  %19 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %18) #27, !dbg !15610
  %20 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15611
  %21 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %20) #28, !dbg !15612
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15587, metadata !DIExpression()), !dbg !15590
  store %struct.k_thread* %21, %struct.k_thread** %2, align 4, !dbg !15613
  %22 = icmp eq %struct.k_thread* %21, null, !dbg !15614
  br i1 %22, label %30, label %23, !dbg !15616

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 4, !dbg !15617
  %25 = bitcast %union.anon.2* %24 to i8*, !dbg !15617
  %26 = load i8, i8* %25, align 2, !dbg !15617
  %27 = sext i8 %26 to i32, !dbg !15619
  store i32 %27, i32* %17, align 4, !dbg !15620
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15621, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata i32 0, metadata !15626, metadata !DIExpression()), !dbg !15627
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 7, i32 1, !dbg !15629
  store i32 0, i32* %28, align 4, !dbg !15630
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %21) #28, !dbg !15631
  %29 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15632
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %29) #28, !dbg !15632
  br label %31, !dbg !15633

30:                                               ; preds = %14
  store i32 0, i32* %9, align 4, !dbg !15634
  call void @llvm.dbg.value(metadata i32 %16, metadata !15425, metadata !DIExpression()) #26, !dbg !15636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15430, metadata !DIExpression()) #26, !dbg !15636
  call void @llvm.dbg.value(metadata i32 %16, metadata !15433, metadata !DIExpression()) #26, !dbg !15638
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !15640, !srcloc !15439
  br label %31

31:                                               ; preds = %23, %30, %12, %5, %1
  %32 = phi i32 [ -22, %1 ], [ -1, %5 ], [ 0, %12 ], [ 0, %30 ], [ 0, %23 ], !dbg !15590
  ret i32 %32, !dbg !15641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #3 !dbg !15642 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15646, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15647, metadata !DIExpression()), !dbg !15650
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15651
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15651
  %5 = load i8, i8* %4, align 2, !dbg !15651
  call void @llvm.dbg.value(metadata i8 %5, metadata !15648, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15650
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15652
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15652
  %8 = load i8, i8* %7, align 2, !dbg !15652
  call void @llvm.dbg.value(metadata i8 %8, metadata !15649, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15650
  %9 = icmp eq i8 %8, %5, !dbg !15653
  %10 = sext i8 %5 to i32, !dbg !15655
  %11 = sext i8 %8 to i32, !dbg !15655
  %12 = sub nsw i32 %11, %10, !dbg !15655
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15655
  ret i32 %13, !dbg !15656
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15657 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15661, metadata !DIExpression()), !dbg !15662
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !15663
  %3 = icmp eq i32 %2, 0, !dbg !15665
  br i1 %3, label %8, label %4, !dbg !15666

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #28, !dbg !15667
  %6 = add i32 %5, %2, !dbg !15669
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15670
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !15671
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #28, !dbg !15672
  br label %8, !dbg !15673

8:                                                ; preds = %4, %1
  ret void, !dbg !15674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #3 !dbg !15675 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15679, metadata !DIExpression()), !dbg !15681
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15682
  call void @llvm.dbg.value(metadata i32 %1, metadata !15680, metadata !DIExpression()), !dbg !15681
  ret i32 %1, !dbg !15683
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15688, metadata !DIExpression()), !dbg !15697
  call void @llvm.dbg.value(metadata i32 %1, metadata !15689, metadata !DIExpression()), !dbg !15697
  call void @llvm.dbg.value(metadata i32 0, metadata !15690, metadata !DIExpression()), !dbg !15698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !15706
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15708, !srcloc !15714
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15708
  call void @llvm.dbg.value(metadata i32 %4, metadata !15711, metadata !DIExpression()) #26, !dbg !15715
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !15715
  call void @llvm.dbg.value(metadata i32 %4, metadata !15705, metadata !DIExpression()) #26, !dbg !15706
  call void @llvm.dbg.value(metadata i32 %4, metadata !15696, metadata !DIExpression()), !dbg !15698
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()), !dbg !15698
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15716
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !15719
  %6 = icmp sgt i32 %0, 0, !dbg !15720
  %7 = icmp sgt i32 %5, 2, !dbg !15722
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15722
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15722
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15723
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15724
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !15725
  call void @llvm.dbg.value(metadata i32 %4, metadata !15726, metadata !DIExpression()) #26, !dbg !15732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !15732
  call void @llvm.dbg.value(metadata i32 %4, metadata !15734, metadata !DIExpression()) #26, !dbg !15737
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #26, !dbg !15739, !srcloc !15740
  call void @llvm.dbg.value(metadata i32 1, metadata !15690, metadata !DIExpression()), !dbg !15698
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()), !dbg !15698
  ret void, !dbg !15741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !15742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15744, metadata !DIExpression()), !dbg !15745
  call void @llvm.dbg.value(metadata i32 %0, metadata !15746, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15761
  call void @llvm.dbg.value(metadata i32 1000, metadata !15749, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata i32 10000, metadata !15750, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata i8 1, metadata !15751, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata i1 true, metadata !15752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15761
  call void @llvm.dbg.value(metadata i1 true, metadata !15753, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15761
  call void @llvm.dbg.value(metadata i8 0, metadata !15754, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata i1 true, metadata !15755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15761
  call void @llvm.dbg.value(metadata i1 false, metadata !15756, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15761
  call void @llvm.dbg.value(metadata i64 0, metadata !15757, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata i64 0, metadata !15757, metadata !DIExpression()), !dbg !15761
  %2 = mul i32 %0, 10, !dbg !15763
  ret i32 %2, !dbg !15769
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15772, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !15775
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15777, !srcloc !15714
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15777
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #26, !dbg !15779
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !15779
  call void @llvm.dbg.value(metadata i32 %3, metadata !15705, metadata !DIExpression()) #26, !dbg !15775
  call void @llvm.dbg.value(metadata i32 %3, metadata !15773, metadata !DIExpression()), !dbg !15774
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15780
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15782
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15783
  br i1 %6, label %7, label %8, !dbg !15784

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !15785
  call void @llvm.dbg.value(metadata i32 %3, metadata !15726, metadata !DIExpression()) #26, !dbg !15787
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !15787
  call void @llvm.dbg.value(metadata i32 %3, metadata !15734, metadata !DIExpression()) #26, !dbg !15789
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !15791, !srcloc !15740
  br label %24, !dbg !15792

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15793
  %9 = tail call fastcc i32 @slice_time() #27, !dbg !15794
  %10 = icmp eq i32 %9, 0, !dbg !15794
  br i1 %10, label %21, label %11, !dbg !15796

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #27, !dbg !15797
  br i1 %12, label %13, label %21, !dbg !15798

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15799
  %15 = icmp sgt i32 %14, %0, !dbg !15802
  br i1 %15, label %19, label %16, !dbg !15803

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15804
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #27, !dbg !15804
  call void @llvm.dbg.value(metadata i32 %18, metadata !15773, metadata !DIExpression()), !dbg !15774
  br label %22, !dbg !15806

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15807
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15807
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15809
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15774
  call void @llvm.dbg.value(metadata i32 %23, metadata !15773, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.value(metadata i32 %23, metadata !15726, metadata !DIExpression()) #26, !dbg !15811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !15811
  call void @llvm.dbg.value(metadata i32 %23, metadata !15734, metadata !DIExpression()) #26, !dbg !15813
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #26, !dbg !15815, !srcloc !15740
  br label %24, !dbg !15816

24:                                               ; preds = %22, %7
  ret void, !dbg !15816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #3 !dbg !15817 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15821, metadata !DIExpression()), !dbg !15823
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !15824
  %3 = icmp eq i32 %2, 0, !dbg !15824
  br i1 %3, label %16, label %4, !dbg !15825

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !15826
  br i1 %5, label %16, label %6, !dbg !15827

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15828
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15828
  %9 = load i8, i8* %8, align 2, !dbg !15828
  %10 = sext i8 %9 to i32, !dbg !15829
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15830
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.235(i32 noundef %10, i32 noundef %11) #27, !dbg !15831
  br i1 %12, label %16, label %13, !dbg !15832

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !15833
  %15 = xor i1 %14, true, !dbg !15834
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15823
  call void @llvm.dbg.value(metadata i1 %17, metadata !15822, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15823
  ret i1 %17, !dbg !15835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15836 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15840, metadata !DIExpression()), !dbg !15842
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15843
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15841, metadata !DIExpression()), !dbg !15842
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !15844
  br i1 %3, label %5, label %4, !dbg !15846

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !15847
  br label %5, !dbg !15849

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15840, metadata !DIExpression()), !dbg !15842
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !15850
  ret i32 %6, !dbg !15851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !15852 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15854, metadata !DIExpression()), !dbg !15856
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15857
  %3 = load i8, i8* %2, align 1, !dbg !15857
  call void @llvm.dbg.value(metadata i8 %3, metadata !15855, metadata !DIExpression()), !dbg !15856
  %4 = and i8 %3, 31, !dbg !15858
  %5 = icmp ne i8 %4, 0, !dbg !15859
  ret i1 %5, !dbg !15860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15861 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15863, metadata !DIExpression()), !dbg !15864
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15865
  br i1 %2, label %3, label %7, !dbg !15867

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15868, metadata !DIExpression()) #26, !dbg !15871
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15874
  %5 = load i8, i8* %4, align 1, !dbg !15875
  %6 = and i8 %5, 127, !dbg !15875
  store i8 %6, i8* %4, align 1, !dbg !15875
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15876, metadata !DIExpression()) #26, !dbg !15879
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !15883
  br label %7, !dbg !15884

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15885, metadata !DIExpression()) #26, !dbg !15888
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15890
  %9 = load i8, i8* %8, align 1, !dbg !15891
  %10 = or i8 %9, -128, !dbg !15891
  store i8 %10, i8* %8, align 1, !dbg !15891
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15892, metadata !DIExpression()) #26, !dbg !15895
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15899, metadata !DIExpression()) #26, !dbg !15907
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15905, metadata !DIExpression()) #26, !dbg !15907
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.232(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !15909
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15906, metadata !DIExpression()) #26, !dbg !15907
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15911
  br i1 %12, label %23, label %13, !dbg !15909

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15906, metadata !DIExpression()) #26, !dbg !15907
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15913
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15906, metadata !DIExpression()) #26, !dbg !15907
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #28, !dbg !15914
  %17 = icmp sgt i32 %16, 0, !dbg !15917
  br i1 %17, label %18, label %20, !dbg !15918

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15919
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #28, !dbg !15921
  br label %25, !dbg !15922

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #28, !dbg !15911
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15906, metadata !DIExpression()) #26, !dbg !15907
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15911
  br i1 %22, label %23, label %13, !dbg !15909, !llvm.loop !15923

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15925
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #28, !dbg !15926
  br label %25, !dbg !15927

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15928
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15929
  %28 = zext i1 %27 to i32, !dbg !15929
  tail call fastcc void @update_cache(i32 noundef %28) #27, !dbg !15930
  ret void, !dbg !15931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !15932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15934, metadata !DIExpression()), !dbg !15935
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #27, !dbg !15936
  ret i1 %2, !dbg !15937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #10 !dbg !15938 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15940, metadata !DIExpression()), !dbg !15942
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15941, metadata !DIExpression()), !dbg !15942
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15943
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #27, !dbg !15944
  ret void, !dbg !15945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.232(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !15946 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15950, metadata !DIExpression()), !dbg !15951
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.233(%struct._dnode* noundef %0) #27, !dbg !15952
  br i1 %2, label %6, label %3, !dbg !15952

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15953
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15953
  br label %6, !dbg !15952

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15952
  ret %struct._dnode* %7, !dbg !15954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !15955 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15959, metadata !DIExpression()), !dbg !15963
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15960, metadata !DIExpression()), !dbg !15963
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15964
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15964
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15961, metadata !DIExpression()), !dbg !15963
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15965
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15966
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15967
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15968
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15969
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15970
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15971
  ret void, !dbg !15972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #3 !dbg !15973 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15977, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15978, metadata !DIExpression()), !dbg !15979
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15980
  br i1 %3, label %6, label %4, !dbg !15981

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !15982
  br label %6, !dbg !15981

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15981
  ret %struct._dnode* %7, !dbg !15983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !15984 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15988, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15989, metadata !DIExpression()), !dbg !15991
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15992
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15992
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15990, metadata !DIExpression()), !dbg !15991
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15993
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15994
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15995
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15996
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15997
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15998
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15999
  ret void, !dbg !16000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16003, metadata !DIExpression()), !dbg !16005
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !16006
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16013, metadata !DIExpression()) #26, !dbg !16015
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16016
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16017
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !16017
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16004, metadata !DIExpression()), !dbg !16005
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16018, metadata !DIExpression()) #26, !dbg !16024
  call void @llvm.dbg.value(metadata i32 %0, metadata !16023, metadata !DIExpression()) #26, !dbg !16024
  %6 = icmp eq i32 %0, 0, !dbg !16027
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16029
  br i1 %6, label %8, label %15, !dbg !16030

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #28, !dbg !16031
  br i1 %9, label %15, label %10, !dbg !16033

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #28, !dbg !16034
  br i1 %11, label %15, label %12, !dbg !16036

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #28, !dbg !16037
  %14 = icmp eq i32 %13, 0, !dbg !16037
  br i1 %14, label %18, label %15, !dbg !16039

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !16040
  br i1 %16, label %18, label %17, !dbg !16043

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16044
  br label %18, !dbg !16046

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !16029
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16029
  ret void, !dbg !16047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #3 !dbg !16048 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16052, metadata !DIExpression()), !dbg !16055
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16053, metadata !DIExpression()), !dbg !16055
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.232(%struct._dnode* noundef %0) #27, !dbg !16056
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16054, metadata !DIExpression()), !dbg !16055
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16053, metadata !DIExpression()), !dbg !16055
  ret %struct.k_thread* %3, !dbg !16057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16058 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16060, metadata !DIExpression()), !dbg !16061
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16062
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16063
  %4 = xor i1 %3, true, !dbg !16064
  ret i1 %4, !dbg !16065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16066 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16068, metadata !DIExpression()), !dbg !16069
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16070
  %3 = load i16, i16* %2, align 2, !dbg !16070
  %4 = icmp ult i16 %3, 128, !dbg !16071
  %5 = zext i1 %4 to i32, !dbg !16071
  ret i32 %5, !dbg !16072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16073 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16079, metadata !DIExpression()), !dbg !16080
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16081
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !16082
  %4 = xor i1 %3, true, !dbg !16083
  ret i1 %4, !dbg !16084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16085 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16091, metadata !DIExpression()), !dbg !16092
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16093
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16093
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16094
  ret i1 %4, !dbg !16095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #3 !dbg !16096 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16098, metadata !DIExpression()), !dbg !16100
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16099, metadata !DIExpression()), !dbg !16100
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16101
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16101
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16102
  br i1 %5, label %9, label %6, !dbg !16103

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16104
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16104
  br label %9, !dbg !16103

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16103
  ret %struct._dnode* %10, !dbg !16105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.233(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !16106 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16110, metadata !DIExpression()), !dbg !16111
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16112
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16112
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16113
  ret i1 %4, !dbg !16114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !16115 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16119, metadata !DIExpression()), !dbg !16122
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16123
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16123
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16120, metadata !DIExpression()), !dbg !16122
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16124
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16124
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16121, metadata !DIExpression()), !dbg !16122
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16125
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16126
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16127
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16128
  tail call fastcc void @sys_dnode_init.234(%struct._dnode* noundef %0) #27, !dbg !16129
  ret void, !dbg !16130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.234(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16131 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16133, metadata !DIExpression()), !dbg !16134
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16135
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16136
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16137
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16138
  ret void, !dbg !16139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16140 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16144, metadata !DIExpression()), !dbg !16146
  call void @llvm.dbg.value(metadata i32 128, metadata !16145, metadata !DIExpression()), !dbg !16146
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16147
  %3 = load i8, i8* %2, align 1, !dbg !16147
  %4 = icmp slt i8 %3, 0, !dbg !16148
  ret i1 %4, !dbg !16149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.235(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16152, metadata !DIExpression()), !dbg !16154
  call void @llvm.dbg.value(metadata i32 %1, metadata !16153, metadata !DIExpression()), !dbg !16154
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.236(i32 noundef %0, i32 noundef %1) #27, !dbg !16155
  ret i1 %3, !dbg !16156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !16157 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16159, metadata !DIExpression()), !dbg !16160
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16161
  ret i1 %2, !dbg !16162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.236(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16163 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16165, metadata !DIExpression()), !dbg !16167
  call void @llvm.dbg.value(metadata i32 %1, metadata !16166, metadata !DIExpression()), !dbg !16167
  %3 = icmp slt i32 %0, %1, !dbg !16168
  ret i1 %3, !dbg !16169
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16170 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16172, metadata !DIExpression()), !dbg !16176
  call void @llvm.dbg.value(metadata i32 0, metadata !16173, metadata !DIExpression()), !dbg !16177
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16178
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16180, !srcloc !15714
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16180
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #26, !dbg !16182
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16182
  call void @llvm.dbg.value(metadata i32 %3, metadata !15705, metadata !DIExpression()) #26, !dbg !16178
  call void @llvm.dbg.value(metadata i32 %3, metadata !16175, metadata !DIExpression()), !dbg !16177
  call void @llvm.dbg.value(metadata i32 undef, metadata !16173, metadata !DIExpression()), !dbg !16177
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16183
  call void @llvm.dbg.value(metadata i32 %3, metadata !15726, metadata !DIExpression()) #26, !dbg !16188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16188
  call void @llvm.dbg.value(metadata i32 %3, metadata !15734, metadata !DIExpression()) #26, !dbg !16190
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16192, !srcloc !15740
  call void @llvm.dbg.value(metadata i32 1, metadata !16173, metadata !DIExpression()), !dbg !16177
  call void @llvm.dbg.value(metadata i32 undef, metadata !16173, metadata !DIExpression()), !dbg !16177
  ret void, !dbg !16193
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16194 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16196, metadata !DIExpression()), !dbg !16197
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !16198
  br i1 %2, label %24, label %3, !dbg !16200

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !16201
  br i1 %4, label %5, label %24, !dbg !16202

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15885, metadata !DIExpression()) #26, !dbg !16203
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16206
  %7 = load i8, i8* %6, align 1, !dbg !16207
  %8 = or i8 %7, -128, !dbg !16207
  store i8 %8, i8* %6, align 1, !dbg !16207
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15892, metadata !DIExpression()) #26, !dbg !16208
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15899, metadata !DIExpression()) #26, !dbg !16210
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15905, metadata !DIExpression()) #26, !dbg !16210
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.232(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !16212
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15906, metadata !DIExpression()) #26, !dbg !16210
  %10 = icmp eq %struct._dnode* %9, null, !dbg !16213
  br i1 %10, label %21, label %11, !dbg !16212

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15906, metadata !DIExpression()) #26, !dbg !16210
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !16214
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15906, metadata !DIExpression()) #26, !dbg !16210
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #28, !dbg !16215
  %15 = icmp sgt i32 %14, 0, !dbg !16216
  br i1 %15, label %16, label %18, !dbg !16217

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16218
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #28, !dbg !16219
  br label %23, !dbg !16220

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #28, !dbg !16213
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15906, metadata !DIExpression()) #26, !dbg !16210
  %20 = icmp eq %struct._dnode* %19, null, !dbg !16213
  br i1 %20, label %21, label %11, !dbg !16212, !llvm.loop !16221

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16223
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #28, !dbg !16224
  br label %23, !dbg !16225

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !16226
  br label %24, !dbg !16227

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !16228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16229 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16231, metadata !DIExpression()), !dbg !16232
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !16233
  br i1 %2, label %6, label %3, !dbg !16234

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !16235
  %5 = xor i1 %4, true, !dbg !16234
  br label %6, !dbg !16234

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16236
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16237 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16239, metadata !DIExpression()), !dbg !16243
  call void @llvm.dbg.value(metadata i32 0, metadata !16240, metadata !DIExpression()), !dbg !16244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16245
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16247, !srcloc !15714
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16247
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #26, !dbg !16249
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16249
  call void @llvm.dbg.value(metadata i32 %3, metadata !15705, metadata !DIExpression()) #26, !dbg !16245
  call void @llvm.dbg.value(metadata i32 %3, metadata !16242, metadata !DIExpression()), !dbg !16244
  call void @llvm.dbg.value(metadata i32 undef, metadata !16240, metadata !DIExpression()), !dbg !16244
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !16250
  call void @llvm.dbg.value(metadata i32 %3, metadata !15726, metadata !DIExpression()) #26, !dbg !16253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16253
  call void @llvm.dbg.value(metadata i32 %3, metadata !15734, metadata !DIExpression()) #26, !dbg !16255
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16257, !srcloc !15740
  call void @llvm.dbg.value(metadata i32 1, metadata !16240, metadata !DIExpression()), !dbg !16244
  call void @llvm.dbg.value(metadata i32 undef, metadata !16240, metadata !DIExpression()), !dbg !16244
  ret void, !dbg !16258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16259 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16261, metadata !DIExpression()), !dbg !16263
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16264
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16266, !srcloc !15714
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16266
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #26, !dbg !16268
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16268
  call void @llvm.dbg.value(metadata i32 %3, metadata !15705, metadata !DIExpression()) #26, !dbg !16264
  call void @llvm.dbg.value(metadata i32 %3, metadata !16262, metadata !DIExpression()), !dbg !16263
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !16269
  br i1 %4, label %5, label %6, !dbg !16271

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15726, metadata !DIExpression()) #26, !dbg !16272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16272
  call void @llvm.dbg.value(metadata i32 %3, metadata !15734, metadata !DIExpression()) #26, !dbg !16275
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16277, !srcloc !15740
  br label %8, !dbg !16278

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.241(%struct.k_thread* noundef %0) #27, !dbg !16279
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16280
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16281
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !16281
  br label %8, !dbg !16282

8:                                                ; preds = %6, %5
  ret void, !dbg !16282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16283 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16285, metadata !DIExpression()), !dbg !16286
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16287
  %3 = load i8, i8* %2, align 1, !dbg !16287
  %4 = and i8 %3, 4, !dbg !16288
  %5 = icmp eq i8 %4, 0, !dbg !16289
  ret i1 %5, !dbg !16290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.241(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !16291 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16293, metadata !DIExpression()), !dbg !16294
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16295
  %3 = load i8, i8* %2, align 1, !dbg !16296
  %4 = and i8 %3, -5, !dbg !16296
  store i8 %4, i8* %2, align 1, !dbg !16296
  ret void, !dbg !16297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16298 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16301, metadata !DIExpression()), !dbg !16302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16300, metadata !DIExpression()), !dbg !16302
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !16303
  br i1 %4, label %5, label %9, !dbg !16305

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !16306
  br i1 %6, label %7, label %9, !dbg !16307

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16308, metadata !DIExpression()) #26, !dbg !16314
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16313, metadata !DIExpression()) #26, !dbg !16314
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #28, !dbg !16317
  br label %10, !dbg !16318

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15726, metadata !DIExpression()) #26, !dbg !16319
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16319
  call void @llvm.dbg.value(metadata i32 %3, metadata !15734, metadata !DIExpression()) #26, !dbg !16322
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16324, !srcloc !15740
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16330, metadata !DIExpression()), !dbg !16331
  call void @llvm.dbg.value(metadata i32 %0, metadata !16332, metadata !DIExpression()), !dbg !16337
  %2 = icmp eq i32 %0, 0, !dbg !16339
  br i1 %2, label %3, label %6, !dbg !16340

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !16341, !srcloc !16348
  call void @llvm.dbg.value(metadata i32 %4, metadata !16344, metadata !DIExpression()) #26, !dbg !16349
  %5 = icmp eq i32 %4, 0, !dbg !16350
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16331
  ret i1 %7, !dbg !16351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #3 !dbg !16352 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16355
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16354, metadata !DIExpression()), !dbg !16356
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16357
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16358
  ret i1 %3, !dbg !16359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16362, metadata !DIExpression()), !dbg !16364
  %2 = tail call i32 @arch_swap(i32 noundef %0) #28, !dbg !16365
  call void @llvm.dbg.value(metadata i32 %2, metadata !16363, metadata !DIExpression()), !dbg !16364
  ret i32 %2, !dbg !16366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16367 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16369, metadata !DIExpression()), !dbg !16373
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !16374
  call void @llvm.dbg.value(metadata i32 0, metadata !16370, metadata !DIExpression()), !dbg !16375
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16376
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16378, !srcloc !15714
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16378
  call void @llvm.dbg.value(metadata i32 %4, metadata !15711, metadata !DIExpression()) #26, !dbg !16380
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16380
  call void @llvm.dbg.value(metadata i32 %4, metadata !15705, metadata !DIExpression()) #26, !dbg !16376
  call void @llvm.dbg.value(metadata i32 %4, metadata !16372, metadata !DIExpression()), !dbg !16375
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()), !dbg !16375
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !16381
  br i1 %5, label %6, label %10, !dbg !16385

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15868, metadata !DIExpression()) #26, !dbg !16386
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16389
  %8 = load i8, i8* %7, align 1, !dbg !16390
  %9 = and i8 %8, 127, !dbg !16390
  store i8 %9, i8* %7, align 1, !dbg !16390
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15876, metadata !DIExpression()) #26, !dbg !16391
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !16393
  br label %10, !dbg !16394

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !16395
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16396
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16397
  %13 = zext i1 %12 to i32, !dbg !16397
  tail call fastcc void @update_cache(i32 noundef %13) #27, !dbg !16398
  call void @llvm.dbg.value(metadata i32 %4, metadata !15726, metadata !DIExpression()) #26, !dbg !16399
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16399
  call void @llvm.dbg.value(metadata i32 %4, metadata !15734, metadata !DIExpression()) #26, !dbg !16401
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #26, !dbg !16403, !srcloc !15740
  call void @llvm.dbg.value(metadata i32 1, metadata !16370, metadata !DIExpression()), !dbg !16375
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()), !dbg !16375
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16404
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16406
  br i1 %15, label %16, label %17, !dbg !16407

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16408
  br label %17, !dbg !16410

17:                                               ; preds = %16, %10
  ret void, !dbg !16411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16412 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16414, metadata !DIExpression()), !dbg !16415
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16416
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !16417
  ret i32 %3, !dbg !16418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !16419 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16421, metadata !DIExpression()), !dbg !16422
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16423
  %3 = load i8, i8* %2, align 1, !dbg !16424
  %4 = or i8 %3, 16, !dbg !16424
  store i8 %4, i8* %2, align 1, !dbg !16424
  ret void, !dbg !16425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16426 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16427, !srcloc !15714
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16427
  call void @llvm.dbg.value(metadata i32 %2, metadata !15711, metadata !DIExpression()) #26, !dbg !16429
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16429
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !16430
  ret void, !dbg !16431
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16434, metadata !DIExpression()), !dbg !16435
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !16436
  br i1 %2, label %3, label %5, !dbg !16438

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !16439
  br label %6, !dbg !16441

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15734, metadata !DIExpression()) #26, !dbg !16442
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #26, !dbg !16445, !srcloc !15740
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16446
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16447 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16449, metadata !DIExpression()), !dbg !16451
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16452
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16454, !srcloc !15714
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16454
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #26, !dbg !16456
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16456
  call void @llvm.dbg.value(metadata i32 %3, metadata !15705, metadata !DIExpression()) #26, !dbg !16452
  call void @llvm.dbg.value(metadata i32 %3, metadata !16450, metadata !DIExpression()), !dbg !16451
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !16457
  br i1 %4, label %6, label %5, !dbg !16459

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15726, metadata !DIExpression()) #26, !dbg !16460
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16460
  call void @llvm.dbg.value(metadata i32 %3, metadata !15734, metadata !DIExpression()) #26, !dbg !16463
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16465, !srcloc !15740
  br label %8, !dbg !16466

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !16467
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16468
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16469
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !16469
  br label %8, !dbg !16470

8:                                                ; preds = %6, %5
  ret void, !dbg !16470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16471 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16473, metadata !DIExpression()), !dbg !16474
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16475
  %3 = load i8, i8* %2, align 1, !dbg !16475
  %4 = and i8 %3, 16, !dbg !16476
  %5 = icmp ne i8 %4, 0, !dbg !16477
  ret i1 %5, !dbg !16478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !16479 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16481, metadata !DIExpression()), !dbg !16482
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16483
  %3 = load i8, i8* %2, align 1, !dbg !16484
  %4 = and i8 %3, -17, !dbg !16484
  store i8 %4, i8* %2, align 1, !dbg !16484
  ret void, !dbg !16485
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16486 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16496, metadata !DIExpression()), !dbg !16500
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16494, metadata !DIExpression()), !dbg !16500
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16495, metadata !DIExpression()), !dbg !16500
  call void @llvm.dbg.value(metadata i32 0, metadata !16497, metadata !DIExpression()), !dbg !16501
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16502
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16504, !srcloc !15714
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16504
  call void @llvm.dbg.value(metadata i32 %5, metadata !15711, metadata !DIExpression()) #26, !dbg !16506
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16506
  call void @llvm.dbg.value(metadata i32 %5, metadata !15705, metadata !DIExpression()) #26, !dbg !16502
  call void @llvm.dbg.value(metadata i32 %5, metadata !16499, metadata !DIExpression()), !dbg !16501
  call void @llvm.dbg.value(metadata i32 undef, metadata !16497, metadata !DIExpression()), !dbg !16501
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !16507
  call void @llvm.dbg.value(metadata i32 %5, metadata !15726, metadata !DIExpression()) #26, !dbg !16510
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16510
  call void @llvm.dbg.value(metadata i32 %5, metadata !15734, metadata !DIExpression()) #26, !dbg !16512
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #26, !dbg !16514, !srcloc !15740
  call void @llvm.dbg.value(metadata i32 1, metadata !16497, metadata !DIExpression()), !dbg !16501
  call void @llvm.dbg.value(metadata i32 undef, metadata !16497, metadata !DIExpression()), !dbg !16501
  ret void, !dbg !16515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16516 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16520, metadata !DIExpression()), !dbg !16521
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16518, metadata !DIExpression()), !dbg !16521
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16519, metadata !DIExpression()), !dbg !16521
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #27, !dbg !16522
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !16523
  ret void, !dbg !16524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !16525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16529, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16530, metadata !DIExpression()), !dbg !16531
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !16532
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !16533
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !16534
  br i1 %3, label %21, label %4, !dbg !16536

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16537
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !16539
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !16540
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15899, metadata !DIExpression()) #26, !dbg !16541
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15905, metadata !DIExpression()) #26, !dbg !16541
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.232(%struct._dnode* noundef nonnull %6) #28, !dbg !16543
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15906, metadata !DIExpression()) #26, !dbg !16541
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16544
  br i1 %8, label %19, label %9, !dbg !16543

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15906, metadata !DIExpression()) #26, !dbg !16541
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16545
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15906, metadata !DIExpression()) #26, !dbg !16541
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #28, !dbg !16546
  %13 = icmp sgt i32 %12, 0, !dbg !16547
  br i1 %13, label %14, label %16, !dbg !16548

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16549
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #28, !dbg !16550
  br label %21, !dbg !16551

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #28, !dbg !16544
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15906, metadata !DIExpression()) #26, !dbg !16541
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16544
  br i1 %18, label %19, label %9, !dbg !16543, !llvm.loop !16552

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16554
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #28, !dbg !16555
  br label %21, !dbg !16556

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16558 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16563, metadata !DIExpression()), !dbg !16564
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16562, metadata !DIExpression()), !dbg !16564
  %4 = icmp eq i64 %3, -1, !dbg !16565
  br i1 %4, label %6, label %5, !dbg !16567

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.244(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !16568
  br label %6, !dbg !16570

6:                                                ; preds = %5, %2
  ret void, !dbg !16571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.244(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16572 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16575, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16574, metadata !DIExpression()), !dbg !16576
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16577
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #28, !dbg !16578
  ret void, !dbg !16579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16580 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16582, metadata !DIExpression()), !dbg !16590
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16591
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16591
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16583, metadata !DIExpression()), !dbg !16590
  call void @llvm.dbg.value(metadata i32 0, metadata !16584, metadata !DIExpression()), !dbg !16592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16593
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16595, !srcloc !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #26, !dbg !16597
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16597
  call void @llvm.dbg.value(metadata i32 undef, metadata !15705, metadata !DIExpression()) #26, !dbg !16593
  call void @llvm.dbg.value(metadata i32 undef, metadata !16586, metadata !DIExpression()), !dbg !16592
  call void @llvm.dbg.value(metadata i32 undef, metadata !16584, metadata !DIExpression()), !dbg !16592
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16598
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16599
  %7 = load i8, i8* %6, align 1, !dbg !16599
  %8 = and i8 %7, 40, !dbg !16600
  %9 = icmp eq i8 %8, 0, !dbg !16600
  call void @llvm.dbg.value(metadata i1 %9, metadata !16587, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16601
  br i1 %9, label %10, label %17, !dbg !16602

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16603
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !16603
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !16603
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !16607
  br i1 %14, label %16, label %15, !dbg !16608

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !16609
  br label %16, !dbg !16611

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.241(%struct.k_thread* noundef nonnull %3) #27, !dbg !16612
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !16613
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !16614
  br label %17, !dbg !16615

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16595
  call void @llvm.dbg.value(metadata i32 %18, metadata !15711, metadata !DIExpression()) #26, !dbg !16597
  call void @llvm.dbg.value(metadata i32 %18, metadata !15705, metadata !DIExpression()) #26, !dbg !16593
  call void @llvm.dbg.value(metadata i32 %18, metadata !16586, metadata !DIExpression()), !dbg !16592
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()) #26, !dbg !16616
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16616
  call void @llvm.dbg.value(metadata i32 undef, metadata !15734, metadata !DIExpression()) #26, !dbg !16618
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !16620, !srcloc !15740
  call void @llvm.dbg.value(metadata i32 1, metadata !16584, metadata !DIExpression()), !dbg !16592
  call void @llvm.dbg.value(metadata i32 undef, metadata !16584, metadata !DIExpression()), !dbg !16592
  ret void, !dbg !16621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !16622 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16624, metadata !DIExpression()), !dbg !16625
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16626
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !16627
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16628
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !16629
  ret void, !dbg !16630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !16631 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16633, metadata !DIExpression()), !dbg !16634
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16635
  %3 = load i8, i8* %2, align 1, !dbg !16636
  %4 = and i8 %3, -3, !dbg !16636
  store i8 %4, i8* %2, align 1, !dbg !16636
  ret void, !dbg !16637
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16640, metadata !DIExpression()), !dbg !16641
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !16642
  br i1 %2, label %3, label %7, !dbg !16644

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15868, metadata !DIExpression()) #26, !dbg !16645
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16648
  %5 = load i8, i8* %4, align 1, !dbg !16649
  %6 = and i8 %5, 127, !dbg !16649
  store i8 %6, i8* %4, align 1, !dbg !16649
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15876, metadata !DIExpression()) #26, !dbg !16650
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !16652
  br label %7, !dbg !16653

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16654
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16655
  %10 = zext i1 %9 to i32, !dbg !16655
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !16656
  ret void, !dbg !16657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !16658 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16660, metadata !DIExpression()), !dbg !16661
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16662
  %3 = load i8, i8* %2, align 1, !dbg !16663
  %4 = or i8 %3, 2, !dbg !16663
  store i8 %4, i8* %2, align 1, !dbg !16663
  ret void, !dbg !16664
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #25 !dbg !16665 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16667, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata i32 0, metadata !16668, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16673
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16675, !srcloc !15714
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16675
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #26, !dbg !16677
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16677
  call void @llvm.dbg.value(metadata i32 %3, metadata !15705, metadata !DIExpression()) #26, !dbg !16673
  call void @llvm.dbg.value(metadata i32 %3, metadata !16670, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i32 undef, metadata !16668, metadata !DIExpression()), !dbg !16672
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !16678
  call void @llvm.dbg.value(metadata i32 %3, metadata !15726, metadata !DIExpression()) #26, !dbg !16681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16681
  call void @llvm.dbg.value(metadata i32 %3, metadata !15734, metadata !DIExpression()) #26, !dbg !16683
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16685, !srcloc !15740
  call void @llvm.dbg.value(metadata i32 1, metadata !16668, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i32 undef, metadata !16668, metadata !DIExpression()), !dbg !16672
  ret void, !dbg !16686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16687 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16693, metadata !DIExpression()), !dbg !16698
  call void @llvm.dbg.value(metadata i32 %0, metadata !16691, metadata !DIExpression()), !dbg !16698
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16692, metadata !DIExpression()), !dbg !16698
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16699
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !16700
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16701
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16702
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !16703
  call void @llvm.dbg.value(metadata i32 %6, metadata !16694, metadata !DIExpression()), !dbg !16698
  call void @llvm.dbg.value(metadata i32 0, metadata !16695, metadata !DIExpression()), !dbg !16704
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16705
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16707, !srcloc !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #26, !dbg !16709
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16709
  call void @llvm.dbg.value(metadata i32 undef, metadata !15705, metadata !DIExpression()) #26, !dbg !16705
  call void @llvm.dbg.value(metadata i32 undef, metadata !16697, metadata !DIExpression()), !dbg !16704
  call void @llvm.dbg.value(metadata i32 undef, metadata !16695, metadata !DIExpression()), !dbg !16704
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16710
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16714
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16715
  br i1 %10, label %11, label %12, !dbg !16716

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16717
  br label %12, !dbg !16719

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16707
  call void @llvm.dbg.value(metadata i32 %13, metadata !15711, metadata !DIExpression()) #26, !dbg !16709
  call void @llvm.dbg.value(metadata i32 %13, metadata !15705, metadata !DIExpression()) #26, !dbg !16705
  call void @llvm.dbg.value(metadata i32 %13, metadata !16697, metadata !DIExpression()), !dbg !16704
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()) #26, !dbg !16720
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15734, metadata !DIExpression()) #26, !dbg !16722
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #26, !dbg !16724, !srcloc !15740
  call void @llvm.dbg.value(metadata i32 1, metadata !16695, metadata !DIExpression()), !dbg !16704
  call void @llvm.dbg.value(metadata i32 undef, metadata !16695, metadata !DIExpression()), !dbg !16704
  ret i32 %6, !dbg !16725
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16726 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16731, metadata !DIExpression()), !dbg !16734
  call void @llvm.dbg.value(metadata i64 undef, metadata !16733, metadata !DIExpression()), !dbg !16734
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16730, metadata !DIExpression()), !dbg !16734
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16732, metadata !DIExpression()), !dbg !16734
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16735
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16736
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16737
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16739, !srcloc !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #26, !dbg !16741
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16741
  call void @llvm.dbg.value(metadata i32 undef, metadata !15705, metadata !DIExpression()) #26, !dbg !16737
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16742
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !16743
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16308, metadata !DIExpression()) #26, !dbg !16744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16313, metadata !DIExpression()) #26, !dbg !16744
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #28, !dbg !16746
  ret i32 %9, !dbg !16747
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16748 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16752, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16753, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata i32 0, metadata !16754, metadata !DIExpression()), !dbg !16758
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16759
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16761, !srcloc !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #26, !dbg !16763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15705, metadata !DIExpression()) #26, !dbg !16759
  call void @llvm.dbg.value(metadata i32 undef, metadata !16756, metadata !DIExpression()), !dbg !16758
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16753, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()), !dbg !16758
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !16764
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16753, metadata !DIExpression()), !dbg !16757
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16767
  br i1 %5, label %7, label %6, !dbg !16769

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !16770
  br label %7, !dbg !16772

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16761
  call void @llvm.dbg.value(metadata i32 %8, metadata !15711, metadata !DIExpression()) #26, !dbg !16763
  call void @llvm.dbg.value(metadata i32 %8, metadata !15705, metadata !DIExpression()) #26, !dbg !16759
  call void @llvm.dbg.value(metadata i32 %8, metadata !16756, metadata !DIExpression()), !dbg !16758
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()) #26, !dbg !16773
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16773
  call void @llvm.dbg.value(metadata i32 undef, metadata !15734, metadata !DIExpression()) #26, !dbg !16775
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !16777, !srcloc !15740
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16753, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()), !dbg !16758
  ret %struct.k_thread* %4, !dbg !16778
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16779 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16781, metadata !DIExpression()), !dbg !16786
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16782, metadata !DIExpression()), !dbg !16786
  call void @llvm.dbg.value(metadata i32 0, metadata !16783, metadata !DIExpression()), !dbg !16787
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16788
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16790, !srcloc !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #26, !dbg !16792
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16792
  call void @llvm.dbg.value(metadata i32 undef, metadata !15705, metadata !DIExpression()) #26, !dbg !16788
  call void @llvm.dbg.value(metadata i32 undef, metadata !16785, metadata !DIExpression()), !dbg !16787
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16782, metadata !DIExpression()), !dbg !16786
  call void @llvm.dbg.value(metadata i32 undef, metadata !16783, metadata !DIExpression()), !dbg !16787
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !16793
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16782, metadata !DIExpression()), !dbg !16786
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16796
  br i1 %5, label %8, label %6, !dbg !16798

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !16799
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !16801
  br label %8, !dbg !16802

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16790
  call void @llvm.dbg.value(metadata i32 %9, metadata !15711, metadata !DIExpression()) #26, !dbg !16792
  call void @llvm.dbg.value(metadata i32 %9, metadata !15705, metadata !DIExpression()) #26, !dbg !16788
  call void @llvm.dbg.value(metadata i32 %9, metadata !16785, metadata !DIExpression()), !dbg !16787
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()) #26, !dbg !16803
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16803
  call void @llvm.dbg.value(metadata i32 undef, metadata !15734, metadata !DIExpression()) #26, !dbg !16805
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16807, !srcloc !15740
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16782, metadata !DIExpression()), !dbg !16786
  call void @llvm.dbg.value(metadata i32 undef, metadata !16783, metadata !DIExpression()), !dbg !16787
  ret %struct.k_thread* %4, !dbg !16808
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16809 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16811, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16667, metadata !DIExpression()) #26, !dbg !16813
  call void @llvm.dbg.value(metadata i32 0, metadata !16668, metadata !DIExpression()) #26, !dbg !16815
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16816
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16818, !srcloc !15714
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16818
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #26, !dbg !16820
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16820
  call void @llvm.dbg.value(metadata i32 %3, metadata !15705, metadata !DIExpression()) #26, !dbg !16816
  call void @llvm.dbg.value(metadata i32 %3, metadata !16670, metadata !DIExpression()) #26, !dbg !16815
  call void @llvm.dbg.value(metadata i32 undef, metadata !16668, metadata !DIExpression()) #26, !dbg !16815
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #28, !dbg !16821
  call void @llvm.dbg.value(metadata i32 %3, metadata !15726, metadata !DIExpression()) #26, !dbg !16822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16822
  call void @llvm.dbg.value(metadata i32 %3, metadata !15734, metadata !DIExpression()) #26, !dbg !16824
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16826, !srcloc !15740
  call void @llvm.dbg.value(metadata i32 1, metadata !16668, metadata !DIExpression()) #26, !dbg !16815
  call void @llvm.dbg.value(metadata i32 undef, metadata !16668, metadata !DIExpression()) #26, !dbg !16815
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !16827
  ret void, !dbg !16828
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16829 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16831, metadata !DIExpression()), !dbg !16837
  call void @llvm.dbg.value(metadata i32 %1, metadata !16832, metadata !DIExpression()), !dbg !16837
  call void @llvm.dbg.value(metadata i8 0, metadata !16833, metadata !DIExpression()), !dbg !16837
  call void @llvm.dbg.value(metadata i32 0, metadata !16834, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16839
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16841, !srcloc !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #26, !dbg !16843
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16843
  call void @llvm.dbg.value(metadata i32 undef, metadata !15705, metadata !DIExpression()) #26, !dbg !16839
  call void @llvm.dbg.value(metadata i32 undef, metadata !16836, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata i8 poison, metadata !16833, metadata !DIExpression()), !dbg !16837
  call void @llvm.dbg.value(metadata i32 undef, metadata !16834, metadata !DIExpression()), !dbg !16838
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !16844
  call void @llvm.dbg.value(metadata i1 %6, metadata !16833, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16837
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16847

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15868, metadata !DIExpression()) #26, !dbg !16848
  %11 = load i8, i8* %4, align 1, !dbg !16854
  %12 = and i8 %11, 127, !dbg !16854
  store i8 %12, i8* %4, align 1, !dbg !16854
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15876, metadata !DIExpression()) #26, !dbg !16855
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !16857
  store i8 %9, i8* %8, align 2, !dbg !16858
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15885, metadata !DIExpression()) #26, !dbg !16859
  %13 = load i8, i8* %4, align 1, !dbg !16861
  %14 = or i8 %13, -128, !dbg !16861
  store i8 %14, i8* %4, align 1, !dbg !16861
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15892, metadata !DIExpression()) #26, !dbg !16862
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15899, metadata !DIExpression()) #26, !dbg !16864
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15905, metadata !DIExpression()) #26, !dbg !16864
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.232(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !16866
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15906, metadata !DIExpression()) #26, !dbg !16864
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16867
  br i1 %16, label %26, label %17, !dbg !16866

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15906, metadata !DIExpression()) #26, !dbg !16864
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16868
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15906, metadata !DIExpression()) #26, !dbg !16864
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #28, !dbg !16869
  %21 = icmp sgt i32 %20, 0, !dbg !16870
  br i1 %21, label %22, label %23, !dbg !16871

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #28, !dbg !16872
  br label %27, !dbg !16873

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #28, !dbg !16867
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15906, metadata !DIExpression()) #26, !dbg !16864
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16867
  br i1 %25, label %26, label %17, !dbg !16866, !llvm.loop !16874

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #28, !dbg !16876
  br label %27, !dbg !16877

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !16878
  br label %29, !dbg !16879

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16880
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16841
  call void @llvm.dbg.value(metadata i32 %30, metadata !15711, metadata !DIExpression()) #26, !dbg !16843
  call void @llvm.dbg.value(metadata i32 %30, metadata !15705, metadata !DIExpression()) #26, !dbg !16839
  call void @llvm.dbg.value(metadata i32 %30, metadata !16836, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()) #26, !dbg !16882
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16882
  call void @llvm.dbg.value(metadata i32 undef, metadata !15734, metadata !DIExpression()) #26, !dbg !16884
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #26, !dbg !16886, !srcloc !15740
  call void @llvm.dbg.value(metadata i8 poison, metadata !16833, metadata !DIExpression()), !dbg !16837
  call void @llvm.dbg.value(metadata i32 undef, metadata !16834, metadata !DIExpression()), !dbg !16838
  ret i1 %6, !dbg !16887
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16888 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16892, metadata !DIExpression()), !dbg !16895
  call void @llvm.dbg.value(metadata i32 %1, metadata !16893, metadata !DIExpression()), !dbg !16895
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !16896
  call void @llvm.dbg.value(metadata i1 %3, metadata !16894, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16895
  br i1 %3, label %4, label %12, !dbg !16897

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16899
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16900
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16900
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16900
  %9 = load i8, i8* %8, align 1, !dbg !16900
  %10 = icmp eq i8 %9, 0, !dbg !16901
  br i1 %10, label %11, label %12, !dbg !16902

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16903
  br label %12, !dbg !16905

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16906
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16907 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16909, metadata !DIExpression()), !dbg !16912
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16913
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16915, !srcloc !15714
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16915
  call void @llvm.dbg.value(metadata i32 %2, metadata !15711, metadata !DIExpression()) #26, !dbg !16917
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16917
  call void @llvm.dbg.value(metadata i32 %2, metadata !15705, metadata !DIExpression()) #26, !dbg !16913
  call void @llvm.dbg.value(metadata i32 %2, metadata !16911, metadata !DIExpression()), !dbg !16912
  call void @llvm.dbg.value(metadata i32 undef, metadata !16909, metadata !DIExpression()), !dbg !16912
  tail call fastcc void @z_sched_lock() #27, !dbg !16918
  call void @llvm.dbg.value(metadata i32 %2, metadata !15726, metadata !DIExpression()) #26, !dbg !16921
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16921
  call void @llvm.dbg.value(metadata i32 %2, metadata !15734, metadata !DIExpression()) #26, !dbg !16923
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !16925, !srcloc !15740
  call void @llvm.dbg.value(metadata i32 1, metadata !16909, metadata !DIExpression()), !dbg !16912
  call void @llvm.dbg.value(metadata i32 undef, metadata !16909, metadata !DIExpression()), !dbg !16912
  ret void, !dbg !16926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16927 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16928
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16929
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16929
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16929
  %5 = load i8, i8* %4, align 1, !dbg !16930
  %6 = add i8 %5, -1, !dbg !16930
  store i8 %6, i8* %4, align 1, !dbg !16930
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !16931, !srcloc !16933
  ret void, !dbg !16934
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16935 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16937, metadata !DIExpression()), !dbg !16940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !16941
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16943, !srcloc !15714
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16943
  call void @llvm.dbg.value(metadata i32 %2, metadata !15711, metadata !DIExpression()) #26, !dbg !16945
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !16945
  call void @llvm.dbg.value(metadata i32 %2, metadata !15705, metadata !DIExpression()) #26, !dbg !16941
  call void @llvm.dbg.value(metadata i32 %2, metadata !16939, metadata !DIExpression()), !dbg !16940
  call void @llvm.dbg.value(metadata i32 undef, metadata !16937, metadata !DIExpression()), !dbg !16940
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16946
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16949
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16949
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16949
  %7 = load i8, i8* %6, align 1, !dbg !16950
  %8 = add i8 %7, 1, !dbg !16950
  store i8 %8, i8* %6, align 1, !dbg !16950
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !16951
  call void @llvm.dbg.value(metadata i32 %2, metadata !15726, metadata !DIExpression()) #26, !dbg !16952
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !16952
  call void @llvm.dbg.value(metadata i32 %2, metadata !15734, metadata !DIExpression()) #26, !dbg !16954
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !16956, !srcloc !15740
  call void @llvm.dbg.value(metadata i32 1, metadata !16937, metadata !DIExpression()), !dbg !16940
  call void @llvm.dbg.value(metadata i32 undef, metadata !16937, metadata !DIExpression()), !dbg !16940
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16957
  ret void, !dbg !16958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #3 !dbg !16959 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16960
  ret %struct.k_thread* %1, !dbg !16961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #3 !dbg !16962 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16966, metadata !DIExpression()), !dbg !16971
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16967, metadata !DIExpression()), !dbg !16971
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16972
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16968, metadata !DIExpression()), !dbg !16971
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16973
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16969, metadata !DIExpression()), !dbg !16971
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !16974
  call void @llvm.dbg.value(metadata i32 %5, metadata !16970, metadata !DIExpression()), !dbg !16971
  %6 = icmp sgt i32 %5, 0, !dbg !16975
  br i1 %6, label %17, label %7, !dbg !16977

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16978
  br i1 %8, label %17, label %9, !dbg !16980

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16981
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16981
  %12 = load i32, i32* %11, align 8, !dbg !16981
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16983
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16983
  %15 = load i32, i32* %14, align 8, !dbg !16983
  %16 = icmp ult i32 %12, %15, !dbg !16984
  br label %17, !dbg !16985

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16986
  ret i1 %18, !dbg !16987
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16988 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17005, metadata !DIExpression()), !dbg !17020
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17006, metadata !DIExpression()), !dbg !17020
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17021
  %5 = load i32, i32* %4, align 4, !dbg !17022
  %6 = add nsw i32 %5, 1, !dbg !17022
  store i32 %6, i32* %4, align 4, !dbg !17022
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17023
  store i32 %5, i32* %7, align 8, !dbg !17024
  %8 = load i32, i32* %4, align 4, !dbg !17025
  %9 = icmp eq i32 %8, 0, !dbg !17026
  br i1 %9, label %10, label %32, !dbg !17027

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17028
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #26, !dbg !17028
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17008, metadata !DIExpression()), !dbg !17028
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17028
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17028
  %14 = load i32, i32* %13, align 4, !dbg !17028
  %15 = shl i32 %14, 2, !dbg !17028
  %16 = alloca i8, i32 %15, align 8, !dbg !17028
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17028
  store i8* %16, i8** %17, align 4, !dbg !17028
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17028
  %19 = alloca i8, i32 %14, align 8, !dbg !17028
  store i8* %19, i8** %18, align 4, !dbg !17028
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17028
  store i32 -1, i32* %20, align 4, !dbg !17028
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #28, !dbg !17029
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17017, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17007, metadata !DIExpression()), !dbg !17020
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !17031
  br i1 %22, label %23, label %24, !dbg !17028

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #26, !dbg !17031
  br label %32, !dbg !17032

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !17007, metadata !DIExpression()), !dbg !17020
  %26 = load i32, i32* %4, align 4, !dbg !17033
  %27 = add nsw i32 %26, 1, !dbg !17033
  store i32 %27, i32* %4, align 4, !dbg !17033
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !17035
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !17035
  store i32 %26, i32* %29, align 8, !dbg !17036
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #28, !dbg !17029
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17017, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17007, metadata !DIExpression()), !dbg !17020
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !17031
  br i1 %31, label %23, label %24, !dbg !17028, !llvm.loop !17037

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17039
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17040
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #28, !dbg !17041
  ret void, !dbg !17042
}

; Function Attrs: optsize
declare !dbg !17043 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17048 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17051 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17053, metadata !DIExpression()), !dbg !17055
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17054, metadata !DIExpression()), !dbg !17055
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17056
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17057
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #28, !dbg !17058
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17059
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !17059
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !17061
  br i1 %7, label %8, label %10, !dbg !17062

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17063
  store i32 0, i32* %9, align 4, !dbg !17065
  br label %10, !dbg !17066

10:                                               ; preds = %8, %2
  ret void, !dbg !17067
}

; Function Attrs: optsize
declare !dbg !17068 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17069 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17073, metadata !DIExpression()), !dbg !17076
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17074, metadata !DIExpression()), !dbg !17076
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17077
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !17078
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17075, metadata !DIExpression()), !dbg !17076
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17074, metadata !DIExpression()), !dbg !17076
  ret %struct.k_thread* %4, !dbg !17079
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17080 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17084, metadata !DIExpression()), !dbg !17085
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #28, !dbg !17086
  ret %struct.rbnode* %2, !dbg !17087
}

; Function Attrs: optsize
declare !dbg !17088 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !17091 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17103, metadata !DIExpression()), !dbg !17107
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17108
  %3 = load i32, i32* %2, align 4, !dbg !17108
  %4 = icmp eq i32 %3, 0, !dbg !17110
  br i1 %4, label %10, label %5, !dbg !17111

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17104, metadata !DIExpression()), !dbg !17107
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17112, !range !5059
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17113
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17105, metadata !DIExpression()), !dbg !17107
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.232(%struct._dnode* noundef %7) #27, !dbg !17114
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17106, metadata !DIExpression()), !dbg !17107
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17104, metadata !DIExpression()), !dbg !17107
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17107
  ret %struct.k_thread* %11, !dbg !17115
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17116 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17120, metadata !DIExpression()), !dbg !17123
  call void @llvm.dbg.value(metadata i32 0, metadata !17121, metadata !DIExpression()), !dbg !17123
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.257(%struct._wait_q_t* noundef %0) #27, !dbg !17124
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17122, metadata !DIExpression()), !dbg !17123
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17125
  br i1 %3, label %8, label %4, !dbg !17126

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !17127
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !17129
  call void @llvm.dbg.value(metadata i32 1, metadata !17121, metadata !DIExpression()), !dbg !17123
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.257(%struct._wait_q_t* noundef %0) #27, !dbg !17124
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17122, metadata !DIExpression()), !dbg !17123
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17125
  br i1 %7, label %8, label %4, !dbg !17126, !llvm.loop !17130

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17123
  ret i32 %9, !dbg !17132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.257(%struct._wait_q_t* noundef readonly %0) unnamed_addr #3 !dbg !17133 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17135, metadata !DIExpression()), !dbg !17136
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17137
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.232(%struct._dnode* noundef %2) #27, !dbg !17138
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17139
  ret %struct.k_thread* %4, !dbg !17140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !17141 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17150, metadata !DIExpression()), !dbg !17151
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17152
  tail call fastcc void @sys_dlist_init.258(%struct._dnode* noundef nonnull %2) #27, !dbg !17153
  ret void, !dbg !17154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.258(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17155 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17159, metadata !DIExpression()), !dbg !17160
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17161
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17162
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17163
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17164
  ret void, !dbg !17165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17166 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !17167
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !17168
  ret void, !dbg !17169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #3 !dbg !17170 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17175, metadata !DIExpression()), !dbg !17176
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17177
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17177
  %4 = load i8, i8* %3, align 2, !dbg !17177
  %5 = sext i8 %4 to i32, !dbg !17178
  ret i32 %5, !dbg !17179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17180 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17184, metadata !DIExpression()), !dbg !17187
  call void @llvm.dbg.value(metadata i32 %1, metadata !17185, metadata !DIExpression()), !dbg !17187
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17186, metadata !DIExpression()), !dbg !17187
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !17188
  ret void, !dbg !17189
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17190 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !17191
  br i1 %1, label %8, label %2, !dbg !17192

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #28, !dbg !17193
  br i1 %3, label %8, label %4, !dbg !17194

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17195
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !17196
  %7 = xor i1 %6, true, !dbg !17194
  br label %8, !dbg !17194

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #3 !dbg !17198 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17199, !range !7719
  %2 = icmp eq i8 %1, 0, !dbg !17199
  ret i1 %2, !dbg !17200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17201 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !17204
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17206, !srcloc !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #26, !dbg !17208
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !17208
  call void @llvm.dbg.value(metadata i32 undef, metadata !15705, metadata !DIExpression()) #26, !dbg !17204
  call void @llvm.dbg.value(metadata i32 undef, metadata !17203, metadata !DIExpression()), !dbg !17209
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17210
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15868, metadata !DIExpression()) #26, !dbg !17213
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !17215
  %4 = load i8, i8* %3, align 1, !dbg !17216
  %5 = and i8 %4, 127, !dbg !17216
  store i8 %5, i8* %3, align 1, !dbg !17216
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15876, metadata !DIExpression()) #26, !dbg !17217
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #28, !dbg !17219
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17220
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15885, metadata !DIExpression()) #26, !dbg !17221
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !17223
  %8 = load i8, i8* %7, align 1, !dbg !17224
  %9 = or i8 %8, -128, !dbg !17224
  store i8 %9, i8* %7, align 1, !dbg !17224
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15892, metadata !DIExpression()) #26, !dbg !17225
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15899, metadata !DIExpression()) #26, !dbg !17227
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15905, metadata !DIExpression()) #26, !dbg !17227
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.232(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !17229
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15906, metadata !DIExpression()) #26, !dbg !17227
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17230
  br i1 %11, label %22, label %12, !dbg !17229

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15906, metadata !DIExpression()) #26, !dbg !17227
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17231
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15906, metadata !DIExpression()) #26, !dbg !17227
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #28, !dbg !17232
  %16 = icmp sgt i32 %15, 0, !dbg !17233
  br i1 %16, label %17, label %19, !dbg !17234

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17235
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #28, !dbg !17236
  br label %24, !dbg !17237

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #28, !dbg !17230
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15906, metadata !DIExpression()) #26, !dbg !17227
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17230
  br i1 %21, label %22, label %12, !dbg !17229, !llvm.loop !17238

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17240
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #28, !dbg !17241
  br label %24, !dbg !17242

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !17206
  call void @llvm.dbg.value(metadata i32 %25, metadata !15711, metadata !DIExpression()) #26, !dbg !17208
  call void @llvm.dbg.value(metadata i32 %25, metadata !15705, metadata !DIExpression()) #26, !dbg !17204
  call void @llvm.dbg.value(metadata i32 %25, metadata !17203, metadata !DIExpression()), !dbg !17209
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !17243
  call void @llvm.dbg.value(metadata i32 undef, metadata !16308, metadata !DIExpression()) #26, !dbg !17244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16313, metadata !DIExpression()) #26, !dbg !17244
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #28, !dbg !17246
  ret void, !dbg !17247
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17248 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17252, metadata !DIExpression()), !dbg !17255
  %3 = icmp eq i64 %2, -1, !dbg !17256
  br i1 %3, label %4, label %6, !dbg !17258

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17259
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #27, !dbg !17261
  br label %11, !dbg !17262

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17253, metadata !DIExpression()), !dbg !17255
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !17263
  %8 = sext i32 %7 to i64, !dbg !17263
  call void @llvm.dbg.value(metadata i64 %8, metadata !17253, metadata !DIExpression()), !dbg !17255
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #27, !dbg !17264
  %10 = trunc i64 %9 to i32, !dbg !17264
  call void @llvm.dbg.value(metadata i32 %10, metadata !17254, metadata !DIExpression()), !dbg !17255
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !17255
  ret i32 %12, !dbg !17265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17266 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17270, metadata !DIExpression()), !dbg !17271
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17272, !srcloc !17274
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !17275
  ret void, !dbg !17276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17277 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17281, metadata !DIExpression()), !dbg !17285
  %2 = icmp eq i64 %0, 0, !dbg !17286
  br i1 %2, label %3, label %4, !dbg !17288

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #27, !dbg !17289
  br label %29, !dbg !17291

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17283, metadata !DIExpression()), !dbg !17285
  %5 = icmp sgt i64 %0, -3, !dbg !17292
  br i1 %5, label %6, label %10, !dbg !17294

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #28, !dbg !17295
  %8 = trunc i64 %0 to i32, !dbg !17297
  %9 = add i32 %7, %8, !dbg !17297
  call void @llvm.dbg.value(metadata i32 %9, metadata !17282, metadata !DIExpression()), !dbg !17285
  br label %13, !dbg !17298

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17299
  %12 = sub i32 -2, %11, !dbg !17299
  call void @llvm.dbg.value(metadata i32 %12, metadata !17282, metadata !DIExpression()), !dbg !17285
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17301
  call void @llvm.dbg.value(metadata i32 %14, metadata !17282, metadata !DIExpression()), !dbg !17285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !17302
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17304, !srcloc !15714
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17304
  call void @llvm.dbg.value(metadata i32 %16, metadata !15711, metadata !DIExpression()) #26, !dbg !17306
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !17306
  call void @llvm.dbg.value(metadata i32 %16, metadata !15705, metadata !DIExpression()) #26, !dbg !17302
  call void @llvm.dbg.value(metadata i32 %16, metadata !17284, metadata !DIExpression()), !dbg !17285
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17307
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17308
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #27, !dbg !17309
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17310
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17311
  tail call fastcc void @z_add_thread_timeout.244(%struct.k_thread* noundef %18, [1 x i64] %19) #27, !dbg !17311
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17312
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #27, !dbg !17313
  call void @llvm.dbg.value(metadata i32 %16, metadata !16308, metadata !DIExpression()) #26, !dbg !17314
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16313, metadata !DIExpression()) #26, !dbg !17314
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #28, !dbg !17316
  %22 = zext i32 %14 to i64, !dbg !17317
  %23 = tail call i32 @sys_clock_tick_get_32() #28, !dbg !17318
  %24 = zext i32 %23 to i64, !dbg !17318
  %25 = sub nsw i64 %22, %24, !dbg !17319
  call void @llvm.dbg.value(metadata i64 %25, metadata !17281, metadata !DIExpression()), !dbg !17285
  %26 = icmp sgt i64 %25, 0, !dbg !17320
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17320
  %28 = trunc i64 %27 to i32, !dbg !17320
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17285
  ret i32 %30, !dbg !17321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17322 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17324, metadata !DIExpression()), !dbg !17325
  call void @llvm.dbg.value(metadata i64 %0, metadata !15746, metadata !DIExpression()), !dbg !17326
  call void @llvm.dbg.value(metadata i32 10000, metadata !15749, metadata !DIExpression()), !dbg !17326
  call void @llvm.dbg.value(metadata i32 1000, metadata !15750, metadata !DIExpression()), !dbg !17326
  call void @llvm.dbg.value(metadata i8 1, metadata !15751, metadata !DIExpression()), !dbg !17326
  call void @llvm.dbg.value(metadata i1 false, metadata !15752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17326
  call void @llvm.dbg.value(metadata i1 false, metadata !15753, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17326
  call void @llvm.dbg.value(metadata i8 0, metadata !15754, metadata !DIExpression()), !dbg !17326
  call void @llvm.dbg.value(metadata i1 false, metadata !15755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17326
  call void @llvm.dbg.value(metadata i1 true, metadata !15756, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17326
  call void @llvm.dbg.value(metadata i64 0, metadata !15757, metadata !DIExpression()), !dbg !17326
  call void @llvm.dbg.value(metadata i64 0, metadata !15757, metadata !DIExpression()), !dbg !17326
  call void @llvm.dbg.value(metadata i64 %0, metadata !15746, metadata !DIExpression()), !dbg !17326
  %2 = udiv i64 %0, 10, !dbg !17328
  ret i64 %2, !dbg !17332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17333 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17334, !srcloc !17336
  tail call void @z_impl_k_yield() #27, !dbg !17337
  ret void, !dbg !17338
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17343, metadata !DIExpression()), !dbg !17345
  %2 = sext i32 %0 to i64, !dbg !17346
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !17347
  call void @llvm.dbg.value(metadata i64 %3, metadata !17344, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17345
  %4 = shl i64 %3, 32, !dbg !17348
  %5 = ashr exact i64 %4, 32, !dbg !17348
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !17349
  call void @llvm.dbg.value(metadata i32 %6, metadata !17344, metadata !DIExpression()), !dbg !17345
  %7 = sext i32 %6 to i64, !dbg !17350
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !17351
  %9 = trunc i64 %8 to i32, !dbg !17351
  ret i32 %9, !dbg !17352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !17353 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17355, metadata !DIExpression()), !dbg !17356
  call void @llvm.dbg.value(metadata i64 %0, metadata !15746, metadata !DIExpression()), !dbg !17357
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15749, metadata !DIExpression()), !dbg !17357
  call void @llvm.dbg.value(metadata i32 10000, metadata !15750, metadata !DIExpression()), !dbg !17357
  call void @llvm.dbg.value(metadata i8 1, metadata !15751, metadata !DIExpression()), !dbg !17357
  call void @llvm.dbg.value(metadata i1 false, metadata !15752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17357
  call void @llvm.dbg.value(metadata i1 true, metadata !15753, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17357
  call void @llvm.dbg.value(metadata i8 0, metadata !15754, metadata !DIExpression()), !dbg !17357
  call void @llvm.dbg.value(metadata i1 false, metadata !15755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17357
  call void @llvm.dbg.value(metadata i1 true, metadata !15756, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17357
  call void @llvm.dbg.value(metadata i64 0, metadata !15757, metadata !DIExpression()), !dbg !17357
  call void @llvm.dbg.value(metadata i64 0, metadata !15757, metadata !DIExpression()), !dbg !17357
  %2 = add i64 %0, 99, !dbg !17359
  call void @llvm.dbg.value(metadata i64 %2, metadata !15746, metadata !DIExpression()), !dbg !17357
  %3 = udiv i64 %2, 100, !dbg !17360
  ret i64 %3, !dbg !17361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17362 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17364, metadata !DIExpression()), !dbg !17365
  call void @llvm.dbg.value(metadata i64 %0, metadata !15746, metadata !DIExpression()), !dbg !17366
  call void @llvm.dbg.value(metadata i32 10000, metadata !15749, metadata !DIExpression()), !dbg !17366
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15750, metadata !DIExpression()), !dbg !17366
  call void @llvm.dbg.value(metadata i8 1, metadata !15751, metadata !DIExpression()), !dbg !17366
  call void @llvm.dbg.value(metadata i1 false, metadata !15752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17366
  call void @llvm.dbg.value(metadata i1 false, metadata !15753, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17366
  call void @llvm.dbg.value(metadata i8 0, metadata !15754, metadata !DIExpression()), !dbg !17366
  call void @llvm.dbg.value(metadata i1 true, metadata !15755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17366
  call void @llvm.dbg.value(metadata i1 false, metadata !15756, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17366
  call void @llvm.dbg.value(metadata i64 0, metadata !15757, metadata !DIExpression()), !dbg !17366
  call void @llvm.dbg.value(metadata i64 0, metadata !15757, metadata !DIExpression()), !dbg !17366
  %2 = mul i64 %0, 100, !dbg !17368
  ret i64 %2, !dbg !17370
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17371 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17373, metadata !DIExpression()), !dbg !17374
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !17375
  br i1 %2, label %14, label %3, !dbg !17377

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !17378
  %5 = icmp slt i32 %4, 0, !dbg !17380
  br i1 %5, label %6, label %10, !dbg !17381

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17382
  %8 = load i8, i8* %7, align 1, !dbg !17382
  %9 = icmp eq i8 %8, 16, !dbg !17385
  br i1 %9, label %10, label %14, !dbg !17386

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !17387
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !17388
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17389, !srcloc !16348
  call void @llvm.dbg.value(metadata i32 %11, metadata !16344, metadata !DIExpression()) #26, !dbg !17393
  %12 = icmp eq i32 %11, 0, !dbg !17394
  br i1 %12, label %13, label %14, !dbg !17395

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !17396
  br label %14, !dbg !17398

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !17400 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17402, metadata !DIExpression()), !dbg !17403
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17404
  %3 = load i8, i8* %2, align 1, !dbg !17404
  %4 = and i8 %3, 2, !dbg !17405
  %5 = icmp ne i8 %4, 0, !dbg !17406
  ret i1 %5, !dbg !17407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #3 !dbg !17408 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17413
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17412, metadata !DIExpression()), !dbg !17414
  ret %struct.k_thread* %1, !dbg !17415
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17416 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17417, !srcloc !16348
  call void @llvm.dbg.value(metadata i32 %1, metadata !16344, metadata !DIExpression()) #26, !dbg !17420
  %2 = icmp eq i32 %1, 0, !dbg !17421
  br i1 %2, label %3, label %8, !dbg !17422

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17423
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !17424
  %6 = icmp ne i32 %5, 0, !dbg !17422
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17425
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17426 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17428, metadata !DIExpression()), !dbg !17430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !17431
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17433, !srcloc !15714
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17433
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #26, !dbg !17435
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !17435
  call void @llvm.dbg.value(metadata i32 %3, metadata !15705, metadata !DIExpression()) #26, !dbg !17431
  call void @llvm.dbg.value(metadata i32 %3, metadata !17429, metadata !DIExpression()), !dbg !17430
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17436
  %5 = load i8, i8* %4, align 4, !dbg !17436
  %6 = and i8 %5, 1, !dbg !17438
  %7 = icmp eq i8 %6, 0, !dbg !17439
  br i1 %7, label %9, label %8, !dbg !17440

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15726, metadata !DIExpression()) #26, !dbg !17441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !17441
  call void @llvm.dbg.value(metadata i32 %3, metadata !15734, metadata !DIExpression()) #26, !dbg !17444
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !17446, !srcloc !15740
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #26, !dbg !17447, !srcloc !17449
  br label %24, !dbg !17450

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17451
  %11 = load i8, i8* %10, align 1, !dbg !17451
  %12 = and i8 %11, 8, !dbg !17453
  %13 = icmp eq i8 %12, 0, !dbg !17454
  br i1 %13, label %15, label %14, !dbg !17455

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15726, metadata !DIExpression()) #26, !dbg !17456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !17456
  call void @llvm.dbg.value(metadata i32 %3, metadata !15734, metadata !DIExpression()) #26, !dbg !17459
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !17461, !srcloc !15740
  br label %24, !dbg !17462

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !17463
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17464
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17466
  br i1 %17, label %18, label %23, !dbg !17467

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17468, !srcloc !16348
  call void @llvm.dbg.value(metadata i32 %19, metadata !16344, metadata !DIExpression()) #26, !dbg !17471
  %20 = icmp eq i32 %19, 0, !dbg !17472
  br i1 %20, label %21, label %23, !dbg !17473

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16308, metadata !DIExpression()) #26, !dbg !17474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16313, metadata !DIExpression()) #26, !dbg !17474
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #28, !dbg !17477
  br label %23, !dbg !17478

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15726, metadata !DIExpression()) #26, !dbg !17479
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !17479
  call void @llvm.dbg.value(metadata i32 %3, metadata !15734, metadata !DIExpression()) #26, !dbg !17481
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !17483, !srcloc !15740
  br label %24, !dbg !17484

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17484
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17487, metadata !DIExpression()), !dbg !17488
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17489
  %3 = load i8, i8* %2, align 1, !dbg !17489
  %4 = and i8 %3, 8, !dbg !17491
  %5 = icmp eq i8 %4, 0, !dbg !17492
  br i1 %5, label %6, label %20, !dbg !17493

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17494
  %8 = or i8 %7, 8, !dbg !17494
  store i8 %8, i8* %2, align 1, !dbg !17494
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !17496
  br i1 %9, label %10, label %12, !dbg !17498

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15868, metadata !DIExpression()) #26, !dbg !17499
  %11 = and i8 %8, 95, !dbg !17502
  store i8 %11, i8* %2, align 1, !dbg !17502
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15876, metadata !DIExpression()) #26, !dbg !17503
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #28, !dbg !17505
  br label %12, !dbg !17506

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17507
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !17507
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !17509
  br i1 %15, label %17, label %16, !dbg !17510

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !17511
  br label %17, !dbg !17513

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !17514
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17515
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #27, !dbg !17516
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !17517
  br label %20, !dbg !17518

20:                                               ; preds = %17, %1
  ret void, !dbg !17519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !17520 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17524, metadata !DIExpression()), !dbg !17526
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.257(%struct._wait_q_t* noundef %0) #27, !dbg !17527
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17525, metadata !DIExpression()), !dbg !17526
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17528
  br i1 %3, label %10, label %4, !dbg !17529

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !17530
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !17532
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17533, metadata !DIExpression()), !dbg !17539
  call void @llvm.dbg.value(metadata i32 0, metadata !17538, metadata !DIExpression()), !dbg !17539
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17541
  store i32 0, i32* %7, align 4, !dbg !17542
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !17543
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.257(%struct._wait_q_t* noundef %0) #27, !dbg !17527
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17525, metadata !DIExpression()), !dbg !17526
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17528
  br i1 %9, label %10, label %4, !dbg !17529, !llvm.loop !17544

10:                                               ; preds = %4, %1
  ret void, !dbg !17546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17547 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17552, metadata !DIExpression()), !dbg !17555
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17551, metadata !DIExpression()), !dbg !17555
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !17556
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17558, !srcloc !15714
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17558
  call void @llvm.dbg.value(metadata i32 %4, metadata !15711, metadata !DIExpression()) #26, !dbg !17560
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !17560
  call void @llvm.dbg.value(metadata i32 %4, metadata !15705, metadata !DIExpression()) #26, !dbg !17556
  call void @llvm.dbg.value(metadata i32 %4, metadata !17553, metadata !DIExpression()), !dbg !17555
  call void @llvm.dbg.value(metadata i32 0, metadata !17554, metadata !DIExpression()), !dbg !17555
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17561
  %6 = load i8, i8* %5, align 1, !dbg !17561
  %7 = and i8 %6, 8, !dbg !17563
  %8 = icmp eq i8 %7, 0, !dbg !17564
  br i1 %8, label %9, label %24, !dbg !17565

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17552, metadata !DIExpression()), !dbg !17555
  %11 = icmp eq i64 %10, 0, !dbg !17566
  br i1 %11, label %24, label %12, !dbg !17568

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17569
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17571
  br i1 %14, label %24, label %15, !dbg !17572

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17573
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !17573
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17574
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !17575
  br i1 %19, label %24, label %20, !dbg !17576

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17577
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #27, !dbg !17579
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17580
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #27, !dbg !17581
  call void @llvm.dbg.value(metadata i32 %4, metadata !16308, metadata !DIExpression()) #26, !dbg !17582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16313, metadata !DIExpression()) #26, !dbg !17582
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #28, !dbg !17584
  call void @llvm.dbg.value(metadata i32 %23, metadata !17554, metadata !DIExpression()), !dbg !17555
  br label %26, !dbg !17585

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17586
  call void @llvm.dbg.value(metadata i32 %25, metadata !17554, metadata !DIExpression()), !dbg !17555
  call void @llvm.dbg.value(metadata i32 %4, metadata !15726, metadata !DIExpression()) #26, !dbg !17587
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !17587
  call void @llvm.dbg.value(metadata i32 %4, metadata !15734, metadata !DIExpression()) #26, !dbg !17589
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #26, !dbg !17591, !srcloc !15740
  br label %26, !dbg !17592

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17555
  ret i32 %27, !dbg !17593
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17594 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17598, metadata !DIExpression()), !dbg !17606
  call void @llvm.dbg.value(metadata i32 %1, metadata !17599, metadata !DIExpression()), !dbg !17606
  call void @llvm.dbg.value(metadata i8* %2, metadata !17600, metadata !DIExpression()), !dbg !17606
  call void @llvm.dbg.value(metadata i8 0, metadata !17602, metadata !DIExpression()), !dbg !17606
  call void @llvm.dbg.value(metadata i32 0, metadata !17603, metadata !DIExpression()), !dbg !17607
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15699, metadata !DIExpression()) #26, !dbg !17608
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17610, !srcloc !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #26, !dbg !17612
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()) #26, !dbg !17612
  call void @llvm.dbg.value(metadata i32 undef, metadata !15705, metadata !DIExpression()) #26, !dbg !17608
  call void @llvm.dbg.value(metadata i32 undef, metadata !17605, metadata !DIExpression()), !dbg !17607
  call void @llvm.dbg.value(metadata i8 poison, metadata !17602, metadata !DIExpression()), !dbg !17606
  call void @llvm.dbg.value(metadata i32 undef, metadata !17603, metadata !DIExpression()), !dbg !17607
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #27, !dbg !17613
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17601, metadata !DIExpression()), !dbg !17606
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17616
  br i1 %7, label %12, label %8, !dbg !17618

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17619, metadata !DIExpression()), !dbg !17626
  call void @llvm.dbg.value(metadata i32 %1, metadata !17624, metadata !DIExpression()), !dbg !17626
  call void @llvm.dbg.value(metadata i8* %2, metadata !17625, metadata !DIExpression()), !dbg !17626
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17533, metadata !DIExpression()), !dbg !17629
  call void @llvm.dbg.value(metadata i32 %1, metadata !17538, metadata !DIExpression()), !dbg !17629
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17631
  store i32 %1, i32* %9, align 4, !dbg !17632
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17633
  store i8* %2, i8** %10, align 4, !dbg !17634
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !17635
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !17636
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #27, !dbg !17637
  call void @llvm.dbg.value(metadata i8 1, metadata !17602, metadata !DIExpression()), !dbg !17606
  br label %12, !dbg !17638

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17610
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17610
  call void @llvm.dbg.value(metadata i32 %14, metadata !15711, metadata !DIExpression()) #26, !dbg !17612
  call void @llvm.dbg.value(metadata i32 %14, metadata !15705, metadata !DIExpression()) #26, !dbg !17608
  call void @llvm.dbg.value(metadata i32 %14, metadata !17605, metadata !DIExpression()), !dbg !17607
  call void @llvm.dbg.value(metadata i8 poison, metadata !17602, metadata !DIExpression()), !dbg !17606
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()) #26, !dbg !17639
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()) #26, !dbg !17639
  call void @llvm.dbg.value(metadata i32 undef, metadata !15734, metadata !DIExpression()) #26, !dbg !17641
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !17643, !srcloc !15740
  call void @llvm.dbg.value(metadata i32 undef, metadata !17603, metadata !DIExpression()), !dbg !17607
  ret i1 %13, !dbg !17644
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17645 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17651, metadata !DIExpression()), !dbg !17656
  call void @llvm.dbg.value(metadata i64 undef, metadata !17653, metadata !DIExpression()), !dbg !17656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17650, metadata !DIExpression()), !dbg !17656
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17652, metadata !DIExpression()), !dbg !17656
  call void @llvm.dbg.value(metadata i8** %4, metadata !17654, metadata !DIExpression()), !dbg !17656
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !17657
  call void @llvm.dbg.value(metadata i32 %6, metadata !17655, metadata !DIExpression()), !dbg !17656
  %7 = icmp eq i8** %4, null, !dbg !17658
  br i1 %7, label %12, label %8, !dbg !17660

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17661
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17663
  %11 = load i8*, i8** %10, align 4, !dbg !17663
  store i8* %11, i8** %4, align 4, !dbg !17664
  br label %12, !dbg !17665

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17667 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #28, !dbg !17669
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #28, !dbg !17670
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #28, !dbg !17671
  ret void, !dbg !17672
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17673 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17683, metadata !DIExpression()), !dbg !17700
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17681, metadata !DIExpression()), !dbg !17700
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17682, metadata !DIExpression()), !dbg !17700
  %5 = icmp eq i64 %4, -1, !dbg !17701
  br i1 %5, label %55, label %6, !dbg !17703

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17704
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17705
  call void @llvm.dbg.value(metadata i32 0, metadata !17684, metadata !DIExpression()), !dbg !17706
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17707, metadata !DIExpression()) #26, !dbg !17714
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17716, !srcloc !17722
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17716
  call void @llvm.dbg.value(metadata i32 %9, metadata !17719, metadata !DIExpression()) #26, !dbg !17723
  call void @llvm.dbg.value(metadata i32 undef, metadata !17720, metadata !DIExpression()) #26, !dbg !17723
  call void @llvm.dbg.value(metadata i32 %9, metadata !17713, metadata !DIExpression()) #26, !dbg !17714
  call void @llvm.dbg.value(metadata i32 %9, metadata !17690, metadata !DIExpression()), !dbg !17706
  call void @llvm.dbg.value(metadata i32 undef, metadata !17684, metadata !DIExpression()), !dbg !17706
  %10 = icmp slt i64 %4, -1, !dbg !17724
  br i1 %10, label %11, label %17, !dbg !17725

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17726
  %13 = add i64 %4, %12, !dbg !17727
  %14 = sub i64 -2, %13, !dbg !17727
  call void @llvm.dbg.value(metadata i64 %14, metadata !17694, metadata !DIExpression()), !dbg !17728
  %15 = icmp sgt i64 %14, 1, !dbg !17729
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17729
  br label %22, !dbg !17730

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17731
  %19 = tail call fastcc i32 @elapsed.271() #27, !dbg !17733
  %20 = sext i32 %19 to i64, !dbg !17733
  %21 = add nsw i64 %18, %20, !dbg !17734
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17735
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17736
  store i64 %23, i64* %24, align 8, !dbg !17737
  %25 = tail call fastcc %struct._timeout* @first() #27, !dbg !17738
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17691, metadata !DIExpression()), !dbg !17740
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17741
  br i1 %26, label %42, label %27, !dbg !17741

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17742
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17691, metadata !DIExpression()), !dbg !17740
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17746
  %31 = load i64, i64* %30, align 8, !dbg !17746
  %32 = icmp slt i64 %28, %31, !dbg !17747
  br i1 %32, label %33, label %38, !dbg !17748

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17746
  %35 = sub nsw i64 %31, %28, !dbg !17749
  store i64 %35, i64* %34, align 8, !dbg !17749
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17751
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17752
  tail call fastcc void @sys_dlist_insert.272(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #27, !dbg !17753
  br label %44, !dbg !17754

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17755
  store i64 %39, i64* %24, align 8, !dbg !17755
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #27, !dbg !17756
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17691, metadata !DIExpression()), !dbg !17740
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17741
  br i1 %41, label %42, label %27, !dbg !17741, !llvm.loop !17757

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17759
  tail call fastcc void @sys_dlist_append.273(%struct._dnode* noundef %43) #27, !dbg !17762
  br label %44, !dbg !17763

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #27, !dbg !17764
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17765
  br i1 %46, label %47, label %54, !dbg !17766

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #27, !dbg !17767
  call void @llvm.dbg.value(metadata i32 %48, metadata !17697, metadata !DIExpression()), !dbg !17768
  %49 = icmp ne i32 %48, 0, !dbg !17769
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17771
  br i1 %52, label %54, label %53, !dbg !17771

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #28, !dbg !17772
  br label %54, !dbg !17774

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17775, metadata !DIExpression()) #26, !dbg !17781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17780, metadata !DIExpression()) #26, !dbg !17781
  call void @llvm.dbg.value(metadata i32 %9, metadata !17783, metadata !DIExpression()) #26, !dbg !17786
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !17788, !srcloc !17789
  call void @llvm.dbg.value(metadata i32 undef, metadata !17684, metadata !DIExpression()), !dbg !17706
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.271() unnamed_addr #1 !dbg !17791 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17794
  %2 = icmp eq i32 %1, 0, !dbg !17795
  br i1 %2, label %3, label %5, !dbg !17794

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #28, !dbg !17796
  br label %5, !dbg !17794

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17794
  ret i32 %6, !dbg !17797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #3 !dbg !17798 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.276() #27, !dbg !17804
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17802, metadata !DIExpression()), !dbg !17805
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17806
  ret %struct._timeout* %2, !dbg !17807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.272(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !17808 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17812, metadata !DIExpression()), !dbg !17816
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17813, metadata !DIExpression()), !dbg !17816
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17817
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17817
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17814, metadata !DIExpression()), !dbg !17816
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17818
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17819
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17820
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17821
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17822
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17823
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17824
  ret void, !dbg !17825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #3 !dbg !17826 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17830, metadata !DIExpression()), !dbg !17832
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17833
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.274(%struct._dnode* noundef %2) #27, !dbg !17834
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17831, metadata !DIExpression()), !dbg !17832
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17835
  ret %struct._timeout* %4, !dbg !17836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.273(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !17837 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17842, metadata !DIExpression()), !dbg !17845
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17843, metadata !DIExpression()), !dbg !17845
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17846
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17844, metadata !DIExpression()), !dbg !17845
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17847
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17848
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17849
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17850
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17851
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17852
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17853
  ret void, !dbg !17854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17855 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !17860
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17857, metadata !DIExpression()), !dbg !17861
  %2 = tail call fastcc i32 @elapsed.271() #27, !dbg !17862
  call void @llvm.dbg.value(metadata i32 %2, metadata !17858, metadata !DIExpression()), !dbg !17861
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17863
  br i1 %3, label %14, label %4, !dbg !17865

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17866
  %6 = load i64, i64* %5, align 8, !dbg !17866
  %7 = sext i32 %2 to i64, !dbg !17867
  %8 = sub nsw i64 %6, %7, !dbg !17868
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17869
  br i1 %9, label %14, label %10, !dbg !17870

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17871
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17871
  %13 = trunc i64 %12 to i32, !dbg !17871
  call void @llvm.dbg.value(metadata i32 %13, metadata !17859, metadata !DIExpression()), !dbg !17861
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17873
  call void @llvm.dbg.value(metadata i32 %15, metadata !17859, metadata !DIExpression()), !dbg !17861
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17874
  %17 = icmp ne i32 %16, 0, !dbg !17876
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17877
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17877
  call void @llvm.dbg.value(metadata i32 %20, metadata !17859, metadata !DIExpression()), !dbg !17861
  ret i32 %20, !dbg !17878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.274(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !17879 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17883, metadata !DIExpression()), !dbg !17885
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17884, metadata !DIExpression()), !dbg !17885
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17886
  br i1 %2, label %5, label %3, !dbg !17887

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.275(%struct._dnode* noundef nonnull %0) #27, !dbg !17888
  br label %5, !dbg !17887

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17887
  ret %struct._dnode* %6, !dbg !17889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.275(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !17890 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17892, metadata !DIExpression()), !dbg !17894
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17893, metadata !DIExpression()), !dbg !17894
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17895
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17896
  br i1 %3, label %7, label %4, !dbg !17897

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17898
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17898
  br label %7, !dbg !17897

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17897
  ret %struct._dnode* %8, !dbg !17899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.276() unnamed_addr #3 !dbg !17900 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17904, metadata !DIExpression()), !dbg !17905
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.277() #27, !dbg !17906
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17906
  ret %struct._dnode* %3, !dbg !17907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.277() unnamed_addr #3 !dbg !17908 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17912, metadata !DIExpression()), !dbg !17913
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17914
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17915
  ret i1 %2, !dbg !17916
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17917 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17921, metadata !DIExpression()), !dbg !17926
  call void @llvm.dbg.value(metadata i32 -22, metadata !17922, metadata !DIExpression()), !dbg !17926
  call void @llvm.dbg.value(metadata i32 0, metadata !17923, metadata !DIExpression()), !dbg !17927
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17707, metadata !DIExpression()) #26, !dbg !17928
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17930, !srcloc !17722
  call void @llvm.dbg.value(metadata i32 undef, metadata !17719, metadata !DIExpression()) #26, !dbg !17932
  call void @llvm.dbg.value(metadata i32 undef, metadata !17720, metadata !DIExpression()) #26, !dbg !17932
  call void @llvm.dbg.value(metadata i32 undef, metadata !17713, metadata !DIExpression()) #26, !dbg !17928
  call void @llvm.dbg.value(metadata i32 undef, metadata !17925, metadata !DIExpression()), !dbg !17927
  call void @llvm.dbg.value(metadata i32 -22, metadata !17922, metadata !DIExpression()), !dbg !17926
  call void @llvm.dbg.value(metadata i32 undef, metadata !17923, metadata !DIExpression()), !dbg !17927
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17922, metadata !DIExpression()), !dbg !17926
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.280(%struct._dnode* noundef %3) #27, !dbg !17933
  br i1 %4, label %5, label %6, !dbg !17937

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !17938
  call void @llvm.dbg.value(metadata i32 0, metadata !17922, metadata !DIExpression()), !dbg !17926
  br label %6, !dbg !17940

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17926
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17930
  call void @llvm.dbg.value(metadata i32 %8, metadata !17719, metadata !DIExpression()) #26, !dbg !17932
  call void @llvm.dbg.value(metadata i32 %8, metadata !17713, metadata !DIExpression()) #26, !dbg !17928
  call void @llvm.dbg.value(metadata i32 %8, metadata !17925, metadata !DIExpression()), !dbg !17927
  call void @llvm.dbg.value(metadata i32 %7, metadata !17922, metadata !DIExpression()), !dbg !17926
  call void @llvm.dbg.value(metadata i32 undef, metadata !17775, metadata !DIExpression()) #26, !dbg !17941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17780, metadata !DIExpression()) #26, !dbg !17941
  call void @llvm.dbg.value(metadata i32 undef, metadata !17783, metadata !DIExpression()) #26, !dbg !17943
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !17945, !srcloc !17789
  call void @llvm.dbg.value(metadata i32 undef, metadata !17923, metadata !DIExpression()), !dbg !17927
  ret i32 %7, !dbg !17946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.280(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #3 !dbg !17947 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17953, metadata !DIExpression()), !dbg !17954
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17955
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17955
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17956
  ret i1 %4, !dbg !17957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #10 !dbg !17958 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17960, metadata !DIExpression()), !dbg !17961
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !17962
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17964
  br i1 %3, label %10, label %4, !dbg !17965

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17966
  %6 = load i64, i64* %5, align 8, !dbg !17966
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17968
  %8 = load i64, i64* %7, align 8, !dbg !17969
  %9 = add nsw i64 %8, %6, !dbg !17969
  store i64 %9, i64* %7, align 8, !dbg !17969
  br label %10, !dbg !17970

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17971
  tail call fastcc void @sys_dlist_remove.281(%struct._dnode* noundef %11) #27, !dbg !17972
  ret void, !dbg !17973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.281(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !17974 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17978, metadata !DIExpression()), !dbg !17981
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17982
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17982
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17979, metadata !DIExpression()), !dbg !17981
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17983
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17983
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17980, metadata !DIExpression()), !dbg !17981
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17984
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17985
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17986
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17987
  tail call fastcc void @sys_dnode_init.282(%struct._dnode* noundef %0) #27, !dbg !17988
  ret void, !dbg !17989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.282(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !17990 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17992, metadata !DIExpression()), !dbg !17993
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17994
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17995
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17996
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17997
  ret void, !dbg !17998
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17999 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18005, metadata !DIExpression()), !dbg !18010
  call void @llvm.dbg.value(metadata i64 0, metadata !18006, metadata !DIExpression()), !dbg !18010
  call void @llvm.dbg.value(metadata i32 0, metadata !18007, metadata !DIExpression()), !dbg !18011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17707, metadata !DIExpression()) #26, !dbg !18012
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18014, !srcloc !17722
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18014
  call void @llvm.dbg.value(metadata i32 %3, metadata !17719, metadata !DIExpression()) #26, !dbg !18016
  call void @llvm.dbg.value(metadata i32 undef, metadata !17720, metadata !DIExpression()) #26, !dbg !18016
  call void @llvm.dbg.value(metadata i32 %3, metadata !17713, metadata !DIExpression()) #26, !dbg !18012
  call void @llvm.dbg.value(metadata i32 %3, metadata !18009, metadata !DIExpression()), !dbg !18011
  call void @llvm.dbg.value(metadata i64 0, metadata !18006, metadata !DIExpression()), !dbg !18010
  call void @llvm.dbg.value(metadata i32 undef, metadata !18007, metadata !DIExpression()), !dbg !18011
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !18017
  call void @llvm.dbg.value(metadata i64 %4, metadata !18006, metadata !DIExpression()), !dbg !18010
  call void @llvm.dbg.value(metadata i32 %3, metadata !17775, metadata !DIExpression()) #26, !dbg !18020
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17780, metadata !DIExpression()) #26, !dbg !18020
  call void @llvm.dbg.value(metadata i32 %3, metadata !17783, metadata !DIExpression()) #26, !dbg !18022
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !18024, !srcloc !17789
  call void @llvm.dbg.value(metadata i32 undef, metadata !18007, metadata !DIExpression()), !dbg !18011
  ret i64 %4, !dbg !18025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18026 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18028, metadata !DIExpression()), !dbg !18032
  call void @llvm.dbg.value(metadata i64 0, metadata !18029, metadata !DIExpression()), !dbg !18032
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.283(%struct._timeout* noundef %0) #27, !dbg !18033
  br i1 %2, label %21, label %3, !dbg !18035

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !18036
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18030, metadata !DIExpression()), !dbg !18037
  call void @llvm.dbg.value(metadata i64 0, metadata !18029, metadata !DIExpression()), !dbg !18032
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18038
  br i1 %5, label %16, label %6, !dbg !18040

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18030, metadata !DIExpression()), !dbg !18037
  call void @llvm.dbg.value(metadata i64 %8, metadata !18029, metadata !DIExpression()), !dbg !18032
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18041
  %10 = load i64, i64* %9, align 8, !dbg !18041
  %11 = add nsw i64 %10, %8, !dbg !18043
  call void @llvm.dbg.value(metadata i64 %11, metadata !18029, metadata !DIExpression()), !dbg !18032
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18044
  br i1 %12, label %16, label %13, !dbg !18046

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !18047
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18030, metadata !DIExpression()), !dbg !18037
  call void @llvm.dbg.value(metadata i64 %11, metadata !18029, metadata !DIExpression()), !dbg !18032
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18038
  br i1 %15, label %16, label %6, !dbg !18040, !llvm.loop !18048

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18032
  call void @llvm.dbg.value(metadata i64 %17, metadata !18029, metadata !DIExpression()), !dbg !18032
  %18 = tail call fastcc i32 @elapsed.271() #27, !dbg !18050
  %19 = sext i32 %18 to i64, !dbg !18050
  %20 = sub nsw i64 %17, %19, !dbg !18051
  br label %21, !dbg !18052

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18032
  ret i64 %22, !dbg !18053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.283(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #3 !dbg !18054 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18058, metadata !DIExpression()), !dbg !18059
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18060
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.280(%struct._dnode* noundef %2) #27, !dbg !18061
  %4 = xor i1 %3, true, !dbg !18062
  ret i1 %4, !dbg !18063
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18064 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18066, metadata !DIExpression()), !dbg !18071
  call void @llvm.dbg.value(metadata i64 0, metadata !18067, metadata !DIExpression()), !dbg !18071
  call void @llvm.dbg.value(metadata i32 0, metadata !18068, metadata !DIExpression()), !dbg !18072
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17707, metadata !DIExpression()) #26, !dbg !18073
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18075, !srcloc !17722
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18075
  call void @llvm.dbg.value(metadata i32 %3, metadata !17719, metadata !DIExpression()) #26, !dbg !18077
  call void @llvm.dbg.value(metadata i32 undef, metadata !17720, metadata !DIExpression()) #26, !dbg !18077
  call void @llvm.dbg.value(metadata i32 %3, metadata !17713, metadata !DIExpression()) #26, !dbg !18073
  call void @llvm.dbg.value(metadata i32 %3, metadata !18070, metadata !DIExpression()), !dbg !18072
  call void @llvm.dbg.value(metadata i64 0, metadata !18067, metadata !DIExpression()), !dbg !18071
  call void @llvm.dbg.value(metadata i32 undef, metadata !18068, metadata !DIExpression()), !dbg !18072
  %4 = load i64, i64* @curr_tick, align 8, !dbg !18078
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !18081
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !18067, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18071
  call void @llvm.dbg.value(metadata i32 %3, metadata !17775, metadata !DIExpression()) #26, !dbg !18082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17780, metadata !DIExpression()) #26, !dbg !18082
  call void @llvm.dbg.value(metadata i32 %3, metadata !17783, metadata !DIExpression()) #26, !dbg !18084
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !18086, !srcloc !17789
  call void @llvm.dbg.value(metadata i32 undef, metadata !18068, metadata !DIExpression()), !dbg !18072
  %6 = add i64 %5, %4, !dbg !18087
  ret i64 %6, !dbg !18088
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18089 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18091, metadata !DIExpression()), !dbg !18095
  call void @llvm.dbg.value(metadata i32 0, metadata !18092, metadata !DIExpression()), !dbg !18096
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17707, metadata !DIExpression()) #26, !dbg !18097
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18099, !srcloc !17722
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18099
  call void @llvm.dbg.value(metadata i32 %2, metadata !17719, metadata !DIExpression()) #26, !dbg !18101
  call void @llvm.dbg.value(metadata i32 undef, metadata !17720, metadata !DIExpression()) #26, !dbg !18101
  call void @llvm.dbg.value(metadata i32 %2, metadata !17713, metadata !DIExpression()) #26, !dbg !18097
  call void @llvm.dbg.value(metadata i32 %2, metadata !18094, metadata !DIExpression()), !dbg !18096
  call void @llvm.dbg.value(metadata i32 -1, metadata !18091, metadata !DIExpression()), !dbg !18095
  call void @llvm.dbg.value(metadata i32 undef, metadata !18092, metadata !DIExpression()), !dbg !18096
  %3 = tail call fastcc i32 @next_timeout() #27, !dbg !18102
  call void @llvm.dbg.value(metadata i32 %3, metadata !18091, metadata !DIExpression()), !dbg !18095
  call void @llvm.dbg.value(metadata i32 %2, metadata !17775, metadata !DIExpression()) #26, !dbg !18105
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17780, metadata !DIExpression()) #26, !dbg !18105
  call void @llvm.dbg.value(metadata i32 %2, metadata !17783, metadata !DIExpression()) #26, !dbg !18107
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !18109, !srcloc !17789
  call void @llvm.dbg.value(metadata i32 undef, metadata !18092, metadata !DIExpression()), !dbg !18096
  ret i32 %3, !dbg !18110
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18113, metadata !DIExpression()), !dbg !18123
  call void @llvm.dbg.value(metadata i1 %1, metadata !18114, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18123
  call void @llvm.dbg.value(metadata i32 0, metadata !18115, metadata !DIExpression()), !dbg !18124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17707, metadata !DIExpression()) #26, !dbg !18125
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18127, !srcloc !17722
  call void @llvm.dbg.value(metadata i32 undef, metadata !17719, metadata !DIExpression()) #26, !dbg !18129
  call void @llvm.dbg.value(metadata i32 undef, metadata !17720, metadata !DIExpression()) #26, !dbg !18129
  call void @llvm.dbg.value(metadata i32 undef, metadata !17713, metadata !DIExpression()) #26, !dbg !18125
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()), !dbg !18124
  call void @llvm.dbg.value(metadata i32 undef, metadata !18115, metadata !DIExpression()), !dbg !18124
  %4 = tail call fastcc i32 @next_timeout() #27, !dbg !18130
  call void @llvm.dbg.value(metadata i32 %4, metadata !18118, metadata !DIExpression()), !dbg !18131
  call void @llvm.dbg.value(metadata i1 undef, metadata !18121, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18131
  %5 = icmp slt i32 %4, 2, !dbg !18132
  call void @llvm.dbg.value(metadata i1 %5, metadata !18122, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18131
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !18133
  call void @llvm.dbg.value(metadata i1 %6, metadata !18121, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18131
  br i1 %7, label %11, label %8, !dbg !18133

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !18135
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !18135
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #28, !dbg !18137
  br label %11, !dbg !18138

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !18127
  call void @llvm.dbg.value(metadata i32 %12, metadata !17719, metadata !DIExpression()) #26, !dbg !18129
  call void @llvm.dbg.value(metadata i32 %12, metadata !17713, metadata !DIExpression()) #26, !dbg !18125
  call void @llvm.dbg.value(metadata i32 %12, metadata !18117, metadata !DIExpression()), !dbg !18124
  call void @llvm.dbg.value(metadata i32 undef, metadata !17775, metadata !DIExpression()) #26, !dbg !18139
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17780, metadata !DIExpression()) #26, !dbg !18139
  call void @llvm.dbg.value(metadata i32 undef, metadata !17783, metadata !DIExpression()) #26, !dbg !18141
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #26, !dbg !18143, !srcloc !17789
  call void @llvm.dbg.value(metadata i32 1, metadata !18115, metadata !DIExpression()), !dbg !18124
  call void @llvm.dbg.value(metadata i32 undef, metadata !18115, metadata !DIExpression()), !dbg !18124
  ret void, !dbg !18144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18149, metadata !DIExpression()), !dbg !18154
  tail call void @z_time_slice(i32 noundef %0) #28, !dbg !18155
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17707, metadata !DIExpression()) #26, !dbg !18156
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18158, !srcloc !17722
  call void @llvm.dbg.value(metadata i32 undef, metadata !17719, metadata !DIExpression()) #26, !dbg !18160
  call void @llvm.dbg.value(metadata i32 undef, metadata !17720, metadata !DIExpression()) #26, !dbg !18160
  call void @llvm.dbg.value(metadata i32 undef, metadata !17713, metadata !DIExpression()) #26, !dbg !18156
  call void @llvm.dbg.value(metadata i32 undef, metadata !18150, metadata !DIExpression()), !dbg !18154
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18154
  call void @llvm.dbg.value(metadata i32 undef, metadata !18150, metadata !DIExpression()), !dbg !18154
  %3 = tail call fastcc %struct._timeout* @first() #27, !dbg !18161
  %4 = icmp eq %struct._timeout* %3, null, !dbg !18162
  br i1 %4, label %28, label %5, !dbg !18163

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !18164
  %10 = load i64, i64* %9, align 8, !dbg !18164
  %11 = sext i32 %8 to i64, !dbg !18165
  %12 = icmp sgt i64 %10, %11, !dbg !18166
  br i1 %12, label %26, label %13, !dbg !18167

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !18154
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !18151, metadata !DIExpression()), !dbg !18168
  %15 = trunc i64 %10 to i32, !dbg !18169
  call void @llvm.dbg.value(metadata i32 %15, metadata !18153, metadata !DIExpression()), !dbg !18168
  %16 = sext i32 %15 to i64, !dbg !18170
  %17 = load i64, i64* @curr_tick, align 8, !dbg !18171
  %18 = add i64 %17, %16, !dbg !18171
  store i64 %18, i64* @curr_tick, align 8, !dbg !18171
  store i64 0, i64* %9, align 8, !dbg !18172
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #27, !dbg !18173
  call void @llvm.dbg.value(metadata i32 %14, metadata !17775, metadata !DIExpression()) #26, !dbg !18174
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17780, metadata !DIExpression()) #26, !dbg !18174
  call void @llvm.dbg.value(metadata i32 %14, metadata !17783, metadata !DIExpression()) #26, !dbg !18176
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !18178, !srcloc !17789
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !18179
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !18179
  tail call void %20(%struct._timeout* noundef nonnull %6) #28, !dbg !18180
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17707, metadata !DIExpression()) #26, !dbg !18181
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18183, !srcloc !17722
  call void @llvm.dbg.value(metadata i32 undef, metadata !17719, metadata !DIExpression()) #26, !dbg !18185
  call void @llvm.dbg.value(metadata i32 undef, metadata !17720, metadata !DIExpression()) #26, !dbg !18185
  call void @llvm.dbg.value(metadata i32 undef, metadata !17713, metadata !DIExpression()) #26, !dbg !18181
  call void @llvm.dbg.value(metadata i32 undef, metadata !18150, metadata !DIExpression()), !dbg !18154
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !18186
  %23 = sub nsw i32 %22, %15, !dbg !18186
  store i32 %23, i32* @announce_remaining, align 4, !dbg !18154
  call void @llvm.dbg.value(metadata i32 undef, metadata !18150, metadata !DIExpression()), !dbg !18154
  %24 = tail call fastcc %struct._timeout* @first() #27, !dbg !18161
  %25 = icmp eq %struct._timeout* %24, null, !dbg !18162
  br i1 %25, label %28, label %5, !dbg !18163, !llvm.loop !18187

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !18189
  store i64 %27, i64* %9, align 8, !dbg !18189
  br label %32, !dbg !18192

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !18154
  %31 = sext i32 %30 to i64, !dbg !18193
  br label %32, !dbg !18193

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !18193
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !18154
  %36 = load i64, i64* @curr_tick, align 8, !dbg !18194
  %37 = add i64 %36, %33, !dbg !18194
  store i64 %37, i64* @curr_tick, align 8, !dbg !18194
  store i32 0, i32* @announce_remaining, align 4, !dbg !18195
  %38 = tail call fastcc i32 @next_timeout() #27, !dbg !18196
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #28, !dbg !18197
  call void @llvm.dbg.value(metadata i32 %35, metadata !17775, metadata !DIExpression()) #26, !dbg !18198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17780, metadata !DIExpression()) #26, !dbg !18198
  call void @llvm.dbg.value(metadata i32 %35, metadata !17783, metadata !DIExpression()) #26, !dbg !18200
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #26, !dbg !18202, !srcloc !17789
  ret void, !dbg !18203
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18204 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18208, metadata !DIExpression()), !dbg !18212
  call void @llvm.dbg.value(metadata i32 0, metadata !18209, metadata !DIExpression()), !dbg !18213
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17707, metadata !DIExpression()) #26, !dbg !18214
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18216, !srcloc !17722
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18216
  call void @llvm.dbg.value(metadata i32 %2, metadata !17719, metadata !DIExpression()) #26, !dbg !18218
  call void @llvm.dbg.value(metadata i32 undef, metadata !17720, metadata !DIExpression()) #26, !dbg !18218
  call void @llvm.dbg.value(metadata i32 %2, metadata !17713, metadata !DIExpression()) #26, !dbg !18214
  call void @llvm.dbg.value(metadata i32 %2, metadata !18211, metadata !DIExpression()), !dbg !18213
  call void @llvm.dbg.value(metadata i64 0, metadata !18208, metadata !DIExpression()), !dbg !18212
  call void @llvm.dbg.value(metadata i32 undef, metadata !18209, metadata !DIExpression()), !dbg !18213
  %3 = load i64, i64* @curr_tick, align 8, !dbg !18219
  %4 = tail call fastcc i32 @elapsed.271() #27, !dbg !18222
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !18208, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18212
  call void @llvm.dbg.value(metadata i32 %2, metadata !17775, metadata !DIExpression()) #26, !dbg !18223
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17780, metadata !DIExpression()) #26, !dbg !18223
  call void @llvm.dbg.value(metadata i32 %2, metadata !17783, metadata !DIExpression()) #26, !dbg !18225
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !18227, !srcloc !17789
  call void @llvm.dbg.value(metadata i32 undef, metadata !18209, metadata !DIExpression()), !dbg !18213
  %5 = sext i32 %4 to i64, !dbg !18222
  %6 = add i64 %3, %5, !dbg !18228
  ret i64 %6, !dbg !18229
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18230 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !18231
  %2 = trunc i64 %1 to i32, !dbg !18232
  ret i32 %2, !dbg !18233
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18234 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !18235
  ret i64 %1, !dbg !18236
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18239, metadata !DIExpression()), !dbg !18246
  %2 = icmp eq i32 %0, 0, !dbg !18247
  br i1 %2, label %10, label %3, !dbg !18249

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !18250
  call void @llvm.dbg.value(metadata i32 %4, metadata !18240, metadata !DIExpression()), !dbg !18246
  %5 = mul i32 %0, 168, !dbg !18251
  call void @llvm.dbg.value(metadata i32 %5, metadata !18241, metadata !DIExpression()), !dbg !18246
  br label %6, !dbg !18252

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !18253
  call void @llvm.dbg.value(metadata i32 %7, metadata !18242, metadata !DIExpression()), !dbg !18254
  %8 = sub i32 %7, %4, !dbg !18255
  %9 = icmp ult i32 %8, %5, !dbg !18257
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18259 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !18260
  ret i32 %1, !dbg !18261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18262 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #28, !dbg !18264
  ret i32 %1, !dbg !18265
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18266 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18270, metadata !DIExpression()), !dbg !18272
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18273

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !18274
  br label %14, !dbg !18278

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18271, metadata !DIExpression()), !dbg !18272
  %6 = icmp slt i64 %2, -1, !dbg !18279
  br i1 %6, label %7, label %9, !dbg !18282

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18283
  br label %14, !dbg !18284

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !18286
  %11 = icmp ugt i64 %2, 1, !dbg !18287
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18287
  %13 = add nsw i64 %10, %12, !dbg !18288
  br label %14, !dbg !18289

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18290
  ret i64 %15, !dbg !18291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @boot_banner() local_unnamed_addr #5 !dbg !18292 {
  ret void, !dbg !18294
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18295 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18297, metadata !DIExpression()), !dbg !18317
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18298, metadata !DIExpression()), !dbg !18318
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !18319

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !18320

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18298, metadata !DIExpression()), !dbg !18318
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18321
  %6 = load i8*, i8** %5, align 4, !dbg !18321
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18325
  %8 = load i32, i32* %7, align 4, !dbg !18325
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #27, !dbg !18326
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18327
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !18298, metadata !DIExpression()), !dbg !18318
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18328
  br i1 %10, label %3, label %2, !dbg !18319, !llvm.loop !18330
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18332 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18336, metadata !DIExpression()), !dbg !18339
  call void @llvm.dbg.value(metadata i8* %1, metadata !18337, metadata !DIExpression()), !dbg !18339
  call void @llvm.dbg.value(metadata i32 %2, metadata !18338, metadata !DIExpression()), !dbg !18339
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18340
  tail call fastcc void @z_waitq_init.297(%struct._wait_q_t* noundef nonnull %4) #27, !dbg !18341
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18342
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #28, !dbg !18343
  ret void, !dbg !18344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.297(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !18345 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18350, metadata !DIExpression()), !dbg !18351
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18352
  tail call fastcc void @sys_dlist_init.298(%struct._dnode* noundef %2) #27, !dbg !18353
  ret void, !dbg !18354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.298(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !18355 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18360, metadata !DIExpression()), !dbg !18361
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18362
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18363
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18364
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18365
  ret void, !dbg !18366
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18367 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18378, metadata !DIExpression()), !dbg !18388
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18375, metadata !DIExpression()), !dbg !18388
  call void @llvm.dbg.value(metadata i32 %1, metadata !18376, metadata !DIExpression()), !dbg !18388
  call void @llvm.dbg.value(metadata i32 %2, metadata !18377, metadata !DIExpression()), !dbg !18388
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #28, !dbg !18389
  call void @llvm.dbg.value(metadata i64 %6, metadata !18380, metadata !DIExpression()), !dbg !18388
  call void @llvm.dbg.value(metadata i8* null, metadata !18381, metadata !DIExpression()), !dbg !18388
  %7 = icmp eq i64 %5, -1, !dbg !18390
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !18390
  call void @llvm.dbg.value(metadata i64 %8, metadata !18380, metadata !DIExpression()), !dbg !18388
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18391
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18392, metadata !DIExpression()) #26, !dbg !18399
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18401, !srcloc !18407
  call void @llvm.dbg.value(metadata i32 undef, metadata !18404, metadata !DIExpression()) #26, !dbg !18408
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18408
  call void @llvm.dbg.value(metadata i32 undef, metadata !18398, metadata !DIExpression()) #26, !dbg !18399
  call void @llvm.dbg.value(metadata i32 undef, metadata !18382, metadata !DIExpression()), !dbg !18388
  call void @llvm.dbg.value(metadata i8 0, metadata !18387, metadata !DIExpression()), !dbg !18388
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18381, metadata !DIExpression()), !dbg !18388
  call void @llvm.dbg.value(metadata i8 0, metadata !18387, metadata !DIExpression()), !dbg !18388
  call void @llvm.dbg.value(metadata i32 undef, metadata !18382, metadata !DIExpression()), !dbg !18388
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #28, !dbg !18409
  call void @llvm.dbg.value(metadata i8* %12, metadata !18381, metadata !DIExpression()), !dbg !18388
  %13 = tail call i64 @sys_clock_tick_get() #28, !dbg !18411
  call void @llvm.dbg.value(metadata i64 %13, metadata !18379, metadata !DIExpression()), !dbg !18388
  %14 = icmp eq i8* %12, null, !dbg !18412
  br i1 %14, label %15, label %31, !dbg !18414

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18382, metadata !DIExpression()), !dbg !18388
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !18414

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18387, metadata !DIExpression()), !dbg !18388
  %20 = sub nsw i64 %8, %18, !dbg !18415
  %21 = icmp slt i64 %20, 1, !dbg !18416
  br i1 %21, label %31, label %22, !dbg !18417

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !18388
  call void @llvm.dbg.value(metadata i8 undef, metadata !18387, metadata !DIExpression()), !dbg !18388
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !18418
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !18418
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #28, !dbg !18418
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18392, metadata !DIExpression()) #26, !dbg !18419
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18421, !srcloc !18407
  call void @llvm.dbg.value(metadata i32 undef, metadata !18404, metadata !DIExpression()) #26, !dbg !18423
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18423
  call void @llvm.dbg.value(metadata i32 undef, metadata !18398, metadata !DIExpression()) #26, !dbg !18419
  call void @llvm.dbg.value(metadata i32 undef, metadata !18382, metadata !DIExpression()), !dbg !18388
  call void @llvm.dbg.value(metadata i8* null, metadata !18381, metadata !DIExpression()), !dbg !18388
  call void @llvm.dbg.value(metadata i32 undef, metadata !18382, metadata !DIExpression()), !dbg !18388
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #28, !dbg !18409
  call void @llvm.dbg.value(metadata i8* %28, metadata !18381, metadata !DIExpression()), !dbg !18388
  %29 = tail call i64 @sys_clock_tick_get() #28, !dbg !18411
  call void @llvm.dbg.value(metadata i64 %29, metadata !18379, metadata !DIExpression()), !dbg !18388
  %30 = icmp eq i8* %28, null, !dbg !18412
  br i1 %30, label %17, label %31, !dbg !18414, !llvm.loop !18424

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !18409
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !18388
  call void @llvm.dbg.value(metadata i8* %33, metadata !18381, metadata !DIExpression()), !dbg !18388
  call void @llvm.dbg.value(metadata i32 %34, metadata !18427, metadata !DIExpression()) #26, !dbg !18433
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18432, metadata !DIExpression()) #26, !dbg !18433
  call void @llvm.dbg.value(metadata i32 %34, metadata !18435, metadata !DIExpression()) #26, !dbg !18438
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #26, !dbg !18440, !srcloc !18441
  ret i8* %33, !dbg !18442
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18443 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18449, metadata !DIExpression()), !dbg !18451
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18447, metadata !DIExpression()), !dbg !18451
  call void @llvm.dbg.value(metadata i32 %1, metadata !18448, metadata !DIExpression()), !dbg !18451
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !18452
  call void @llvm.dbg.value(metadata i8* %4, metadata !18450, metadata !DIExpression()), !dbg !18451
  ret i8* %4, !dbg !18453
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !18454 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18458, metadata !DIExpression()), !dbg !18461
  call void @llvm.dbg.value(metadata i8* %1, metadata !18459, metadata !DIExpression()), !dbg !18461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18392, metadata !DIExpression()) #26, !dbg !18462
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18464, !srcloc !18407
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !18464
  call void @llvm.dbg.value(metadata i32 %4, metadata !18404, metadata !DIExpression()) #26, !dbg !18466
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18466
  call void @llvm.dbg.value(metadata i32 %4, metadata !18398, metadata !DIExpression()) #26, !dbg !18462
  call void @llvm.dbg.value(metadata i32 %4, metadata !18460, metadata !DIExpression()), !dbg !18461
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18467
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #28, !dbg !18468
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18469
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #28, !dbg !18471
  %8 = icmp eq i32 %7, 0, !dbg !18472
  br i1 %8, label %12, label %9, !dbg !18473

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18474
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !18475
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #28, !dbg !18475
  br label %13, !dbg !18477

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !18427, metadata !DIExpression()) #26, !dbg !18478
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18432, metadata !DIExpression()) #26, !dbg !18478
  call void @llvm.dbg.value(metadata i32 %4, metadata !18435, metadata !DIExpression()) #26, !dbg !18481
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #26, !dbg !18483, !srcloc !18441
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !18484
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { nounwind }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize "no-builtins" }
attributes #29 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #30 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #31 = { nounwind readnone }
attributes #32 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!915, !2, !2625, !27, !388, !412, !2627, !2629, !2662, !2696, !422, !472, !2698, !2701, !2712, !2758, !2760, !2788, !2816, !2859, !2930, !2975, !501, !639, !3003, !675, !685, !710, !3008, !722, !947, !3010, !1082, !1148, !1463, !1687, !3047, !1800, !1890, !3049, !3133, !3196, !1938, !3199, !1945, !2312, !3217, !3219, !2332, !2440, !3323, !2555, !3326, !2594}
!llvm.ident = !{!3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328, !3328}
!llvm.module.flags = !{!3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_mutex_version_chan", scope: !27, file: !114, line: 25, type: !141, isLocal: true, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/hello_world/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !106, !107, !108, !109}
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !103, line: 46, baseType: !104)
!103 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !105)
!105 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !110)
!110 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!111 = !{!25, !112, !295, !297, !299, !301, !303, !305, !307, !309, !340, !344, !349, !354, !356, !358, !365, !370, !377, !382, !384}
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "version_chan", scope: !27, file: !114, line: 25, type: !115, isLocal: false, isDefinition: true, align: 32)
!114 = !DIFile(filename: "zephyr/samples/subsys/zbus/hello_world/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 224, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !124, !128, !130, !131, !139, !264}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !116, file: !117, line: 32, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !116, file: !117, line: 35, baseType: !125, size: 16, offset: 32)
!125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !126)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !127)
!127 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !116, file: !117, line: 40, baseType: !129, size: 32, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !106)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !116, file: !117, line: 45, baseType: !129, size: 32, offset: 96)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !116, file: !117, line: 51, baseType: !132, size: 32, offset: 128)
!132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !133)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DISubroutineType(types: !135)
!135 = !{!136, !13, !137}
!136 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !138, line: 214, baseType: !32)
!138 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!139 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !116, file: !117, line: 56, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !142, line: 2720, size: 160, elements: !143)
!142 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !{!144, !165, !262, !263}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !141, file: !142, line: 2722, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !147)
!146 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !148)
!148 = !{!149}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !147, file: !146, line: 232, baseType: !150, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !152)
!151 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !153)
!153 = !{!154, !160}
!154 = !DIDerivedType(tag: DW_TAG_member, scope: !152, file: !151, line: 38, baseType: !155, size: 32)
!155 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !152, file: !151, line: 38, size: 32, elements: !156)
!156 = !{!157, !159}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !155, file: !151, line: 39, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !155, file: !151, line: 40, baseType: !158, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, scope: !152, file: !151, line: 42, baseType: !161, size: 32, offset: 32)
!161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !152, file: !151, line: 42, size: 32, elements: !162)
!162 = !{!163, !164}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !161, file: !151, line: 43, baseType: !158, size: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !161, file: !151, line: 44, baseType: !158, size: 32)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !141, file: !142, line: 2724, baseType: !166, size: 32, offset: 64)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !169)
!168 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!169 = !{!170, !217, !230, !231, !232, !233, !239, !257}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !167, file: !168, line: 247, baseType: !171, size: 384)
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !172)
!172 = !{!173, !187, !189, !192, !193, !204, !205, !206}
!173 = !DIDerivedType(tag: DW_TAG_member, scope: !171, file: !168, line: 60, baseType: !174, size: 64)
!174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !171, file: !168, line: 60, size: 64, elements: !175)
!175 = !{!176, !178}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !174, file: !168, line: 61, baseType: !177, size: 64)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !152)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !174, file: !168, line: 62, baseType: !179, size: 64)
!179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !181)
!180 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!181 = !{!182}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !179, file: !180, line: 50, baseType: !183, size: 64)
!183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 64, elements: !185)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!185 = !{!186}
!186 = !DISubrange(count: 2)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !171, file: !168, line: 68, baseType: !188, size: 32, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !171, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !191)
!191 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !171, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!193 = !DIDerivedType(tag: DW_TAG_member, scope: !171, file: !168, line: 90, baseType: !194, size: 16, offset: 112)
!194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !171, file: !168, line: 90, size: 16, elements: !195)
!195 = !{!196, !203}
!196 = !DIDerivedType(tag: DW_TAG_member, scope: !194, file: !168, line: 91, baseType: !197, size: 16)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !194, file: !168, line: 91, size: 16, elements: !198)
!198 = !{!199, !202}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !197, file: !168, line: 96, baseType: !200, size: 8)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !201)
!201 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !197, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !194, file: !168, line: 100, baseType: !126, size: 16)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !171, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !171, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !171, file: !168, line: 131, baseType: !207, size: 192, offset: 192)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !208)
!208 = !{!209, !210, !216}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !207, file: !146, line: 245, baseType: !177, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !207, file: !146, line: 246, baseType: !211, size: 32, offset: 64)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !212)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 32)
!213 = !DISubroutineType(types: !214)
!214 = !{null, !215}
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !207, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !167, file: !168, line: 250, baseType: !218, size: 288, offset: 384)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !220)
!219 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!220 = !{!221, !222, !223, !224, !225, !226, !227, !228, !229}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !218, file: !219, line: 26, baseType: !108, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !218, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !218, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !218, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !218, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !218, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !218, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !218, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !218, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !167, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !167, file: !168, line: 256, baseType: !145, size: 64, offset: 704)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !167, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !167, file: !168, line: 300, baseType: !234, size: 96, offset: 800)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !235)
!235 = !{!236, !237, !238}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !234, file: !168, line: 153, baseType: !22, size: 32)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !234, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !234, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !167, file: !168, line: 325, baseType: !240, size: 32, offset: 896)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 32)
!241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !242)
!242 = !{!243, !252, !253}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !241, file: !142, line: 5074, baseType: !244, size: 96)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !246)
!245 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!246 = !{!247, !250, !251}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !244, file: !245, line: 57, baseType: !248, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 32)
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !245, line: 57, flags: DIFlagFwdDecl)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !244, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !244, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !241, file: !142, line: 5075, baseType: !145, size: 64, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !241, file: !142, line: 5076, baseType: !254, offset: 160)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!255 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!256 = !{}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !167, file: !168, line: 343, baseType: !258, size: 64, offset: 928)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !259)
!259 = !{!260, !261}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !258, file: !219, line: 63, baseType: !108, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !258, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !141, file: !142, line: 2727, baseType: !108, size: 32, offset: 96)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !141, file: !142, line: 2730, baseType: !107, size: 32, offset: 128)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !116, file: !117, line: 67, baseType: !265, size: 32, offset: 192)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 128, elements: !270)
!270 = !{!271, !272, !273, !289}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !269, file: !117, line: 88, baseType: !120, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !269, file: !117, line: 91, baseType: !136, size: 8, offset: 32)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !269, file: !117, line: 93, baseType: !274, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !142, line: 4204, size: 320, elements: !277)
!277 = !{!278, !279, !280, !281, !282, !284, !285, !286, !287, !288}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !276, file: !142, line: 4206, baseType: !145, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !276, file: !142, line: 4208, baseType: !254, offset: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !276, file: !142, line: 4210, baseType: !137, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !276, file: !142, line: 4212, baseType: !108, size: 32, offset: 96)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !276, file: !142, line: 4214, baseType: !283, size: 32, offset: 128)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !276, file: !142, line: 4216, baseType: !283, size: 32, offset: 160)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !276, file: !142, line: 4218, baseType: !283, size: 32, offset: 192)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !276, file: !142, line: 4220, baseType: !283, size: 32, offset: 224)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !276, file: !142, line: 4222, baseType: !108, size: 32, offset: 256)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !276, file: !142, line: 4227, baseType: !190, size: 8, offset: 288)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !269, file: !117, line: 96, baseType: !290, size: 32, offset: 96)
!290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32)
!292 = !DISubroutineType(types: !293)
!293 = !{null, !294}
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_zbus_mutex_acc_data_chan", scope: !27, file: !114, line: 35, type: !141, isLocal: true, isDefinition: true, align: 32)
!297 = !DIGlobalVariableExpression(var: !298, expr: !DIExpression())
!298 = distinct !DIGlobalVariable(name: "acc_data_chan", scope: !27, file: !114, line: 35, type: !115, isLocal: false, isDefinition: true, align: 32)
!299 = !DIGlobalVariableExpression(var: !300, expr: !DIExpression())
!300 = distinct !DIGlobalVariable(name: "_zbus_mutex_simple_chan", scope: !27, file: !114, line: 57, type: !141, isLocal: true, isDefinition: true, align: 32)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "simple_chan", scope: !27, file: !114, line: 57, type: !115, isLocal: false, isDefinition: true, align: 32)
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "foo_lis", scope: !27, file: !114, line: 73, type: !269, isLocal: false, isDefinition: true, align: 32)
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_bar_sub", scope: !27, file: !114, line: 75, type: !276, isLocal: false, isDefinition: true, align: 32)
!307 = !DIGlobalVariableExpression(var: !308, expr: !DIExpression())
!308 = distinct !DIGlobalVariable(name: "bar_sub", scope: !27, file: !114, line: 75, type: !269, isLocal: false, isDefinition: true, align: 32)
!309 = !DIGlobalVariableExpression(var: !310, expr: !DIExpression())
!310 = distinct !DIGlobalVariable(name: "_k_thread_data_subscriber_task_id", scope: !27, file: !114, line: 92, type: !311, isLocal: false, isDefinition: true, align: 32)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !142, line: 620, size: 384, elements: !312)
!312 = !{!313, !314, !322, !323, !328, !329, !330, !331, !332, !333, !335, !339}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !311, file: !142, line: 621, baseType: !166, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !311, file: !142, line: 622, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !317, line: 44, baseType: !318)
!317 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !319, line: 47, size: 8, elements: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = !{!321}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !318, file: !319, line: 48, baseType: !123, size: 8)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !311, file: !142, line: 623, baseType: !32, size: 32, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !311, file: !142, line: 624, baseType: !324, size: 32, offset: 96)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !317, line: 46, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!326 = !DISubroutineType(types: !327)
!327 = !{null, !106, !106, !106}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !311, file: !142, line: 625, baseType: !106, size: 32, offset: 128)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !311, file: !142, line: 626, baseType: !106, size: 32, offset: 160)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !311, file: !142, line: 627, baseType: !106, size: 32, offset: 192)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !311, file: !142, line: 628, baseType: !107, size: 32, offset: 224)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !311, file: !142, line: 629, baseType: !108, size: 32, offset: 256)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !311, file: !142, line: 630, baseType: !334, size: 32, offset: 288)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !311, file: !142, line: 631, baseType: !336, size: 32, offset: 320)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!337 = !DISubroutineType(types: !338)
!338 = !{null}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !311, file: !142, line: 632, baseType: !121, size: 32, offset: 352)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "subscriber_task_id", scope: !27, file: !114, line: 92, type: !342, isLocal: false, isDefinition: true)
!342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !166)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_bar_sub", scope: !27, file: !114, line: 75, type: !346, isLocal: true, isDefinition: true, align: 32)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 128, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 16)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "_k_thread_stack_subscriber_task_id", scope: !27, file: !114, line: 92, type: !351, isLocal: false, isDefinition: true, align: 512)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 4608, elements: !352)
!352 = !{!353}
!353 = !DISubrange(count: 576)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "_k_thread_obj_subscriber_task_id", scope: !27, file: !114, line: 92, type: !167, isLocal: false, isDefinition: true)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !114, line: 95, type: !107, isLocal: true, isDefinition: true)
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "_zbus_message_version_chan", scope: !27, file: !114, line: 25, type: !360, isLocal: true, isDefinition: true)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "version_msg", file: !114, line: 13, size: 32, elements: !361)
!361 = !{!362, !363, !364}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !360, file: !114, line: 14, baseType: !190, size: 8)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !360, file: !114, line: 15, baseType: !190, size: 8, offset: 8)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "build", scope: !360, file: !114, line: 16, baseType: !126, size: 16, offset: 16)
!365 = !DIGlobalVariableExpression(var: !366, expr: !DIExpression())
!366 = distinct !DIGlobalVariable(name: "_zbus_observers_version_chan", scope: !27, file: !114, line: 25, type: !367, isLocal: true, isDefinition: true)
!367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 32, elements: !368)
!368 = !{!369}
!369 = !DISubrange(count: 1)
!370 = !DIGlobalVariableExpression(var: !371, expr: !DIExpression())
!371 = distinct !DIGlobalVariable(name: "_zbus_message_acc_data_chan", scope: !27, file: !114, line: 35, type: !372, isLocal: true, isDefinition: true)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acc_msg", file: !114, line: 19, size: 96, elements: !373)
!373 = !{!374, !375, !376}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !372, file: !114, line: 20, baseType: !107, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !372, file: !114, line: 21, baseType: !107, size: 32, offset: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !372, file: !114, line: 22, baseType: !107, size: 32, offset: 64)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "_zbus_observers_acc_data_chan", scope: !27, file: !114, line: 35, type: !379, isLocal: true, isDefinition: true)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 96, elements: !380)
!380 = !{!381}
!381 = !DISubrange(count: 3)
!382 = !DIGlobalVariableExpression(var: !383, expr: !DIExpression())
!383 = distinct !DIGlobalVariable(name: "_zbus_message_simple_chan", scope: !27, file: !114, line: 57, type: !107, isLocal: true, isDefinition: true)
!384 = !DIGlobalVariableExpression(var: !385, expr: !DIExpression())
!385 = distinct !DIGlobalVariable(name: "_zbus_observers_simple_chan", scope: !27, file: !114, line: 57, type: !367, isLocal: true, isDefinition: true)
!386 = !DIGlobalVariableExpression(var: !387, expr: !DIExpression())
!387 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !388, file: !403, line: 18, type: !404, isLocal: false, isDefinition: true)
!388 = distinct !DICompileUnit(language: DW_LANG_C99, file: !389, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !390, globals: !402, splitDebugInlining: false, nameTableKind: None)
!389 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!390 = !{!22, !106, !24, !391, !393, !395, !137, !107, !396, !397, !399, !400, !283, !401, !126, !121}
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 32)
!392 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 32)
!394 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 32)
!402 = !{!386}
!403 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !405)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !409}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !405, file: !406, line: 17, baseType: !121, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !405, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!410 = !DIGlobalVariableExpression(var: !411, expr: !DIExpression())
!411 = distinct !DIGlobalVariable(name: "_char_out", scope: !412, file: !416, line: 54, type: !417, isLocal: false, isDefinition: true)
!412 = distinct !DICompileUnit(language: DW_LANG_C99, file: !413, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, globals: !415, splitDebugInlining: false, nameTableKind: None)
!413 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!414 = !{!106, !107}
!415 = !{!410}
!416 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DISubroutineType(types: !419)
!419 = !{!107, !107}
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !422, file: !439, line: 56, type: !440, isLocal: true, isDefinition: true, align: 32)
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !424, globals: !438, splitDebugInlining: false, nameTableKind: None)
!423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!424 = !{!425}
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !427, line: 369, baseType: !428)
!427 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 360, size: 224, elements: !429)
!429 = !{!430, !432, !433, !434, !435, !436, !437}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !428, file: !427, line: 362, baseType: !431, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !428, file: !427, line: 363, baseType: !431, size: 32, offset: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !428, file: !427, line: 364, baseType: !431, size: 32, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !428, file: !427, line: 365, baseType: !431, size: 32, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !428, file: !427, line: 366, baseType: !431, size: 32, offset: 128)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !428, file: !427, line: 367, baseType: !431, size: 32, offset: 160)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !428, file: !427, line: 368, baseType: !431, size: 32, offset: 192)
!438 = !{!420}
!439 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !441)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !443)
!442 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!443 = !{!444, !469}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !441, file: !442, line: 60, baseType: !445, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!446 = !DISubroutineType(types: !447)
!447 = !{!107, !448}
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !452)
!451 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!452 = !{!453, !454, !455, !456, !462, !463}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !450, file: !451, line: 380, baseType: !121, size: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !450, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !450, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !450, file: !451, line: 386, baseType: !457, size: 32, offset: 96)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 32)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !459)
!459 = !{!460, !461}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !458, file: !451, line: 359, baseType: !190, size: 8)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !458, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !450, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !450, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !451, line: 43, baseType: !467)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !468)
!468 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !441, file: !442, line: 65, baseType: !448, size: 32, offset: 32)
!470 = !DIGlobalVariableExpression(var: !471, expr: !DIExpression())
!471 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !472, file: !475, line: 71, type: !476, isLocal: true, isDefinition: true, align: 32)
!472 = distinct !DICompileUnit(language: DW_LANG_C99, file: !473, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !474, splitDebugInlining: false, nameTableKind: None)
!473 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!474 = !{!470}
!475 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !477)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !478)
!478 = !{!479, !498}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !477, file: !442, line: 60, baseType: !480, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 32)
!481 = !DISubroutineType(types: !482)
!482 = !{!107, !483}
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !485)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !486)
!486 = !{!487, !488, !489, !490, !496, !497}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !485, file: !451, line: 380, baseType: !121, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !485, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !485, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !485, file: !451, line: 386, baseType: !491, size: 32, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !493)
!493 = !{!494, !495}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !492, file: !451, line: 359, baseType: !190, size: 8)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !492, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !485, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !485, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !477, file: !442, line: 65, baseType: !483, size: 32, offset: 32)
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !501, file: !508, line: 17, type: !632, isLocal: false, isDefinition: true)
!501 = distinct !DICompileUnit(language: DW_LANG_C99, file: !502, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !503, globals: !504, splitDebugInlining: false, nameTableKind: None)
!502 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!503 = !{!137, !107, !108, !106}
!504 = !{!499, !505, !628}
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !507, file: !508, line: 198, type: !616, isLocal: true, isDefinition: true)
!507 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !508, file: !508, line: 175, type: !509, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !501, retainedNodes: !611)
!508 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!509 = !DISubroutineType(types: !510)
!510 = !{null, !511}
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !513)
!513 = !{!514, !572, !584, !585, !586, !587, !593, !606}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !512, file: !168, line: 247, baseType: !515, size: 384)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !516)
!516 = !{!517, !541, !548, !549, !550, !559, !560, !561}
!517 = !DIDerivedType(tag: DW_TAG_member, scope: !515, file: !168, line: 60, baseType: !518, size: 64)
!518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !515, file: !168, line: 60, size: 64, elements: !519)
!519 = !{!520, !535}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !518, file: !168, line: 61, baseType: !521, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !523)
!523 = !{!524, !530}
!524 = !DIDerivedType(tag: DW_TAG_member, scope: !522, file: !151, line: 38, baseType: !525, size: 32)
!525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !522, file: !151, line: 38, size: 32, elements: !526)
!526 = !{!527, !529}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !525, file: !151, line: 39, baseType: !528, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !525, file: !151, line: 40, baseType: !528, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, scope: !522, file: !151, line: 42, baseType: !531, size: 32, offset: 32)
!531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !522, file: !151, line: 42, size: 32, elements: !532)
!532 = !{!533, !534}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !531, file: !151, line: 43, baseType: !528, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !531, file: !151, line: 44, baseType: !528, size: 32)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !518, file: !168, line: 62, baseType: !536, size: 64)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !537)
!537 = !{!538}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !536, file: !180, line: 50, baseType: !539, size: 64)
!539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 64, elements: !185)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !515, file: !168, line: 68, baseType: !542, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !544)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !545)
!545 = !{!546}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !544, file: !146, line: 232, baseType: !547, size: 64)
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !522)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !515, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !515, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!550 = !DIDerivedType(tag: DW_TAG_member, scope: !515, file: !168, line: 90, baseType: !551, size: 16, offset: 112)
!551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !515, file: !168, line: 90, size: 16, elements: !552)
!552 = !{!553, !558}
!553 = !DIDerivedType(tag: DW_TAG_member, scope: !551, file: !168, line: 91, baseType: !554, size: 16)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !551, file: !168, line: 91, size: 16, elements: !555)
!555 = !{!556, !557}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !554, file: !168, line: 96, baseType: !200, size: 8)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !554, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !551, file: !168, line: 100, baseType: !126, size: 16)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !515, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !515, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !515, file: !168, line: 131, baseType: !562, size: 192, offset: 192)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !563)
!563 = !{!564, !565, !571}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !562, file: !146, line: 245, baseType: !521, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !562, file: !146, line: 246, baseType: !566, size: 32, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !567)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DISubroutineType(types: !569)
!569 = !{null, !570}
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !562, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !512, file: !168, line: 250, baseType: !573, size: 288, offset: 384)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !574)
!574 = !{!575, !576, !577, !578, !579, !580, !581, !582, !583}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !573, file: !219, line: 26, baseType: !108, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !573, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !573, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !573, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !573, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !573, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !573, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !573, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !573, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !512, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !512, file: !168, line: 256, baseType: !543, size: 64, offset: 704)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !512, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !512, file: !168, line: 300, baseType: !588, size: 96, offset: 800)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !589)
!589 = !{!590, !591, !592}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !588, file: !168, line: 153, baseType: !22, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !588, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !588, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !512, file: !168, line: 325, baseType: !594, size: 32, offset: 896)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !596)
!596 = !{!597, !603, !604}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !595, file: !142, line: 5074, baseType: !598, size: 96)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !599)
!599 = !{!600, !601, !602}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !598, file: !245, line: 57, baseType: !248, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !598, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !598, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !595, file: !142, line: 5075, baseType: !543, size: 64, offset: 96)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !595, file: !142, line: 5076, baseType: !605, offset: 160)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !512, file: !168, line: 343, baseType: !607, size: 64, offset: 928)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !608)
!608 = !{!609, !610}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !607, file: !219, line: 63, baseType: !108, size: 32)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !607, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!611 = !{!612, !613, !614, !615}
!612 = !DILocalVariable(name: "thread", arg: 1, scope: !507, file: !508, line: 175, type: !511)
!613 = !DILocalVariable(name: "region_num", scope: !507, file: !508, line: 200, type: !190)
!614 = !DILocalVariable(name: "guard_start", scope: !507, file: !508, line: 265, type: !22)
!615 = !DILocalVariable(name: "guard_size", scope: !507, file: !508, line: 266, type: !137)
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !617, size: 96, elements: !368)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !618, line: 52, size: 96, elements: !619)
!618 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!619 = !{!620, !621, !622}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !617, file: !618, line: 53, baseType: !22, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !617, file: !618, line: 54, baseType: !137, size: 32, offset: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !617, file: !618, line: 55, baseType: !623, size: 32, offset: 64)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !624, line: 151, baseType: !625)
!624 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 149, size: 32, elements: !626)
!626 = !{!627}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !625, file: !624, line: 150, baseType: !108, size: 32)
!628 = !DIGlobalVariableExpression(var: !629, expr: !DIExpression())
!629 = distinct !DIGlobalVariable(name: "static_regions", scope: !501, file: !508, line: 62, type: !630, isLocal: true, isDefinition: true)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 96, elements: !368)
!631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !617)
!632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !633)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !634)
!634 = !{!635, !636}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !633, file: !406, line: 17, baseType: !121, size: 32)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !633, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!637 = !DIGlobalVariableExpression(var: !638, expr: !DIExpression())
!638 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !639, file: !672, line: 39, type: !190, isLocal: true, isDefinition: true)
!639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !640, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !641, globals: !671, splitDebugInlining: false, nameTableKind: None)
!640 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!641 = !{!642, !106, !107, !659, !190}
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !644, line: 1226, baseType: !645)
!644 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 1213, size: 352, elements: !646)
!646 = !{!647, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !645, file: !644, line: 1215, baseType: !648, size: 32)
!648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !431)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !645, file: !644, line: 1216, baseType: !431, size: 32, offset: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !645, file: !644, line: 1217, baseType: !431, size: 32, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !645, file: !644, line: 1218, baseType: !431, size: 32, offset: 96)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !645, file: !644, line: 1219, baseType: !431, size: 32, offset: 128)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !645, file: !644, line: 1220, baseType: !431, size: 32, offset: 160)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !645, file: !644, line: 1221, baseType: !431, size: 32, offset: 192)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !645, file: !644, line: 1222, baseType: !431, size: 32, offset: 224)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !645, file: !644, line: 1223, baseType: !431, size: 32, offset: 256)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !645, file: !644, line: 1224, baseType: !431, size: 32, offset: 288)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !645, file: !644, line: 1225, baseType: !431, size: 32, offset: 320)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !662, line: 27, size: 96, elements: !663)
!662 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!663 = !{!664, !665, !666}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !661, file: !662, line: 29, baseType: !108, size: 32)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !661, file: !662, line: 31, baseType: !121, size: 32, offset: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !661, file: !662, line: 37, baseType: !667, size: 32, offset: 64)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !624, line: 146, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !624, line: 141, size: 32, elements: !669)
!669 = !{!670}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !668, file: !624, line: 143, baseType: !108, size: 32)
!671 = !{!637}
!672 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !675, file: !682, line: 21, type: !417, isLocal: true, isDefinition: true)
!675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !676, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !677, globals: !681, splitDebugInlining: false, nameTableKind: None)
!676 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!677 = !{!678, !107, !106}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !680, line: 22, baseType: !107)
!680 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!681 = !{!673}
!682 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !685, file: !690, line: 13, type: !707, isLocal: true, isDefinition: true)
!685 = distinct !DICompileUnit(language: DW_LANG_C99, file: !686, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !687, splitDebugInlining: false, nameTableKind: None)
!686 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!687 = !{!688, !683}
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "mpu_config", scope: !685, file: !690, line: 37, type: !691, isLocal: false, isDefinition: true)
!690 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !662, line: 41, size: 64, elements: !693)
!693 = !{!694, !695}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !692, file: !662, line: 43, baseType: !108, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !692, file: !662, line: 45, baseType: !696, size: 32, offset: 32)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !662, line: 27, size: 96, elements: !699)
!699 = !{!700, !701, !702}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !698, file: !662, line: 29, baseType: !108, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !698, file: !662, line: 31, baseType: !121, size: 32, offset: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !698, file: !662, line: 37, baseType: !703, size: 32, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !624, line: 146, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !624, line: 141, size: 32, elements: !705)
!705 = !{!706}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !704, file: !624, line: 143, baseType: !108, size: 32)
!707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !697, size: 192, elements: !185)
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !710, file: !714, line: 10, type: !715, isLocal: false, isDefinition: true)
!710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !712, globals: !713, splitDebugInlining: false, nameTableKind: None)
!711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!712 = !{!102, !106, !107}
!713 = !{!708}
!714 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !717)
!717 = !{!718, !719}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !716, file: !406, line: 17, baseType: !121, size: 32)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !716, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !722, file: !827, line: 72, type: !910, isLocal: true, isDefinition: true)
!722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !724, retainedTypes: !813, globals: !824, splitDebugInlining: false, nameTableKind: None)
!723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!724 = !{!30, !725}
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !427, line: 65, baseType: !107, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812}
!727 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!728 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!729 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!730 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!731 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!732 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!733 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!734 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!735 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!736 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!737 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!738 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!739 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!740 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!741 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!742 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!743 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!744 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!745 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!746 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!747 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!748 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!749 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!750 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!751 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!752 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!753 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!754 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!755 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!756 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!757 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!758 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!759 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!760 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!761 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!762 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!763 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!764 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!765 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!766 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!767 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!768 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!769 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!770 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!771 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!772 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!773 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!774 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!775 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!776 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!777 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!778 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!779 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!780 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!781 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!782 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!783 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!784 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!785 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!786 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!787 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!788 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!789 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!790 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!791 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!792 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!793 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!794 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!795 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!796 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!797 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!798 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!799 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!800 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!801 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!802 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!803 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!804 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!805 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!806 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!807 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!808 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!809 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!810 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!811 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!812 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!813 = !{!137, !107, !106, !814}
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 32)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !427, line: 354, baseType: !816)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 346, size: 192, elements: !817)
!817 = !{!818, !819, !820, !821, !822, !823}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !816, file: !427, line: 348, baseType: !431, size: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !816, file: !427, line: 349, baseType: !431, size: 32, offset: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !816, file: !427, line: 350, baseType: !431, size: 32, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !816, file: !427, line: 351, baseType: !431, size: 32, offset: 96)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !816, file: !427, line: 352, baseType: !431, size: 32, offset: 128)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !816, file: !427, line: 353, baseType: !431, size: 32, offset: 160)
!824 = !{!825, !831, !847, !858, !875, !720, !877, !890, !892, !894, !896, !898, !900, !902, !904, !906, !908}
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !722, file: !827, line: 424, type: !828, isLocal: false, isDefinition: true, align: 16)
!827 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 64, elements: !829)
!829 = !{!830}
!830 = !DISubrange(count: 4)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !722, file: !827, line: 424, type: !833, isLocal: false, isDefinition: true, align: 32)
!833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !834)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !835)
!835 = !{!836, !837, !838, !839, !845, !846}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !834, file: !451, line: 380, baseType: !121, size: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !834, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !834, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !834, file: !451, line: 386, baseType: !840, size: 32, offset: 96)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !842)
!842 = !{!843, !844}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !841, file: !451, line: 359, baseType: !190, size: 8)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !841, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !834, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !834, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !722, file: !827, line: 424, type: !849, isLocal: true, isDefinition: true, align: 32)
!849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !850)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !851)
!851 = !{!852, !857}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !850, file: !442, line: 60, baseType: !853, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 32)
!854 = !DISubroutineType(types: !855)
!855 = !{!107, !856}
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !850, file: !442, line: 65, baseType: !856, size: 32, offset: 32)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "exti_data", scope: !722, file: !827, line: 423, type: !860, isLocal: true, isDefinition: true)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !827, line: 107, size: 1472, elements: !861)
!861 = !{!862}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !860, file: !827, line: 109, baseType: !863, size: 1472)
!863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 1472, elements: !873)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !827, line: 101, size: 64, elements: !865)
!865 = !{!866, !872}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !864, file: !827, line: 102, baseType: !867, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !868, line: 63, baseType: !869)
!868 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!870 = !DISubroutineType(types: !871)
!871 = !{null, !107, !106}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !864, file: !827, line: 103, baseType: !106, size: 32, offset: 32)
!873 = !{!874}
!874 = !DISubrange(count: 23)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !722, file: !827, line: 424, type: !841, isLocal: true, isDefinition: true, align: 8)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !879, file: !827, line: 493, type: !884, isLocal: true, isDefinition: true, align: 32)
!879 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !827, file: !827, line: 460, type: !880, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !882)
!880 = !DISubroutineType(types: !881)
!881 = !{null, !856}
!882 = !{!883}
!883 = !DILocalVariable(name: "dev", arg: 1, scope: !879, file: !827, line: 460, type: !856)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !885)
!885 = !{!886, !887, !888, !889}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !884, file: !10, line: 55, baseType: !334, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !884, file: !10, line: 57, baseType: !334, size: 32, offset: 32)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !884, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !884, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !879, file: !827, line: 497, type: !884, isLocal: true, isDefinition: true, align: 32)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !879, file: !827, line: 507, type: !884, isLocal: true, isDefinition: true, align: 32)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !879, file: !827, line: 512, type: !884, isLocal: true, isDefinition: true, align: 32)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !879, file: !827, line: 516, type: !884, isLocal: true, isDefinition: true, align: 32)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !879, file: !827, line: 523, type: !884, isLocal: true, isDefinition: true, align: 32)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !879, file: !827, line: 527, type: !884, isLocal: true, isDefinition: true, align: 32)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !879, file: !827, line: 581, type: !884, isLocal: true, isDefinition: true, align: 32)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !879, file: !827, line: 586, type: !884, isLocal: true, isDefinition: true, align: 32)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !879, file: !827, line: 591, type: !884, isLocal: true, isDefinition: true, align: 32)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !879, file: !827, line: 595, type: !884, isLocal: true, isDefinition: true, align: 32)
!910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !911, size: 736, elements: !873)
!911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !912)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !427, line: 155, baseType: !725)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !915, file: !920, line: 23, type: !944, isLocal: false, isDefinition: true, align: 16)
!915 = distinct !DICompileUnit(language: DW_LANG_C99, file: !916, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !917, splitDebugInlining: false, nameTableKind: None)
!916 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!917 = !{!918, !913, !924, !926, !928, !930, !932, !934, !936, !938, !940, !942}
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !915, file: !920, line: 18, type: !921, isLocal: false, isDefinition: true, align: 16)
!920 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 208, elements: !922)
!922 = !{!923}
!923 = !DISubrange(count: 13)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !915, file: !920, line: 30, type: !828, isLocal: false, isDefinition: true, align: 16)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !915, file: !920, line: 37, type: !828, isLocal: false, isDefinition: true, align: 16)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !915, file: !920, line: 44, type: !828, isLocal: false, isDefinition: true, align: 16)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !915, file: !920, line: 51, type: !828, isLocal: false, isDefinition: true, align: 16)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !915, file: !920, line: 58, type: !828, isLocal: false, isDefinition: true, align: 16)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !915, file: !920, line: 65, type: !828, isLocal: false, isDefinition: true, align: 16)
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !915, file: !920, line: 72, type: !828, isLocal: false, isDefinition: true, align: 16)
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !915, file: !920, line: 79, type: !828, isLocal: false, isDefinition: true, align: 16)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !915, file: !920, line: 86, type: !828, isLocal: false, isDefinition: true, align: 16)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !915, file: !920, line: 93, type: !828, isLocal: false, isDefinition: true, align: 16)
!944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 48, elements: !380)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !947, file: !1008, line: 398, type: !1041, isLocal: true, isDefinition: true)
!947 = distinct !DICompileUnit(language: DW_LANG_C99, file: !948, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !949, retainedTypes: !962, globals: !1005, splitDebugInlining: false, nameTableKind: None)
!948 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!949 = !{!950, !30, !955}
!950 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !951, line: 197, baseType: !32, size: 32, elements: !952)
!951 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!952 = !{!953, !954}
!953 = !DIEnumerator(name: "SUCCESS", value: 0)
!954 = !DIEnumerator(name: "ERROR", value: 1)
!955 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !956, line: 44, baseType: !32, size: 32, elements: !957)
!956 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!957 = !{!958, !959, !960, !961}
!958 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!959 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!960 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!961 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!962 = !{!106, !107, !108, !963, !998, !1004}
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 532, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 500, size: 1088, elements: !966)
!966 = !{!967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !965, file: !427, line: 502, baseType: !431, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !965, file: !427, line: 503, baseType: !431, size: 32, offset: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !965, file: !427, line: 504, baseType: !431, size: 32, offset: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !965, file: !427, line: 505, baseType: !431, size: 32, offset: 96)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !965, file: !427, line: 506, baseType: !431, size: 32, offset: 128)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !965, file: !427, line: 507, baseType: !431, size: 32, offset: 160)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !965, file: !427, line: 508, baseType: !431, size: 32, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !965, file: !427, line: 509, baseType: !108, size: 32, offset: 224)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !965, file: !427, line: 510, baseType: !431, size: 32, offset: 256)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !965, file: !427, line: 511, baseType: !431, size: 32, offset: 288)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !965, file: !427, line: 512, baseType: !978, size: 64, offset: 320)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !185)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !965, file: !427, line: 513, baseType: !431, size: 32, offset: 384)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !965, file: !427, line: 514, baseType: !431, size: 32, offset: 416)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !965, file: !427, line: 515, baseType: !431, size: 32, offset: 448)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !965, file: !427, line: 516, baseType: !108, size: 32, offset: 480)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !965, file: !427, line: 517, baseType: !431, size: 32, offset: 512)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !965, file: !427, line: 518, baseType: !431, size: 32, offset: 544)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !965, file: !427, line: 519, baseType: !978, size: 64, offset: 576)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !965, file: !427, line: 520, baseType: !431, size: 32, offset: 640)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !965, file: !427, line: 521, baseType: !431, size: 32, offset: 672)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !965, file: !427, line: 522, baseType: !431, size: 32, offset: 704)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !965, file: !427, line: 523, baseType: !108, size: 32, offset: 736)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !965, file: !427, line: 524, baseType: !431, size: 32, offset: 768)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !965, file: !427, line: 525, baseType: !431, size: 32, offset: 800)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !965, file: !427, line: 526, baseType: !978, size: 64, offset: 832)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !965, file: !427, line: 527, baseType: !431, size: 32, offset: 896)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !965, file: !427, line: 528, baseType: !431, size: 32, offset: 928)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !965, file: !427, line: 529, baseType: !978, size: 64, offset: 960)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !965, file: !427, line: 530, baseType: !431, size: 32, offset: 1024)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !965, file: !427, line: 531, baseType: !431, size: 32, offset: 1056)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 32)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1000, line: 343, size: 64, elements: !1001)
!1000 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1001 = !{!1002, !1003}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !999, file: !1000, line: 344, baseType: !108, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !999, file: !1000, line: 345, baseType: !108, size: 32, offset: 32)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!1005 = !{!1006, !1012, !1028, !1039, !945}
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !947, file: !1008, line: 752, type: !1009, isLocal: false, isDefinition: true, align: 16)
!1008 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 928, elements: !1010)
!1010 = !{!1011}
!1011 = !DISubrange(count: 58)
!1012 = !DIGlobalVariableExpression(var: !1013, expr: !DIExpression())
!1013 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !947, file: !1008, line: 752, type: !1014, isLocal: false, isDefinition: true, align: 32)
!1014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1016)
!1016 = !{!1017, !1018, !1019, !1020, !1026, !1027}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1015, file: !451, line: 380, baseType: !121, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1015, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1015, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1015, file: !451, line: 386, baseType: !1021, size: 32, offset: 96)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1023)
!1023 = !{!1024, !1025}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1022, file: !451, line: 359, baseType: !190, size: 8)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1022, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1015, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1015, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !947, file: !1008, line: 752, type: !1030, isLocal: true, isDefinition: true, align: 32)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1032)
!1032 = !{!1033, !1038}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1031, file: !442, line: 60, baseType: !1034, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!107, !1037}
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1031, file: !442, line: 65, baseType: !1037, size: 32, offset: 32)
!1039 = !DIGlobalVariableExpression(var: !1040, expr: !DIExpression())
!1040 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !947, file: !1008, line: 752, type: !1022, isLocal: true, isDefinition: true, align: 8)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !956, line: 100, size: 224, elements: !1042)
!1042 = !{!1043, !1049, !1050, !1059, !1064, !1069, !1075}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1041, file: !956, line: 101, baseType: !1044, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !956, line: 76, baseType: !1045)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!107, !1037, !1048}
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !956, line: 56, baseType: !106)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1041, file: !956, line: 102, baseType: !1044, size: 32, offset: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1041, file: !956, line: 103, baseType: !1051, size: 32, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !956, line: 83, baseType: !1052)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!107, !1037, !1048, !1055, !106}
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !956, line: 72, baseType: !1056)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !1037, !1048, !106}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1041, file: !956, line: 104, baseType: !1060, size: 32, offset: 96)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !956, line: 79, baseType: !1061)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!107, !1037, !1048, !1004}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1041, file: !956, line: 105, baseType: !1065, size: 32, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !956, line: 88, baseType: !1066)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!955, !1037, !1048}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1041, file: !956, line: 106, baseType: !1070, size: 32, offset: 160)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !956, line: 92, baseType: !1071)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!107, !1037, !1048, !1074}
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !956, line: 64, baseType: !106)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1041, file: !956, line: 107, baseType: !1076, size: 32, offset: 192)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !956, line: 96, baseType: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!107, !1037, !1048, !106}
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1082, file: !1139, line: 603, type: !1141, isLocal: true, isDefinition: true, align: 32)
!1082 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1083, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1084, globals: !1136, splitDebugInlining: false, nameTableKind: None)
!1083 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!1084 = !{!106, !107, !1085}
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1087)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1088, line: 336, size: 160, elements: !1089)
!1088 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1089 = !{!1090, !1110, !1114, !1118, !1131}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1087, file: !1088, line: 365, baseType: !1091, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!107, !1094, !1109}
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1097)
!1097 = !{!1098, !1099, !1100, !1101, !1107, !1108}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1096, file: !451, line: 380, baseType: !121, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1096, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1096, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1096, file: !451, line: 386, baseType: !1102, size: 32, offset: 96)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1104)
!1104 = !{!1105, !1106}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1103, file: !451, line: 359, baseType: !190, size: 8)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1103, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1096, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1096, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1087, file: !1088, line: 366, baseType: !1111, size: 32, offset: 32)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !1094, !191}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1087, file: !1088, line: 374, baseType: !1115, size: 32, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!107, !1094}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1087, file: !1088, line: 377, baseType: !1119, size: 32, offset: 96)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 32)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!107, !1094, !1122}
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1088, line: 122, size: 64, elements: !1125)
!1125 = !{!1126, !1127, !1128, !1129, !1130}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1124, file: !1088, line: 123, baseType: !108, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1124, file: !1088, line: 124, baseType: !190, size: 8, offset: 32)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1124, file: !1088, line: 125, baseType: !190, size: 8, offset: 40)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1124, file: !1088, line: 126, baseType: !190, size: 8, offset: 48)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1124, file: !1088, line: 127, baseType: !190, size: 8, offset: 56)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1087, file: !1088, line: 379, baseType: !1132, size: 32, offset: 128)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!107, !1094, !1135}
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 32)
!1136 = !{!1080, !1137}
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1082, file: !1139, line: 38, type: !1140, isLocal: true, isDefinition: true)
!1139 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1094)
!1141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1142)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1143)
!1143 = !{!1144, !1145}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1142, file: !442, line: 60, baseType: !1115, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1142, file: !442, line: 65, baseType: !1094, size: 32, offset: 32)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1148, file: !1317, line: 762, type: !1436, isLocal: true, isDefinition: true)
!1148 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1149, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1150, retainedTypes: !1168, globals: !1314, splitDebugInlining: false, nameTableKind: None)
!1149 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!1150 = !{!30, !1151, !1157, !1162, !955}
!1151 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1152, line: 506, baseType: !32, size: 32, elements: !1153)
!1152 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1153 = !{!1154, !1155, !1156}
!1154 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1155 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1156 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1152, line: 512, baseType: !32, size: 32, elements: !1158)
!1158 = !{!1159, !1160, !1161}
!1159 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1160 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1161 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1162 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !868, line: 43, baseType: !32, size: 32, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1167}
!1164 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1165 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1166 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1167 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1168 = !{!106, !107, !1169, !1239, !1244, !1204, !1157, !1151, !1249, !1250, !108, !1264, !1219, !283, !1274, !1275}
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1171)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1152, line: 523, size: 288, elements: !1172)
!1172 = !{!1173, !1194, !1200, !1205, !1209, !1210, !1211, !1215, !1235}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1171, file: !1152, line: 524, baseType: !1174, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 32)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!107, !1177, !1192, !1193}
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1184, !1190, !1191}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1179, file: !451, line: 380, baseType: !121, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1179, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1179, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1179, file: !451, line: 386, baseType: !1185, size: 32, offset: 96)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1187)
!1187 = !{!1188, !1189}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1186, file: !451, line: 359, baseType: !190, size: 8)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1186, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1179, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1179, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1152, line: 237, baseType: !190)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1152, line: 257, baseType: !108)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1171, file: !1152, line: 530, baseType: !1195, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!107, !1177, !1198}
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1152, line: 229, baseType: !108)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1171, file: !1152, line: 532, baseType: !1201, size: 32, offset: 64)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!107, !1177, !1204, !1199}
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1152, line: 216, baseType: !108)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1171, file: !1152, line: 535, baseType: !1206, size: 32, offset: 96)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!107, !1177, !1204}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1171, file: !1152, line: 537, baseType: !1206, size: 32, offset: 128)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1171, file: !1152, line: 539, baseType: !1206, size: 32, offset: 160)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1171, file: !1152, line: 541, baseType: !1212, size: 32, offset: 192)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 32)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{!107, !1177, !1192, !1151, !1157}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1171, file: !1152, line: 544, baseType: !1216, size: 32, offset: 224)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!107, !1177, !1219, !136}
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1152, line: 478, size: 96, elements: !1221)
!1221 = !{!1222, !1229, !1234}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1220, file: !1152, line: 482, baseType: !1223, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1224, line: 33, baseType: !1225)
!1224 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1224, line: 29, size: 32, elements: !1226)
!1226 = !{!1227}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1225, file: !1224, line: 30, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1220, file: !1152, line: 485, baseType: !1230, size: 32, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1152, line: 464, baseType: !1231)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{null, !1177, !1219, !1204}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1220, file: !1152, line: 493, baseType: !1204, size: 32, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1171, file: !1152, line: 547, baseType: !1236, size: 32, offset: 256)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{!108, !1177}
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1241)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1152, line: 428, size: 32, elements: !1242)
!1242 = !{!1243}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1241, file: !1152, line: 434, baseType: !1204, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1152, line: 441, size: 32, elements: !1247)
!1247 = !{!1248}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1246, file: !1152, line: 447, baseType: !1204, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !427, line: 441, baseType: !1252)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 430, size: 320, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1252, file: !427, line: 432, baseType: !431, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1252, file: !427, line: 433, baseType: !431, size: 32, offset: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1252, file: !427, line: 434, baseType: !431, size: 32, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1252, file: !427, line: 435, baseType: !431, size: 32, offset: 96)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1252, file: !427, line: 436, baseType: !431, size: 32, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1252, file: !427, line: 437, baseType: !431, size: 32, offset: 160)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1252, file: !427, line: 438, baseType: !431, size: 32, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1252, file: !427, line: 439, baseType: !431, size: 32, offset: 224)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1252, file: !427, line: 440, baseType: !1263, size: 64, offset: 256)
!1263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 64, elements: !185)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !427, line: 454, baseType: !1266)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 447, size: 288, elements: !1267)
!1267 = !{!1268, !1269, !1270, !1272, !1273}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1266, file: !427, line: 449, baseType: !431, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1266, file: !427, line: 450, baseType: !431, size: 32, offset: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1266, file: !427, line: 451, baseType: !1271, size: 128, offset: 64)
!1271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 128, elements: !829)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1266, file: !427, line: 452, baseType: !978, size: 64, offset: 192)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1266, file: !427, line: 453, baseType: !431, size: 32, offset: 256)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !956, line: 100, size: 224, elements: !1278)
!1278 = !{!1279, !1284, !1285, !1294, !1299, !1304, !1309}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1277, file: !956, line: 101, baseType: !1280, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !956, line: 76, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!107, !1177, !1048}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1277, file: !956, line: 102, baseType: !1280, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1277, file: !956, line: 103, baseType: !1286, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !956, line: 83, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!107, !1177, !1048, !1290, !106}
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !956, line: 72, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{null, !1177, !1048, !106}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1277, file: !956, line: 104, baseType: !1295, size: 32, offset: 96)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !956, line: 79, baseType: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!107, !1177, !1048, !1004}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1277, file: !956, line: 105, baseType: !1300, size: 32, offset: 128)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !956, line: 88, baseType: !1301)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!955, !1177, !1048}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1277, file: !956, line: 106, baseType: !1305, size: 32, offset: 160)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !956, line: 92, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!107, !1177, !1048, !1074}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1277, file: !956, line: 107, baseType: !1310, size: 32, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !956, line: 96, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!107, !1177, !1048, !106}
!1314 = !{!1315, !1321, !1323, !1333, !1338, !1340, !1342, !1344, !1346, !1348, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1384, !1398, !1400, !1402, !1404, !1406, !1408, !1410, !1412, !1414, !1416, !1418, !1420, !1422, !1424, !1426, !1428, !1430, !1146, !1432, !1434, !1447, !1449, !1451, !1453, !1455, !1457, !1459}
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1148, file: !1317, line: 762, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1317 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 96, elements: !1319)
!1319 = !{!1320}
!1320 = !DISubrange(count: 6)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1148, file: !1317, line: 762, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1148, file: !1317, line: 762, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1327)
!1327 = !{!1328, !1332}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1326, file: !442, line: 60, baseType: !1329, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!107, !1177}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1326, file: !442, line: 65, baseType: !1177, size: 32, offset: 32)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1148, file: !1317, line: 766, type: !1335, isLocal: false, isDefinition: true, align: 16)
!1335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 80, elements: !1336)
!1336 = !{!1337}
!1337 = !DISubrange(count: 5)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1148, file: !1317, line: 766, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1148, file: !1317, line: 766, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1148, file: !1317, line: 770, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1148, file: !1317, line: 770, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1148, file: !1317, line: 770, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1148, file: !1317, line: 774, type: !1335, isLocal: false, isDefinition: true, align: 16)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1148, file: !1317, line: 774, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1148, file: !1317, line: 774, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1148, file: !1317, line: 778, type: !1335, isLocal: false, isDefinition: true, align: 16)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1148, file: !1317, line: 778, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1148, file: !1317, line: 778, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1148, file: !1317, line: 782, type: !1335, isLocal: false, isDefinition: true, align: 16)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1148, file: !1317, line: 782, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1148, file: !1317, line: 782, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1148, file: !1317, line: 786, type: !1335, isLocal: false, isDefinition: true, align: 16)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1148, file: !1317, line: 786, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1148, file: !1317, line: 786, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1148, file: !1317, line: 790, type: !1335, isLocal: false, isDefinition: true, align: 16)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1148, file: !1317, line: 790, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1148, file: !1317, line: 790, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1148, file: !1317, line: 794, type: !1335, isLocal: false, isDefinition: true, align: 16)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1148, file: !1317, line: 794, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1148, file: !1317, line: 794, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1148, file: !1317, line: 762, type: !1386, isLocal: true, isDefinition: true)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1387, line: 237, size: 128, elements: !1388)
!1387 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1388 = !{!1389, !1390, !1391}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1386, file: !1387, line: 239, baseType: !1246, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1386, file: !1387, line: 241, baseType: !1177, size: 32, offset: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1386, file: !1387, line: 243, baseType: !1392, size: 64, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1224, line: 40, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1224, line: 35, size: 64, elements: !1394)
!1394 = !{!1395, !1397}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1393, file: !1224, line: 36, baseType: !1396, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1393, file: !1224, line: 37, baseType: !1396, size: 32, offset: 32)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1148, file: !1317, line: 762, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1148, file: !1317, line: 766, type: !1386, isLocal: true, isDefinition: true)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1148, file: !1317, line: 766, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1148, file: !1317, line: 770, type: !1386, isLocal: true, isDefinition: true)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1148, file: !1317, line: 770, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1148, file: !1317, line: 774, type: !1386, isLocal: true, isDefinition: true)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1148, file: !1317, line: 774, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1148, file: !1317, line: 778, type: !1386, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1148, file: !1317, line: 778, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1148, file: !1317, line: 782, type: !1386, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1148, file: !1317, line: 782, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1148, file: !1317, line: 786, type: !1386, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1148, file: !1317, line: 786, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1148, file: !1317, line: 790, type: !1386, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1148, file: !1317, line: 790, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1148, file: !1317, line: 794, type: !1386, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1148, file: !1317, line: 794, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1148, file: !1317, line: 656, type: !1170, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1148, file: !1317, line: 766, type: !1436, isLocal: true, isDefinition: true)
!1436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1437)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1387, line: 224, size: 160, elements: !1438)
!1438 = !{!1439, !1440, !1441, !1442}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1437, file: !1387, line: 226, baseType: !1241, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1437, file: !1387, line: 228, baseType: !1004, size: 32, offset: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1437, file: !1387, line: 230, baseType: !107, size: 32, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1437, file: !1387, line: 231, baseType: !1443, size: 64, offset: 96)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1000, line: 343, size: 64, elements: !1444)
!1444 = !{!1445, !1446}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1443, file: !1000, line: 344, baseType: !108, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1443, file: !1000, line: 345, baseType: !108, size: 32, offset: 32)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1148, file: !1317, line: 770, type: !1436, isLocal: true, isDefinition: true)
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1148, file: !1317, line: 774, type: !1436, isLocal: true, isDefinition: true)
!1451 = !DIGlobalVariableExpression(var: !1452, expr: !DIExpression())
!1452 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1148, file: !1317, line: 778, type: !1436, isLocal: true, isDefinition: true)
!1453 = !DIGlobalVariableExpression(var: !1454, expr: !DIExpression())
!1454 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1148, file: !1317, line: 782, type: !1436, isLocal: true, isDefinition: true)
!1455 = !DIGlobalVariableExpression(var: !1456, expr: !DIExpression())
!1456 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1148, file: !1317, line: 786, type: !1436, isLocal: true, isDefinition: true)
!1457 = !DIGlobalVariableExpression(var: !1458, expr: !DIExpression())
!1458 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1148, file: !1317, line: 790, type: !1436, isLocal: true, isDefinition: true)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1148, file: !1317, line: 794, type: !1436, isLocal: true, isDefinition: true)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1463, file: !1602, line: 44, type: !1680, isLocal: false, isDefinition: true)
!1463 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1464, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1465, retainedTypes: !1498, globals: !1599, splitDebugInlining: false, nameTableKind: None)
!1464 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!1465 = !{!30, !1466, !1473, !1480, !1487, !1493, !955}
!1466 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1088, line: 47, baseType: !32, size: 32, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472}
!1468 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1469 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1470 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1471 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1472 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1088, line: 75, baseType: !32, size: 32, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1478, !1479}
!1475 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1476 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1477 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1478 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1479 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1480 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1088, line: 92, baseType: !32, size: 32, elements: !1481)
!1481 = !{!1482, !1483, !1484, !1485, !1486}
!1482 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1483 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1484 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1485 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1486 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1487 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1088, line: 84, baseType: !32, size: 32, elements: !1488)
!1488 = !{!1489, !1490, !1491, !1492}
!1489 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1490 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1491 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1492 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1493 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1088, line: 107, baseType: !32, size: 32, elements: !1494)
!1494 = !{!1495, !1496, !1497}
!1495 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1496 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1497 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1498 = !{!106, !107, !1499, !191, !190, !1548, !108, !1048, !1559, !126, !109, !1598}
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1501)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1088, line: 336, size: 160, elements: !1502)
!1502 = !{!1503, !1522, !1526, !1530, !1543}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1501, file: !1088, line: 365, baseType: !1504, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 32)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!107, !1507, !1109}
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1509)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1510)
!1510 = !{!1511, !1512, !1513, !1514, !1520, !1521}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1509, file: !451, line: 380, baseType: !121, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1509, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1509, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1509, file: !451, line: 386, baseType: !1515, size: 32, offset: 96)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1517)
!1517 = !{!1518, !1519}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1516, file: !451, line: 359, baseType: !190, size: 8)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1516, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1509, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1509, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1501, file: !1088, line: 366, baseType: !1523, size: 32, offset: 32)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{null, !1507, !191}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1501, file: !1088, line: 374, baseType: !1527, size: 32, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!107, !1507}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1501, file: !1088, line: 377, baseType: !1531, size: 32, offset: 96)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 32)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!107, !1507, !1534}
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1536)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1088, line: 122, size: 64, elements: !1537)
!1537 = !{!1538, !1539, !1540, !1541, !1542}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1536, file: !1088, line: 123, baseType: !108, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1536, file: !1088, line: 124, baseType: !190, size: 8, offset: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1536, file: !1088, line: 125, baseType: !190, size: 8, offset: 40)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1536, file: !1088, line: 126, baseType: !190, size: 8, offset: 48)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1536, file: !1088, line: 127, baseType: !190, size: 8, offset: 56)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1501, file: !1088, line: 379, baseType: !1544, size: 32, offset: 128)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 32)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!107, !1507, !1547}
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !427, line: 670, baseType: !1550)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 661, size: 224, elements: !1551)
!1551 = !{!1552, !1553, !1554, !1555, !1556, !1557, !1558}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1550, file: !427, line: 663, baseType: !431, size: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1550, file: !427, line: 664, baseType: !431, size: 32, offset: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1550, file: !427, line: 665, baseType: !431, size: 32, offset: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1550, file: !427, line: 666, baseType: !431, size: 32, offset: 96)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1550, file: !427, line: 667, baseType: !431, size: 32, offset: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1550, file: !427, line: 668, baseType: !431, size: 32, offset: 160)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1550, file: !427, line: 669, baseType: !431, size: 32, offset: 192)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !956, line: 100, size: 224, elements: !1562)
!1562 = !{!1563, !1568, !1569, !1578, !1583, !1588, !1593}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1561, file: !956, line: 101, baseType: !1564, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !956, line: 76, baseType: !1565)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!107, !1507, !1048}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1561, file: !956, line: 102, baseType: !1564, size: 32, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1561, file: !956, line: 103, baseType: !1570, size: 32, offset: 64)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !956, line: 83, baseType: !1571)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!107, !1507, !1048, !1574, !106}
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !956, line: 72, baseType: !1575)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 32)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{null, !1507, !1048, !106}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1561, file: !956, line: 104, baseType: !1579, size: 32, offset: 96)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !956, line: 79, baseType: !1580)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 32)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{!107, !1507, !1048, !1004}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1561, file: !956, line: 105, baseType: !1584, size: 32, offset: 128)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !956, line: 88, baseType: !1585)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 32)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{!955, !1507, !1048}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1561, file: !956, line: 106, baseType: !1589, size: 32, offset: 160)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !956, line: 92, baseType: !1590)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 32)
!1591 = !DISubroutineType(types: !1592)
!1592 = !{!107, !1507, !1048, !1074}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1561, file: !956, line: 107, baseType: !1594, size: 32, offset: 192)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !956, line: 96, baseType: !1595)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{!107, !1507, !1048, !106}
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 32)
!1599 = !{!1461, !1600, !1606, !1608, !1615, !1617, !1661, !1664, !1666, !1669, !1672, !1674}
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1463, file: !1602, line: 1914, type: !1603, isLocal: false, isDefinition: true, align: 16)
!1602 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 128, elements: !1604)
!1604 = !{!1605}
!1605 = !DISubrange(count: 8)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1463, file: !1602, line: 1914, type: !1508, isLocal: false, isDefinition: true, align: 32)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1463, file: !1602, line: 1914, type: !1610, isLocal: true, isDefinition: true, align: 32)
!1610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1611)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1612)
!1612 = !{!1613, !1614}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1611, file: !442, line: 60, baseType: !1527, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1611, file: !442, line: 65, baseType: !1507, size: 32, offset: 32)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1463, file: !1602, line: 1914, type: !1516, isLocal: true, isDefinition: true, align: 8)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1463, file: !1602, line: 1914, type: !1619, isLocal: true, isDefinition: true)
!1619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1621, line: 22, size: 224, elements: !1622)
!1621 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1622 = !{!1623, !1624, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1620, file: !1621, line: 24, baseType: !1548, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1620, file: !1621, line: 26, baseType: !1625, size: 32, offset: 32)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1627)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1000, line: 343, size: 64, elements: !1628)
!1628 = !{!1629, !1630}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1627, file: !1000, line: 344, baseType: !108, size: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1627, file: !1000, line: 345, baseType: !108, size: 32, offset: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1620, file: !1621, line: 28, baseType: !137, size: 32, offset: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1620, file: !1621, line: 30, baseType: !136, size: 8, offset: 96)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1620, file: !1621, line: 32, baseType: !107, size: 32, offset: 128)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1620, file: !1621, line: 34, baseType: !136, size: 8, offset: 160)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1620, file: !1621, line: 36, baseType: !136, size: 8, offset: 168)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1620, file: !1621, line: 38, baseType: !136, size: 8, offset: 176)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1620, file: !1621, line: 40, baseType: !136, size: 8, offset: 184)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1620, file: !1621, line: 41, baseType: !1639, size: 32, offset: 192)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1642, line: 60, size: 64, elements: !1643)
!1642 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1643 = !{!1644, !1660}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1641, file: !1642, line: 69, baseType: !1645, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1642, line: 50, size: 64, elements: !1648)
!1648 = !{!1649, !1658, !1659}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1647, file: !1642, line: 52, baseType: !1650, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1652)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1653, line: 37, baseType: !1654)
!1653 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1653, line: 32, size: 64, elements: !1655)
!1655 = !{!1656, !1657}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1654, file: !1653, line: 34, baseType: !108, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1654, file: !1653, line: 36, baseType: !108, size: 32, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1647, file: !1642, line: 54, baseType: !190, size: 8, offset: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1647, file: !1642, line: 56, baseType: !190, size: 8, offset: 40)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1641, file: !1642, line: 71, baseType: !190, size: 8, offset: 32)
!1661 = !DIGlobalVariableExpression(var: !1662, expr: !DIExpression())
!1662 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1463, file: !1602, line: 1914, type: !1663, isLocal: true, isDefinition: true)
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1626, size: 64, elements: !368)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1463, file: !1602, line: 1914, type: !1640, isLocal: true, isDefinition: true)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1463, file: !1602, line: 1914, type: !1668, isLocal: true, isDefinition: true)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1646, size: 64, elements: !368)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1463, file: !1602, line: 1914, type: !1671, isLocal: true, isDefinition: true)
!1671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1651, size: 128, elements: !185)
!1672 = !DIGlobalVariableExpression(var: !1673, expr: !DIExpression())
!1673 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1463, file: !1602, line: 1539, type: !1500, isLocal: true, isDefinition: true)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1463, file: !1602, line: 1914, type: !1676, isLocal: true, isDefinition: true)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1621, line: 74, size: 64, elements: !1677)
!1677 = !{!1678, !1679}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1676, file: !1621, line: 76, baseType: !108, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1676, file: !1621, line: 78, baseType: !1507, size: 32, offset: 32)
!1680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1681)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !1682)
!1682 = !{!1683, !1684}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1681, file: !406, line: 17, baseType: !121, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1681, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!1685 = !DIGlobalVariableExpression(var: !1686, expr: !DIExpression())
!1686 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1687, file: !1765, line: 65, type: !431, isLocal: true, isDefinition: true)
!1687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1688, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1689, retainedTypes: !1690, globals: !1762, splitDebugInlining: false, nameTableKind: None)
!1688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!1689 = !{!725}
!1690 = !{!102, !1691, !334, !190, !108, !1699, !1730}
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !644, line: 770, baseType: !1693)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 764, size: 128, elements: !1694)
!1694 = !{!1695, !1696, !1697, !1698}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1693, file: !644, line: 766, baseType: !431, size: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1693, file: !644, line: 767, baseType: !431, size: 32, offset: 32)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1693, file: !644, line: 768, baseType: !431, size: 32, offset: 64)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1693, file: !644, line: 769, baseType: !648, size: 32, offset: 96)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!1700 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 426, baseType: !1701)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 411, size: 28704, elements: !1702)
!1702 = !{!1703, !1705, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1720, !1725, !1729}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1701, file: !644, line: 413, baseType: !1704, size: 256)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 256, elements: !1604)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1701, file: !644, line: 414, baseType: !1706, size: 768, offset: 256)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 768, elements: !1707)
!1707 = !{!1708}
!1708 = !DISubrange(count: 24)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1701, file: !644, line: 415, baseType: !1704, size: 256, offset: 1024)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1701, file: !644, line: 416, baseType: !1706, size: 768, offset: 1280)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1701, file: !644, line: 417, baseType: !1704, size: 256, offset: 2048)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1701, file: !644, line: 418, baseType: !1706, size: 768, offset: 2304)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1701, file: !644, line: 419, baseType: !1704, size: 256, offset: 3072)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1701, file: !644, line: 420, baseType: !1706, size: 768, offset: 3328)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1701, file: !644, line: 421, baseType: !1704, size: 256, offset: 4096)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1701, file: !644, line: 422, baseType: !1717, size: 1792, offset: 4352)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1792, elements: !1718)
!1718 = !{!1719}
!1719 = !DISubrange(count: 56)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1701, file: !644, line: 423, baseType: !1721, size: 1920, offset: 6144)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1722, size: 1920, elements: !1723)
!1722 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !190)
!1723 = !{!1724}
!1724 = !DISubrange(count: 240)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1701, file: !644, line: 424, baseType: !1726, size: 20608, offset: 8064)
!1726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 20608, elements: !1727)
!1727 = !{!1728}
!1728 = !DISubrange(count: 644)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1701, file: !644, line: 425, baseType: !431, size: 32, offset: 28672)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !1733)
!1733 = !{!1734, !1735, !1736, !1737, !1738, !1739, !1740, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1753, !1754, !1755, !1757, !1759, !1761}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1732, file: !644, line: 447, baseType: !648, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1732, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1732, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1732, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1732, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1732, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1732, file: !644, line: 453, baseType: !1741, size: 96, offset: 192)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1722, size: 96, elements: !1742)
!1742 = !{!1743}
!1743 = !DISubrange(count: 12)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1732, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1732, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1732, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1732, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1732, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1732, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1732, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1732, file: !644, line: 461, baseType: !1752, size: 64, offset: 512)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 64, elements: !185)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1732, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1732, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1732, file: !644, line: 464, baseType: !1756, size: 128, offset: 640)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 128, elements: !829)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1732, file: !644, line: 465, baseType: !1758, size: 160, offset: 768)
!1758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 160, elements: !1336)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1732, file: !644, line: 466, baseType: !1760, size: 160, offset: 928)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 160, elements: !1336)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1732, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!1762 = !{!1763, !1789, !1792, !1794, !1796, !1685}
!1763 = !DIGlobalVariableExpression(var: !1764, expr: !DIExpression())
!1764 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1687, file: !1765, line: 285, type: !1766, isLocal: true, isDefinition: true, align: 32)
!1765 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1767)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1768)
!1768 = !{!1769, !1788}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1767, file: !442, line: 60, baseType: !1770, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = !DISubroutineType(types: !1772)
!1772 = !{!107, !1773}
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1775)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1776)
!1776 = !{!1777, !1778, !1779, !1780, !1786, !1787}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1775, file: !451, line: 380, baseType: !121, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1775, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1775, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1775, file: !451, line: 386, baseType: !1781, size: 32, offset: 96)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 32)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1783)
!1783 = !{!1784, !1785}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1782, file: !451, line: 359, baseType: !190, size: 8)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1782, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1775, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1775, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1767, file: !442, line: 65, baseType: !1773, size: 32, offset: 32)
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "lock", scope: !1687, file: !1765, line: 34, type: !1791, isLocal: true, isDefinition: true)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!1792 = !DIGlobalVariableExpression(var: !1793, expr: !DIExpression())
!1793 = distinct !DIGlobalVariable(name: "last_load", scope: !1687, file: !1765, line: 36, type: !108, isLocal: true, isDefinition: true)
!1794 = !DIGlobalVariableExpression(var: !1795, expr: !DIExpression())
!1795 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1687, file: !1765, line: 48, type: !108, isLocal: true, isDefinition: true)
!1796 = !DIGlobalVariableExpression(var: !1797, expr: !DIExpression())
!1797 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1687, file: !1765, line: 54, type: !108, isLocal: true, isDefinition: true)
!1798 = !DIGlobalVariableExpression(var: !1799, expr: !DIExpression())
!1799 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1800, file: !1882, line: 22, type: !1884, isLocal: true, isDefinition: true)
!1800 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1801, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1802, retainedTypes: !1803, globals: !1879, splitDebugInlining: false, nameTableKind: None)
!1801 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!1802 = !{!1151, !1157}
!1803 = !{!1804, !1868, !1873, !1204, !1157, !1151, !1878, !106}
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1806)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1152, line: 523, size: 288, elements: !1807)
!1807 = !{!1808, !1827, !1831, !1835, !1839, !1840, !1841, !1845, !1864}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1806, file: !1152, line: 524, baseType: !1809, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1810 = !DISubroutineType(types: !1811)
!1811 = !{!107, !1812, !1192, !1193}
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1815)
!1815 = !{!1816, !1817, !1818, !1819, !1825, !1826}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1814, file: !451, line: 380, baseType: !121, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1814, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1814, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1814, file: !451, line: 386, baseType: !1820, size: 32, offset: 96)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1822)
!1822 = !{!1823, !1824}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1821, file: !451, line: 359, baseType: !190, size: 8)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1821, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1814, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1814, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1806, file: !1152, line: 530, baseType: !1828, size: 32, offset: 32)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!107, !1812, !1198}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1806, file: !1152, line: 532, baseType: !1832, size: 32, offset: 64)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 32)
!1833 = !DISubroutineType(types: !1834)
!1834 = !{!107, !1812, !1204, !1199}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1806, file: !1152, line: 535, baseType: !1836, size: 32, offset: 96)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!107, !1812, !1204}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1806, file: !1152, line: 537, baseType: !1836, size: 32, offset: 128)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1806, file: !1152, line: 539, baseType: !1836, size: 32, offset: 160)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1806, file: !1152, line: 541, baseType: !1842, size: 32, offset: 192)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!107, !1812, !1192, !1151, !1157}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1806, file: !1152, line: 544, baseType: !1846, size: 32, offset: 224)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!107, !1812, !1849, !136}
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1152, line: 478, size: 96, elements: !1851)
!1851 = !{!1852, !1858, !1863}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1850, file: !1152, line: 482, baseType: !1853, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1224, line: 33, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1224, line: 29, size: 32, elements: !1855)
!1855 = !{!1856}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1854, file: !1224, line: 30, baseType: !1857, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1850, file: !1152, line: 485, baseType: !1859, size: 32, offset: 32)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1152, line: 464, baseType: !1860)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{null, !1812, !1849, !1204}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1850, file: !1152, line: 493, baseType: !1204, size: 32, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1806, file: !1152, line: 547, baseType: !1865, size: 32, offset: 256)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{!108, !1812}
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1870)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1152, line: 428, size: 32, elements: !1871)
!1871 = !{!1872}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1870, file: !1152, line: 434, baseType: !1204, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1152, line: 441, size: 32, elements: !1876)
!1876 = !{!1877}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1875, file: !1152, line: 447, baseType: !1204, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1879 = !{!1880, !1798}
!1880 = !DIGlobalVariableExpression(var: !1881, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1881 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1800, file: !1882, line: 37, type: !1883, isLocal: true, isDefinition: true)
!1882 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!1884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1885, size: 352, elements: !1886)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1812)
!1886 = !{!1887}
!1887 = !DISubrange(count: 11)
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression())
!1889 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1890, file: !1930, line: 139, type: !1935, isLocal: false, isDefinition: true)
!1890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1892, globals: !1927, splitDebugInlining: false, nameTableKind: None)
!1891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!1892 = !{!1893}
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 532, baseType: !1895)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 500, size: 1088, elements: !1896)
!1896 = !{!1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1895, file: !427, line: 502, baseType: !431, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1895, file: !427, line: 503, baseType: !431, size: 32, offset: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1895, file: !427, line: 504, baseType: !431, size: 32, offset: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1895, file: !427, line: 505, baseType: !431, size: 32, offset: 96)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1895, file: !427, line: 506, baseType: !431, size: 32, offset: 128)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1895, file: !427, line: 507, baseType: !431, size: 32, offset: 160)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1895, file: !427, line: 508, baseType: !431, size: 32, offset: 192)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1895, file: !427, line: 509, baseType: !108, size: 32, offset: 224)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1895, file: !427, line: 510, baseType: !431, size: 32, offset: 256)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1895, file: !427, line: 511, baseType: !431, size: 32, offset: 288)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1895, file: !427, line: 512, baseType: !978, size: 64, offset: 320)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1895, file: !427, line: 513, baseType: !431, size: 32, offset: 384)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1895, file: !427, line: 514, baseType: !431, size: 32, offset: 416)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1895, file: !427, line: 515, baseType: !431, size: 32, offset: 448)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1895, file: !427, line: 516, baseType: !108, size: 32, offset: 480)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1895, file: !427, line: 517, baseType: !431, size: 32, offset: 512)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1895, file: !427, line: 518, baseType: !431, size: 32, offset: 544)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1895, file: !427, line: 519, baseType: !978, size: 64, offset: 576)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1895, file: !427, line: 520, baseType: !431, size: 32, offset: 640)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1895, file: !427, line: 521, baseType: !431, size: 32, offset: 672)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1895, file: !427, line: 522, baseType: !431, size: 32, offset: 704)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1895, file: !427, line: 523, baseType: !108, size: 32, offset: 736)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1895, file: !427, line: 524, baseType: !431, size: 32, offset: 768)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1895, file: !427, line: 525, baseType: !431, size: 32, offset: 800)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1895, file: !427, line: 526, baseType: !978, size: 64, offset: 832)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1895, file: !427, line: 527, baseType: !431, size: 32, offset: 896)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1895, file: !427, line: 528, baseType: !431, size: 32, offset: 928)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1895, file: !427, line: 529, baseType: !978, size: 64, offset: 960)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1895, file: !427, line: 530, baseType: !431, size: 32, offset: 1024)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1895, file: !427, line: 531, baseType: !431, size: 32, offset: 1056)
!1927 = !{!1928, !1931, !1888}
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression())
!1929 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1890, file: !1930, line: 137, type: !108, isLocal: false, isDefinition: true)
!1930 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1931 = !DIGlobalVariableExpression(var: !1932, expr: !DIExpression())
!1932 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1890, file: !1930, line: 138, type: !1933, isLocal: false, isDefinition: true)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1934, size: 128, elements: !347)
!1934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !190)
!1935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1934, size: 64, elements: !1604)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1938, file: !1941, line: 23, type: !1942, isLocal: false, isDefinition: true)
!1938 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1939, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, globals: !1940, splitDebugInlining: false, nameTableKind: None)
!1939 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!1940 = !{!1936}
!1941 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!1943 = !DIGlobalVariableExpression(var: !1944, expr: !DIExpression())
!1944 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1945, file: !1949, line: 37, type: !2200, isLocal: false, isDefinition: true)
!1945 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1946, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1947, retainedTypes: !1956, globals: !2029, splitDebugInlining: false, nameTableKind: None)
!1946 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!1947 = !{!1948, !30, !725}
!1948 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1949, line: 63, baseType: !32, size: 32, elements: !1950)
!1949 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1950 = !{!1951, !1952, !1953, !1954, !1955}
!1951 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1952 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1953 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1954 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1955 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1956 = !{!22, !137, !106, !107, !1957, !283, !108, !1987, !334, !190, !2012}
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1959)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1960, line: 51, size: 64, elements: !1961)
!1960 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1961 = !{!1962, !1982}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1959, file: !1960, line: 52, baseType: !1963, size: 32)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1960, line: 38, baseType: !1964)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{!107, !1967, !401, !126}
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1969)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1970)
!1970 = !{!1971, !1972, !1973, !1974, !1980, !1981}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1969, file: !451, line: 380, baseType: !121, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1969, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1969, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1969, file: !451, line: 386, baseType: !1975, size: 32, offset: 96)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1977)
!1977 = !{!1978, !1979}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1976, file: !451, line: 359, baseType: !190, size: 8)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1976, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1969, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1969, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1959, file: !1960, line: 53, baseType: !1983, size: 32, offset: 32)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1960, line: 47, baseType: !1984)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{!107, !1967, !401, !126, !108}
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !1989)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !1990)
!1990 = !{!1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1989, file: !644, line: 447, baseType: !648, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1989, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1989, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1989, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1989, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1989, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1989, file: !644, line: 453, baseType: !1741, size: 96, offset: 192)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1989, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1989, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1989, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1989, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1989, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1989, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1989, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1989, file: !644, line: 461, baseType: !1752, size: 64, offset: 512)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1989, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1989, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1989, file: !644, line: 464, baseType: !1756, size: 128, offset: 640)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1989, file: !644, line: 465, baseType: !1758, size: 160, offset: 768)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1989, file: !644, line: 466, baseType: !1760, size: 160, offset: 928)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1989, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 426, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 411, size: 28704, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2014, file: !644, line: 413, baseType: !1704, size: 256)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2014, file: !644, line: 414, baseType: !1706, size: 768, offset: 256)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2014, file: !644, line: 415, baseType: !1704, size: 256, offset: 1024)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2014, file: !644, line: 416, baseType: !1706, size: 768, offset: 1280)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2014, file: !644, line: 417, baseType: !1704, size: 256, offset: 2048)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2014, file: !644, line: 418, baseType: !1706, size: 768, offset: 2304)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2014, file: !644, line: 419, baseType: !1704, size: 256, offset: 3072)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2014, file: !644, line: 420, baseType: !1706, size: 768, offset: 3328)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2014, file: !644, line: 421, baseType: !1704, size: 256, offset: 4096)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2014, file: !644, line: 422, baseType: !1717, size: 1792, offset: 4352)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2014, file: !644, line: 423, baseType: !1721, size: 1920, offset: 6144)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2014, file: !644, line: 424, baseType: !1726, size: 20608, offset: 8064)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2014, file: !644, line: 425, baseType: !431, size: 32, offset: 28672)
!2029 = !{!1943, !2030, !2152, !2160, !2162, !2165, !2170, !2172, !2177}
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(name: "_kernel", scope: !1945, file: !1949, line: 40, type: !2032, isLocal: false, isDefinition: true)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !146, line: 158, size: 288, elements: !2033)
!2033 = !{!2034, !2147}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2032, file: !146, line: 159, baseType: !2035, size: 192)
!2035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2036, size: 192, elements: !368)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !146, line: 100, size: 192, elements: !2037)
!2037 = !{!2038, !2039, !2040, !2141, !2142, !2143, !2144}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2036, file: !146, line: 102, baseType: !108, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2036, file: !146, line: 105, baseType: !283, size: 32, offset: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2036, file: !146, line: 108, baseType: !2041, size: 32, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 32)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !2043)
!2043 = !{!2044, !2102, !2114, !2115, !2116, !2117, !2123, !2136}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2042, file: !168, line: 247, baseType: !2045, size: 384)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !2046)
!2046 = !{!2047, !2071, !2078, !2079, !2080, !2089, !2090, !2091}
!2047 = !DIDerivedType(tag: DW_TAG_member, scope: !2045, file: !168, line: 60, baseType: !2048, size: 64)
!2048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2045, file: !168, line: 60, size: 64, elements: !2049)
!2049 = !{!2050, !2065}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2048, file: !168, line: 61, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2052)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2053)
!2053 = !{!2054, !2060}
!2054 = !DIDerivedType(tag: DW_TAG_member, scope: !2052, file: !151, line: 38, baseType: !2055, size: 32)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2052, file: !151, line: 38, size: 32, elements: !2056)
!2056 = !{!2057, !2059}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2055, file: !151, line: 39, baseType: !2058, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2055, file: !151, line: 40, baseType: !2058, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, scope: !2052, file: !151, line: 42, baseType: !2061, size: 32, offset: 32)
!2061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2052, file: !151, line: 42, size: 32, elements: !2062)
!2062 = !{!2063, !2064}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2061, file: !151, line: 43, baseType: !2058, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2061, file: !151, line: 44, baseType: !2058, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2048, file: !168, line: 62, baseType: !2066, size: 64)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !2067)
!2067 = !{!2068}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2066, file: !180, line: 50, baseType: !2069, size: 64)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2070, size: 64, elements: !185)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2045, file: !168, line: 68, baseType: !2072, size: 32, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !2074)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !2075)
!2075 = !{!2076}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2074, file: !146, line: 232, baseType: !2077, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2052)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2045, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2045, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!2080 = !DIDerivedType(tag: DW_TAG_member, scope: !2045, file: !168, line: 90, baseType: !2081, size: 16, offset: 112)
!2081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2045, file: !168, line: 90, size: 16, elements: !2082)
!2082 = !{!2083, !2088}
!2083 = !DIDerivedType(tag: DW_TAG_member, scope: !2081, file: !168, line: 91, baseType: !2084, size: 16)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2081, file: !168, line: 91, size: 16, elements: !2085)
!2085 = !{!2086, !2087}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2084, file: !168, line: 96, baseType: !200, size: 8)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2084, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2081, file: !168, line: 100, baseType: !126, size: 16)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2045, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2045, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2045, file: !168, line: 131, baseType: !2092, size: 192, offset: 192)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2093)
!2093 = !{!2094, !2095, !2101}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2092, file: !146, line: 245, baseType: !2051, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2092, file: !146, line: 246, baseType: !2096, size: 32, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2097)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{null, !2100}
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2092, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2042, file: !168, line: 250, baseType: !2103, size: 288, offset: 384)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !2104)
!2104 = !{!2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2103, file: !219, line: 26, baseType: !108, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2103, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2103, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2103, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2103, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2103, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2103, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2103, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2103, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2042, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2042, file: !168, line: 256, baseType: !2073, size: 64, offset: 704)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2042, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2042, file: !168, line: 300, baseType: !2118, size: 96, offset: 800)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !2119)
!2119 = !{!2120, !2121, !2122}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2118, file: !168, line: 153, baseType: !22, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2118, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2118, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2042, file: !168, line: 325, baseType: !2124, size: 32, offset: 896)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 32)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !2126)
!2126 = !{!2127, !2133, !2134}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2125, file: !142, line: 5074, baseType: !2128, size: 96)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !2129)
!2129 = !{!2130, !2131, !2132}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2128, file: !245, line: 57, baseType: !248, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2128, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2128, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2125, file: !142, line: 5075, baseType: !2073, size: 64, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2125, file: !142, line: 5076, baseType: !2135, offset: 160)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2042, file: !168, line: 343, baseType: !2137, size: 64, offset: 928)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !2138)
!2138 = !{!2139, !2140}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2137, file: !219, line: 63, baseType: !108, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2137, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2036, file: !146, line: 111, baseType: !2041, size: 32, offset: 96)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2036, file: !146, line: 124, baseType: !107, size: 32, offset: 128)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2036, file: !146, line: 127, baseType: !190, size: 8, offset: 160)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2036, file: !146, line: 153, baseType: !2145, offset: 168)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2146, line: 33, elements: !256)
!2146 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2032, file: !146, line: 170, baseType: !2148, size: 96, offset: 192)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !146, line: 83, size: 96, elements: !2149)
!2149 = !{!2150, !2151}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2148, file: !146, line: 86, baseType: !2041, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2148, file: !146, line: 90, baseType: !2077, size: 64, offset: 32)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1945, file: !1949, line: 43, type: !2154, isLocal: false, isDefinition: true, align: 512)
!2154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2155, size: 8704, elements: !2158)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !319, line: 47, size: 8, elements: !2156)
!2156 = !{!2157}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2155, file: !319, line: 48, baseType: !123, size: 8)
!2158 = !{!2159}
!2159 = !DISubrange(count: 1088)
!2160 = !DIGlobalVariableExpression(var: !2161, expr: !DIExpression())
!2161 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1945, file: !1949, line: 44, type: !2042, isLocal: false, isDefinition: true)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1945, file: !1949, line: 48, type: !2164, isLocal: false, isDefinition: true)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2042, size: 1024, elements: !368)
!2165 = !DIGlobalVariableExpression(var: !2166, expr: !DIExpression())
!2166 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1945, file: !1949, line: 86, type: !2167, isLocal: false, isDefinition: true, align: 512)
!2167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2155, size: 16896, elements: !2168)
!2168 = !{!369, !2169}
!2169 = !DISubrange(count: 2112)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1945, file: !1949, line: 217, type: !136, isLocal: false, isDefinition: true)
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1945, file: !1949, line: 50, type: !2174, isLocal: true, isDefinition: true, align: 512)
!2174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2155, size: 3072, elements: !2175)
!2175 = !{!369, !2176}
!2176 = !DISubrange(count: 384)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "levels", scope: !2179, file: !1949, line: 232, type: !2199, isLocal: true, isDefinition: true)
!2179 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1949, file: !1949, line: 230, type: !2180, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !2182)
!2180 = !DISubroutineType(types: !2181)
!2181 = !{null, !1948}
!2182 = !{!2183, !2184, !2194, !2198}
!2183 = !DILocalVariable(name: "level", arg: 1, scope: !2179, file: !1949, line: 230, type: !1948)
!2184 = !DILocalVariable(name: "entry", scope: !2179, file: !1949, line: 244, type: !2185)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2187)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !2188)
!2188 = !{!2189, !2193}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2187, file: !442, line: 60, baseType: !2190, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 32)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!107, !1967}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2187, file: !442, line: 65, baseType: !1967, size: 32, offset: 32)
!2194 = !DILocalVariable(name: "dev", scope: !2195, file: !1949, line: 247, type: !1967)
!2195 = distinct !DILexicalBlock(scope: !2196, file: !1949, line: 246, column: 64)
!2196 = distinct !DILexicalBlock(scope: !2197, file: !1949, line: 246, column: 2)
!2197 = distinct !DILexicalBlock(scope: !2179, file: !1949, line: 246, column: 2)
!2198 = !DILocalVariable(name: "rc", scope: !2195, file: !1949, line: 248, type: !107)
!2199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2185, size: 192, elements: !1319)
!2200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2201)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !2202)
!2202 = !{!2203, !2204}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2201, file: !406, line: 17, baseType: !121, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2201, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!2205 = !DIGlobalVariableExpression(var: !2206, expr: !DIExpression())
!2206 = distinct !DIGlobalVariable(name: "states_str", scope: !2207, file: !2208, line: 276, type: !2329, isLocal: true, isDefinition: true)
!2207 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2208, file: !2208, line: 271, type: !2209, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !2320)
!2208 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2209 = !DISubroutineType(types: !2210)
!2210 = !{!121, !2211, !283, !137}
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !2212)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !2214)
!2214 = !{!2215, !2273, !2285, !2286, !2287, !2288, !2294, !2307}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2213, file: !168, line: 247, baseType: !2216, size: 384)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !2217)
!2217 = !{!2218, !2242, !2249, !2250, !2251, !2260, !2261, !2262}
!2218 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !168, line: 60, baseType: !2219, size: 64)
!2219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !168, line: 60, size: 64, elements: !2220)
!2220 = !{!2221, !2236}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2219, file: !168, line: 61, baseType: !2222, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2223)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2224)
!2224 = !{!2225, !2231}
!2225 = !DIDerivedType(tag: DW_TAG_member, scope: !2223, file: !151, line: 38, baseType: !2226, size: 32)
!2226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2223, file: !151, line: 38, size: 32, elements: !2227)
!2227 = !{!2228, !2230}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2226, file: !151, line: 39, baseType: !2229, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2226, file: !151, line: 40, baseType: !2229, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, scope: !2223, file: !151, line: 42, baseType: !2232, size: 32, offset: 32)
!2232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2223, file: !151, line: 42, size: 32, elements: !2233)
!2233 = !{!2234, !2235}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2232, file: !151, line: 43, baseType: !2229, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2232, file: !151, line: 44, baseType: !2229, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2219, file: !168, line: 62, baseType: !2237, size: 64)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !2238)
!2238 = !{!2239}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2237, file: !180, line: 50, baseType: !2240, size: 64)
!2240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2241, size: 64, elements: !185)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2216, file: !168, line: 68, baseType: !2243, size: 32, offset: 64)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !2245)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !2246)
!2246 = !{!2247}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2245, file: !146, line: 232, baseType: !2248, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2223)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2216, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2216, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!2251 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !168, line: 90, baseType: !2252, size: 16, offset: 112)
!2252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !168, line: 90, size: 16, elements: !2253)
!2253 = !{!2254, !2259}
!2254 = !DIDerivedType(tag: DW_TAG_member, scope: !2252, file: !168, line: 91, baseType: !2255, size: 16)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2252, file: !168, line: 91, size: 16, elements: !2256)
!2256 = !{!2257, !2258}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2255, file: !168, line: 96, baseType: !200, size: 8)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2255, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2252, file: !168, line: 100, baseType: !126, size: 16)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2216, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2216, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2216, file: !168, line: 131, baseType: !2263, size: 192, offset: 192)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2264)
!2264 = !{!2265, !2266, !2272}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2263, file: !146, line: 245, baseType: !2222, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2263, file: !146, line: 246, baseType: !2267, size: 32, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2268)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 32)
!2269 = !DISubroutineType(types: !2270)
!2270 = !{null, !2271}
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2263, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2213, file: !168, line: 250, baseType: !2274, size: 288, offset: 384)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !2275)
!2275 = !{!2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2274, file: !219, line: 26, baseType: !108, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2274, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2274, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2274, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2274, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2274, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2274, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2274, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2274, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2213, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2213, file: !168, line: 256, baseType: !2244, size: 64, offset: 704)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2213, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2213, file: !168, line: 300, baseType: !2289, size: 96, offset: 800)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !2290)
!2290 = !{!2291, !2292, !2293}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2289, file: !168, line: 153, baseType: !22, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2289, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2289, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2213, file: !168, line: 325, baseType: !2295, size: 32, offset: 896)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !2297)
!2297 = !{!2298, !2304, !2305}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2296, file: !142, line: 5074, baseType: !2299, size: 96)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !2300)
!2300 = !{!2301, !2302, !2303}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2299, file: !245, line: 57, baseType: !248, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2299, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2299, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2296, file: !142, line: 5075, baseType: !2244, size: 64, offset: 96)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2296, file: !142, line: 5076, baseType: !2306, offset: 160)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2213, file: !168, line: 343, baseType: !2308, size: 64, offset: 928)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !2309)
!2309 = !{!2310, !2311}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2308, file: !219, line: 63, baseType: !108, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2308, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!2312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2313, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2314, globals: !2316, splitDebugInlining: false, nameTableKind: None)
!2313 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2314 = !{!106, !121, !102, !190, !107, !2315, !24, !137, !283, !22, !108, !109}
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 32)
!2316 = !{!2205, !2317}
!2317 = !DIGlobalVariableExpression(var: !2318, expr: !DIExpression())
!2318 = distinct !DIGlobalVariable(name: "states_sz", scope: !2207, file: !2208, line: 279, type: !2319, isLocal: true, isDefinition: true)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1883, size: 256, elements: !1604)
!2320 = !{!2321, !2322, !2323, !2324, !2325, !2326, !2327}
!2321 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2207, file: !2208, line: 271, type: !2211)
!2322 = !DILocalVariable(name: "buf", arg: 2, scope: !2207, file: !2208, line: 271, type: !283)
!2323 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2207, file: !2208, line: 271, type: !137)
!2324 = !DILocalVariable(name: "off", scope: !2207, file: !2208, line: 273, type: !137)
!2325 = !DILocalVariable(name: "bit", scope: !2207, file: !2208, line: 274, type: !190)
!2326 = !DILocalVariable(name: "thread_state", scope: !2207, file: !2208, line: 275, type: !190)
!2327 = !DILocalVariable(name: "index", scope: !2328, file: !2208, line: 293, type: !190)
!2328 = distinct !DILexicalBlock(scope: !2207, file: !2208, line: 293, column: 2)
!2329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 256, elements: !1604)
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(name: "lock", scope: !2332, file: !2437, line: 47, type: !2430, isLocal: true, isDefinition: true)
!2332 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2333, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2334, globals: !2436, splitDebugInlining: false, nameTableKind: None)
!2333 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2334 = !{!136, !106, !107, !2335, !2350}
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2337)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2338)
!2338 = !{!2339, !2345}
!2339 = !DIDerivedType(tag: DW_TAG_member, scope: !2337, file: !151, line: 38, baseType: !2340, size: 32)
!2340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2337, file: !151, line: 38, size: 32, elements: !2341)
!2341 = !{!2342, !2344}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2340, file: !151, line: 39, baseType: !2343, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2340, file: !151, line: 40, baseType: !2343, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, scope: !2337, file: !151, line: 42, baseType: !2346, size: 32, offset: 32)
!2346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2337, file: !151, line: 42, size: 32, elements: !2347)
!2347 = !{!2348, !2349}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2346, file: !151, line: 43, baseType: !2343, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2346, file: !151, line: 44, baseType: !2343, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !2352)
!2352 = !{!2353, !2397, !2409, !2410, !2411, !2412, !2418, !2431}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2351, file: !168, line: 247, baseType: !2354, size: 384)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !2355)
!2355 = !{!2356, !2366, !2373, !2374, !2375, !2384, !2385, !2386}
!2356 = !DIDerivedType(tag: DW_TAG_member, scope: !2354, file: !168, line: 60, baseType: !2357, size: 64)
!2357 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2354, file: !168, line: 60, size: 64, elements: !2358)
!2358 = !{!2359, !2360}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2357, file: !168, line: 61, baseType: !2336, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2357, file: !168, line: 62, baseType: !2361, size: 64)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !2362)
!2362 = !{!2363}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2361, file: !180, line: 50, baseType: !2364, size: 64)
!2364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2365, size: 64, elements: !185)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2354, file: !168, line: 68, baseType: !2367, size: 32, offset: 64)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !2369)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !2370)
!2370 = !{!2371}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2369, file: !146, line: 232, baseType: !2372, size: 64)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2337)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2354, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2354, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!2375 = !DIDerivedType(tag: DW_TAG_member, scope: !2354, file: !168, line: 90, baseType: !2376, size: 16, offset: 112)
!2376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2354, file: !168, line: 90, size: 16, elements: !2377)
!2377 = !{!2378, !2383}
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2376, file: !168, line: 91, baseType: !2379, size: 16)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2376, file: !168, line: 91, size: 16, elements: !2380)
!2380 = !{!2381, !2382}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2379, file: !168, line: 96, baseType: !200, size: 8)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2379, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2376, file: !168, line: 100, baseType: !126, size: 16)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2354, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2354, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2354, file: !168, line: 131, baseType: !2387, size: 192, offset: 192)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2388)
!2388 = !{!2389, !2390, !2396}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2387, file: !146, line: 245, baseType: !2336, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2387, file: !146, line: 246, baseType: !2391, size: 32, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2392)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 32)
!2393 = !DISubroutineType(types: !2394)
!2394 = !{null, !2395}
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2387, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2351, file: !168, line: 250, baseType: !2398, size: 288, offset: 384)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !2399)
!2399 = !{!2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2398, file: !219, line: 26, baseType: !108, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2398, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2398, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2398, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2398, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2398, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2398, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2398, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2398, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2351, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2351, file: !168, line: 256, baseType: !2368, size: 64, offset: 704)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2351, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2351, file: !168, line: 300, baseType: !2413, size: 96, offset: 800)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !2414)
!2414 = !{!2415, !2416, !2417}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2413, file: !168, line: 153, baseType: !22, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2413, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2413, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2351, file: !168, line: 325, baseType: !2419, size: 32, offset: 896)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 32)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !2421)
!2421 = !{!2422, !2428, !2429}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2420, file: !142, line: 5074, baseType: !2423, size: 96)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !2424)
!2424 = !{!2425, !2426, !2427}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2423, file: !245, line: 57, baseType: !248, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2423, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2423, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2420, file: !142, line: 5075, baseType: !2368, size: 64, offset: 96)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2420, file: !142, line: 5076, baseType: !2430, offset: 160)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2351, file: !168, line: 343, baseType: !2432, size: 64, offset: 928)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !2433)
!2433 = !{!2434, !2435}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2432, file: !219, line: 63, baseType: !108, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2432, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!2436 = !{!2330}
!2437 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2438 = !DIGlobalVariableExpression(var: !2439, expr: !DIExpression())
!2439 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2440, file: !2548, line: 56, type: !2537, isLocal: false, isDefinition: true)
!2440 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2441, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2442, globals: !2545, splitDebugInlining: false, nameTableKind: None)
!2441 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2442 = !{!2443, !283, !106, !2543, !401, !102, !334, !107, !108, !109, !2544}
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !2445)
!2445 = !{!2446, !2504, !2516, !2517, !2518, !2519, !2525, !2538}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2444, file: !168, line: 247, baseType: !2447, size: 384)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !2448)
!2448 = !{!2449, !2473, !2480, !2481, !2482, !2491, !2492, !2493}
!2449 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !168, line: 60, baseType: !2450, size: 64)
!2450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !168, line: 60, size: 64, elements: !2451)
!2451 = !{!2452, !2467}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2450, file: !168, line: 61, baseType: !2453, size: 64)
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2454)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2455)
!2455 = !{!2456, !2462}
!2456 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !151, line: 38, baseType: !2457, size: 32)
!2457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2454, file: !151, line: 38, size: 32, elements: !2458)
!2458 = !{!2459, !2461}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2457, file: !151, line: 39, baseType: !2460, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2457, file: !151, line: 40, baseType: !2460, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !151, line: 42, baseType: !2463, size: 32, offset: 32)
!2463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2454, file: !151, line: 42, size: 32, elements: !2464)
!2464 = !{!2465, !2466}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2463, file: !151, line: 43, baseType: !2460, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2463, file: !151, line: 44, baseType: !2460, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2450, file: !168, line: 62, baseType: !2468, size: 64)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !2469)
!2469 = !{!2470}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2468, file: !180, line: 50, baseType: !2471, size: 64)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2472, size: 64, elements: !185)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2447, file: !168, line: 68, baseType: !2474, size: 32, offset: 64)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !2476)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !2477)
!2477 = !{!2478}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2476, file: !146, line: 232, baseType: !2479, size: 64)
!2479 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2454)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2447, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2447, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!2482 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !168, line: 90, baseType: !2483, size: 16, offset: 112)
!2483 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !168, line: 90, size: 16, elements: !2484)
!2484 = !{!2485, !2490}
!2485 = !DIDerivedType(tag: DW_TAG_member, scope: !2483, file: !168, line: 91, baseType: !2486, size: 16)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2483, file: !168, line: 91, size: 16, elements: !2487)
!2487 = !{!2488, !2489}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2486, file: !168, line: 96, baseType: !200, size: 8)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2486, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2483, file: !168, line: 100, baseType: !126, size: 16)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2447, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2447, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2447, file: !168, line: 131, baseType: !2494, size: 192, offset: 192)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2495)
!2495 = !{!2496, !2497, !2503}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2494, file: !146, line: 245, baseType: !2453, size: 64)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2494, file: !146, line: 246, baseType: !2498, size: 32, offset: 64)
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2499)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 32)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{null, !2502}
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2494, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2444, file: !168, line: 250, baseType: !2505, size: 288, offset: 384)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !2506)
!2506 = !{!2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2505, file: !219, line: 26, baseType: !108, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2505, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2505, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2505, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2505, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2505, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2505, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2505, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2505, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2444, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2444, file: !168, line: 256, baseType: !2475, size: 64, offset: 704)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2444, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2444, file: !168, line: 300, baseType: !2520, size: 96, offset: 800)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !2521)
!2521 = !{!2522, !2523, !2524}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2520, file: !168, line: 153, baseType: !22, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2520, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2520, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2444, file: !168, line: 325, baseType: !2526, size: 32, offset: 896)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 32)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !2528)
!2528 = !{!2529, !2535, !2536}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2527, file: !142, line: 5074, baseType: !2530, size: 96)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !2531)
!2531 = !{!2532, !2533, !2534}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2530, file: !245, line: 57, baseType: !248, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2530, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2530, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2527, file: !142, line: 5075, baseType: !2475, size: 64, offset: 96)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2527, file: !142, line: 5076, baseType: !2537, offset: 160)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2444, file: !168, line: 343, baseType: !2539, size: 64, offset: 928)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !2540)
!2540 = !{!2541, !2542}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2539, file: !219, line: 63, baseType: !108, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2539, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 32)
!2545 = !{!2438, !2546, !2549, !2551}
!2546 = !DIGlobalVariableExpression(var: !2547, expr: !DIExpression())
!2547 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2440, file: !2548, line: 404, type: !107, isLocal: true, isDefinition: true)
!2548 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2549 = !DIGlobalVariableExpression(var: !2550, expr: !DIExpression())
!2550 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2440, file: !2548, line: 405, type: !107, isLocal: true, isDefinition: true)
!2551 = !DIGlobalVariableExpression(var: !2552, expr: !DIExpression())
!2552 = distinct !DIGlobalVariable(name: "pending_current", scope: !2440, file: !2548, line: 425, type: !2443, isLocal: true, isDefinition: true)
!2553 = !DIGlobalVariableExpression(var: !2554, expr: !DIExpression())
!2554 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2555, file: !2585, line: 15, type: !109, isLocal: true, isDefinition: true)
!2555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2557, globals: !2582, splitDebugInlining: false, nameTableKind: None)
!2556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2557 = !{!102, !106, !334, !108, !109, !107, !2558, !283, !104}
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 32)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2560)
!2560 = !{!2561, !2576, !2581}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2559, file: !146, line: 245, baseType: !2562, size: 64)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2563)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2564)
!2564 = !{!2565, !2571}
!2565 = !DIDerivedType(tag: DW_TAG_member, scope: !2563, file: !151, line: 38, baseType: !2566, size: 32)
!2566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2563, file: !151, line: 38, size: 32, elements: !2567)
!2567 = !{!2568, !2570}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2566, file: !151, line: 39, baseType: !2569, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2566, file: !151, line: 40, baseType: !2569, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, scope: !2563, file: !151, line: 42, baseType: !2572, size: 32, offset: 32)
!2572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2563, file: !151, line: 42, size: 32, elements: !2573)
!2573 = !{!2574, !2575}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2572, file: !151, line: 43, baseType: !2569, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2572, file: !151, line: 44, baseType: !2569, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2559, file: !146, line: 246, baseType: !2577, size: 32, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2578)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 32)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{null, !2558}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2559, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2582 = !{!2553, !2583, !2587, !2589}
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2555, file: !2585, line: 19, type: !2586, isLocal: true, isDefinition: true)
!2585 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2587 = !DIGlobalVariableExpression(var: !2588, expr: !DIExpression())
!2588 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2555, file: !2585, line: 25, type: !107, isLocal: true, isDefinition: true)
!2589 = !DIGlobalVariableExpression(var: !2590, expr: !DIExpression())
!2590 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2555, file: !2585, line: 17, type: !2591, isLocal: true, isDefinition: true)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2563)
!2592 = !DIGlobalVariableExpression(var: !2593, expr: !DIExpression())
!2593 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2594, file: !2613, line: 55, type: !2614, isLocal: true, isDefinition: true, align: 32)
!2594 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2595, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2596, globals: !2612, splitDebugInlining: false, nameTableKind: None)
!2595 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2596 = !{!106, !102, !107, !2597}
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2599)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2600)
!2600 = !{!2601, !2607}
!2601 = !DIDerivedType(tag: DW_TAG_member, scope: !2599, file: !151, line: 38, baseType: !2602, size: 32)
!2602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2599, file: !151, line: 38, size: 32, elements: !2603)
!2603 = !{!2604, !2606}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2602, file: !151, line: 39, baseType: !2605, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2602, file: !151, line: 40, baseType: !2605, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_member, scope: !2599, file: !151, line: 42, baseType: !2608, size: 32, offset: 32)
!2608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2599, file: !151, line: 42, size: 32, elements: !2609)
!2609 = !{!2610, !2611}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2608, file: !151, line: 43, baseType: !2605, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2608, file: !151, line: 44, baseType: !2605, size: 32)
!2612 = !{!2592}
!2613 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2615)
!2615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !2616)
!2616 = !{!2617, !2624}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2615, file: !442, line: 60, baseType: !2618, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 32)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{!107, !2621}
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2623)
!2623 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 48, flags: DIFlagFwdDecl)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2615, file: !442, line: 65, baseType: !2621, size: 32, offset: 32)
!2625 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2626, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!2626 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2627 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2628, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!2628 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2629 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2630, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2631, retainedTypes: !2639, splitDebugInlining: false, nameTableKind: None)
!2630 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2631 = !{!30, !2632}
!2632 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2633, line: 54, baseType: !32, size: 32, elements: !2634)
!2633 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2634 = !{!2635, !2636, !2637, !2638}
!2635 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2636 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2637 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2638 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2639 = !{!106, !137, !401, !24, !2640, !22, !2646, !107, !1004, !2661}
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2633, line: 58, baseType: !2642)
!2642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2633, line: 58, size: 64, elements: !2643)
!2643 = !{!2644}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2642, file: !2633, line: 58, baseType: !2645, size: 64)
!2645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 64, elements: !1604)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2633, line: 68, size: 128, elements: !2648)
!2648 = !{!2649, !2652, !2653, !2654}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2647, file: !2633, line: 69, baseType: !2650, size: 64)
!2650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2651, size: 64, elements: !185)
!2651 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2633, line: 61, baseType: !108)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2647, file: !2633, line: 70, baseType: !2651, size: 32, offset: 64)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2647, file: !2633, line: 71, baseType: !108, size: 32, offset: 96)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2647, file: !2633, line: 77, baseType: !2655, offset: 128)
!2655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2656, elements: !2659)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2633, line: 64, size: 32, elements: !2657)
!2657 = !{!2658}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2656, file: !2633, line: 65, baseType: !2651, size: 32)
!2659 = !{!2660}
!2660 = !DISubrange(count: 0)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!2662 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2663, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2664, retainedTypes: !2684, splitDebugInlining: false, nameTableKind: None)
!2663 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2664 = !{!2665, !2673}
!2665 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2666, line: 69, baseType: !32, size: 32, elements: !2667)
!2666 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2667 = !{!2668, !2669, !2670, !2671, !2672}
!2668 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2669 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2670 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2671 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2672 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2666, line: 56, baseType: !32, size: 32, elements: !2674)
!2674 = !{!2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683}
!2675 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2676 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2677 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2678 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2679 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2680 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2681 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2682 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2683 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2684 = !{!107, !2665, !2673, !2685, !201, !468, !2687, !2688, !191, !127, !121, !137, !106, !22, !32, !396, !2690, !2691, !398, !397, !105, !399, !2686, !2692, !2693, !2694, !2695}
!2685 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2666, line: 31, baseType: !2686)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !105)
!2687 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !138, line: 329, baseType: !32)
!2688 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2666, line: 32, baseType: !2689)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !110)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !138, line: 145, baseType: !107)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 32)
!2696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2698 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2699, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2700, splitDebugInlining: false, nameTableKind: None)
!2699 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2700 = !{!121, !191, !107, !32}
!2701 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2702, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2703, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!2702 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2703 = !{!2704, !30}
!2704 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2705, line: 27, baseType: !32, size: 32, elements: !2706)
!2705 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2706 = !{!2707, !2708, !2709, !2710, !2711}
!2707 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2708 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2709 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2710 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2711 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2712 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2713, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2714, retainedTypes: !2715, splitDebugInlining: false, nameTableKind: None)
!2713 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2714 = !{!725, !2704, !30}
!2715 = !{!912, !2716, !106, !107, !334, !108, !190, !2733}
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 426, baseType: !2718)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 411, size: 28704, elements: !2719)
!2719 = !{!2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2718, file: !644, line: 413, baseType: !1704, size: 256)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2718, file: !644, line: 414, baseType: !1706, size: 768, offset: 256)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2718, file: !644, line: 415, baseType: !1704, size: 256, offset: 1024)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2718, file: !644, line: 416, baseType: !1706, size: 768, offset: 1280)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2718, file: !644, line: 417, baseType: !1704, size: 256, offset: 2048)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2718, file: !644, line: 418, baseType: !1706, size: 768, offset: 2304)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2718, file: !644, line: 419, baseType: !1704, size: 256, offset: 3072)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2718, file: !644, line: 420, baseType: !1706, size: 768, offset: 3328)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2718, file: !644, line: 421, baseType: !1704, size: 256, offset: 4096)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2718, file: !644, line: 422, baseType: !1717, size: 1792, offset: 4352)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2718, file: !644, line: 423, baseType: !1721, size: 1920, offset: 6144)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2718, file: !644, line: 424, baseType: !1726, size: 20608, offset: 8064)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2718, file: !644, line: 425, baseType: !431, size: 32, offset: 28672)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2735)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2736)
!2736 = !{!2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2735, file: !644, line: 447, baseType: !648, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2735, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2735, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2735, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2735, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2735, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2735, file: !644, line: 453, baseType: !1741, size: 96, offset: 192)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2735, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2735, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2735, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2735, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2735, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2735, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2735, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2735, file: !644, line: 461, baseType: !1752, size: 64, offset: 512)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2735, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2735, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2735, file: !644, line: 464, baseType: !1756, size: 128, offset: 640)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2735, file: !644, line: 465, baseType: !1758, size: 160, offset: 768)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2735, file: !644, line: 466, baseType: !1760, size: 160, offset: 928)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2735, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2758 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2759, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!2759 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2760 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2761, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2762, splitDebugInlining: false, nameTableKind: None)
!2761 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2762 = !{!106, !107, !22, !2763}
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2765)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2766)
!2766 = !{!2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2765, file: !644, line: 447, baseType: !648, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2765, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2765, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2765, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2765, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2765, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2765, file: !644, line: 453, baseType: !1741, size: 96, offset: 192)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2765, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2765, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2765, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2765, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2765, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2765, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2765, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2765, file: !644, line: 461, baseType: !1752, size: 64, offset: 512)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2765, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2765, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2765, file: !644, line: 464, baseType: !1756, size: 128, offset: 640)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2765, file: !644, line: 465, baseType: !1758, size: 160, offset: 768)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2765, file: !644, line: 466, baseType: !1760, size: 160, offset: 928)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2765, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2788 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2789, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2790, splitDebugInlining: false, nameTableKind: None)
!2789 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2790 = !{!2791, !106, !107}
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2793)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2794)
!2794 = !{!2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2793, file: !644, line: 447, baseType: !648, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2793, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2793, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2793, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2793, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2793, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2793, file: !644, line: 453, baseType: !1741, size: 96, offset: 192)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2793, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2793, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2793, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2793, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2793, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2793, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2793, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2793, file: !644, line: 461, baseType: !1752, size: 64, offset: 512)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2793, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2793, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2793, file: !644, line: 464, baseType: !1756, size: 128, offset: 640)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2793, file: !644, line: 465, baseType: !1758, size: 160, offset: 768)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2793, file: !644, line: 466, baseType: !1760, size: 160, offset: 928)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2793, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2817, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2818, splitDebugInlining: false, nameTableKind: None)
!2817 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2818 = !{!2819, !108, !106, !107}
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 32)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2821, line: 98, size: 256, elements: !2822)
!2821 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2822 = !{!2823, !2828, !2833, !2838, !2843, !2848, !2853, !2858}
!2823 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 99, baseType: !2824, size: 32)
!2824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 99, size: 32, elements: !2825)
!2825 = !{!2826, !2827}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2824, file: !2821, line: 99, baseType: !108, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2824, file: !2821, line: 99, baseType: !108, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 100, baseType: !2829, size: 32, offset: 32)
!2829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 100, size: 32, elements: !2830)
!2830 = !{!2831, !2832}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2829, file: !2821, line: 100, baseType: !108, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2829, file: !2821, line: 100, baseType: !108, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 101, baseType: !2834, size: 32, offset: 64)
!2834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 101, size: 32, elements: !2835)
!2835 = !{!2836, !2837}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2834, file: !2821, line: 101, baseType: !108, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2834, file: !2821, line: 101, baseType: !108, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 102, baseType: !2839, size: 32, offset: 96)
!2839 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 102, size: 32, elements: !2840)
!2840 = !{!2841, !2842}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2839, file: !2821, line: 102, baseType: !108, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2839, file: !2821, line: 102, baseType: !108, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 103, baseType: !2844, size: 32, offset: 128)
!2844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 103, size: 32, elements: !2845)
!2845 = !{!2846, !2847}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2844, file: !2821, line: 103, baseType: !108, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2844, file: !2821, line: 103, baseType: !108, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 104, baseType: !2849, size: 32, offset: 160)
!2849 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 104, size: 32, elements: !2850)
!2850 = !{!2851, !2852}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2849, file: !2821, line: 104, baseType: !108, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2849, file: !2821, line: 104, baseType: !108, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 105, baseType: !2854, size: 32, offset: 192)
!2854 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 105, size: 32, elements: !2855)
!2855 = !{!2856, !2857}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2854, file: !2821, line: 105, baseType: !108, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2854, file: !2821, line: 105, baseType: !108, size: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2820, file: !2821, line: 106, baseType: !108, size: 32, offset: 224)
!2859 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2860, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2703, retainedTypes: !2861, splitDebugInlining: false, nameTableKind: None)
!2860 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2861 = !{!2862, !106, !107, !2887, !2661, !108}
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 32)
!2863 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2864)
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2865)
!2865 = !{!2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2864, file: !644, line: 447, baseType: !648, size: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2864, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2864, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2864, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2864, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2864, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2864, file: !644, line: 453, baseType: !1741, size: 96, offset: 192)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2864, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2864, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2864, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2864, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2864, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2864, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2864, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2864, file: !644, line: 461, baseType: !1752, size: 64, offset: 512)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2864, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2864, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2864, file: !644, line: 464, baseType: !1756, size: 128, offset: 640)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2864, file: !644, line: 465, baseType: !1758, size: 160, offset: 768)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2864, file: !644, line: 466, baseType: !1760, size: 160, offset: 928)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2864, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 32)
!2888 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2821, line: 141, baseType: !2889)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2821, line: 97, size: 256, elements: !2890)
!2890 = !{!2891}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2889, file: !2821, line: 107, baseType: !2892, size: 256)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2821, line: 98, size: 256, elements: !2893)
!2893 = !{!2894, !2899, !2904, !2909, !2914, !2919, !2924, !2929}
!2894 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 99, baseType: !2895, size: 32)
!2895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 99, size: 32, elements: !2896)
!2896 = !{!2897, !2898}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2895, file: !2821, line: 99, baseType: !108, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2895, file: !2821, line: 99, baseType: !108, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 100, baseType: !2900, size: 32, offset: 32)
!2900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 100, size: 32, elements: !2901)
!2901 = !{!2902, !2903}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2900, file: !2821, line: 100, baseType: !108, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2900, file: !2821, line: 100, baseType: !108, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 101, baseType: !2905, size: 32, offset: 64)
!2905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 101, size: 32, elements: !2906)
!2906 = !{!2907, !2908}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2905, file: !2821, line: 101, baseType: !108, size: 32)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2905, file: !2821, line: 101, baseType: !108, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 102, baseType: !2910, size: 32, offset: 96)
!2910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 102, size: 32, elements: !2911)
!2911 = !{!2912, !2913}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2910, file: !2821, line: 102, baseType: !108, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2910, file: !2821, line: 102, baseType: !108, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 103, baseType: !2915, size: 32, offset: 128)
!2915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 103, size: 32, elements: !2916)
!2916 = !{!2917, !2918}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2915, file: !2821, line: 103, baseType: !108, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2915, file: !2821, line: 103, baseType: !108, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 104, baseType: !2920, size: 32, offset: 160)
!2920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 104, size: 32, elements: !2921)
!2921 = !{!2922, !2923}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2920, file: !2821, line: 104, baseType: !108, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2920, file: !2821, line: 104, baseType: !108, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 105, baseType: !2925, size: 32, offset: 192)
!2925 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 105, size: 32, elements: !2926)
!2926 = !{!2927, !2928}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2925, file: !2821, line: 105, baseType: !108, size: 32)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2925, file: !2821, line: 105, baseType: !108, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2892, file: !2821, line: 106, baseType: !108, size: 32, offset: 224)
!2930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2931, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1689, retainedTypes: !2932, splitDebugInlining: false, nameTableKind: None)
!2931 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2932 = !{!912, !334, !190, !108, !2933, !2950}
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 426, baseType: !2935)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 411, size: 28704, elements: !2936)
!2936 = !{!2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2935, file: !644, line: 413, baseType: !1704, size: 256)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2935, file: !644, line: 414, baseType: !1706, size: 768, offset: 256)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2935, file: !644, line: 415, baseType: !1704, size: 256, offset: 1024)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2935, file: !644, line: 416, baseType: !1706, size: 768, offset: 1280)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2935, file: !644, line: 417, baseType: !1704, size: 256, offset: 2048)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2935, file: !644, line: 418, baseType: !1706, size: 768, offset: 2304)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2935, file: !644, line: 419, baseType: !1704, size: 256, offset: 3072)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2935, file: !644, line: 420, baseType: !1706, size: 768, offset: 3328)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2935, file: !644, line: 421, baseType: !1704, size: 256, offset: 4096)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2935, file: !644, line: 422, baseType: !1717, size: 1792, offset: 4352)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2935, file: !644, line: 423, baseType: !1721, size: 1920, offset: 6144)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2935, file: !644, line: 424, baseType: !1726, size: 20608, offset: 8064)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2935, file: !644, line: 425, baseType: !431, size: 32, offset: 28672)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2952)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2953)
!2953 = !{!2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2952, file: !644, line: 447, baseType: !648, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2952, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2952, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2952, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2952, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2952, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2952, file: !644, line: 453, baseType: !1741, size: 96, offset: 192)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2952, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2952, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2952, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2952, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2952, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2952, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2952, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2952, file: !644, line: 461, baseType: !1752, size: 64, offset: 512)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2952, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2952, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2952, file: !644, line: 464, baseType: !1756, size: 128, offset: 640)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2952, file: !644, line: 465, baseType: !1758, size: 160, offset: 768)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2952, file: !644, line: 466, baseType: !1760, size: 160, offset: 928)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2952, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2975 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2976, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2977, splitDebugInlining: false, nameTableKind: None)
!2976 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!2977 = !{!2978, !106, !107}
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2980)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2981)
!2981 = !{!2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2980, file: !644, line: 447, baseType: !648, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2980, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2980, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2980, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2980, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2980, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2980, file: !644, line: 453, baseType: !1741, size: 96, offset: 192)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2980, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2980, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2980, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2980, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2980, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2980, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2980, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2980, file: !644, line: 461, baseType: !1752, size: 64, offset: 512)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2980, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2980, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2980, file: !644, line: 464, baseType: !1756, size: 128, offset: 640)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2980, file: !644, line: 465, baseType: !1758, size: 160, offset: 768)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2980, file: !644, line: 466, baseType: !1760, size: 160, offset: 928)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2980, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!3003 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3004, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3005, splitDebugInlining: false, nameTableKind: None)
!3004 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!3005 = !{!123, !283, !137, !1109, !3006, !191, !106}
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 32)
!3007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !191)
!3008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3009, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!3009 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus_iterable_sections.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!3010 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3011, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3012, splitDebugInlining: false, nameTableKind: None)
!3011 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!3012 = !{!3013}
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 32)
!3014 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 532, baseType: !3015)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 500, size: 1088, elements: !3016)
!3016 = !{!3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3015, file: !427, line: 502, baseType: !431, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3015, file: !427, line: 503, baseType: !431, size: 32, offset: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3015, file: !427, line: 504, baseType: !431, size: 32, offset: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3015, file: !427, line: 505, baseType: !431, size: 32, offset: 96)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3015, file: !427, line: 506, baseType: !431, size: 32, offset: 128)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3015, file: !427, line: 507, baseType: !431, size: 32, offset: 160)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3015, file: !427, line: 508, baseType: !431, size: 32, offset: 192)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3015, file: !427, line: 509, baseType: !108, size: 32, offset: 224)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3015, file: !427, line: 510, baseType: !431, size: 32, offset: 256)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3015, file: !427, line: 511, baseType: !431, size: 32, offset: 288)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3015, file: !427, line: 512, baseType: !978, size: 64, offset: 320)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3015, file: !427, line: 513, baseType: !431, size: 32, offset: 384)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3015, file: !427, line: 514, baseType: !431, size: 32, offset: 416)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3015, file: !427, line: 515, baseType: !431, size: 32, offset: 448)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3015, file: !427, line: 516, baseType: !108, size: 32, offset: 480)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3015, file: !427, line: 517, baseType: !431, size: 32, offset: 512)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3015, file: !427, line: 518, baseType: !431, size: 32, offset: 544)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3015, file: !427, line: 519, baseType: !978, size: 64, offset: 576)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3015, file: !427, line: 520, baseType: !431, size: 32, offset: 640)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3015, file: !427, line: 521, baseType: !431, size: 32, offset: 672)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3015, file: !427, line: 522, baseType: !431, size: 32, offset: 704)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3015, file: !427, line: 523, baseType: !108, size: 32, offset: 736)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3015, file: !427, line: 524, baseType: !431, size: 32, offset: 768)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3015, file: !427, line: 525, baseType: !431, size: 32, offset: 800)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3015, file: !427, line: 526, baseType: !978, size: 64, offset: 832)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3015, file: !427, line: 527, baseType: !431, size: 32, offset: 896)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3015, file: !427, line: 528, baseType: !431, size: 32, offset: 928)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3015, file: !427, line: 529, baseType: !978, size: 64, offset: 960)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3015, file: !427, line: 530, baseType: !431, size: 32, offset: 1024)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3015, file: !427, line: 531, baseType: !431, size: 32, offset: 1056)
!3047 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3048, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3048 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!3049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3050, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3051, retainedTypes: !3067, splitDebugInlining: false, nameTableKind: None)
!3050 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!3051 = !{!3052, !3059, !3063}
!3052 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3053, line: 38, baseType: !32, size: 32, elements: !3054)
!3053 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3054 = !{!3055, !3056, !3057, !3058}
!3055 = !DIEnumerator(name: "HAL_OK", value: 0)
!3056 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3057 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3058 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3059 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !951, line: 184, baseType: !32, size: 32, elements: !3060)
!3060 = !{!3061, !3062}
!3061 = !DIEnumerator(name: "RESET", value: 0)
!3062 = !DIEnumerator(name: "SET", value: 1)
!3063 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !951, line: 190, baseType: !32, size: 32, elements: !3064)
!3064 = !{!3065, !3066}
!3065 = !DIEnumerator(name: "DISABLE", value: 0)
!3066 = !DIEnumerator(name: "ENABLE", value: 1)
!3067 = !{!106, !3068, !190, !108, !1598, !3102, !3108, !3119, !126, !3120, !109}
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 32)
!3069 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 532, baseType: !3070)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 500, size: 1088, elements: !3071)
!3071 = !{!3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3070, file: !427, line: 502, baseType: !431, size: 32)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3070, file: !427, line: 503, baseType: !431, size: 32, offset: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3070, file: !427, line: 504, baseType: !431, size: 32, offset: 64)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3070, file: !427, line: 505, baseType: !431, size: 32, offset: 96)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3070, file: !427, line: 506, baseType: !431, size: 32, offset: 128)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3070, file: !427, line: 507, baseType: !431, size: 32, offset: 160)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3070, file: !427, line: 508, baseType: !431, size: 32, offset: 192)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3070, file: !427, line: 509, baseType: !108, size: 32, offset: 224)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3070, file: !427, line: 510, baseType: !431, size: 32, offset: 256)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3070, file: !427, line: 511, baseType: !431, size: 32, offset: 288)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3070, file: !427, line: 512, baseType: !978, size: 64, offset: 320)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3070, file: !427, line: 513, baseType: !431, size: 32, offset: 384)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3070, file: !427, line: 514, baseType: !431, size: 32, offset: 416)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3070, file: !427, line: 515, baseType: !431, size: 32, offset: 448)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3070, file: !427, line: 516, baseType: !108, size: 32, offset: 480)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3070, file: !427, line: 517, baseType: !431, size: 32, offset: 512)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3070, file: !427, line: 518, baseType: !431, size: 32, offset: 544)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3070, file: !427, line: 519, baseType: !978, size: 64, offset: 576)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3070, file: !427, line: 520, baseType: !431, size: 32, offset: 640)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3070, file: !427, line: 521, baseType: !431, size: 32, offset: 672)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3070, file: !427, line: 522, baseType: !431, size: 32, offset: 704)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3070, file: !427, line: 523, baseType: !108, size: 32, offset: 736)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3070, file: !427, line: 524, baseType: !431, size: 32, offset: 768)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3070, file: !427, line: 525, baseType: !431, size: 32, offset: 800)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3070, file: !427, line: 526, baseType: !978, size: 64, offset: 832)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3070, file: !427, line: 527, baseType: !431, size: 32, offset: 896)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3070, file: !427, line: 528, baseType: !431, size: 32, offset: 928)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3070, file: !427, line: 529, baseType: !978, size: 64, offset: 960)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3070, file: !427, line: 530, baseType: !431, size: 32, offset: 1024)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3070, file: !427, line: 531, baseType: !431, size: 32, offset: 1056)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !427, line: 494, baseType: !3104)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 490, size: 64, elements: !3105)
!3105 = !{!3106, !3107}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3104, file: !427, line: 492, baseType: !431, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3104, file: !427, line: 493, baseType: !431, size: 32, offset: 32)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 32)
!3109 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !427, line: 369, baseType: !3110)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 360, size: 224, elements: !3111)
!3111 = !{!3112, !3113, !3114, !3115, !3116, !3117, !3118}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3110, file: !427, line: 362, baseType: !431, size: 32)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3110, file: !427, line: 363, baseType: !431, size: 32, offset: 32)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3110, file: !427, line: 364, baseType: !431, size: 32, offset: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3110, file: !427, line: 365, baseType: !431, size: 32, offset: 96)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3110, file: !427, line: 366, baseType: !431, size: 32, offset: 128)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3110, file: !427, line: 367, baseType: !431, size: 32, offset: 160)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3110, file: !427, line: 368, baseType: !431, size: 32, offset: 192)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 32)
!3121 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !427, line: 441, baseType: !3122)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 430, size: 320, elements: !3123)
!3123 = !{!3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3122, file: !427, line: 432, baseType: !431, size: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3122, file: !427, line: 433, baseType: !431, size: 32, offset: 32)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3122, file: !427, line: 434, baseType: !431, size: 32, offset: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3122, file: !427, line: 435, baseType: !431, size: 32, offset: 96)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3122, file: !427, line: 436, baseType: !431, size: 32, offset: 128)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3122, file: !427, line: 437, baseType: !431, size: 32, offset: 160)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3122, file: !427, line: 438, baseType: !431, size: 32, offset: 192)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3122, file: !427, line: 439, baseType: !431, size: 32, offset: 224)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3122, file: !427, line: 440, baseType: !1263, size: 64, offset: 256)
!3133 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3134, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3135, retainedTypes: !3136, splitDebugInlining: false, nameTableKind: None)
!3134 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!3135 = !{!950}
!3136 = !{!3137, !108, !3145, !3151, !3162}
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !644, line: 770, baseType: !3139)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 764, size: 128, elements: !3140)
!3140 = !{!3141, !3142, !3143, !3144}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3139, file: !644, line: 766, baseType: !431, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3139, file: !644, line: 767, baseType: !431, size: 32, offset: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3139, file: !644, line: 768, baseType: !431, size: 32, offset: 64)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3139, file: !644, line: 769, baseType: !648, size: 32, offset: 96)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 32)
!3146 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !427, line: 494, baseType: !3147)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 490, size: 64, elements: !3148)
!3148 = !{!3149, !3150}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3147, file: !427, line: 492, baseType: !431, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3147, file: !427, line: 493, baseType: !431, size: 32, offset: 32)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !427, line: 369, baseType: !3153)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 360, size: 224, elements: !3154)
!3154 = !{!3155, !3156, !3157, !3158, !3159, !3160, !3161}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3153, file: !427, line: 362, baseType: !431, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3153, file: !427, line: 363, baseType: !431, size: 32, offset: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3153, file: !427, line: 364, baseType: !431, size: 32, offset: 64)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3153, file: !427, line: 365, baseType: !431, size: 32, offset: 96)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3153, file: !427, line: 366, baseType: !431, size: 32, offset: 128)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3153, file: !427, line: 367, baseType: !431, size: 32, offset: 160)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3153, file: !427, line: 368, baseType: !431, size: 32, offset: 192)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 32)
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 532, baseType: !3164)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 500, size: 1088, elements: !3165)
!3165 = !{!3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3164, file: !427, line: 502, baseType: !431, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3164, file: !427, line: 503, baseType: !431, size: 32, offset: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3164, file: !427, line: 504, baseType: !431, size: 32, offset: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3164, file: !427, line: 505, baseType: !431, size: 32, offset: 96)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3164, file: !427, line: 506, baseType: !431, size: 32, offset: 128)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3164, file: !427, line: 507, baseType: !431, size: 32, offset: 160)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3164, file: !427, line: 508, baseType: !431, size: 32, offset: 192)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3164, file: !427, line: 509, baseType: !108, size: 32, offset: 224)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3164, file: !427, line: 510, baseType: !431, size: 32, offset: 256)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3164, file: !427, line: 511, baseType: !431, size: 32, offset: 288)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3164, file: !427, line: 512, baseType: !978, size: 64, offset: 320)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3164, file: !427, line: 513, baseType: !431, size: 32, offset: 384)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3164, file: !427, line: 514, baseType: !431, size: 32, offset: 416)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3164, file: !427, line: 515, baseType: !431, size: 32, offset: 448)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3164, file: !427, line: 516, baseType: !108, size: 32, offset: 480)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3164, file: !427, line: 517, baseType: !431, size: 32, offset: 512)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3164, file: !427, line: 518, baseType: !431, size: 32, offset: 544)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3164, file: !427, line: 519, baseType: !978, size: 64, offset: 576)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3164, file: !427, line: 520, baseType: !431, size: 32, offset: 640)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3164, file: !427, line: 521, baseType: !431, size: 32, offset: 672)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3164, file: !427, line: 522, baseType: !431, size: 32, offset: 704)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3164, file: !427, line: 523, baseType: !108, size: 32, offset: 736)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3164, file: !427, line: 524, baseType: !431, size: 32, offset: 768)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3164, file: !427, line: 525, baseType: !431, size: 32, offset: 800)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3164, file: !427, line: 526, baseType: !978, size: 64, offset: 832)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3164, file: !427, line: 527, baseType: !431, size: 32, offset: 896)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3164, file: !427, line: 528, baseType: !431, size: 32, offset: 928)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3164, file: !427, line: 529, baseType: !978, size: 64, offset: 960)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3164, file: !427, line: 530, baseType: !431, size: 32, offset: 1024)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3164, file: !427, line: 531, baseType: !431, size: 32, offset: 1056)
!3196 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3197, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3198, splitDebugInlining: false, nameTableKind: None)
!3197 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!3198 = !{!106, !137}
!3199 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3200, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3201, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!3200 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!3201 = !{!3202, !3209, !30}
!3202 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3203, line: 14, baseType: !32, size: 32, elements: !3204)
!3203 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3204 = !{!3205, !3206, !3207, !3208}
!3205 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3206 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3207 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3208 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3209 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3203, line: 42, baseType: !32, size: 32, elements: !3210)
!3210 = !{!3211, !3212, !3213, !3214, !3215, !3216}
!3211 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3212 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3213 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3214 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3215 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3216 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3217 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3218, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!3218 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!3219 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3220, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3221, splitDebugInlining: false, nameTableKind: None)
!3220 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!3221 = !{!106, !107, !3222, !3237}
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 32)
!3223 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !3224)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !3225)
!3225 = !{!3226, !3232}
!3226 = !DIDerivedType(tag: DW_TAG_member, scope: !3224, file: !151, line: 38, baseType: !3227, size: 32)
!3227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3224, file: !151, line: 38, size: 32, elements: !3228)
!3228 = !{!3229, !3231}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3227, file: !151, line: 39, baseType: !3230, size: 32)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 32)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3227, file: !151, line: 40, baseType: !3230, size: 32)
!3232 = !DIDerivedType(tag: DW_TAG_member, scope: !3224, file: !151, line: 42, baseType: !3233, size: 32, offset: 32)
!3233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3224, file: !151, line: 42, size: 32, elements: !3234)
!3234 = !{!3235, !3236}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3233, file: !151, line: 43, baseType: !3230, size: 32)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3233, file: !151, line: 44, baseType: !3230, size: 32)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 32)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !3239)
!3239 = !{!3240, !3284, !3296, !3297, !3298, !3299, !3305, !3318}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3238, file: !168, line: 247, baseType: !3241, size: 384)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !3242)
!3242 = !{!3243, !3253, !3260, !3261, !3262, !3271, !3272, !3273}
!3243 = !DIDerivedType(tag: DW_TAG_member, scope: !3241, file: !168, line: 60, baseType: !3244, size: 64)
!3244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3241, file: !168, line: 60, size: 64, elements: !3245)
!3245 = !{!3246, !3247}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3244, file: !168, line: 61, baseType: !3223, size: 64)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3244, file: !168, line: 62, baseType: !3248, size: 64)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !3249)
!3249 = !{!3250}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3248, file: !180, line: 50, baseType: !3251, size: 64)
!3251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3252, size: 64, elements: !185)
!3252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 32)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3241, file: !168, line: 68, baseType: !3254, size: 32, offset: 64)
!3254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3255, size: 32)
!3255 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !3256)
!3256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !3257)
!3257 = !{!3258}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3256, file: !146, line: 232, baseType: !3259, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !3224)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3241, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3241, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!3262 = !DIDerivedType(tag: DW_TAG_member, scope: !3241, file: !168, line: 90, baseType: !3263, size: 16, offset: 112)
!3263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3241, file: !168, line: 90, size: 16, elements: !3264)
!3264 = !{!3265, !3270}
!3265 = !DIDerivedType(tag: DW_TAG_member, scope: !3263, file: !168, line: 91, baseType: !3266, size: 16)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3263, file: !168, line: 91, size: 16, elements: !3267)
!3267 = !{!3268, !3269}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3266, file: !168, line: 96, baseType: !200, size: 8)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3266, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3263, file: !168, line: 100, baseType: !126, size: 16)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3241, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3241, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3241, file: !168, line: 131, baseType: !3274, size: 192, offset: 192)
!3274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !3275)
!3275 = !{!3276, !3277, !3283}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3274, file: !146, line: 245, baseType: !3223, size: 64)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3274, file: !146, line: 246, baseType: !3278, size: 32, offset: 64)
!3278 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !3279)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 32)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{null, !3282}
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3274, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3238, file: !168, line: 250, baseType: !3285, size: 288, offset: 384)
!3285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !3286)
!3286 = !{!3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295}
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3285, file: !219, line: 26, baseType: !108, size: 32)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3285, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3285, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3285, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3285, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3285, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3285, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3285, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3285, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3238, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3238, file: !168, line: 256, baseType: !3255, size: 64, offset: 704)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3238, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3238, file: !168, line: 300, baseType: !3300, size: 96, offset: 800)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !3301)
!3301 = !{!3302, !3303, !3304}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3300, file: !168, line: 153, baseType: !22, size: 32)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3300, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3300, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3238, file: !168, line: 325, baseType: !3306, size: 32, offset: 896)
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 32)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !3308)
!3308 = !{!3309, !3315, !3316}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3307, file: !142, line: 5074, baseType: !3310, size: 96)
!3310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !3311)
!3311 = !{!3312, !3313, !3314}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3310, file: !245, line: 57, baseType: !248, size: 32)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3310, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3310, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3307, file: !142, line: 5075, baseType: !3255, size: 64, offset: 96)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3307, file: !142, line: 5076, baseType: !3317, offset: 160)
!3317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3238, file: !168, line: 343, baseType: !3319, size: 64, offset: 928)
!3319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !3320)
!3320 = !{!3321, !3322}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3319, file: !219, line: 63, baseType: !108, size: 32)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3319, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!3323 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3324, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3325, splitDebugInlining: false, nameTableKind: None)
!3324 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!3325 = !{!22, !106, !107}
!3326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3327, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!3327 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!3328 = !{!"Ubuntu clang version 14.0.6"}
!3329 = !{i32 7, !"Dwarf Version", i32 4}
!3330 = !{i32 2, !"Debug Info Version", i32 3}
!3331 = !{i32 1, !"wchar_size", i32 4}
!3332 = !{i32 1, !"min_enum_size", i32 4}
!3333 = !{i32 1, !"branch-target-enforcement", i32 0}
!3334 = !{i32 1, !"sign-return-address", i32 0}
!3335 = !{i32 1, !"sign-return-address-all", i32 0}
!3336 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3337 = !{i32 7, !"frame-pointer", i32 2}
!3338 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3339, file: !3339, line: 26, type: !337, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !256)
!3339 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3340 = !DILocation(line: 28, column: 1, scope: !3338)
!3341 = !{i64 2155118936, i64 2155118956, i64 2155119019}
!3342 = !DILocation(line: 29, column: 1, scope: !3338)
!3343 = !{i64 2155119351, i64 2155119371, i64 2155119434}
!3344 = !DILocation(line: 30, column: 1, scope: !3338)
!3345 = !{i64 2155119770, i64 2155119790, i64 2155119853}
!3346 = !DILocation(line: 31, column: 1, scope: !3338)
!3347 = !{i64 2155120189, i64 2155120209, i64 2155120272}
!3348 = !DILocation(line: 33, column: 1, scope: !3338)
!3349 = !{i64 2155120481, i64 2155120501, i64 2155120564}
!3350 = !DILocation(line: 35, column: 1, scope: !3338)
!3351 = !{i64 2155120806, i64 2155120826, i64 2155120889}
!3352 = !DILocation(line: 50, column: 1, scope: !3338)
!3353 = !{i64 2155121233, i64 2155121253, i64 2155121316}
!3354 = !DILocation(line: 54, column: 1, scope: !3338)
!3355 = !{i64 2155121672, i64 2155121692, i64 2155121755}
!3356 = !DILocation(line: 61, column: 1, scope: !3338)
!3357 = !{i64 2155121989, i64 2155122009, i64 2155122072}
!3358 = !DILocation(line: 63, column: 1, scope: !3338)
!3359 = !{i64 2155122369, i64 2155122389, i64 2155122452}
!3360 = !DILocation(line: 64, column: 1, scope: !3338)
!3361 = !{i64 2155122891, i64 2155122911, i64 2155122974}
!3362 = !DILocation(line: 65, column: 1, scope: !3338)
!3363 = !{i64 2155123389, i64 2155123409, i64 2155123472}
!3364 = !DILocation(line: 66, column: 1, scope: !3338)
!3365 = !{i64 2155123871, i64 2155123891, i64 2155123954}
!3366 = !DILocation(line: 67, column: 1, scope: !3338)
!3367 = !{i64 2155124378, i64 2155124398, i64 2155124461}
!3368 = !DILocation(line: 68, column: 1, scope: !3338)
!3369 = !{i64 2155124866, i64 2155124886, i64 2155124949}
!3370 = !DILocation(line: 70, column: 1, scope: !3338)
!3371 = !{i64 2155125334, i64 2155125354, i64 2155125417}
!3372 = !DILocation(line: 71, column: 1, scope: !3338)
!3373 = !{i64 2155125776, i64 2155125796, i64 2155125859}
!3374 = !DILocation(line: 72, column: 1, scope: !3338)
!3375 = !{i64 2155126234, i64 2155126254, i64 2155126317}
!3376 = !DILocation(line: 79, column: 1, scope: !3338)
!3377 = !{i64 2155126688, i64 2155126708, i64 2155126771}
!3378 = !DILocation(line: 80, column: 1, scope: !3338)
!3379 = !{i64 2155127199, i64 2155127219, i64 2155127282}
!3380 = !DILocation(line: 82, column: 1, scope: !3338)
!3381 = !{i64 2155131751, i64 2155131771, i64 2155131834}
!3382 = !DILocation(line: 97, column: 1, scope: !3338)
!3383 = !{i64 2155132088, i64 2155132108, i64 2155132171}
!3384 = !DILocation(line: 99, column: 1, scope: !3338)
!3385 = !{i64 2155132306, i64 2155132326, i64 2155132389}
!3386 = !DILocation(line: 102, column: 1, scope: !3338)
!3387 = !{i64 2155132563, i64 2155132583, i64 2155132646}
!3388 = !DILocation(line: 105, column: 1, scope: !3338)
!3389 = !{i64 2155132803, i64 2155132823, i64 2155132886}
!3390 = !DILocation(line: 115, column: 1, scope: !3338)
!3391 = !{i64 2155133142, i64 2155133162, i64 2155133225}
!3392 = !DILocation(line: 118, column: 1, scope: !3338)
!3393 = !{i64 2155133486, i64 2155133506, i64 2155133569}
!3394 = !DILocation(line: 32, column: 1, scope: !3395)
!3395 = !DILexicalBlockFile(scope: !3338, file: !3396, discriminator: 0)
!3396 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3397 = !{i64 2155133842, i64 2155133862, i64 2155133925}
!3398 = !DILocation(line: 33, column: 1, scope: !3395)
!3399 = !{i64 2155134354, i64 2155134374, i64 2155134437}
!3400 = !DILocation(line: 53, column: 1, scope: !3395)
!3401 = !{i64 2155134862, i64 2155134882, i64 2155134945}
!3402 = !DILocation(line: 54, column: 1, scope: !3395)
!3403 = !{i64 2155135280, i64 2155135300, i64 2155135363}
!3404 = !DILocation(line: 55, column: 1, scope: !3395)
!3405 = !{i64 2155135698, i64 2155135718, i64 2155135781}
!3406 = !DILocation(line: 56, column: 1, scope: !3395)
!3407 = !{i64 2155136116, i64 2155136136, i64 2155136199}
!3408 = !DILocation(line: 57, column: 1, scope: !3395)
!3409 = !{i64 2155136534, i64 2155136554, i64 2155136617}
!3410 = !DILocation(line: 58, column: 1, scope: !3395)
!3411 = !{i64 2155136952, i64 2155136972, i64 2155137035}
!3412 = !DILocation(line: 59, column: 1, scope: !3395)
!3413 = !{i64 2155137370, i64 2155137390, i64 2155137453}
!3414 = !DILocation(line: 60, column: 1, scope: !3395)
!3415 = !{i64 2155137794, i64 2155137814, i64 2155137877}
!3416 = !DILocation(line: 61, column: 1, scope: !3395)
!3417 = !{i64 2155138111, i64 2155138131, i64 2155138194}
!3418 = !DILocation(line: 70, column: 1, scope: !3395)
!3419 = !{i64 2155138340, i64 2155138360, i64 2155138423}
!3420 = !DILocation(line: 72, column: 1, scope: !3395)
!3421 = !{i64 2155138672, i64 2155138692, i64 2155138755}
!3422 = !DILocation(line: 73, column: 1, scope: !3395)
!3423 = !{i64 2155139122, i64 2155139142, i64 2155139205}
!3424 = !DILocation(line: 74, column: 1, scope: !3395)
!3425 = !{i64 2155139572, i64 2155139592, i64 2155139655}
!3426 = !DILocation(line: 75, column: 1, scope: !3395)
!3427 = !{i64 2155140022, i64 2155140042, i64 2155140105}
!3428 = !DILocation(line: 76, column: 1, scope: !3395)
!3429 = !{i64 2155140472, i64 2155140492, i64 2155140555}
!3430 = !DILocation(line: 77, column: 1, scope: !3395)
!3431 = !{i64 2155140922, i64 2155140942, i64 2155141005}
!3432 = !DILocation(line: 78, column: 1, scope: !3395)
!3433 = !{i64 2155145433, i64 2155145453, i64 2155145516}
!3434 = !DILocation(line: 79, column: 1, scope: !3395)
!3435 = !{i64 2155145883, i64 2155145903, i64 2155145966}
!3436 = !DILocation(line: 80, column: 1, scope: !3395)
!3437 = !{i64 2155146336, i64 2155146356, i64 2155146419}
!3438 = !DILocation(line: 84, column: 1, scope: !3395)
!3439 = !{i64 2155146668, i64 2155146688, i64 2155146751}
!3440 = !DILocation(line: 91, column: 1, scope: !3395)
!3441 = !{i64 2155147065, i64 2155147085, i64 2155147148}
!3442 = !DILocation(line: 93, column: 1, scope: !3395)
!3443 = !{i64 2155147432, i64 2155147452, i64 2155147515}
!3444 = !DILocation(line: 106, column: 1, scope: !3395)
!3445 = !{i64 2155147702, i64 2155147722, i64 2155147785}
!3446 = !DILocation(line: 11, column: 1, scope: !3447)
!3447 = !DILexicalBlockFile(scope: !3338, file: !3448, discriminator: 0)
!3448 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3449 = distinct !DISubprogram(name: "listener_callback_example", scope: !114, file: !114, line: 66, type: !292, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3450)
!3450 = !{!3451, !3452}
!3451 = !DILocalVariable(name: "chan", arg: 1, scope: !3449, file: !114, line: 66, type: !294)
!3452 = !DILocalVariable(name: "acc", scope: !3449, file: !114, line: 68, type: !3453)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 32)
!3454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!3455 = !DILocation(line: 0, scope: !3449)
!3456 = !DILocation(line: 68, column: 30, scope: !3449)
!3457 = !DILocation(line: 70, column: 2, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !114, line: 70, column: 2)
!3459 = distinct !DILexicalBlock(scope: !3460, file: !114, line: 70, column: 2)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !114, line: 70, column: 2)
!3461 = distinct !DILexicalBlock(scope: !3449, file: !114, line: 70, column: 2)
!3462 = !DILocation(line: 71, column: 1, scope: !3449)
!3463 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !117, file: !117, line: 416, type: !3464, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3466)
!3464 = !DISubroutineType(types: !3465)
!3465 = !{!13, !294}
!3466 = !{!3467}
!3467 = !DILocalVariable(name: "chan", arg: 1, scope: !3463, file: !117, line: 416, type: !294)
!3468 = !DILocation(line: 0, scope: !3463)
!3469 = !DILocation(line: 420, column: 15, scope: !3463)
!3470 = !DILocation(line: 420, column: 2, scope: !3463)
!3471 = distinct !DISubprogram(name: "simple_chan_validator", scope: !114, file: !114, line: 44, type: !134, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3472)
!3472 = !{!3473, !3474, !3475}
!3473 = !DILocalVariable(name: "msg", arg: 1, scope: !3471, file: !114, line: 44, type: !13)
!3474 = !DILocalVariable(name: "msg_size", arg: 2, scope: !3471, file: !114, line: 44, type: !137)
!3475 = !DILocalVariable(name: "simple", scope: !3471, file: !114, line: 48, type: !3476)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!3477 = !DILocation(line: 0, scope: !3471)
!3478 = !DILocation(line: 48, column: 22, scope: !3471)
!3479 = !DILocation(line: 50, column: 7, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3471, file: !114, line: 50, column: 6)
!3481 = !DILocation(line: 50, column: 21, scope: !3480)
!3482 = !DILocation(line: 55, column: 1, scope: !3471)
!3483 = distinct !DISubprogram(name: "subscriber_task", scope: !114, file: !114, line: 77, type: !337, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3484)
!3484 = !{!3485, !3486}
!3485 = !DILocalVariable(name: "chan", scope: !3483, file: !114, line: 79, type: !294)
!3486 = !DILocalVariable(name: "acc", scope: !3487, file: !114, line: 82, type: !372)
!3487 = distinct !DILexicalBlock(scope: !3483, file: !114, line: 81, column: 53)
!3488 = !DILocation(line: 79, column: 2, scope: !3483)
!3489 = !DILocation(line: 0, scope: !3483)
!3490 = !DILocation(line: 81, column: 10, scope: !3483)
!3491 = !DILocation(line: 81, column: 9, scope: !3483)
!3492 = !DILocation(line: 81, column: 2, scope: !3483)
!3493 = !DILocation(line: 82, column: 3, scope: !3487)
!3494 = !DILocation(line: 82, column: 18, scope: !3487)
!3495 = !DILocation(line: 84, column: 25, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3487, file: !114, line: 84, column: 7)
!3497 = !DILocation(line: 84, column: 22, scope: !3496)
!3498 = !DILocation(line: 84, column: 7, scope: !3487)
!3499 = !DILocation(line: 85, column: 41, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3496, file: !114, line: 84, column: 31)
!3501 = !DILocation(line: 85, column: 4, scope: !3500)
!3502 = !DILocation(line: 87, column: 4, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !114, line: 87, column: 4)
!3504 = distinct !DILexicalBlock(scope: !3505, file: !114, line: 87, column: 4)
!3505 = distinct !DILexicalBlock(scope: !3506, file: !114, line: 87, column: 4)
!3506 = distinct !DILexicalBlock(scope: !3500, file: !114, line: 87, column: 4)
!3507 = !DILocation(line: 88, column: 3, scope: !3500)
!3508 = !DILocation(line: 89, column: 2, scope: !3483)
!3509 = distinct !{!3509, !3492, !3508}
!3510 = !DILocation(line: 90, column: 1, scope: !3483)
!3511 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3512, file: !3512, line: 403, type: !3513, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3515)
!3512 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3513 = !DISubroutineType(types: !3514)
!3514 = !{!109, !109}
!3515 = !{!3516}
!3516 = !DILocalVariable(name: "t", arg: 1, scope: !3511, file: !3512, line: 403, type: !109)
!3517 = !DILocation(line: 0, scope: !3511)
!3518 = !DILocalVariable(name: "t", arg: 1, scope: !3519, file: !3512, line: 102, type: !109)
!3519 = distinct !DISubprogram(name: "z_tmcvt", scope: !3512, file: !3512, line: 102, type: !3520, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3522)
!3520 = !DISubroutineType(types: !3521)
!3521 = !{!109, !109, !108, !108, !136, !136, !136, !136}
!3522 = !{!3518, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532}
!3523 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3519, file: !3512, line: 102, type: !108)
!3524 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3519, file: !3512, line: 103, type: !108)
!3525 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3519, file: !3512, line: 103, type: !136)
!3526 = !DILocalVariable(name: "result32", arg: 5, scope: !3519, file: !3512, line: 104, type: !136)
!3527 = !DILocalVariable(name: "round_up", arg: 6, scope: !3519, file: !3512, line: 104, type: !136)
!3528 = !DILocalVariable(name: "round_off", arg: 7, scope: !3519, file: !3512, line: 105, type: !136)
!3529 = !DILocalVariable(name: "mul_ratio", scope: !3519, file: !3512, line: 107, type: !136)
!3530 = !DILocalVariable(name: "div_ratio", scope: !3519, file: !3512, line: 109, type: !136)
!3531 = !DILocalVariable(name: "off", scope: !3519, file: !3512, line: 116, type: !109)
!3532 = !DILocalVariable(name: "rdivisor", scope: !3533, file: !3512, line: 119, type: !108)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !3512, line: 118, column: 18)
!3534 = distinct !DILexicalBlock(scope: !3519, file: !3512, line: 118, column: 6)
!3535 = !DILocation(line: 0, scope: !3519, inlinedAt: !3536)
!3536 = distinct !DILocation(line: 406, column: 9, scope: !3511)
!3537 = !DILocation(line: 145, column: 13, scope: !3538, inlinedAt: !3536)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !3512, line: 144, column: 10)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !3512, line: 142, column: 7)
!3540 = distinct !DILexicalBlock(scope: !3541, file: !3512, line: 141, column: 24)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !3512, line: 141, column: 13)
!3542 = distinct !DILexicalBlock(scope: !3519, file: !3512, line: 134, column: 6)
!3543 = !DILocation(line: 406, column: 2, scope: !3511)
!3544 = distinct !DISubprogram(name: "main", scope: !114, file: !114, line: 120, type: !337, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3545)
!3545 = !{!3546, !3547, !3548, !3549}
!3546 = !DILocalVariable(name: "err", scope: !3544, file: !114, line: 122, type: !107)
!3547 = !DILocalVariable(name: "value", scope: !3544, file: !114, line: 122, type: !107)
!3548 = !DILocalVariable(name: "acc1", scope: !3544, file: !114, line: 123, type: !372)
!3549 = !DILocalVariable(name: "v", scope: !3544, file: !114, line: 124, type: !3550)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 32)
!3551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !360)
!3552 = !DILocation(line: 122, column: 2, scope: !3544)
!3553 = !DILocation(line: 123, column: 2, scope: !3544)
!3554 = !DILocation(line: 123, column: 17, scope: !3544)
!3555 = !DILocation(line: 124, column: 32, scope: !3544)
!3556 = !DILocation(line: 0, scope: !3544)
!3557 = !DILocation(line: 126, column: 2, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !114, line: 126, column: 2)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !114, line: 126, column: 2)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !114, line: 126, column: 2)
!3561 = distinct !DILexicalBlock(scope: !3544, file: !114, line: 126, column: 2)
!3562 = !DILocation(line: 130, column: 8, scope: !3544)
!3563 = !DILocation(line: 132, column: 2, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !114, line: 132, column: 2)
!3565 = distinct !DILexicalBlock(scope: !3566, file: !114, line: 132, column: 2)
!3566 = distinct !DILexicalBlock(scope: !3567, file: !114, line: 132, column: 2)
!3567 = distinct !DILexicalBlock(scope: !3544, file: !114, line: 132, column: 2)
!3568 = !DILocation(line: 133, column: 2, scope: !3544)
!3569 = !DILocation(line: 135, column: 8, scope: !3544)
!3570 = !DILocation(line: 137, column: 2, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !114, line: 137, column: 2)
!3572 = distinct !DILexicalBlock(scope: !3573, file: !114, line: 137, column: 2)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !114, line: 137, column: 2)
!3574 = distinct !DILexicalBlock(scope: !3544, file: !114, line: 137, column: 2)
!3575 = !DILocation(line: 138, column: 2, scope: !3544)
!3576 = !DILocation(line: 140, column: 39, scope: !3544)
!3577 = !DILocation(line: 140, column: 2, scope: !3544)
!3578 = !DILocation(line: 142, column: 2, scope: !3544)
!3579 = !DILocation(line: 144, column: 7, scope: !3544)
!3580 = !DILocation(line: 144, column: 9, scope: !3544)
!3581 = !DILocation(line: 145, column: 7, scope: !3544)
!3582 = !DILocation(line: 145, column: 9, scope: !3544)
!3583 = !DILocation(line: 146, column: 7, scope: !3544)
!3584 = !DILocation(line: 146, column: 9, scope: !3544)
!3585 = !DILocation(line: 147, column: 2, scope: !3544)
!3586 = !DILocation(line: 149, column: 8, scope: !3544)
!3587 = !DILocation(line: 150, column: 44, scope: !3544)
!3588 = !DILocation(line: 150, column: 8, scope: !3544)
!3589 = !DILocation(line: 152, column: 10, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3544, file: !114, line: 152, column: 6)
!3591 = !DILocation(line: 152, column: 6, scope: !3544)
!3592 = !DILocation(line: 153, column: 3, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !114, line: 153, column: 3)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !114, line: 153, column: 3)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !114, line: 153, column: 3)
!3596 = distinct !DILexicalBlock(scope: !3597, file: !114, line: 153, column: 3)
!3597 = distinct !DILexicalBlock(scope: !3590, file: !114, line: 152, column: 16)
!3598 = !DILocation(line: 154, column: 2, scope: !3597)
!3599 = !DILocation(line: 156, column: 8, scope: !3544)
!3600 = !DILocation(line: 157, column: 8, scope: !3544)
!3601 = !DILocation(line: 159, column: 10, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3544, file: !114, line: 159, column: 6)
!3603 = !DILocation(line: 159, column: 6, scope: !3544)
!3604 = !DILocation(line: 160, column: 3, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !114, line: 160, column: 3)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !114, line: 160, column: 3)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !114, line: 160, column: 3)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !114, line: 160, column: 3)
!3609 = distinct !DILexicalBlock(scope: !3602, file: !114, line: 159, column: 22)
!3610 = !DILocation(line: 161, column: 2, scope: !3609)
!3611 = !DILocation(line: 162, column: 1, scope: !3544)
!3612 = distinct !DISubprogram(name: "print_channel_data_iterator", scope: !114, file: !114, line: 97, type: !3613, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3615)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{!136, !294}
!3615 = !{!3616, !3617}
!3616 = !DILocalVariable(name: "chan", arg: 1, scope: !3612, file: !114, line: 97, type: !294)
!3617 = !DILocalVariable(name: "obs", scope: !3618, file: !114, line: 103, type: !265)
!3618 = distinct !DILexicalBlock(scope: !3612, file: !114, line: 103, column: 2)
!3619 = !DILocation(line: 0, scope: !3612)
!3620 = !DILocation(line: 99, column: 2, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3622, file: !114, line: 99, column: 2)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !114, line: 99, column: 2)
!3623 = distinct !DILexicalBlock(scope: !3624, file: !114, line: 99, column: 2)
!3624 = distinct !DILexicalBlock(scope: !3612, file: !114, line: 99, column: 2)
!3625 = !DILocation(line: 100, column: 2, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !114, line: 100, column: 2)
!3627 = distinct !DILexicalBlock(scope: !3628, file: !114, line: 100, column: 2)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !114, line: 100, column: 2)
!3629 = distinct !DILexicalBlock(scope: !3612, file: !114, line: 100, column: 2)
!3630 = !DILocation(line: 101, column: 2, scope: !3612)
!3631 = !DILocation(line: 102, column: 2, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !114, line: 102, column: 2)
!3633 = distinct !DILexicalBlock(scope: !3634, file: !114, line: 102, column: 2)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !114, line: 102, column: 2)
!3635 = distinct !DILexicalBlock(scope: !3612, file: !114, line: 102, column: 2)
!3636 = !DILocation(line: 103, column: 54, scope: !3618)
!3637 = !DILocation(line: 0, scope: !3618)
!3638 = !DILocation(line: 103, column: 65, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3618, file: !114, line: 103, column: 2)
!3640 = !DILocation(line: 103, column: 70, scope: !3639)
!3641 = !DILocation(line: 103, column: 2, scope: !3618)
!3642 = !DILocation(line: 107, column: 2, scope: !3612)
!3643 = !DILocation(line: 104, column: 3, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3645, file: !114, line: 104, column: 3)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !114, line: 104, column: 3)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !114, line: 104, column: 3)
!3647 = distinct !DILexicalBlock(scope: !3648, file: !114, line: 104, column: 3)
!3648 = distinct !DILexicalBlock(scope: !3639, file: !114, line: 103, column: 86)
!3649 = !DILocation(line: 103, column: 79, scope: !3639)
!3650 = distinct !{!3650, !3641, !3651}
!3651 = !DILocation(line: 105, column: 2, scope: !3618)
!3652 = distinct !DISubprogram(name: "print_observer_data_iterator", scope: !114, file: !114, line: 110, type: !3653, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3655)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!136, !267}
!3655 = !{!3656}
!3656 = !DILocalVariable(name: "obs", arg: 1, scope: !3652, file: !114, line: 110, type: !267)
!3657 = !DILocation(line: 0, scope: !3652)
!3658 = !DILocation(line: 112, column: 2, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !114, line: 112, column: 2)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !114, line: 112, column: 2)
!3661 = distinct !DILexicalBlock(scope: !3662, file: !114, line: 112, column: 2)
!3662 = distinct !DILexicalBlock(scope: !3652, file: !114, line: 112, column: 2)
!3663 = !DILocation(line: 114, column: 2, scope: !3652)
!3664 = !DILocation(line: 116, column: 2, scope: !3652)
!3665 = distinct !DISubprogram(name: "k_msleep", scope: !142, file: !142, line: 439, type: !3666, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3668)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{!334, !334}
!3668 = !{!3669}
!3669 = !DILocalVariable(name: "ms", arg: 1, scope: !3665, file: !142, line: 439, type: !334)
!3670 = !DILocation(line: 0, scope: !3665)
!3671 = !DILocation(line: 441, column: 17, scope: !3665)
!3672 = !DILocation(line: 441, column: 9, scope: !3665)
!3673 = !DILocation(line: 441, column: 2, scope: !3665)
!3674 = distinct !DISubprogram(name: "k_sleep", scope: !3675, file: !3675, line: 91, type: !3676, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3682)
!3675 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!3676 = !DISubroutineType(types: !3677)
!3677 = !{!334, !3678}
!3678 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !3679)
!3679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !3680)
!3680 = !{!3681}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3679, file: !103, line: 66, baseType: !102, size: 64)
!3682 = !{!3683}
!3683 = !DILocalVariable(name: "timeout", arg: 1, scope: !3674, file: !3675, line: 91, type: !3678)
!3684 = !DILocation(line: 0, scope: !3674)
!3685 = !DILocation(line: 99, column: 2, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3674, file: !3675, line: 99, column: 2)
!3687 = !{i64 2154841647}
!3688 = !DILocation(line: 100, column: 9, scope: !3674)
!3689 = !DILocation(line: 100, column: 2, scope: !3674)
!3690 = distinct !DISubprogram(name: "zbus_obs_name", scope: !117, file: !117, line: 549, type: !3691, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3693)
!3691 = !DISubroutineType(types: !3692)
!3692 = !{!121, !267}
!3693 = !{!3694}
!3694 = !DILocalVariable(name: "obs", arg: 1, scope: !3690, file: !117, line: 549, type: !267)
!3695 = !DILocation(line: 0, scope: !3690)
!3696 = !DILocation(line: 553, column: 14, scope: !3690)
!3697 = !DILocation(line: 553, column: 2, scope: !3690)
!3698 = distinct !DISubprogram(name: "zbus_chan_name", scope: !117, file: !117, line: 374, type: !3699, scopeLine: 375, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3701)
!3699 = !DISubroutineType(types: !3700)
!3700 = !{!121, !294}
!3701 = !{!3702}
!3702 = !DILocalVariable(name: "chan", arg: 1, scope: !3698, file: !117, line: 374, type: !294)
!3703 = !DILocation(line: 0, scope: !3698)
!3704 = !DILocation(line: 378, column: 15, scope: !3698)
!3705 = !DILocation(line: 378, column: 2, scope: !3698)
!3706 = distinct !DISubprogram(name: "zbus_chan_msg_size", scope: !117, file: !117, line: 432, type: !3707, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3709)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{!126, !294}
!3709 = !{!3710}
!3710 = !DILocalVariable(name: "chan", arg: 1, scope: !3706, file: !117, line: 432, type: !294)
!3711 = !DILocation(line: 0, scope: !3706)
!3712 = !DILocation(line: 436, column: 15, scope: !3706)
!3713 = !DILocation(line: 436, column: 2, scope: !3706)
!3714 = distinct !DISubprogram(name: "cbvprintf_package", scope: !403, file: !403, line: 233, type: !3715, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !3724)
!3715 = !DISubroutineType(types: !3716)
!3716 = !{!107, !106, !137, !108, !121, !3717}
!3717 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3718, line: 99, baseType: !3719)
!3718 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3719 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3718, line: 40, baseType: !3720)
!3720 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !403, baseType: !3721)
!3721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3722)
!3722 = !{!3723}
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3721, file: !403, line: 18, baseType: !106, size: 32)
!3724 = !{!3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3760, !3769, !3772, !3773, !3776, !3779, !3782, !3785, !3791}
!3725 = !DILocalVariable(name: "packaged", arg: 1, scope: !3714, file: !403, line: 233, type: !106)
!3726 = !DILocalVariable(name: "len", arg: 2, scope: !3714, file: !403, line: 233, type: !137)
!3727 = !DILocalVariable(name: "flags", arg: 3, scope: !3714, file: !403, line: 233, type: !108)
!3728 = !DILocalVariable(name: "fmt", arg: 4, scope: !3714, file: !403, line: 234, type: !121)
!3729 = !DILocalVariable(name: "ap", arg: 5, scope: !3714, file: !403, line: 234, type: !3717)
!3730 = !DILocalVariable(name: "buf0", scope: !3714, file: !403, line: 247, type: !401)
!3731 = !DILocalVariable(name: "buf", scope: !3714, file: !403, line: 248, type: !401)
!3732 = !DILocalVariable(name: "size", scope: !3714, file: !403, line: 249, type: !32)
!3733 = !DILocalVariable(name: "align", scope: !3714, file: !403, line: 250, type: !32)
!3734 = !DILocalVariable(name: "str_ptr_pos", scope: !3714, file: !403, line: 251, type: !3735)
!3735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 128, elements: !347)
!3736 = !DILocalVariable(name: "str_ptr_arg", scope: !3714, file: !403, line: 252, type: !3735)
!3737 = !DILocalVariable(name: "s_idx", scope: !3714, file: !403, line: 253, type: !32)
!3738 = !DILocalVariable(name: "s_rw_cnt", scope: !3714, file: !403, line: 254, type: !32)
!3739 = !DILocalVariable(name: "s_ro_cnt", scope: !3714, file: !403, line: 255, type: !32)
!3740 = !DILocalVariable(name: "arg_idx", scope: !3714, file: !403, line: 256, type: !107)
!3741 = !DILocalVariable(name: "i", scope: !3714, file: !403, line: 257, type: !32)
!3742 = !DILocalVariable(name: "s", scope: !3714, file: !403, line: 258, type: !121)
!3743 = !DILocalVariable(name: "parsing", scope: !3714, file: !403, line: 259, type: !136)
!3744 = !DILocalVariable(name: "rws_pos_en", scope: !3714, file: !403, line: 263, type: !136)
!3745 = !DILocalVariable(name: "fros_cnt", scope: !3714, file: !403, line: 268, type: !107)
!3746 = !DILocalVariable(name: "is_str_arg", scope: !3714, file: !403, line: 269, type: !136)
!3747 = !DILocalVariable(name: "pkg_hdr", scope: !3714, file: !403, line: 270, type: !3748)
!3748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3749, size: 32)
!3749 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3750, line: 78, size: 32, elements: !3751)
!3750 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3751 = !{!3752, !3759}
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3749, file: !3750, line: 80, baseType: !3753, size: 32)
!3753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3750, line: 45, size: 32, elements: !3754)
!3754 = !{!3755, !3756, !3757, !3758}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3753, file: !3750, line: 47, baseType: !190, size: 8)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3753, file: !3750, line: 50, baseType: !190, size: 8, offset: 8)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3753, file: !3750, line: 53, baseType: !190, size: 8, offset: 16)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3753, file: !3750, line: 56, baseType: !190, size: 8, offset: 24)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3749, file: !3750, line: 82, baseType: !106, size: 32)
!3760 = !DILocalVariable(name: "v", scope: !3761, file: !403, line: 567, type: !3765)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !403, line: 562, column: 14)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !403, line: 481, column: 18)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !403, line: 466, column: 3)
!3764 = distinct !DILexicalBlock(scope: !3714, file: !403, line: 343, column: 15)
!3765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3714, file: !403, line: 567, size: 64, elements: !3766)
!3766 = !{!3767, !3768}
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3765, file: !403, line: 567, baseType: !394, size: 64)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3765, file: !403, line: 567, baseType: !392, size: 64)
!3769 = !DILocalVariable(name: "is_ro", scope: !3770, file: !403, line: 620, type: !136)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !403, line: 613, column: 19)
!3771 = distinct !DILexicalBlock(scope: !3764, file: !403, line: 613, column: 7)
!3772 = !DILocalVariable(name: "do_ro", scope: !3770, file: !403, line: 621, type: !136)
!3773 = !DILocalVariable(name: "s_ptr_idx", scope: !3774, file: !403, line: 626, type: !108)
!3774 = distinct !DILexicalBlock(scope: !3775, file: !403, line: 625, column: 11)
!3775 = distinct !DILexicalBlock(scope: !3770, file: !403, line: 623, column: 8)
!3776 = !DILocalVariable(name: "v", scope: !3777, file: !403, line: 684, type: !107)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !403, line: 683, column: 35)
!3778 = distinct !DILexicalBlock(scope: !3771, file: !403, line: 683, column: 14)
!3779 = !DILocalVariable(name: "v", scope: !3780, file: !403, line: 691, type: !398)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !403, line: 690, column: 36)
!3781 = distinct !DILexicalBlock(scope: !3778, file: !403, line: 690, column: 14)
!3782 = !DILocalVariable(name: "v", scope: !3783, file: !403, line: 698, type: !105)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !403, line: 697, column: 41)
!3784 = distinct !DILexicalBlock(scope: !3781, file: !403, line: 697, column: 14)
!3785 = !DILocalVariable(name: "pos", scope: !3786, file: !403, line: 762, type: !190)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !403, line: 757, column: 31)
!3787 = distinct !DILexicalBlock(scope: !3788, file: !403, line: 757, column: 3)
!3788 = distinct !DILexicalBlock(scope: !3789, file: !403, line: 757, column: 3)
!3789 = distinct !DILexicalBlock(scope: !3790, file: !403, line: 756, column: 16)
!3790 = distinct !DILexicalBlock(scope: !3714, file: !403, line: 756, column: 6)
!3791 = !DILabel(scope: !3770, name: "process_string", file: !403, line: 615)
!3792 = !DILocation(line: 0, scope: !3714)
!3793 = !DILocation(line: 251, column: 2, scope: !3714)
!3794 = !DILocation(line: 251, column: 10, scope: !3714)
!3795 = !DILocation(line: 252, column: 2, scope: !3714)
!3796 = !DILocation(line: 252, column: 10, scope: !3714)
!3797 = !DILocation(line: 263, column: 29, scope: !3714)
!3798 = !DILocation(line: 263, column: 21, scope: !3714)
!3799 = !DILocation(line: 268, column: 21, scope: !3714)
!3800 = !DILocation(line: 268, column: 19, scope: !3714)
!3801 = !DILocation(line: 273, column: 6, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3714, file: !403, line: 273, column: 6)
!3803 = !DILocation(line: 273, column: 26, scope: !3802)
!3804 = !DILocation(line: 273, column: 6, scope: !3714)
!3805 = !DILocation(line: 297, column: 6, scope: !3714)
!3806 = !DILocation(line: 305, column: 11, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3714, file: !403, line: 305, column: 6)
!3808 = !DILocation(line: 305, column: 6, scope: !3714)
!3809 = !DILocation(line: 327, column: 19, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3714, file: !403, line: 327, column: 6)
!3811 = !DILocation(line: 327, column: 22, scope: !3810)
!3812 = !DILocation(line: 327, column: 33, scope: !3810)
!3813 = !DILocation(line: 327, column: 50, scope: !3810)
!3814 = !DILocation(line: 327, column: 6, scope: !3714)
!3815 = !DILocation(line: 338, column: 9, scope: !3714)
!3816 = !DILocation(line: 341, column: 2, scope: !3714)
!3817 = !DILocation(line: 472, column: 8, scope: !3763)
!3818 = !DILocation(line: 473, column: 14, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !403, line: 473, column: 9)
!3820 = distinct !DILexicalBlock(scope: !3821, file: !403, line: 472, column: 18)
!3821 = distinct !DILexicalBlock(scope: !3763, file: !403, line: 472, column: 8)
!3822 = !DILocation(line: 473, column: 9, scope: !3820)
!3823 = !DILocation(line: 479, column: 5, scope: !3820)
!3824 = !DILocation(line: 468, column: 9, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3763, file: !403, line: 468, column: 8)
!3826 = !DILocation(line: 468, column: 8, scope: !3825)
!3827 = !DILocation(line: 468, column: 15, scope: !3825)
!3828 = !DILocation(line: 468, column: 8, scope: !3763)
!3829 = distinct !{!3829, !3830, !3831}
!3830 = !DILocation(line: 343, column: 2, scope: !3714)
!3831 = !DILocation(line: 712, column: 2, scope: !3714)
!3832 = !DILocation(line: 481, column: 4, scope: !3763)
!3833 = !DILocation(line: 484, column: 12, scope: !3762)
!3834 = !DILocation(line: 485, column: 5, scope: !3762)
!3835 = !DILocation(line: 505, column: 5, scope: !3762)
!3836 = !DILocation(line: 518, column: 5, scope: !3762)
!3837 = !DILocation(line: 523, column: 5, scope: !3762)
!3838 = !DILocation(line: 532, column: 9, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3762, file: !403, line: 532, column: 9)
!3840 = !DILocation(line: 532, column: 17, scope: !3839)
!3841 = !DILocation(line: 532, column: 9, scope: !3762)
!3842 = !DILocation(line: 533, column: 10, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3844, file: !403, line: 533, column: 10)
!3844 = distinct !DILexicalBlock(scope: !3839, file: !403, line: 532, column: 25)
!3845 = !DILocation(line: 533, column: 18, scope: !3843)
!3846 = !DILocation(line: 0, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3761, file: !403, line: 569, column: 9)
!3848 = !DILocation(line: 0, scope: !3761)
!3849 = !DILocation(line: 579, column: 20, scope: !3761)
!3850 = !DILocation(line: 579, column: 11, scope: !3761)
!3851 = !DILocation(line: 580, column: 9, scope: !3761)
!3852 = !DILocation(line: 582, column: 21, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3854, file: !403, line: 582, column: 10)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !403, line: 580, column: 23)
!3855 = distinct !DILexicalBlock(scope: !3761, file: !403, line: 580, column: 9)
!3856 = !DILocation(line: 582, column: 28, scope: !3853)
!3857 = !DILocation(line: 582, column: 10, scope: !3854)
!3858 = !DILocation(line: 0, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !403, line: 587, column: 17)
!3860 = distinct !DILexicalBlock(scope: !3854, file: !403, line: 585, column: 10)
!3861 = !DILocation(line: 593, column: 9, scope: !3761)
!3862 = !DILocation(line: 600, column: 5, scope: !3762)
!3863 = !DILocation(line: 605, column: 18, scope: !3764)
!3864 = !DILocation(line: 605, column: 9, scope: !3764)
!3865 = !DILocation(line: 608, column: 20, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3764, file: !403, line: 608, column: 7)
!3867 = !DILocation(line: 608, column: 23, scope: !3866)
!3868 = !DILocation(line: 608, column: 34, scope: !3866)
!3869 = !DILocation(line: 608, column: 41, scope: !3866)
!3870 = !DILocation(line: 608, column: 7, scope: !3764)
!3871 = !DILocation(line: 613, column: 7, scope: !3764)
!3872 = !DILocation(line: 614, column: 8, scope: !3770)
!3873 = !DILocation(line: 614, column: 4, scope: !3770)
!3874 = !DILocation(line: 255, column: 15, scope: !3714)
!3875 = !DILocation(line: 256, column: 6, scope: !3714)
!3876 = !DILocation(line: 254, column: 15, scope: !3714)
!3877 = !DILocation(line: 253, column: 15, scope: !3714)
!3878 = !DILocation(line: 320, column: 7, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3807, file: !403, line: 305, column: 20)
!3880 = !DILocation(line: 615, column: 1, scope: !3770)
!3881 = !DILocation(line: 616, column: 8, scope: !3770)
!3882 = !DILocation(line: 617, column: 5, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3884, file: !403, line: 616, column: 22)
!3884 = distinct !DILexicalBlock(scope: !3770, file: !403, line: 616, column: 8)
!3885 = !DILocation(line: 617, column: 25, scope: !3883)
!3886 = !DILocation(line: 618, column: 4, scope: !3883)
!3887 = !DILocation(line: 620, column: 26, scope: !3770)
!3888 = !DILocation(line: 620, column: 29, scope: !3770)
!3889 = !DILocation(line: 620, column: 17, scope: !3770)
!3890 = !DILocation(line: 620, column: 43, scope: !3770)
!3891 = !DILocation(line: 0, scope: !3770)
!3892 = !DILocation(line: 623, column: 14, scope: !3775)
!3893 = !DILocation(line: 626, column: 26, scope: !3774)
!3894 = !DILocation(line: 626, column: 37, scope: !3774)
!3895 = !DILocation(line: 0, scope: !3774)
!3896 = !DILocation(line: 634, column: 15, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3774, file: !403, line: 634, column: 9)
!3898 = !DILocation(line: 644, column: 9, scope: !3774)
!3899 = !DILocation(line: 649, column: 27, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !403, line: 644, column: 23)
!3901 = distinct !DILexicalBlock(scope: !3774, file: !403, line: 644, column: 9)
!3902 = !DILocation(line: 649, column: 6, scope: !3900)
!3903 = !DILocation(line: 649, column: 25, scope: !3900)
!3904 = !DILocation(line: 650, column: 27, scope: !3900)
!3905 = !DILocation(line: 650, column: 6, scope: !3900)
!3906 = !DILocation(line: 650, column: 25, scope: !3900)
!3907 = !DILocation(line: 651, column: 10, scope: !3900)
!3908 = !DILocation(line: 653, column: 26, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3910, file: !403, line: 651, column: 17)
!3910 = distinct !DILexicalBlock(scope: !3900, file: !403, line: 651, column: 10)
!3911 = !DILocation(line: 654, column: 15, scope: !3909)
!3912 = !DILocation(line: 655, column: 6, scope: !3909)
!3913 = !DILocation(line: 656, column: 15, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3910, file: !403, line: 655, column: 13)
!3915 = !DILocation(line: 658, column: 16, scope: !3901)
!3916 = !DILocation(line: 663, column: 10, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !403, line: 658, column: 23)
!3918 = distinct !DILexicalBlock(scope: !3901, file: !403, line: 658, column: 16)
!3919 = !DILocation(line: 664, column: 5, scope: !3917)
!3920 = !DILocation(line: 664, column: 16, scope: !3918)
!3921 = !DILocation(line: 669, column: 10, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3923, file: !403, line: 664, column: 28)
!3923 = distinct !DILexicalBlock(scope: !3918, file: !403, line: 664, column: 16)
!3924 = !DILocation(line: 670, column: 5, scope: !3922)
!3925 = !DILocation(line: 675, column: 13, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3923, file: !403, line: 670, column: 12)
!3927 = !DILocation(line: 675, column: 27, scope: !3926)
!3928 = !DILocation(line: 675, column: 10, scope: !3926)
!3929 = !DILocation(line: 678, column: 10, scope: !3774)
!3930 = !DILocation(line: 680, column: 8, scope: !3770)
!3931 = !DILocation(line: 683, column: 14, scope: !3771)
!3932 = !DILocation(line: 684, column: 12, scope: !3777)
!3933 = !DILocation(line: 0, scope: !3777)
!3934 = !DILocation(line: 686, column: 8, scope: !3777)
!3935 = !DILocation(line: 687, column: 5, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !403, line: 686, column: 22)
!3937 = distinct !DILexicalBlock(scope: !3777, file: !403, line: 686, column: 8)
!3938 = !DILocation(line: 687, column: 17, scope: !3936)
!3939 = !DILocation(line: 688, column: 4, scope: !3936)
!3940 = !DILocation(line: 698, column: 18, scope: !3783)
!3941 = !DILocation(line: 0, scope: !3783)
!3942 = !DILocation(line: 700, column: 8, scope: !3783)
!3943 = !DILocation(line: 704, column: 6, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !403, line: 703, column: 12)
!3945 = distinct !DILexicalBlock(scope: !3946, file: !403, line: 701, column: 9)
!3946 = distinct !DILexicalBlock(scope: !3947, file: !403, line: 700, column: 22)
!3947 = distinct !DILexicalBlock(scope: !3783, file: !403, line: 700, column: 8)
!3948 = !DILocation(line: 704, column: 24, scope: !3944)
!3949 = !DILocation(line: 706, column: 4, scope: !3946)
!3950 = !DILocation(line: 0, scope: !3778)
!3951 = !DILocation(line: 0, scope: !3764)
!3952 = !DILocation(line: 720, column: 6, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3714, file: !403, line: 720, column: 6)
!3954 = !DILocation(line: 720, column: 17, scope: !3953)
!3955 = !DILocation(line: 720, column: 31, scope: !3953)
!3956 = !DILocation(line: 720, column: 6, scope: !3714)
!3957 = !DILocation(line: 729, column: 6, scope: !3714)
!3958 = !DILocation(line: 730, column: 21, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !403, line: 729, column: 20)
!3960 = distinct !DILexicalBlock(scope: !3714, file: !403, line: 729, column: 6)
!3961 = !DILocation(line: 730, column: 27, scope: !3959)
!3962 = !DILocation(line: 730, column: 3, scope: !3959)
!3963 = !DILocation(line: 737, column: 22, scope: !3714)
!3964 = !DILocation(line: 737, column: 20, scope: !3714)
!3965 = !DILocation(line: 0, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3714, file: !403, line: 739, column: 6)
!3967 = !DILocation(line: 745, column: 17, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3966, file: !403, line: 743, column: 9)
!3969 = !DILocation(line: 745, column: 25, scope: !3968)
!3970 = !DILocation(line: 746, column: 17, scope: !3968)
!3971 = !DILocation(line: 746, column: 28, scope: !3968)
!3972 = !DILocation(line: 749, column: 29, scope: !3714)
!3973 = !DILocation(line: 749, column: 16, scope: !3714)
!3974 = !DILocation(line: 749, column: 27, scope: !3714)
!3975 = !DILocation(line: 756, column: 6, scope: !3790)
!3976 = !DILocation(line: 756, column: 6, scope: !3714)
!3977 = !DILocation(line: 757, column: 3, scope: !3788)
!3978 = !DILocation(line: 758, column: 10, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3786, file: !403, line: 758, column: 8)
!3980 = !DILocation(line: 758, column: 25, scope: !3979)
!3981 = !DILocation(line: 758, column: 8, scope: !3786)
!3982 = !DILocation(line: 0, scope: !3786)
!3983 = !DILocation(line: 765, column: 8, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3786, file: !403, line: 765, column: 8)
!3985 = !DILocation(line: 765, column: 19, scope: !3984)
!3986 = !DILocation(line: 765, column: 23, scope: !3984)
!3987 = !DILocation(line: 765, column: 8, scope: !3786)
!3988 = !DILocation(line: 762, column: 33, scope: !3786)
!3989 = !DILocation(line: 769, column: 8, scope: !3786)
!3990 = !DILocation(line: 769, column: 11, scope: !3786)
!3991 = !DILocation(line: 757, column: 27, scope: !3787)
!3992 = !DILocation(line: 757, column: 17, scope: !3787)
!3993 = distinct !{!3993, !3977, !3994}
!3994 = !DILocation(line: 770, column: 3, scope: !3788)
!3995 = !DILocation(line: 774, column: 16, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !403, line: 774, column: 2)
!3997 = distinct !DILexicalBlock(scope: !3714, file: !403, line: 774, column: 2)
!3998 = !DILocation(line: 774, column: 2, scope: !3997)
!3999 = !DILocation(line: 776, column: 16, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !403, line: 776, column: 7)
!4001 = distinct !DILexicalBlock(scope: !3996, file: !403, line: 774, column: 30)
!4002 = !DILocation(line: 776, column: 19, scope: !4000)
!4003 = !DILocation(line: 776, column: 34, scope: !4000)
!4004 = !DILocation(line: 776, column: 7, scope: !4001)
!4005 = !DILocation(line: 780, column: 7, scope: !4001)
!4006 = !DILocation(line: 782, column: 13, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !403, line: 780, column: 19)
!4008 = distinct !DILexicalBlock(scope: !4001, file: !403, line: 780, column: 7)
!4009 = !DILocation(line: 782, column: 8, scope: !4007)
!4010 = !DILocation(line: 782, column: 11, scope: !4007)
!4011 = !DILocation(line: 783, column: 3, scope: !4007)
!4012 = !DILocation(line: 785, column: 26, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4008, file: !403, line: 783, column: 10)
!4014 = !DILocation(line: 785, column: 41, scope: !4013)
!4015 = !DILocation(line: 785, column: 24, scope: !4013)
!4016 = !DILocation(line: 785, column: 8, scope: !4013)
!4017 = !DILocation(line: 787, column: 52, scope: !4013)
!4018 = !DILocation(line: 789, column: 11, scope: !4013)
!4019 = !DILocation(line: 789, column: 21, scope: !4013)
!4020 = !DILocation(line: 0, scope: !4008)
!4021 = !DILocation(line: 793, column: 7, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4001, file: !403, line: 793, column: 7)
!4023 = !DILocation(line: 793, column: 18, scope: !4022)
!4024 = !DILocation(line: 793, column: 22, scope: !4022)
!4025 = !DILocation(line: 793, column: 29, scope: !4022)
!4026 = !DILocation(line: 793, column: 7, scope: !4001)
!4027 = !DILocation(line: 797, column: 12, scope: !4001)
!4028 = !DILocation(line: 797, column: 7, scope: !4001)
!4029 = !DILocation(line: 797, column: 10, scope: !4001)
!4030 = !DILocation(line: 799, column: 3, scope: !4001)
!4031 = !DILocation(line: 800, column: 7, scope: !4001)
!4032 = !DILocation(line: 801, column: 2, scope: !4001)
!4033 = !DILocation(line: 338, column: 4, scope: !3714)
!4034 = !DILocation(line: 774, column: 26, scope: !3996)
!4035 = distinct !{!4035, !3998, !4036}
!4036 = !DILocation(line: 801, column: 2, scope: !3997)
!4037 = !DILocation(line: 808, column: 9, scope: !3714)
!4038 = !DILocation(line: 808, column: 2, scope: !3714)
!4039 = !DILocation(line: 813, column: 1, scope: !3714)
!4040 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !403, file: !403, line: 33, type: !4041, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4043)
!4041 = !DISubroutineType(types: !4042)
!4042 = !{!136, !121}
!4043 = !{!4044}
!4044 = !DILocalVariable(name: "addr", arg: 1, scope: !4040, file: !403, line: 33, type: !121)
!4045 = !DILocation(line: 0, scope: !4040)
!4046 = !DILocation(line: 41, column: 9, scope: !4040)
!4047 = !DILocation(line: 41, column: 2, scope: !4040)
!4048 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4049, file: !4049, line: 24, type: !4050, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4052)
!4049 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4050 = !DISubroutineType(types: !4051)
!4051 = !{!136, !13}
!4052 = !{!4053}
!4053 = !DILocalVariable(name: "addr", arg: 1, scope: !4048, file: !4049, line: 24, type: !13)
!4054 = !DILocation(line: 0, scope: !4048)
!4055 = !DILocation(line: 49, column: 30, scope: !4048)
!4056 = !DILocation(line: 49, column: 57, scope: !4048)
!4057 = !DILocation(line: 49, column: 2, scope: !4048)
!4058 = distinct !DISubprogram(name: "cbprintf_package", scope: !403, file: !403, line: 815, type: !4059, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4061)
!4059 = !DISubroutineType(types: !4060)
!4060 = !{!107, !106, !137, !108, !121, null}
!4061 = !{!4062, !4063, !4064, !4065, !4066, !4067}
!4062 = !DILocalVariable(name: "packaged", arg: 1, scope: !4058, file: !403, line: 815, type: !106)
!4063 = !DILocalVariable(name: "len", arg: 2, scope: !4058, file: !403, line: 815, type: !137)
!4064 = !DILocalVariable(name: "flags", arg: 3, scope: !4058, file: !403, line: 815, type: !108)
!4065 = !DILocalVariable(name: "format", arg: 4, scope: !4058, file: !403, line: 816, type: !121)
!4066 = !DILocalVariable(name: "ap", scope: !4058, file: !403, line: 818, type: !3717)
!4067 = !DILocalVariable(name: "ret", scope: !4058, file: !403, line: 819, type: !107)
!4068 = !DILocation(line: 0, scope: !4058)
!4069 = !DILocation(line: 818, column: 2, scope: !4058)
!4070 = !DILocation(line: 818, column: 10, scope: !4058)
!4071 = !DILocation(line: 821, column: 2, scope: !4058)
!4072 = !DILocation(line: 822, column: 8, scope: !4058)
!4073 = !DILocation(line: 823, column: 2, scope: !4058)
!4074 = !DILocation(line: 825, column: 1, scope: !4058)
!4075 = !DILocation(line: 824, column: 2, scope: !4058)
!4076 = distinct !DISubprogram(name: "cbpprintf_external", scope: !403, file: !403, line: 827, type: !4077, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4087)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!107, !4079, !4083, !106, !106}
!4079 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3750, line: 297, baseType: !4080)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 32)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!107, null}
!4083 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3750, line: 328, baseType: !4084)
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 32)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{!107, !4079, !106, !121, !3717}
!4087 = !{!4088, !4089, !4090, !4091, !4092, !4093, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106}
!4088 = !DILocalVariable(name: "out", arg: 1, scope: !4076, file: !403, line: 827, type: !4079)
!4089 = !DILocalVariable(name: "formatter", arg: 2, scope: !4076, file: !403, line: 828, type: !4083)
!4090 = !DILocalVariable(name: "ctx", arg: 3, scope: !4076, file: !403, line: 829, type: !106)
!4091 = !DILocalVariable(name: "packaged", arg: 4, scope: !4076, file: !403, line: 829, type: !106)
!4092 = !DILocalVariable(name: "buf", scope: !4076, file: !403, line: 831, type: !401)
!4093 = !DILocalVariable(name: "hdr", scope: !4076, file: !403, line: 832, type: !4094)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 32)
!4095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3750, line: 96, size: 64, elements: !4096)
!4096 = !{!4097, !4098}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4095, file: !3750, line: 98, baseType: !3749, size: 32)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4095, file: !3750, line: 101, baseType: !283, size: 32, offset: 32)
!4099 = !DILocalVariable(name: "s", scope: !4076, file: !403, line: 833, type: !283)
!4100 = !DILocalVariable(name: "ps", scope: !4076, file: !403, line: 833, type: !400)
!4101 = !DILocalVariable(name: "i", scope: !4076, file: !403, line: 834, type: !32)
!4102 = !DILocalVariable(name: "args_size", scope: !4076, file: !403, line: 834, type: !32)
!4103 = !DILocalVariable(name: "s_nbr", scope: !4076, file: !403, line: 834, type: !32)
!4104 = !DILocalVariable(name: "ros_nbr", scope: !4076, file: !403, line: 834, type: !32)
!4105 = !DILocalVariable(name: "rws_nbr", scope: !4076, file: !403, line: 834, type: !32)
!4106 = !DILocalVariable(name: "s_idx", scope: !4076, file: !403, line: 834, type: !32)
!4107 = !DILocation(line: 0, scope: !4076)
!4108 = !DILocation(line: 836, column: 10, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4076, file: !403, line: 836, column: 6)
!4110 = !DILocation(line: 836, column: 6, scope: !4076)
!4111 = !DILocation(line: 842, column: 28, scope: !4076)
!4112 = !DILocation(line: 842, column: 14, scope: !4076)
!4113 = !DILocation(line: 852, column: 16, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4115, file: !403, line: 852, column: 2)
!4115 = distinct !DILexicalBlock(scope: !4076, file: !403, line: 852, column: 2)
!4116 = !DILocation(line: 852, column: 2, scope: !4115)
!4117 = !DILocation(line: 841, column: 28, scope: !4076)
!4118 = !DILocation(line: 841, column: 14, scope: !4076)
!4119 = !DILocation(line: 841, column: 32, scope: !4076)
!4120 = !DILocation(line: 847, column: 19, scope: !4076)
!4121 = !DILocation(line: 843, column: 28, scope: !4076)
!4122 = !DILocation(line: 843, column: 14, scope: !4076)
!4123 = !DILocation(line: 847, column: 31, scope: !4076)
!4124 = !DILocation(line: 844, column: 28, scope: !4076)
!4125 = !DILocation(line: 844, column: 14, scope: !4076)
!4126 = !DILocation(line: 847, column: 45, scope: !4076)
!4127 = !DILocation(line: 847, column: 41, scope: !4076)
!4128 = !DILocation(line: 854, column: 24, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4114, file: !403, line: 852, column: 30)
!4130 = !DILocation(line: 854, column: 11, scope: !4129)
!4131 = !DILocation(line: 855, column: 30, scope: !4129)
!4132 = !DILocation(line: 855, column: 22, scope: !4129)
!4133 = !DILocation(line: 855, column: 8, scope: !4129)
!4134 = !DILocation(line: 857, column: 7, scope: !4129)
!4135 = !DILocation(line: 859, column: 8, scope: !4129)
!4136 = !DILocation(line: 859, column: 18, scope: !4129)
!4137 = !DILocation(line: 859, column: 5, scope: !4129)
!4138 = !DILocation(line: 852, column: 26, scope: !4114)
!4139 = distinct !{!4139, !4116, !4140}
!4140 = !DILocation(line: 860, column: 2, scope: !4115)
!4141 = !DILocation(line: 863, column: 6, scope: !4076)
!4142 = !DILocation(line: 866, column: 56, scope: !4076)
!4143 = !DILocation(line: 866, column: 9, scope: !4076)
!4144 = !DILocation(line: 866, column: 2, scope: !4076)
!4145 = !DILocation(line: 867, column: 1, scope: !4076)
!4146 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !403, file: !403, line: 179, type: !4147, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4149)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{!107, !4079, !4083, !106, !121, !106}
!4149 = !{!4150, !4151, !4152, !4153, !4154, !4155}
!4150 = !DILocalVariable(name: "out", arg: 1, scope: !4146, file: !403, line: 179, type: !4079)
!4151 = !DILocalVariable(name: "formatter", arg: 2, scope: !4146, file: !403, line: 180, type: !4083)
!4152 = !DILocalVariable(name: "ctx", arg: 3, scope: !4146, file: !403, line: 181, type: !106)
!4153 = !DILocalVariable(name: "fmt", arg: 4, scope: !4146, file: !403, line: 182, type: !121)
!4154 = !DILocalVariable(name: "buf", arg: 5, scope: !4146, file: !403, line: 182, type: !106)
!4155 = !DILocalVariable(name: "u", scope: !4146, file: !403, line: 187, type: !4156)
!4156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4146, file: !403, line: 184, size: 32, elements: !4157)
!4157 = !{!4158, !4159}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4156, file: !403, line: 185, baseType: !3717, size: 32)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4156, file: !403, line: 186, baseType: !106, size: 32)
!4160 = !DILocation(line: 0, scope: !4146)
!4161 = !DILocation(line: 191, column: 9, scope: !4146)
!4162 = !DILocation(line: 191, column: 2, scope: !4146)
!4163 = distinct !DISubprogram(name: "is_ptr", scope: !403, file: !403, line: 881, type: !4164, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4166)
!4164 = !DISubroutineType(types: !4165)
!4165 = !{!136, !121, !107}
!4166 = !{!4167, !4168, !4169, !4170, !4171}
!4167 = !DILocalVariable(name: "fmt", arg: 1, scope: !4163, file: !403, line: 881, type: !121)
!4168 = !DILocalVariable(name: "n", arg: 2, scope: !4163, file: !403, line: 881, type: !107)
!4169 = !DILocalVariable(name: "c", scope: !4163, file: !403, line: 883, type: !123)
!4170 = !DILocalVariable(name: "mod", scope: !4163, file: !403, line: 884, type: !136)
!4171 = !DILocalVariable(name: "cnt", scope: !4163, file: !403, line: 885, type: !107)
!4172 = !DILocation(line: 0, scope: !4163)
!4173 = !DILocation(line: 887, column: 14, scope: !4163)
!4174 = !DILocation(line: 887, column: 22, scope: !4163)
!4175 = !DILocation(line: 887, column: 2, scope: !4163)
!4176 = !DILocation(line: 887, column: 18, scope: !4163)
!4177 = !DILocation(line: 888, column: 7, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4163, file: !403, line: 887, column: 31)
!4179 = !DILocation(line: 889, column: 12, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !403, line: 889, column: 8)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !403, line: 888, column: 12)
!4182 = distinct !DILexicalBlock(scope: !4178, file: !403, line: 888, column: 7)
!4183 = !DILocation(line: 889, column: 8, scope: !4181)
!4184 = !DILocation(line: 890, column: 11, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !403, line: 890, column: 9)
!4186 = distinct !DILexicalBlock(scope: !4180, file: !403, line: 889, column: 18)
!4187 = !DILocation(line: 890, column: 9, scope: !4186)
!4188 = !DILocation(line: 892, column: 16, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4185, file: !403, line: 892, column: 16)
!4190 = !DILocation(line: 892, column: 16, scope: !4185)
!4191 = !DILocation(line: 895, column: 15, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4180, file: !403, line: 895, column: 15)
!4193 = !DILocation(line: 895, column: 15, scope: !4180)
!4194 = !DILocation(line: 900, column: 9, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4178, file: !403, line: 900, column: 7)
!4196 = !DILocation(line: 900, column: 7, scope: !4178)
!4197 = distinct !{!4197, !4175, !4198}
!4198 = !DILocation(line: 903, column: 2, scope: !4163)
!4199 = !DILocation(line: 906, column: 1, scope: !4163)
!4200 = distinct !DISubprogram(name: "is_fmt_spec", scope: !403, file: !403, line: 873, type: !4201, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4203)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!136, !123}
!4203 = !{!4204}
!4204 = !DILocalVariable(name: "c", arg: 1, scope: !4200, file: !403, line: 873, type: !123)
!4205 = !DILocation(line: 0, scope: !4200)
!4206 = !DILocation(line: 875, column: 19, scope: !4200)
!4207 = !DILocation(line: 875, column: 2, scope: !4200)
!4208 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !403, file: !403, line: 908, type: !4209, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4215)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!107, !106, !137, !4211, !106, !108, !2661, !137}
!4211 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3750, line: 308, baseType: !4212)
!4212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4213, size: 32)
!4213 = !DISubroutineType(types: !4214)
!4214 = !{!107, !13, !137, !106}
!4215 = !{!4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4233, !4234, !4235, !4236, !4237, !4243, !4246, !4247, !4248, !4250, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4266, !4269, !4270, !4271, !4272, !4273, !4274, !4276, !4279, !4280, !4281}
!4216 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4208, file: !403, line: 908, type: !106)
!4217 = !DILocalVariable(name: "in_len", arg: 2, scope: !4208, file: !403, line: 909, type: !137)
!4218 = !DILocalVariable(name: "cb", arg: 3, scope: !4208, file: !403, line: 910, type: !4211)
!4219 = !DILocalVariable(name: "ctx", arg: 4, scope: !4208, file: !403, line: 911, type: !106)
!4220 = !DILocalVariable(name: "flags", arg: 5, scope: !4208, file: !403, line: 912, type: !108)
!4221 = !DILocalVariable(name: "strl", arg: 6, scope: !4208, file: !403, line: 913, type: !2661)
!4222 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4208, file: !403, line: 914, type: !137)
!4223 = !DILocalVariable(name: "buf", scope: !4208, file: !403, line: 918, type: !401)
!4224 = !DILocalVariable(name: "buf32", scope: !4208, file: !403, line: 919, type: !1004)
!4225 = !DILocalVariable(name: "args_size", scope: !4208, file: !403, line: 920, type: !32)
!4226 = !DILocalVariable(name: "ros_nbr", scope: !4208, file: !403, line: 920, type: !32)
!4227 = !DILocalVariable(name: "rws_nbr", scope: !4208, file: !403, line: 920, type: !32)
!4228 = !DILocalVariable(name: "fmt_present", scope: !4208, file: !403, line: 921, type: !136)
!4229 = !DILocalVariable(name: "rw_cpy", scope: !4208, file: !403, line: 922, type: !136)
!4230 = !DILocalVariable(name: "ro_cpy", scope: !4208, file: !403, line: 923, type: !136)
!4231 = !DILocalVariable(name: "in_desc", scope: !4208, file: !403, line: 924, type: !4232)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3753, size: 32)
!4233 = !DILocalVariable(name: "out_len", scope: !4208, file: !403, line: 960, type: !107)
!4234 = !DILocalVariable(name: "fmt", scope: !4208, file: !403, line: 965, type: !121)
!4235 = !DILocalVariable(name: "str_pos", scope: !4208, file: !403, line: 966, type: !401)
!4236 = !DILocalVariable(name: "strl_cnt", scope: !4208, file: !403, line: 967, type: !137)
!4237 = !DILocalVariable(name: "i", scope: !4238, file: !403, line: 973, type: !107)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !403, line: 973, column: 4)
!4239 = distinct !DILexicalBlock(scope: !4240, file: !403, line: 972, column: 15)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !403, line: 972, column: 7)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !403, line: 970, column: 18)
!4242 = distinct !DILexicalBlock(scope: !4208, file: !403, line: 970, column: 6)
!4243 = !DILocalVariable(name: "str", scope: !4244, file: !403, line: 974, type: !121)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !403, line: 973, column: 38)
!4245 = distinct !DILexicalBlock(scope: !4238, file: !403, line: 973, column: 4)
!4246 = !DILocalVariable(name: "len", scope: !4244, file: !403, line: 975, type: !107)
!4247 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4241, file: !403, line: 990, type: !136)
!4248 = !DILocalVariable(name: "i", scope: !4249, file: !403, line: 995, type: !107)
!4249 = distinct !DILexicalBlock(scope: !4241, file: !403, line: 995, column: 3)
!4250 = !DILocalVariable(name: "arg_idx", scope: !4251, file: !403, line: 996, type: !190)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !403, line: 995, column: 37)
!4252 = distinct !DILexicalBlock(scope: !4249, file: !403, line: 995, column: 3)
!4253 = !DILocalVariable(name: "arg_pos", scope: !4251, file: !403, line: 997, type: !190)
!4254 = !DILocalVariable(name: "str", scope: !4251, file: !403, line: 998, type: !121)
!4255 = !DILocalVariable(name: "is_ro", scope: !4251, file: !403, line: 999, type: !136)
!4256 = !DILocalVariable(name: "len", scope: !4251, file: !403, line: 1000, type: !107)
!4257 = !DILocalVariable(name: "out_desc", scope: !4208, file: !403, line: 1038, type: !3753)
!4258 = !DILocalVariable(name: "cpy_str_pos", scope: !4208, file: !403, line: 1040, type: !3735)
!4259 = !DILocalVariable(name: "keep_str_pos", scope: !4208, file: !403, line: 1042, type: !3735)
!4260 = !DILocalVariable(name: "scpy_cnt", scope: !4208, file: !403, line: 1043, type: !190)
!4261 = !DILocalVariable(name: "keep_cnt", scope: !4208, file: !403, line: 1044, type: !190)
!4262 = !DILocalVariable(name: "dst", scope: !4208, file: !403, line: 1045, type: !401)
!4263 = !DILocalVariable(name: "rv", scope: !4208, file: !403, line: 1046, type: !107)
!4264 = !DILocalVariable(name: "i", scope: !4265, file: !403, line: 1074, type: !107)
!4265 = distinct !DILexicalBlock(scope: !4208, file: !403, line: 1074, column: 2)
!4266 = !DILocalVariable(name: "arg_idx", scope: !4267, file: !403, line: 1075, type: !190)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !403, line: 1074, column: 36)
!4268 = distinct !DILexicalBlock(scope: !4265, file: !403, line: 1074, column: 2)
!4269 = !DILocalVariable(name: "arg_pos", scope: !4267, file: !403, line: 1076, type: !190)
!4270 = !DILocalVariable(name: "str", scope: !4267, file: !403, line: 1077, type: !121)
!4271 = !DILocalVariable(name: "is_ro", scope: !4267, file: !403, line: 1078, type: !136)
!4272 = !DILocalVariable(name: "in_desc_backup", scope: !4208, file: !403, line: 1114, type: !3753)
!4273 = !DILocalVariable(name: "strs_len", scope: !4208, file: !403, line: 1134, type: !137)
!4274 = !DILocalVariable(name: "i", scope: !4275, file: !403, line: 1143, type: !107)
!4275 = distinct !DILexicalBlock(scope: !4208, file: !403, line: 1143, column: 2)
!4276 = !DILocalVariable(name: "loc", scope: !4277, file: !403, line: 1144, type: !190)
!4277 = distinct !DILexicalBlock(scope: !4278, file: !403, line: 1143, column: 37)
!4278 = distinct !DILexicalBlock(scope: !4275, file: !403, line: 1143, column: 2)
!4279 = !DILocalVariable(name: "str", scope: !4277, file: !403, line: 1145, type: !121)
!4280 = !DILocalVariable(name: "str_len", scope: !4277, file: !403, line: 1146, type: !126)
!4281 = !DILabel(scope: !4282, name: "calculate_string_length", file: !403, line: 1021)
!4282 = distinct !DILexicalBlock(scope: !4283, file: !403, line: 1020, column: 56)
!4283 = distinct !DILexicalBlock(scope: !4284, file: !403, line: 1020, column: 15)
!4284 = distinct !DILexicalBlock(scope: !4251, file: !403, line: 1014, column: 8)
!4285 = !DILocation(line: 0, scope: !4208)
!4286 = !DILocation(line: 919, column: 20, scope: !4208)
!4287 = !DILocation(line: 921, column: 27, scope: !4208)
!4288 = !DILocation(line: 921, column: 21, scope: !4208)
!4289 = !DILocation(line: 926, column: 18, scope: !4208)
!4290 = !DILocation(line: 926, column: 11, scope: !4208)
!4291 = !DILocation(line: 926, column: 34, scope: !4208)
!4292 = !DILocation(line: 931, column: 21, scope: !4208)
!4293 = !DILocation(line: 931, column: 12, scope: !4208)
!4294 = !DILocation(line: 932, column: 11, scope: !4208)
!4295 = !DILocation(line: 932, column: 19, scope: !4208)
!4296 = !DILocation(line: 938, column: 21, scope: !4208)
!4297 = !DILocation(line: 938, column: 12, scope: !4208)
!4298 = !DILocation(line: 939, column: 19, scope: !4208)
!4299 = !DILocation(line: 939, column: 23, scope: !4208)
!4300 = !DILocation(line: 946, column: 14, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4208, file: !403, line: 946, column: 6)
!4302 = !DILocation(line: 947, column: 7, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !403, line: 947, column: 7)
!4304 = distinct !DILexicalBlock(scope: !4301, file: !403, line: 946, column: 26)
!4305 = !DILocation(line: 947, column: 7, scope: !4304)
!4306 = !DILocation(line: 948, column: 4, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4303, file: !403, line: 947, column: 11)
!4308 = !DILocation(line: 949, column: 3, scope: !4307)
!4309 = !DILocation(line: 958, column: 23, scope: !4208)
!4310 = !DILocation(line: 958, column: 14, scope: !4208)
!4311 = !DILocation(line: 958, column: 27, scope: !4208)
!4312 = !DILocation(line: 965, column: 41, scope: !4208)
!4313 = !DILocation(line: 965, column: 20, scope: !4208)
!4314 = !DILocation(line: 966, column: 22, scope: !4208)
!4315 = !DILocation(line: 970, column: 9, scope: !4242)
!4316 = !DILocation(line: 970, column: 6, scope: !4208)
!4317 = !DILocation(line: 972, column: 7, scope: !4241)
!4318 = !DILocation(line: 0, scope: !4238)
!4319 = !DILocation(line: 973, column: 4, scope: !4238)
!4320 = !DILocation(line: 974, column: 46, scope: !4244)
!4321 = !DILocation(line: 974, column: 40, scope: !4244)
!4322 = !DILocation(line: 974, column: 23, scope: !4244)
!4323 = !DILocation(line: 0, scope: !4244)
!4324 = !DILocation(line: 975, column: 15, scope: !4244)
!4325 = !DILocation(line: 978, column: 14, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4244, file: !403, line: 978, column: 9)
!4327 = !DILocation(line: 979, column: 25, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4326, file: !403, line: 978, column: 38)
!4329 = !DILocation(line: 979, column: 19, scope: !4328)
!4330 = !DILocation(line: 979, column: 6, scope: !4328)
!4331 = !DILocation(line: 979, column: 23, scope: !4328)
!4332 = !DILocation(line: 980, column: 5, scope: !4328)
!4333 = !DILocation(line: 981, column: 13, scope: !4244)
!4334 = !DILocation(line: 982, column: 12, scope: !4244)
!4335 = !DILocation(line: 973, column: 34, scope: !4245)
!4336 = !DILocation(line: 973, column: 22, scope: !4245)
!4337 = distinct !{!4337, !4319, !4338}
!4338 = !DILocation(line: 983, column: 4, scope: !4238)
!4339 = !DILocation(line: 985, column: 16, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !403, line: 985, column: 8)
!4341 = distinct !DILexicalBlock(scope: !4240, file: !403, line: 984, column: 10)
!4342 = !DILocation(line: 967, column: 9, scope: !4208)
!4343 = !DILocation(line: 971, column: 11, scope: !4241)
!4344 = !DILocation(line: 0, scope: !4241)
!4345 = !DILocation(line: 0, scope: !4249)
!4346 = !DILocation(line: 995, column: 21, scope: !4252)
!4347 = !DILocation(line: 995, column: 3, scope: !4249)
!4348 = !DILocation(line: 990, column: 34, scope: !4241)
!4349 = !DILocation(line: 990, column: 26, scope: !4241)
!4350 = !DILocation(line: 996, column: 30, scope: !4251)
!4351 = !DILocation(line: 0, scope: !4251)
!4352 = !DILocation(line: 997, column: 30, scope: !4251)
!4353 = !DILocation(line: 997, column: 22, scope: !4251)
!4354 = !DILocation(line: 998, column: 39, scope: !4251)
!4355 = !DILocation(line: 998, column: 22, scope: !4251)
!4356 = !DILocation(line: 999, column: 17, scope: !4251)
!4357 = !DILocation(line: 1002, column: 20, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4251, file: !403, line: 1002, column: 8)
!4359 = !DILocation(line: 996, column: 22, scope: !4251)
!4360 = !DILocation(line: 1002, column: 35, scope: !4358)
!4361 = !DILocation(line: 1002, column: 23, scope: !4358)
!4362 = !DILocation(line: 1002, column: 8, scope: !4251)
!4363 = !DILocation(line: 1003, column: 5, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4365, file: !403, line: 1003, column: 5)
!4365 = distinct !DILexicalBlock(scope: !4366, file: !403, line: 1003, column: 5)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !403, line: 1003, column: 5)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !403, line: 1003, column: 5)
!4368 = distinct !DILexicalBlock(scope: !4358, file: !403, line: 1002, column: 45)
!4369 = !DILocation(line: 1010, column: 13, scope: !4368)
!4370 = !DILocation(line: 1011, column: 5, scope: !4368)
!4371 = !DILocation(line: 1014, column: 8, scope: !4251)
!4372 = !DILocation(line: 1015, column: 9, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4284, file: !403, line: 1014, column: 15)
!4374 = !DILocation(line: 1018, column: 14, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4376, file: !403, line: 1017, column: 12)
!4376 = distinct !DILexicalBlock(scope: !4373, file: !403, line: 1015, column: 9)
!4377 = !DILocation(line: 1020, column: 4, scope: !4373)
!4378 = !DILocation(line: 1020, column: 15, scope: !4284)
!4379 = !DILocation(line: 1021, column: 1, scope: !4282)
!4380 = !DILocation(line: 1022, column: 11, scope: !4282)
!4381 = !DILocation(line: 1025, column: 14, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4282, file: !403, line: 1025, column: 9)
!4383 = !DILocation(line: 1026, column: 25, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4382, file: !403, line: 1025, column: 38)
!4385 = !DILocation(line: 1026, column: 19, scope: !4384)
!4386 = !DILocation(line: 1026, column: 6, scope: !4384)
!4387 = !DILocation(line: 1026, column: 23, scope: !4384)
!4388 = !DILocation(line: 1027, column: 5, scope: !4384)
!4389 = !DILocation(line: 1031, column: 21, scope: !4282)
!4390 = !DILocation(line: 1031, column: 13, scope: !4282)
!4391 = !DILocation(line: 1032, column: 4, scope: !4282)
!4392 = !DILocation(line: 995, column: 33, scope: !4252)
!4393 = distinct !{!4393, !4347, !4394}
!4394 = !DILocation(line: 1033, column: 3, scope: !4249)
!4395 = !DILocation(line: 1040, column: 10, scope: !4208)
!4396 = !DILocation(line: 1042, column: 10, scope: !4208)
!4397 = !DILocation(line: 1052, column: 6, scope: !4208)
!4398 = !DILocation(line: 1055, column: 9, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !403, line: 1052, column: 14)
!4400 = distinct !DILexicalBlock(scope: !4208, file: !403, line: 1052, column: 6)
!4401 = !DILocation(line: 1056, column: 2, scope: !4399)
!4402 = !DILocation(line: 1056, column: 21, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4400, file: !403, line: 1056, column: 13)
!4404 = !DILocation(line: 1066, column: 3, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4406, file: !403, line: 1065, column: 11)
!4406 = distinct !DILexicalBlock(scope: !4208, file: !403, line: 1065, column: 6)
!4407 = !DILocation(line: 1067, column: 2, scope: !4405)
!4408 = !DILocation(line: 1068, column: 10, scope: !4208)
!4409 = !DILocation(line: 0, scope: !4265)
!4410 = !DILocation(line: 1074, column: 20, scope: !4268)
!4411 = !DILocation(line: 1074, column: 2, scope: !4265)
!4412 = !DILocation(line: 1110, column: 24, scope: !4208)
!4413 = !DILocation(line: 1053, column: 12, scope: !4399)
!4414 = !DILocation(line: 1054, column: 12, scope: !4399)
!4415 = !DILocation(line: 1108, column: 30, scope: !4208)
!4416 = !DILocation(line: 1108, column: 40, scope: !4208)
!4417 = !DILocation(line: 1108, column: 38, scope: !4208)
!4418 = !DILocation(line: 1109, column: 31, scope: !4208)
!4419 = !DILocation(line: 1109, column: 24, scope: !4208)
!4420 = !DILocation(line: 1110, column: 31, scope: !4208)
!4421 = !DILocation(line: 1114, column: 31, scope: !4208)
!4422 = !DILocation(line: 1114, column: 48, scope: !4208)
!4423 = !DILocation(line: 1115, column: 13, scope: !4208)
!4424 = !DILocation(line: 1118, column: 7, scope: !4208)
!4425 = !DILocation(line: 1119, column: 9, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4208, file: !403, line: 1119, column: 6)
!4427 = !DILocation(line: 1119, column: 6, scope: !4208)
!4428 = !DILocation(line: 1075, column: 29, scope: !4267)
!4429 = !DILocation(line: 1075, column: 21, scope: !4267)
!4430 = !DILocation(line: 0, scope: !4267)
!4431 = !DILocation(line: 1076, column: 29, scope: !4267)
!4432 = !DILocation(line: 1076, column: 21, scope: !4267)
!4433 = !DILocation(line: 1077, column: 38, scope: !4267)
!4434 = !DILocation(line: 1077, column: 21, scope: !4267)
!4435 = !DILocation(line: 1078, column: 16, scope: !4267)
!4436 = !DILocation(line: 1080, column: 19, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4267, file: !403, line: 1080, column: 7)
!4438 = !DILocation(line: 1080, column: 34, scope: !4437)
!4439 = !DILocation(line: 1080, column: 22, scope: !4437)
!4440 = !DILocation(line: 1080, column: 7, scope: !4267)
!4441 = !DILocation(line: 1084, column: 7, scope: !4267)
!4442 = !DILocation(line: 1085, column: 8, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4444, file: !403, line: 1084, column: 14)
!4444 = distinct !DILexicalBlock(scope: !4267, file: !403, line: 1084, column: 7)
!4445 = !DILocation(line: 1087, column: 25, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4447, file: !403, line: 1085, column: 49)
!4447 = distinct !DILexicalBlock(scope: !4443, file: !403, line: 1085, column: 8)
!4448 = !DILocation(line: 1088, column: 4, scope: !4446)
!4449 = !DILocation(line: 1088, column: 15, scope: !4447)
!4450 = !DILocation(line: 1090, column: 26, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4452, file: !403, line: 1088, column: 61)
!4452 = distinct !DILexicalBlock(scope: !4447, file: !403, line: 1088, column: 15)
!4453 = !DILocation(line: 1091, column: 4, scope: !4451)
!4454 = !DILocation(line: 1095, column: 8, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4444, file: !403, line: 1094, column: 10)
!4456 = !DILocation(line: 1097, column: 25, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4458, file: !403, line: 1095, column: 49)
!4458 = distinct !DILexicalBlock(scope: !4455, file: !403, line: 1095, column: 8)
!4459 = !DILocation(line: 1098, column: 4, scope: !4457)
!4460 = !DILocation(line: 1100, column: 26, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4458, file: !403, line: 1098, column: 11)
!4462 = !DILocation(line: 1100, column: 5, scope: !4461)
!4463 = !DILocation(line: 1100, column: 30, scope: !4461)
!4464 = !DILocation(line: 1101, column: 26, scope: !4461)
!4465 = !DILocation(line: 0, scope: !4444)
!4466 = !DILocation(line: 1074, column: 32, scope: !4268)
!4467 = distinct !{!4467, !4411, !4468}
!4468 = !DILocation(line: 1104, column: 2, scope: !4265)
!4469 = !DILocation(line: 1124, column: 13, scope: !4208)
!4470 = !DILocation(line: 1127, column: 10, scope: !4208)
!4471 = !DILocation(line: 1127, column: 7, scope: !4208)
!4472 = !DILocation(line: 1128, column: 9, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4208, file: !403, line: 1128, column: 6)
!4474 = !DILocation(line: 1128, column: 6, scope: !4208)
!4475 = !DILocation(line: 1134, column: 27, scope: !4208)
!4476 = !DILocation(line: 1136, column: 7, scope: !4208)
!4477 = !DILocation(line: 1137, column: 9, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4208, file: !403, line: 1137, column: 6)
!4479 = !DILocation(line: 1137, column: 6, scope: !4208)
!4480 = !DILocation(line: 1131, column: 10, scope: !4208)
!4481 = !DILocation(line: 1140, column: 10, scope: !4208)
!4482 = !DILocation(line: 0, scope: !4275)
!4483 = !DILocation(line: 1143, column: 20, scope: !4278)
!4484 = !DILocation(line: 1143, column: 2, scope: !4275)
!4485 = !DILocation(line: 1144, column: 3, scope: !4277)
!4486 = !DILocation(line: 1144, column: 17, scope: !4277)
!4487 = !DILocation(line: 0, scope: !4277)
!4488 = !DILocation(line: 1144, column: 11, scope: !4277)
!4489 = !DILocation(line: 1145, column: 38, scope: !4277)
!4490 = !DILocation(line: 1145, column: 21, scope: !4277)
!4491 = !DILocation(line: 1146, column: 22, scope: !4277)
!4492 = !DILocation(line: 1146, column: 29, scope: !4277)
!4493 = !DILocation(line: 1148, column: 8, scope: !4277)
!4494 = !DILocation(line: 1149, column: 10, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4277, file: !403, line: 1149, column: 7)
!4496 = !DILocation(line: 1149, column: 7, scope: !4277)
!4497 = !DILocation(line: 1154, column: 8, scope: !4277)
!4498 = !DILocation(line: 1155, column: 10, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4277, file: !403, line: 1155, column: 7)
!4500 = !DILocation(line: 1155, column: 7, scope: !4277)
!4501 = !DILocation(line: 1159, column: 2, scope: !4278)
!4502 = !DILocation(line: 1152, column: 11, scope: !4277)
!4503 = !DILocation(line: 1158, column: 11, scope: !4277)
!4504 = !DILocation(line: 1143, column: 33, scope: !4278)
!4505 = distinct !{!4505, !4484, !4506}
!4506 = !DILocation(line: 1159, column: 2, scope: !4275)
!4507 = !DILocation(line: 1162, column: 8, scope: !4208)
!4508 = !DILocation(line: 1164, column: 2, scope: !4208)
!4509 = !DILocation(line: 1165, column: 1, scope: !4208)
!4510 = distinct !DISubprogram(name: "get_package_len", scope: !403, file: !403, line: 196, type: !4511, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4513)
!4511 = !DISubroutineType(types: !4512)
!4512 = !{!137, !106}
!4513 = !{!4514, !4515, !4516, !4517, !4518, !4519, !4520}
!4514 = !DILocalVariable(name: "packaged", arg: 1, scope: !4510, file: !403, line: 196, type: !106)
!4515 = !DILocalVariable(name: "buf", scope: !4510, file: !403, line: 200, type: !401)
!4516 = !DILocalVariable(name: "start", scope: !4510, file: !403, line: 201, type: !401)
!4517 = !DILocalVariable(name: "args_size", scope: !4510, file: !403, line: 202, type: !32)
!4518 = !DILocalVariable(name: "s_nbr", scope: !4510, file: !403, line: 202, type: !32)
!4519 = !DILocalVariable(name: "ros_nbr", scope: !4510, file: !403, line: 202, type: !32)
!4520 = !DILocalVariable(name: "i", scope: !4521, file: !403, line: 215, type: !107)
!4521 = distinct !DILexicalBlock(scope: !4510, file: !403, line: 215, column: 2)
!4522 = !DILocation(line: 0, scope: !4510)
!4523 = !DILocation(line: 204, column: 14, scope: !4510)
!4524 = !DILocation(line: 204, column: 21, scope: !4510)
!4525 = !DILocation(line: 205, column: 14, scope: !4510)
!4526 = !DILocation(line: 206, column: 14, scope: !4510)
!4527 = !DILocation(line: 209, column: 6, scope: !4510)
!4528 = !DILocation(line: 212, column: 6, scope: !4510)
!4529 = !DILocation(line: 0, scope: !4521)
!4530 = !DILocation(line: 215, column: 20, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4521, file: !403, line: 215, column: 2)
!4532 = !DILocation(line: 215, column: 2, scope: !4521)
!4533 = !DILocation(line: 220, column: 33, scope: !4510)
!4534 = !DILocation(line: 220, column: 2, scope: !4510)
!4535 = !DILocation(line: 216, column: 6, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4531, file: !403, line: 215, column: 34)
!4537 = !DILocation(line: 217, column: 10, scope: !4536)
!4538 = !DILocation(line: 217, column: 36, scope: !4536)
!4539 = !DILocation(line: 217, column: 7, scope: !4536)
!4540 = !DILocation(line: 215, column: 30, scope: !4531)
!4541 = distinct !{!4541, !4532, !4542}
!4542 = !DILocation(line: 218, column: 2, scope: !4521)
!4543 = distinct !DISubprogram(name: "append_string", scope: !403, file: !403, line: 223, type: !4544, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4546)
!4544 = !DISubroutineType(types: !4545)
!4545 = !{!107, !4211, !106, !121, !126}
!4546 = !{!4547, !4548, !4549, !4550}
!4547 = !DILocalVariable(name: "cb", arg: 1, scope: !4543, file: !403, line: 223, type: !4211)
!4548 = !DILocalVariable(name: "ctx", arg: 2, scope: !4543, file: !403, line: 223, type: !106)
!4549 = !DILocalVariable(name: "str", arg: 3, scope: !4543, file: !403, line: 223, type: !121)
!4550 = !DILocalVariable(name: "strl", arg: 4, scope: !4543, file: !403, line: 223, type: !126)
!4551 = !DILocation(line: 0, scope: !4543)
!4552 = !DILocation(line: 225, column: 9, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4543, file: !403, line: 225, column: 6)
!4554 = !DILocation(line: 225, column: 6, scope: !4543)
!4555 = !DILocation(line: 226, column: 14, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4553, file: !403, line: 225, column: 18)
!4557 = !DILocation(line: 226, column: 12, scope: !4556)
!4558 = !DILocation(line: 226, column: 3, scope: !4556)
!4559 = !DILocation(line: 229, column: 14, scope: !4543)
!4560 = !DILocation(line: 229, column: 9, scope: !4543)
!4561 = !DILocation(line: 229, column: 27, scope: !4543)
!4562 = !DILocation(line: 229, column: 39, scope: !4543)
!4563 = !DILocation(line: 230, column: 17, scope: !4543)
!4564 = !DILocation(line: 230, column: 9, scope: !4543)
!4565 = !DILocation(line: 230, column: 2, scope: !4543)
!4566 = !DILocation(line: 231, column: 1, scope: !4543)
!4567 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !416, file: !416, line: 45, type: !418, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4568)
!4568 = !{!4569}
!4569 = !DILocalVariable(name: "c", arg: 1, scope: !4567, file: !416, line: 45, type: !107)
!4570 = !DILocation(line: 0, scope: !4567)
!4571 = !DILocation(line: 50, column: 2, scope: !4567)
!4572 = distinct !DISubprogram(name: "__printk_hook_install", scope: !416, file: !416, line: 63, type: !4573, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4575)
!4573 = !DISubroutineType(types: !4574)
!4574 = !{null, !417}
!4575 = !{!4576}
!4576 = !DILocalVariable(name: "fn", arg: 1, scope: !4572, file: !416, line: 63, type: !417)
!4577 = !DILocation(line: 0, scope: !4572)
!4578 = !DILocation(line: 65, column: 12, scope: !4572)
!4579 = !DILocation(line: 66, column: 1, scope: !4572)
!4580 = distinct !DISubprogram(name: "__printk_get_hook", scope: !416, file: !416, line: 76, type: !4581, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !256)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{!106}
!4583 = !DILocation(line: 78, column: 9, scope: !4580)
!4584 = !DILocation(line: 78, column: 2, scope: !4580)
!4585 = distinct !DISubprogram(name: "vprintk", scope: !416, file: !416, line: 113, type: !4586, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4594)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{null, !121, !4588}
!4588 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3718, line: 99, baseType: !4589)
!4589 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3718, line: 40, baseType: !4590)
!4590 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !416, baseType: !4591)
!4591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4592)
!4592 = !{!4593}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4591, file: !416, line: 79, baseType: !106, size: 32)
!4594 = !{!4595, !4596, !4597}
!4595 = !DILocalVariable(name: "fmt", arg: 1, scope: !4585, file: !416, line: 113, type: !121)
!4596 = !DILocalVariable(name: "ap", arg: 2, scope: !4585, file: !416, line: 113, type: !4588)
!4597 = !DILocalVariable(name: "ctx", scope: !4598, file: !416, line: 121, type: !4600)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !416, line: 120, column: 27)
!4599 = distinct !DILexicalBlock(scope: !4585, file: !416, line: 120, column: 6)
!4600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !416, line: 81, size: 32, elements: !4601)
!4601 = !{!4602, !4603}
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4600, file: !416, line: 85, baseType: !32, size: 32)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4600, file: !416, line: 86, baseType: !4604, offset: 32)
!4604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, elements: !2659)
!4605 = !DILocation(line: 0, scope: !4585)
!4606 = !DILocation(line: 148, column: 3, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4599, file: !416, line: 138, column: 9)
!4608 = !DILocation(line: 155, column: 1, scope: !4585)
!4609 = distinct !DISubprogram(name: "char_out", scope: !416, file: !416, line: 107, type: !4610, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4612)
!4610 = !DISubroutineType(types: !4611)
!4611 = !{!107, !107, !106}
!4612 = !{!4613, !4614}
!4613 = !DILocalVariable(name: "c", arg: 1, scope: !4609, file: !416, line: 107, type: !107)
!4614 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4609, file: !416, line: 107, type: !106)
!4615 = !DILocation(line: 0, scope: !4609)
!4616 = !DILocation(line: 110, column: 9, scope: !4609)
!4617 = !DILocation(line: 110, column: 2, scope: !4609)
!4618 = distinct !DISubprogram(name: "cbvprintf", scope: !3750, file: !3750, line: 739, type: !4619, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4621)
!4619 = !DISubroutineType(types: !4620)
!4620 = !{!107, !4079, !106, !121, !4588}
!4621 = !{!4622, !4623, !4624, !4625}
!4622 = !DILocalVariable(name: "out", arg: 1, scope: !4618, file: !3750, line: 739, type: !4079)
!4623 = !DILocalVariable(name: "ctx", arg: 2, scope: !4618, file: !3750, line: 739, type: !106)
!4624 = !DILocalVariable(name: "format", arg: 3, scope: !4618, file: !3750, line: 739, type: !121)
!4625 = !DILocalVariable(name: "ap", arg: 4, scope: !4618, file: !3750, line: 739, type: !4588)
!4626 = !DILocation(line: 0, scope: !4618)
!4627 = !DILocation(line: 741, column: 9, scope: !4618)
!4628 = !DILocation(line: 741, column: 2, scope: !4618)
!4629 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !416, file: !416, line: 157, type: !4630, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4632)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{null, !283, !137}
!4632 = !{!4633, !4634, !4635}
!4633 = !DILocalVariable(name: "c", arg: 1, scope: !4629, file: !416, line: 157, type: !283)
!4634 = !DILocalVariable(name: "n", arg: 2, scope: !4629, file: !416, line: 157, type: !137)
!4635 = !DILocalVariable(name: "i", scope: !4629, file: !416, line: 159, type: !137)
!4636 = !DILocation(line: 0, scope: !4629)
!4637 = !DILocation(line: 164, column: 16, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !416, line: 164, column: 2)
!4639 = distinct !DILexicalBlock(scope: !4629, file: !416, line: 164, column: 2)
!4640 = !DILocation(line: 164, column: 2, scope: !4639)
!4641 = !DILocation(line: 165, column: 3, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4638, file: !416, line: 164, column: 26)
!4643 = !DILocation(line: 165, column: 13, scope: !4642)
!4644 = !DILocation(line: 164, column: 22, scope: !4638)
!4645 = distinct !{!4645, !4640, !4646}
!4646 = !DILocation(line: 166, column: 2, scope: !4639)
!4647 = !DILocation(line: 171, column: 1, scope: !4629)
!4648 = distinct !DISubprogram(name: "printk", scope: !416, file: !416, line: 203, type: !4649, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4651)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{null, !121, null}
!4651 = !{!4652, !4653}
!4652 = !DILocalVariable(name: "fmt", arg: 1, scope: !4648, file: !416, line: 203, type: !121)
!4653 = !DILocalVariable(name: "ap", scope: !4648, file: !416, line: 205, type: !4588)
!4654 = !DILocation(line: 0, scope: !4648)
!4655 = !DILocation(line: 205, column: 2, scope: !4648)
!4656 = !DILocation(line: 205, column: 10, scope: !4648)
!4657 = !DILocation(line: 207, column: 2, scope: !4648)
!4658 = !DILocation(line: 209, column: 2, scope: !4648)
!4659 = !DILocation(line: 211, column: 2, scope: !4648)
!4660 = !DILocation(line: 212, column: 1, scope: !4648)
!4661 = distinct !DISubprogram(name: "snprintk", scope: !416, file: !416, line: 239, type: !4662, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4664)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{!107, !283, !137, !121, null}
!4664 = !{!4665, !4666, !4667, !4668, !4669}
!4665 = !DILocalVariable(name: "str", arg: 1, scope: !4661, file: !416, line: 239, type: !283)
!4666 = !DILocalVariable(name: "size", arg: 2, scope: !4661, file: !416, line: 239, type: !137)
!4667 = !DILocalVariable(name: "fmt", arg: 3, scope: !4661, file: !416, line: 239, type: !121)
!4668 = !DILocalVariable(name: "ap", scope: !4661, file: !416, line: 241, type: !4588)
!4669 = !DILocalVariable(name: "ret", scope: !4661, file: !416, line: 242, type: !107)
!4670 = !DILocation(line: 0, scope: !4661)
!4671 = !DILocation(line: 241, column: 2, scope: !4661)
!4672 = !DILocation(line: 241, column: 10, scope: !4661)
!4673 = !DILocation(line: 244, column: 2, scope: !4661)
!4674 = !DILocation(line: 245, column: 8, scope: !4661)
!4675 = !DILocation(line: 246, column: 2, scope: !4661)
!4676 = !DILocation(line: 249, column: 1, scope: !4661)
!4677 = !DILocation(line: 248, column: 2, scope: !4661)
!4678 = distinct !DISubprogram(name: "vsnprintk", scope: !416, file: !416, line: 251, type: !4679, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4681)
!4679 = !DISubroutineType(types: !4680)
!4680 = !{!107, !283, !137, !121, !4588}
!4681 = !{!4682, !4683, !4684, !4685, !4686}
!4682 = !DILocalVariable(name: "str", arg: 1, scope: !4678, file: !416, line: 251, type: !283)
!4683 = !DILocalVariable(name: "size", arg: 2, scope: !4678, file: !416, line: 251, type: !137)
!4684 = !DILocalVariable(name: "fmt", arg: 3, scope: !4678, file: !416, line: 251, type: !121)
!4685 = !DILocalVariable(name: "ap", arg: 4, scope: !4678, file: !416, line: 251, type: !4588)
!4686 = !DILocalVariable(name: "ctx", scope: !4678, file: !416, line: 253, type: !4687)
!4687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !416, line: 217, size: 96, elements: !4688)
!4688 = !{!4689, !4690, !4691}
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4687, file: !416, line: 218, baseType: !283, size: 32)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4687, file: !416, line: 219, baseType: !107, size: 32, offset: 32)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4687, file: !416, line: 220, baseType: !107, size: 32, offset: 64)
!4692 = !DILocation(line: 0, scope: !4678)
!4693 = !DILocation(line: 253, column: 2, scope: !4678)
!4694 = !DILocation(line: 253, column: 21, scope: !4678)
!4695 = !DILocation(line: 253, column: 27, scope: !4678)
!4696 = !DILocation(line: 255, column: 2, scope: !4678)
!4697 = !DILocation(line: 257, column: 10, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4678, file: !416, line: 257, column: 6)
!4699 = !DILocation(line: 257, column: 22, scope: !4698)
!4700 = !DILocation(line: 257, column: 16, scope: !4698)
!4701 = !DILocation(line: 257, column: 6, scope: !4678)
!4702 = !DILocation(line: 258, column: 3, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4698, file: !416, line: 257, column: 27)
!4704 = !DILocation(line: 258, column: 18, scope: !4703)
!4705 = !DILocation(line: 259, column: 2, scope: !4703)
!4706 = !DILocation(line: 262, column: 1, scope: !4678)
!4707 = !DILocation(line: 261, column: 2, scope: !4678)
!4708 = distinct !DISubprogram(name: "str_out", scope: !416, file: !416, line: 223, type: !4709, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4712)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{!107, !107, !4711}
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 32)
!4712 = !{!4713, !4714}
!4713 = !DILocalVariable(name: "c", arg: 1, scope: !4708, file: !416, line: 223, type: !107)
!4714 = !DILocalVariable(name: "ctx", arg: 2, scope: !4708, file: !416, line: 223, type: !4711)
!4715 = !DILocation(line: 0, scope: !4708)
!4716 = !DILocation(line: 225, column: 11, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4708, file: !416, line: 225, column: 6)
!4718 = !DILocation(line: 225, column: 15, scope: !4717)
!4719 = !DILocation(line: 0, scope: !4717)
!4720 = !DILocation(line: 225, column: 23, scope: !4717)
!4721 = !DILocation(line: 225, column: 45, scope: !4717)
!4722 = !DILocation(line: 225, column: 37, scope: !4717)
!4723 = !DILocation(line: 225, column: 6, scope: !4708)
!4724 = !DILocation(line: 226, column: 8, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4717, file: !416, line: 225, column: 50)
!4726 = !DILocation(line: 226, column: 13, scope: !4725)
!4727 = !DILocation(line: 227, column: 3, scope: !4725)
!4728 = !DILocation(line: 230, column: 29, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4708, file: !416, line: 230, column: 6)
!4730 = !DILocation(line: 230, column: 17, scope: !4729)
!4731 = !DILocation(line: 230, column: 6, scope: !4708)
!4732 = !DILocation(line: 231, column: 22, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4729, file: !416, line: 230, column: 34)
!4734 = !DILocation(line: 231, column: 3, scope: !4733)
!4735 = !DILocation(line: 231, column: 26, scope: !4733)
!4736 = !DILocation(line: 232, column: 2, scope: !4733)
!4737 = !DILocation(line: 233, column: 28, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4729, file: !416, line: 232, column: 9)
!4739 = !DILocation(line: 233, column: 22, scope: !4738)
!4740 = !DILocation(line: 233, column: 3, scope: !4738)
!4741 = !DILocation(line: 233, column: 26, scope: !4738)
!4742 = !DILocation(line: 237, column: 1, scope: !4708)
!4743 = distinct !DISubprogram(name: "z_thread_entry", scope: !4744, file: !4744, line: 30, type: !4745, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !4747)
!4744 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4745 = !DISubroutineType(types: !4746)
!4746 = !{null, !324, !106, !106, !106}
!4747 = !{!4748, !4749, !4750, !4751}
!4748 = !DILocalVariable(name: "entry", arg: 1, scope: !4743, file: !4744, line: 30, type: !324)
!4749 = !DILocalVariable(name: "p1", arg: 2, scope: !4743, file: !4744, line: 31, type: !106)
!4750 = !DILocalVariable(name: "p2", arg: 3, scope: !4743, file: !4744, line: 31, type: !106)
!4751 = !DILocalVariable(name: "p3", arg: 4, scope: !4743, file: !4744, line: 31, type: !106)
!4752 = !DILocation(line: 0, scope: !4743)
!4753 = !DILocation(line: 36, column: 2, scope: !4743)
!4754 = !DILocation(line: 38, column: 17, scope: !4743)
!4755 = !DILocation(line: 38, column: 2, scope: !4743)
!4756 = !DILocation(line: 45, column: 2, scope: !4743)
!4757 = distinct !DISubprogram(name: "k_current_get", scope: !142, file: !142, line: 530, type: !4758, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !256)
!4758 = !DISubroutineType(types: !4759)
!4759 = !{!4760}
!4760 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !4761)
!4761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4762, size: 32)
!4762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !4763)
!4763 = !{!4764, !4822, !4834, !4835, !4836, !4837, !4843, !4856}
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4762, file: !168, line: 247, baseType: !4765, size: 384)
!4765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !4766)
!4766 = !{!4767, !4791, !4798, !4799, !4800, !4809, !4810, !4811}
!4767 = !DIDerivedType(tag: DW_TAG_member, scope: !4765, file: !168, line: 60, baseType: !4768, size: 64)
!4768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4765, file: !168, line: 60, size: 64, elements: !4769)
!4769 = !{!4770, !4785}
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4768, file: !168, line: 61, baseType: !4771, size: 64)
!4771 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !4772)
!4772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !4773)
!4773 = !{!4774, !4780}
!4774 = !DIDerivedType(tag: DW_TAG_member, scope: !4772, file: !151, line: 38, baseType: !4775, size: 32)
!4775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4772, file: !151, line: 38, size: 32, elements: !4776)
!4776 = !{!4777, !4779}
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4775, file: !151, line: 39, baseType: !4778, size: 32)
!4778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4772, size: 32)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4775, file: !151, line: 40, baseType: !4778, size: 32)
!4780 = !DIDerivedType(tag: DW_TAG_member, scope: !4772, file: !151, line: 42, baseType: !4781, size: 32, offset: 32)
!4781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4772, file: !151, line: 42, size: 32, elements: !4782)
!4782 = !{!4783, !4784}
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4781, file: !151, line: 43, baseType: !4778, size: 32)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4781, file: !151, line: 44, baseType: !4778, size: 32)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4768, file: !168, line: 62, baseType: !4786, size: 64)
!4786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !4787)
!4787 = !{!4788}
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4786, file: !180, line: 50, baseType: !4789, size: 64)
!4789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4790, size: 64, elements: !185)
!4790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4786, size: 32)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4765, file: !168, line: 68, baseType: !4792, size: 32, offset: 64)
!4792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4793, size: 32)
!4793 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !4794)
!4794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !4795)
!4795 = !{!4796}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4794, file: !146, line: 232, baseType: !4797, size: 64)
!4797 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !4772)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4765, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4765, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!4800 = !DIDerivedType(tag: DW_TAG_member, scope: !4765, file: !168, line: 90, baseType: !4801, size: 16, offset: 112)
!4801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4765, file: !168, line: 90, size: 16, elements: !4802)
!4802 = !{!4803, !4808}
!4803 = !DIDerivedType(tag: DW_TAG_member, scope: !4801, file: !168, line: 91, baseType: !4804, size: 16)
!4804 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4801, file: !168, line: 91, size: 16, elements: !4805)
!4805 = !{!4806, !4807}
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4804, file: !168, line: 96, baseType: !200, size: 8)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4804, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4801, file: !168, line: 100, baseType: !126, size: 16)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4765, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4765, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4765, file: !168, line: 131, baseType: !4812, size: 192, offset: 192)
!4812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !4813)
!4813 = !{!4814, !4815, !4821}
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4812, file: !146, line: 245, baseType: !4771, size: 64)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4812, file: !146, line: 246, baseType: !4816, size: 32, offset: 64)
!4816 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !4817)
!4817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4818, size: 32)
!4818 = !DISubroutineType(types: !4819)
!4819 = !{null, !4820}
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4812, size: 32)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4812, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4762, file: !168, line: 250, baseType: !4823, size: 288, offset: 384)
!4823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !4824)
!4824 = !{!4825, !4826, !4827, !4828, !4829, !4830, !4831, !4832, !4833}
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4823, file: !219, line: 26, baseType: !108, size: 32)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4823, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4823, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4823, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4823, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4823, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4823, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4823, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4823, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4762, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4762, file: !168, line: 256, baseType: !4793, size: 64, offset: 704)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4762, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4762, file: !168, line: 300, baseType: !4838, size: 96, offset: 800)
!4838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !4839)
!4839 = !{!4840, !4841, !4842}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4838, file: !168, line: 153, baseType: !22, size: 32)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4838, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4838, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4762, file: !168, line: 325, baseType: !4844, size: 32, offset: 896)
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4845, size: 32)
!4845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !4846)
!4846 = !{!4847, !4853, !4854}
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4845, file: !142, line: 5074, baseType: !4848, size: 96)
!4848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !4849)
!4849 = !{!4850, !4851, !4852}
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4848, file: !245, line: 57, baseType: !248, size: 32)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4848, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4848, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4845, file: !142, line: 5075, baseType: !4793, size: 64, offset: 96)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4845, file: !142, line: 5076, baseType: !4855, offset: 160)
!4855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4762, file: !168, line: 343, baseType: !4857, size: 64, offset: 928)
!4857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !4858)
!4858 = !{!4859, !4860}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4857, file: !219, line: 63, baseType: !108, size: 32)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4857, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!4861 = !DILocation(line: 535, column: 9, scope: !4757)
!4862 = !DILocation(line: 535, column: 2, scope: !4757)
!4863 = distinct !DISubprogram(name: "k_thread_abort", scope: !3675, file: !3675, line: 188, type: !4864, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !4866)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{null, !4760}
!4866 = !{!4867}
!4867 = !DILocalVariable(name: "thread", arg: 1, scope: !4863, file: !3675, line: 188, type: !4760)
!4868 = !DILocation(line: 0, scope: !4863)
!4869 = !DILocation(line: 197, column: 2, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4863, file: !3675, line: 197, column: 2)
!4871 = !{i64 2154839364}
!4872 = !DILocation(line: 198, column: 2, scope: !4863)
!4873 = !DILocation(line: 199, column: 1, scope: !4863)
!4874 = distinct !DISubprogram(name: "z_current_get", scope: !3675, file: !3675, line: 173, type: !4758, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !256)
!4875 = !DILocation(line: 180, column: 2, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4874, file: !3675, line: 180, column: 2)
!4877 = !{i64 2154839296}
!4878 = !DILocation(line: 181, column: 9, scope: !4874)
!4879 = !DILocation(line: 181, column: 2, scope: !4874)
!4880 = distinct !DISubprogram(name: "sys_heap_free", scope: !4881, file: !4881, line: 163, type: !4882, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !4890)
!4881 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4882 = !DISubroutineType(types: !4883)
!4883 = !{null, !4884, !106}
!4884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4885, size: 32)
!4885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !4886)
!4886 = !{!4887, !4888, !4889}
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4885, file: !245, line: 57, baseType: !2646, size: 32)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4885, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4885, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!4890 = !{!4891, !4892, !4893, !4894}
!4891 = !DILocalVariable(name: "heap", arg: 1, scope: !4880, file: !4881, line: 163, type: !4884)
!4892 = !DILocalVariable(name: "mem", arg: 2, scope: !4880, file: !4881, line: 163, type: !106)
!4893 = !DILocalVariable(name: "h", scope: !4880, file: !4881, line: 168, type: !2646)
!4894 = !DILocalVariable(name: "c", scope: !4880, file: !4881, line: 169, type: !2651)
!4895 = !DILocation(line: 0, scope: !4880)
!4896 = !DILocation(line: 165, column: 10, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4880, file: !4881, line: 165, column: 6)
!4898 = !DILocation(line: 165, column: 6, scope: !4880)
!4899 = !DILocation(line: 168, column: 27, scope: !4880)
!4900 = !DILocation(line: 169, column: 16, scope: !4880)
!4901 = !{i32 0, i32 536870912}
!4902 = !DILocation(line: 187, column: 2, scope: !4880)
!4903 = !DILocation(line: 197, column: 2, scope: !4880)
!4904 = !DILocation(line: 198, column: 1, scope: !4880)
!4905 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4881, file: !4881, line: 157, type: !4906, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !4908)
!4906 = !DISubroutineType(types: !4907)
!4907 = !{!2651, !2646, !106}
!4908 = !{!4909, !4910, !4911, !4912}
!4909 = !DILocalVariable(name: "h", arg: 1, scope: !4905, file: !4881, line: 157, type: !2646)
!4910 = !DILocalVariable(name: "p", arg: 2, scope: !4905, file: !4881, line: 157, type: !106)
!4911 = !DILocalVariable(name: "mem", scope: !4905, file: !4881, line: 159, type: !401)
!4912 = !DILocalVariable(name: "base", scope: !4905, file: !4881, line: 159, type: !401)
!4913 = !DILocation(line: 0, scope: !4905)
!4914 = !DILocation(line: 159, column: 39, scope: !4905)
!4915 = !DILocation(line: 160, column: 14, scope: !4905)
!4916 = !DILocation(line: 160, column: 38, scope: !4905)
!4917 = !DILocation(line: 160, column: 46, scope: !4905)
!4918 = !DILocation(line: 160, column: 2, scope: !4905)
!4919 = distinct !DISubprogram(name: "set_chunk_used", scope: !2633, file: !2633, line: 147, type: !4920, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !4922)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{null, !2646, !2651, !136}
!4922 = !{!4923, !4924, !4925, !4926, !4927}
!4923 = !DILocalVariable(name: "h", arg: 1, scope: !4919, file: !2633, line: 147, type: !2646)
!4924 = !DILocalVariable(name: "c", arg: 2, scope: !4919, file: !2633, line: 147, type: !2651)
!4925 = !DILocalVariable(name: "used", arg: 3, scope: !4919, file: !2633, line: 147, type: !136)
!4926 = !DILocalVariable(name: "buf", scope: !4919, file: !2633, line: 149, type: !2640)
!4927 = !DILocalVariable(name: "cmem", scope: !4919, file: !2633, line: 150, type: !106)
!4928 = !DILocation(line: 0, scope: !4919)
!4929 = !DILocation(line: 149, column: 22, scope: !4919)
!4930 = !DILocation(line: 0, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4932, file: !2633, line: 159, column: 7)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !2633, line: 158, column: 9)
!4933 = distinct !DILexicalBlock(scope: !4919, file: !2633, line: 152, column: 6)
!4934 = !DILocation(line: 159, column: 7, scope: !4932)
!4935 = !DILocation(line: 165, column: 1, scope: !4919)
!4936 = distinct !DISubprogram(name: "free_chunk", scope: !4881, file: !4881, line: 133, type: !4937, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !4939)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{null, !2646, !2651}
!4939 = !{!4940, !4941}
!4940 = !DILocalVariable(name: "h", arg: 1, scope: !4936, file: !4881, line: 133, type: !2646)
!4941 = !DILocalVariable(name: "c", arg: 2, scope: !4936, file: !4881, line: 133, type: !2651)
!4942 = !DILocation(line: 0, scope: !4936)
!4943 = !DILocation(line: 136, column: 21, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4936, file: !4881, line: 136, column: 6)
!4945 = !DILocation(line: 136, column: 7, scope: !4944)
!4946 = !DILocation(line: 136, column: 6, scope: !4936)
!4947 = !DILocation(line: 137, column: 3, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4944, file: !4881, line: 136, column: 41)
!4949 = !DILocation(line: 138, column: 22, scope: !4948)
!4950 = !DILocation(line: 138, column: 3, scope: !4948)
!4951 = !DILocation(line: 139, column: 2, scope: !4948)
!4952 = !DILocation(line: 142, column: 21, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4936, file: !4881, line: 142, column: 6)
!4954 = !{i32 -65535, i32 536903678}
!4955 = !DILocation(line: 142, column: 7, scope: !4953)
!4956 = !DILocation(line: 142, column: 6, scope: !4936)
!4957 = !DILocation(line: 143, column: 3, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4953, file: !4881, line: 142, column: 40)
!4959 = !DILocation(line: 144, column: 19, scope: !4958)
!4960 = !DILocation(line: 144, column: 3, scope: !4958)
!4961 = !DILocation(line: 145, column: 7, scope: !4958)
!4962 = !DILocation(line: 146, column: 2, scope: !4958)
!4963 = !DILocation(line: 148, column: 2, scope: !4936)
!4964 = !DILocation(line: 149, column: 1, scope: !4936)
!4965 = distinct !DISubprogram(name: "right_chunk", scope: !2633, file: !2633, line: 204, type: !4966, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !4968)
!4966 = !DISubroutineType(types: !4967)
!4967 = !{!2651, !2646, !2651}
!4968 = !{!4969, !4970}
!4969 = !DILocalVariable(name: "h", arg: 1, scope: !4965, file: !2633, line: 204, type: !2646)
!4970 = !DILocalVariable(name: "c", arg: 2, scope: !4965, file: !2633, line: 204, type: !2651)
!4971 = !DILocation(line: 0, scope: !4965)
!4972 = !DILocation(line: 206, column: 13, scope: !4965)
!4973 = !DILocation(line: 206, column: 11, scope: !4965)
!4974 = !DILocation(line: 206, column: 2, scope: !4965)
!4975 = distinct !DISubprogram(name: "chunk_used", scope: !2633, file: !2633, line: 137, type: !4976, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !4978)
!4976 = !DISubroutineType(types: !4977)
!4977 = !{!136, !2646, !2651}
!4978 = !{!4979, !4980}
!4979 = !DILocalVariable(name: "h", arg: 1, scope: !4975, file: !2633, line: 137, type: !2646)
!4980 = !DILocalVariable(name: "c", arg: 2, scope: !4975, file: !2633, line: 137, type: !2651)
!4981 = !DILocation(line: 0, scope: !4975)
!4982 = !DILocation(line: 139, column: 9, scope: !4975)
!4983 = !DILocation(line: 139, column: 42, scope: !4975)
!4984 = !DILocation(line: 139, column: 2, scope: !4975)
!4985 = distinct !DISubprogram(name: "free_list_remove", scope: !4881, file: !4881, line: 60, type: !4937, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !4986)
!4986 = !{!4987, !4988, !4989}
!4987 = !DILocalVariable(name: "h", arg: 1, scope: !4985, file: !4881, line: 60, type: !2646)
!4988 = !DILocalVariable(name: "c", arg: 2, scope: !4985, file: !4881, line: 60, type: !2651)
!4989 = !DILocalVariable(name: "bidx", scope: !4990, file: !4881, line: 63, type: !107)
!4990 = distinct !DILexicalBlock(scope: !4991, file: !4881, line: 62, column: 31)
!4991 = distinct !DILexicalBlock(scope: !4985, file: !4881, line: 62, column: 6)
!4992 = !DILocation(line: 0, scope: !4985)
!4993 = !DILocation(line: 63, column: 28, scope: !4990)
!4994 = !{i32 0, i32 32768}
!4995 = !DILocation(line: 63, column: 14, scope: !4990)
!4996 = !DILocation(line: 0, scope: !4990)
!4997 = !DILocation(line: 64, column: 3, scope: !4990)
!4998 = !DILocation(line: 66, column: 1, scope: !4985)
!4999 = distinct !DISubprogram(name: "merge_chunks", scope: !4881, file: !4881, line: 125, type: !5000, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5002)
!5000 = !DISubroutineType(types: !5001)
!5001 = !{null, !2646, !2651, !2651}
!5002 = !{!5003, !5004, !5005, !5006}
!5003 = !DILocalVariable(name: "h", arg: 1, scope: !4999, file: !4881, line: 125, type: !2646)
!5004 = !DILocalVariable(name: "lc", arg: 2, scope: !4999, file: !4881, line: 125, type: !2651)
!5005 = !DILocalVariable(name: "rc", arg: 3, scope: !4999, file: !4881, line: 125, type: !2651)
!5006 = !DILocalVariable(name: "newsz", scope: !4999, file: !4881, line: 127, type: !5007)
!5007 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2633, line: 62, baseType: !108)
!5008 = !DILocation(line: 0, scope: !4999)
!5009 = !DILocation(line: 127, column: 20, scope: !4999)
!5010 = !DILocation(line: 127, column: 40, scope: !4999)
!5011 = !DILocation(line: 127, column: 38, scope: !4999)
!5012 = !DILocation(line: 129, column: 2, scope: !4999)
!5013 = !DILocation(line: 130, column: 25, scope: !4999)
!5014 = !DILocation(line: 130, column: 2, scope: !4999)
!5015 = !DILocation(line: 131, column: 1, scope: !4999)
!5016 = distinct !DISubprogram(name: "left_chunk", scope: !2633, file: !2633, line: 199, type: !4966, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5017)
!5017 = !{!5018, !5019}
!5018 = !DILocalVariable(name: "h", arg: 1, scope: !5016, file: !2633, line: 199, type: !2646)
!5019 = !DILocalVariable(name: "c", arg: 2, scope: !5016, file: !2633, line: 199, type: !2651)
!5020 = !DILocation(line: 0, scope: !5016)
!5021 = !DILocation(line: 201, column: 13, scope: !5016)
!5022 = !DILocation(line: 201, column: 11, scope: !5016)
!5023 = !DILocation(line: 201, column: 2, scope: !5016)
!5024 = distinct !DISubprogram(name: "free_list_add", scope: !4881, file: !4881, line: 98, type: !4937, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5025)
!5025 = !{!5026, !5027, !5028}
!5026 = !DILocalVariable(name: "h", arg: 1, scope: !5024, file: !4881, line: 98, type: !2646)
!5027 = !DILocalVariable(name: "c", arg: 2, scope: !5024, file: !4881, line: 98, type: !2651)
!5028 = !DILocalVariable(name: "bidx", scope: !5029, file: !4881, line: 101, type: !107)
!5029 = distinct !DILexicalBlock(scope: !5030, file: !4881, line: 100, column: 31)
!5030 = distinct !DILexicalBlock(scope: !5024, file: !4881, line: 100, column: 6)
!5031 = !DILocation(line: 0, scope: !5024)
!5032 = !DILocation(line: 101, column: 28, scope: !5029)
!5033 = !DILocation(line: 101, column: 14, scope: !5029)
!5034 = !DILocation(line: 0, scope: !5029)
!5035 = !DILocation(line: 102, column: 3, scope: !5029)
!5036 = !DILocation(line: 104, column: 1, scope: !5024)
!5037 = distinct !DISubprogram(name: "chunk_size", scope: !2633, file: !2633, line: 142, type: !5038, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5040)
!5038 = !DISubroutineType(types: !5039)
!5039 = !{!5007, !2646, !2651}
!5040 = !{!5041, !5042}
!5041 = !DILocalVariable(name: "h", arg: 1, scope: !5037, file: !2633, line: 142, type: !2646)
!5042 = !DILocalVariable(name: "c", arg: 2, scope: !5037, file: !2633, line: 142, type: !2651)
!5043 = !DILocation(line: 0, scope: !5037)
!5044 = !DILocation(line: 144, column: 9, scope: !5037)
!5045 = !DILocation(line: 144, column: 42, scope: !5037)
!5046 = !DILocation(line: 144, column: 2, scope: !5037)
!5047 = distinct !DISubprogram(name: "bucket_idx", scope: !2633, file: !2633, line: 250, type: !5048, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5050)
!5048 = !DISubroutineType(types: !5049)
!5049 = !{!107, !2646, !5007}
!5050 = !{!5051, !5052, !5053}
!5051 = !DILocalVariable(name: "h", arg: 1, scope: !5047, file: !2633, line: 250, type: !2646)
!5052 = !DILocalVariable(name: "sz", arg: 2, scope: !5047, file: !2633, line: 250, type: !5007)
!5053 = !DILocalVariable(name: "usable_sz", scope: !5047, file: !2633, line: 252, type: !32)
!5054 = !DILocation(line: 0, scope: !5047)
!5055 = !DILocation(line: 252, column: 32, scope: !5047)
!5056 = !DILocation(line: 252, column: 30, scope: !5047)
!5057 = !DILocation(line: 252, column: 50, scope: !5047)
!5058 = !DILocation(line: 253, column: 14, scope: !5047)
!5059 = !{i32 0, i32 33}
!5060 = !DILocation(line: 253, column: 12, scope: !5047)
!5061 = !DILocation(line: 253, column: 2, scope: !5047)
!5062 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4881, file: !4881, line: 68, type: !5063, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5065)
!5063 = !DISubroutineType(types: !5064)
!5064 = !{null, !2646, !2651, !107}
!5065 = !{!5066, !5067, !5068, !5069, !5071, !5074}
!5066 = !DILocalVariable(name: "h", arg: 1, scope: !5062, file: !4881, line: 68, type: !2646)
!5067 = !DILocalVariable(name: "c", arg: 2, scope: !5062, file: !4881, line: 68, type: !2651)
!5068 = !DILocalVariable(name: "bidx", arg: 3, scope: !5062, file: !4881, line: 68, type: !107)
!5069 = !DILocalVariable(name: "b", scope: !5062, file: !4881, line: 70, type: !5070)
!5070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 32)
!5071 = !DILocalVariable(name: "second", scope: !5072, file: !4881, line: 84, type: !2651)
!5072 = distinct !DILexicalBlock(scope: !5073, file: !4881, line: 80, column: 9)
!5073 = distinct !DILexicalBlock(scope: !5062, file: !4881, line: 72, column: 6)
!5074 = !DILocalVariable(name: "first", scope: !5072, file: !4881, line: 85, type: !2651)
!5075 = !DILocation(line: 0, scope: !5062)
!5076 = !DILocation(line: 72, column: 9, scope: !5073)
!5077 = !DILocation(line: 72, column: 14, scope: !5073)
!5078 = !DILocation(line: 72, column: 6, scope: !5062)
!5079 = !DILocation(line: 76, column: 23, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5073, file: !4881, line: 72, column: 21)
!5081 = !DILocation(line: 76, column: 6, scope: !5080)
!5082 = !DILocation(line: 76, column: 20, scope: !5080)
!5083 = !DILocation(line: 77, column: 11, scope: !5080)
!5084 = !DILocation(line: 78, column: 3, scope: !5080)
!5085 = !DILocation(line: 79, column: 3, scope: !5080)
!5086 = !DILocation(line: 80, column: 2, scope: !5080)
!5087 = !DILocation(line: 0, scope: !5072)
!5088 = !DILocation(line: 85, column: 21, scope: !5072)
!5089 = !{i32 0, i32 65536}
!5090 = !DILocation(line: 87, column: 3, scope: !5072)
!5091 = !DILocation(line: 88, column: 3, scope: !5072)
!5092 = !DILocation(line: 89, column: 3, scope: !5072)
!5093 = !DILocation(line: 90, column: 3, scope: !5072)
!5094 = !DILocation(line: 96, column: 1, scope: !5062)
!5095 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2633, file: !2633, line: 187, type: !5000, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5096)
!5096 = !{!5097, !5098, !5099}
!5097 = !DILocalVariable(name: "h", arg: 1, scope: !5095, file: !2633, line: 187, type: !2646)
!5098 = !DILocalVariable(name: "c", arg: 2, scope: !5095, file: !2633, line: 187, type: !2651)
!5099 = !DILocalVariable(name: "prev", arg: 3, scope: !5095, file: !2633, line: 188, type: !2651)
!5100 = !DILocation(line: 0, scope: !5095)
!5101 = !DILocation(line: 190, column: 2, scope: !5095)
!5102 = !DILocation(line: 191, column: 1, scope: !5095)
!5103 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2633, file: !2633, line: 193, type: !5000, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5104)
!5104 = !{!5105, !5106, !5107}
!5105 = !DILocalVariable(name: "h", arg: 1, scope: !5103, file: !2633, line: 193, type: !2646)
!5106 = !DILocalVariable(name: "c", arg: 2, scope: !5103, file: !2633, line: 193, type: !2651)
!5107 = !DILocalVariable(name: "next", arg: 3, scope: !5103, file: !2633, line: 194, type: !2651)
!5108 = !DILocation(line: 0, scope: !5103)
!5109 = !DILocation(line: 196, column: 2, scope: !5103)
!5110 = !DILocation(line: 197, column: 1, scope: !5103)
!5111 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2633, file: !2633, line: 177, type: !4966, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5112)
!5112 = !{!5113, !5114}
!5113 = !DILocalVariable(name: "h", arg: 1, scope: !5111, file: !2633, line: 177, type: !2646)
!5114 = !DILocalVariable(name: "c", arg: 2, scope: !5111, file: !2633, line: 177, type: !2651)
!5115 = !DILocation(line: 0, scope: !5111)
!5116 = !DILocation(line: 179, column: 9, scope: !5111)
!5117 = !DILocation(line: 179, column: 2, scope: !5111)
!5118 = distinct !DISubprogram(name: "chunk_field", scope: !2633, file: !2633, line: 107, type: !5119, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5121)
!5119 = !DISubroutineType(types: !5120)
!5120 = !{!2651, !2646, !2651, !2632}
!5121 = !{!5122, !5123, !5124, !5125, !5126}
!5122 = !DILocalVariable(name: "h", arg: 1, scope: !5118, file: !2633, line: 107, type: !2646)
!5123 = !DILocalVariable(name: "c", arg: 2, scope: !5118, file: !2633, line: 107, type: !2651)
!5124 = !DILocalVariable(name: "f", arg: 3, scope: !5118, file: !2633, line: 108, type: !2632)
!5125 = !DILocalVariable(name: "buf", scope: !5118, file: !2633, line: 110, type: !2640)
!5126 = !DILocalVariable(name: "cmem", scope: !5118, file: !2633, line: 111, type: !106)
!5127 = !DILocation(line: 0, scope: !5118)
!5128 = !DILocation(line: 110, column: 22, scope: !5118)
!5129 = !DILocation(line: 111, column: 15, scope: !5118)
!5130 = !DILocation(line: 116, column: 11, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5132, file: !2633, line: 115, column: 9)
!5132 = distinct !DILexicalBlock(scope: !5118, file: !2633, line: 113, column: 6)
!5133 = !DILocation(line: 116, column: 10, scope: !5131)
!5134 = !DILocation(line: 118, column: 1, scope: !5118)
!5135 = distinct !DISubprogram(name: "chunk_buf", scope: !2633, file: !2633, line: 101, type: !5136, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5138)
!5136 = !DISubroutineType(types: !5137)
!5137 = !{!2640, !2646}
!5138 = !{!5139}
!5139 = !DILocalVariable(name: "h", arg: 1, scope: !5135, file: !2633, line: 101, type: !2646)
!5140 = !DILocation(line: 0, scope: !5135)
!5141 = !DILocation(line: 104, column: 9, scope: !5135)
!5142 = !DILocation(line: 104, column: 2, scope: !5135)
!5143 = distinct !DISubprogram(name: "chunk_set", scope: !2633, file: !2633, line: 120, type: !5144, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5146)
!5144 = !DISubroutineType(types: !5145)
!5145 = !{null, !2646, !2651, !2632, !2651}
!5146 = !{!5147, !5148, !5149, !5150, !5151, !5152}
!5147 = !DILocalVariable(name: "h", arg: 1, scope: !5143, file: !2633, line: 120, type: !2646)
!5148 = !DILocalVariable(name: "c", arg: 2, scope: !5143, file: !2633, line: 120, type: !2651)
!5149 = !DILocalVariable(name: "f", arg: 3, scope: !5143, file: !2633, line: 121, type: !2632)
!5150 = !DILocalVariable(name: "val", arg: 4, scope: !5143, file: !2633, line: 121, type: !2651)
!5151 = !DILocalVariable(name: "buf", scope: !5143, file: !2633, line: 125, type: !2640)
!5152 = !DILocalVariable(name: "cmem", scope: !5143, file: !2633, line: 126, type: !106)
!5153 = !DILocation(line: 0, scope: !5143)
!5154 = !DILocation(line: 125, column: 22, scope: !5143)
!5155 = !DILocation(line: 126, column: 15, scope: !5143)
!5156 = !DILocation(line: 133, column: 27, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5158, file: !2633, line: 131, column: 9)
!5158 = distinct !DILexicalBlock(scope: !5143, file: !2633, line: 128, column: 6)
!5159 = !DILocation(line: 133, column: 4, scope: !5157)
!5160 = !DILocation(line: 133, column: 3, scope: !5157)
!5161 = !DILocation(line: 133, column: 25, scope: !5157)
!5162 = !DILocation(line: 135, column: 1, scope: !5143)
!5163 = distinct !DISubprogram(name: "min_chunk_size", scope: !2633, file: !2633, line: 240, type: !5164, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5166)
!5164 = !DISubroutineType(types: !5165)
!5165 = !{!5007, !2646}
!5166 = !{!5167}
!5167 = !DILocalVariable(name: "h", arg: 1, scope: !5163, file: !2633, line: 240, type: !2646)
!5168 = !DILocation(line: 0, scope: !5163)
!5169 = !DILocation(line: 242, column: 9, scope: !5163)
!5170 = !DILocation(line: 242, column: 2, scope: !5163)
!5171 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2633, file: !2633, line: 235, type: !5172, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5174)
!5172 = !DISubroutineType(types: !5173)
!5173 = !{!5007, !2646, !137}
!5174 = !{!5175, !5176}
!5175 = !DILocalVariable(name: "h", arg: 1, scope: !5171, file: !2633, line: 235, type: !2646)
!5176 = !DILocalVariable(name: "bytes", arg: 2, scope: !5171, file: !2633, line: 235, type: !137)
!5177 = !DILocation(line: 0, scope: !5171)
!5178 = !DILocation(line: 237, column: 39, scope: !5171)
!5179 = !DILocation(line: 237, column: 9, scope: !5171)
!5180 = !DILocation(line: 237, column: 2, scope: !5171)
!5181 = distinct !DISubprogram(name: "chunksz", scope: !2633, file: !2633, line: 230, type: !5182, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5184)
!5182 = !DISubroutineType(types: !5183)
!5183 = !{!5007, !137}
!5184 = !{!5185}
!5185 = !DILocalVariable(name: "bytes", arg: 1, scope: !5181, file: !2633, line: 230, type: !137)
!5186 = !DILocation(line: 0, scope: !5181)
!5187 = !DILocation(line: 232, column: 29, scope: !5181)
!5188 = !DILocation(line: 232, column: 35, scope: !5181)
!5189 = !DILocation(line: 232, column: 2, scope: !5181)
!5190 = distinct !DISubprogram(name: "set_chunk_size", scope: !2633, file: !2633, line: 172, type: !5191, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5193)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{null, !2646, !2651, !5007}
!5193 = !{!5194, !5195, !5196}
!5194 = !DILocalVariable(name: "h", arg: 1, scope: !5190, file: !2633, line: 172, type: !2646)
!5195 = !DILocalVariable(name: "c", arg: 2, scope: !5190, file: !2633, line: 172, type: !2651)
!5196 = !DILocalVariable(name: "size", arg: 3, scope: !5190, file: !2633, line: 172, type: !5007)
!5197 = !DILocation(line: 0, scope: !5190)
!5198 = !DILocation(line: 174, column: 38, scope: !5190)
!5199 = !DILocation(line: 174, column: 2, scope: !5190)
!5200 = !DILocation(line: 175, column: 1, scope: !5190)
!5201 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2633, file: !2633, line: 209, type: !5191, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5202)
!5202 = !{!5203, !5204, !5205}
!5203 = !DILocalVariable(name: "h", arg: 1, scope: !5201, file: !2633, line: 209, type: !2646)
!5204 = !DILocalVariable(name: "c", arg: 2, scope: !5201, file: !2633, line: 209, type: !2651)
!5205 = !DILocalVariable(name: "size", arg: 3, scope: !5201, file: !2633, line: 210, type: !5007)
!5206 = !DILocation(line: 0, scope: !5201)
!5207 = !DILocation(line: 212, column: 2, scope: !5201)
!5208 = !DILocation(line: 213, column: 1, scope: !5201)
!5209 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4881, file: !4881, line: 34, type: !5063, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5210)
!5210 = !{!5211, !5212, !5213, !5214, !5215, !5218}
!5211 = !DILocalVariable(name: "h", arg: 1, scope: !5209, file: !4881, line: 34, type: !2646)
!5212 = !DILocalVariable(name: "c", arg: 2, scope: !5209, file: !4881, line: 34, type: !2651)
!5213 = !DILocalVariable(name: "bidx", arg: 3, scope: !5209, file: !4881, line: 34, type: !107)
!5214 = !DILocalVariable(name: "b", scope: !5209, file: !4881, line: 36, type: !5070)
!5215 = !DILocalVariable(name: "first", scope: !5216, file: !4881, line: 47, type: !2651)
!5216 = distinct !DILexicalBlock(scope: !5217, file: !4881, line: 46, column: 9)
!5217 = distinct !DILexicalBlock(scope: !5209, file: !4881, line: 42, column: 6)
!5218 = !DILocalVariable(name: "second", scope: !5216, file: !4881, line: 48, type: !2651)
!5219 = !DILocation(line: 0, scope: !5209)
!5220 = !DILocation(line: 36, column: 29, scope: !5209)
!5221 = !DILocation(line: 42, column: 6, scope: !5217)
!5222 = !DILocation(line: 42, column: 28, scope: !5217)
!5223 = !DILocation(line: 42, column: 6, scope: !5209)
!5224 = !DILocation(line: 44, column: 24, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5217, file: !4881, line: 42, column: 34)
!5226 = !DILocation(line: 44, column: 23, scope: !5225)
!5227 = !DILocation(line: 44, column: 6, scope: !5225)
!5228 = !DILocation(line: 44, column: 20, scope: !5225)
!5229 = !DILocation(line: 45, column: 6, scope: !5225)
!5230 = !DILocation(line: 45, column: 11, scope: !5225)
!5231 = !DILocation(line: 46, column: 2, scope: !5225)
!5232 = !DILocation(line: 47, column: 21, scope: !5216)
!5233 = !DILocation(line: 0, scope: !5216)
!5234 = !DILocation(line: 50, column: 6, scope: !5216)
!5235 = !DILocation(line: 50, column: 11, scope: !5216)
!5236 = !DILocation(line: 51, column: 3, scope: !5216)
!5237 = !DILocation(line: 52, column: 3, scope: !5216)
!5238 = !DILocation(line: 58, column: 1, scope: !5209)
!5239 = distinct !DISubprogram(name: "next_free_chunk", scope: !2633, file: !2633, line: 182, type: !4966, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5240)
!5240 = !{!5241, !5242}
!5241 = !DILocalVariable(name: "h", arg: 1, scope: !5239, file: !2633, line: 182, type: !2646)
!5242 = !DILocalVariable(name: "c", arg: 2, scope: !5239, file: !2633, line: 182, type: !2651)
!5243 = !DILocation(line: 0, scope: !5239)
!5244 = !DILocation(line: 184, column: 9, scope: !5239)
!5245 = !DILocation(line: 184, column: 2, scope: !5239)
!5246 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4881, file: !4881, line: 200, type: !5247, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5249)
!5247 = !DISubroutineType(types: !5248)
!5248 = !{!137, !4884, !106}
!5249 = !{!5250, !5251, !5252, !5253, !5254, !5255, !5256}
!5250 = !DILocalVariable(name: "heap", arg: 1, scope: !5246, file: !4881, line: 200, type: !4884)
!5251 = !DILocalVariable(name: "mem", arg: 2, scope: !5246, file: !4881, line: 200, type: !106)
!5252 = !DILocalVariable(name: "h", scope: !5246, file: !4881, line: 202, type: !2646)
!5253 = !DILocalVariable(name: "c", scope: !5246, file: !4881, line: 203, type: !2651)
!5254 = !DILocalVariable(name: "addr", scope: !5246, file: !4881, line: 204, type: !137)
!5255 = !DILocalVariable(name: "chunk_base", scope: !5246, file: !4881, line: 205, type: !137)
!5256 = !DILocalVariable(name: "chunk_sz", scope: !5246, file: !4881, line: 206, type: !137)
!5257 = !DILocation(line: 0, scope: !5246)
!5258 = !DILocation(line: 202, column: 27, scope: !5246)
!5259 = !DILocation(line: 203, column: 16, scope: !5246)
!5260 = !DILocation(line: 204, column: 16, scope: !5246)
!5261 = !DILocation(line: 205, column: 31, scope: !5246)
!5262 = !DILocation(line: 205, column: 22, scope: !5246)
!5263 = !DILocation(line: 206, column: 20, scope: !5246)
!5264 = !DILocation(line: 206, column: 37, scope: !5246)
!5265 = !DILocation(line: 208, column: 26, scope: !5246)
!5266 = !DILocation(line: 208, column: 18, scope: !5246)
!5267 = !DILocation(line: 208, column: 2, scope: !5246)
!5268 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4881, file: !4881, line: 263, type: !5269, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5271)
!5269 = !DISubroutineType(types: !5270)
!5270 = !{!106, !4884, !137}
!5271 = !{!5272, !5273, !5274, !5275, !5276, !5277}
!5272 = !DILocalVariable(name: "heap", arg: 1, scope: !5268, file: !4881, line: 263, type: !4884)
!5273 = !DILocalVariable(name: "bytes", arg: 2, scope: !5268, file: !4881, line: 263, type: !137)
!5274 = !DILocalVariable(name: "h", scope: !5268, file: !4881, line: 265, type: !2646)
!5275 = !DILocalVariable(name: "mem", scope: !5268, file: !4881, line: 266, type: !106)
!5276 = !DILocalVariable(name: "chunk_sz", scope: !5268, file: !4881, line: 272, type: !5007)
!5277 = !DILocalVariable(name: "c", scope: !5268, file: !4881, line: 273, type: !2651)
!5278 = !DILocation(line: 0, scope: !5268)
!5279 = !DILocation(line: 265, column: 27, scope: !5268)
!5280 = !DILocation(line: 268, column: 12, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5268, file: !4881, line: 268, column: 6)
!5282 = !DILocation(line: 268, column: 18, scope: !5281)
!5283 = !DILocation(line: 268, column: 21, scope: !5281)
!5284 = !DILocation(line: 268, column: 6, scope: !5268)
!5285 = !DILocation(line: 272, column: 23, scope: !5268)
!5286 = !DILocation(line: 273, column: 16, scope: !5268)
!5287 = !DILocation(line: 274, column: 8, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5268, file: !4881, line: 274, column: 6)
!5289 = !DILocation(line: 274, column: 6, scope: !5268)
!5290 = !DILocation(line: 279, column: 6, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5268, file: !4881, line: 279, column: 6)
!5292 = !DILocation(line: 279, column: 23, scope: !5291)
!5293 = !DILocation(line: 279, column: 6, scope: !5268)
!5294 = !DILocation(line: 280, column: 24, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5291, file: !4881, line: 279, column: 35)
!5296 = !DILocation(line: 280, column: 3, scope: !5295)
!5297 = !DILocation(line: 281, column: 3, scope: !5295)
!5298 = !DILocation(line: 282, column: 2, scope: !5295)
!5299 = !DILocation(line: 284, column: 2, scope: !5268)
!5300 = !DILocation(line: 286, column: 8, scope: !5268)
!5301 = !DILocation(line: 298, column: 2, scope: !5268)
!5302 = !DILocation(line: 299, column: 1, scope: !5268)
!5303 = distinct !DISubprogram(name: "size_too_big", scope: !2633, file: !2633, line: 256, type: !5304, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5306)
!5304 = !DISubroutineType(types: !5305)
!5305 = !{!136, !2646, !137}
!5306 = !{!5307, !5308}
!5307 = !DILocalVariable(name: "h", arg: 1, scope: !5303, file: !2633, line: 256, type: !2646)
!5308 = !DILocalVariable(name: "bytes", arg: 2, scope: !5303, file: !2633, line: 256, type: !137)
!5309 = !DILocation(line: 0, scope: !5303)
!5310 = !DILocation(line: 262, column: 16, scope: !5303)
!5311 = !DILocation(line: 262, column: 36, scope: !5303)
!5312 = !DILocation(line: 262, column: 30, scope: !5303)
!5313 = !DILocation(line: 262, column: 2, scope: !5303)
!5314 = distinct !DISubprogram(name: "alloc_chunk", scope: !4881, file: !4881, line: 211, type: !5315, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5317)
!5315 = !DISubroutineType(types: !5316)
!5316 = !{!2651, !2646, !5007}
!5317 = !{!5318, !5319, !5320, !5321, !5322, !5325, !5326, !5328, !5329, !5332}
!5318 = !DILocalVariable(name: "h", arg: 1, scope: !5314, file: !4881, line: 211, type: !2646)
!5319 = !DILocalVariable(name: "sz", arg: 2, scope: !5314, file: !4881, line: 211, type: !5007)
!5320 = !DILocalVariable(name: "bi", scope: !5314, file: !4881, line: 213, type: !107)
!5321 = !DILocalVariable(name: "b", scope: !5314, file: !4881, line: 214, type: !5070)
!5322 = !DILocalVariable(name: "first", scope: !5323, file: !4881, line: 233, type: !2651)
!5323 = distinct !DILexicalBlock(scope: !5324, file: !4881, line: 232, column: 15)
!5324 = distinct !DILexicalBlock(scope: !5314, file: !4881, line: 232, column: 6)
!5325 = !DILocalVariable(name: "i", scope: !5323, file: !4881, line: 234, type: !107)
!5326 = !DILocalVariable(name: "c", scope: !5327, file: !4881, line: 236, type: !2651)
!5327 = distinct !DILexicalBlock(scope: !5323, file: !4881, line: 235, column: 6)
!5328 = !DILocalVariable(name: "bmask", scope: !5314, file: !4881, line: 249, type: !108)
!5329 = !DILocalVariable(name: "minbucket", scope: !5330, file: !4881, line: 252, type: !107)
!5330 = distinct !DILexicalBlock(scope: !5331, file: !4881, line: 251, column: 19)
!5331 = distinct !DILexicalBlock(scope: !5314, file: !4881, line: 251, column: 6)
!5332 = !DILocalVariable(name: "c", scope: !5330, file: !4881, line: 253, type: !2651)
!5333 = !DILocation(line: 0, scope: !5314)
!5334 = !DILocation(line: 213, column: 11, scope: !5314)
!5335 = !DILocation(line: 232, column: 9, scope: !5324)
!5336 = !DILocation(line: 232, column: 6, scope: !5324)
!5337 = !DILocation(line: 232, column: 6, scope: !5314)
!5338 = !DILocation(line: 236, column: 21, scope: !5327)
!5339 = !DILocation(line: 0, scope: !5323)
!5340 = !DILocation(line: 0, scope: !5327)
!5341 = !DILocation(line: 237, column: 8, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5327, file: !4881, line: 237, column: 8)
!5343 = !DILocation(line: 237, column: 25, scope: !5342)
!5344 = !DILocation(line: 237, column: 8, scope: !5327)
!5345 = !DILocation(line: 238, column: 5, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5342, file: !4881, line: 237, column: 32)
!5347 = !DILocation(line: 241, column: 14, scope: !5327)
!5348 = !DILocation(line: 241, column: 12, scope: !5327)
!5349 = !DILocation(line: 243, column: 12, scope: !5323)
!5350 = !DILocation(line: 243, column: 16, scope: !5323)
!5351 = distinct !{!5351, !5352, !5353}
!5352 = !DILocation(line: 235, column: 3, scope: !5323)
!5353 = !DILocation(line: 243, column: 35, scope: !5323)
!5354 = !DILocation(line: 249, column: 22, scope: !5314)
!5355 = !DILocation(line: 249, column: 39, scope: !5314)
!5356 = !DILocation(line: 249, column: 36, scope: !5314)
!5357 = !DILocation(line: 251, column: 12, scope: !5331)
!5358 = !DILocation(line: 251, column: 6, scope: !5314)
!5359 = !DILocation(line: 252, column: 19, scope: !5330)
!5360 = !DILocation(line: 0, scope: !5330)
!5361 = !DILocation(line: 253, column: 39, scope: !5330)
!5362 = !DILocation(line: 255, column: 3, scope: !5330)
!5363 = !DILocation(line: 261, column: 1, scope: !5314)
!5364 = distinct !DISubprogram(name: "split_chunks", scope: !4881, file: !4881, line: 109, type: !5000, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5365)
!5365 = !{!5366, !5367, !5368, !5369, !5370, !5371}
!5366 = !DILocalVariable(name: "h", arg: 1, scope: !5364, file: !4881, line: 109, type: !2646)
!5367 = !DILocalVariable(name: "lc", arg: 2, scope: !5364, file: !4881, line: 109, type: !2651)
!5368 = !DILocalVariable(name: "rc", arg: 3, scope: !5364, file: !4881, line: 109, type: !2651)
!5369 = !DILocalVariable(name: "sz0", scope: !5364, file: !4881, line: 114, type: !5007)
!5370 = !DILocalVariable(name: "lsz", scope: !5364, file: !4881, line: 115, type: !5007)
!5371 = !DILocalVariable(name: "rsz", scope: !5364, file: !4881, line: 116, type: !5007)
!5372 = !DILocation(line: 0, scope: !5364)
!5373 = !DILocation(line: 114, column: 18, scope: !5364)
!5374 = !DILocation(line: 115, column: 21, scope: !5364)
!5375 = !DILocation(line: 116, column: 22, scope: !5364)
!5376 = !DILocation(line: 118, column: 2, scope: !5364)
!5377 = !DILocation(line: 119, column: 2, scope: !5364)
!5378 = !DILocation(line: 120, column: 2, scope: !5364)
!5379 = !DILocation(line: 121, column: 25, scope: !5364)
!5380 = !DILocation(line: 121, column: 2, scope: !5364)
!5381 = !DILocation(line: 122, column: 1, scope: !5364)
!5382 = distinct !DISubprogram(name: "chunk_mem", scope: !4881, file: !4881, line: 24, type: !5383, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5385)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{!106, !2646, !2651}
!5385 = !{!5386, !5387, !5388, !5389}
!5386 = !DILocalVariable(name: "h", arg: 1, scope: !5382, file: !4881, line: 24, type: !2646)
!5387 = !DILocalVariable(name: "c", arg: 2, scope: !5382, file: !4881, line: 24, type: !2651)
!5388 = !DILocalVariable(name: "buf", scope: !5382, file: !4881, line: 26, type: !2640)
!5389 = !DILocalVariable(name: "ret", scope: !5382, file: !4881, line: 27, type: !401)
!5390 = !DILocation(line: 0, scope: !5382)
!5391 = !DILocation(line: 26, column: 22, scope: !5382)
!5392 = !DILocation(line: 27, column: 38, scope: !5382)
!5393 = !DILocation(line: 31, column: 2, scope: !5382)
!5394 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4881, file: !4881, line: 301, type: !5395, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5397)
!5395 = !DISubroutineType(types: !5396)
!5396 = !{!106, !4884, !137, !137}
!5397 = !{!5398, !5399, !5400, !5401, !5402, !5403, !5404, !5405, !5406, !5407, !5408, !5409}
!5398 = !DILocalVariable(name: "heap", arg: 1, scope: !5394, file: !4881, line: 301, type: !4884)
!5399 = !DILocalVariable(name: "align", arg: 2, scope: !5394, file: !4881, line: 301, type: !137)
!5400 = !DILocalVariable(name: "bytes", arg: 3, scope: !5394, file: !4881, line: 301, type: !137)
!5401 = !DILocalVariable(name: "h", scope: !5394, file: !4881, line: 303, type: !2646)
!5402 = !DILocalVariable(name: "gap", scope: !5394, file: !4881, line: 304, type: !137)
!5403 = !DILocalVariable(name: "rew", scope: !5394, file: !4881, line: 304, type: !137)
!5404 = !DILocalVariable(name: "padded_sz", scope: !5394, file: !4881, line: 335, type: !5007)
!5405 = !DILocalVariable(name: "c0", scope: !5394, file: !4881, line: 336, type: !2651)
!5406 = !DILocalVariable(name: "mem", scope: !5394, file: !4881, line: 341, type: !401)
!5407 = !DILocalVariable(name: "end", scope: !5394, file: !4881, line: 345, type: !2640)
!5408 = !DILocalVariable(name: "c", scope: !5394, file: !4881, line: 348, type: !2651)
!5409 = !DILocalVariable(name: "c_end", scope: !5394, file: !4881, line: 349, type: !2651)
!5410 = !DILocation(line: 0, scope: !5394)
!5411 = !DILocation(line: 303, column: 27, scope: !5394)
!5412 = !DILocation(line: 313, column: 16, scope: !5394)
!5413 = !DILocation(line: 313, column: 14, scope: !5394)
!5414 = !DILocation(line: 314, column: 12, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5394, file: !4881, line: 314, column: 6)
!5416 = !DILocation(line: 314, column: 6, scope: !5394)
!5417 = !DILocation(line: 315, column: 9, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5415, file: !4881, line: 314, column: 20)
!5419 = !DILocation(line: 316, column: 9, scope: !5418)
!5420 = !DILocation(line: 318, column: 13, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !4881, line: 318, column: 7)
!5422 = distinct !DILexicalBlock(scope: !5415, file: !4881, line: 317, column: 9)
!5423 = !DILocation(line: 318, column: 7, scope: !5422)
!5424 = !DILocation(line: 319, column: 11, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5421, file: !4881, line: 318, column: 39)
!5426 = !DILocation(line: 319, column: 4, scope: !5425)
!5427 = !DILocation(line: 0, scope: !5415)
!5428 = !DILocation(line: 326, column: 12, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5394, file: !4881, line: 326, column: 6)
!5430 = !DILocation(line: 326, column: 17, scope: !5429)
!5431 = !DILocation(line: 326, column: 20, scope: !5429)
!5432 = !DILocation(line: 326, column: 6, scope: !5394)
!5433 = !DILocation(line: 335, column: 50, scope: !5394)
!5434 = !DILocation(line: 335, column: 58, scope: !5394)
!5435 = !DILocation(line: 335, column: 24, scope: !5394)
!5436 = !DILocation(line: 336, column: 17, scope: !5394)
!5437 = !DILocation(line: 338, column: 9, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5394, file: !4881, line: 338, column: 6)
!5439 = !DILocation(line: 338, column: 6, scope: !5394)
!5440 = !DILocation(line: 341, column: 17, scope: !5394)
!5441 = !DILocation(line: 344, column: 20, scope: !5394)
!5442 = !DILocation(line: 344, column: 8, scope: !5394)
!5443 = !DILocation(line: 344, column: 47, scope: !5394)
!5444 = !DILocation(line: 345, column: 39, scope: !5394)
!5445 = !DILocation(line: 348, column: 16, scope: !5394)
!5446 = !DILocation(line: 349, column: 26, scope: !5394)
!5447 = !DILocation(line: 349, column: 24, scope: !5394)
!5448 = !DILocation(line: 353, column: 8, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5394, file: !4881, line: 353, column: 6)
!5450 = !DILocation(line: 353, column: 6, scope: !5394)
!5451 = !DILocation(line: 354, column: 3, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5449, file: !4881, line: 353, column: 14)
!5453 = !DILocation(line: 355, column: 3, scope: !5452)
!5454 = !DILocation(line: 356, column: 2, scope: !5452)
!5455 = !DILocation(line: 359, column: 6, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5394, file: !4881, line: 359, column: 6)
!5457 = !DILocation(line: 359, column: 24, scope: !5456)
!5458 = !DILocation(line: 359, column: 6, scope: !5394)
!5459 = !DILocation(line: 360, column: 3, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5456, file: !4881, line: 359, column: 33)
!5461 = !DILocation(line: 361, column: 3, scope: !5460)
!5462 = !DILocation(line: 362, column: 2, scope: !5460)
!5463 = !DILocation(line: 364, column: 2, scope: !5394)
!5464 = !DILocation(line: 377, column: 1, scope: !5394)
!5465 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4881, file: !4881, line: 379, type: !5466, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5468)
!5466 = !DISubroutineType(types: !5467)
!5467 = !{!106, !4884, !106, !137, !137}
!5468 = !{!5469, !5470, !5471, !5472, !5473, !5474, !5475, !5476, !5477, !5478, !5484, !5485}
!5469 = !DILocalVariable(name: "heap", arg: 1, scope: !5465, file: !4881, line: 379, type: !4884)
!5470 = !DILocalVariable(name: "ptr", arg: 2, scope: !5465, file: !4881, line: 379, type: !106)
!5471 = !DILocalVariable(name: "align", arg: 3, scope: !5465, file: !4881, line: 380, type: !137)
!5472 = !DILocalVariable(name: "bytes", arg: 4, scope: !5465, file: !4881, line: 380, type: !137)
!5473 = !DILocalVariable(name: "h", scope: !5465, file: !4881, line: 382, type: !2646)
!5474 = !DILocalVariable(name: "c", scope: !5465, file: !4881, line: 399, type: !2651)
!5475 = !DILocalVariable(name: "rc", scope: !5465, file: !4881, line: 400, type: !2651)
!5476 = !DILocalVariable(name: "align_gap", scope: !5465, file: !4881, line: 401, type: !137)
!5477 = !DILocalVariable(name: "chunks_need", scope: !5465, file: !4881, line: 402, type: !5007)
!5478 = !DILocalVariable(name: "split_size", scope: !5479, file: !4881, line: 435, type: !5007)
!5479 = distinct !DILexicalBlock(scope: !5480, file: !4881, line: 433, column: 61)
!5480 = distinct !DILexicalBlock(scope: !5481, file: !4881, line: 432, column: 13)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !4881, line: 409, column: 13)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !4881, line: 406, column: 13)
!5483 = distinct !DILexicalBlock(scope: !5465, file: !4881, line: 404, column: 6)
!5484 = !DILocalVariable(name: "ptr2", scope: !5465, file: !4881, line: 474, type: !106)
!5485 = !DILocalVariable(name: "prev_size", scope: !5486, file: !4881, line: 477, type: !137)
!5486 = distinct !DILexicalBlock(scope: !5487, file: !4881, line: 476, column: 20)
!5487 = distinct !DILexicalBlock(scope: !5465, file: !4881, line: 476, column: 6)
!5488 = !DILocation(line: 0, scope: !5465)
!5489 = !DILocation(line: 382, column: 27, scope: !5465)
!5490 = !DILocation(line: 385, column: 10, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5465, file: !4881, line: 385, column: 6)
!5492 = !DILocation(line: 385, column: 6, scope: !5465)
!5493 = !DILocation(line: 386, column: 10, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5491, file: !4881, line: 385, column: 19)
!5495 = !DILocation(line: 386, column: 3, scope: !5494)
!5496 = !DILocation(line: 388, column: 12, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5465, file: !4881, line: 388, column: 6)
!5498 = !DILocation(line: 388, column: 6, scope: !5465)
!5499 = !DILocation(line: 389, column: 3, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5497, file: !4881, line: 388, column: 18)
!5501 = !DILocation(line: 390, column: 3, scope: !5500)
!5502 = !DILocation(line: 395, column: 6, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5465, file: !4881, line: 395, column: 6)
!5504 = !DILocation(line: 395, column: 6, scope: !5465)
!5505 = !DILocation(line: 399, column: 16, scope: !5465)
!5506 = !DILocation(line: 400, column: 17, scope: !5465)
!5507 = !DILocation(line: 401, column: 49, scope: !5465)
!5508 = !DILocation(line: 401, column: 36, scope: !5465)
!5509 = !DILocation(line: 402, column: 52, scope: !5465)
!5510 = !DILocation(line: 402, column: 26, scope: !5465)
!5511 = !DILocation(line: 404, column: 6, scope: !5483)
!5512 = !DILocation(line: 404, column: 12, scope: !5483)
!5513 = !DILocation(line: 404, column: 40, scope: !5483)
!5514 = !DILocation(line: 404, column: 31, scope: !5483)
!5515 = !DILocation(line: 404, column: 6, scope: !5465)
!5516 = !DILocation(line: 406, column: 13, scope: !5482)
!5517 = !DILocation(line: 406, column: 30, scope: !5482)
!5518 = !DILocation(line: 406, column: 13, scope: !5483)
!5519 = !DILocation(line: 409, column: 30, scope: !5481)
!5520 = !DILocation(line: 409, column: 13, scope: !5482)
!5521 = !DILocation(line: 420, column: 24, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5481, file: !4881, line: 409, column: 45)
!5523 = !DILocation(line: 420, column: 3, scope: !5522)
!5524 = !DILocation(line: 421, column: 3, scope: !5522)
!5525 = !DILocation(line: 422, column: 3, scope: !5522)
!5526 = !DILocation(line: 431, column: 3, scope: !5522)
!5527 = !DILocation(line: 432, column: 14, scope: !5480)
!5528 = !DILocation(line: 432, column: 32, scope: !5480)
!5529 = !DILocation(line: 433, column: 26, scope: !5480)
!5530 = !DILocation(line: 433, column: 24, scope: !5480)
!5531 = !DILocation(line: 433, column: 44, scope: !5480)
!5532 = !DILocation(line: 432, column: 13, scope: !5481)
!5533 = !DILocation(line: 435, column: 38, scope: !5479)
!5534 = !DILocation(line: 0, scope: !5479)
!5535 = !DILocation(line: 445, column: 3, scope: !5479)
!5536 = !DILocation(line: 447, column: 20, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5479, file: !4881, line: 447, column: 7)
!5538 = !DILocation(line: 447, column: 18, scope: !5537)
!5539 = !DILocation(line: 447, column: 7, scope: !5479)
!5540 = !DILocation(line: 448, column: 27, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5537, file: !4881, line: 447, column: 39)
!5542 = !DILocation(line: 448, column: 4, scope: !5541)
!5543 = !DILocation(line: 449, column: 4, scope: !5541)
!5544 = !DILocation(line: 450, column: 3, scope: !5541)
!5545 = !DILocation(line: 452, column: 3, scope: !5479)
!5546 = !DILocation(line: 453, column: 3, scope: !5479)
!5547 = !DILocation(line: 474, column: 15, scope: !5465)
!5548 = !DILocation(line: 476, column: 11, scope: !5487)
!5549 = !DILocation(line: 476, column: 6, scope: !5465)
!5550 = !DILocation(line: 477, column: 42, scope: !5486)
!5551 = !DILocation(line: 477, column: 22, scope: !5486)
!5552 = !DILocation(line: 477, column: 60, scope: !5486)
!5553 = !DILocation(line: 0, scope: !5486)
!5554 = !DILocation(line: 479, column: 21, scope: !5486)
!5555 = !DILocation(line: 479, column: 3, scope: !5486)
!5556 = !DILocation(line: 480, column: 3, scope: !5486)
!5557 = !DILocation(line: 481, column: 2, scope: !5486)
!5558 = !DILocation(line: 483, column: 1, scope: !5465)
!5559 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2633, file: !2633, line: 245, type: !5560, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5562)
!5560 = !DISubroutineType(types: !5561)
!5561 = !{!137, !2646, !5007}
!5562 = !{!5563, !5564}
!5563 = !DILocalVariable(name: "h", arg: 1, scope: !5559, file: !2633, line: 245, type: !2646)
!5564 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5559, file: !2633, line: 245, type: !5007)
!5565 = !DILocation(line: 0, scope: !5559)
!5566 = !DILocation(line: 247, column: 20, scope: !5559)
!5567 = !DILocation(line: 247, column: 33, scope: !5559)
!5568 = !DILocation(line: 247, column: 2, scope: !5559)
!5569 = distinct !DISubprogram(name: "sys_heap_init", scope: !4881, file: !4881, line: 485, type: !5570, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5572)
!5570 = !DISubroutineType(types: !5571)
!5571 = !{null, !4884, !106, !137}
!5572 = !{!5573, !5574, !5575, !5576, !5577, !5578, !5579, !5580, !5581, !5582}
!5573 = !DILocalVariable(name: "heap", arg: 1, scope: !5569, file: !4881, line: 485, type: !4884)
!5574 = !DILocalVariable(name: "mem", arg: 2, scope: !5569, file: !4881, line: 485, type: !106)
!5575 = !DILocalVariable(name: "bytes", arg: 3, scope: !5569, file: !4881, line: 485, type: !137)
!5576 = !DILocalVariable(name: "addr", scope: !5569, file: !4881, line: 502, type: !22)
!5577 = !DILocalVariable(name: "end", scope: !5569, file: !4881, line: 503, type: !22)
!5578 = !DILocalVariable(name: "heap_sz", scope: !5569, file: !4881, line: 504, type: !5007)
!5579 = !DILocalVariable(name: "h", scope: !5569, file: !4881, line: 509, type: !2646)
!5580 = !DILocalVariable(name: "nb_buckets", scope: !5569, file: !4881, line: 520, type: !107)
!5581 = !DILocalVariable(name: "chunk0_size", scope: !5569, file: !4881, line: 521, type: !5007)
!5582 = !DILocalVariable(name: "i", scope: !5583, file: !4881, line: 526, type: !107)
!5583 = distinct !DILexicalBlock(scope: !5569, file: !4881, line: 526, column: 2)
!5584 = !DILocation(line: 0, scope: !5569)
!5585 = !DILocation(line: 499, column: 8, scope: !5569)
!5586 = !DILocation(line: 502, column: 19, scope: !5569)
!5587 = !DILocation(line: 503, column: 18, scope: !5569)
!5588 = !DILocation(line: 504, column: 27, scope: !5569)
!5589 = !DILocation(line: 504, column: 35, scope: !5569)
!5590 = !DILocation(line: 509, column: 21, scope: !5569)
!5591 = !DILocation(line: 510, column: 8, scope: !5569)
!5592 = !DILocation(line: 510, column: 13, scope: !5569)
!5593 = !DILocation(line: 511, column: 5, scope: !5569)
!5594 = !DILocation(line: 511, column: 15, scope: !5569)
!5595 = !DILocation(line: 512, column: 5, scope: !5569)
!5596 = !DILocation(line: 512, column: 19, scope: !5569)
!5597 = !DILocation(line: 520, column: 19, scope: !5569)
!5598 = !DILocation(line: 522, column: 21, scope: !5569)
!5599 = !DILocation(line: 521, column: 56, scope: !5569)
!5600 = !DILocation(line: 521, column: 26, scope: !5569)
!5601 = !DILocation(line: 0, scope: !5583)
!5602 = !DILocation(line: 526, column: 20, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5583, file: !4881, line: 526, column: 2)
!5604 = !DILocation(line: 526, column: 2, scope: !5583)
!5605 = !DILocation(line: 531, column: 2, scope: !5569)
!5606 = !DILocation(line: 532, column: 2, scope: !5569)
!5607 = !DILocation(line: 533, column: 2, scope: !5569)
!5608 = !DILocation(line: 536, column: 41, scope: !5569)
!5609 = !DILocation(line: 536, column: 2, scope: !5569)
!5610 = !DILocation(line: 537, column: 2, scope: !5569)
!5611 = !DILocation(line: 540, column: 2, scope: !5569)
!5612 = !DILocation(line: 541, column: 2, scope: !5569)
!5613 = !DILocation(line: 542, column: 2, scope: !5569)
!5614 = !DILocation(line: 544, column: 2, scope: !5569)
!5615 = !DILocation(line: 545, column: 1, scope: !5569)
!5616 = !DILocation(line: 527, column: 17, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5603, file: !4881, line: 526, column: 39)
!5618 = !DILocation(line: 527, column: 22, scope: !5617)
!5619 = !DILocation(line: 526, column: 35, scope: !5603)
!5620 = distinct !{!5620, !5604, !5621}
!5621 = !DILocation(line: 528, column: 2, scope: !5583)
!5622 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2666, file: !2666, line: 1338, type: !5623, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !5631)
!5623 = !DISubroutineType(types: !5624)
!5624 = !{!107, !4079, !106, !121, !5625, !108}
!5625 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3718, line: 99, baseType: !5626)
!5626 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3718, line: 40, baseType: !5627)
!5627 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2666, baseType: !5628)
!5628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5629)
!5629 = !{!5630}
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5628, file: !2666, baseType: !106, size: 32)
!5631 = !{!5632, !5633, !5634, !5635, !5636, !5637, !5641, !5642, !5643, !5645, !5650, !5693, !5696, !5699, !5700, !5701, !5702, !5703, !5704, !5705, !5708, !5709, !5710, !5714, !5717, !5719, !5722, !5723, !5724, !5729, !5735, !5738, !5742, !5748, !5752, !5755, !5757, !5760}
!5632 = !DILocalVariable(name: "out", arg: 1, scope: !5622, file: !2666, line: 1338, type: !4079)
!5633 = !DILocalVariable(name: "ctx", arg: 2, scope: !5622, file: !2666, line: 1338, type: !106)
!5634 = !DILocalVariable(name: "fp", arg: 3, scope: !5622, file: !2666, line: 1338, type: !121)
!5635 = !DILocalVariable(name: "ap", arg: 4, scope: !5622, file: !2666, line: 1339, type: !5625)
!5636 = !DILocalVariable(name: "flags", arg: 5, scope: !5622, file: !2666, line: 1339, type: !108)
!5637 = !DILocalVariable(name: "buf", scope: !5622, file: !2666, line: 1341, type: !5638)
!5638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 176, elements: !5639)
!5639 = !{!5640}
!5640 = !DISubrange(count: 22)
!5641 = !DILocalVariable(name: "count", scope: !5622, file: !2666, line: 1342, type: !137)
!5642 = !DILocalVariable(name: "sint", scope: !5622, file: !2666, line: 1343, type: !2685)
!5643 = !DILocalVariable(name: "tagged_ap", scope: !5622, file: !2666, line: 1345, type: !5644)
!5644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!5645 = !DILocalVariable(name: "rc", scope: !5646, file: !2666, line: 1377, type: !107)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !2666, line: 1377, column: 4)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !2666, line: 1376, column: 19)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1376, column: 7)
!5649 = distinct !DILexicalBlock(scope: !5622, file: !2666, line: 1375, column: 19)
!5650 = !DILocalVariable(name: "state", scope: !5649, file: !2666, line: 1395, type: !5651)
!5651 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5622, file: !2666, line: 1392, size: 192, elements: !5652)
!5652 = !{!5653, !5661}
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5651, file: !2666, line: 1393, baseType: !5654, size: 64)
!5654 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2666, line: 166, size: 64, elements: !5655)
!5655 = !{!5656, !5657, !5658, !5659, !5660}
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5654, file: !2666, line: 168, baseType: !2685, size: 64)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5654, file: !2666, line: 171, baseType: !2688, size: 64)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5654, file: !2666, line: 174, baseType: !394, size: 64)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5654, file: !2666, line: 177, baseType: !392, size: 64)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5654, file: !2666, line: 180, baseType: !106, size: 32)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5651, file: !2666, line: 1394, baseType: !5662, size: 96, offset: 64)
!5662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2666, line: 189, size: 96, elements: !5663)
!5663 = !{!5664, !5665, !5666, !5667, !5668, !5669, !5670, !5671, !5672, !5673, !5674, !5675, !5676, !5677, !5678, !5679, !5680, !5681, !5682, !5683, !5688}
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5662, file: !2666, line: 191, baseType: !136, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5662, file: !2666, line: 194, baseType: !136, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5662, file: !2666, line: 197, baseType: !136, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5662, file: !2666, line: 200, baseType: !136, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5662, file: !2666, line: 203, baseType: !136, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5662, file: !2666, line: 206, baseType: !136, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5662, file: !2666, line: 209, baseType: !136, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5662, file: !2666, line: 212, baseType: !136, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5662, file: !2666, line: 219, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5662, file: !2666, line: 222, baseType: !136, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5662, file: !2666, line: 229, baseType: !136, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5662, file: !2666, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5662, file: !2666, line: 238, baseType: !136, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5662, file: !2666, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5662, file: !2666, line: 244, baseType: !136, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5662, file: !2666, line: 247, baseType: !136, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5662, file: !2666, line: 252, baseType: !136, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5662, file: !2666, line: 257, baseType: !136, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5662, file: !2666, line: 260, baseType: !191, size: 8, offset: 24)
!5683 = !DIDerivedType(tag: DW_TAG_member, scope: !5662, file: !2666, line: 262, baseType: !5684, size: 32, offset: 32)
!5684 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5662, file: !2666, line: 262, size: 32, elements: !5685)
!5685 = !{!5686, !5687}
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5684, file: !2666, line: 267, baseType: !107, size: 32)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5684, file: !2666, line: 289, baseType: !107, size: 32)
!5688 = !DIDerivedType(tag: DW_TAG_member, scope: !5662, file: !2666, line: 292, baseType: !5689, size: 32, offset: 64)
!5689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5662, file: !2666, line: 292, size: 32, elements: !5690)
!5690 = !{!5691, !5692}
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5689, file: !2666, line: 297, baseType: !107, size: 32)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5689, file: !2666, line: 306, baseType: !107, size: 32)
!5693 = !DILocalVariable(name: "conv", scope: !5649, file: !2666, line: 1400, type: !5694)
!5694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5695)
!5695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5662, size: 32)
!5696 = !DILocalVariable(name: "value", scope: !5649, file: !2666, line: 1401, type: !5697)
!5697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5698)
!5698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5654, size: 32)
!5699 = !DILocalVariable(name: "sp", scope: !5649, file: !2666, line: 1402, type: !121)
!5700 = !DILocalVariable(name: "width", scope: !5649, file: !2666, line: 1403, type: !107)
!5701 = !DILocalVariable(name: "precision", scope: !5649, file: !2666, line: 1404, type: !107)
!5702 = !DILocalVariable(name: "bps", scope: !5649, file: !2666, line: 1405, type: !121)
!5703 = !DILocalVariable(name: "bpe", scope: !5649, file: !2666, line: 1406, type: !121)
!5704 = !DILocalVariable(name: "sign", scope: !5649, file: !2666, line: 1407, type: !123)
!5705 = !DILocalVariable(name: "arg", scope: !5706, file: !2666, line: 1432, type: !107)
!5706 = distinct !DILexicalBlock(scope: !5707, file: !2666, line: 1431, column: 24)
!5707 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1431, column: 7)
!5708 = !DILocalVariable(name: "specifier_cat", scope: !5649, file: !2666, line: 1468, type: !2665)
!5709 = !DILocalVariable(name: "length_mod", scope: !5649, file: !2666, line: 1470, type: !2673)
!5710 = !DILocalVariable(name: "rc", scope: !5711, file: !2666, line: 1575, type: !107)
!5711 = distinct !DILexicalBlock(scope: !5712, file: !2666, line: 1575, column: 4)
!5712 = distinct !DILexicalBlock(scope: !5713, file: !2666, line: 1574, column: 43)
!5713 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1574, column: 7)
!5714 = !DILocalVariable(name: "rc", scope: !5715, file: !2666, line: 1584, type: !107)
!5715 = distinct !DILexicalBlock(scope: !5716, file: !2666, line: 1584, column: 4)
!5716 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1582, column: 28)
!5717 = !DILocalVariable(name: "len", scope: !5718, file: !2666, line: 1589, type: !137)
!5718 = distinct !DILexicalBlock(scope: !5716, file: !2666, line: 1586, column: 13)
!5719 = !DILocalVariable(name: "len", scope: !5720, file: !2666, line: 1641, type: !137)
!5720 = distinct !DILexicalBlock(scope: !5721, file: !2666, line: 1640, column: 24)
!5721 = distinct !DILexicalBlock(scope: !5716, file: !2666, line: 1640, column: 8)
!5722 = !DILocalVariable(name: "nj_len", scope: !5649, file: !2666, line: 1722, type: !137)
!5723 = !DILocalVariable(name: "pad_len", scope: !5649, file: !2666, line: 1723, type: !107)
!5724 = !DILocalVariable(name: "pad", scope: !5725, file: !2666, line: 1751, type: !123)
!5725 = distinct !DILexicalBlock(scope: !5726, file: !2666, line: 1750, column: 26)
!5726 = distinct !DILexicalBlock(scope: !5727, file: !2666, line: 1750, column: 8)
!5727 = distinct !DILexicalBlock(scope: !5728, file: !2666, line: 1747, column: 18)
!5728 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1747, column: 7)
!5729 = !DILocalVariable(name: "rc", scope: !5730, file: !2666, line: 1758, type: !107)
!5730 = distinct !DILexicalBlock(scope: !5731, file: !2666, line: 1758, column: 7)
!5731 = distinct !DILexicalBlock(scope: !5732, file: !2666, line: 1757, column: 21)
!5732 = distinct !DILexicalBlock(scope: !5733, file: !2666, line: 1757, column: 10)
!5733 = distinct !DILexicalBlock(scope: !5734, file: !2666, line: 1756, column: 26)
!5734 = distinct !DILexicalBlock(scope: !5725, file: !2666, line: 1756, column: 9)
!5735 = !DILocalVariable(name: "rc", scope: !5736, file: !2666, line: 1765, type: !107)
!5736 = distinct !DILexicalBlock(scope: !5737, file: !2666, line: 1765, column: 6)
!5737 = distinct !DILexicalBlock(scope: !5725, file: !2666, line: 1764, column: 25)
!5738 = !DILocalVariable(name: "rc", scope: !5739, file: !2666, line: 1774, type: !107)
!5739 = distinct !DILexicalBlock(scope: !5740, file: !2666, line: 1774, column: 4)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !2666, line: 1773, column: 18)
!5741 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1773, column: 7)
!5742 = !DILocalVariable(name: "rc", scope: !5743, file: !2666, line: 1819, type: !107)
!5743 = distinct !DILexicalBlock(scope: !5744, file: !2666, line: 1819, column: 5)
!5744 = distinct !DILexicalBlock(scope: !5745, file: !2666, line: 1818, column: 44)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !2666, line: 1818, column: 8)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !2666, line: 1817, column: 10)
!5747 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1777, column: 7)
!5748 = !DILocalVariable(name: "rc", scope: !5749, file: !2666, line: 1823, type: !107)
!5749 = distinct !DILexicalBlock(scope: !5750, file: !2666, line: 1823, column: 5)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !2666, line: 1822, column: 26)
!5751 = distinct !DILexicalBlock(scope: !5746, file: !2666, line: 1822, column: 8)
!5752 = !DILocalVariable(name: "rc", scope: !5753, file: !2666, line: 1828, type: !107)
!5753 = distinct !DILexicalBlock(scope: !5754, file: !2666, line: 1828, column: 5)
!5754 = distinct !DILexicalBlock(scope: !5746, file: !2666, line: 1827, column: 26)
!5755 = !DILocalVariable(name: "rc", scope: !5756, file: !2666, line: 1831, type: !107)
!5756 = distinct !DILexicalBlock(scope: !5746, file: !2666, line: 1831, column: 4)
!5757 = !DILocalVariable(name: "rc", scope: !5758, file: !2666, line: 1836, type: !107)
!5758 = distinct !DILexicalBlock(scope: !5759, file: !2666, line: 1836, column: 4)
!5759 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1835, column: 21)
!5760 = !DILabel(scope: !5716, name: "prec_int_pad0", file: !2666, line: 1634)
!5761 = !DILocation(line: 0, scope: !5622)
!5762 = !DILocation(line: 1341, column: 2, scope: !5622)
!5763 = !DILocation(line: 1341, column: 7, scope: !5622)
!5764 = !DILocation(line: 1375, column: 2, scope: !5622)
!5765 = !DILocation(line: 1342, column: 9, scope: !5622)
!5766 = !DILocation(line: 1375, column: 9, scope: !5622)
!5767 = !DILocation(line: 1377, column: 4, scope: !5646)
!5768 = !DILocation(line: 0, scope: !5646)
!5769 = !DILocation(line: 1377, column: 4, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5646, file: !2666, line: 1377, column: 4)
!5771 = distinct !{!5771, !5764, !5772}
!5772 = !DILocation(line: 1839, column: 2, scope: !5622)
!5773 = !DILocation(line: 1392, column: 3, scope: !5649)
!5774 = !DILocation(line: 1395, column: 5, scope: !5649)
!5775 = !DILocation(line: 0, scope: !5649)
!5776 = !DILocation(line: 1409, column: 8, scope: !5649)
!5777 = !DILocation(line: 1414, column: 13, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1414, column: 7)
!5779 = !DILocation(line: 1414, column: 7, scope: !5649)
!5780 = !DILocation(line: 1415, column: 12, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5778, file: !2666, line: 1414, column: 25)
!5782 = !DILocation(line: 1417, column: 14, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5781, file: !2666, line: 1417, column: 8)
!5784 = !DILocation(line: 1417, column: 8, scope: !5781)
!5785 = !DILocation(line: 1418, column: 21, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5783, file: !2666, line: 1417, column: 19)
!5787 = !DILocation(line: 1419, column: 13, scope: !5786)
!5788 = !DILocation(line: 1420, column: 4, scope: !5786)
!5789 = !DILocation(line: 1421, column: 20, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5778, file: !2666, line: 1421, column: 14)
!5791 = !DILocation(line: 1421, column: 14, scope: !5778)
!5792 = !DILocation(line: 1431, column: 13, scope: !5707)
!5793 = !DILocation(line: 1431, column: 7, scope: !5649)
!5794 = !DILocation(line: 1432, column: 14, scope: !5706)
!5795 = !DILocation(line: 0, scope: !5706)
!5796 = !DILocation(line: 1434, column: 12, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5706, file: !2666, line: 1434, column: 8)
!5798 = !DILocation(line: 1434, column: 8, scope: !5706)
!5799 = !DILocation(line: 1435, column: 24, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5797, file: !2666, line: 1434, column: 17)
!5801 = !DILocation(line: 1436, column: 4, scope: !5800)
!5802 = !DILocation(line: 1439, column: 20, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5707, file: !2666, line: 1439, column: 14)
!5804 = !DILocation(line: 1439, column: 14, scope: !5707)
!5805 = !DILocation(line: 1469, column: 37, scope: !5649)
!5806 = !DILocation(line: 1448, column: 20, scope: !5649)
!5807 = !DILocation(line: 1449, column: 22, scope: !5649)
!5808 = !DILocation(line: 1471, column: 34, scope: !5649)
!5809 = !DILocation(line: 1478, column: 7, scope: !5649)
!5810 = !DILocation(line: 1479, column: 4, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5812, file: !2666, line: 1478, column: 40)
!5812 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1478, column: 7)
!5813 = !DILocation(line: 1484, column: 19, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5811, file: !2666, line: 1479, column: 24)
!5815 = !DILocation(line: 1484, column: 17, scope: !5814)
!5816 = !DILocation(line: 1485, column: 5, scope: !5814)
!5817 = !DILocation(line: 1492, column: 20, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5819, file: !2666, line: 1491, column: 12)
!5819 = distinct !DILexicalBlock(scope: !5814, file: !2666, line: 1487, column: 9)
!5820 = !DILocation(line: 1492, column: 18, scope: !5818)
!5821 = !DILocation(line: 1494, column: 5, scope: !5814)
!5822 = !DILocation(line: 1497, column: 23, scope: !5814)
!5823 = !DILocation(line: 1496, column: 17, scope: !5814)
!5824 = !DILocation(line: 1498, column: 5, scope: !5814)
!5825 = !DILocation(line: 1501, column: 23, scope: !5814)
!5826 = !DILocation(line: 1500, column: 17, scope: !5814)
!5827 = !DILocation(line: 1502, column: 5, scope: !5814)
!5828 = !DILocation(line: 1513, column: 23, scope: !5814)
!5829 = !DILocation(line: 1513, column: 6, scope: !5814)
!5830 = !DILocation(line: 1512, column: 17, scope: !5814)
!5831 = !DILocation(line: 1514, column: 5, scope: !5814)
!5832 = !DILocation(line: 0, scope: !5814)
!5833 = !DILocation(line: 1516, column: 8, scope: !5811)
!5834 = !DILocation(line: 1517, column: 19, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5836, file: !2666, line: 1516, column: 33)
!5836 = distinct !DILexicalBlock(scope: !5811, file: !2666, line: 1516, column: 8)
!5837 = !DILocation(line: 1517, column: 17, scope: !5835)
!5838 = !DILocation(line: 1518, column: 4, scope: !5835)
!5839 = !DILocation(line: 1519, column: 19, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5841, file: !2666, line: 1518, column: 39)
!5841 = distinct !DILexicalBlock(scope: !5836, file: !2666, line: 1518, column: 15)
!5842 = !DILocation(line: 1519, column: 17, scope: !5840)
!5843 = !DILocation(line: 1520, column: 4, scope: !5840)
!5844 = !DILocation(line: 1522, column: 4, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5846, file: !2666, line: 1521, column: 47)
!5846 = distinct !DILexicalBlock(scope: !5812, file: !2666, line: 1521, column: 14)
!5847 = !DILocation(line: 1527, column: 19, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5845, file: !2666, line: 1522, column: 24)
!5849 = !DILocation(line: 1527, column: 17, scope: !5848)
!5850 = !DILocation(line: 1528, column: 5, scope: !5848)
!5851 = !DILocation(line: 0, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5848, file: !2666, line: 1530, column: 9)
!5853 = !DILocation(line: 1540, column: 23, scope: !5848)
!5854 = !DILocation(line: 1539, column: 17, scope: !5848)
!5855 = !DILocation(line: 1542, column: 5, scope: !5848)
!5856 = !DILocation(line: 1545, column: 23, scope: !5848)
!5857 = !DILocation(line: 1544, column: 17, scope: !5848)
!5858 = !DILocation(line: 1547, column: 5, scope: !5848)
!5859 = !DILocation(line: 1551, column: 23, scope: !5848)
!5860 = !DILocation(line: 1551, column: 6, scope: !5848)
!5861 = !DILocation(line: 1550, column: 17, scope: !5848)
!5862 = !DILocation(line: 1552, column: 5, scope: !5848)
!5863 = !DILocation(line: 0, scope: !5848)
!5864 = !DILocation(line: 1554, column: 8, scope: !5845)
!5865 = !DILocation(line: 1555, column: 19, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5867, file: !2666, line: 1554, column: 33)
!5867 = distinct !DILexicalBlock(scope: !5845, file: !2666, line: 1554, column: 8)
!5868 = !DILocation(line: 1555, column: 17, scope: !5866)
!5869 = !DILocation(line: 1556, column: 4, scope: !5866)
!5870 = !DILocation(line: 1557, column: 19, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5872, file: !2666, line: 1556, column: 39)
!5872 = distinct !DILexicalBlock(scope: !5867, file: !2666, line: 1556, column: 15)
!5873 = !DILocation(line: 1557, column: 17, scope: !5871)
!5874 = !DILocation(line: 1558, column: 4, scope: !5871)
!5875 = !DILocation(line: 0, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5877, file: !2666, line: 1560, column: 8)
!5877 = distinct !DILexicalBlock(scope: !5878, file: !2666, line: 1559, column: 45)
!5878 = distinct !DILexicalBlock(scope: !5846, file: !2666, line: 1559, column: 14)
!5879 = !DILocation(line: 1566, column: 17, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5881, file: !2666, line: 1565, column: 46)
!5881 = distinct !DILexicalBlock(scope: !5878, file: !2666, line: 1565, column: 14)
!5882 = !DILocation(line: 1566, column: 15, scope: !5880)
!5883 = !DILocation(line: 1567, column: 3, scope: !5880)
!5884 = !DILocation(line: 1574, column: 21, scope: !5713)
!5885 = !DILocation(line: 1575, column: 4, scope: !5711)
!5886 = !DILocation(line: 0, scope: !5711)
!5887 = !DILocation(line: 1575, column: 4, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5711, file: !2666, line: 1575, column: 4)
!5889 = !DILocation(line: 1582, column: 17, scope: !5649)
!5890 = !DILocation(line: 1582, column: 3, scope: !5649)
!5891 = !DILocation(line: 1584, column: 4, scope: !5715)
!5892 = !DILocation(line: 0, scope: !5715)
!5893 = !DILocation(line: 1584, column: 4, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5715, file: !2666, line: 1584, column: 4)
!5895 = !DILocation(line: 1587, column: 31, scope: !5718)
!5896 = !DILocation(line: 1591, column: 18, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5718, file: !2666, line: 1591, column: 8)
!5898 = !DILocation(line: 1591, column: 8, scope: !5718)
!5899 = !DILocation(line: 1592, column: 11, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5897, file: !2666, line: 1591, column: 24)
!5901 = !DILocation(line: 0, scope: !5718)
!5902 = !DILocation(line: 1593, column: 4, scope: !5900)
!5903 = !DILocation(line: 1594, column: 11, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5897, file: !2666, line: 1593, column: 11)
!5905 = !DILocation(line: 1604, column: 51, scope: !5716)
!5906 = !DILocation(line: 1604, column: 13, scope: !5716)
!5907 = !DILocation(line: 1604, column: 11, scope: !5716)
!5908 = !DILocation(line: 1606, column: 4, scope: !5716)
!5909 = !DILocation(line: 1609, column: 14, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5716, file: !2666, line: 1609, column: 8)
!5911 = !DILocation(line: 1609, column: 8, scope: !5716)
!5912 = !DILocation(line: 1619, column: 18, scope: !5716)
!5913 = !DILocation(line: 1620, column: 13, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5716, file: !2666, line: 1620, column: 8)
!5915 = !DILocation(line: 1620, column: 8, scope: !5716)
!5916 = !DILocation(line: 1622, column: 36, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5914, file: !2666, line: 1620, column: 18)
!5918 = !DILocation(line: 1622, column: 17, scope: !5917)
!5919 = !DILocation(line: 1623, column: 4, scope: !5917)
!5920 = !DILocation(line: 1632, column: 29, scope: !5716)
!5921 = !DILocation(line: 1632, column: 10, scope: !5716)
!5922 = !DILocation(line: 1632, column: 4, scope: !5716)
!5923 = !DILocation(line: 1407, column: 8, scope: !5649)
!5924 = !DILocation(line: 0, scope: !5716)
!5925 = !DILocation(line: 1634, column: 3, scope: !5716)
!5926 = !DILocation(line: 1640, column: 18, scope: !5721)
!5927 = !DILocation(line: 1640, column: 8, scope: !5716)
!5928 = !DILocation(line: 1729, column: 13, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1729, column: 7)
!5930 = !DILocation(line: 1641, column: 22, scope: !5720)
!5931 = !DILocation(line: 0, scope: !5720)
!5932 = !DILocation(line: 1646, column: 21, scope: !5720)
!5933 = !DILocation(line: 1649, column: 13, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5720, file: !2666, line: 1649, column: 9)
!5935 = !DILocation(line: 1649, column: 9, scope: !5720)
!5936 = !DILocation(line: 1650, column: 35, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5934, file: !2666, line: 1649, column: 34)
!5938 = !DILocation(line: 1650, column: 23, scope: !5937)
!5939 = !DILocation(line: 1651, column: 5, scope: !5937)
!5940 = !DILocation(line: 1660, column: 15, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5716, file: !2666, line: 1660, column: 8)
!5942 = !DILocation(line: 1660, column: 19, scope: !5941)
!5943 = !DILocation(line: 1660, column: 8, scope: !5716)
!5944 = !DILocation(line: 1661, column: 23, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5941, file: !2666, line: 1660, column: 28)
!5946 = !DILocation(line: 1661, column: 11, scope: !5945)
!5947 = !DILocation(line: 1665, column: 22, scope: !5945)
!5948 = !DILocation(line: 1666, column: 21, scope: !5945)
!5949 = !DILocation(line: 1668, column: 5, scope: !5945)
!5950 = !DILocation(line: 1677, column: 30, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5952, file: !2666, line: 1676, column: 49)
!5952 = distinct !DILexicalBlock(scope: !5716, file: !2666, line: 1676, column: 8)
!5953 = !DILocation(line: 1677, column: 5, scope: !5951)
!5954 = !DILocation(line: 1680, column: 4, scope: !5716)
!5955 = !DILocation(line: 0, scope: !5897)
!5956 = !DILocation(line: 1597, column: 14, scope: !5718)
!5957 = !DILocation(line: 1699, column: 11, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1699, column: 7)
!5959 = !DILocation(line: 1699, column: 7, scope: !5649)
!5960 = !DILocation(line: 1725, column: 7, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1725, column: 7)
!5962 = !DILocation(line: 1725, column: 12, scope: !5961)
!5963 = !DILocation(line: 1747, column: 13, scope: !5728)
!5964 = !DILocation(line: 1747, column: 7, scope: !5649)
!5965 = !DILocation(line: 1722, column: 24, scope: !5649)
!5966 = !DILocation(line: 1725, column: 7, scope: !5649)
!5967 = !DILocation(line: 1729, column: 7, scope: !5649)
!5968 = !DILocation(line: 1736, column: 13, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5649, file: !2666, line: 1736, column: 7)
!5970 = !DILocation(line: 1735, column: 19, scope: !5649)
!5971 = !DILocation(line: 1736, column: 7, scope: !5649)
!5972 = !DILocation(line: 1748, column: 10, scope: !5727)
!5973 = !DILocation(line: 1750, column: 15, scope: !5726)
!5974 = !DILocation(line: 1750, column: 8, scope: !5727)
!5975 = !DILocation(line: 0, scope: !5725)
!5976 = !DILocation(line: 1756, column: 15, scope: !5734)
!5977 = !DILocation(line: 1756, column: 9, scope: !5725)
!5978 = !DILocation(line: 1758, column: 7, scope: !5730)
!5979 = !DILocation(line: 0, scope: !5730)
!5980 = !DILocation(line: 1758, column: 7, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5730, file: !2666, line: 1758, column: 7)
!5982 = !DILocation(line: 1764, column: 5, scope: !5725)
!5983 = !DILocation(line: 0, scope: !5727)
!5984 = !DILocation(line: 1764, column: 20, scope: !5725)
!5985 = !DILocation(line: 1764, column: 17, scope: !5725)
!5986 = !DILocation(line: 1765, column: 6, scope: !5736)
!5987 = !DILocation(line: 0, scope: !5736)
!5988 = !DILocation(line: 1765, column: 6, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5736, file: !2666, line: 1765, column: 6)
!5990 = distinct !{!5990, !5982, !5991}
!5991 = !DILocation(line: 1766, column: 5, scope: !5725)
!5992 = !DILocation(line: 1773, column: 12, scope: !5741)
!5993 = !DILocation(line: 1773, column: 7, scope: !5649)
!5994 = !DILocation(line: 1773, column: 7, scope: !5741)
!5995 = !DILocation(line: 1774, column: 4, scope: !5739)
!5996 = !DILocation(line: 0, scope: !5739)
!5997 = !DILocation(line: 1774, column: 4, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5739, file: !2666, line: 1774, column: 4)
!5999 = !DILocation(line: 1818, column: 8, scope: !5745)
!6000 = !DILocation(line: 1818, column: 27, scope: !5745)
!6001 = !DILocation(line: 1818, column: 25, scope: !5745)
!6002 = !DILocation(line: 1818, column: 8, scope: !5746)
!6003 = !DILocation(line: 1819, column: 5, scope: !5743)
!6004 = !DILocation(line: 0, scope: !5743)
!6005 = !DILocation(line: 1819, column: 5, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5743, file: !2666, line: 1819, column: 5)
!6007 = !DILocation(line: 1822, column: 14, scope: !5751)
!6008 = !DILocation(line: 1822, column: 8, scope: !5746)
!6009 = !DILocation(line: 1823, column: 5, scope: !5749)
!6010 = !DILocation(line: 0, scope: !5749)
!6011 = !DILocation(line: 1823, column: 5, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5749, file: !2666, line: 1823, column: 5)
!6013 = !DILocation(line: 1826, column: 20, scope: !5746)
!6014 = !DILocation(line: 1827, column: 4, scope: !5746)
!6015 = !DILocation(line: 0, scope: !5746)
!6016 = !DILocation(line: 1827, column: 21, scope: !5746)
!6017 = !DILocation(line: 1827, column: 18, scope: !5746)
!6018 = !DILocation(line: 1828, column: 5, scope: !5753)
!6019 = !DILocation(line: 0, scope: !5753)
!6020 = !DILocation(line: 1828, column: 5, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5753, file: !2666, line: 1828, column: 5)
!6022 = distinct !{!6022, !6014, !6023}
!6023 = !DILocation(line: 1829, column: 4, scope: !5746)
!6024 = !DILocation(line: 1831, column: 4, scope: !5756)
!6025 = !DILocation(line: 0, scope: !5756)
!6026 = !DILocation(line: 1831, column: 4, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !5756, file: !2666, line: 1831, column: 4)
!6028 = !DILocation(line: 1835, column: 16, scope: !5649)
!6029 = !DILocation(line: 1835, column: 3, scope: !5649)
!6030 = !DILocation(line: 1836, column: 4, scope: !5758)
!6031 = !DILocation(line: 0, scope: !5758)
!6032 = !DILocation(line: 1836, column: 4, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !5758, file: !2666, line: 1836, column: 4)
!6034 = !DILocation(line: 1837, column: 4, scope: !5759)
!6035 = distinct !{!6035, !6029, !6036}
!6036 = !DILocation(line: 1838, column: 3, scope: !5649)
!6037 = !DILocation(line: 1844, column: 1, scope: !5622)
!6038 = distinct !DISubprogram(name: "extract_conversion", scope: !2666, file: !2666, line: 642, type: !6039, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6041)
!6039 = !DISubroutineType(types: !6040)
!6040 = !{!121, !5695, !121}
!6041 = !{!6042, !6043}
!6042 = !DILocalVariable(name: "conv", arg: 1, scope: !6038, file: !2666, line: 642, type: !5695)
!6043 = !DILocalVariable(name: "sp", arg: 2, scope: !6038, file: !2666, line: 643, type: !121)
!6044 = !DILocation(line: 0, scope: !6038)
!6045 = !DILocation(line: 645, column: 10, scope: !6038)
!6046 = !DILocation(line: 653, column: 2, scope: !6038)
!6047 = !DILocation(line: 654, column: 6, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6038, file: !2666, line: 654, column: 6)
!6049 = !DILocation(line: 654, column: 10, scope: !6048)
!6050 = !DILocation(line: 654, column: 6, scope: !6038)
!6051 = !DILocation(line: 655, column: 24, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6048, file: !2666, line: 654, column: 18)
!6053 = !DILocation(line: 655, column: 19, scope: !6052)
!6054 = !DILocation(line: 656, column: 3, scope: !6052)
!6055 = !DILocation(line: 659, column: 7, scope: !6038)
!6056 = !DILocation(line: 660, column: 7, scope: !6038)
!6057 = !DILocation(line: 661, column: 7, scope: !6038)
!6058 = !DILocation(line: 662, column: 7, scope: !6038)
!6059 = !DILocation(line: 663, column: 7, scope: !6038)
!6060 = !DILocation(line: 665, column: 2, scope: !6038)
!6061 = !DILocation(line: 666, column: 1, scope: !6038)
!6062 = distinct !DISubprogram(name: "outs", scope: !2666, file: !2666, line: 1319, type: !6063, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6065)
!6063 = !DISubroutineType(types: !6064)
!6064 = !{!107, !4079, !106, !121, !121}
!6065 = !{!6066, !6067, !6068, !6069, !6070, !6071}
!6066 = !DILocalVariable(name: "out", arg: 1, scope: !6062, file: !2666, line: 1319, type: !4079)
!6067 = !DILocalVariable(name: "ctx", arg: 2, scope: !6062, file: !2666, line: 1320, type: !106)
!6068 = !DILocalVariable(name: "sp", arg: 3, scope: !6062, file: !2666, line: 1321, type: !121)
!6069 = !DILocalVariable(name: "ep", arg: 4, scope: !6062, file: !2666, line: 1322, type: !121)
!6070 = !DILocalVariable(name: "count", scope: !6062, file: !2666, line: 1324, type: !137)
!6071 = !DILocalVariable(name: "rc", scope: !6072, file: !2666, line: 1327, type: !107)
!6072 = distinct !DILexicalBlock(scope: !6062, file: !2666, line: 1326, column: 45)
!6073 = !DILocation(line: 0, scope: !6062)
!6074 = !DILocation(line: 1326, column: 2, scope: !6062)
!6075 = !DILocation(line: 1324, column: 9, scope: !6062)
!6076 = !DILocation(line: 1326, column: 13, scope: !6062)
!6077 = !DILocation(line: 1326, column: 19, scope: !6062)
!6078 = !DILocation(line: 1327, column: 21, scope: !6072)
!6079 = !DILocation(line: 1326, column: 36, scope: !6062)
!6080 = !DILocation(line: 1326, column: 39, scope: !6062)
!6081 = !DILocation(line: 1327, column: 24, scope: !6072)
!6082 = !DILocation(line: 1327, column: 16, scope: !6072)
!6083 = !DILocation(line: 1327, column: 12, scope: !6072)
!6084 = !DILocation(line: 0, scope: !6072)
!6085 = !DILocation(line: 1329, column: 10, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6072, file: !2666, line: 1329, column: 7)
!6087 = !DILocation(line: 1329, column: 7, scope: !6072)
!6088 = distinct !{!6088, !6074, !6089}
!6089 = !DILocation(line: 1333, column: 2, scope: !6062)
!6090 = !DILocation(line: 1336, column: 1, scope: !6062)
!6091 = distinct !DISubprogram(name: "encode_uint", scope: !2666, file: !2666, line: 788, type: !6092, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6094)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{!283, !2688, !5695, !283, !121}
!6094 = !{!6095, !6096, !6097, !6098, !6099, !6100, !6102, !6103}
!6095 = !DILocalVariable(name: "value", arg: 1, scope: !6091, file: !2666, line: 788, type: !2688)
!6096 = !DILocalVariable(name: "conv", arg: 2, scope: !6091, file: !2666, line: 789, type: !5695)
!6097 = !DILocalVariable(name: "bps", arg: 3, scope: !6091, file: !2666, line: 790, type: !283)
!6098 = !DILocalVariable(name: "bpe", arg: 4, scope: !6091, file: !2666, line: 791, type: !121)
!6099 = !DILocalVariable(name: "upcase", scope: !6091, file: !2666, line: 793, type: !136)
!6100 = !DILocalVariable(name: "radix", scope: !6091, file: !2666, line: 794, type: !6101)
!6101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6102 = !DILocalVariable(name: "bp", scope: !6091, file: !2666, line: 795, type: !283)
!6103 = !DILocalVariable(name: "lsv", scope: !6104, file: !2666, line: 798, type: !32)
!6104 = distinct !DILexicalBlock(scope: !6091, file: !2666, line: 797, column: 5)
!6105 = !DILocation(line: 0, scope: !6091)
!6106 = !DILocation(line: 793, column: 35, scope: !6091)
!6107 = !DILocation(line: 793, column: 24, scope: !6091)
!6108 = !DILocation(line: 793, column: 16, scope: !6091)
!6109 = !DILocation(line: 794, column: 29, scope: !6091)
!6110 = !DILocation(line: 795, column: 24, scope: !6091)
!6111 = !DILocation(line: 795, column: 17, scope: !6091)
!6112 = !DILocation(line: 797, column: 2, scope: !6091)
!6113 = !DILocation(line: 802, column: 9, scope: !6104)
!6114 = !DILocation(line: 798, column: 22, scope: !6104)
!6115 = !DILocation(line: 0, scope: !6104)
!6116 = !DILocation(line: 800, column: 16, scope: !6104)
!6117 = !DILocation(line: 800, column: 11, scope: !6104)
!6118 = !DILocation(line: 800, column: 4, scope: !6104)
!6119 = !DILocation(line: 800, column: 9, scope: !6104)
!6120 = !DILocation(line: 803, column: 18, scope: !6091)
!6121 = !DILocation(line: 803, column: 24, scope: !6091)
!6122 = !DILocation(line: 803, column: 2, scope: !6104)
!6123 = distinct !{!6123, !6112, !6124}
!6124 = !DILocation(line: 803, column: 37, scope: !6091)
!6125 = !DILocation(line: 808, column: 12, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6091, file: !2666, line: 808, column: 6)
!6127 = !DILocation(line: 808, column: 6, scope: !6091)
!6128 = !DILocation(line: 809, column: 7, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6126, file: !2666, line: 808, column: 23)
!6130 = !DILocation(line: 813, column: 3, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !2666, line: 811, column: 27)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !2666, line: 811, column: 14)
!6133 = distinct !DILexicalBlock(scope: !6129, file: !2666, line: 809, column: 7)
!6134 = !DILocation(line: 0, scope: !6133)
!6135 = !DILocation(line: 818, column: 2, scope: !6091)
!6136 = distinct !DISubprogram(name: "store_count", scope: !2666, file: !2666, line: 1280, type: !6137, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6141)
!6137 = !DISubroutineType(types: !6138)
!6138 = !{null, !6139, !106, !107}
!6139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6140, size: 32)
!6140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5662)
!6141 = !{!6142, !6143, !6144}
!6142 = !DILocalVariable(name: "conv", arg: 1, scope: !6136, file: !2666, line: 1280, type: !6139)
!6143 = !DILocalVariable(name: "dp", arg: 2, scope: !6136, file: !2666, line: 1281, type: !106)
!6144 = !DILocalVariable(name: "count", arg: 3, scope: !6136, file: !2666, line: 1282, type: !107)
!6145 = !DILocation(line: 0, scope: !6136)
!6146 = !DILocation(line: 1284, column: 38, scope: !6136)
!6147 = !DILocation(line: 1284, column: 2, scope: !6136)
!6148 = !DILocation(line: 1286, column: 4, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6136, file: !2666, line: 1284, column: 50)
!6150 = !DILocation(line: 1286, column: 14, scope: !6149)
!6151 = !DILocation(line: 1287, column: 3, scope: !6149)
!6152 = !DILocation(line: 1289, column: 24, scope: !6149)
!6153 = !DILocation(line: 1289, column: 22, scope: !6149)
!6154 = !DILocation(line: 1290, column: 3, scope: !6149)
!6155 = !DILocation(line: 1292, column: 18, scope: !6149)
!6156 = !DILocation(line: 1292, column: 4, scope: !6149)
!6157 = !DILocation(line: 1292, column: 16, scope: !6149)
!6158 = !DILocation(line: 1293, column: 3, scope: !6149)
!6159 = !DILocation(line: 1295, column: 4, scope: !6149)
!6160 = !DILocation(line: 1295, column: 15, scope: !6149)
!6161 = !DILocation(line: 1296, column: 3, scope: !6149)
!6162 = !DILocation(line: 1298, column: 22, scope: !6149)
!6163 = !DILocation(line: 1298, column: 4, scope: !6149)
!6164 = !DILocation(line: 1298, column: 20, scope: !6149)
!6165 = !DILocation(line: 1299, column: 3, scope: !6149)
!6166 = !DILocation(line: 1301, column: 21, scope: !6149)
!6167 = !DILocation(line: 1301, column: 4, scope: !6149)
!6168 = !DILocation(line: 1301, column: 19, scope: !6149)
!6169 = !DILocation(line: 1302, column: 3, scope: !6149)
!6170 = !DILocation(line: 1304, column: 4, scope: !6149)
!6171 = !DILocation(line: 1304, column: 17, scope: !6149)
!6172 = !DILocation(line: 1305, column: 3, scope: !6149)
!6173 = !DILocation(line: 1307, column: 4, scope: !6149)
!6174 = !DILocation(line: 1307, column: 20, scope: !6149)
!6175 = !DILocation(line: 1308, column: 3, scope: !6149)
!6176 = !DILocation(line: 1316, column: 1, scope: !6136)
!6177 = distinct !DISubprogram(name: "isupper", scope: !6178, file: !6178, line: 16, type: !418, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6179)
!6178 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6179 = !{!6180}
!6180 = !DILocalVariable(name: "a", arg: 1, scope: !6177, file: !6178, line: 16, type: !107)
!6181 = !DILocation(line: 0, scope: !6177)
!6182 = !DILocation(line: 18, column: 29, scope: !6177)
!6183 = !DILocation(line: 18, column: 45, scope: !6177)
!6184 = !DILocation(line: 18, column: 2, scope: !6177)
!6185 = distinct !DISubprogram(name: "conversion_radix", scope: !2666, file: !2666, line: 761, type: !6186, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6188)
!6186 = !DISubroutineType(types: !6187)
!6187 = !{!137, !123}
!6188 = !{!6189}
!6189 = !DILocalVariable(name: "specifier", arg: 1, scope: !6185, file: !2666, line: 761, type: !123)
!6190 = !DILocation(line: 0, scope: !6185)
!6191 = !DILocation(line: 763, column: 2, scope: !6185)
!6192 = !DILocation(line: 770, column: 3, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6185, file: !2666, line: 763, column: 21)
!6194 = !DILocation(line: 774, column: 3, scope: !6193)
!6195 = !DILocation(line: 0, scope: !6193)
!6196 = !DILocation(line: 776, column: 1, scope: !6185)
!6197 = distinct !DISubprogram(name: "extract_flags", scope: !2666, file: !2666, line: 339, type: !6039, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6198)
!6198 = !{!6199, !6200, !6201}
!6199 = !DILocalVariable(name: "conv", arg: 1, scope: !6197, file: !2666, line: 339, type: !5695)
!6200 = !DILocalVariable(name: "sp", arg: 2, scope: !6197, file: !2666, line: 340, type: !121)
!6201 = !DILocalVariable(name: "loop", scope: !6197, file: !2666, line: 342, type: !136)
!6202 = !DILocation(line: 0, scope: !6197)
!6203 = !DILocation(line: 344, column: 2, scope: !6197)
!6204 = !DILocation(line: 345, column: 11, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6197, file: !2666, line: 344, column: 5)
!6206 = !DILocation(line: 345, column: 3, scope: !6205)
!6207 = !DILocation(line: 351, column: 4, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6205, file: !2666, line: 345, column: 16)
!6209 = !DILocation(line: 354, column: 4, scope: !6208)
!6210 = !DILocation(line: 357, column: 4, scope: !6208)
!6211 = !DILocation(line: 360, column: 4, scope: !6208)
!6212 = !DILocation(line: 0, scope: !6208)
!6213 = !DILocation(line: 370, column: 12, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6197, file: !2666, line: 370, column: 6)
!6215 = !DILocation(line: 370, column: 22, scope: !6214)
!6216 = !DILocation(line: 371, column: 19, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6214, file: !2666, line: 370, column: 42)
!6218 = !DILocation(line: 372, column: 2, scope: !6217)
!6219 = !DILocation(line: 376, column: 2, scope: !6197)
!6220 = distinct !DISubprogram(name: "extract_width", scope: !2666, file: !2666, line: 388, type: !6039, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6221)
!6221 = !{!6222, !6223, !6224, !6225}
!6222 = !DILocalVariable(name: "conv", arg: 1, scope: !6220, file: !2666, line: 388, type: !5695)
!6223 = !DILocalVariable(name: "sp", arg: 2, scope: !6220, file: !2666, line: 389, type: !121)
!6224 = !DILocalVariable(name: "wp", scope: !6220, file: !2666, line: 398, type: !121)
!6225 = !DILocalVariable(name: "width", scope: !6220, file: !2666, line: 399, type: !137)
!6226 = !DILocation(line: 0, scope: !6220)
!6227 = !DILocation(line: 391, column: 8, scope: !6220)
!6228 = !DILocation(line: 391, column: 22, scope: !6220)
!6229 = !DILocation(line: 393, column: 6, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6220, file: !2666, line: 393, column: 6)
!6231 = !DILocation(line: 393, column: 10, scope: !6230)
!6232 = !DILocation(line: 393, column: 6, scope: !6220)
!6233 = !DILocation(line: 394, column: 20, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6230, file: !2666, line: 393, column: 18)
!6235 = !DILocation(line: 395, column: 10, scope: !6234)
!6236 = !DILocation(line: 395, column: 3, scope: !6234)
!6237 = !DILocation(line: 399, column: 17, scope: !6220)
!6238 = !DILocation(line: 401, column: 6, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6220, file: !2666, line: 401, column: 6)
!6240 = !DILocation(line: 401, column: 9, scope: !6239)
!6241 = !DILocation(line: 401, column: 6, scope: !6220)
!6242 = !DILocation(line: 402, column: 23, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6239, file: !2666, line: 401, column: 16)
!6244 = !DILocation(line: 403, column: 9, scope: !6243)
!6245 = !DILocation(line: 403, column: 21, scope: !6243)
!6246 = !DILocation(line: 405, column: 11, scope: !6243)
!6247 = !DILocation(line: 404, column: 21, scope: !6243)
!6248 = !DILocation(line: 406, column: 2, scope: !6243)
!6249 = !DILocation(line: 409, column: 1, scope: !6220)
!6250 = distinct !DISubprogram(name: "extract_prec", scope: !2666, file: !2666, line: 420, type: !6039, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6251)
!6251 = !{!6252, !6253, !6254}
!6252 = !DILocalVariable(name: "conv", arg: 1, scope: !6250, file: !2666, line: 420, type: !5695)
!6253 = !DILocalVariable(name: "sp", arg: 2, scope: !6250, file: !2666, line: 421, type: !121)
!6254 = !DILocalVariable(name: "prec", scope: !6250, file: !2666, line: 435, type: !137)
!6255 = !DILocation(line: 0, scope: !6250)
!6256 = !DILocation(line: 423, column: 24, scope: !6250)
!6257 = !DILocation(line: 423, column: 28, scope: !6250)
!6258 = !DILocation(line: 423, column: 8, scope: !6250)
!6259 = !DILocation(line: 423, column: 21, scope: !6250)
!6260 = !DILocation(line: 425, column: 6, scope: !6250)
!6261 = !DILocation(line: 428, column: 2, scope: !6250)
!6262 = !DILocation(line: 430, column: 6, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6250, file: !2666, line: 430, column: 6)
!6264 = !DILocation(line: 430, column: 10, scope: !6263)
!6265 = !DILocation(line: 430, column: 6, scope: !6250)
!6266 = !DILocation(line: 431, column: 19, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6263, file: !2666, line: 430, column: 18)
!6268 = !DILocation(line: 432, column: 10, scope: !6267)
!6269 = !DILocation(line: 432, column: 3, scope: !6267)
!6270 = !DILocation(line: 435, column: 16, scope: !6250)
!6271 = !DILocation(line: 437, column: 8, scope: !6250)
!6272 = !DILocation(line: 437, column: 19, scope: !6250)
!6273 = !DILocation(line: 439, column: 10, scope: !6250)
!6274 = !DILocation(line: 438, column: 20, scope: !6250)
!6275 = !DILocation(line: 441, column: 9, scope: !6250)
!6276 = !DILocation(line: 442, column: 1, scope: !6250)
!6277 = distinct !DISubprogram(name: "extract_length", scope: !2666, file: !2666, line: 453, type: !6039, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6278)
!6278 = !{!6279, !6280}
!6279 = !DILocalVariable(name: "conv", arg: 1, scope: !6277, file: !2666, line: 453, type: !5695)
!6280 = !DILocalVariable(name: "sp", arg: 2, scope: !6277, file: !2666, line: 454, type: !121)
!6281 = !DILocation(line: 0, scope: !6277)
!6282 = !DILocation(line: 456, column: 10, scope: !6277)
!6283 = !DILocation(line: 456, column: 2, scope: !6277)
!6284 = !DILocation(line: 458, column: 8, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !2666, line: 458, column: 7)
!6286 = distinct !DILexicalBlock(scope: !6277, file: !2666, line: 456, column: 15)
!6287 = !DILocation(line: 458, column: 7, scope: !6285)
!6288 = !DILocation(line: 458, column: 13, scope: !6285)
!6289 = !DILocation(line: 0, scope: !6285)
!6290 = !DILocation(line: 458, column: 7, scope: !6286)
!6291 = !DILocation(line: 459, column: 21, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6285, file: !2666, line: 458, column: 21)
!6293 = !DILocation(line: 460, column: 4, scope: !6292)
!6294 = !DILocation(line: 461, column: 3, scope: !6292)
!6295 = !DILocation(line: 462, column: 21, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6285, file: !2666, line: 461, column: 10)
!6297 = !DILocation(line: 466, column: 8, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6286, file: !2666, line: 466, column: 7)
!6299 = !DILocation(line: 466, column: 7, scope: !6298)
!6300 = !DILocation(line: 466, column: 13, scope: !6298)
!6301 = !DILocation(line: 0, scope: !6298)
!6302 = !DILocation(line: 466, column: 7, scope: !6286)
!6303 = !DILocation(line: 467, column: 21, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6298, file: !2666, line: 466, column: 21)
!6305 = !DILocation(line: 468, column: 4, scope: !6304)
!6306 = !DILocation(line: 469, column: 3, scope: !6304)
!6307 = !DILocation(line: 470, column: 21, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6298, file: !2666, line: 469, column: 10)
!6309 = !DILocation(line: 474, column: 9, scope: !6286)
!6310 = !DILocation(line: 474, column: 20, scope: !6286)
!6311 = !DILocation(line: 475, column: 3, scope: !6286)
!6312 = !DILocation(line: 476, column: 3, scope: !6286)
!6313 = !DILocation(line: 478, column: 9, scope: !6286)
!6314 = !DILocation(line: 478, column: 20, scope: !6286)
!6315 = !DILocation(line: 479, column: 3, scope: !6286)
!6316 = !DILocation(line: 480, column: 3, scope: !6286)
!6317 = !DILocation(line: 482, column: 9, scope: !6286)
!6318 = !DILocation(line: 482, column: 20, scope: !6286)
!6319 = !DILocation(line: 483, column: 3, scope: !6286)
!6320 = !DILocation(line: 484, column: 3, scope: !6286)
!6321 = !DILocation(line: 486, column: 9, scope: !6286)
!6322 = !DILocation(line: 486, column: 20, scope: !6286)
!6323 = !DILocation(line: 487, column: 3, scope: !6286)
!6324 = !DILocation(line: 492, column: 21, scope: !6286)
!6325 = !DILocation(line: 493, column: 3, scope: !6286)
!6326 = !DILocation(line: 495, column: 9, scope: !6286)
!6327 = !DILocation(line: 495, column: 20, scope: !6286)
!6328 = !DILocation(line: 496, column: 3, scope: !6286)
!6329 = !DILocation(line: 498, column: 2, scope: !6277)
!6330 = distinct !DISubprogram(name: "extract_specifier", scope: !2666, file: !2666, line: 513, type: !6039, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6331)
!6331 = !{!6332, !6333, !6334, !6335}
!6332 = !DILocalVariable(name: "conv", arg: 1, scope: !6330, file: !2666, line: 513, type: !5695)
!6333 = !DILocalVariable(name: "sp", arg: 2, scope: !6330, file: !2666, line: 514, type: !121)
!6334 = !DILocalVariable(name: "unsupported", scope: !6330, file: !2666, line: 516, type: !136)
!6335 = !DILabel(scope: !6336, name: "int_conv", file: !2666, line: 526)
!6336 = distinct !DILexicalBlock(scope: !6330, file: !2666, line: 520, column: 27)
!6337 = !DILocation(line: 0, scope: !6330)
!6338 = !DILocation(line: 518, column: 20, scope: !6330)
!6339 = !DILocation(line: 518, column: 8, scope: !6330)
!6340 = !DILocation(line: 518, column: 18, scope: !6330)
!6341 = !DILocation(line: 520, column: 2, scope: !6330)
!6342 = !DILocation(line: 525, column: 3, scope: !6336)
!6343 = !DILocation(line: 0, scope: !6336)
!6344 = !DILocation(line: 526, column: 1, scope: !6336)
!6345 = !DILocation(line: 528, column: 24, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6336, file: !2666, line: 528, column: 7)
!6347 = !DILocation(line: 528, column: 7, scope: !6336)
!6348 = !DILocation(line: 535, column: 23, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6336, file: !2666, line: 535, column: 7)
!6350 = !DILocation(line: 535, column: 7, scope: !6336)
!6351 = !DILocation(line: 536, column: 36, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6349, file: !2666, line: 535, column: 31)
!6353 = !DILocation(line: 537, column: 3, scope: !6352)
!6354 = !DILocation(line: 570, column: 9, scope: !6336)
!6355 = !DILocation(line: 570, column: 23, scope: !6336)
!6356 = !DILocation(line: 575, column: 4, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6358, file: !2666, line: 573, column: 48)
!6358 = distinct !DILexicalBlock(scope: !6336, file: !2666, line: 573, column: 7)
!6359 = !DILocation(line: 603, column: 9, scope: !6336)
!6360 = !DILocation(line: 603, column: 23, scope: !6336)
!6361 = !DILocation(line: 605, column: 24, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6336, file: !2666, line: 605, column: 7)
!6363 = !DILocation(line: 605, column: 7, scope: !6336)
!6364 = !DILocation(line: 612, column: 9, scope: !6336)
!6365 = !DILocation(line: 612, column: 23, scope: !6336)
!6366 = !DILocation(line: 619, column: 24, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6336, file: !2666, line: 619, column: 7)
!6368 = !DILocation(line: 619, column: 7, scope: !6336)
!6369 = !DILocation(line: 625, column: 9, scope: !6336)
!6370 = !DILocation(line: 625, column: 17, scope: !6336)
!6371 = !DILocation(line: 626, column: 3, scope: !6336)
!6372 = !DILocation(line: 629, column: 20, scope: !6330)
!6373 = !DILocation(line: 629, column: 8, scope: !6330)
!6374 = !DILocation(line: 518, column: 23, scope: !6330)
!6375 = !DILocation(line: 631, column: 2, scope: !6330)
!6376 = distinct !DISubprogram(name: "extract_decimal", scope: !2666, file: !2666, line: 318, type: !6377, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6379)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{!137, !395}
!6379 = !{!6380, !6381, !6382}
!6380 = !DILocalVariable(name: "str", arg: 1, scope: !6376, file: !2666, line: 318, type: !395)
!6381 = !DILocalVariable(name: "sp", scope: !6376, file: !2666, line: 320, type: !121)
!6382 = !DILocalVariable(name: "val", scope: !6376, file: !2666, line: 321, type: !137)
!6383 = !DILocation(line: 0, scope: !6376)
!6384 = !DILocation(line: 320, column: 19, scope: !6376)
!6385 = !DILocation(line: 323, column: 37, scope: !6376)
!6386 = !DILocation(line: 323, column: 17, scope: !6376)
!6387 = !DILocation(line: 323, column: 9, scope: !6376)
!6388 = !DILocation(line: 323, column: 2, scope: !6376)
!6389 = !DILocation(line: 324, column: 13, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6376, file: !2666, line: 323, column: 43)
!6391 = !DILocation(line: 324, column: 24, scope: !6390)
!6392 = !DILocation(line: 324, column: 19, scope: !6390)
!6393 = !DILocation(line: 324, column: 27, scope: !6390)
!6394 = distinct !{!6394, !6388, !6395}
!6395 = !DILocation(line: 325, column: 2, scope: !6376)
!6396 = !DILocation(line: 326, column: 7, scope: !6376)
!6397 = !DILocation(line: 327, column: 2, scope: !6376)
!6398 = distinct !DISubprogram(name: "isdigit", scope: !6178, file: !6178, line: 43, type: !418, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !6399)
!6399 = !{!6400}
!6400 = !DILocalVariable(name: "a", arg: 1, scope: !6398, file: !6178, line: 43, type: !107)
!6401 = !DILocation(line: 0, scope: !6398)
!6402 = !DILocation(line: 45, column: 29, scope: !6398)
!6403 = !DILocation(line: 45, column: 45, scope: !6398)
!6404 = !DILocation(line: 45, column: 2, scope: !6398)
!6405 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6406, file: !6406, line: 9, type: !337, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !256)
!6406 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!6407 = !DILocation(line: 11, column: 1, scope: !6405)
!6408 = !{i64 2147565006, i64 2147565049, i64 2147565089}
!6409 = !DILocation(line: 12, column: 1, scope: !6405)
!6410 = !{i64 2147569233, i64 2147569276, i64 2147569316}
!6411 = !DILocation(line: 13, column: 1, scope: !6405)
!6412 = !{i64 2147569442, i64 2147569485, i64 2147569525}
!6413 = !DILocation(line: 14, column: 1, scope: !6405)
!6414 = !{i64 2147569611, i64 2147569654, i64 2147569694}
!6415 = !DILocation(line: 15, column: 1, scope: !6405)
!6416 = !{i64 2147569774, i64 2147569817, i64 2147569857}
!6417 = !DILocation(line: 16, column: 1, scope: !6405)
!6418 = !{i64 2147569958, i64 2147570001, i64 2147570041}
!6419 = !DILocation(line: 17, column: 1, scope: !6405)
!6420 = !{i64 2147570137, i64 2147570180, i64 2147570220}
!6421 = !DILocation(line: 18, column: 1, scope: !6405)
!6422 = !{i64 2147570380, i64 2147570423, i64 2147570463}
!6423 = !DILocation(line: 19, column: 1, scope: !6405)
!6424 = !{i64 2147570615, i64 2147570658, i64 2147570698}
!6425 = !DILocation(line: 20, column: 1, scope: !6405)
!6426 = !{i64 2147570802, i64 2147570845, i64 2147570885}
!6427 = !DILocation(line: 21, column: 1, scope: !6405)
!6428 = !{i64 2147571018, i64 2147571061, i64 2147571101}
!6429 = !DILocation(line: 22, column: 1, scope: !6405)
!6430 = !{i64 2147571221, i64 2147571264, i64 2147571304}
!6431 = !DILocation(line: 23, column: 1, scope: !6405)
!6432 = !{i64 2147571424, i64 2147571467, i64 2147571507}
!6433 = !DILocation(line: 24, column: 1, scope: !6405)
!6434 = !{i64 2147571599, i64 2147571642, i64 2147571682}
!6435 = !DILocation(line: 25, column: 1, scope: !6405)
!6436 = !{i64 2147571807, i64 2147571850, i64 2147571890}
!6437 = !DILocation(line: 26, column: 1, scope: !6405)
!6438 = !{i64 2147572011, i64 2147572054, i64 2147572094}
!6439 = !DILocation(line: 27, column: 1, scope: !6405)
!6440 = !{i64 2147572204, i64 2147572247, i64 2147572287}
!6441 = !DILocation(line: 28, column: 1, scope: !6405)
!6442 = !{i64 2147572406, i64 2147572449, i64 2147572489}
!6443 = !DILocation(line: 29, column: 1, scope: !6405)
!6444 = !{i64 2147572605, i64 2147572648, i64 2147572688}
!6445 = !DILocation(line: 30, column: 1, scope: !6405)
!6446 = !{i64 2147572832, i64 2147572875, i64 2147572915}
!6447 = !DILocation(line: 31, column: 1, scope: !6405)
!6448 = !{i64 2147573034, i64 2147573077, i64 2147573117}
!6449 = !DILocation(line: 32, column: 1, scope: !6405)
!6450 = !{i64 2147573249, i64 2147573292, i64 2147573332}
!6451 = !DILocation(line: 33, column: 1, scope: !6405)
!6452 = !{i64 2147573421, i64 2147573464, i64 2147573504}
!6453 = !DILocation(line: 34, column: 1, scope: !6405)
!6454 = !{i64 2147573623, i64 2147573666, i64 2147573706}
!6455 = !DILocation(line: 35, column: 1, scope: !6405)
!6456 = !{i64 2147573849, i64 2147573892, i64 2147573932}
!6457 = !DILocation(line: 36, column: 1, scope: !6405)
!6458 = !{i64 2147574048, i64 2147574091, i64 2147574131}
!6459 = !DILocation(line: 37, column: 1, scope: !6405)
!6460 = !{i64 2147574223, i64 2147574266, i64 2147574306}
!6461 = !DILocation(line: 38, column: 1, scope: !6405)
!6462 = !{i64 2147574491, i64 2147574534, i64 2147574574}
!6463 = !DILocation(line: 39, column: 1, scope: !6405)
!6464 = !{i64 2147574744, i64 2147574787, i64 2147574827}
!6465 = !DILocation(line: 40, column: 1, scope: !6405)
!6466 = !{i64 2147574985, i64 2147575028, i64 2147575068}
!6467 = !DILocation(line: 41, column: 1, scope: !6405)
!6468 = !{i64 2147575220, i64 2147575263, i64 2147575303}
!6469 = !DILocation(line: 42, column: 1, scope: !6405)
!6470 = !{i64 2147575452, i64 2147575495, i64 2147575535}
!6471 = !DILocation(line: 43, column: 1, scope: !6405)
!6472 = !{i64 2147575678, i64 2147575721, i64 2147575761}
!6473 = !DILocation(line: 44, column: 1, scope: !6405)
!6474 = !{i64 2147575916, i64 2147575959, i64 2147575999}
!6475 = !DILocation(line: 45, column: 1, scope: !6405)
!6476 = !{i64 2147576142, i64 2147576185, i64 2147576225}
!6477 = !DILocation(line: 46, column: 1, scope: !6405)
!6478 = !{i64 2147576377, i64 2147576420, i64 2147576460}
!6479 = !DILocation(line: 47, column: 1, scope: !6405)
!6480 = !{i64 2147576612, i64 2147576655, i64 2147576695}
!6481 = !DILocation(line: 48, column: 1, scope: !6405)
!6482 = !{i64 2147576850, i64 2147576893, i64 2147576933}
!6483 = !DILocation(line: 49, column: 1, scope: !6405)
!6484 = !{i64 2147577124, i64 2147577167, i64 2147577207}
!6485 = !DILocation(line: 50, column: 1, scope: !6405)
!6486 = !{i64 2147577362, i64 2147577405, i64 2147577445}
!6487 = !DILocation(line: 51, column: 1, scope: !6405)
!6488 = !{i64 2147577615, i64 2147577658, i64 2147577698}
!6489 = !DILocation(line: 52, column: 1, scope: !6405)
!6490 = !{i64 2147577859, i64 2147577902, i64 2147577942}
!6491 = !DILocation(line: 53, column: 1, scope: !6405)
!6492 = !{i64 2147582170, i64 2147582213, i64 2147582253}
!6493 = !DILocation(line: 54, column: 1, scope: !6405)
!6494 = !{i64 2147582411, i64 2147582454, i64 2147582494}
!6495 = !DILocation(line: 55, column: 1, scope: !6405)
!6496 = !{i64 2147582658, i64 2147582701, i64 2147582741}
!6497 = !DILocation(line: 56, column: 1, scope: !6405)
!6498 = !{i64 2147582893, i64 2147582936, i64 2147582976}
!6499 = !DILocation(line: 57, column: 1, scope: !6405)
!6500 = !{i64 2147583128, i64 2147583171, i64 2147583211}
!6501 = !DILocation(line: 58, column: 1, scope: !6405)
!6502 = !{i64 2147583363, i64 2147583406, i64 2147583446}
!6503 = !DILocation(line: 59, column: 1, scope: !6405)
!6504 = !{i64 2147583601, i64 2147583644, i64 2147583684}
!6505 = !DILocation(line: 60, column: 1, scope: !6405)
!6506 = !{i64 2147583842, i64 2147583885, i64 2147583925}
!6507 = !DILocation(line: 61, column: 1, scope: !6405)
!6508 = !{i64 2147584122, i64 2147584165, i64 2147584205}
!6509 = !DILocation(line: 62, column: 1, scope: !6405)
!6510 = !{i64 2147584381, i64 2147584424, i64 2147584464}
!6511 = !DILocation(line: 63, column: 1, scope: !6405)
!6512 = !{i64 2147584619, i64 2147584662, i64 2147584702}
!6513 = !DILocation(line: 64, column: 1, scope: !6405)
!6514 = !{i64 2147584878, i64 2147584921, i64 2147584961}
!6515 = !DILocation(line: 65, column: 1, scope: !6405)
!6516 = !{i64 2147585107, i64 2147585150, i64 2147585190}
!6517 = !DILocation(line: 66, column: 1, scope: !6405)
!6518 = !{i64 2147585315, i64 2147585358, i64 2147585398}
!6519 = !DILocation(line: 67, column: 1, scope: !6405)
!6520 = !{i64 2147585526, i64 2147585569, i64 2147585609}
!6521 = !DILocation(line: 68, column: 1, scope: !6405)
!6522 = !{i64 2147585761, i64 2147585804, i64 2147585844}
!6523 = !DILocation(line: 69, column: 1, scope: !6405)
!6524 = !{i64 2147585990, i64 2147586033, i64 2147586073}
!6525 = !DILocation(line: 70, column: 1, scope: !6405)
!6526 = !{i64 2147586207, i64 2147586250, i64 2147586290}
!6527 = !DILocation(line: 71, column: 1, scope: !6405)
!6528 = !{i64 2147586436, i64 2147586479, i64 2147586519}
!6529 = !DILocation(line: 72, column: 1, scope: !6405)
!6530 = !{i64 2147586674, i64 2147586717, i64 2147586757}
!6531 = !DILocation(line: 73, column: 1, scope: !6405)
!6532 = !{i64 2147586906, i64 2147586949, i64 2147586989}
!6533 = !DILocation(line: 74, column: 1, scope: !6405)
!6534 = !{i64 2147587132, i64 2147587175, i64 2147587215}
!6535 = !DILocation(line: 75, column: 1, scope: !6405)
!6536 = !{i64 2147587349, i64 2147587392, i64 2147587432}
!6537 = !DILocation(line: 76, column: 1, scope: !6405)
!6538 = !{i64 2147587581, i64 2147587624, i64 2147587664}
!6539 = !DILocation(line: 77, column: 1, scope: !6405)
!6540 = !{i64 2147587807, i64 2147587850, i64 2147587890}
!6541 = !DILocation(line: 78, column: 1, scope: !6405)
!6542 = !{i64 2147588021, i64 2147588064, i64 2147588104}
!6543 = !DILocation(line: 79, column: 1, scope: !6405)
!6544 = !{i64 2147588241, i64 2147588284, i64 2147588324}
!6545 = !DILocation(line: 80, column: 1, scope: !6405)
!6546 = !{i64 2147588473, i64 2147588516, i64 2147588556}
!6547 = !DILocation(line: 81, column: 1, scope: !6405)
!6548 = !{i64 2147588681, i64 2147588724, i64 2147588764}
!6549 = !DILocation(line: 82, column: 1, scope: !6405)
!6550 = !{i64 2147588886, i64 2147588929, i64 2147588969}
!6551 = !DILocation(line: 83, column: 1, scope: !6405)
!6552 = !{i64 2147589103, i64 2147589146, i64 2147589186}
!6553 = !DILocation(line: 84, column: 1, scope: !6405)
!6554 = !{i64 2147589317, i64 2147589360, i64 2147589400}
!6555 = !DILocation(line: 85, column: 1, scope: !6405)
!6556 = !{i64 2147589543, i64 2147589586, i64 2147589626}
!6557 = !DILocation(line: 86, column: 1, scope: !6405)
!6558 = !{i64 2147589763, i64 2147589806, i64 2147589846}
!6559 = !DILocation(line: 87, column: 1, scope: !6405)
!6560 = !{i64 2147589968, i64 2147590011, i64 2147590051}
!6561 = !DILocation(line: 88, column: 1, scope: !6405)
!6562 = !{i64 2147594261, i64 2147594304, i64 2147594344}
!6563 = !DILocation(line: 89, column: 1, scope: !6405)
!6564 = !{i64 2147594496, i64 2147594539, i64 2147594579}
!6565 = !DILocation(line: 90, column: 1, scope: !6405)
!6566 = !{i64 2147594746, i64 2147594789, i64 2147594829}
!6567 = !DILocation(line: 91, column: 1, scope: !6405)
!6568 = !{i64 2147594996, i64 2147595039, i64 2147595079}
!6569 = !DILocation(line: 92, column: 1, scope: !6405)
!6570 = !{i64 2147595234, i64 2147595277, i64 2147595317}
!6571 = !DILocation(line: 93, column: 1, scope: !6405)
!6572 = !{i64 2147595445, i64 2147595488, i64 2147595528}
!6573 = !DILocation(line: 94, column: 1, scope: !6405)
!6574 = !{i64 2147595662, i64 2147595705, i64 2147595745}
!6575 = !DILocation(line: 95, column: 1, scope: !6405)
!6576 = !{i64 2147595858, i64 2147595901, i64 2147595941}
!6577 = !DILocation(line: 96, column: 1, scope: !6405)
!6578 = !{i64 2147596060, i64 2147596103, i64 2147596143}
!6579 = !DILocation(line: 97, column: 1, scope: !6405)
!6580 = !{i64 2147596253, i64 2147596296, i64 2147596336}
!6581 = !DILocation(line: 98, column: 1, scope: !6405)
!6582 = !{i64 2147596461, i64 2147596504, i64 2147596544}
!6583 = !DILocation(line: 99, column: 1, scope: !6405)
!6584 = !{i64 2147596657, i64 2147596700, i64 2147596740}
!6585 = !DILocation(line: 100, column: 1, scope: !6405)
!6586 = !{i64 2147596907, i64 2147596950, i64 2147596990}
!6587 = !DILocation(line: 101, column: 1, scope: !6405)
!6588 = !{i64 2147597118, i64 2147597161, i64 2147597201}
!6589 = !DILocation(line: 102, column: 1, scope: !6405)
!6590 = !{i64 2147597317, i64 2147597360, i64 2147597400}
!6591 = !DILocation(line: 103, column: 1, scope: !6405)
!6592 = !{i64 2147597492, i64 2147597535, i64 2147597575}
!6593 = !DILocation(line: 104, column: 1, scope: !6405)
!6594 = !{i64 2147597676, i64 2147597719, i64 2147597759}
!6595 = !DILocation(line: 105, column: 1, scope: !6405)
!6596 = !{i64 2147597878, i64 2147597921, i64 2147597961}
!6597 = !DILocation(line: 106, column: 1, scope: !6405)
!6598 = !{i64 2147598059, i64 2147598102, i64 2147598142}
!6599 = !DILocation(line: 107, column: 1, scope: !6405)
!6600 = !{i64 2147598258, i64 2147598301, i64 2147598341}
!6601 = !DILocation(line: 108, column: 1, scope: !6405)
!6602 = !{i64 2147598463, i64 2147598506, i64 2147598546}
!6603 = !DILocation(line: 109, column: 1, scope: !6405)
!6604 = !{i64 2147598656, i64 2147598699, i64 2147598739}
!6605 = !DILocation(line: 110, column: 1, scope: !6405)
!6606 = !{i64 2147598822, i64 2147598865, i64 2147598905}
!6607 = !DILocation(line: 111, column: 1, scope: !6405)
!6608 = !{i64 2147599006, i64 2147599049, i64 2147599089}
!6609 = !DILocation(line: 112, column: 1, scope: !6405)
!6610 = !{i64 2147599196, i64 2147599239, i64 2147599279}
!6611 = !DILocation(line: 113, column: 1, scope: !6405)
!6612 = !{i64 2147599380, i64 2147599423, i64 2147599463}
!6613 = !DILocation(line: 114, column: 1, scope: !6405)
!6614 = !{i64 2147599594, i64 2147599637, i64 2147599677}
!6615 = !DILocation(line: 115, column: 1, scope: !6405)
!6616 = !{i64 2147599805, i64 2147599848, i64 2147599888}
!6617 = !DILocation(line: 116, column: 1, scope: !6405)
!6618 = !{i64 2147600028, i64 2147600071, i64 2147600111}
!6619 = !DILocation(line: 117, column: 1, scope: !6405)
!6620 = !{i64 2147600212, i64 2147600255, i64 2147600295}
!6621 = !DILocation(line: 118, column: 1, scope: !6405)
!6622 = !{i64 2147600426, i64 2147600469, i64 2147600509}
!6623 = !DILocation(line: 119, column: 1, scope: !6405)
!6624 = !{i64 2147600592, i64 2147600635, i64 2147600675}
!6625 = !DILocation(line: 120, column: 1, scope: !6405)
!6626 = !{i64 2147600773, i64 2147600816, i64 2147600856}
!6627 = !DILocation(line: 121, column: 1, scope: !6405)
!6628 = !{i64 2147600966, i64 2147601009, i64 2147601049}
!6629 = !DILocation(line: 122, column: 1, scope: !6405)
!6630 = !{i64 2147601192, i64 2147601235, i64 2147601275}
!6631 = !DILocation(line: 123, column: 1, scope: !6405)
!6632 = !{i64 2147601406, i64 2147601449, i64 2147601489}
!6633 = !DILocation(line: 124, column: 1, scope: !6405)
!6634 = !{i64 2147601632, i64 2147601675, i64 2147601715}
!6635 = !DILocation(line: 125, column: 1, scope: !6405)
!6636 = !{i64 2147601849, i64 2147601892, i64 2147601932}
!6637 = !DILocation(line: 126, column: 1, scope: !6405)
!6638 = !{i64 2147602126, i64 2147602169, i64 2147602209}
!6639 = !DILocation(line: 127, column: 1, scope: !6405)
!6640 = !{i64 2147602352, i64 2147602395, i64 2147602435}
!6641 = !DILocation(line: 128, column: 1, scope: !6405)
!6642 = !{i64 2147602560, i64 2147602603, i64 2147602643}
!6643 = !DILocation(line: 129, column: 1, scope: !6405)
!6644 = !{i64 2147602756, i64 2147602799, i64 2147602839}
!6645 = !DILocation(line: 130, column: 1, scope: !6405)
!6646 = !{i64 2147603021, i64 2147603064, i64 2147603104}
!6647 = !DILocation(line: 131, column: 1, scope: !6405)
!6648 = !{i64 2147607296, i64 2147607339, i64 2147607379}
!6649 = !DILocation(line: 132, column: 1, scope: !6405)
!6650 = !{i64 2147607471, i64 2147607514, i64 2147607554}
!6651 = !DILocation(line: 133, column: 1, scope: !6405)
!6652 = !{i64 2147607725, i64 2147607768, i64 2147607808}
!6653 = !DILocation(line: 134, column: 1, scope: !6405)
!6654 = !{i64 2147607924, i64 2147607967, i64 2147608007}
!6655 = !DILocation(line: 135, column: 1, scope: !6405)
!6656 = !{i64 2147608166, i64 2147608209, i64 2147608249}
!6657 = !DILocation(line: 136, column: 1, scope: !6405)
!6658 = !{i64 2147608329, i64 2147608372, i64 2147608412}
!6659 = !DILocation(line: 137, column: 1, scope: !6405)
!6660 = !{i64 2147608516, i64 2147608559, i64 2147608599}
!6661 = !DILocation(line: 138, column: 1, scope: !6405)
!6662 = !{i64 2147608724, i64 2147608767, i64 2147608807}
!6663 = !DILocation(line: 139, column: 1, scope: !6405)
!6664 = !{i64 2147608920, i64 2147608963, i64 2147609003}
!6665 = !DILocation(line: 140, column: 1, scope: !6405)
!6666 = !{i64 2147609113, i64 2147609156, i64 2147609196}
!6667 = !DILocation(line: 141, column: 1, scope: !6405)
!6668 = !{i64 2147609296, i64 2147609339, i64 2147609379}
!6669 = !DILocation(line: 142, column: 1, scope: !6405)
!6670 = !{i64 2147609510, i64 2147609553, i64 2147609593}
!6671 = !DILocation(line: 143, column: 1, scope: !6405)
!6672 = !{i64 2147609721, i64 2147609764, i64 2147609804}
!6673 = !DILocation(line: 144, column: 1, scope: !6405)
!6674 = !{i64 2147609941, i64 2147609984, i64 2147610024}
!6675 = !DILocation(line: 145, column: 1, scope: !6405)
!6676 = !{i64 2147610148, i64 2147610191, i64 2147610231}
!6677 = !DILocation(line: 146, column: 1, scope: !6405)
!6678 = !{i64 2147610421, i64 2147610464, i64 2147610504}
!6679 = !DILocation(line: 147, column: 1, scope: !6405)
!6680 = !{i64 2147610669, i64 2147610712, i64 2147610752}
!6681 = !DILocation(line: 148, column: 1, scope: !6405)
!6682 = !{i64 2147610868, i64 2147610911, i64 2147610951}
!6683 = !DILocation(line: 149, column: 1, scope: !6405)
!6684 = !{i64 2147611103, i64 2147611146, i64 2147611186}
!6685 = !DILocation(line: 150, column: 1, scope: !6405)
!6686 = !{i64 2147611353, i64 2147611396, i64 2147611436}
!6687 = !DILocation(line: 151, column: 1, scope: !6405)
!6688 = !{i64 2147611555, i64 2147611598, i64 2147611638}
!6689 = !DILocation(line: 152, column: 1, scope: !6405)
!6690 = !{i64 2147611778, i64 2147611821, i64 2147611861}
!6691 = !DILocation(line: 153, column: 1, scope: !6405)
!6692 = !{i64 2147611992, i64 2147612035, i64 2147612075}
!6693 = !DILocation(line: 154, column: 1, scope: !6405)
!6694 = !{i64 2147612236, i64 2147612279, i64 2147612319}
!6695 = !DILocation(line: 155, column: 1, scope: !6405)
!6696 = !{i64 2147612465, i64 2147612508, i64 2147612548}
!6697 = !DILocation(line: 156, column: 1, scope: !6405)
!6698 = !{i64 2147612694, i64 2147612737, i64 2147612777}
!6699 = !DILocation(line: 157, column: 1, scope: !6405)
!6700 = !{i64 2147612902, i64 2147612945, i64 2147612985}
!6701 = !DILocation(line: 158, column: 1, scope: !6405)
!6702 = !{i64 2147613140, i64 2147613183, i64 2147613223}
!6703 = !DILocation(line: 159, column: 1, scope: !6405)
!6704 = !{i64 2147613366, i64 2147613409, i64 2147613449}
!6705 = !DILocation(line: 160, column: 1, scope: !6405)
!6706 = !{i64 2147613625, i64 2147613668, i64 2147613708}
!6707 = !DILocation(line: 161, column: 1, scope: !6405)
!6708 = !{i64 2147613845, i64 2147613888, i64 2147613928}
!6709 = !DILocation(line: 162, column: 1, scope: !6405)
!6710 = !{i64 2147614077, i64 2147614120, i64 2147614160}
!6711 = !DILocation(line: 163, column: 1, scope: !6405)
!6712 = !{i64 2147614318, i64 2147614361, i64 2147614401}
!6713 = !DILocation(line: 164, column: 1, scope: !6405)
!6714 = !{i64 2147614559, i64 2147614602, i64 2147614642}
!6715 = !DILocation(line: 165, column: 1, scope: !6405)
!6716 = !{i64 2147614782, i64 2147614825, i64 2147614865}
!6717 = !DILocation(line: 166, column: 1, scope: !6405)
!6718 = !{i64 2147614999, i64 2147615042, i64 2147615082}
!6719 = !DILocation(line: 167, column: 1, scope: !6405)
!6720 = !{i64 2147615240, i64 2147615283, i64 2147615323}
!6721 = !DILocation(line: 168, column: 1, scope: !6405)
!6722 = !{i64 2147615427, i64 2147615470, i64 2147615510}
!6723 = !DILocation(line: 169, column: 1, scope: !6405)
!6724 = !{i64 2147615614, i64 2147615657, i64 2147615697}
!6725 = !DILocation(line: 170, column: 1, scope: !6405)
!6726 = !{i64 2147615777, i64 2147615820, i64 2147615860}
!6727 = !DILocation(line: 171, column: 1, scope: !6405)
!6728 = !{i64 2147620043, i64 2147620086, i64 2147620126}
!6729 = !DILocation(line: 172, column: 1, scope: !6405)
!6730 = !{i64 2147620236, i64 2147620279, i64 2147620319}
!6731 = !DILocation(line: 173, column: 1, scope: !6405)
!6732 = !{i64 2147620495, i64 2147620538, i64 2147620578}
!6733 = !DILocation(line: 174, column: 1, scope: !6405)
!6734 = !{i64 2147620718, i64 2147620761, i64 2147620801}
!6735 = !DILocation(line: 175, column: 1, scope: !6405)
!6736 = !{i64 2147620947, i64 2147620990, i64 2147621030}
!6737 = !DILocation(line: 176, column: 1, scope: !6405)
!6738 = !{i64 2147621161, i64 2147621204, i64 2147621244}
!6739 = !DILocation(line: 177, column: 1, scope: !6405)
!6740 = !{i64 2147621363, i64 2147621406, i64 2147621446}
!6741 = !DILocation(line: 178, column: 1, scope: !6405)
!6742 = !{i64 2147621559, i64 2147621602, i64 2147621642}
!6743 = !DILocation(line: 179, column: 1, scope: !6405)
!6744 = !{i64 2147621771, i64 2147621814, i64 2147621854}
!6745 = !DILocation(line: 180, column: 1, scope: !6405)
!6746 = !{i64 2147621992, i64 2147622035, i64 2147622075}
!6747 = !DILocation(line: 181, column: 1, scope: !6405)
!6748 = !{i64 2147622206, i64 2147622249, i64 2147622289}
!6749 = !DILocation(line: 182, column: 1, scope: !6405)
!6750 = !{i64 2147622396, i64 2147622439, i64 2147622479}
!6751 = !DILocation(line: 183, column: 1, scope: !6405)
!6752 = !{i64 2147622595, i64 2147622638, i64 2147622678}
!6753 = !DILocation(line: 184, column: 1, scope: !6405)
!6754 = !{i64 2147622800, i64 2147622843, i64 2147622883}
!6755 = !DILocation(line: 185, column: 1, scope: !6405)
!6756 = !{i64 2147623020, i64 2147623063, i64 2147623103}
!6757 = !DILocation(line: 186, column: 1, scope: !6405)
!6758 = !{i64 2147623221, i64 2147623264, i64 2147623304}
!6759 = !DILocation(line: 187, column: 1, scope: !6405)
!6760 = !{i64 2147623420, i64 2147623463, i64 2147623503}
!6761 = !DILocation(line: 188, column: 1, scope: !6405)
!6762 = !{i64 2147623625, i64 2147623668, i64 2147623708}
!6763 = !DILocation(line: 189, column: 1, scope: !6405)
!6764 = !{i64 2147623794, i64 2147623837, i64 2147623877}
!6765 = !DILocation(line: 190, column: 1, scope: !6405)
!6766 = !{i64 2147623978, i64 2147624021, i64 2147624061}
!6767 = !DILocation(line: 191, column: 1, scope: !6405)
!6768 = !{i64 2147624162, i64 2147624205, i64 2147624245}
!6769 = !DILocation(line: 192, column: 1, scope: !6405)
!6770 = !{i64 2147624346, i64 2147624389, i64 2147624429}
!6771 = !DILocation(line: 193, column: 1, scope: !6405)
!6772 = !{i64 2147624584, i64 2147624627, i64 2147624667}
!6773 = !DILocation(line: 194, column: 1, scope: !6405)
!6774 = !{i64 2147624814, i64 2147624857, i64 2147624897}
!6775 = !DILocation(line: 195, column: 1, scope: !6405)
!6776 = !{i64 2147625043, i64 2147625086, i64 2147625126}
!6777 = !DILocation(line: 196, column: 1, scope: !6405)
!6778 = !{i64 2147625230, i64 2147625273, i64 2147625313}
!6779 = !DILocation(line: 197, column: 1, scope: !6405)
!6780 = !{i64 2147625426, i64 2147625469, i64 2147625509}
!6781 = !DILocation(line: 198, column: 1, scope: !6405)
!6782 = !{i64 2147625634, i64 2147625677, i64 2147625717}
!6783 = !DILocation(line: 199, column: 1, scope: !6405)
!6784 = !{i64 2147625846, i64 2147625889, i64 2147625929}
!6785 = !DILocation(line: 200, column: 1, scope: !6405)
!6786 = !{i64 2147626045, i64 2147626088, i64 2147626128}
!6787 = !DILocation(line: 201, column: 1, scope: !6405)
!6788 = !{i64 2147626283, i64 2147626326, i64 2147626366}
!6789 = !DILocation(line: 202, column: 1, scope: !6405)
!6790 = !{i64 2147626479, i64 2147626522, i64 2147626562}
!6791 = !DILocation(line: 203, column: 1, scope: !6405)
!6792 = !{i64 2147626681, i64 2147626724, i64 2147626764}
!6793 = !DILocation(line: 204, column: 1, scope: !6405)
!6794 = !{i64 2147626874, i64 2147626917, i64 2147626957}
!6795 = !DILocation(line: 205, column: 1, scope: !6405)
!6796 = !{i64 2147627108, i64 2147627151, i64 2147627191}
!6797 = !DILocation(line: 206, column: 1, scope: !6405)
!6798 = !{i64 2147627271, i64 2147627314, i64 2147627354}
!6799 = !DILocation(line: 207, column: 1, scope: !6405)
!6800 = !{i64 2147627510, i64 2147627553, i64 2147627593}
!6801 = !DILocation(line: 208, column: 1, scope: !6405)
!6802 = !{i64 2147627749, i64 2147627792, i64 2147627832}
!6803 = !DILocation(line: 209, column: 1, scope: !6405)
!6804 = !{i64 2147627985, i64 2147628028, i64 2147628068}
!6805 = !DILocation(line: 210, column: 1, scope: !6405)
!6806 = !{i64 2147628215, i64 2147628258, i64 2147628298}
!6807 = !DILocation(line: 211, column: 1, scope: !6405)
!6808 = !{i64 2147628402, i64 2147628445, i64 2147628485}
!6809 = !DILocation(line: 212, column: 1, scope: !6405)
!6810 = !{i64 2147628601, i64 2147628644, i64 2147628684}
!6811 = !DILocation(line: 213, column: 1, scope: !6405)
!6812 = !{i64 2147628872, i64 2147628915, i64 2147628955}
!6813 = !DILocation(line: 214, column: 1, scope: !6405)
!6814 = !{i64 2147629047, i64 2147629090, i64 2147629130}
!6815 = !DILocation(line: 215, column: 1, scope: !6405)
!6816 = !{i64 2147633342, i64 2147633385, i64 2147633425}
!6817 = !DILocation(line: 216, column: 1, scope: !6405)
!6818 = !{i64 2147633550, i64 2147633593, i64 2147633633}
!6819 = !DILocation(line: 217, column: 1, scope: !6405)
!6820 = !{i64 2147633768, i64 2147633811, i64 2147633851}
!6821 = !DILocation(line: 218, column: 1, scope: !6405)
!6822 = !{i64 2147633958, i64 2147634001, i64 2147634041}
!6823 = !DILocation(line: 219, column: 1, scope: !6405)
!6824 = !{i64 2147634190, i64 2147634233, i64 2147634273}
!6825 = !DILocation(line: 220, column: 1, scope: !6405)
!6826 = !{i64 2147634410, i64 2147634453, i64 2147634493}
!6827 = !DILocation(line: 221, column: 1, scope: !6405)
!6828 = !{i64 2147634606, i64 2147634649, i64 2147634689}
!6829 = !DILocation(line: 222, column: 1, scope: !6405)
!6830 = !{i64 2147634812, i64 2147634855, i64 2147634895}
!6831 = !DILocation(line: 223, column: 1, scope: !6405)
!6832 = !{i64 2147635017, i64 2147635060, i64 2147635100}
!6833 = !DILocation(line: 224, column: 1, scope: !6405)
!6834 = !{i64 2147635243, i64 2147635286, i64 2147635326}
!6835 = !DILocation(line: 225, column: 1, scope: !6405)
!6836 = !{i64 2147635451, i64 2147635494, i64 2147635534}
!6837 = !DILocation(line: 226, column: 1, scope: !6405)
!6838 = !{i64 2147635647, i64 2147635690, i64 2147635730}
!6839 = !DILocation(line: 227, column: 1, scope: !6405)
!6840 = !{i64 2147635879, i64 2147635922, i64 2147635962}
!6841 = !DILocation(line: 228, column: 1, scope: !6405)
!6842 = !{i64 2147636063, i64 2147636106, i64 2147636146}
!6843 = !DILocation(line: 229, column: 1, scope: !6405)
!6844 = !{i64 2147636272, i64 2147636315, i64 2147636355}
!6845 = !DILocation(line: 230, column: 1, scope: !6405)
!6846 = !{i64 2147636480, i64 2147636523, i64 2147636563}
!6847 = !DILocation(line: 231, column: 1, scope: !6405)
!6848 = !{i64 2147636676, i64 2147636719, i64 2147636759}
!6849 = !DILocation(line: 232, column: 1, scope: !6405)
!6850 = !{i64 2147636860, i64 2147636903, i64 2147636943}
!6851 = !DILocation(line: 233, column: 1, scope: !6405)
!6852 = !{i64 2147637086, i64 2147637129, i64 2147637169}
!6853 = !DILocation(line: 234, column: 1, scope: !6405)
!6854 = !{i64 2147637312, i64 2147637355, i64 2147637395}
!6855 = !DILocation(line: 235, column: 1, scope: !6405)
!6856 = !{i64 2147637538, i64 2147637581, i64 2147637621}
!6857 = !DILocation(line: 236, column: 1, scope: !6405)
!6858 = !{i64 2147637764, i64 2147637807, i64 2147637847}
!6859 = !DILocation(line: 237, column: 1, scope: !6405)
!6860 = !{i64 2147637990, i64 2147638033, i64 2147638073}
!6861 = !DILocation(line: 238, column: 1, scope: !6405)
!6862 = !{i64 2147638222, i64 2147638265, i64 2147638305}
!6863 = !DILocation(line: 239, column: 1, scope: !6405)
!6864 = !{i64 2147638460, i64 2147638503, i64 2147638543}
!6865 = !DILocation(line: 240, column: 1, scope: !6405)
!6866 = !{i64 2147638680, i64 2147638723, i64 2147638763}
!6867 = !DILocation(line: 241, column: 1, scope: !6405)
!6868 = !{i64 2147638924, i64 2147638967, i64 2147639007}
!6869 = !DILocation(line: 242, column: 1, scope: !6405)
!6870 = !{i64 2147639165, i64 2147639208, i64 2147639248}
!6871 = !DILocation(line: 243, column: 1, scope: !6405)
!6872 = !{i64 2147639400, i64 2147639443, i64 2147639483}
!6873 = !DILocation(line: 244, column: 1, scope: !6405)
!6874 = !{i64 2147639632, i64 2147639675, i64 2147639715}
!6875 = !DILocation(line: 245, column: 1, scope: !6405)
!6876 = !{i64 2147639834, i64 2147639877, i64 2147639917}
!6877 = !DILocation(line: 246, column: 1, scope: !6405)
!6878 = !{i64 2147640084, i64 2147640127, i64 2147640167}
!6879 = !DILocation(line: 247, column: 1, scope: !6405)
!6880 = !{i64 2147640322, i64 2147640365, i64 2147640405}
!6881 = !DILocation(line: 248, column: 1, scope: !6405)
!6882 = !{i64 2147640530, i64 2147640573, i64 2147640613}
!6883 = !DILocation(line: 249, column: 1, scope: !6405)
!6884 = !{i64 2147640726, i64 2147640769, i64 2147640809}
!6885 = !DILocation(line: 250, column: 1, scope: !6405)
!6886 = !{i64 2147640910, i64 2147640953, i64 2147640993}
!6887 = !DILocation(line: 251, column: 1, scope: !6405)
!6888 = !{i64 2147641127, i64 2147641170, i64 2147641210}
!6889 = !DILocation(line: 252, column: 1, scope: !6405)
!6890 = !{i64 2147641332, i64 2147641375, i64 2147641415}
!6891 = !DILocation(line: 253, column: 1, scope: !6405)
!6892 = !{i64 2147641567, i64 2147641610, i64 2147641650}
!6893 = !DILocation(line: 254, column: 1, scope: !6405)
!6894 = !{i64 2147641790, i64 2147641833, i64 2147641873}
!6895 = !DILocation(line: 255, column: 1, scope: !6405)
!6896 = !{i64 2147646075, i64 2147646118, i64 2147646158}
!6897 = !DILocation(line: 256, column: 1, scope: !6405)
!6898 = !{i64 2147646313, i64 2147646356, i64 2147646396}
!6899 = !DILocation(line: 257, column: 1, scope: !6405)
!6900 = !{i64 2147646551, i64 2147646594, i64 2147646634}
!6901 = !DILocation(line: 258, column: 1, scope: !6405)
!6902 = !{i64 2147646768, i64 2147646811, i64 2147646851}
!6903 = !DILocation(line: 259, column: 1, scope: !6405)
!6904 = !{i64 2147646973, i64 2147647016, i64 2147647056}
!6905 = !DILocation(line: 260, column: 1, scope: !6405)
!6906 = !{i64 2147647166, i64 2147647209, i64 2147647249}
!6907 = !DILocation(line: 261, column: 1, scope: !6405)
!6908 = !{i64 2147647419, i64 2147647462, i64 2147647502}
!6909 = !DILocation(line: 262, column: 1, scope: !6405)
!6910 = !{i64 2147647627, i64 2147647670, i64 2147647710}
!6911 = !DILocation(line: 263, column: 1, scope: !6405)
!6912 = !{i64 2147647823, i64 2147647866, i64 2147647906}
!6913 = !DILocation(line: 264, column: 1, scope: !6405)
!6914 = !{i64 2147648037, i64 2147648080, i64 2147648120}
!6915 = !DILocation(line: 265, column: 1, scope: !6405)
!6916 = !{i64 2147648245, i64 2147648288, i64 2147648328}
!6917 = !DILocation(line: 266, column: 1, scope: !6405)
!6918 = !{i64 2147648435, i64 2147648478, i64 2147648518}
!6919 = !DILocation(line: 267, column: 1, scope: !6405)
!6920 = !{i64 2147648649, i64 2147648692, i64 2147648732}
!6921 = !DILocation(line: 268, column: 1, scope: !6405)
!6922 = !{i64 2147648911, i64 2147648954, i64 2147648994}
!6923 = !DILocation(line: 269, column: 1, scope: !6405)
!6924 = !{i64 2147649122, i64 2147649165, i64 2147649205}
!6925 = !DILocation(line: 270, column: 1, scope: !6405)
!6926 = !{i64 2147649366, i64 2147649409, i64 2147649449}
!6927 = !DILocation(line: 271, column: 1, scope: !6405)
!6928 = !{i64 2147649577, i64 2147649620, i64 2147649660}
!6929 = !DILocation(line: 272, column: 1, scope: !6405)
!6930 = !{i64 2147649806, i64 2147649849, i64 2147649889}
!6931 = !DILocation(line: 273, column: 1, scope: !6405)
!6932 = !{i64 2147650071, i64 2147650114, i64 2147650154}
!6933 = !DILocation(line: 274, column: 1, scope: !6405)
!6934 = !{i64 2147650276, i64 2147650319, i64 2147650359}
!6935 = !DILocation(line: 275, column: 1, scope: !6405)
!6936 = !{i64 2147650472, i64 2147650515, i64 2147650555}
!6937 = !DILocation(line: 276, column: 1, scope: !6405)
!6938 = !{i64 2147650695, i64 2147650738, i64 2147650778}
!6939 = !DILocation(line: 277, column: 1, scope: !6405)
!6940 = !{i64 2147650858, i64 2147650901, i64 2147650941}
!6941 = !DILocation(line: 278, column: 1, scope: !6405)
!6942 = !{i64 2147651063, i64 2147651106, i64 2147651146}
!6943 = !DILocation(line: 279, column: 1, scope: !6405)
!6944 = !{i64 2147651283, i64 2147651326, i64 2147651366}
!6945 = !DILocation(line: 280, column: 1, scope: !6405)
!6946 = !{i64 2147651497, i64 2147651540, i64 2147651580}
!6947 = !DILocation(line: 281, column: 1, scope: !6405)
!6948 = !{i64 2147651741, i64 2147651784, i64 2147651824}
!6949 = !DILocation(line: 282, column: 1, scope: !6405)
!6950 = !{i64 2147651973, i64 2147652016, i64 2147652056}
!6951 = !DILocation(line: 283, column: 1, scope: !6405)
!6952 = !{i64 2147652187, i64 2147652230, i64 2147652270}
!6953 = !DILocation(line: 284, column: 1, scope: !6405)
!6954 = !{i64 2147652398, i64 2147652441, i64 2147652481}
!6955 = !DILocation(line: 285, column: 1, scope: !6405)
!6956 = !{i64 2147652591, i64 2147652634, i64 2147652674}
!6957 = !DILocation(line: 286, column: 1, scope: !6405)
!6958 = !{i64 2147652790, i64 2147652833, i64 2147652873}
!6959 = !DILocation(line: 287, column: 1, scope: !6405)
!6960 = !{i64 2147652962, i64 2147653005, i64 2147653045}
!6961 = !DILocation(line: 288, column: 1, scope: !6405)
!6962 = !{i64 2147653158, i64 2147653201, i64 2147653241}
!6963 = !DILocation(line: 289, column: 1, scope: !6405)
!6964 = !{i64 2147653321, i64 2147653364, i64 2147653404}
!6965 = !DILocation(line: 290, column: 1, scope: !6405)
!6966 = !{i64 2147653523, i64 2147653566, i64 2147653606}
!6967 = !DILocation(line: 291, column: 1, scope: !6405)
!6968 = !{i64 2147653728, i64 2147653771, i64 2147653811}
!6969 = !DILocation(line: 292, column: 1, scope: !6405)
!6970 = !{i64 2147653936, i64 2147653979, i64 2147654019}
!6971 = !DILocation(line: 293, column: 1, scope: !6405)
!6972 = !{i64 2147654129, i64 2147654172, i64 2147654212}
!6973 = !DILocation(line: 294, column: 1, scope: !6405)
!6974 = !{i64 2147654316, i64 2147654359, i64 2147654399}
!6975 = !DILocation(line: 295, column: 1, scope: !6405)
!6976 = !{i64 2147654543, i64 2147654586, i64 2147654626}
!6977 = !DILocation(line: 296, column: 1, scope: !6405)
!6978 = !{i64 2147654709, i64 2147654752, i64 2147654792}
!6979 = !DILocation(line: 297, column: 1, scope: !6405)
!6980 = !{i64 2147659008, i64 2147659051, i64 2147659091}
!6981 = !DILocation(line: 298, column: 1, scope: !6405)
!6982 = !{i64 2147659213, i64 2147659256, i64 2147659296}
!6983 = !DILocation(line: 299, column: 1, scope: !6405)
!6984 = !{i64 2147659421, i64 2147659464, i64 2147659504}
!6985 = !DILocation(line: 300, column: 1, scope: !6405)
!6986 = !{i64 2147659671, i64 2147659714, i64 2147659754}
!6987 = !DILocation(line: 301, column: 1, scope: !6405)
!6988 = !{i64 2147659879, i64 2147659922, i64 2147659962}
!6989 = !DILocation(line: 302, column: 1, scope: !6405)
!6990 = !{i64 2147660075, i64 2147660118, i64 2147660158}
!6991 = !DILocation(line: 303, column: 1, scope: !6405)
!6992 = !{i64 2147660292, i64 2147660335, i64 2147660375}
!6993 = !DILocation(line: 304, column: 1, scope: !6405)
!6994 = !{i64 2147660584, i64 2147660627, i64 2147660667}
!6995 = !DILocation(line: 305, column: 1, scope: !6405)
!6996 = !{i64 2147660816, i64 2147660859, i64 2147660899}
!6997 = !DILocation(line: 306, column: 1, scope: !6405)
!6998 = !{i64 2147661033, i64 2147661076, i64 2147661116}
!6999 = !DILocation(line: 307, column: 1, scope: !6405)
!7000 = !{i64 2147661240, i64 2147661283, i64 2147661323}
!7001 = !DILocation(line: 308, column: 1, scope: !6405)
!7002 = !{i64 2147661441, i64 2147661484, i64 2147661524}
!7003 = !DILocation(line: 309, column: 1, scope: !6405)
!7004 = !{i64 2147661673, i64 2147661716, i64 2147661756}
!7005 = !DILocation(line: 310, column: 1, scope: !6405)
!7006 = !{i64 2147661881, i64 2147661924, i64 2147661964}
!7007 = !DILocation(line: 311, column: 1, scope: !6405)
!7008 = !{i64 2147662071, i64 2147662114, i64 2147662154}
!7009 = !DILocation(line: 312, column: 1, scope: !6405)
!7010 = !{i64 2147662297, i64 2147662340, i64 2147662380}
!7011 = !DILocation(line: 313, column: 1, scope: !6405)
!7012 = !{i64 2147662486, i64 2147662529, i64 2147662569}
!7013 = !DILocation(line: 314, column: 1, scope: !6405)
!7014 = !{i64 2147662757, i64 2147662800, i64 2147662840}
!7015 = !DILocation(line: 315, column: 1, scope: !6405)
!7016 = !{i64 2147662977, i64 2147663020, i64 2147663060}
!7017 = !DILocation(line: 316, column: 1, scope: !6405)
!7018 = !{i64 2147663230, i64 2147663273, i64 2147663313}
!7019 = !DILocation(line: 317, column: 1, scope: !6405)
!7020 = !{i64 2147663438, i64 2147663481, i64 2147663521}
!7021 = !DILocation(line: 318, column: 1, scope: !6405)
!7022 = !{i64 2147663670, i64 2147663713, i64 2147663753}
!7023 = !DILocation(line: 319, column: 1, scope: !6405)
!7024 = !{i64 2147663881, i64 2147663924, i64 2147663964}
!7025 = !DILocation(line: 320, column: 1, scope: !6405)
!7026 = !{i64 2147664071, i64 2147664114, i64 2147664154}
!7027 = !DILocation(line: 321, column: 1, scope: !6405)
!7028 = !{i64 2147664285, i64 2147664328, i64 2147664368}
!7029 = !DILocation(line: 322, column: 1, scope: !6405)
!7030 = !{i64 2147664484, i64 2147664527, i64 2147664567}
!7031 = !DILocation(line: 323, column: 1, scope: !6405)
!7032 = !{i64 2147664671, i64 2147664714, i64 2147664754}
!7033 = !DILocation(line: 324, column: 1, scope: !6405)
!7034 = !{i64 2147664879, i64 2147664922, i64 2147664962}
!7035 = !DILocation(line: 325, column: 1, scope: !6405)
!7036 = !{i64 2147665108, i64 2147665151, i64 2147665191}
!7037 = !DILocation(line: 326, column: 1, scope: !6405)
!7038 = !{i64 2147665310, i64 2147665353, i64 2147665393}
!7039 = !DILocation(line: 327, column: 1, scope: !6405)
!7040 = !{i64 2147665509, i64 2147665552, i64 2147665592}
!7041 = !DILocation(line: 328, column: 1, scope: !6405)
!7042 = !{i64 2147665726, i64 2147665769, i64 2147665809}
!7043 = !DILocation(line: 330, column: 1, scope: !6405)
!7044 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !439, file: !439, line: 30, type: !446, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7045)
!7045 = !{!7046, !7047}
!7046 = !DILocalVariable(name: "arg", arg: 1, scope: !7044, file: !439, line: 30, type: !448)
!7047 = !DILocalVariable(name: "key", scope: !7044, file: !439, line: 32, type: !108)
!7048 = !DILocation(line: 0, scope: !7044)
!7049 = !DILocation(line: 37, column: 2, scope: !7044)
!7050 = !DILocation(line: 38, column: 2, scope: !7044)
!7051 = !DILocation(line: 55, column: 2, scope: !7052, inlinedAt: !7059)
!7052 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7053, file: !7053, line: 42, type: !7054, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7056)
!7053 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7054 = !DISubroutineType(types: !7055)
!7055 = !{!32}
!7056 = !{!7057, !7058}
!7057 = !DILocalVariable(name: "key", scope: !7052, file: !7053, line: 44, type: !32)
!7058 = !DILocalVariable(name: "tmp", scope: !7052, file: !7053, line: 53, type: !32)
!7059 = distinct !DILocation(line: 40, column: 8, scope: !7044)
!7060 = !{i64 2102845}
!7061 = !DILocation(line: 0, scope: !7052, inlinedAt: !7059)
!7062 = !DILocalVariable(name: "key", arg: 1, scope: !7063, file: !7053, line: 84, type: !32)
!7063 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7053, file: !7053, line: 84, type: !7064, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7066)
!7064 = !DISubroutineType(types: !7065)
!7065 = !{null, !32}
!7066 = !{!7062}
!7067 = !DILocation(line: 0, scope: !7063, inlinedAt: !7068)
!7068 = distinct !DILocation(line: 47, column: 2, scope: !7044)
!7069 = !DILocation(line: 95, column: 2, scope: !7063, inlinedAt: !7068)
!7070 = !{i64 2103662}
!7071 = !DILocation(line: 51, column: 18, scope: !7044)
!7072 = !DILocation(line: 53, column: 2, scope: !7044)
!7073 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7074, file: !7074, line: 1609, type: !337, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !256)
!7074 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7075 = !DILocation(line: 1611, column: 3, scope: !7073)
!7076 = !DILocation(line: 1612, column: 1, scope: !7073)
!7077 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7074, file: !7074, line: 1629, type: !337, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !256)
!7078 = !DILocation(line: 1631, column: 3, scope: !7077)
!7079 = !DILocation(line: 1632, column: 1, scope: !7077)
!7080 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !475, file: !475, line: 26, type: !481, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !472, retainedNodes: !7081)
!7081 = !{!7082}
!7082 = !DILocalVariable(name: "dev", arg: 1, scope: !7080, file: !475, line: 26, type: !483)
!7083 = !DILocation(line: 0, scope: !7080)
!7084 = !DILocation(line: 68, column: 2, scope: !7080)
!7085 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7086, file: !7086, line: 14, type: !4649, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !7087)
!7086 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7087 = !{!7088, !7089}
!7088 = !DILocalVariable(name: "fmt", arg: 1, scope: !7085, file: !7086, line: 14, type: !121)
!7089 = !DILocalVariable(name: "ap", scope: !7085, file: !7086, line: 16, type: !7090)
!7090 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3718, line: 99, baseType: !7091)
!7091 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3718, line: 40, baseType: !7092)
!7092 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7086, baseType: !7093)
!7093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7094)
!7094 = !{!7095}
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7093, file: !7086, line: 16, baseType: !106, size: 32)
!7096 = !DILocation(line: 0, scope: !7085)
!7097 = !DILocation(line: 16, column: 2, scope: !7085)
!7098 = !DILocation(line: 16, column: 10, scope: !7085)
!7099 = !DILocation(line: 18, column: 2, scope: !7085)
!7100 = !DILocation(line: 19, column: 2, scope: !7085)
!7101 = !DILocation(line: 20, column: 2, scope: !7085)
!7102 = !DILocation(line: 21, column: 1, scope: !7085)
!7103 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7086, file: !7086, line: 23, type: !7104, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !7106)
!7104 = !DISubroutineType(types: !7105)
!7105 = !{null, !121, !7090}
!7106 = !{!7107, !7108}
!7107 = !DILocalVariable(name: "fmt", arg: 1, scope: !7103, file: !7086, line: 23, type: !121)
!7108 = !DILocalVariable(name: "ap", arg: 2, scope: !7103, file: !7086, line: 23, type: !7090)
!7109 = !DILocation(line: 0, scope: !7103)
!7110 = !DILocation(line: 25, column: 2, scope: !7103)
!7111 = !DILocation(line: 26, column: 1, scope: !7103)
!7112 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7086, file: !7086, line: 52, type: !7113, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !7115)
!7113 = !DISubroutineType(types: !7114)
!7114 = !{null, !107, !13, !137}
!7115 = !{!7116, !7117, !7118, !7119}
!7116 = !DILocalVariable(name: "level", arg: 1, scope: !7112, file: !7086, line: 52, type: !107)
!7117 = !DILocalVariable(name: "data", arg: 2, scope: !7112, file: !7086, line: 52, type: !13)
!7118 = !DILocalVariable(name: "size", arg: 3, scope: !7112, file: !7086, line: 52, type: !137)
!7119 = !DILocalVariable(name: "data_buffer", scope: !7112, file: !7086, line: 54, type: !121)
!7120 = !DILocation(line: 0, scope: !7112)
!7121 = !DILocation(line: 55, column: 14, scope: !7112)
!7122 = !DILocation(line: 55, column: 2, scope: !7112)
!7123 = !DILocation(line: 56, column: 3, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7112, file: !7086, line: 55, column: 20)
!7125 = !DILocation(line: 57, column: 3, scope: !7124)
!7126 = !DILocation(line: 59, column: 7, scope: !7124)
!7127 = distinct !{!7127, !7122, !7128}
!7128 = !DILocation(line: 65, column: 2, scope: !7112)
!7129 = !DILocation(line: 66, column: 1, scope: !7112)
!7130 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7131, file: !7131, line: 175, type: !7132, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !7134)
!7131 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7132 = !DISubroutineType(types: !7133)
!7133 = !{!123, !107}
!7134 = !{!7135}
!7135 = !DILocalVariable(name: "level", arg: 1, scope: !7130, file: !7131, line: 175, type: !107)
!7136 = !DILocation(line: 0, scope: !7130)
!7137 = !DILocation(line: 177, column: 2, scope: !7130)
!7138 = !DILocation(line: 189, column: 1, scope: !7130)
!7139 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7086, file: !7086, line: 28, type: !7140, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !7142)
!7140 = !DISubroutineType(types: !7141)
!7141 = !{null, !121, !137}
!7142 = !{!7143, !7144, !7145, !7147, !7149}
!7143 = !DILocalVariable(name: "data", arg: 1, scope: !7139, file: !7086, line: 28, type: !121)
!7144 = !DILocalVariable(name: "length", arg: 2, scope: !7139, file: !7086, line: 28, type: !137)
!7145 = !DILocalVariable(name: "i", scope: !7146, file: !7086, line: 30, type: !137)
!7146 = distinct !DILexicalBlock(scope: !7139, file: !7086, line: 30, column: 2)
!7147 = !DILocalVariable(name: "i", scope: !7148, file: !7086, line: 40, type: !137)
!7148 = distinct !DILexicalBlock(scope: !7139, file: !7086, line: 40, column: 2)
!7149 = !DILocalVariable(name: "c", scope: !7150, file: !7086, line: 42, type: !191)
!7150 = distinct !DILexicalBlock(scope: !7151, file: !7086, line: 41, column: 19)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !7086, line: 41, column: 7)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !7086, line: 40, column: 54)
!7153 = distinct !DILexicalBlock(scope: !7148, file: !7086, line: 40, column: 2)
!7154 = !DILocation(line: 0, scope: !7139)
!7155 = !DILocation(line: 0, scope: !7146)
!7156 = !DILocation(line: 30, column: 2, scope: !7146)
!7157 = !DILocation(line: 38, column: 2, scope: !7139)
!7158 = !DILocation(line: 0, scope: !7148)
!7159 = !DILocation(line: 40, column: 2, scope: !7148)
!7160 = !DILocation(line: 31, column: 9, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !7086, line: 31, column: 7)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !7086, line: 30, column: 54)
!7163 = distinct !DILexicalBlock(scope: !7146, file: !7086, line: 30, column: 2)
!7164 = !DILocation(line: 31, column: 7, scope: !7162)
!7165 = !DILocation(line: 32, column: 35, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7161, file: !7086, line: 31, column: 19)
!7167 = !DILocation(line: 32, column: 20, scope: !7166)
!7168 = !DILocation(line: 32, column: 4, scope: !7166)
!7169 = !DILocation(line: 33, column: 3, scope: !7166)
!7170 = !DILocation(line: 34, column: 4, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7161, file: !7086, line: 33, column: 10)
!7172 = !DILocation(line: 30, column: 50, scope: !7163)
!7173 = !DILocation(line: 30, column: 24, scope: !7163)
!7174 = distinct !{!7174, !7156, !7175}
!7175 = !DILocation(line: 36, column: 2, scope: !7146)
!7176 = !DILocation(line: 49, column: 2, scope: !7139)
!7177 = !DILocation(line: 50, column: 1, scope: !7139)
!7178 = !DILocation(line: 41, column: 9, scope: !7151)
!7179 = !DILocation(line: 41, column: 7, scope: !7152)
!7180 = !DILocation(line: 42, column: 22, scope: !7150)
!7181 = !DILocation(line: 0, scope: !7150)
!7182 = !DILocation(line: 44, column: 25, scope: !7150)
!7183 = !DILocation(line: 44, column: 17, scope: !7150)
!7184 = !DILocation(line: 44, column: 33, scope: !7150)
!7185 = !DILocation(line: 44, column: 4, scope: !7150)
!7186 = !DILocation(line: 45, column: 3, scope: !7150)
!7187 = !DILocation(line: 46, column: 4, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7151, file: !7086, line: 45, column: 10)
!7189 = !DILocation(line: 40, column: 50, scope: !7153)
!7190 = !DILocation(line: 40, column: 24, scope: !7153)
!7191 = distinct !{!7191, !7159, !7192}
!7192 = !DILocation(line: 48, column: 2, scope: !7148)
!7193 = distinct !DISubprogram(name: "isprint", scope: !6178, file: !6178, line: 37, type: !418, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !7194)
!7194 = !{!7195}
!7195 = !DILocalVariable(name: "c", arg: 1, scope: !7193, file: !6178, line: 37, type: !107)
!7196 = !DILocation(line: 0, scope: !7193)
!7197 = !DILocation(line: 39, column: 38, scope: !7193)
!7198 = !DILocation(line: 39, column: 2, scope: !7193)
!7199 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7200, file: !7200, line: 57, type: !7201, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !7247)
!7200 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7201 = !DISubroutineType(types: !7202)
!7202 = !{null, !32, !7203}
!7203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7204, size: 32)
!7204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7205)
!7205 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2821, line: 141, baseType: !7206)
!7206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2821, line: 97, size: 256, elements: !7207)
!7207 = !{!7208}
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7206, file: !2821, line: 107, baseType: !7209, size: 256)
!7209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2821, line: 98, size: 256, elements: !7210)
!7210 = !{!7211, !7216, !7221, !7226, !7231, !7236, !7241, !7246}
!7211 = !DIDerivedType(tag: DW_TAG_member, scope: !7209, file: !2821, line: 99, baseType: !7212, size: 32)
!7212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7209, file: !2821, line: 99, size: 32, elements: !7213)
!7213 = !{!7214, !7215}
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7212, file: !2821, line: 99, baseType: !108, size: 32)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7212, file: !2821, line: 99, baseType: !108, size: 32)
!7216 = !DIDerivedType(tag: DW_TAG_member, scope: !7209, file: !2821, line: 100, baseType: !7217, size: 32, offset: 32)
!7217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7209, file: !2821, line: 100, size: 32, elements: !7218)
!7218 = !{!7219, !7220}
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7217, file: !2821, line: 100, baseType: !108, size: 32)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7217, file: !2821, line: 100, baseType: !108, size: 32)
!7221 = !DIDerivedType(tag: DW_TAG_member, scope: !7209, file: !2821, line: 101, baseType: !7222, size: 32, offset: 64)
!7222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7209, file: !2821, line: 101, size: 32, elements: !7223)
!7223 = !{!7224, !7225}
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7222, file: !2821, line: 101, baseType: !108, size: 32)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7222, file: !2821, line: 101, baseType: !108, size: 32)
!7226 = !DIDerivedType(tag: DW_TAG_member, scope: !7209, file: !2821, line: 102, baseType: !7227, size: 32, offset: 96)
!7227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7209, file: !2821, line: 102, size: 32, elements: !7228)
!7228 = !{!7229, !7230}
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7227, file: !2821, line: 102, baseType: !108, size: 32)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7227, file: !2821, line: 102, baseType: !108, size: 32)
!7231 = !DIDerivedType(tag: DW_TAG_member, scope: !7209, file: !2821, line: 103, baseType: !7232, size: 32, offset: 128)
!7232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7209, file: !2821, line: 103, size: 32, elements: !7233)
!7233 = !{!7234, !7235}
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7232, file: !2821, line: 103, baseType: !108, size: 32)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7232, file: !2821, line: 103, baseType: !108, size: 32)
!7236 = !DIDerivedType(tag: DW_TAG_member, scope: !7209, file: !2821, line: 104, baseType: !7237, size: 32, offset: 160)
!7237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7209, file: !2821, line: 104, size: 32, elements: !7238)
!7238 = !{!7239, !7240}
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7237, file: !2821, line: 104, baseType: !108, size: 32)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7237, file: !2821, line: 104, baseType: !108, size: 32)
!7241 = !DIDerivedType(tag: DW_TAG_member, scope: !7209, file: !2821, line: 105, baseType: !7242, size: 32, offset: 192)
!7242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7209, file: !2821, line: 105, size: 32, elements: !7243)
!7243 = !{!7244, !7245}
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7242, file: !2821, line: 105, baseType: !108, size: 32)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7242, file: !2821, line: 105, baseType: !108, size: 32)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7209, file: !2821, line: 106, baseType: !108, size: 32, offset: 224)
!7247 = !{!7248, !7249}
!7248 = !DILocalVariable(name: "reason", arg: 1, scope: !7199, file: !7200, line: 57, type: !32)
!7249 = !DILocalVariable(name: "esf", arg: 2, scope: !7199, file: !7200, line: 57, type: !7203)
!7250 = !DILocation(line: 0, scope: !7199)
!7251 = !DILocation(line: 60, column: 10, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7199, file: !7200, line: 60, column: 6)
!7253 = !DILocation(line: 60, column: 6, scope: !7199)
!7254 = !DILocation(line: 61, column: 3, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7252, file: !7200, line: 60, column: 19)
!7256 = !DILocation(line: 62, column: 2, scope: !7255)
!7257 = !DILocation(line: 63, column: 2, scope: !7199)
!7258 = !DILocation(line: 64, column: 1, scope: !7199)
!7259 = distinct !DISubprogram(name: "esf_dump", scope: !7200, file: !7200, line: 20, type: !7260, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !7262)
!7260 = !DISubroutineType(types: !7261)
!7261 = !{null, !7203}
!7262 = !{!7263}
!7263 = !DILocalVariable(name: "esf", arg: 1, scope: !7259, file: !7200, line: 20, type: !7203)
!7264 = !DILocation(line: 0, scope: !7259)
!7265 = !DILocation(line: 22, column: 2, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7267, file: !7200, line: 22, column: 2)
!7267 = distinct !DILexicalBlock(scope: !7268, file: !7200, line: 22, column: 2)
!7268 = distinct !DILexicalBlock(scope: !7269, file: !7200, line: 22, column: 2)
!7269 = distinct !DILexicalBlock(scope: !7259, file: !7200, line: 22, column: 2)
!7270 = !DILocation(line: 24, column: 2, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7272, file: !7200, line: 24, column: 2)
!7272 = distinct !DILexicalBlock(scope: !7273, file: !7200, line: 24, column: 2)
!7273 = distinct !DILexicalBlock(scope: !7274, file: !7200, line: 24, column: 2)
!7274 = distinct !DILexicalBlock(scope: !7259, file: !7200, line: 24, column: 2)
!7275 = !DILocation(line: 26, column: 2, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7277, file: !7200, line: 26, column: 2)
!7277 = distinct !DILexicalBlock(scope: !7278, file: !7200, line: 26, column: 2)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !7200, line: 26, column: 2)
!7279 = distinct !DILexicalBlock(scope: !7259, file: !7200, line: 26, column: 2)
!7280 = !DILocation(line: 53, column: 2, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !7200, line: 53, column: 2)
!7282 = distinct !DILexicalBlock(scope: !7283, file: !7200, line: 53, column: 2)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !7200, line: 53, column: 2)
!7284 = distinct !DILexicalBlock(scope: !7259, file: !7200, line: 53, column: 2)
!7285 = !DILocation(line: 55, column: 1, scope: !7259)
!7286 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7200, file: !7200, line: 82, type: !7287, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !7302)
!7287 = !DISubroutineType(types: !7288)
!7288 = !{null, !7203, !7289}
!7289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7290, size: 32)
!7290 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !219, line: 37, baseType: !7291)
!7291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !7292)
!7292 = !{!7293, !7294, !7295, !7296, !7297, !7298, !7299, !7300, !7301}
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7291, file: !219, line: 26, baseType: !108, size: 32)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7291, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7291, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7291, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7291, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7291, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7291, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7291, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7291, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!7302 = !{!7303, !7304, !7305}
!7303 = !DILocalVariable(name: "esf", arg: 1, scope: !7286, file: !7200, line: 82, type: !7203)
!7304 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7286, file: !7200, line: 82, type: !7289)
!7305 = !DILocalVariable(name: "reason", scope: !7286, file: !7200, line: 88, type: !32)
!7306 = !DILocation(line: 0, scope: !7286)
!7307 = !DILocation(line: 88, column: 35, scope: !7286)
!7308 = !DILocation(line: 108, column: 2, scope: !7286)
!7309 = !DILocation(line: 131, column: 1, scope: !7286)
!7310 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7200, file: !7200, line: 133, type: !7311, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !7313)
!7311 = !DISubroutineType(types: !7312)
!7312 = !{null, !106}
!7313 = !{!7314, !7315, !7316}
!7314 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7310, file: !7200, line: 133, type: !106)
!7315 = !DILocalVariable(name: "ssf_contents", scope: !7310, file: !7200, line: 135, type: !1004)
!7316 = !DILocalVariable(name: "oops_esf", scope: !7310, file: !7200, line: 136, type: !7205)
!7317 = !DILocation(line: 0, scope: !7310)
!7318 = !DILocation(line: 136, column: 2, scope: !7310)
!7319 = !DILocation(line: 136, column: 15, scope: !7310)
!7320 = !DILocation(line: 139, column: 22, scope: !7310)
!7321 = !DILocation(line: 139, column: 17, scope: !7310)
!7322 = !DILocation(line: 139, column: 20, scope: !7310)
!7323 = !DILocation(line: 141, column: 2, scope: !7310)
!7324 = !DILocation(line: 142, column: 2, scope: !7310)
!7325 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7326, file: !7326, line: 40, type: !7064, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !7327)
!7326 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7327 = !{!7328}
!7328 = !DILocalVariable(name: "irq", arg: 1, scope: !7325, file: !7326, line: 40, type: !32)
!7329 = !DILocation(line: 0, scope: !7325)
!7330 = !DILocation(line: 42, column: 2, scope: !7325)
!7331 = !DILocation(line: 43, column: 1, scope: !7325)
!7332 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !644, file: !644, line: 1684, type: !7333, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !7335)
!7333 = !DISubroutineType(types: !7334)
!7334 = !{null, !912}
!7335 = !{!7336}
!7336 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7332, file: !644, line: 1684, type: !912)
!7337 = !DILocation(line: 0, scope: !7332)
!7338 = !DILocation(line: 1686, column: 23, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7332, file: !644, line: 1686, column: 7)
!7340 = !DILocation(line: 1686, column: 7, scope: !7332)
!7341 = !DILocation(line: 1688, column: 5, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7339, file: !644, line: 1687, column: 3)
!7343 = !{i64 2151070770}
!7344 = !DILocation(line: 1689, column: 81, scope: !7342)
!7345 = !DILocation(line: 1689, column: 60, scope: !7342)
!7346 = !DILocation(line: 1689, column: 34, scope: !7342)
!7347 = !DILocation(line: 1689, column: 5, scope: !7342)
!7348 = !DILocation(line: 1689, column: 43, scope: !7342)
!7349 = !DILocation(line: 1690, column: 5, scope: !7342)
!7350 = !{i64 2151070884}
!7351 = !DILocation(line: 1691, column: 3, scope: !7342)
!7352 = !DILocation(line: 1692, column: 1, scope: !7332)
!7353 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7326, file: !7326, line: 45, type: !7064, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !7354)
!7354 = !{!7355}
!7355 = !DILocalVariable(name: "irq", arg: 1, scope: !7353, file: !7326, line: 45, type: !32)
!7356 = !DILocation(line: 0, scope: !7353)
!7357 = !DILocation(line: 47, column: 2, scope: !7353)
!7358 = !DILocation(line: 48, column: 1, scope: !7353)
!7359 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !644, file: !644, line: 1722, type: !7333, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !7360)
!7360 = !{!7361}
!7361 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7359, file: !644, line: 1722, type: !912)
!7362 = !DILocation(line: 0, scope: !7359)
!7363 = !DILocation(line: 1724, column: 23, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7359, file: !644, line: 1724, column: 7)
!7365 = !DILocation(line: 1724, column: 7, scope: !7359)
!7366 = !DILocation(line: 1726, column: 81, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7364, file: !644, line: 1725, column: 3)
!7368 = !DILocation(line: 1726, column: 60, scope: !7367)
!7369 = !DILocation(line: 1726, column: 34, scope: !7367)
!7370 = !DILocation(line: 1726, column: 5, scope: !7367)
!7371 = !DILocation(line: 1726, column: 43, scope: !7367)
!7372 = !DILocation(line: 271, column: 3, scope: !7373, inlinedAt: !7375)
!7373 = distinct !DISubprogram(name: "__DSB", scope: !7374, file: !7374, line: 269, type: !337, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !256)
!7374 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7375 = distinct !DILocation(line: 1727, column: 5, scope: !7367)
!7376 = !{i64 3525153}
!7377 = !DILocation(line: 260, column: 3, scope: !7378, inlinedAt: !7379)
!7378 = distinct !DISubprogram(name: "__ISB", scope: !7374, file: !7374, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !256)
!7379 = distinct !DILocation(line: 1728, column: 5, scope: !7367)
!7380 = !{i64 3524870}
!7381 = !DILocation(line: 1729, column: 3, scope: !7367)
!7382 = !DILocation(line: 1730, column: 1, scope: !7359)
!7383 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7326, file: !7326, line: 50, type: !7384, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !7386)
!7384 = !DISubroutineType(types: !7385)
!7385 = !{!107, !32}
!7386 = !{!7387}
!7387 = !DILocalVariable(name: "irq", arg: 1, scope: !7383, file: !7326, line: 50, type: !32)
!7388 = !DILocation(line: 0, scope: !7383)
!7389 = !DILocation(line: 52, column: 20, scope: !7383)
!7390 = !DILocation(line: 52, column: 9, scope: !7383)
!7391 = !DILocation(line: 52, column: 41, scope: !7383)
!7392 = !DILocation(line: 52, column: 39, scope: !7383)
!7393 = !DILocation(line: 52, column: 2, scope: !7383)
!7394 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7326, file: !7326, line: 64, type: !7395, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !7397)
!7395 = !DISubroutineType(types: !7396)
!7396 = !{null, !32, !32, !108}
!7397 = !{!7398, !7399, !7400}
!7398 = !DILocalVariable(name: "irq", arg: 1, scope: !7394, file: !7326, line: 64, type: !32)
!7399 = !DILocalVariable(name: "prio", arg: 2, scope: !7394, file: !7326, line: 64, type: !32)
!7400 = !DILocalVariable(name: "flags", arg: 3, scope: !7394, file: !7326, line: 64, type: !108)
!7401 = !DILocation(line: 0, scope: !7394)
!7402 = !DILocation(line: 83, column: 8, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7404, file: !7326, line: 82, column: 9)
!7404 = distinct !DILexicalBlock(scope: !7394, file: !7326, line: 76, column: 6)
!7405 = !DILocation(line: 95, column: 2, scope: !7394)
!7406 = !DILocation(line: 96, column: 1, scope: !7394)
!7407 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !644, file: !644, line: 1814, type: !7408, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !7410)
!7408 = !DISubroutineType(types: !7409)
!7409 = !{null, !912, !108}
!7410 = !{!7411, !7412}
!7411 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7407, file: !644, line: 1814, type: !912)
!7412 = !DILocalVariable(name: "priority", arg: 2, scope: !7407, file: !644, line: 1814, type: !108)
!7413 = !DILocation(line: 0, scope: !7407)
!7414 = !DILocation(line: 0, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7407, file: !644, line: 1816, column: 7)
!7416 = !DILocation(line: 1816, column: 7, scope: !7407)
!7417 = !DILocation(line: 1824, column: 1, scope: !7407)
!7418 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7326, file: !7326, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !7419)
!7419 = !{!7420}
!7420 = !DILocalVariable(name: "unused", arg: 1, scope: !7418, file: !7326, line: 155, type: !13)
!7421 = !DILocation(line: 0, scope: !7418)
!7422 = !DILocation(line: 159, column: 2, scope: !7418)
!7423 = !DILocation(line: 160, column: 1, scope: !7418)
!7424 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7425, file: !7425, line: 87, type: !337, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !256)
!7425 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7426 = !DILocation(line: 89, column: 2, scope: !7424)
!7427 = !DILocation(line: 90, column: 2, scope: !7424)
!7428 = !DILocation(line: 91, column: 1, scope: !7424)
!7429 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7425, file: !7425, line: 23, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!7430 = !DISubprogram(name: "z_arm_int_exit", scope: !7431, file: !7431, line: 153, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!7431 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7432 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7433, file: !7433, line: 256, type: !337, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !256)
!7433 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7434 = !DILocation(line: 258, column: 2, scope: !7432)
!7435 = !DILocation(line: 260, column: 2, scope: !7432)
!7436 = !DILocation(line: 262, column: 2, scope: !7432)
!7437 = !DILocation(line: 263, column: 2, scope: !7432)
!7438 = !DILocation(line: 267, column: 2, scope: !7432)
!7439 = !DILocation(line: 268, column: 2, scope: !7432)
!7440 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7433, file: !7433, line: 53, type: !337, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !256)
!7441 = !DILocation(line: 55, column: 12, scope: !7440)
!7442 = !DILocation(line: 271, column: 3, scope: !7443, inlinedAt: !7444)
!7443 = distinct !DISubprogram(name: "__DSB", scope: !7374, file: !7374, line: 269, type: !337, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !256)
!7444 = distinct !DILocation(line: 56, column: 2, scope: !7440)
!7445 = !{i64 3523824}
!7446 = !DILocation(line: 260, column: 3, scope: !7447, inlinedAt: !7448)
!7447 = distinct !DISubprogram(name: "__ISB", scope: !7374, file: !7374, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !256)
!7448 = distinct !DILocation(line: 57, column: 2, scope: !7440)
!7449 = !{i64 3523541}
!7450 = !DILocation(line: 58, column: 1, scope: !7440)
!7451 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7433, file: !7433, line: 96, type: !337, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !256)
!7452 = !DILocation(line: 103, column: 13, scope: !7451)
!7453 = !DILocation(line: 975, column: 3, scope: !7454, inlinedAt: !7459)
!7454 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7374, file: !7374, line: 971, type: !7455, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !7457)
!7455 = !DISubroutineType(types: !7456)
!7456 = !{!108}
!7457 = !{!7458}
!7458 = !DILocalVariable(name: "result", scope: !7454, file: !7374, line: 973, type: !108)
!7459 = distinct !DILocation(line: 189, column: 16, scope: !7451)
!7460 = !{i64 3544654}
!7461 = !DILocation(line: 0, scope: !7454, inlinedAt: !7459)
!7462 = !DILocation(line: 189, column: 32, scope: !7451)
!7463 = !DILocalVariable(name: "control", arg: 1, scope: !7464, file: !7374, line: 1001, type: !108)
!7464 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7374, file: !7374, line: 1001, type: !7465, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !7467)
!7465 = !DISubroutineType(types: !7466)
!7466 = !{null, !108}
!7467 = !{!7463}
!7468 = !DILocation(line: 0, scope: !7464, inlinedAt: !7469)
!7469 = distinct !DILocation(line: 189, column: 2, scope: !7451)
!7470 = !DILocation(line: 1003, column: 3, scope: !7464, inlinedAt: !7469)
!7471 = !{i64 3545374}
!7472 = !DILocation(line: 260, column: 3, scope: !7447, inlinedAt: !7473)
!7473 = distinct !DILocation(line: 1004, column: 3, scope: !7464, inlinedAt: !7469)
!7474 = !DILocation(line: 191, column: 1, scope: !7451)
!7475 = distinct !DISubprogram(name: "arch_swap", scope: !7476, file: !7476, line: 33, type: !7384, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2788, retainedNodes: !7477)
!7476 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7477 = !{!7478}
!7478 = !DILocalVariable(name: "key", arg: 1, scope: !7475, file: !7476, line: 33, type: !32)
!7479 = !DILocation(line: 0, scope: !7475)
!7480 = !DILocation(line: 36, column: 2, scope: !7475)
!7481 = !DILocation(line: 36, column: 17, scope: !7475)
!7482 = !DILocation(line: 36, column: 25, scope: !7475)
!7483 = !DILocation(line: 37, column: 37, scope: !7475)
!7484 = !DILocation(line: 37, column: 17, scope: !7475)
!7485 = !DILocation(line: 37, column: 35, scope: !7475)
!7486 = !DILocation(line: 41, column: 12, scope: !7475)
!7487 = !DILocalVariable(name: "key", arg: 1, scope: !7488, file: !7053, line: 84, type: !32)
!7488 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7053, file: !7053, line: 84, type: !7064, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2788, retainedNodes: !7489)
!7489 = !{!7487}
!7490 = !DILocation(line: 0, scope: !7488, inlinedAt: !7491)
!7491 = distinct !DILocation(line: 44, column: 2, scope: !7475)
!7492 = !DILocation(line: 95, column: 2, scope: !7488, inlinedAt: !7491)
!7493 = !{i64 2223146}
!7494 = !DILocation(line: 53, column: 9, scope: !7475)
!7495 = !DILocation(line: 53, column: 24, scope: !7475)
!7496 = !DILocation(line: 53, column: 2, scope: !7475)
!7497 = distinct !DISubprogram(name: "arch_new_thread", scope: !7498, file: !7498, line: 56, type: !7499, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !7606)
!7498 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7499 = !DISubroutineType(types: !7500)
!7500 = !{null, !7501, !7601, !283, !324, !106, !106, !106}
!7501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7502, size: 32)
!7502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !7503)
!7503 = !{!7504, !7562, !7574, !7575, !7576, !7577, !7583, !7596}
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7502, file: !168, line: 247, baseType: !7505, size: 384)
!7505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !7506)
!7506 = !{!7507, !7531, !7538, !7539, !7540, !7549, !7550, !7551}
!7507 = !DIDerivedType(tag: DW_TAG_member, scope: !7505, file: !168, line: 60, baseType: !7508, size: 64)
!7508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7505, file: !168, line: 60, size: 64, elements: !7509)
!7509 = !{!7510, !7525}
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7508, file: !168, line: 61, baseType: !7511, size: 64)
!7511 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !7512)
!7512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !7513)
!7513 = !{!7514, !7520}
!7514 = !DIDerivedType(tag: DW_TAG_member, scope: !7512, file: !151, line: 38, baseType: !7515, size: 32)
!7515 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7512, file: !151, line: 38, size: 32, elements: !7516)
!7516 = !{!7517, !7519}
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7515, file: !151, line: 39, baseType: !7518, size: 32)
!7518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7512, size: 32)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7515, file: !151, line: 40, baseType: !7518, size: 32)
!7520 = !DIDerivedType(tag: DW_TAG_member, scope: !7512, file: !151, line: 42, baseType: !7521, size: 32, offset: 32)
!7521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7512, file: !151, line: 42, size: 32, elements: !7522)
!7522 = !{!7523, !7524}
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7521, file: !151, line: 43, baseType: !7518, size: 32)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7521, file: !151, line: 44, baseType: !7518, size: 32)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7508, file: !168, line: 62, baseType: !7526, size: 64)
!7526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !7527)
!7527 = !{!7528}
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7526, file: !180, line: 50, baseType: !7529, size: 64)
!7529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7530, size: 64, elements: !185)
!7530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7526, size: 32)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7505, file: !168, line: 68, baseType: !7532, size: 32, offset: 64)
!7532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7533, size: 32)
!7533 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !7534)
!7534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !7535)
!7535 = !{!7536}
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7534, file: !146, line: 232, baseType: !7537, size: 64)
!7537 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !7512)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7505, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7505, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!7540 = !DIDerivedType(tag: DW_TAG_member, scope: !7505, file: !168, line: 90, baseType: !7541, size: 16, offset: 112)
!7541 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7505, file: !168, line: 90, size: 16, elements: !7542)
!7542 = !{!7543, !7548}
!7543 = !DIDerivedType(tag: DW_TAG_member, scope: !7541, file: !168, line: 91, baseType: !7544, size: 16)
!7544 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7541, file: !168, line: 91, size: 16, elements: !7545)
!7545 = !{!7546, !7547}
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7544, file: !168, line: 96, baseType: !200, size: 8)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7544, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7541, file: !168, line: 100, baseType: !126, size: 16)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7505, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7505, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7505, file: !168, line: 131, baseType: !7552, size: 192, offset: 192)
!7552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !7553)
!7553 = !{!7554, !7555, !7561}
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7552, file: !146, line: 245, baseType: !7511, size: 64)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7552, file: !146, line: 246, baseType: !7556, size: 32, offset: 64)
!7556 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !7557)
!7557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7558, size: 32)
!7558 = !DISubroutineType(types: !7559)
!7559 = !{null, !7560}
!7560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7552, size: 32)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7552, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7502, file: !168, line: 250, baseType: !7563, size: 288, offset: 384)
!7563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !7564)
!7564 = !{!7565, !7566, !7567, !7568, !7569, !7570, !7571, !7572, !7573}
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7563, file: !219, line: 26, baseType: !108, size: 32)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7563, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7563, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7563, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7563, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7563, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7563, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7563, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7563, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7502, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7502, file: !168, line: 256, baseType: !7533, size: 64, offset: 704)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7502, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7502, file: !168, line: 300, baseType: !7578, size: 96, offset: 800)
!7578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !7579)
!7579 = !{!7580, !7581, !7582}
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7578, file: !168, line: 153, baseType: !22, size: 32)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7578, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7578, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7502, file: !168, line: 325, baseType: !7584, size: 32, offset: 896)
!7584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7585, size: 32)
!7585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !7586)
!7586 = !{!7587, !7593, !7594}
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7585, file: !142, line: 5074, baseType: !7588, size: 96)
!7588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !7589)
!7589 = !{!7590, !7591, !7592}
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7588, file: !245, line: 57, baseType: !248, size: 32)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7588, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7588, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7585, file: !142, line: 5075, baseType: !7533, size: 64, offset: 96)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7585, file: !142, line: 5076, baseType: !7595, offset: 160)
!7595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7502, file: !168, line: 343, baseType: !7597, size: 64, offset: 928)
!7597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !7598)
!7598 = !{!7599, !7600}
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7597, file: !219, line: 63, baseType: !108, size: 32)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7597, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!7601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7602, size: 32)
!7602 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !317, line: 44, baseType: !7603)
!7603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !319, line: 47, size: 8, elements: !7604)
!7604 = !{!7605}
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7603, file: !319, line: 48, baseType: !123, size: 8)
!7606 = !{!7607, !7608, !7609, !7610, !7611, !7612, !7613, !7614}
!7607 = !DILocalVariable(name: "thread", arg: 1, scope: !7497, file: !7498, line: 56, type: !7501)
!7608 = !DILocalVariable(name: "stack", arg: 2, scope: !7497, file: !7498, line: 56, type: !7601)
!7609 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7497, file: !7498, line: 57, type: !283)
!7610 = !DILocalVariable(name: "entry", arg: 4, scope: !7497, file: !7498, line: 57, type: !324)
!7611 = !DILocalVariable(name: "p1", arg: 5, scope: !7497, file: !7498, line: 58, type: !106)
!7612 = !DILocalVariable(name: "p2", arg: 6, scope: !7497, file: !7498, line: 58, type: !106)
!7613 = !DILocalVariable(name: "p3", arg: 7, scope: !7497, file: !7498, line: 58, type: !106)
!7614 = !DILocalVariable(name: "iframe", scope: !7497, file: !7498, line: 60, type: !2819)
!7615 = !DILocation(line: 0, scope: !7497)
!7616 = !DILocation(line: 85, column: 11, scope: !7497)
!7617 = !DILocation(line: 93, column: 10, scope: !7497)
!7618 = !DILocation(line: 98, column: 13, scope: !7497)
!7619 = !DILocation(line: 100, column: 15, scope: !7497)
!7620 = !DILocation(line: 100, column: 10, scope: !7497)
!7621 = !DILocation(line: 100, column: 13, scope: !7497)
!7622 = !DILocation(line: 101, column: 15, scope: !7497)
!7623 = !DILocation(line: 101, column: 10, scope: !7497)
!7624 = !DILocation(line: 101, column: 13, scope: !7497)
!7625 = !DILocation(line: 102, column: 15, scope: !7497)
!7626 = !DILocation(line: 102, column: 10, scope: !7497)
!7627 = !DILocation(line: 102, column: 13, scope: !7497)
!7628 = !DILocation(line: 103, column: 15, scope: !7497)
!7629 = !DILocation(line: 103, column: 10, scope: !7497)
!7630 = !DILocation(line: 103, column: 13, scope: !7497)
!7631 = !DILocation(line: 106, column: 10, scope: !7497)
!7632 = !DILocation(line: 106, column: 15, scope: !7497)
!7633 = !DILocation(line: 122, column: 29, scope: !7497)
!7634 = !DILocation(line: 122, column: 23, scope: !7497)
!7635 = !DILocation(line: 122, column: 27, scope: !7497)
!7636 = !DILocation(line: 123, column: 15, scope: !7497)
!7637 = !DILocation(line: 123, column: 23, scope: !7497)
!7638 = !DILocation(line: 143, column: 1, scope: !7497)
!7639 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7498, file: !7498, line: 385, type: !7640, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !7643)
!7640 = !DISubroutineType(types: !7641)
!7641 = !{!108, !7642, !7642}
!7642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!7643 = !{!7644, !7645, !7646, !7649}
!7644 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7639, file: !7498, line: 385, type: !7642)
!7645 = !DILocalVariable(name: "psp", arg: 2, scope: !7639, file: !7498, line: 385, type: !7642)
!7646 = !DILocalVariable(name: "thread", scope: !7639, file: !7498, line: 388, type: !7647)
!7647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7648, size: 32)
!7648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7502)
!7649 = !DILocalVariable(name: "guard_len", scope: !7639, file: !7498, line: 405, type: !108)
!7650 = !DILocation(line: 0, scope: !7639)
!7651 = !DILocation(line: 388, column: 34, scope: !7639)
!7652 = !DILocation(line: 390, column: 13, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7639, file: !7498, line: 390, column: 6)
!7654 = !DILocation(line: 390, column: 6, scope: !7639)
!7655 = !DILocation(line: 438, column: 6, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7639, file: !7498, line: 438, column: 6)
!7657 = !DILocation(line: 438, column: 6, scope: !7639)
!7658 = !DILocation(line: 442, column: 3, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7656, file: !7498, line: 440, column: 22)
!7660 = !DILocation(line: 455, column: 1, scope: !7639)
!7661 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7498, file: !7498, line: 530, type: !7662, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !7664)
!7662 = !DISubroutineType(types: !7663)
!7663 = !{null, !7501, !283, !324}
!7664 = !{!7665, !7666, !7667}
!7665 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7661, file: !7498, line: 530, type: !7501)
!7666 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7661, file: !7498, line: 530, type: !283)
!7667 = !DILocalVariable(name: "_main", arg: 3, scope: !7661, file: !7498, line: 531, type: !324)
!7668 = !DILocation(line: 0, scope: !7661)
!7669 = !DILocation(line: 535, column: 11, scope: !7661)
!7670 = !DILocation(line: 560, column: 2, scope: !7661)
!7671 = !DILocation(line: 576, column: 2, scope: !7661)
!7672 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7673 = !DILocation(line: 603, column: 2, scope: !7661)
!7674 = distinct !DISubprogram(name: "z_arm_fault", scope: !7675, file: !7675, line: 1036, type: !7676, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7691)
!7675 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7676 = !DISubroutineType(types: !7677)
!7677 = !{null, !108, !108, !108, !7678}
!7678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7679, size: 32)
!7679 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !219, line: 37, baseType: !7680)
!7680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !7681)
!7681 = !{!7682, !7683, !7684, !7685, !7686, !7687, !7688, !7689, !7690}
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7680, file: !219, line: 26, baseType: !108, size: 32)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7680, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7680, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7680, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7680, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7680, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7680, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7680, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7680, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!7691 = !{!7692, !7693, !7694, !7695, !7696, !7697, !7698, !7699, !7700, !7701}
!7692 = !DILocalVariable(name: "msp", arg: 1, scope: !7674, file: !7675, line: 1036, type: !108)
!7693 = !DILocalVariable(name: "psp", arg: 2, scope: !7674, file: !7675, line: 1036, type: !108)
!7694 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7674, file: !7675, line: 1036, type: !108)
!7695 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7674, file: !7675, line: 1037, type: !7678)
!7696 = !DILocalVariable(name: "reason", scope: !7674, file: !7675, line: 1039, type: !108)
!7697 = !DILocalVariable(name: "fault", scope: !7674, file: !7675, line: 1040, type: !107)
!7698 = !DILocalVariable(name: "recoverable", scope: !7674, file: !7675, line: 1041, type: !136)
!7699 = !DILocalVariable(name: "nested_exc", scope: !7674, file: !7675, line: 1041, type: !136)
!7700 = !DILocalVariable(name: "esf", scope: !7674, file: !7675, line: 1042, type: !2887)
!7701 = !DILocalVariable(name: "esf_copy", scope: !7674, file: !7675, line: 1047, type: !2888)
!7702 = !DILocation(line: 0, scope: !7674)
!7703 = !DILocation(line: 1040, column: 19, scope: !7674)
!7704 = !DILocation(line: 1040, column: 24, scope: !7674)
!7705 = !DILocation(line: 1041, column: 2, scope: !7674)
!7706 = !DILocation(line: 1047, column: 2, scope: !7674)
!7707 = !DILocation(line: 1047, column: 15, scope: !7674)
!7708 = !DILocalVariable(name: "key", arg: 1, scope: !7709, file: !7053, line: 84, type: !32)
!7709 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7053, file: !7053, line: 84, type: !7064, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7710)
!7710 = !{!7708}
!7711 = !DILocation(line: 0, scope: !7709, inlinedAt: !7712)
!7712 = distinct !DILocation(line: 1050, column: 2, scope: !7674)
!7713 = !DILocation(line: 95, column: 2, scope: !7709, inlinedAt: !7712)
!7714 = !{i64 2256390}
!7715 = !DILocation(line: 1055, column: 9, scope: !7674)
!7716 = !DILocation(line: 1063, column: 11, scope: !7674)
!7717 = !DILocation(line: 1064, column: 6, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7674, file: !7675, line: 1064, column: 6)
!7719 = !{i8 0, i8 2}
!7720 = !DILocation(line: 1064, column: 6, scope: !7674)
!7721 = !DILocation(line: 1070, column: 20, scope: !7674)
!7722 = !DILocation(line: 1070, column: 2, scope: !7674)
!7723 = !DILocation(line: 1089, column: 6, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7674, file: !7675, line: 1089, column: 6)
!7725 = !DILocation(line: 0, scope: !7724)
!7726 = !DILocation(line: 1089, column: 6, scope: !7674)
!7727 = !DILocation(line: 1090, column: 28, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7729, file: !7675, line: 1090, column: 7)
!7729 = distinct !DILexicalBlock(scope: !7724, file: !7675, line: 1089, column: 18)
!7730 = !DILocation(line: 1090, column: 44, scope: !7728)
!7731 = !DILocation(line: 1090, column: 7, scope: !7729)
!7732 = !DILocation(line: 1091, column: 24, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7728, file: !7675, line: 1090, column: 50)
!7734 = !DILocation(line: 1092, column: 3, scope: !7733)
!7735 = !DILocation(line: 1094, column: 23, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7724, file: !7675, line: 1093, column: 9)
!7737 = !DILocation(line: 1097, column: 2, scope: !7674)
!7738 = !DILocation(line: 1098, column: 1, scope: !7674)
!7739 = distinct !DISubprogram(name: "get_esf", scope: !7675, file: !7675, line: 894, type: !7740, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7743)
!7740 = !DISubroutineType(types: !7741)
!7741 = !{!2887, !108, !108, !108, !7742}
!7742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!7743 = !{!7744, !7745, !7746, !7747, !7748, !7749}
!7744 = !DILocalVariable(name: "msp", arg: 1, scope: !7739, file: !7675, line: 894, type: !108)
!7745 = !DILocalVariable(name: "psp", arg: 2, scope: !7739, file: !7675, line: 894, type: !108)
!7746 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7739, file: !7675, line: 894, type: !108)
!7747 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7739, file: !7675, line: 895, type: !7742)
!7748 = !DILocalVariable(name: "alternative_state_exc", scope: !7739, file: !7675, line: 897, type: !136)
!7749 = !DILocalVariable(name: "ptr_esf", scope: !7739, file: !7675, line: 898, type: !2887)
!7750 = !DILocation(line: 0, scope: !7739)
!7751 = !DILocation(line: 900, column: 14, scope: !7739)
!7752 = !DILocation(line: 902, column: 49, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7739, file: !7675, line: 902, column: 6)
!7754 = !DILocation(line: 902, column: 6, scope: !7739)
!7755 = !DILocation(line: 983, column: 44, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7739, file: !7675, line: 983, column: 6)
!7757 = !DILocation(line: 985, column: 3, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !7675, line: 985, column: 3)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !7675, line: 985, column: 3)
!7760 = distinct !DILexicalBlock(scope: !7761, file: !7675, line: 985, column: 3)
!7761 = distinct !DILexicalBlock(scope: !7762, file: !7675, line: 985, column: 3)
!7762 = distinct !DILexicalBlock(scope: !7756, file: !7675, line: 984, column: 47)
!7763 = !DILocation(line: 986, column: 3, scope: !7762)
!7764 = !DILocation(line: 983, column: 18, scope: !7756)
!7765 = !DILocation(line: 991, column: 7, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7767, file: !7675, line: 990, column: 30)
!7767 = distinct !DILexicalBlock(scope: !7739, file: !7675, line: 990, column: 6)
!7768 = !DILocation(line: 998, column: 16, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7770, file: !7675, line: 995, column: 10)
!7770 = distinct !DILexicalBlock(scope: !7766, file: !7675, line: 991, column: 7)
!7771 = !DILocation(line: 1002, column: 2, scope: !7739)
!7772 = !DILocation(line: 1003, column: 1, scope: !7739)
!7773 = distinct !DISubprogram(name: "fault_handle", scope: !7675, file: !7675, line: 786, type: !7774, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7776)
!7774 = !DISubroutineType(types: !7775)
!7775 = !{!108, !2887, !107, !7742}
!7776 = !{!7777, !7778, !7779, !7780}
!7777 = !DILocalVariable(name: "esf", arg: 1, scope: !7773, file: !7675, line: 786, type: !2887)
!7778 = !DILocalVariable(name: "fault", arg: 2, scope: !7773, file: !7675, line: 786, type: !107)
!7779 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7773, file: !7675, line: 786, type: !7742)
!7780 = !DILocalVariable(name: "reason", scope: !7773, file: !7675, line: 788, type: !108)
!7781 = !DILocation(line: 0, scope: !7773)
!7782 = !DILocation(line: 790, column: 15, scope: !7773)
!7783 = !DILocation(line: 792, column: 2, scope: !7773)
!7784 = !DILocation(line: 794, column: 12, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7773, file: !7675, line: 792, column: 17)
!7786 = !DILocation(line: 795, column: 3, scope: !7785)
!7787 = !DILocation(line: 800, column: 12, scope: !7785)
!7788 = !DILocation(line: 801, column: 3, scope: !7785)
!7789 = !DILocation(line: 803, column: 12, scope: !7785)
!7790 = !DILocation(line: 804, column: 3, scope: !7785)
!7791 = !DILocation(line: 806, column: 12, scope: !7785)
!7792 = !DILocation(line: 807, column: 3, scope: !7785)
!7793 = !DILocation(line: 814, column: 3, scope: !7785)
!7794 = !DILocation(line: 815, column: 3, scope: !7785)
!7795 = !DILocation(line: 820, column: 3, scope: !7785)
!7796 = !DILocation(line: 821, column: 3, scope: !7785)
!7797 = !DILocation(line: 829, column: 2, scope: !7773)
!7798 = distinct !DISubprogram(name: "hard_fault", scope: !7675, file: !7675, line: 709, type: !7799, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7801)
!7799 = !DISubroutineType(types: !7800)
!7800 = !{!108, !2887, !7742}
!7801 = !{!7802, !7803, !7804}
!7802 = !DILocalVariable(name: "esf", arg: 1, scope: !7798, file: !7675, line: 709, type: !2887)
!7803 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7798, file: !7675, line: 709, type: !7742)
!7804 = !DILocalVariable(name: "reason", scope: !7798, file: !7675, line: 711, type: !108)
!7805 = !DILocation(line: 0, scope: !7798)
!7806 = !DILocation(line: 713, column: 2, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7808, file: !7675, line: 713, column: 2)
!7808 = distinct !DILexicalBlock(scope: !7809, file: !7675, line: 713, column: 2)
!7809 = distinct !DILexicalBlock(scope: !7810, file: !7675, line: 713, column: 2)
!7810 = distinct !DILexicalBlock(scope: !7798, file: !7675, line: 713, column: 2)
!7811 = !DILocation(line: 732, column: 15, scope: !7798)
!7812 = !DILocation(line: 734, column: 12, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7798, file: !7675, line: 734, column: 6)
!7814 = !DILocation(line: 734, column: 17, scope: !7813)
!7815 = !DILocation(line: 734, column: 41, scope: !7813)
!7816 = !DILocation(line: 734, column: 6, scope: !7798)
!7817 = !DILocation(line: 735, column: 3, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7819, file: !7675, line: 735, column: 3)
!7819 = distinct !DILexicalBlock(scope: !7820, file: !7675, line: 735, column: 3)
!7820 = distinct !DILexicalBlock(scope: !7821, file: !7675, line: 735, column: 3)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !7675, line: 735, column: 3)
!7822 = distinct !DILexicalBlock(scope: !7813, file: !7675, line: 734, column: 47)
!7823 = !DILocation(line: 736, column: 2, scope: !7822)
!7824 = !DILocation(line: 736, column: 19, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7813, file: !7675, line: 736, column: 13)
!7826 = !DILocation(line: 736, column: 49, scope: !7825)
!7827 = !DILocation(line: 736, column: 13, scope: !7813)
!7828 = !DILocation(line: 737, column: 3, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7830, file: !7675, line: 737, column: 3)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !7675, line: 737, column: 3)
!7831 = distinct !DILexicalBlock(scope: !7832, file: !7675, line: 737, column: 3)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !7675, line: 737, column: 3)
!7833 = distinct !DILexicalBlock(scope: !7825, file: !7675, line: 736, column: 55)
!7834 = !DILocation(line: 738, column: 2, scope: !7833)
!7835 = !DILocation(line: 738, column: 19, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7825, file: !7675, line: 738, column: 13)
!7837 = !DILocation(line: 738, column: 24, scope: !7836)
!7838 = !DILocation(line: 738, column: 47, scope: !7836)
!7839 = !DILocation(line: 738, column: 13, scope: !7825)
!7840 = !DILocation(line: 739, column: 3, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7842, file: !7675, line: 739, column: 3)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !7675, line: 739, column: 3)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !7675, line: 739, column: 3)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !7675, line: 739, column: 3)
!7845 = distinct !DILexicalBlock(scope: !7836, file: !7675, line: 738, column: 53)
!7846 = !DILocation(line: 740, column: 7, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7845, file: !7675, line: 740, column: 7)
!7848 = !DILocation(line: 740, column: 7, scope: !7845)
!7849 = !DILocation(line: 741, column: 4, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7851, file: !7675, line: 741, column: 4)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !7675, line: 741, column: 4)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !7675, line: 741, column: 4)
!7853 = distinct !DILexicalBlock(scope: !7854, file: !7675, line: 741, column: 4)
!7854 = distinct !DILexicalBlock(scope: !7847, file: !7675, line: 740, column: 38)
!7855 = !DILocation(line: 742, column: 24, scope: !7854)
!7856 = !DILocation(line: 743, column: 3, scope: !7854)
!7857 = !DILocation(line: 743, column: 20, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7847, file: !7675, line: 743, column: 14)
!7859 = !DILocation(line: 743, column: 25, scope: !7858)
!7860 = !DILocation(line: 743, column: 52, scope: !7858)
!7861 = !DILocation(line: 743, column: 14, scope: !7847)
!7862 = !DILocation(line: 744, column: 13, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7858, file: !7675, line: 743, column: 58)
!7864 = !DILocation(line: 745, column: 3, scope: !7863)
!7865 = !DILocation(line: 745, column: 20, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7858, file: !7675, line: 745, column: 14)
!7867 = !DILocation(line: 745, column: 25, scope: !7866)
!7868 = !DILocation(line: 745, column: 52, scope: !7866)
!7869 = !DILocation(line: 745, column: 14, scope: !7858)
!7870 = !DILocation(line: 746, column: 13, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7866, file: !7675, line: 745, column: 58)
!7872 = !DILocation(line: 747, column: 3, scope: !7871)
!7873 = !DILocation(line: 747, column: 20, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7866, file: !7675, line: 747, column: 14)
!7875 = !DILocation(line: 747, column: 52, scope: !7874)
!7876 = !DILocation(line: 747, column: 14, scope: !7866)
!7877 = !DILocation(line: 748, column: 13, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7874, file: !7675, line: 747, column: 58)
!7879 = !DILocation(line: 753, column: 3, scope: !7878)
!7880 = !DILocation(line: 766, column: 2, scope: !7798)
!7881 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7675, file: !7675, line: 229, type: !7774, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7882)
!7882 = !{!7883, !7884, !7885, !7886, !7887, !7888, !7891}
!7883 = !DILocalVariable(name: "esf", arg: 1, scope: !7881, file: !7675, line: 229, type: !2887)
!7884 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7881, file: !7675, line: 229, type: !107)
!7885 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7881, file: !7675, line: 230, type: !7742)
!7886 = !DILocalVariable(name: "reason", scope: !7881, file: !7675, line: 232, type: !108)
!7887 = !DILocalVariable(name: "mmfar", scope: !7881, file: !7675, line: 233, type: !108)
!7888 = !DILocalVariable(name: "temp", scope: !7889, file: !7675, line: 254, type: !108)
!7889 = distinct !DILexicalBlock(scope: !7890, file: !7675, line: 244, column: 48)
!7890 = distinct !DILexicalBlock(scope: !7881, file: !7675, line: 244, column: 6)
!7891 = !DILocalVariable(name: "min_stack_ptr", scope: !7892, file: !7675, line: 309, type: !108)
!7892 = distinct !DILexicalBlock(scope: !7893, file: !7675, line: 308, column: 43)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !7675, line: 308, column: 7)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !7675, line: 289, column: 40)
!7895 = distinct !DILexicalBlock(scope: !7881, file: !7675, line: 288, column: 6)
!7896 = !DILocation(line: 0, scope: !7881)
!7897 = !DILocation(line: 235, column: 2, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7899, file: !7675, line: 235, column: 2)
!7899 = distinct !DILexicalBlock(scope: !7900, file: !7675, line: 235, column: 2)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !7675, line: 235, column: 2)
!7901 = distinct !DILexicalBlock(scope: !7881, file: !7675, line: 235, column: 2)
!7902 = !DILocation(line: 237, column: 12, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7881, file: !7675, line: 237, column: 6)
!7904 = !DILocation(line: 237, column: 17, scope: !7903)
!7905 = !DILocation(line: 237, column: 41, scope: !7903)
!7906 = !DILocation(line: 237, column: 6, scope: !7881)
!7907 = !DILocation(line: 238, column: 3, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7909, file: !7675, line: 238, column: 3)
!7909 = distinct !DILexicalBlock(scope: !7910, file: !7675, line: 238, column: 3)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !7675, line: 238, column: 3)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !7675, line: 238, column: 3)
!7912 = distinct !DILexicalBlock(scope: !7903, file: !7675, line: 237, column: 47)
!7913 = !DILocation(line: 240, column: 2, scope: !7912)
!7914 = !DILocation(line: 241, column: 12, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7881, file: !7675, line: 241, column: 6)
!7916 = !DILocation(line: 241, column: 17, scope: !7915)
!7917 = !DILocation(line: 241, column: 43, scope: !7915)
!7918 = !DILocation(line: 241, column: 6, scope: !7881)
!7919 = !DILocation(line: 242, column: 3, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !7675, line: 242, column: 3)
!7921 = distinct !DILexicalBlock(scope: !7922, file: !7675, line: 242, column: 3)
!7922 = distinct !DILexicalBlock(scope: !7923, file: !7675, line: 242, column: 3)
!7923 = distinct !DILexicalBlock(scope: !7924, file: !7675, line: 242, column: 3)
!7924 = distinct !DILexicalBlock(scope: !7915, file: !7675, line: 241, column: 49)
!7925 = !DILocation(line: 243, column: 2, scope: !7924)
!7926 = !DILocation(line: 244, column: 12, scope: !7890)
!7927 = !DILocation(line: 244, column: 17, scope: !7890)
!7928 = !DILocation(line: 244, column: 42, scope: !7890)
!7929 = !DILocation(line: 244, column: 6, scope: !7881)
!7930 = !DILocation(line: 245, column: 3, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7932, file: !7675, line: 245, column: 3)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !7675, line: 245, column: 3)
!7933 = distinct !DILexicalBlock(scope: !7934, file: !7675, line: 245, column: 3)
!7934 = distinct !DILexicalBlock(scope: !7889, file: !7675, line: 245, column: 3)
!7935 = !DILocation(line: 254, column: 24, scope: !7889)
!7936 = !DILocation(line: 0, scope: !7889)
!7937 = !DILocation(line: 256, column: 13, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7889, file: !7675, line: 256, column: 7)
!7939 = !DILocation(line: 256, column: 18, scope: !7938)
!7940 = !DILocation(line: 256, column: 44, scope: !7938)
!7941 = !DILocation(line: 256, column: 7, scope: !7889)
!7942 = !DILocation(line: 258, column: 4, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7944, file: !7675, line: 258, column: 4)
!7944 = distinct !DILexicalBlock(scope: !7945, file: !7675, line: 258, column: 4)
!7945 = distinct !DILexicalBlock(scope: !7946, file: !7675, line: 258, column: 4)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !7675, line: 258, column: 4)
!7947 = distinct !DILexicalBlock(scope: !7938, file: !7675, line: 256, column: 50)
!7948 = !DILocation(line: 259, column: 24, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7947, file: !7675, line: 259, column: 8)
!7950 = !DILocation(line: 259, column: 8, scope: !7947)
!7951 = !DILocation(line: 261, column: 15, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7949, file: !7675, line: 259, column: 30)
!7953 = !DILocation(line: 262, column: 4, scope: !7952)
!7954 = !DILocation(line: 265, column: 12, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7881, file: !7675, line: 265, column: 6)
!7956 = !DILocation(line: 265, column: 17, scope: !7955)
!7957 = !DILocation(line: 265, column: 42, scope: !7955)
!7958 = !DILocation(line: 265, column: 6, scope: !7881)
!7959 = !DILocation(line: 266, column: 3, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7961, file: !7675, line: 266, column: 3)
!7961 = distinct !DILexicalBlock(scope: !7962, file: !7675, line: 266, column: 3)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !7675, line: 266, column: 3)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !7675, line: 266, column: 3)
!7964 = distinct !DILexicalBlock(scope: !7955, file: !7675, line: 265, column: 48)
!7965 = !DILocation(line: 267, column: 2, scope: !7964)
!7966 = !DILocation(line: 269, column: 12, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7881, file: !7675, line: 269, column: 6)
!7968 = !DILocation(line: 269, column: 17, scope: !7967)
!7969 = !DILocation(line: 269, column: 41, scope: !7967)
!7970 = !DILocation(line: 269, column: 6, scope: !7881)
!7971 = !DILocation(line: 270, column: 3, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7973, file: !7675, line: 270, column: 3)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !7675, line: 270, column: 3)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !7675, line: 270, column: 3)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !7675, line: 270, column: 3)
!7976 = distinct !DILexicalBlock(scope: !7967, file: !7675, line: 269, column: 47)
!7977 = !DILocation(line: 272, column: 2, scope: !7976)
!7978 = !DILocation(line: 288, column: 12, scope: !7895)
!7979 = !DILocation(line: 288, column: 17, scope: !7895)
!7980 = !DILocation(line: 288, column: 41, scope: !7895)
!7981 = !DILocation(line: 289, column: 9, scope: !7895)
!7982 = !DILocation(line: 289, column: 14, scope: !7895)
!7983 = !DILocation(line: 288, column: 6, scope: !7881)
!7984 = !DILocation(line: 308, column: 12, scope: !7893)
!7985 = !DILocation(line: 308, column: 17, scope: !7893)
!7986 = !DILocation(line: 308, column: 7, scope: !7894)
!7987 = !DILocation(line: 310, column: 6, scope: !7892)
!7988 = !DILocation(line: 309, column: 29, scope: !7892)
!7989 = !DILocation(line: 0, scope: !7892)
!7990 = !DILocation(line: 312, column: 8, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7892, file: !7675, line: 312, column: 8)
!7992 = !DILocation(line: 312, column: 8, scope: !7892)
!7993 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7994, file: !7374, line: 1099, type: !108)
!7994 = distinct !DISubprogram(name: "__set_PSP", scope: !7374, file: !7374, line: 1099, type: !7465, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7995)
!7995 = !{!7993}
!7996 = !DILocation(line: 0, scope: !7994, inlinedAt: !7997)
!7997 = distinct !DILocation(line: 338, column: 5, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7991, file: !7675, line: 312, column: 23)
!7999 = !DILocation(line: 1101, column: 3, scope: !7994, inlinedAt: !7997)
!8000 = !{i64 3574793}
!8001 = !DILocation(line: 341, column: 4, scope: !7998)
!8002 = !DILocation(line: 360, column: 12, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7881, file: !7675, line: 360, column: 6)
!8004 = !DILocation(line: 360, column: 17, scope: !8003)
!8005 = !DILocation(line: 360, column: 41, scope: !8003)
!8006 = !DILocation(line: 360, column: 6, scope: !7881)
!8007 = !DILocation(line: 361, column: 14, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !8003, file: !7675, line: 360, column: 47)
!8009 = !DILocation(line: 362, column: 2, scope: !8008)
!8010 = !DILocation(line: 366, column: 12, scope: !7881)
!8011 = !DILocation(line: 369, column: 15, scope: !7881)
!8012 = !DILocation(line: 371, column: 2, scope: !7881)
!8013 = distinct !DISubprogram(name: "bus_fault", scope: !7675, file: !7675, line: 383, type: !8014, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !8016)
!8014 = !DISubroutineType(types: !8015)
!8015 = !{!107, !2887, !107, !7742}
!8016 = !{!8017, !8018, !8019, !8020, !8021}
!8017 = !DILocalVariable(name: "esf", arg: 1, scope: !8013, file: !7675, line: 383, type: !2887)
!8018 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8013, file: !7675, line: 383, type: !107)
!8019 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8013, file: !7675, line: 383, type: !7742)
!8020 = !DILocalVariable(name: "reason", scope: !8013, file: !7675, line: 385, type: !108)
!8021 = !DILocalVariable(name: "bfar", scope: !8022, file: !7675, line: 405, type: !108)
!8022 = distinct !DILexicalBlock(scope: !8023, file: !7675, line: 395, column: 42)
!8023 = distinct !DILexicalBlock(scope: !8013, file: !7675, line: 395, column: 6)
!8024 = !DILocation(line: 0, scope: !8013)
!8025 = !DILocation(line: 387, column: 2, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8027, file: !7675, line: 387, column: 2)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !7675, line: 387, column: 2)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !7675, line: 387, column: 2)
!8029 = distinct !DILexicalBlock(scope: !8013, file: !7675, line: 387, column: 2)
!8030 = !DILocation(line: 389, column: 11, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8013, file: !7675, line: 389, column: 6)
!8032 = !DILocation(line: 389, column: 16, scope: !8031)
!8033 = !DILocation(line: 389, column: 6, scope: !8013)
!8034 = !DILocation(line: 390, column: 3, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8036, file: !7675, line: 390, column: 3)
!8036 = distinct !DILexicalBlock(scope: !8037, file: !7675, line: 390, column: 3)
!8037 = distinct !DILexicalBlock(scope: !8038, file: !7675, line: 390, column: 3)
!8038 = distinct !DILexicalBlock(scope: !8039, file: !7675, line: 390, column: 3)
!8039 = distinct !DILexicalBlock(scope: !8031, file: !7675, line: 389, column: 39)
!8040 = !DILocation(line: 391, column: 2, scope: !8039)
!8041 = !DILocation(line: 392, column: 11, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8013, file: !7675, line: 392, column: 6)
!8043 = !DILocation(line: 392, column: 16, scope: !8042)
!8044 = !DILocation(line: 392, column: 6, scope: !8013)
!8045 = !DILocation(line: 393, column: 3, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8047, file: !7675, line: 393, column: 3)
!8047 = distinct !DILexicalBlock(scope: !8048, file: !7675, line: 393, column: 3)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !7675, line: 393, column: 3)
!8049 = distinct !DILexicalBlock(scope: !8050, file: !7675, line: 393, column: 3)
!8050 = distinct !DILexicalBlock(scope: !8042, file: !7675, line: 392, column: 41)
!8051 = !DILocation(line: 394, column: 2, scope: !8050)
!8052 = !DILocation(line: 395, column: 11, scope: !8023)
!8053 = !DILocation(line: 395, column: 16, scope: !8023)
!8054 = !DILocation(line: 395, column: 6, scope: !8013)
!8055 = !DILocation(line: 396, column: 3, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8057, file: !7675, line: 396, column: 3)
!8057 = distinct !DILexicalBlock(scope: !8058, file: !7675, line: 396, column: 3)
!8058 = distinct !DILexicalBlock(scope: !8059, file: !7675, line: 396, column: 3)
!8059 = distinct !DILexicalBlock(scope: !8022, file: !7675, line: 396, column: 3)
!8060 = !DILocation(line: 405, column: 3, scope: !8022)
!8061 = !DILocation(line: 0, scope: !8022)
!8062 = !DILocation(line: 407, column: 13, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8022, file: !7675, line: 407, column: 7)
!8064 = !DILocation(line: 407, column: 18, scope: !8063)
!8065 = !DILocation(line: 407, column: 44, scope: !8063)
!8066 = !DILocation(line: 407, column: 7, scope: !8022)
!8067 = !DILocation(line: 408, column: 4, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8069, file: !7675, line: 408, column: 4)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !7675, line: 408, column: 4)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !7675, line: 408, column: 4)
!8071 = distinct !DILexicalBlock(scope: !8072, file: !7675, line: 408, column: 4)
!8072 = distinct !DILexicalBlock(scope: !8063, file: !7675, line: 407, column: 50)
!8073 = !DILocation(line: 409, column: 24, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8072, file: !7675, line: 409, column: 8)
!8075 = !DILocation(line: 409, column: 8, scope: !8072)
!8076 = !DILocation(line: 411, column: 15, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8074, file: !7675, line: 409, column: 30)
!8078 = !DILocation(line: 412, column: 4, scope: !8077)
!8079 = !DILocation(line: 415, column: 11, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8013, file: !7675, line: 415, column: 6)
!8081 = !DILocation(line: 415, column: 16, scope: !8080)
!8082 = !DILocation(line: 415, column: 6, scope: !8013)
!8083 = !DILocation(line: 416, column: 3, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !7675, line: 416, column: 3)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !7675, line: 416, column: 3)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !7675, line: 416, column: 3)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !7675, line: 416, column: 3)
!8088 = distinct !DILexicalBlock(scope: !8080, file: !7675, line: 415, column: 44)
!8089 = !DILocation(line: 417, column: 2, scope: !8088)
!8090 = !DILocation(line: 418, column: 12, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8013, file: !7675, line: 418, column: 6)
!8092 = !DILocation(line: 418, column: 17, scope: !8091)
!8093 = !DILocation(line: 418, column: 41, scope: !8091)
!8094 = !DILocation(line: 418, column: 6, scope: !8013)
!8095 = !DILocation(line: 423, column: 18, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8091, file: !7675, line: 423, column: 13)
!8097 = !DILocation(line: 423, column: 23, scope: !8096)
!8098 = !DILocation(line: 423, column: 13, scope: !8091)
!8099 = !DILocation(line: 0, scope: !8091)
!8100 = !DILocation(line: 524, column: 12, scope: !8013)
!8101 = !DILocation(line: 526, column: 15, scope: !8013)
!8102 = !DILocation(line: 528, column: 2, scope: !8013)
!8103 = distinct !DISubprogram(name: "usage_fault", scope: !7675, file: !7675, line: 539, type: !8104, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !8108)
!8104 = !DISubroutineType(types: !8105)
!8105 = !{!108, !8106}
!8106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8107, size: 32)
!8107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2888)
!8108 = !{!8109, !8110}
!8109 = !DILocalVariable(name: "esf", arg: 1, scope: !8103, file: !7675, line: 539, type: !8106)
!8110 = !DILocalVariable(name: "reason", scope: !8103, file: !7675, line: 541, type: !108)
!8111 = !DILocation(line: 0, scope: !8103)
!8112 = !DILocation(line: 543, column: 2, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8114, file: !7675, line: 543, column: 2)
!8114 = distinct !DILexicalBlock(scope: !8115, file: !7675, line: 543, column: 2)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !7675, line: 543, column: 2)
!8116 = distinct !DILexicalBlock(scope: !8103, file: !7675, line: 543, column: 2)
!8117 = !DILocation(line: 546, column: 12, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8103, file: !7675, line: 546, column: 6)
!8119 = !DILocation(line: 546, column: 17, scope: !8118)
!8120 = !DILocation(line: 546, column: 43, scope: !8118)
!8121 = !DILocation(line: 546, column: 6, scope: !8103)
!8122 = !DILocation(line: 547, column: 3, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8124, file: !7675, line: 547, column: 3)
!8124 = distinct !DILexicalBlock(scope: !8125, file: !7675, line: 547, column: 3)
!8125 = distinct !DILexicalBlock(scope: !8126, file: !7675, line: 547, column: 3)
!8126 = distinct !DILexicalBlock(scope: !8127, file: !7675, line: 547, column: 3)
!8127 = distinct !DILexicalBlock(scope: !8118, file: !7675, line: 546, column: 49)
!8128 = !DILocation(line: 548, column: 2, scope: !8127)
!8129 = !DILocation(line: 549, column: 12, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8103, file: !7675, line: 549, column: 6)
!8131 = !DILocation(line: 549, column: 17, scope: !8130)
!8132 = !DILocation(line: 549, column: 43, scope: !8130)
!8133 = !DILocation(line: 549, column: 6, scope: !8103)
!8134 = !DILocation(line: 550, column: 3, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8136, file: !7675, line: 550, column: 3)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !7675, line: 550, column: 3)
!8137 = distinct !DILexicalBlock(scope: !8138, file: !7675, line: 550, column: 3)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !7675, line: 550, column: 3)
!8139 = distinct !DILexicalBlock(scope: !8130, file: !7675, line: 549, column: 49)
!8140 = !DILocation(line: 551, column: 2, scope: !8139)
!8141 = !DILocation(line: 567, column: 12, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8103, file: !7675, line: 567, column: 6)
!8143 = !DILocation(line: 567, column: 17, scope: !8142)
!8144 = !DILocation(line: 567, column: 38, scope: !8142)
!8145 = !DILocation(line: 567, column: 6, scope: !8103)
!8146 = !DILocation(line: 568, column: 3, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8148, file: !7675, line: 568, column: 3)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !7675, line: 568, column: 3)
!8149 = distinct !DILexicalBlock(scope: !8150, file: !7675, line: 568, column: 3)
!8150 = distinct !DILexicalBlock(scope: !8151, file: !7675, line: 568, column: 3)
!8151 = distinct !DILexicalBlock(scope: !8142, file: !7675, line: 567, column: 44)
!8152 = !DILocation(line: 569, column: 2, scope: !8151)
!8153 = !DILocation(line: 570, column: 12, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8103, file: !7675, line: 570, column: 6)
!8155 = !DILocation(line: 570, column: 17, scope: !8154)
!8156 = !DILocation(line: 570, column: 39, scope: !8154)
!8157 = !DILocation(line: 570, column: 6, scope: !8103)
!8158 = !DILocation(line: 571, column: 3, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8160, file: !7675, line: 571, column: 3)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !7675, line: 571, column: 3)
!8161 = distinct !DILexicalBlock(scope: !8162, file: !7675, line: 571, column: 3)
!8162 = distinct !DILexicalBlock(scope: !8163, file: !7675, line: 571, column: 3)
!8163 = distinct !DILexicalBlock(scope: !8154, file: !7675, line: 570, column: 45)
!8164 = !DILocation(line: 572, column: 2, scope: !8163)
!8165 = !DILocation(line: 573, column: 12, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8103, file: !7675, line: 573, column: 6)
!8167 = !DILocation(line: 573, column: 17, scope: !8166)
!8168 = !DILocation(line: 573, column: 42, scope: !8166)
!8169 = !DILocation(line: 573, column: 6, scope: !8103)
!8170 = !DILocation(line: 574, column: 3, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8172, file: !7675, line: 574, column: 3)
!8172 = distinct !DILexicalBlock(scope: !8173, file: !7675, line: 574, column: 3)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !7675, line: 574, column: 3)
!8174 = distinct !DILexicalBlock(scope: !8175, file: !7675, line: 574, column: 3)
!8175 = distinct !DILexicalBlock(scope: !8166, file: !7675, line: 573, column: 48)
!8176 = !DILocation(line: 575, column: 2, scope: !8175)
!8177 = !DILocation(line: 576, column: 12, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8103, file: !7675, line: 576, column: 6)
!8179 = !DILocation(line: 576, column: 17, scope: !8178)
!8180 = !DILocation(line: 576, column: 44, scope: !8178)
!8181 = !DILocation(line: 576, column: 6, scope: !8103)
!8182 = !DILocation(line: 577, column: 3, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8184, file: !7675, line: 577, column: 3)
!8184 = distinct !DILexicalBlock(scope: !8185, file: !7675, line: 577, column: 3)
!8185 = distinct !DILexicalBlock(scope: !8186, file: !7675, line: 577, column: 3)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !7675, line: 577, column: 3)
!8187 = distinct !DILexicalBlock(scope: !8178, file: !7675, line: 576, column: 50)
!8188 = !DILocation(line: 578, column: 2, scope: !8187)
!8189 = !DILocation(line: 581, column: 12, scope: !8103)
!8190 = !DILocation(line: 583, column: 2, scope: !8103)
!8191 = distinct !DISubprogram(name: "debug_monitor", scope: !7675, file: !7675, line: 632, type: !8192, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !8194)
!8192 = !DISubroutineType(types: !8193)
!8193 = !{null, !2887, !7742}
!8194 = !{!8195, !8196}
!8195 = !DILocalVariable(name: "esf", arg: 1, scope: !8191, file: !7675, line: 632, type: !2887)
!8196 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8191, file: !7675, line: 632, type: !7742)
!8197 = !DILocation(line: 0, scope: !8191)
!8198 = !DILocation(line: 634, column: 15, scope: !8191)
!8199 = !DILocation(line: 636, column: 2, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !7675, line: 636, column: 2)
!8201 = distinct !DILexicalBlock(scope: !8202, file: !7675, line: 636, column: 2)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !7675, line: 636, column: 2)
!8203 = distinct !DILexicalBlock(scope: !8191, file: !7675, line: 636, column: 2)
!8204 = !DILocation(line: 652, column: 1, scope: !8191)
!8205 = distinct !DISubprogram(name: "reserved_exception", scope: !7675, file: !7675, line: 776, type: !8206, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !8208)
!8206 = !DISubroutineType(types: !8207)
!8207 = !{null, !8106, !107}
!8208 = !{!8209, !8210}
!8209 = !DILocalVariable(name: "esf", arg: 1, scope: !8205, file: !7675, line: 776, type: !8106)
!8210 = !DILocalVariable(name: "fault", arg: 2, scope: !8205, file: !7675, line: 776, type: !107)
!8211 = !DILocation(line: 0, scope: !8205)
!8212 = !DILocation(line: 780, column: 2, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !7675, line: 780, column: 2)
!8214 = distinct !DILexicalBlock(scope: !8215, file: !7675, line: 780, column: 2)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !7675, line: 780, column: 2)
!8216 = distinct !DILexicalBlock(scope: !8205, file: !7675, line: 780, column: 2)
!8217 = !DILocation(line: 783, column: 1, scope: !8205)
!8218 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7675, file: !7675, line: 658, type: !8219, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !8221)
!8219 = !DISubroutineType(types: !8220)
!8220 = !{!136, !2887}
!8221 = !{!8222, !8223, !8224}
!8222 = !DILocalVariable(name: "esf", arg: 1, scope: !8218, file: !7675, line: 658, type: !2887)
!8223 = !DILocalVariable(name: "ret_addr", scope: !8218, file: !7675, line: 660, type: !2661)
!8224 = !DILocalVariable(name: "fault_insn", scope: !8218, file: !7675, line: 686, type: !126)
!8225 = !DILocation(line: 0, scope: !8218)
!8226 = !DILocation(line: 660, column: 46, scope: !8218)
!8227 = !DILocation(line: 660, column: 23, scope: !8218)
!8228 = !DILocation(line: 682, column: 11, scope: !8218)
!8229 = !DILocation(line: 271, column: 3, scope: !8230, inlinedAt: !8231)
!8230 = distinct !DISubprogram(name: "__DSB", scope: !7374, file: !7374, line: 269, type: !337, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !256)
!8231 = distinct !DILocation(line: 683, column: 2, scope: !8218)
!8232 = !{i64 3550928}
!8233 = !DILocation(line: 260, column: 3, scope: !8234, inlinedAt: !8235)
!8234 = distinct !DISubprogram(name: "__ISB", scope: !7374, file: !7374, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !256)
!8235 = distinct !DILocation(line: 684, column: 2, scope: !8218)
!8236 = !{i64 3550645}
!8237 = !DILocation(line: 686, column: 35, scope: !8218)
!8238 = !DILocation(line: 686, column: 24, scope: !8218)
!8239 = !DILocation(line: 688, column: 11, scope: !8218)
!8240 = !DILocation(line: 271, column: 3, scope: !8230, inlinedAt: !8241)
!8241 = distinct !DILocation(line: 689, column: 2, scope: !8218)
!8242 = !DILocation(line: 260, column: 3, scope: !8234, inlinedAt: !8243)
!8243 = distinct !DILocation(line: 690, column: 2, scope: !8218)
!8244 = !DILocation(line: 693, column: 45, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8218, file: !7675, line: 693, column: 6)
!8246 = !DILocation(line: 699, column: 1, scope: !8218)
!8247 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7675, file: !7675, line: 1107, type: !337, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !256)
!8248 = !DILocation(line: 1111, column: 11, scope: !8247)
!8249 = !DILocation(line: 1136, column: 1, scope: !8247)
!8250 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8251, file: !8251, line: 26, type: !337, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !8252)
!8251 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8252 = !{!8253}
!8253 = !DILocalVariable(name: "irq", scope: !8250, file: !8251, line: 28, type: !107)
!8254 = !DILocation(line: 0, scope: !8250)
!8255 = !DILocation(line: 30, column: 2, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8250, file: !8251, line: 30, column: 2)
!8257 = !DILocation(line: 31, column: 3, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8259, file: !8251, line: 30, column: 39)
!8259 = distinct !DILexicalBlock(scope: !8256, file: !8251, line: 30, column: 2)
!8260 = !DILocation(line: 30, column: 35, scope: !8259)
!8261 = !DILocation(line: 30, column: 13, scope: !8259)
!8262 = distinct !{!8262, !8255, !8263}
!8263 = !DILocation(line: 32, column: 2, scope: !8256)
!8264 = !DILocation(line: 33, column: 1, scope: !8250)
!8265 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !644, file: !644, line: 1814, type: !7408, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !8266)
!8266 = !{!8267, !8268}
!8267 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8265, file: !644, line: 1814, type: !912)
!8268 = !DILocalVariable(name: "priority", arg: 2, scope: !8265, file: !644, line: 1814, type: !108)
!8269 = !DILocation(line: 0, scope: !8265)
!8270 = !DILocation(line: 1816, column: 7, scope: !8265)
!8271 = !DILocation(line: 0, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8265, file: !644, line: 1816, column: 7)
!8273 = !DILocation(line: 1824, column: 1, scope: !8265)
!8274 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8275, file: !8275, line: 27, type: !8276, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2975, retainedNodes: !8379)
!8275 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8276 = !DISubroutineType(types: !8277)
!8277 = !{null, !8278}
!8278 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !8279)
!8279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8280, size: 32)
!8280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !8281)
!8281 = !{!8282, !8340, !8352, !8353, !8354, !8355, !8361, !8374}
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8280, file: !168, line: 247, baseType: !8283, size: 384)
!8283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !8284)
!8284 = !{!8285, !8309, !8316, !8317, !8318, !8327, !8328, !8329}
!8285 = !DIDerivedType(tag: DW_TAG_member, scope: !8283, file: !168, line: 60, baseType: !8286, size: 64)
!8286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8283, file: !168, line: 60, size: 64, elements: !8287)
!8287 = !{!8288, !8303}
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8286, file: !168, line: 61, baseType: !8289, size: 64)
!8289 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !8290)
!8290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !8291)
!8291 = !{!8292, !8298}
!8292 = !DIDerivedType(tag: DW_TAG_member, scope: !8290, file: !151, line: 38, baseType: !8293, size: 32)
!8293 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8290, file: !151, line: 38, size: 32, elements: !8294)
!8294 = !{!8295, !8297}
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8293, file: !151, line: 39, baseType: !8296, size: 32)
!8296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8290, size: 32)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8293, file: !151, line: 40, baseType: !8296, size: 32)
!8298 = !DIDerivedType(tag: DW_TAG_member, scope: !8290, file: !151, line: 42, baseType: !8299, size: 32, offset: 32)
!8299 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8290, file: !151, line: 42, size: 32, elements: !8300)
!8300 = !{!8301, !8302}
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8299, file: !151, line: 43, baseType: !8296, size: 32)
!8302 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8299, file: !151, line: 44, baseType: !8296, size: 32)
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8286, file: !168, line: 62, baseType: !8304, size: 64)
!8304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !8305)
!8305 = !{!8306}
!8306 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8304, file: !180, line: 50, baseType: !8307, size: 64)
!8307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8308, size: 64, elements: !185)
!8308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8304, size: 32)
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8283, file: !168, line: 68, baseType: !8310, size: 32, offset: 64)
!8310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8311, size: 32)
!8311 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !8312)
!8312 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !8313)
!8313 = !{!8314}
!8314 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8312, file: !146, line: 232, baseType: !8315, size: 64)
!8315 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !8290)
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8283, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!8317 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8283, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!8318 = !DIDerivedType(tag: DW_TAG_member, scope: !8283, file: !168, line: 90, baseType: !8319, size: 16, offset: 112)
!8319 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8283, file: !168, line: 90, size: 16, elements: !8320)
!8320 = !{!8321, !8326}
!8321 = !DIDerivedType(tag: DW_TAG_member, scope: !8319, file: !168, line: 91, baseType: !8322, size: 16)
!8322 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8319, file: !168, line: 91, size: 16, elements: !8323)
!8323 = !{!8324, !8325}
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8322, file: !168, line: 96, baseType: !200, size: 8)
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8322, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8319, file: !168, line: 100, baseType: !126, size: 16)
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8283, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8283, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!8329 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8283, file: !168, line: 131, baseType: !8330, size: 192, offset: 192)
!8330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !8331)
!8331 = !{!8332, !8333, !8339}
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8330, file: !146, line: 245, baseType: !8289, size: 64)
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8330, file: !146, line: 246, baseType: !8334, size: 32, offset: 64)
!8334 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !8335)
!8335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8336, size: 32)
!8336 = !DISubroutineType(types: !8337)
!8337 = !{null, !8338}
!8338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8330, size: 32)
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8330, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8280, file: !168, line: 250, baseType: !8341, size: 288, offset: 384)
!8341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !8342)
!8342 = !{!8343, !8344, !8345, !8346, !8347, !8348, !8349, !8350, !8351}
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8341, file: !219, line: 26, baseType: !108, size: 32)
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8341, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8341, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8341, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8341, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8341, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8341, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8341, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8341, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8280, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8280, file: !168, line: 256, baseType: !8311, size: 64, offset: 704)
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8280, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8280, file: !168, line: 300, baseType: !8356, size: 96, offset: 800)
!8356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !8357)
!8357 = !{!8358, !8359, !8360}
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8356, file: !168, line: 153, baseType: !22, size: 32)
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8356, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8356, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8280, file: !168, line: 325, baseType: !8362, size: 32, offset: 896)
!8362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8363, size: 32)
!8363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !8364)
!8364 = !{!8365, !8371, !8372}
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8363, file: !142, line: 5074, baseType: !8366, size: 96)
!8366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !8367)
!8367 = !{!8368, !8369, !8370}
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8366, file: !245, line: 57, baseType: !248, size: 32)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8366, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8366, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8363, file: !142, line: 5075, baseType: !8311, size: 64, offset: 96)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8363, file: !142, line: 5076, baseType: !8373, offset: 160)
!8373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!8374 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8280, file: !168, line: 343, baseType: !8375, size: 64, offset: 928)
!8375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !8376)
!8376 = !{!8377, !8378}
!8377 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8375, file: !219, line: 63, baseType: !108, size: 32)
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8375, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!8379 = !{!8380}
!8380 = !DILocalVariable(name: "thread", arg: 1, scope: !8274, file: !8275, line: 27, type: !8278)
!8381 = !DILocation(line: 0, scope: !8274)
!8382 = !DILocation(line: 29, column: 6, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8274, file: !8275, line: 29, column: 6)
!8384 = !DILocation(line: 29, column: 15, scope: !8383)
!8385 = !DILocation(line: 29, column: 6, scope: !8274)
!8386 = !DILocation(line: 1031, column: 3, scope: !8387, inlinedAt: !8390)
!8387 = distinct !DISubprogram(name: "__get_IPSR", scope: !7374, file: !7374, line: 1027, type: !7455, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2975, retainedNodes: !8388)
!8388 = !{!8389}
!8389 = !DILocalVariable(name: "result", scope: !8387, file: !7374, line: 1029, type: !108)
!8390 = distinct !DILocation(line: 48, column: 10, scope: !8391, inlinedAt: !8395)
!8391 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8392, file: !8392, line: 46, type: !8393, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2975, retainedNodes: !256)
!8392 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8393 = !DISubroutineType(types: !8394)
!8394 = !{!136}
!8395 = distinct !DILocation(line: 30, column: 7, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8397, file: !8275, line: 30, column: 7)
!8397 = distinct !DILexicalBlock(scope: !8383, file: !8275, line: 29, column: 26)
!8398 = !{i64 3539776}
!8399 = !DILocation(line: 0, scope: !8387, inlinedAt: !8390)
!8400 = !DILocation(line: 48, column: 9, scope: !8391, inlinedAt: !8395)
!8401 = !DILocation(line: 30, column: 7, scope: !8397)
!8402 = !DILocation(line: 42, column: 14, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8396, file: !8275, line: 30, column: 25)
!8404 = !DILocation(line: 48, column: 15, scope: !8403)
!8405 = !DILocation(line: 49, column: 3, scope: !8403)
!8406 = !DILocation(line: 52, column: 2, scope: !8274)
!8407 = !DILocation(line: 53, column: 1, scope: !8274)
!8408 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !508, file: !508, line: 127, type: !337, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !501, retainedNodes: !256)
!8409 = !DILocation(line: 134, column: 2, scope: !8408)
!8410 = !DILocation(line: 156, column: 1, scope: !8408)
!8411 = !DILocation(line: 0, scope: !507)
!8412 = !DILocation(line: 289, column: 36, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !507, file: !508, line: 285, column: 2)
!8414 = !DILocation(line: 289, column: 42, scope: !8413)
!8415 = !DILocation(line: 300, column: 36, scope: !507)
!8416 = !DILocation(line: 301, column: 35, scope: !507)
!8417 = !DILocation(line: 302, column: 37, scope: !507)
!8418 = !DILocation(line: 311, column: 2, scope: !507)
!8419 = !DILocation(line: 316, column: 1, scope: !507)
!8420 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !672, file: !672, line: 180, type: !337, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8421 = !DILocation(line: 188, column: 12, scope: !8420)
!8422 = !DILocation(line: 271, column: 3, scope: !8423, inlinedAt: !8424)
!8423 = distinct !DISubprogram(name: "__DSB", scope: !7374, file: !7374, line: 269, type: !337, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8424 = distinct !DILocation(line: 192, column: 2, scope: !8420)
!8425 = !{i64 3700454}
!8426 = !DILocation(line: 260, column: 3, scope: !8427, inlinedAt: !8428)
!8427 = distinct !DISubprogram(name: "__ISB", scope: !7374, file: !7374, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8428 = distinct !DILocation(line: 193, column: 2, scope: !8420)
!8429 = !{i64 3700171}
!8430 = !DILocation(line: 194, column: 1, scope: !8420)
!8431 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !672, file: !672, line: 199, type: !337, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8432 = !DILocation(line: 282, column: 3, scope: !8433, inlinedAt: !8434)
!8433 = distinct !DISubprogram(name: "__DMB", scope: !7374, file: !7374, line: 280, type: !337, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8434 = distinct !DILocation(line: 202, column: 2, scope: !8431)
!8435 = !{i64 3700730}
!8436 = !DILocation(line: 205, column: 12, scope: !8431)
!8437 = !DILocation(line: 206, column: 1, scope: !8431)
!8438 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !672, file: !672, line: 275, type: !8439, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8452)
!8439 = !DISubroutineType(types: !8440)
!8440 = !{null, !8441, !1934, !7642, !7642}
!8441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8442, size: 32)
!8442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8443)
!8443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !618, line: 52, size: 96, elements: !8444)
!8444 = !{!8445, !8446, !8447}
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8443, file: !618, line: 53, baseType: !22, size: 32)
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8443, file: !618, line: 54, baseType: !137, size: 32, offset: 32)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8443, file: !618, line: 55, baseType: !8448, size: 32, offset: 64)
!8448 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !624, line: 151, baseType: !8449)
!8449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 149, size: 32, elements: !8450)
!8450 = !{!8451}
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8449, file: !624, line: 150, baseType: !108, size: 32)
!8452 = !{!8453, !8454, !8455, !8456}
!8453 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8438, file: !672, line: 276, type: !8441)
!8454 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8438, file: !672, line: 276, type: !1934)
!8455 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8438, file: !672, line: 277, type: !7642)
!8456 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8438, file: !672, line: 277, type: !7642)
!8457 = !DILocation(line: 0, scope: !8438)
!8458 = !DILocation(line: 279, column: 6, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8438, file: !672, line: 279, column: 6)
!8460 = !DILocation(line: 285, column: 1, scope: !8438)
!8461 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8462, file: !8462, line: 220, type: !8463, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8465)
!8462 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8463 = !DISubroutineType(types: !8464)
!8464 = !{!107, !8441, !1934, !7642, !7642}
!8465 = !{!8466, !8467, !8468, !8469, !8470}
!8466 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8461, file: !8462, line: 221, type: !8441)
!8467 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8461, file: !8462, line: 221, type: !1934)
!8468 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8461, file: !8462, line: 222, type: !7642)
!8469 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8461, file: !8462, line: 223, type: !7642)
!8470 = !DILocalVariable(name: "mpu_reg_index", scope: !8461, file: !8462, line: 225, type: !107)
!8471 = !DILocation(line: 0, scope: !8461)
!8472 = !DILocation(line: 225, column: 22, scope: !8461)
!8473 = !DILocation(line: 233, column: 18, scope: !8461)
!8474 = !DILocation(line: 236, column: 23, scope: !8461)
!8475 = !DILocation(line: 236, column: 21, scope: !8461)
!8476 = !DILocation(line: 238, column: 2, scope: !8461)
!8477 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !672, file: !672, line: 105, type: !8478, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8480)
!8478 = !DISubroutineType(types: !8479)
!8479 = !{!107, !8441, !190, !190, !136}
!8480 = !{!8481, !8482, !8483, !8484, !8485, !8486}
!8481 = !DILocalVariable(name: "regions", arg: 1, scope: !8477, file: !672, line: 106, type: !8441)
!8482 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8477, file: !672, line: 106, type: !190)
!8483 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8477, file: !672, line: 106, type: !190)
!8484 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8477, file: !672, line: 107, type: !136)
!8485 = !DILocalVariable(name: "i", scope: !8477, file: !672, line: 109, type: !107)
!8486 = !DILocalVariable(name: "reg_index", scope: !8477, file: !672, line: 110, type: !107)
!8487 = !DILocation(line: 0, scope: !8477)
!8488 = !DILocation(line: 110, column: 18, scope: !8477)
!8489 = !DILocation(line: 112, column: 16, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8491, file: !672, line: 112, column: 2)
!8491 = distinct !DILexicalBlock(scope: !8477, file: !672, line: 112, column: 2)
!8492 = !DILocation(line: 112, column: 2, scope: !8491)
!8493 = !DILocation(line: 113, column: 7, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !672, line: 113, column: 7)
!8495 = distinct !DILexicalBlock(scope: !8490, file: !672, line: 112, column: 36)
!8496 = !DILocation(line: 113, column: 18, scope: !8494)
!8497 = !DILocation(line: 113, column: 23, scope: !8494)
!8498 = !DILocation(line: 113, column: 7, scope: !8495)
!8499 = !DILocation(line: 118, column: 23, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8495, file: !672, line: 118, column: 7)
!8501 = !DILocation(line: 119, column: 7, scope: !8500)
!8502 = !DILocation(line: 118, column: 7, scope: !8495)
!8503 = !DILocation(line: 120, column: 4, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8505, file: !672, line: 120, column: 4)
!8505 = distinct !DILexicalBlock(scope: !8506, file: !672, line: 120, column: 4)
!8506 = distinct !DILexicalBlock(scope: !8507, file: !672, line: 120, column: 4)
!8507 = distinct !DILexicalBlock(scope: !8508, file: !672, line: 120, column: 4)
!8508 = distinct !DILexicalBlock(scope: !8500, file: !672, line: 119, column: 45)
!8509 = !DILocation(line: 121, column: 4, scope: !8508)
!8510 = !DILocation(line: 124, column: 36, scope: !8495)
!8511 = !DILocation(line: 124, column: 15, scope: !8495)
!8512 = !DILocation(line: 126, column: 17, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8495, file: !672, line: 126, column: 7)
!8514 = !DILocation(line: 126, column: 7, scope: !8495)
!8515 = !DILocation(line: 131, column: 12, scope: !8495)
!8516 = !DILocation(line: 132, column: 2, scope: !8495)
!8517 = !DILocation(line: 112, column: 32, scope: !8490)
!8518 = distinct !{!8518, !8492, !8519}
!8519 = !DILocation(line: 132, column: 2, scope: !8491)
!8520 = !DILocation(line: 135, column: 1, scope: !8477)
!8521 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8462, file: !8462, line: 63, type: !8522, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8524)
!8522 = !DISubroutineType(types: !8523)
!8523 = !{!107, !8441}
!8524 = !{!8525, !8526}
!8525 = !DILocalVariable(name: "part", arg: 1, scope: !8521, file: !8462, line: 63, type: !8441)
!8526 = !DILocalVariable(name: "partition_is_valid", scope: !8521, file: !8462, line: 70, type: !107)
!8527 = !DILocation(line: 0, scope: !8521)
!8528 = !DILocation(line: 71, column: 11, scope: !8521)
!8529 = !DILocation(line: 71, column: 37, scope: !8521)
!8530 = !DILocation(line: 72, column: 3, scope: !8521)
!8531 = !DILocation(line: 71, column: 30, scope: !8521)
!8532 = !DILocation(line: 75, column: 11, scope: !8521)
!8533 = !DILocation(line: 75, column: 17, scope: !8521)
!8534 = !DILocation(line: 75, column: 38, scope: !8521)
!8535 = !DILocation(line: 77, column: 2, scope: !8521)
!8536 = distinct !DISubprogram(name: "mpu_configure_region", scope: !672, file: !672, line: 79, type: !8537, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8539)
!8537 = !DISubroutineType(types: !8538)
!8538 = !{!107, !1934, !8441}
!8539 = !{!8540, !8541, !8542}
!8540 = !DILocalVariable(name: "index", arg: 1, scope: !8536, file: !672, line: 79, type: !1934)
!8541 = !DILocalVariable(name: "new_region", arg: 2, scope: !8536, file: !672, line: 80, type: !8441)
!8542 = !DILocalVariable(name: "region_conf", scope: !8536, file: !672, line: 82, type: !661)
!8543 = !DILocation(line: 0, scope: !8536)
!8544 = !DILocation(line: 82, column: 2, scope: !8536)
!8545 = !DILocation(line: 82, column: 24, scope: !8536)
!8546 = !DILocation(line: 87, column: 33, scope: !8536)
!8547 = !DILocation(line: 87, column: 14, scope: !8536)
!8548 = !DILocation(line: 87, column: 19, scope: !8536)
!8549 = !DILocation(line: 91, column: 55, scope: !8536)
!8550 = !DILocation(line: 92, column: 16, scope: !8536)
!8551 = !DILocation(line: 92, column: 53, scope: !8536)
!8552 = !DILocation(line: 91, column: 2, scope: !8536)
!8553 = !DILocation(line: 95, column: 9, scope: !8536)
!8554 = !DILocation(line: 97, column: 1, scope: !8536)
!8555 = !DILocation(line: 95, column: 2, scope: !8536)
!8556 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8462, file: !8462, line: 113, type: !8557, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8562)
!8557 = !DISubroutineType(types: !8558)
!8558 = !{null, !8559, !8560, !108, !108}
!8559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 32)
!8560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8561, size: 32)
!8561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8448)
!8562 = !{!8563, !8564, !8565, !8566}
!8563 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8556, file: !8462, line: 114, type: !8559)
!8564 = !DILocalVariable(name: "attr", arg: 2, scope: !8556, file: !8462, line: 115, type: !8560)
!8565 = !DILocalVariable(name: "base", arg: 3, scope: !8556, file: !8462, line: 115, type: !108)
!8566 = !DILocalVariable(name: "size", arg: 4, scope: !8556, file: !8462, line: 115, type: !108)
!8567 = !DILocation(line: 0, scope: !8556)
!8568 = !DILocation(line: 127, column: 23, scope: !8556)
!8569 = !DILocation(line: 127, column: 35, scope: !8556)
!8570 = !DILocation(line: 127, column: 33, scope: !8556)
!8571 = !DILocation(line: 127, column: 10, scope: !8556)
!8572 = !DILocation(line: 127, column: 15, scope: !8556)
!8573 = !DILocation(line: 129, column: 1, scope: !8556)
!8574 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !672, file: !672, line: 57, type: !8575, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8577)
!8575 = !DISubroutineType(types: !8576)
!8576 = !{!107, !1934, !659}
!8577 = !{!8578, !8579}
!8578 = !DILocalVariable(name: "index", arg: 1, scope: !8574, file: !672, line: 57, type: !1934)
!8579 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8574, file: !672, line: 58, type: !659)
!8580 = !DILocation(line: 0, scope: !8574)
!8581 = !DILocation(line: 61, column: 6, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8574, file: !672, line: 61, column: 6)
!8583 = !DILocation(line: 61, column: 12, scope: !8582)
!8584 = !DILocation(line: 61, column: 6, scope: !8574)
!8585 = !DILocation(line: 64, column: 3, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8587, file: !672, line: 64, column: 3)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !672, line: 64, column: 3)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !672, line: 64, column: 3)
!8589 = distinct !DILexicalBlock(scope: !8590, file: !672, line: 64, column: 3)
!8590 = distinct !DILexicalBlock(scope: !8582, file: !672, line: 61, column: 40)
!8591 = !DILocation(line: 65, column: 3, scope: !8590)
!8592 = !DILocation(line: 71, column: 2, scope: !8574)
!8593 = !DILocation(line: 73, column: 2, scope: !8574)
!8594 = !DILocation(line: 74, column: 1, scope: !8574)
!8595 = distinct !DISubprogram(name: "region_init", scope: !8462, file: !8462, line: 29, type: !8596, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8598)
!8596 = !DISubroutineType(types: !8597)
!8597 = !{null, !7642, !659}
!8598 = !{!8599, !8600}
!8599 = !DILocalVariable(name: "index", arg: 1, scope: !8595, file: !8462, line: 29, type: !7642)
!8600 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8595, file: !8462, line: 30, type: !659)
!8601 = !DILocation(line: 0, scope: !8595)
!8602 = !DILocation(line: 33, column: 2, scope: !8595)
!8603 = !DILocation(line: 47, column: 28, scope: !8595)
!8604 = !DILocation(line: 47, column: 33, scope: !8595)
!8605 = !DILocation(line: 48, column: 26, scope: !8595)
!8606 = !DILocation(line: 47, column: 12, scope: !8595)
!8607 = !DILocation(line: 49, column: 32, scope: !8595)
!8608 = !DILocation(line: 49, column: 37, scope: !8595)
!8609 = !DILocation(line: 49, column: 12, scope: !8595)
!8610 = !DILocation(line: 53, column: 1, scope: !8595)
!8611 = distinct !DISubprogram(name: "set_region_number", scope: !8612, file: !8612, line: 32, type: !7465, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8613)
!8612 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8613 = !{!8614}
!8614 = !DILocalVariable(name: "index", arg: 1, scope: !8611, file: !8612, line: 32, type: !108)
!8615 = !DILocation(line: 0, scope: !8611)
!8616 = !DILocation(line: 34, column: 11, scope: !8611)
!8617 = !DILocation(line: 35, column: 1, scope: !8611)
!8618 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8462, file: !8462, line: 88, type: !8619, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8621)
!8619 = !DISubroutineType(types: !8620)
!8620 = !{!108, !108}
!8621 = !{!8622}
!8622 = !DILocalVariable(name: "size", arg: 1, scope: !8618, file: !8462, line: 88, type: !108)
!8623 = !DILocation(line: 0, scope: !8618)
!8624 = !DILocation(line: 91, column: 11, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8618, file: !8462, line: 91, column: 6)
!8626 = !DILocation(line: 91, column: 6, scope: !8618)
!8627 = !DILocation(line: 100, column: 11, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8618, file: !8462, line: 100, column: 6)
!8629 = !DILocation(line: 100, column: 6, scope: !8618)
!8630 = !DILocation(line: 104, column: 35, scope: !8618)
!8631 = !DILocation(line: 104, column: 16, scope: !8618)
!8632 = !DILocation(line: 104, column: 50, scope: !8618)
!8633 = !DILocation(line: 104, column: 72, scope: !8618)
!8634 = !DILocation(line: 104, column: 2, scope: !8618)
!8635 = !DILocation(line: 106, column: 1, scope: !8618)
!8636 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !672, file: !672, line: 307, type: !8637, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8639)
!8637 = !DISubroutineType(types: !8638)
!8638 = !{null, !8441, !190}
!8639 = !{!8640, !8641}
!8640 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8636, file: !672, line: 308, type: !8441)
!8641 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8636, file: !672, line: 308, type: !190)
!8642 = !DILocation(line: 0, scope: !8636)
!8643 = !DILocation(line: 310, column: 6, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8636, file: !672, line: 310, column: 6)
!8645 = !DILocation(line: 316, column: 1, scope: !8636)
!8646 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8462, file: !8462, line: 249, type: !8647, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8649)
!8647 = !DISubroutineType(types: !8648)
!8648 = !{!107, !8441, !190}
!8649 = !{!8650, !8651, !8652, !8653}
!8650 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8646, file: !8462, line: 250, type: !8441)
!8651 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8646, file: !8462, line: 250, type: !190)
!8652 = !DILocalVariable(name: "mpu_reg_index", scope: !8646, file: !8462, line: 252, type: !107)
!8653 = !DILocalVariable(name: "i", scope: !8654, file: !8462, line: 264, type: !107)
!8654 = distinct !DILexicalBlock(scope: !8655, file: !8462, line: 264, column: 3)
!8655 = distinct !DILexicalBlock(scope: !8656, file: !8462, line: 261, column: 32)
!8656 = distinct !DILexicalBlock(scope: !8646, file: !8462, line: 261, column: 6)
!8657 = !DILocation(line: 0, scope: !8646)
!8658 = !DILocation(line: 252, column: 22, scope: !8646)
!8659 = !DILocation(line: 258, column: 18, scope: !8646)
!8660 = !DILocation(line: 261, column: 20, scope: !8656)
!8661 = !DILocation(line: 261, column: 6, scope: !8646)
!8662 = !DILocation(line: 0, scope: !8654)
!8663 = !DILocation(line: 265, column: 4, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8665, file: !8462, line: 264, column: 59)
!8665 = distinct !DILexicalBlock(scope: !8654, file: !8462, line: 264, column: 3)
!8666 = !DILocation(line: 264, column: 55, scope: !8665)
!8667 = !DILocation(line: 264, column: 33, scope: !8665)
!8668 = !DILocation(line: 264, column: 3, scope: !8654)
!8669 = distinct !{!8669, !8668, !8670}
!8670 = !DILocation(line: 266, column: 3, scope: !8654)
!8671 = !DILocation(line: 269, column: 2, scope: !8646)
!8672 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8673, file: !8673, line: 218, type: !7465, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8674)
!8673 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8674 = !{!8675}
!8675 = !DILocalVariable(name: "rnr", arg: 1, scope: !8672, file: !8673, line: 218, type: !108)
!8676 = !DILocation(line: 0, scope: !8672)
!8677 = !DILocation(line: 220, column: 12, scope: !8672)
!8678 = !DILocation(line: 221, column: 13, scope: !8672)
!8679 = !DILocation(line: 222, column: 1, scope: !8672)
!8680 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !672, file: !672, line: 326, type: !8681, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8683)
!8681 = !DISubroutineType(types: !8682)
!8682 = !{!107}
!8683 = !{!8684}
!8684 = !DILocalVariable(name: "r_index", scope: !8680, file: !672, line: 328, type: !108)
!8685 = !DILocation(line: 330, column: 17, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8680, file: !672, line: 330, column: 6)
!8687 = !DILocation(line: 330, column: 29, scope: !8686)
!8688 = !DILocation(line: 330, column: 6, scope: !8680)
!8689 = !DILocation(line: 347, column: 2, scope: !8680)
!8690 = !DILocation(line: 0, scope: !8680)
!8691 = !DILocation(line: 364, column: 29, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8693, file: !672, line: 364, column: 2)
!8693 = distinct !DILexicalBlock(scope: !8680, file: !672, line: 364, column: 2)
!8694 = !DILocation(line: 364, column: 2, scope: !8693)
!8695 = !DILocation(line: 365, column: 25, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8692, file: !672, line: 364, column: 66)
!8697 = !DILocation(line: 365, column: 3, scope: !8696)
!8698 = !DILocation(line: 364, column: 62, scope: !8692)
!8699 = distinct !{!8699, !8694, !8700}
!8700 = !DILocation(line: 366, column: 2, scope: !8693)
!8701 = !DILocation(line: 369, column: 23, scope: !8680)
!8702 = !DILocation(line: 369, column: 21, scope: !8680)
!8703 = !DILocation(line: 372, column: 2, scope: !8680)
!8704 = !DILocation(line: 443, column: 2, scope: !8680)
!8705 = !DILocation(line: 444, column: 1, scope: !8680)
!8706 = distinct !DISubprogram(name: "strcpy", scope: !8707, file: !8707, line: 20, type: !8708, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8712)
!8707 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8708 = !DISubroutineType(types: !8709)
!8709 = !{!283, !8710, !8711}
!8710 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !283)
!8711 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !121)
!8712 = !{!8713, !8714, !8715}
!8713 = !DILocalVariable(name: "d", arg: 1, scope: !8706, file: !8707, line: 20, type: !8710)
!8714 = !DILocalVariable(name: "s", arg: 2, scope: !8706, file: !8707, line: 20, type: !8711)
!8715 = !DILocalVariable(name: "dest", scope: !8706, file: !8707, line: 22, type: !283)
!8716 = !DILocation(line: 0, scope: !8706)
!8717 = !DILocation(line: 24, column: 9, scope: !8706)
!8718 = !DILocation(line: 24, column: 12, scope: !8706)
!8719 = !DILocation(line: 24, column: 2, scope: !8706)
!8720 = !DILocation(line: 25, column: 6, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8706, file: !8707, line: 24, column: 21)
!8722 = !DILocation(line: 26, column: 4, scope: !8721)
!8723 = !DILocation(line: 27, column: 4, scope: !8721)
!8724 = distinct !{!8724, !8719, !8725}
!8725 = !DILocation(line: 28, column: 2, scope: !8706)
!8726 = !DILocation(line: 30, column: 5, scope: !8706)
!8727 = !DILocation(line: 32, column: 2, scope: !8706)
!8728 = distinct !DISubprogram(name: "strncpy", scope: !8707, file: !8707, line: 42, type: !8729, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8731)
!8729 = !DISubroutineType(types: !8730)
!8730 = !{!283, !8710, !8711, !137}
!8731 = !{!8732, !8733, !8734, !8735}
!8732 = !DILocalVariable(name: "d", arg: 1, scope: !8728, file: !8707, line: 42, type: !8710)
!8733 = !DILocalVariable(name: "s", arg: 2, scope: !8728, file: !8707, line: 42, type: !8711)
!8734 = !DILocalVariable(name: "n", arg: 3, scope: !8728, file: !8707, line: 42, type: !137)
!8735 = !DILocalVariable(name: "dest", scope: !8728, file: !8707, line: 44, type: !283)
!8736 = !DILocation(line: 0, scope: !8728)
!8737 = !DILocation(line: 46, column: 12, scope: !8728)
!8738 = !DILocation(line: 46, column: 17, scope: !8728)
!8739 = !DILocation(line: 46, column: 20, scope: !8728)
!8740 = !DILocation(line: 46, column: 23, scope: !8728)
!8741 = !DILocation(line: 46, column: 2, scope: !8728)
!8742 = !DILocation(line: 47, column: 6, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8728, file: !8707, line: 46, column: 32)
!8744 = !DILocation(line: 48, column: 4, scope: !8743)
!8745 = !DILocation(line: 49, column: 4, scope: !8743)
!8746 = !DILocation(line: 50, column: 4, scope: !8743)
!8747 = distinct !{!8747, !8741, !8748}
!8748 = !DILocation(line: 51, column: 2, scope: !8728)
!8749 = !DILocation(line: 54, column: 6, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8728, file: !8707, line: 53, column: 16)
!8751 = !DILocation(line: 55, column: 4, scope: !8750)
!8752 = !DILocation(line: 56, column: 4, scope: !8750)
!8753 = !DILocation(line: 53, column: 11, scope: !8728)
!8754 = !DILocation(line: 53, column: 2, scope: !8728)
!8755 = distinct !{!8755, !8754, !8756}
!8756 = !DILocation(line: 57, column: 2, scope: !8728)
!8757 = !DILocation(line: 59, column: 2, scope: !8728)
!8758 = distinct !DISubprogram(name: "strchr", scope: !8707, file: !8707, line: 69, type: !8759, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8761)
!8759 = !DISubroutineType(types: !8760)
!8760 = !{!283, !121, !107}
!8761 = !{!8762, !8763, !8764}
!8762 = !DILocalVariable(name: "s", arg: 1, scope: !8758, file: !8707, line: 69, type: !121)
!8763 = !DILocalVariable(name: "c", arg: 2, scope: !8758, file: !8707, line: 69, type: !107)
!8764 = !DILocalVariable(name: "tmp", scope: !8758, file: !8707, line: 71, type: !123)
!8765 = !DILocation(line: 0, scope: !8758)
!8766 = !DILocation(line: 73, column: 2, scope: !8758)
!8767 = !DILocation(line: 73, column: 10, scope: !8758)
!8768 = !DILocation(line: 73, column: 13, scope: !8758)
!8769 = !DILocation(line: 73, column: 21, scope: !8758)
!8770 = !DILocation(line: 74, column: 4, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8758, file: !8707, line: 73, column: 38)
!8772 = distinct !{!8772, !8766, !8773}
!8773 = !DILocation(line: 75, column: 2, scope: !8758)
!8774 = !DILocation(line: 77, column: 9, scope: !8758)
!8775 = !DILocation(line: 77, column: 2, scope: !8758)
!8776 = distinct !DISubprogram(name: "strrchr", scope: !8707, file: !8707, line: 87, type: !8759, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8777)
!8777 = !{!8778, !8779, !8780}
!8778 = !DILocalVariable(name: "s", arg: 1, scope: !8776, file: !8707, line: 87, type: !121)
!8779 = !DILocalVariable(name: "c", arg: 2, scope: !8776, file: !8707, line: 87, type: !107)
!8780 = !DILocalVariable(name: "match", scope: !8776, file: !8707, line: 89, type: !283)
!8781 = !DILocation(line: 0, scope: !8776)
!8782 = !DILocation(line: 91, column: 2, scope: !8776)
!8783 = !DILocation(line: 92, column: 7, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8785, file: !8707, line: 92, column: 7)
!8785 = distinct !DILexicalBlock(scope: !8776, file: !8707, line: 91, column: 5)
!8786 = !DILocation(line: 92, column: 10, scope: !8784)
!8787 = !DILocation(line: 92, column: 7, scope: !8785)
!8788 = !DILocation(line: 95, column: 13, scope: !8776)
!8789 = !DILocation(line: 95, column: 2, scope: !8785)
!8790 = distinct !{!8790, !8782, !8791}
!8791 = !DILocation(line: 95, column: 15, scope: !8776)
!8792 = !DILocation(line: 97, column: 2, scope: !8776)
!8793 = distinct !DISubprogram(name: "strlen", scope: !8707, file: !8707, line: 107, type: !8794, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8796)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{!137, !121}
!8796 = !{!8797, !8798}
!8797 = !DILocalVariable(name: "s", arg: 1, scope: !8793, file: !8707, line: 107, type: !121)
!8798 = !DILocalVariable(name: "n", scope: !8793, file: !8707, line: 109, type: !137)
!8799 = !DILocation(line: 0, scope: !8793)
!8800 = !DILocation(line: 111, column: 9, scope: !8793)
!8801 = !DILocation(line: 111, column: 12, scope: !8793)
!8802 = !DILocation(line: 111, column: 2, scope: !8793)
!8803 = !DILocation(line: 112, column: 4, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8793, file: !8707, line: 111, column: 21)
!8805 = !DILocation(line: 113, column: 4, scope: !8804)
!8806 = distinct !{!8806, !8802, !8807}
!8807 = !DILocation(line: 114, column: 2, scope: !8793)
!8808 = !DILocation(line: 116, column: 2, scope: !8793)
!8809 = distinct !DISubprogram(name: "strnlen", scope: !8707, file: !8707, line: 126, type: !8810, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8812)
!8810 = !DISubroutineType(types: !8811)
!8811 = !{!137, !121, !137}
!8812 = !{!8813, !8814, !8815}
!8813 = !DILocalVariable(name: "s", arg: 1, scope: !8809, file: !8707, line: 126, type: !121)
!8814 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8809, file: !8707, line: 126, type: !137)
!8815 = !DILocalVariable(name: "n", scope: !8809, file: !8707, line: 128, type: !137)
!8816 = !DILocation(line: 0, scope: !8809)
!8817 = !DILocation(line: 130, column: 9, scope: !8809)
!8818 = !DILocation(line: 130, column: 12, scope: !8809)
!8819 = !DILocation(line: 130, column: 20, scope: !8809)
!8820 = !DILocation(line: 130, column: 2, scope: !8809)
!8821 = !DILocation(line: 131, column: 4, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8809, file: !8707, line: 130, column: 35)
!8823 = !DILocation(line: 132, column: 4, scope: !8822)
!8824 = distinct !{!8824, !8820, !8825}
!8825 = !DILocation(line: 133, column: 2, scope: !8809)
!8826 = !DILocation(line: 135, column: 2, scope: !8809)
!8827 = distinct !DISubprogram(name: "strcmp", scope: !8707, file: !8707, line: 145, type: !8828, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8830)
!8828 = !DISubroutineType(types: !8829)
!8829 = !{!107, !121, !121}
!8830 = !{!8831, !8832}
!8831 = !DILocalVariable(name: "s1", arg: 1, scope: !8827, file: !8707, line: 145, type: !121)
!8832 = !DILocalVariable(name: "s2", arg: 2, scope: !8827, file: !8707, line: 145, type: !121)
!8833 = !DILocation(line: 0, scope: !8827)
!8834 = !DILocation(line: 147, column: 10, scope: !8827)
!8835 = !DILocation(line: 147, column: 17, scope: !8827)
!8836 = !DILocation(line: 147, column: 14, scope: !8827)
!8837 = !DILocation(line: 147, column: 22, scope: !8827)
!8838 = !DILocation(line: 148, column: 5, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8827, file: !8707, line: 147, column: 40)
!8840 = !DILocation(line: 149, column: 5, scope: !8839)
!8841 = distinct !{!8841, !8842, !8843}
!8842 = !DILocation(line: 147, column: 2, scope: !8827)
!8843 = !DILocation(line: 150, column: 2, scope: !8827)
!8844 = !DILocation(line: 152, column: 9, scope: !8827)
!8845 = !DILocation(line: 152, column: 15, scope: !8827)
!8846 = !DILocation(line: 152, column: 13, scope: !8827)
!8847 = !DILocation(line: 152, column: 2, scope: !8827)
!8848 = distinct !DISubprogram(name: "strncmp", scope: !8707, file: !8707, line: 162, type: !8849, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8851)
!8849 = !DISubroutineType(types: !8850)
!8850 = !{!107, !121, !121, !137}
!8851 = !{!8852, !8853, !8854}
!8852 = !DILocalVariable(name: "s1", arg: 1, scope: !8848, file: !8707, line: 162, type: !121)
!8853 = !DILocalVariable(name: "s2", arg: 2, scope: !8848, file: !8707, line: 162, type: !121)
!8854 = !DILocalVariable(name: "n", arg: 3, scope: !8848, file: !8707, line: 162, type: !137)
!8855 = !DILocation(line: 0, scope: !8848)
!8856 = !DILocation(line: 164, column: 17, scope: !8848)
!8857 = !DILocation(line: 164, column: 21, scope: !8848)
!8858 = !DILocation(line: 164, column: 28, scope: !8848)
!8859 = !DILocation(line: 164, column: 25, scope: !8848)
!8860 = !DILocation(line: 164, column: 33, scope: !8848)
!8861 = !DILocation(line: 165, column: 5, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8848, file: !8707, line: 164, column: 51)
!8863 = !DILocation(line: 166, column: 5, scope: !8862)
!8864 = !DILocation(line: 167, column: 4, scope: !8862)
!8865 = distinct !{!8865, !8866, !8867}
!8866 = !DILocation(line: 164, column: 2, scope: !8848)
!8867 = !DILocation(line: 168, column: 2, scope: !8848)
!8868 = !DILocation(line: 170, column: 25, scope: !8848)
!8869 = !DILocation(line: 170, column: 31, scope: !8848)
!8870 = !DILocation(line: 170, column: 29, scope: !8848)
!8871 = !DILocation(line: 170, column: 9, scope: !8848)
!8872 = !DILocation(line: 170, column: 2, scope: !8848)
!8873 = distinct !DISubprogram(name: "strtok_r", scope: !8707, file: !8707, line: 180, type: !8874, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8876)
!8874 = !DISubroutineType(types: !8875)
!8875 = !{!283, !283, !121, !400}
!8876 = !{!8877, !8878, !8879, !8880, !8881}
!8877 = !DILocalVariable(name: "str", arg: 1, scope: !8873, file: !8707, line: 180, type: !283)
!8878 = !DILocalVariable(name: "sep", arg: 2, scope: !8873, file: !8707, line: 180, type: !121)
!8879 = !DILocalVariable(name: "state", arg: 3, scope: !8873, file: !8707, line: 180, type: !400)
!8880 = !DILocalVariable(name: "start", scope: !8873, file: !8707, line: 182, type: !283)
!8881 = !DILocalVariable(name: "end", scope: !8873, file: !8707, line: 182, type: !283)
!8882 = !DILocation(line: 0, scope: !8873)
!8883 = !DILocation(line: 184, column: 10, scope: !8873)
!8884 = !DILocation(line: 184, column: 22, scope: !8873)
!8885 = !DILocation(line: 187, column: 9, scope: !8873)
!8886 = !DILocation(line: 187, column: 16, scope: !8873)
!8887 = !DILocation(line: 187, column: 19, scope: !8873)
!8888 = !DILocation(line: 187, column: 2, scope: !8873)
!8889 = !DILocation(line: 188, column: 8, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8873, file: !8707, line: 187, column: 40)
!8891 = distinct !{!8891, !8888, !8892}
!8892 = !DILocation(line: 189, column: 2, scope: !8873)
!8893 = !DILocation(line: 198, column: 9, scope: !8873)
!8894 = !DILocation(line: 198, column: 18, scope: !8873)
!8895 = !DILocation(line: 198, column: 17, scope: !8873)
!8896 = !DILocation(line: 198, column: 2, scope: !8873)
!8897 = !DILocation(line: 199, column: 6, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8873, file: !8707, line: 198, column: 37)
!8899 = !DILocation(line: 198, column: 14, scope: !8873)
!8900 = distinct !{!8900, !8896, !8901}
!8901 = !DILocation(line: 200, column: 2, scope: !8873)
!8902 = !DILocation(line: 203, column: 8, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8904, file: !8707, line: 202, column: 20)
!8904 = distinct !DILexicalBlock(scope: !8873, file: !8707, line: 202, column: 6)
!8905 = !DILocation(line: 204, column: 16, scope: !8903)
!8906 = !DILocation(line: 205, column: 2, scope: !8903)
!8907 = !DILocation(line: 210, column: 1, scope: !8873)
!8908 = distinct !DISubprogram(name: "strcat", scope: !8707, file: !8707, line: 212, type: !8708, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8909)
!8909 = !{!8910, !8911}
!8910 = !DILocalVariable(name: "dest", arg: 1, scope: !8908, file: !8707, line: 212, type: !8710)
!8911 = !DILocalVariable(name: "src", arg: 2, scope: !8908, file: !8707, line: 212, type: !8711)
!8912 = !DILocation(line: 0, scope: !8908)
!8913 = !DILocation(line: 214, column: 16, scope: !8908)
!8914 = !DILocation(line: 214, column: 14, scope: !8908)
!8915 = !DILocation(line: 214, column: 2, scope: !8908)
!8916 = !DILocation(line: 215, column: 2, scope: !8908)
!8917 = distinct !DISubprogram(name: "strncat", scope: !8707, file: !8707, line: 218, type: !8729, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8918)
!8918 = !{!8919, !8920, !8921, !8922, !8923}
!8919 = !DILocalVariable(name: "dest", arg: 1, scope: !8917, file: !8707, line: 218, type: !8710)
!8920 = !DILocalVariable(name: "src", arg: 2, scope: !8917, file: !8707, line: 218, type: !8711)
!8921 = !DILocalVariable(name: "n", arg: 3, scope: !8917, file: !8707, line: 219, type: !137)
!8922 = !DILocalVariable(name: "orig_dest", scope: !8917, file: !8707, line: 221, type: !283)
!8923 = !DILocalVariable(name: "len", scope: !8917, file: !8707, line: 222, type: !137)
!8924 = !DILocation(line: 0, scope: !8917)
!8925 = !DILocation(line: 222, column: 15, scope: !8917)
!8926 = !DILocation(line: 224, column: 7, scope: !8917)
!8927 = !DILocation(line: 225, column: 14, scope: !8917)
!8928 = !DILocation(line: 225, column: 19, scope: !8917)
!8929 = !DILocation(line: 225, column: 11, scope: !8917)
!8930 = !DILocation(line: 225, column: 23, scope: !8917)
!8931 = !DILocation(line: 225, column: 28, scope: !8917)
!8932 = !DILocation(line: 225, column: 2, scope: !8917)
!8933 = !DILocation(line: 226, column: 17, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8917, file: !8707, line: 225, column: 38)
!8935 = !DILocation(line: 226, column: 8, scope: !8934)
!8936 = !DILocation(line: 226, column: 11, scope: !8934)
!8937 = distinct !{!8937, !8932, !8938}
!8938 = !DILocation(line: 227, column: 2, scope: !8917)
!8939 = !DILocation(line: 228, column: 8, scope: !8917)
!8940 = !DILocation(line: 230, column: 2, scope: !8917)
!8941 = distinct !DISubprogram(name: "memcmp", scope: !8707, file: !8707, line: 239, type: !8942, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8944)
!8942 = !DISubroutineType(types: !8943)
!8943 = !{!107, !13, !13, !137}
!8944 = !{!8945, !8946, !8947, !8948, !8949}
!8945 = !DILocalVariable(name: "m1", arg: 1, scope: !8941, file: !8707, line: 239, type: !13)
!8946 = !DILocalVariable(name: "m2", arg: 2, scope: !8941, file: !8707, line: 239, type: !13)
!8947 = !DILocalVariable(name: "n", arg: 3, scope: !8941, file: !8707, line: 239, type: !137)
!8948 = !DILocalVariable(name: "c1", scope: !8941, file: !8707, line: 241, type: !121)
!8949 = !DILocalVariable(name: "c2", scope: !8941, file: !8707, line: 242, type: !121)
!8950 = !DILocation(line: 0, scope: !8941)
!8951 = !DILocation(line: 244, column: 7, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8941, file: !8707, line: 244, column: 6)
!8953 = !DILocation(line: 244, column: 6, scope: !8941)
!8954 = !DILocation(line: 248, column: 10, scope: !8941)
!8955 = !DILocation(line: 248, column: 14, scope: !8941)
!8956 = !DILocation(line: 248, column: 19, scope: !8941)
!8957 = !DILocation(line: 248, column: 2, scope: !8941)
!8958 = !DILocation(line: 248, column: 23, scope: !8941)
!8959 = !DILocation(line: 248, column: 30, scope: !8941)
!8960 = !DILocation(line: 248, column: 27, scope: !8941)
!8961 = !DILocation(line: 249, column: 5, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8941, file: !8707, line: 248, column: 36)
!8963 = !DILocation(line: 250, column: 5, scope: !8962)
!8964 = distinct !{!8964, !8957, !8965}
!8965 = !DILocation(line: 251, column: 2, scope: !8941)
!8966 = !DILocation(line: 253, column: 9, scope: !8941)
!8967 = !DILocation(line: 253, column: 15, scope: !8941)
!8968 = !DILocation(line: 253, column: 13, scope: !8941)
!8969 = !DILocation(line: 253, column: 2, scope: !8941)
!8970 = !DILocation(line: 254, column: 1, scope: !8941)
!8971 = distinct !DISubprogram(name: "memmove", scope: !8707, file: !8707, line: 263, type: !8972, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8974)
!8972 = !DISubroutineType(types: !8973)
!8973 = !{!106, !106, !13, !137}
!8974 = !{!8975, !8976, !8977, !8978, !8979}
!8975 = !DILocalVariable(name: "d", arg: 1, scope: !8971, file: !8707, line: 263, type: !106)
!8976 = !DILocalVariable(name: "s", arg: 2, scope: !8971, file: !8707, line: 263, type: !13)
!8977 = !DILocalVariable(name: "n", arg: 3, scope: !8971, file: !8707, line: 263, type: !137)
!8978 = !DILocalVariable(name: "dest", scope: !8971, file: !8707, line: 265, type: !283)
!8979 = !DILocalVariable(name: "src", scope: !8971, file: !8707, line: 266, type: !121)
!8980 = !DILocation(line: 0, scope: !8971)
!8981 = !DILocation(line: 268, column: 21, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8971, file: !8707, line: 268, column: 6)
!8983 = !DILocation(line: 268, column: 28, scope: !8982)
!8984 = !DILocation(line: 268, column: 6, scope: !8971)
!8985 = !DILocation(line: 280, column: 12, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8982, file: !8707, line: 278, column: 9)
!8987 = !DILocation(line: 280, column: 3, scope: !8986)
!8988 = !DILocation(line: 275, column: 5, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8990, file: !8707, line: 274, column: 17)
!8990 = distinct !DILexicalBlock(scope: !8982, file: !8707, line: 268, column: 33)
!8991 = !DILocation(line: 276, column: 14, scope: !8989)
!8992 = !DILocation(line: 276, column: 4, scope: !8989)
!8993 = !DILocation(line: 276, column: 12, scope: !8989)
!8994 = !DILocation(line: 274, column: 12, scope: !8990)
!8995 = !DILocation(line: 274, column: 3, scope: !8990)
!8996 = distinct !{!8996, !8995, !8997}
!8997 = !DILocation(line: 277, column: 3, scope: !8990)
!8998 = !DILocation(line: 281, column: 12, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8986, file: !8707, line: 280, column: 17)
!9000 = !DILocation(line: 281, column: 10, scope: !8999)
!9001 = !DILocation(line: 282, column: 8, scope: !8999)
!9002 = !DILocation(line: 283, column: 7, scope: !8999)
!9003 = !DILocation(line: 284, column: 5, scope: !8999)
!9004 = distinct !{!9004, !8987, !9005}
!9005 = !DILocation(line: 285, column: 3, scope: !8986)
!9006 = !DILocation(line: 288, column: 2, scope: !8971)
!9007 = distinct !DISubprogram(name: "memcpy", scope: !8707, file: !8707, line: 298, type: !9008, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !9012)
!9008 = !DISubroutineType(types: !9009)
!9009 = !{!106, !9010, !9011, !137}
!9010 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!9011 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9012 = !{!9013, !9014, !9015, !9016, !9017}
!9013 = !DILocalVariable(name: "d", arg: 1, scope: !9007, file: !8707, line: 298, type: !9010)
!9014 = !DILocalVariable(name: "s", arg: 2, scope: !9007, file: !8707, line: 298, type: !9011)
!9015 = !DILocalVariable(name: "n", arg: 3, scope: !9007, file: !8707, line: 298, type: !137)
!9016 = !DILocalVariable(name: "d_byte", scope: !9007, file: !8707, line: 302, type: !1109)
!9017 = !DILocalVariable(name: "s_byte", scope: !9007, file: !8707, line: 303, type: !3006)
!9018 = !DILocation(line: 0, scope: !9007)
!9019 = !DILocation(line: 337, column: 11, scope: !9007)
!9020 = !DILocation(line: 337, column: 2, scope: !9007)
!9021 = !DILocation(line: 338, column: 25, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9007, file: !8707, line: 337, column: 16)
!9023 = !DILocation(line: 338, column: 17, scope: !9022)
!9024 = !DILocation(line: 338, column: 11, scope: !9022)
!9025 = !DILocation(line: 338, column: 15, scope: !9022)
!9026 = !DILocation(line: 339, column: 4, scope: !9022)
!9027 = distinct !{!9027, !9020, !9028}
!9028 = !DILocation(line: 340, column: 2, scope: !9007)
!9029 = !DILocation(line: 342, column: 2, scope: !9007)
!9030 = distinct !DISubprogram(name: "memset", scope: !8707, file: !8707, line: 352, type: !9031, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !9033)
!9031 = !DISubroutineType(types: !9032)
!9032 = !{!106, !106, !107, !137}
!9033 = !{!9034, !9035, !9036, !9037, !9038}
!9034 = !DILocalVariable(name: "buf", arg: 1, scope: !9030, file: !8707, line: 352, type: !106)
!9035 = !DILocalVariable(name: "c", arg: 2, scope: !9030, file: !8707, line: 352, type: !107)
!9036 = !DILocalVariable(name: "n", arg: 3, scope: !9030, file: !8707, line: 352, type: !137)
!9037 = !DILocalVariable(name: "d_byte", scope: !9030, file: !8707, line: 356, type: !1109)
!9038 = !DILocalVariable(name: "c_byte", scope: !9030, file: !8707, line: 357, type: !191)
!9039 = !DILocation(line: 0, scope: !9030)
!9040 = !DILocation(line: 357, column: 25, scope: !9030)
!9041 = !DILocation(line: 389, column: 11, scope: !9030)
!9042 = !DILocation(line: 389, column: 2, scope: !9030)
!9043 = !DILocation(line: 390, column: 11, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9030, file: !8707, line: 389, column: 16)
!9045 = !DILocation(line: 390, column: 15, scope: !9044)
!9046 = !DILocation(line: 391, column: 4, scope: !9044)
!9047 = distinct !{!9047, !9042, !9048}
!9048 = !DILocation(line: 392, column: 2, scope: !9030)
!9049 = !DILocation(line: 394, column: 2, scope: !9030)
!9050 = distinct !DISubprogram(name: "memchr", scope: !8707, file: !8707, line: 404, type: !9051, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !9053)
!9051 = !DISubroutineType(types: !9052)
!9052 = !{!106, !13, !107, !137}
!9053 = !{!9054, !9055, !9056, !9057}
!9054 = !DILocalVariable(name: "s", arg: 1, scope: !9050, file: !8707, line: 404, type: !13)
!9055 = !DILocalVariable(name: "c", arg: 2, scope: !9050, file: !8707, line: 404, type: !107)
!9056 = !DILocalVariable(name: "n", arg: 3, scope: !9050, file: !8707, line: 404, type: !137)
!9057 = !DILocalVariable(name: "p", scope: !9058, file: !8707, line: 407, type: !3006)
!9058 = distinct !DILexicalBlock(scope: !9059, file: !8707, line: 406, column: 14)
!9059 = distinct !DILexicalBlock(scope: !9050, file: !8707, line: 406, column: 6)
!9060 = !DILocation(line: 0, scope: !9050)
!9061 = !DILocation(line: 406, column: 8, scope: !9059)
!9062 = !DILocation(line: 406, column: 6, scope: !9050)
!9063 = !DILocation(line: 409, column: 3, scope: !9058)
!9064 = !DILocation(line: 0, scope: !9058)
!9065 = !DILocation(line: 410, column: 8, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !8707, line: 410, column: 8)
!9067 = distinct !DILexicalBlock(scope: !9058, file: !8707, line: 409, column: 6)
!9068 = !DILocation(line: 410, column: 13, scope: !9066)
!9069 = !DILocation(line: 410, column: 8, scope: !9067)
!9070 = distinct !{!9070, !9063, !9071}
!9071 = !DILocation(line: 414, column: 20, scope: !9058)
!9072 = !DILocation(line: 417, column: 2, scope: !9050)
!9073 = !DILocation(line: 418, column: 1, scope: !9050)
!9074 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !682, file: !682, line: 23, type: !4573, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9075)
!9075 = !{!9076}
!9076 = !DILocalVariable(name: "hook", arg: 1, scope: !9074, file: !682, line: 23, type: !417)
!9077 = !DILocation(line: 0, scope: !9074)
!9078 = !DILocation(line: 25, column: 15, scope: !9074)
!9079 = !DILocation(line: 26, column: 1, scope: !9074)
!9080 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !682, file: !682, line: 14, type: !418, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9081)
!9081 = !{!9082}
!9082 = !DILocalVariable(name: "c", arg: 1, scope: !9080, file: !682, line: 14, type: !107)
!9083 = !DILocation(line: 0, scope: !9080)
!9084 = !DILocation(line: 18, column: 2, scope: !9080)
!9085 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !682, file: !682, line: 28, type: !9086, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9088)
!9086 = !DISubroutineType(types: !9087)
!9087 = !{!107, !107, !678}
!9088 = !{!9089, !9090}
!9089 = !DILocalVariable(name: "c", arg: 1, scope: !9085, file: !682, line: 28, type: !107)
!9090 = !DILocalVariable(name: "stream", arg: 2, scope: !9085, file: !682, line: 28, type: !678)
!9091 = !DILocation(line: 0, scope: !9085)
!9092 = !DILocation(line: 30, column: 27, scope: !9085)
!9093 = !DILocation(line: 30, column: 50, scope: !9085)
!9094 = !DILocation(line: 30, column: 9, scope: !9085)
!9095 = !DILocation(line: 30, column: 2, scope: !9085)
!9096 = distinct !DISubprogram(name: "fputc", scope: !682, file: !682, line: 41, type: !9086, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9097)
!9097 = !{!9098, !9099}
!9098 = !DILocalVariable(name: "c", arg: 1, scope: !9096, file: !682, line: 41, type: !107)
!9099 = !DILocalVariable(name: "stream", arg: 2, scope: !9096, file: !682, line: 41, type: !678)
!9100 = !DILocation(line: 0, scope: !9096)
!9101 = !DILocation(line: 43, column: 9, scope: !9096)
!9102 = !DILocation(line: 43, column: 2, scope: !9096)
!9103 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9104, file: !9104, line: 72, type: !9086, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9105)
!9104 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!9105 = !{!9106, !9107}
!9106 = !DILocalVariable(name: "c", arg: 1, scope: !9103, file: !9104, line: 72, type: !107)
!9107 = !DILocalVariable(name: "stream", arg: 2, scope: !9103, file: !9104, line: 72, type: !678)
!9108 = !DILocation(line: 0, scope: !9103)
!9109 = !DILocation(line: 81, column: 2, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9103, file: !9104, line: 81, column: 2)
!9111 = !{i64 2154904829}
!9112 = !DILocation(line: 82, column: 9, scope: !9103)
!9113 = !DILocation(line: 82, column: 2, scope: !9103)
!9114 = distinct !DISubprogram(name: "fputs", scope: !682, file: !682, line: 46, type: !9115, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9118)
!9115 = !DISubroutineType(types: !9116)
!9116 = !{!107, !8711, !9117}
!9117 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !678)
!9118 = !{!9119, !9120, !9121, !9122}
!9119 = !DILocalVariable(name: "s", arg: 1, scope: !9114, file: !682, line: 46, type: !8711)
!9120 = !DILocalVariable(name: "stream", arg: 2, scope: !9114, file: !682, line: 46, type: !9117)
!9121 = !DILocalVariable(name: "len", scope: !9114, file: !682, line: 48, type: !107)
!9122 = !DILocalVariable(name: "ret", scope: !9114, file: !682, line: 49, type: !107)
!9123 = !DILocation(line: 0, scope: !9114)
!9124 = !DILocation(line: 48, column: 12, scope: !9114)
!9125 = !DILocation(line: 51, column: 8, scope: !9114)
!9126 = !DILocation(line: 53, column: 13, scope: !9114)
!9127 = !DILocation(line: 53, column: 9, scope: !9114)
!9128 = !DILocation(line: 53, column: 2, scope: !9114)
!9129 = distinct !DISubprogram(name: "fwrite", scope: !682, file: !682, line: 99, type: !9130, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9132)
!9130 = !DISubroutineType(types: !9131)
!9131 = !{!137, !9011, !137, !137, !9117}
!9132 = !{!9133, !9134, !9135, !9136}
!9133 = !DILocalVariable(name: "ptr", arg: 1, scope: !9129, file: !682, line: 99, type: !9011)
!9134 = !DILocalVariable(name: "size", arg: 2, scope: !9129, file: !682, line: 99, type: !137)
!9135 = !DILocalVariable(name: "nitems", arg: 3, scope: !9129, file: !682, line: 99, type: !137)
!9136 = !DILocalVariable(name: "stream", arg: 4, scope: !9129, file: !682, line: 100, type: !9117)
!9137 = !DILocation(line: 0, scope: !9129)
!9138 = !DILocation(line: 102, column: 9, scope: !9129)
!9139 = !DILocation(line: 102, column: 2, scope: !9129)
!9140 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9104, file: !9104, line: 96, type: !9130, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9141)
!9141 = !{!9142, !9143, !9144, !9145}
!9142 = !DILocalVariable(name: "ptr", arg: 1, scope: !9140, file: !9104, line: 96, type: !9011)
!9143 = !DILocalVariable(name: "size", arg: 2, scope: !9140, file: !9104, line: 96, type: !137)
!9144 = !DILocalVariable(name: "nitems", arg: 3, scope: !9140, file: !9104, line: 96, type: !137)
!9145 = !DILocalVariable(name: "stream", arg: 4, scope: !9140, file: !9104, line: 96, type: !9117)
!9146 = !DILocation(line: 0, scope: !9140)
!9147 = !DILocation(line: 107, column: 2, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9140, file: !9104, line: 107, column: 2)
!9149 = !{i64 2154904933}
!9150 = !DILocation(line: 108, column: 9, scope: !9140)
!9151 = !DILocation(line: 108, column: 2, scope: !9140)
!9152 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !682, file: !682, line: 56, type: !9130, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9153)
!9153 = !{!9154, !9155, !9156, !9157, !9158, !9159, !9160, !9161}
!9154 = !DILocalVariable(name: "ptr", arg: 1, scope: !9152, file: !682, line: 56, type: !9011)
!9155 = !DILocalVariable(name: "size", arg: 2, scope: !9152, file: !682, line: 56, type: !137)
!9156 = !DILocalVariable(name: "nitems", arg: 3, scope: !9152, file: !682, line: 57, type: !137)
!9157 = !DILocalVariable(name: "stream", arg: 4, scope: !9152, file: !682, line: 57, type: !9117)
!9158 = !DILocalVariable(name: "i", scope: !9152, file: !682, line: 59, type: !137)
!9159 = !DILocalVariable(name: "j", scope: !9152, file: !682, line: 60, type: !137)
!9160 = !DILocalVariable(name: "p", scope: !9152, file: !682, line: 61, type: !3006)
!9161 = !DILabel(scope: !9152, name: "done", file: !682, line: 82)
!9162 = !DILocation(line: 0, scope: !9152)
!9163 = !DILocation(line: 63, column: 14, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9152, file: !682, line: 63, column: 6)
!9165 = !DILocation(line: 63, column: 24, scope: !9164)
!9166 = !DILocation(line: 72, column: 3, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9152, file: !682, line: 70, column: 5)
!9168 = !DILocation(line: 0, scope: !9167)
!9169 = !DILocation(line: 73, column: 8, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9171, file: !682, line: 73, column: 8)
!9171 = distinct !DILexicalBlock(scope: !9167, file: !682, line: 72, column: 6)
!9172 = !DILocation(line: 73, column: 29, scope: !9170)
!9173 = !DILocation(line: 73, column: 27, scope: !9170)
!9174 = !DILocation(line: 73, column: 21, scope: !9170)
!9175 = !DILocation(line: 73, column: 33, scope: !9170)
!9176 = !DILocation(line: 73, column: 8, scope: !9171)
!9177 = !DILocation(line: 76, column: 5, scope: !9171)
!9178 = !DILocation(line: 77, column: 14, scope: !9167)
!9179 = !DILocation(line: 77, column: 3, scope: !9171)
!9180 = distinct !{!9180, !9166, !9181}
!9181 = !DILocation(line: 77, column: 17, scope: !9167)
!9182 = !DILocation(line: 79, column: 4, scope: !9167)
!9183 = !DILocation(line: 80, column: 13, scope: !9152)
!9184 = !DILocation(line: 80, column: 2, scope: !9167)
!9185 = distinct !{!9185, !9186, !9187}
!9186 = !DILocation(line: 70, column: 2, scope: !9152)
!9187 = !DILocation(line: 80, column: 16, scope: !9152)
!9188 = !DILocation(line: 82, column: 1, scope: !9152)
!9189 = !DILocation(line: 83, column: 17, scope: !9152)
!9190 = !DILocation(line: 83, column: 2, scope: !9152)
!9191 = !DILocation(line: 84, column: 1, scope: !9152)
!9192 = distinct !DISubprogram(name: "puts", scope: !682, file: !682, line: 106, type: !9193, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9195)
!9193 = !DISubroutineType(types: !9194)
!9194 = !{!107, !121}
!9195 = !{!9196}
!9196 = !DILocalVariable(name: "s", arg: 1, scope: !9192, file: !682, line: 106, type: !121)
!9197 = !DILocation(line: 0, scope: !9192)
!9198 = !DILocation(line: 108, column: 6, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9192, file: !682, line: 108, column: 6)
!9200 = !DILocation(line: 108, column: 23, scope: !9199)
!9201 = !DILocation(line: 108, column: 6, scope: !9192)
!9202 = !DILocation(line: 112, column: 9, scope: !9192)
!9203 = !DILocation(line: 112, column: 29, scope: !9192)
!9204 = !DILocation(line: 112, column: 2, scope: !9192)
!9205 = !DILocation(line: 113, column: 1, scope: !9192)
!9206 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !714, file: !714, line: 12, type: !9207, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9213)
!9207 = !DISubroutineType(types: !9208)
!9208 = !{!9209, !109}
!9209 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !9210)
!9210 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !9211)
!9211 = !{!9212}
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9210, file: !103, line: 66, baseType: !102, size: 64)
!9213 = !{!9214, !9215}
!9214 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9206, file: !714, line: 12, type: !109)
!9215 = !DILocalVariable(name: "now_ticks", scope: !9206, file: !714, line: 14, type: !104)
!9216 = !DILocation(line: 0, scope: !9206)
!9217 = !DILocation(line: 14, column: 22, scope: !9206)
!9218 = !DILocation(line: 16, column: 9, scope: !9206)
!9219 = !DILocation(line: 17, column: 1, scope: !9206)
!9220 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !714, file: !714, line: 103, type: !9221, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9369)
!9221 = !DISubroutineType(types: !9222)
!9222 = !{!107, !9223, !13, !9209}
!9223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9224, size: 32)
!9224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9225)
!9225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 224, elements: !9226)
!9226 = !{!9227, !9228, !9229, !9230, !9231, !9232, !9340}
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9225, file: !117, line: 32, baseType: !120, size: 32)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9225, file: !117, line: 35, baseType: !125, size: 16, offset: 32)
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9225, file: !117, line: 40, baseType: !129, size: 32, offset: 64)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9225, file: !117, line: 45, baseType: !129, size: 32, offset: 96)
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9225, file: !117, line: 51, baseType: !132, size: 32, offset: 128)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9225, file: !117, line: 56, baseType: !9233, size: 32, offset: 160)
!9233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9234, size: 32)
!9234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !142, line: 2720, size: 160, elements: !9235)
!9235 = !{!9236, !9255, !9338, !9339}
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9234, file: !142, line: 2722, baseType: !9237, size: 64)
!9237 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !9238)
!9238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !9239)
!9239 = !{!9240}
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9238, file: !146, line: 232, baseType: !9241, size: 64)
!9241 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !9242)
!9242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !9243)
!9243 = !{!9244, !9250}
!9244 = !DIDerivedType(tag: DW_TAG_member, scope: !9242, file: !151, line: 38, baseType: !9245, size: 32)
!9245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9242, file: !151, line: 38, size: 32, elements: !9246)
!9246 = !{!9247, !9249}
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9245, file: !151, line: 39, baseType: !9248, size: 32)
!9248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9242, size: 32)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9245, file: !151, line: 40, baseType: !9248, size: 32)
!9250 = !DIDerivedType(tag: DW_TAG_member, scope: !9242, file: !151, line: 42, baseType: !9251, size: 32, offset: 32)
!9251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9242, file: !151, line: 42, size: 32, elements: !9252)
!9252 = !{!9253, !9254}
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9251, file: !151, line: 43, baseType: !9248, size: 32)
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9251, file: !151, line: 44, baseType: !9248, size: 32)
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9234, file: !142, line: 2724, baseType: !9256, size: 32, offset: 64)
!9256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9257, size: 32)
!9257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !9258)
!9258 = !{!9259, !9299, !9311, !9312, !9313, !9314, !9320, !9333}
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9257, file: !168, line: 247, baseType: !9260, size: 384)
!9260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !9261)
!9261 = !{!9262, !9273, !9275, !9276, !9277, !9286, !9287, !9288}
!9262 = !DIDerivedType(tag: DW_TAG_member, scope: !9260, file: !168, line: 60, baseType: !9263, size: 64)
!9263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9260, file: !168, line: 60, size: 64, elements: !9264)
!9264 = !{!9265, !9267}
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9263, file: !168, line: 61, baseType: !9266, size: 64)
!9266 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !9242)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9263, file: !168, line: 62, baseType: !9268, size: 64)
!9268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !9269)
!9269 = !{!9270}
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9268, file: !180, line: 50, baseType: !9271, size: 64)
!9271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9272, size: 64, elements: !185)
!9272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9268, size: 32)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9260, file: !168, line: 68, baseType: !9274, size: 32, offset: 64)
!9274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9237, size: 32)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9260, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9260, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!9277 = !DIDerivedType(tag: DW_TAG_member, scope: !9260, file: !168, line: 90, baseType: !9278, size: 16, offset: 112)
!9278 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9260, file: !168, line: 90, size: 16, elements: !9279)
!9279 = !{!9280, !9285}
!9280 = !DIDerivedType(tag: DW_TAG_member, scope: !9278, file: !168, line: 91, baseType: !9281, size: 16)
!9281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9278, file: !168, line: 91, size: 16, elements: !9282)
!9282 = !{!9283, !9284}
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9281, file: !168, line: 96, baseType: !200, size: 8)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9281, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9278, file: !168, line: 100, baseType: !126, size: 16)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9260, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9260, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9260, file: !168, line: 131, baseType: !9289, size: 192, offset: 192)
!9289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !9290)
!9290 = !{!9291, !9292, !9298}
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9289, file: !146, line: 245, baseType: !9266, size: 64)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9289, file: !146, line: 246, baseType: !9293, size: 32, offset: 64)
!9293 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !9294)
!9294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9295, size: 32)
!9295 = !DISubroutineType(types: !9296)
!9296 = !{null, !9297}
!9297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9289, size: 32)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9289, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9257, file: !168, line: 250, baseType: !9300, size: 288, offset: 384)
!9300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !9301)
!9301 = !{!9302, !9303, !9304, !9305, !9306, !9307, !9308, !9309, !9310}
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9300, file: !219, line: 26, baseType: !108, size: 32)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9300, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9300, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9300, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9300, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9300, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9300, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9300, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9300, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9257, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9257, file: !168, line: 256, baseType: !9237, size: 64, offset: 704)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9257, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9257, file: !168, line: 300, baseType: !9315, size: 96, offset: 800)
!9315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !9316)
!9316 = !{!9317, !9318, !9319}
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9315, file: !168, line: 153, baseType: !22, size: 32)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9315, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9315, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9257, file: !168, line: 325, baseType: !9321, size: 32, offset: 896)
!9321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9322, size: 32)
!9322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !9323)
!9323 = !{!9324, !9330, !9331}
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9322, file: !142, line: 5074, baseType: !9325, size: 96)
!9325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !9326)
!9326 = !{!9327, !9328, !9329}
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9325, file: !245, line: 57, baseType: !248, size: 32)
!9328 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9325, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!9329 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9325, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9322, file: !142, line: 5075, baseType: !9237, size: 64, offset: 96)
!9331 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9322, file: !142, line: 5076, baseType: !9332, offset: 160)
!9332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!9333 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9257, file: !168, line: 343, baseType: !9334, size: 64, offset: 928)
!9334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !9335)
!9335 = !{!9336, !9337}
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9334, file: !219, line: 63, baseType: !108, size: 32)
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9334, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9234, file: !142, line: 2727, baseType: !108, size: 32, offset: 96)
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9234, file: !142, line: 2730, baseType: !107, size: 32, offset: 128)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9225, file: !117, line: 67, baseType: !9341, size: 32, offset: 192)
!9341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9342, size: 32)
!9342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9343)
!9343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9344, size: 32)
!9344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9345)
!9345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 128, elements: !9346)
!9346 = !{!9347, !9348, !9349, !9364}
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9345, file: !117, line: 88, baseType: !120, size: 32)
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9345, file: !117, line: 91, baseType: !136, size: 8, offset: 32)
!9349 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9345, file: !117, line: 93, baseType: !9350, size: 32, offset: 64)
!9350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9351)
!9351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9352, size: 32)
!9352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !142, line: 4204, size: 320, elements: !9353)
!9353 = !{!9354, !9355, !9356, !9357, !9358, !9359, !9360, !9361, !9362, !9363}
!9354 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9352, file: !142, line: 4206, baseType: !9237, size: 64)
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9352, file: !142, line: 4208, baseType: !9332, offset: 64)
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9352, file: !142, line: 4210, baseType: !137, size: 32, offset: 64)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9352, file: !142, line: 4212, baseType: !108, size: 32, offset: 96)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9352, file: !142, line: 4214, baseType: !283, size: 32, offset: 128)
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9352, file: !142, line: 4216, baseType: !283, size: 32, offset: 160)
!9360 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9352, file: !142, line: 4218, baseType: !283, size: 32, offset: 192)
!9361 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9352, file: !142, line: 4220, baseType: !283, size: 32, offset: 224)
!9362 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9352, file: !142, line: 4222, baseType: !108, size: 32, offset: 256)
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9352, file: !142, line: 4227, baseType: !190, size: 8, offset: 288)
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9345, file: !117, line: 96, baseType: !9365, size: 32, offset: 96)
!9365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9366)
!9366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9367, size: 32)
!9367 = !DISubroutineType(types: !9368)
!9368 = !{null, !9223}
!9369 = !{!9370, !9371, !9372, !9373, !9374}
!9370 = !DILocalVariable(name: "chan", arg: 1, scope: !9220, file: !714, line: 103, type: !9223)
!9371 = !DILocalVariable(name: "msg", arg: 2, scope: !9220, file: !714, line: 103, type: !13)
!9372 = !DILocalVariable(name: "timeout", arg: 3, scope: !9220, file: !714, line: 103, type: !9209)
!9373 = !DILocalVariable(name: "err", scope: !9220, file: !714, line: 105, type: !107)
!9374 = !DILocalVariable(name: "end_ticks", scope: !9220, file: !714, line: 106, type: !109)
!9375 = !DILocation(line: 0, scope: !9220)
!9376 = !DILocation(line: 106, column: 23, scope: !9220)
!9377 = !DILocation(line: 112, column: 12, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9220, file: !714, line: 112, column: 6)
!9379 = !DILocation(line: 112, column: 22, scope: !9378)
!9380 = !DILocation(line: 112, column: 30, scope: !9378)
!9381 = !DILocation(line: 112, column: 61, scope: !9378)
!9382 = !DILocation(line: 112, column: 55, scope: !9378)
!9383 = !DILocation(line: 112, column: 34, scope: !9378)
!9384 = !DILocation(line: 112, column: 6, scope: !9220)
!9385 = !DILocation(line: 116, column: 27, scope: !9220)
!9386 = !DILocation(line: 116, column: 8, scope: !9220)
!9387 = !DILocation(line: 117, column: 6, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9220, file: !714, line: 117, column: 6)
!9389 = !DILocation(line: 117, column: 6, scope: !9220)
!9390 = !DILocation(line: 121, column: 15, scope: !9220)
!9391 = !DILocation(line: 121, column: 35, scope: !9220)
!9392 = !DILocation(line: 121, column: 29, scope: !9220)
!9393 = !DILocation(line: 121, column: 2, scope: !9220)
!9394 = !DILocation(line: 123, column: 8, scope: !9220)
!9395 = !DILocation(line: 125, column: 23, scope: !9220)
!9396 = !DILocation(line: 125, column: 2, scope: !9220)
!9397 = !DILocation(line: 127, column: 2, scope: !9220)
!9398 = !DILocation(line: 128, column: 1, scope: !9220)
!9399 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3675, file: !3675, line: 927, type: !9400, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9402)
!9400 = !DISubroutineType(types: !9401)
!9401 = !{!107, !9233, !9209}
!9402 = !{!9403, !9404}
!9403 = !DILocalVariable(name: "mutex", arg: 1, scope: !9399, file: !3675, line: 927, type: !9233)
!9404 = !DILocalVariable(name: "timeout", arg: 2, scope: !9399, file: !3675, line: 927, type: !9209)
!9405 = !DILocation(line: 0, scope: !9399)
!9406 = !DILocation(line: 936, column: 2, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9399, file: !3675, line: 936, column: 2)
!9408 = !{i64 2154846474}
!9409 = !DILocation(line: 937, column: 9, scope: !9399)
!9410 = !DILocation(line: 937, column: 2, scope: !9399)
!9411 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !714, file: !714, line: 66, type: !9412, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9414)
!9412 = !DISubroutineType(types: !9413)
!9413 = !{!107, !9223, !109}
!9414 = !{!9415, !9416, !9417, !9418, !9419, !9421}
!9415 = !DILocalVariable(name: "chan", arg: 1, scope: !9411, file: !714, line: 66, type: !9223)
!9416 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9411, file: !714, line: 66, type: !109)
!9417 = !DILocalVariable(name: "last_error", scope: !9411, file: !714, line: 68, type: !107)
!9418 = !DILocalVariable(name: "err", scope: !9411, file: !714, line: 68, type: !107)
!9419 = !DILocalVariable(name: "obs", scope: !9420, file: !714, line: 70, type: !9341)
!9420 = distinct !DILexicalBlock(scope: !9411, file: !714, line: 70, column: 2)
!9421 = !DILocalVariable(name: "obs", scope: !9422, file: !714, line: 81, type: !9341)
!9422 = distinct !DILexicalBlock(scope: !9411, file: !714, line: 81, column: 2)
!9423 = !DILocation(line: 0, scope: !9411)
!9424 = !DILocation(line: 70, column: 54, scope: !9420)
!9425 = !DILocation(line: 0, scope: !9420)
!9426 = !DILocation(line: 70, column: 65, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9420, file: !714, line: 70, column: 2)
!9428 = !DILocation(line: 70, column: 70, scope: !9427)
!9429 = !DILocation(line: 70, column: 2, scope: !9420)
!9430 = !DILocation(line: 81, column: 54, scope: !9422)
!9431 = !DILocation(line: 81, column: 65, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9422, file: !714, line: 81, column: 2)
!9433 = !DILocation(line: 0, scope: !9422)
!9434 = !DILocation(line: 81, column: 70, scope: !9432)
!9435 = !DILocation(line: 81, column: 2, scope: !9422)
!9436 = !DILocation(line: 71, column: 15, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !714, line: 71, column: 7)
!9438 = distinct !DILexicalBlock(scope: !9427, file: !714, line: 70, column: 86)
!9439 = !DILocation(line: 71, column: 23, scope: !9437)
!9440 = !DILocation(line: 71, column: 35, scope: !9437)
!9441 = !DILocation(line: 71, column: 44, scope: !9437)
!9442 = !DILocation(line: 71, column: 7, scope: !9438)
!9443 = !DILocation(line: 72, column: 4, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9437, file: !714, line: 71, column: 54)
!9445 = !DILocation(line: 73, column: 3, scope: !9444)
!9446 = !DILocation(line: 70, column: 79, scope: !9427)
!9447 = distinct !{!9447, !9429, !9448}
!9448 = !DILocation(line: 74, column: 2, scope: !9420)
!9449 = !DILocation(line: 100, column: 2, scope: !9411)
!9450 = !DILocation(line: 82, column: 15, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9452, file: !714, line: 82, column: 7)
!9452 = distinct !DILexicalBlock(scope: !9432, file: !714, line: 81, column: 86)
!9453 = !DILocation(line: 82, column: 23, scope: !9451)
!9454 = !DILocation(line: 82, column: 35, scope: !9451)
!9455 = !DILocation(line: 82, column: 41, scope: !9451)
!9456 = !DILocation(line: 82, column: 7, scope: !9452)
!9457 = !DILocation(line: 83, column: 43, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9451, file: !714, line: 82, column: 51)
!9459 = !DILocation(line: 83, column: 10, scope: !9458)
!9460 = !DILocation(line: 86, column: 8, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9458, file: !714, line: 86, column: 8)
!9462 = !DILocation(line: 86, column: 8, scope: !9458)
!9463 = !DILocation(line: 87, column: 5, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9465, file: !714, line: 87, column: 5)
!9465 = distinct !DILexicalBlock(scope: !9466, file: !714, line: 87, column: 5)
!9466 = distinct !DILexicalBlock(scope: !9467, file: !714, line: 87, column: 5)
!9467 = distinct !DILexicalBlock(scope: !9468, file: !714, line: 87, column: 5)
!9468 = distinct !DILexicalBlock(scope: !9461, file: !714, line: 86, column: 13)
!9469 = !DILocation(line: 90, column: 4, scope: !9468)
!9470 = !DILocation(line: 81, column: 79, scope: !9432)
!9471 = distinct !{!9471, !9435, !9472}
!9472 = !DILocation(line: 92, column: 2, scope: !9422)
!9473 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3675, file: !3675, line: 944, type: !9474, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9476)
!9474 = !DISubroutineType(types: !9475)
!9475 = !{!107, !9233}
!9476 = !{!9477}
!9477 = !DILocalVariable(name: "mutex", arg: 1, scope: !9473, file: !3675, line: 944, type: !9233)
!9478 = !DILocation(line: 0, scope: !9473)
!9479 = !DILocation(line: 952, column: 2, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9473, file: !3675, line: 952, column: 2)
!9481 = !{i64 2154846542}
!9482 = !DILocation(line: 953, column: 9, scope: !9473)
!9483 = !DILocation(line: 953, column: 2, scope: !9473)
!9484 = distinct !DISubprogram(name: "k_msgq_put", scope: !3675, file: !3675, line: 1129, type: !9485, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9487)
!9485 = !DISubroutineType(types: !9486)
!9486 = !{!107, !9351, !13, !9209}
!9487 = !{!9488, !9489, !9490}
!9488 = !DILocalVariable(name: "msgq", arg: 1, scope: !9484, file: !3675, line: 1129, type: !9351)
!9489 = !DILocalVariable(name: "data", arg: 2, scope: !9484, file: !3675, line: 1129, type: !13)
!9490 = !DILocalVariable(name: "timeout", arg: 3, scope: !9484, file: !3675, line: 1129, type: !9209)
!9491 = !DILocation(line: 0, scope: !9484)
!9492 = !DILocation(line: 1139, column: 2, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9484, file: !3675, line: 1139, column: 2)
!9494 = !{i64 2154847290}
!9495 = !DILocation(line: 1140, column: 9, scope: !9484)
!9496 = !DILocation(line: 1140, column: 2, scope: !9484)
!9497 = distinct !DISubprogram(name: "zbus_chan_read", scope: !714, file: !714, line: 130, type: !9498, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9500)
!9498 = !DISubroutineType(types: !9499)
!9499 = !{!107, !9223, !106, !9209}
!9500 = !{!9501, !9502, !9503, !9504}
!9501 = !DILocalVariable(name: "chan", arg: 1, scope: !9497, file: !714, line: 130, type: !9223)
!9502 = !DILocalVariable(name: "msg", arg: 2, scope: !9497, file: !714, line: 130, type: !106)
!9503 = !DILocalVariable(name: "timeout", arg: 3, scope: !9497, file: !714, line: 130, type: !9209)
!9504 = !DILocalVariable(name: "err", scope: !9497, file: !714, line: 132, type: !107)
!9505 = !DILocation(line: 0, scope: !9497)
!9506 = !DILocation(line: 138, column: 27, scope: !9497)
!9507 = !DILocation(line: 138, column: 8, scope: !9497)
!9508 = !DILocation(line: 139, column: 6, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9497, file: !714, line: 139, column: 6)
!9510 = !DILocation(line: 139, column: 6, scope: !9497)
!9511 = !DILocation(line: 143, column: 20, scope: !9497)
!9512 = !DILocation(line: 143, column: 35, scope: !9497)
!9513 = !DILocation(line: 143, column: 29, scope: !9497)
!9514 = !DILocation(line: 143, column: 2, scope: !9497)
!9515 = !DILocation(line: 145, column: 30, scope: !9497)
!9516 = !DILocation(line: 145, column: 9, scope: !9497)
!9517 = !DILocation(line: 145, column: 2, scope: !9497)
!9518 = !DILocation(line: 146, column: 1, scope: !9497)
!9519 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !714, file: !714, line: 148, type: !9520, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9522)
!9520 = !DISubroutineType(types: !9521)
!9521 = !{!107, !9223, !9209}
!9522 = !{!9523, !9524, !9525, !9526}
!9523 = !DILocalVariable(name: "chan", arg: 1, scope: !9519, file: !714, line: 148, type: !9223)
!9524 = !DILocalVariable(name: "timeout", arg: 2, scope: !9519, file: !714, line: 148, type: !9209)
!9525 = !DILocalVariable(name: "err", scope: !9519, file: !714, line: 150, type: !107)
!9526 = !DILocalVariable(name: "end_ticks", scope: !9519, file: !714, line: 151, type: !109)
!9527 = !DILocation(line: 0, scope: !9519)
!9528 = !DILocation(line: 151, column: 23, scope: !9519)
!9529 = !DILocation(line: 156, column: 27, scope: !9519)
!9530 = !DILocation(line: 156, column: 8, scope: !9519)
!9531 = !DILocation(line: 157, column: 6, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9519, file: !714, line: 157, column: 6)
!9533 = !DILocation(line: 157, column: 6, scope: !9519)
!9534 = !DILocation(line: 161, column: 8, scope: !9519)
!9535 = !DILocation(line: 163, column: 23, scope: !9519)
!9536 = !DILocation(line: 163, column: 2, scope: !9519)
!9537 = !DILocation(line: 165, column: 2, scope: !9519)
!9538 = !DILocation(line: 166, column: 1, scope: !9519)
!9539 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !714, file: !714, line: 168, type: !9520, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9540)
!9540 = !{!9541, !9542, !9543}
!9541 = !DILocalVariable(name: "chan", arg: 1, scope: !9539, file: !714, line: 168, type: !9223)
!9542 = !DILocalVariable(name: "timeout", arg: 2, scope: !9539, file: !714, line: 168, type: !9209)
!9543 = !DILocalVariable(name: "err", scope: !9539, file: !714, line: 173, type: !107)
!9544 = !DILocation(line: 0, scope: !9539)
!9545 = !DILocation(line: 173, column: 31, scope: !9539)
!9546 = !DILocation(line: 173, column: 12, scope: !9539)
!9547 = !DILocation(line: 180, column: 1, scope: !9539)
!9548 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !714, file: !714, line: 182, type: !9549, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9551)
!9549 = !DISubroutineType(types: !9550)
!9550 = !{!107, !9223}
!9551 = !{!9552, !9553}
!9552 = !DILocalVariable(name: "chan", arg: 1, scope: !9548, file: !714, line: 182, type: !9223)
!9553 = !DILocalVariable(name: "err", scope: !9548, file: !714, line: 187, type: !107)
!9554 = !DILocation(line: 0, scope: !9548)
!9555 = !DILocation(line: 187, column: 33, scope: !9548)
!9556 = !DILocation(line: 187, column: 12, scope: !9548)
!9557 = !DILocation(line: 189, column: 2, scope: !9548)
!9558 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !714, file: !714, line: 192, type: !9559, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9562)
!9559 = !DISubroutineType(types: !9560)
!9560 = !{!107, !9343, !9561, !9209}
!9561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9223, size: 32)
!9562 = !{!9563, !9564, !9565}
!9563 = !DILocalVariable(name: "sub", arg: 1, scope: !9558, file: !714, line: 192, type: !9343)
!9564 = !DILocalVariable(name: "chan", arg: 2, scope: !9558, file: !714, line: 192, type: !9561)
!9565 = !DILocalVariable(name: "timeout", arg: 3, scope: !9558, file: !714, line: 193, type: !9209)
!9566 = !DILocation(line: 0, scope: !9558)
!9567 = !DILocation(line: 199, column: 11, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9558, file: !714, line: 199, column: 6)
!9569 = !DILocation(line: 199, column: 17, scope: !9568)
!9570 = !DILocation(line: 199, column: 6, scope: !9558)
!9571 = !DILocation(line: 203, column: 32, scope: !9558)
!9572 = !DILocation(line: 203, column: 9, scope: !9558)
!9573 = !DILocation(line: 203, column: 2, scope: !9558)
!9574 = !DILocation(line: 204, column: 1, scope: !9558)
!9575 = distinct !DISubprogram(name: "k_msgq_get", scope: !3675, file: !3675, line: 1147, type: !9576, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9578)
!9576 = !DISubroutineType(types: !9577)
!9577 = !{!107, !9351, !106, !9209}
!9578 = !{!9579, !9580, !9581}
!9579 = !DILocalVariable(name: "msgq", arg: 1, scope: !9575, file: !3675, line: 1147, type: !9351)
!9580 = !DILocalVariable(name: "data", arg: 2, scope: !9575, file: !3675, line: 1147, type: !106)
!9581 = !DILocalVariable(name: "timeout", arg: 3, scope: !9575, file: !3675, line: 1147, type: !9209)
!9582 = !DILocation(line: 0, scope: !9575)
!9583 = !DILocation(line: 1157, column: 2, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9575, file: !3675, line: 1157, column: 2)
!9585 = !{i64 2154847358}
!9586 = !DILocation(line: 1158, column: 9, scope: !9575)
!9587 = !DILocation(line: 1158, column: 2, scope: !9575)
!9588 = distinct !DISubprogram(name: "zbus_iterate_over_channels", scope: !9589, file: !9589, line: 9, type: !9590, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !9741)
!9589 = !DIFile(filename: "zephyr/subsys/zbus/zbus_iterable_sections.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9590 = !DISubroutineType(types: !9591)
!9591 = !{!136, !9592}
!9592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9593, size: 32)
!9593 = !DISubroutineType(types: !9594)
!9594 = !{!136, !9595}
!9595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9596, size: 32)
!9596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9597)
!9597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 224, elements: !9598)
!9598 = !{!9599, !9600, !9601, !9602, !9603, !9604, !9712}
!9599 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9597, file: !117, line: 32, baseType: !120, size: 32)
!9600 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9597, file: !117, line: 35, baseType: !125, size: 16, offset: 32)
!9601 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9597, file: !117, line: 40, baseType: !129, size: 32, offset: 64)
!9602 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9597, file: !117, line: 45, baseType: !129, size: 32, offset: 96)
!9603 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9597, file: !117, line: 51, baseType: !132, size: 32, offset: 128)
!9604 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9597, file: !117, line: 56, baseType: !9605, size: 32, offset: 160)
!9605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9606, size: 32)
!9606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !142, line: 2720, size: 160, elements: !9607)
!9607 = !{!9608, !9627, !9710, !9711}
!9608 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9606, file: !142, line: 2722, baseType: !9609, size: 64)
!9609 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !9610)
!9610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !9611)
!9611 = !{!9612}
!9612 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9610, file: !146, line: 232, baseType: !9613, size: 64)
!9613 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !9614)
!9614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !9615)
!9615 = !{!9616, !9622}
!9616 = !DIDerivedType(tag: DW_TAG_member, scope: !9614, file: !151, line: 38, baseType: !9617, size: 32)
!9617 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9614, file: !151, line: 38, size: 32, elements: !9618)
!9618 = !{!9619, !9621}
!9619 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9617, file: !151, line: 39, baseType: !9620, size: 32)
!9620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9614, size: 32)
!9621 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9617, file: !151, line: 40, baseType: !9620, size: 32)
!9622 = !DIDerivedType(tag: DW_TAG_member, scope: !9614, file: !151, line: 42, baseType: !9623, size: 32, offset: 32)
!9623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9614, file: !151, line: 42, size: 32, elements: !9624)
!9624 = !{!9625, !9626}
!9625 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9623, file: !151, line: 43, baseType: !9620, size: 32)
!9626 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9623, file: !151, line: 44, baseType: !9620, size: 32)
!9627 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9606, file: !142, line: 2724, baseType: !9628, size: 32, offset: 64)
!9628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9629, size: 32)
!9629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !9630)
!9630 = !{!9631, !9671, !9683, !9684, !9685, !9686, !9692, !9705}
!9631 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9629, file: !168, line: 247, baseType: !9632, size: 384)
!9632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !9633)
!9633 = !{!9634, !9645, !9647, !9648, !9649, !9658, !9659, !9660}
!9634 = !DIDerivedType(tag: DW_TAG_member, scope: !9632, file: !168, line: 60, baseType: !9635, size: 64)
!9635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9632, file: !168, line: 60, size: 64, elements: !9636)
!9636 = !{!9637, !9639}
!9637 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9635, file: !168, line: 61, baseType: !9638, size: 64)
!9638 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !9614)
!9639 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9635, file: !168, line: 62, baseType: !9640, size: 64)
!9640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !9641)
!9641 = !{!9642}
!9642 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9640, file: !180, line: 50, baseType: !9643, size: 64)
!9643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9644, size: 64, elements: !185)
!9644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9640, size: 32)
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9632, file: !168, line: 68, baseType: !9646, size: 32, offset: 64)
!9646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9609, size: 32)
!9647 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9632, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!9648 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9632, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!9649 = !DIDerivedType(tag: DW_TAG_member, scope: !9632, file: !168, line: 90, baseType: !9650, size: 16, offset: 112)
!9650 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9632, file: !168, line: 90, size: 16, elements: !9651)
!9651 = !{!9652, !9657}
!9652 = !DIDerivedType(tag: DW_TAG_member, scope: !9650, file: !168, line: 91, baseType: !9653, size: 16)
!9653 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9650, file: !168, line: 91, size: 16, elements: !9654)
!9654 = !{!9655, !9656}
!9655 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9653, file: !168, line: 96, baseType: !200, size: 8)
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9653, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!9657 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9650, file: !168, line: 100, baseType: !126, size: 16)
!9658 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9632, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!9659 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9632, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!9660 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9632, file: !168, line: 131, baseType: !9661, size: 192, offset: 192)
!9661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !9662)
!9662 = !{!9663, !9664, !9670}
!9663 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9661, file: !146, line: 245, baseType: !9638, size: 64)
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9661, file: !146, line: 246, baseType: !9665, size: 32, offset: 64)
!9665 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !9666)
!9666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9667, size: 32)
!9667 = !DISubroutineType(types: !9668)
!9668 = !{null, !9669}
!9669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9661, size: 32)
!9670 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9661, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9629, file: !168, line: 250, baseType: !9672, size: 288, offset: 384)
!9672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !9673)
!9673 = !{!9674, !9675, !9676, !9677, !9678, !9679, !9680, !9681, !9682}
!9674 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9672, file: !219, line: 26, baseType: !108, size: 32)
!9675 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9672, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9672, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9672, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9672, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9672, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9672, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9672, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9672, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9629, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9629, file: !168, line: 256, baseType: !9609, size: 64, offset: 704)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9629, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9629, file: !168, line: 300, baseType: !9687, size: 96, offset: 800)
!9687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !9688)
!9688 = !{!9689, !9690, !9691}
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9687, file: !168, line: 153, baseType: !22, size: 32)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9687, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9687, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9629, file: !168, line: 325, baseType: !9693, size: 32, offset: 896)
!9693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9694, size: 32)
!9694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !9695)
!9695 = !{!9696, !9702, !9703}
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9694, file: !142, line: 5074, baseType: !9697, size: 96)
!9697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !9698)
!9698 = !{!9699, !9700, !9701}
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9697, file: !245, line: 57, baseType: !248, size: 32)
!9700 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9697, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!9701 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9697, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!9702 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9694, file: !142, line: 5075, baseType: !9609, size: 64, offset: 96)
!9703 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9694, file: !142, line: 5076, baseType: !9704, offset: 160)
!9704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!9705 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9629, file: !168, line: 343, baseType: !9706, size: 64, offset: 928)
!9706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !9707)
!9707 = !{!9708, !9709}
!9708 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9706, file: !219, line: 63, baseType: !108, size: 32)
!9709 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9706, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9606, file: !142, line: 2727, baseType: !108, size: 32, offset: 96)
!9711 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9606, file: !142, line: 2730, baseType: !107, size: 32, offset: 128)
!9712 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9597, file: !117, line: 67, baseType: !9713, size: 32, offset: 192)
!9713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9714, size: 32)
!9714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9715)
!9715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9716, size: 32)
!9716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9717)
!9717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 128, elements: !9718)
!9718 = !{!9719, !9720, !9721, !9736}
!9719 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9717, file: !117, line: 88, baseType: !120, size: 32)
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9717, file: !117, line: 91, baseType: !136, size: 8, offset: 32)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9717, file: !117, line: 93, baseType: !9722, size: 32, offset: 64)
!9722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9723)
!9723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9724, size: 32)
!9724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !142, line: 4204, size: 320, elements: !9725)
!9725 = !{!9726, !9727, !9728, !9729, !9730, !9731, !9732, !9733, !9734, !9735}
!9726 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9724, file: !142, line: 4206, baseType: !9609, size: 64)
!9727 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9724, file: !142, line: 4208, baseType: !9704, offset: 64)
!9728 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9724, file: !142, line: 4210, baseType: !137, size: 32, offset: 64)
!9729 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9724, file: !142, line: 4212, baseType: !108, size: 32, offset: 96)
!9730 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9724, file: !142, line: 4214, baseType: !283, size: 32, offset: 128)
!9731 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9724, file: !142, line: 4216, baseType: !283, size: 32, offset: 160)
!9732 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9724, file: !142, line: 4218, baseType: !283, size: 32, offset: 192)
!9733 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9724, file: !142, line: 4220, baseType: !283, size: 32, offset: 224)
!9734 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9724, file: !142, line: 4222, baseType: !108, size: 32, offset: 256)
!9735 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9724, file: !142, line: 4227, baseType: !190, size: 8, offset: 288)
!9736 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9717, file: !117, line: 96, baseType: !9737, size: 32, offset: 96)
!9737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9738)
!9738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9739, size: 32)
!9739 = !DISubroutineType(types: !9740)
!9740 = !{null, !9595}
!9741 = !{!9742, !9743}
!9742 = !DILocalVariable(name: "iterator_func", arg: 1, scope: !9588, file: !9589, line: 9, type: !9592)
!9743 = !DILocalVariable(name: "chan", scope: !9744, file: !9589, line: 11, type: !9745)
!9744 = distinct !DILexicalBlock(scope: !9588, file: !9589, line: 11, column: 2)
!9745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9597, size: 32)
!9746 = !DILocation(line: 0, scope: !9588)
!9747 = !DILocation(line: 0, scope: !9744)
!9748 = !DILocation(line: 11, column: 2, scope: !9744)
!9749 = !DILocation(line: 12, column: 8, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9751, file: !9589, line: 12, column: 7)
!9751 = distinct !DILexicalBlock(scope: !9752, file: !9589, line: 11, column: 45)
!9752 = distinct !DILexicalBlock(scope: !9744, file: !9589, line: 11, column: 2)
!9753 = !DILocation(line: 12, column: 7, scope: !9751)
!9754 = !DILocation(line: 11, column: 2, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9752, file: !9589, line: 11, column: 2)
!9756 = distinct !{!9756, !9748, !9757}
!9757 = !DILocation(line: 15, column: 2, scope: !9744)
!9758 = !DILocation(line: 11, column: 2, scope: !9752)
!9759 = !DILocation(line: 17, column: 1, scope: !9588)
!9760 = distinct !DISubprogram(name: "zbus_iterate_over_observers", scope: !9589, file: !9589, line: 19, type: !9761, scopeLine: 20, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !9766)
!9761 = !DISubroutineType(types: !9762)
!9762 = !{!136, !9763}
!9763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9764, size: 32)
!9764 = !DISubroutineType(types: !9765)
!9765 = !{!136, !9715}
!9766 = !{!9767, !9768}
!9767 = !DILocalVariable(name: "iterator_func", arg: 1, scope: !9760, file: !9589, line: 19, type: !9763)
!9768 = !DILocalVariable(name: "obs", scope: !9769, file: !9589, line: 21, type: !9770)
!9769 = distinct !DILexicalBlock(scope: !9760, file: !9589, line: 21, column: 2)
!9770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9717, size: 32)
!9771 = !DILocation(line: 0, scope: !9760)
!9772 = !DILocation(line: 0, scope: !9769)
!9773 = !DILocation(line: 21, column: 2, scope: !9769)
!9774 = !DILocation(line: 22, column: 8, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9776, file: !9589, line: 22, column: 7)
!9776 = distinct !DILexicalBlock(scope: !9777, file: !9589, line: 21, column: 45)
!9777 = distinct !DILexicalBlock(scope: !9769, file: !9589, line: 21, column: 2)
!9778 = !DILocation(line: 22, column: 7, scope: !9776)
!9779 = !DILocation(line: 21, column: 2, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9777, file: !9589, line: 21, column: 2)
!9781 = distinct !{!9781, !9773, !9782}
!9782 = !DILocation(line: 25, column: 2, scope: !9769)
!9783 = !DILocation(line: 21, column: 2, scope: !9777)
!9784 = !DILocation(line: 27, column: 1, scope: !9760)
!9785 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !827, file: !827, line: 368, type: !880, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9786)
!9786 = !{!9787}
!9787 = !DILocalVariable(name: "dev", arg: 1, scope: !9785, file: !827, line: 368, type: !856)
!9788 = !DILocation(line: 0, scope: !9785)
!9789 = !DILocation(line: 370, column: 2, scope: !9785)
!9790 = !DILocation(line: 371, column: 1, scope: !9785)
!9791 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !827, file: !827, line: 243, type: !9792, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9794)
!9792 = !DISubroutineType(types: !9793)
!9793 = !{null, !107, !107, !856}
!9794 = !{!9795, !9796, !9797, !9798, !9800}
!9795 = !DILocalVariable(name: "min", arg: 1, scope: !9791, file: !827, line: 243, type: !107)
!9796 = !DILocalVariable(name: "max", arg: 2, scope: !9791, file: !827, line: 243, type: !107)
!9797 = !DILocalVariable(name: "dev", arg: 3, scope: !9791, file: !827, line: 243, type: !856)
!9798 = !DILocalVariable(name: "data", scope: !9791, file: !827, line: 245, type: !9799)
!9799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 32)
!9800 = !DILocalVariable(name: "line", scope: !9791, file: !827, line: 246, type: !107)
!9801 = !DILocation(line: 0, scope: !9791)
!9802 = !DILocation(line: 245, column: 38, scope: !9791)
!9803 = !DILocation(line: 249, column: 24, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9805, file: !827, line: 249, column: 2)
!9805 = distinct !DILexicalBlock(scope: !9791, file: !827, line: 249, column: 2)
!9806 = !DILocation(line: 249, column: 2, scope: !9805)
!9807 = !DILocation(line: 251, column: 7, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9809, file: !827, line: 251, column: 7)
!9809 = distinct !DILexicalBlock(scope: !9804, file: !827, line: 249, column: 39)
!9810 = !DILocation(line: 251, column: 7, scope: !9809)
!9811 = !DILocation(line: 253, column: 4, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9808, file: !827, line: 251, column: 36)
!9813 = !DILocation(line: 256, column: 24, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9812, file: !827, line: 256, column: 8)
!9815 = !DILocation(line: 256, column: 9, scope: !9814)
!9816 = !DILocation(line: 256, column: 8, scope: !9812)
!9817 = !DILocation(line: 260, column: 43, scope: !9812)
!9818 = !DILocation(line: 260, column: 4, scope: !9812)
!9819 = !DILocation(line: 261, column: 3, scope: !9812)
!9820 = !DILocation(line: 249, column: 35, scope: !9804)
!9821 = distinct !{!9821, !9806, !9822}
!9822 = !DILocation(line: 262, column: 2, scope: !9805)
!9823 = !DILocation(line: 263, column: 1, scope: !9791)
!9824 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !827, file: !827, line: 158, type: !418, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9825)
!9825 = !{!9826}
!9826 = !DILocalVariable(name: "line", arg: 1, scope: !9824, file: !827, line: 158, type: !107)
!9827 = !DILocation(line: 0, scope: !9824)
!9828 = !DILocation(line: 170, column: 38, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9830, file: !827, line: 160, column: 17)
!9830 = distinct !DILexicalBlock(scope: !9824, file: !827, line: 160, column: 6)
!9831 = !DILocation(line: 170, column: 10, scope: !9829)
!9832 = !DILocation(line: 176, column: 1, scope: !9824)
!9833 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !827, file: !827, line: 183, type: !9834, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9836)
!9834 = !DISubroutineType(types: !9835)
!9835 = !{null, !107}
!9836 = !{!9837}
!9837 = !DILocalVariable(name: "line", arg: 1, scope: !9833, file: !827, line: 183, type: !107)
!9838 = !DILocation(line: 0, scope: !9833)
!9839 = !DILocation(line: 195, column: 28, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9841, file: !827, line: 185, column: 17)
!9841 = distinct !DILexicalBlock(scope: !9833, file: !827, line: 185, column: 6)
!9842 = !DILocation(line: 195, column: 3, scope: !9840)
!9843 = !DILocation(line: 200, column: 1, scope: !9833)
!9844 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9845, file: !9845, line: 910, type: !7465, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9846)
!9845 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9846 = !{!9847}
!9847 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9844, file: !9845, line: 910, type: !108)
!9848 = !DILocation(line: 0, scope: !9844)
!9849 = !DILocation(line: 912, column: 3, scope: !9844)
!9850 = !DILocation(line: 913, column: 1, scope: !9844)
!9851 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9845, file: !9845, line: 834, type: !8619, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9852)
!9852 = !{!9853}
!9853 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9851, file: !9845, line: 834, type: !108)
!9854 = !DILocation(line: 0, scope: !9851)
!9855 = !DILocation(line: 836, column: 11, scope: !9851)
!9856 = !DILocation(line: 836, column: 40, scope: !9851)
!9857 = !DILocation(line: 836, column: 3, scope: !9851)
!9858 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !827, file: !827, line: 304, type: !880, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9859)
!9859 = !{!9860}
!9860 = !DILocalVariable(name: "dev", arg: 1, scope: !9858, file: !827, line: 304, type: !856)
!9861 = !DILocation(line: 0, scope: !9858)
!9862 = !DILocation(line: 306, column: 2, scope: !9858)
!9863 = !DILocation(line: 307, column: 1, scope: !9858)
!9864 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !827, file: !827, line: 299, type: !880, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9865)
!9865 = !{!9866}
!9866 = !DILocalVariable(name: "dev", arg: 1, scope: !9864, file: !827, line: 299, type: !856)
!9867 = !DILocation(line: 0, scope: !9864)
!9868 = !DILocation(line: 301, column: 2, scope: !9864)
!9869 = !DILocation(line: 302, column: 1, scope: !9864)
!9870 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !827, file: !827, line: 294, type: !880, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9871)
!9871 = !{!9872}
!9872 = !DILocalVariable(name: "dev", arg: 1, scope: !9870, file: !827, line: 294, type: !856)
!9873 = !DILocation(line: 0, scope: !9870)
!9874 = !DILocation(line: 296, column: 2, scope: !9870)
!9875 = !DILocation(line: 297, column: 1, scope: !9870)
!9876 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !827, file: !827, line: 397, type: !880, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9877)
!9877 = !{!9878}
!9878 = !DILocalVariable(name: "dev", arg: 1, scope: !9876, file: !827, line: 397, type: !856)
!9879 = !DILocation(line: 0, scope: !9876)
!9880 = !DILocation(line: 399, column: 2, scope: !9876)
!9881 = !DILocation(line: 400, column: 1, scope: !9876)
!9882 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !827, file: !827, line: 392, type: !880, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9883)
!9883 = !{!9884}
!9884 = !DILocalVariable(name: "dev", arg: 1, scope: !9882, file: !827, line: 392, type: !856)
!9885 = !DILocation(line: 0, scope: !9882)
!9886 = !DILocation(line: 394, column: 2, scope: !9882)
!9887 = !DILocation(line: 395, column: 1, scope: !9882)
!9888 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !827, file: !827, line: 289, type: !880, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9889)
!9889 = !{!9890}
!9890 = !DILocalVariable(name: "dev", arg: 1, scope: !9888, file: !827, line: 289, type: !856)
!9891 = !DILocation(line: 0, scope: !9888)
!9892 = !DILocation(line: 291, column: 2, scope: !9888)
!9893 = !DILocation(line: 292, column: 1, scope: !9888)
!9894 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !827, file: !827, line: 387, type: !880, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9895)
!9895 = !{!9896}
!9896 = !DILocalVariable(name: "dev", arg: 1, scope: !9894, file: !827, line: 387, type: !856)
!9897 = !DILocation(line: 0, scope: !9894)
!9898 = !DILocation(line: 389, column: 2, scope: !9894)
!9899 = !DILocation(line: 390, column: 1, scope: !9894)
!9900 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !827, file: !827, line: 382, type: !880, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9901)
!9901 = !{!9902}
!9902 = !DILocalVariable(name: "dev", arg: 1, scope: !9900, file: !827, line: 382, type: !856)
!9903 = !DILocation(line: 0, scope: !9900)
!9904 = !DILocation(line: 384, column: 2, scope: !9900)
!9905 = !DILocation(line: 385, column: 1, scope: !9900)
!9906 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !827, file: !827, line: 373, type: !880, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9907)
!9907 = !{!9908}
!9908 = !DILocalVariable(name: "dev", arg: 1, scope: !9906, file: !827, line: 373, type: !856)
!9909 = !DILocation(line: 0, scope: !9906)
!9910 = !DILocation(line: 375, column: 2, scope: !9906)
!9911 = !DILocation(line: 376, column: 1, scope: !9906)
!9912 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !827, file: !827, line: 284, type: !880, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9913)
!9913 = !{!9914}
!9914 = !DILocalVariable(name: "dev", arg: 1, scope: !9912, file: !827, line: 284, type: !856)
!9915 = !DILocation(line: 0, scope: !9912)
!9916 = !DILocation(line: 286, column: 2, scope: !9912)
!9917 = !DILocation(line: 287, column: 1, scope: !9912)
!9918 = distinct !DISubprogram(name: "stm32_exti_init", scope: !827, file: !827, line: 416, type: !854, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9919)
!9919 = !{!9920}
!9920 = !DILocalVariable(name: "dev", arg: 1, scope: !9918, file: !827, line: 416, type: !856)
!9921 = !DILocation(line: 0, scope: !9918)
!9922 = !DILocation(line: 418, column: 2, scope: !9918)
!9923 = !DILocation(line: 420, column: 2, scope: !9918)
!9924 = !DILocation(line: 0, scope: !879)
!9925 = !DILocation(line: 493, column: 2, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !879, file: !827, line: 493, column: 2)
!9927 = !DILocation(line: 497, column: 2, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !879, file: !827, line: 497, column: 2)
!9929 = !DILocation(line: 507, column: 2, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !879, file: !827, line: 507, column: 2)
!9931 = !DILocation(line: 512, column: 2, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !879, file: !827, line: 512, column: 2)
!9933 = !DILocation(line: 516, column: 2, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !879, file: !827, line: 516, column: 2)
!9935 = !DILocation(line: 523, column: 2, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !879, file: !827, line: 523, column: 2)
!9937 = !DILocation(line: 527, column: 2, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !879, file: !827, line: 527, column: 2)
!9939 = !DILocation(line: 581, column: 2, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !879, file: !827, line: 581, column: 2)
!9941 = !DILocation(line: 586, column: 2, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !879, file: !827, line: 586, column: 2)
!9943 = !DILocation(line: 591, column: 2, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !879, file: !827, line: 591, column: 2)
!9945 = !DILocation(line: 595, column: 2, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !879, file: !827, line: 595, column: 2)
!9947 = !DILocation(line: 607, column: 1, scope: !879)
!9948 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !827, file: !827, line: 112, type: !9834, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9949)
!9949 = !{!9950, !9951}
!9950 = !DILocalVariable(name: "line", arg: 1, scope: !9948, file: !827, line: 112, type: !107)
!9951 = !DILocalVariable(name: "irqnum", scope: !9948, file: !827, line: 114, type: !107)
!9952 = !DILocation(line: 0, scope: !9948)
!9953 = !DILocation(line: 121, column: 11, scope: !9948)
!9954 = !DILocation(line: 130, column: 26, scope: !9948)
!9955 = !DILocation(line: 130, column: 2, scope: !9948)
!9956 = !DILocation(line: 134, column: 2, scope: !9948)
!9957 = !DILocation(line: 135, column: 1, scope: !9948)
!9958 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9845, file: !9845, line: 268, type: !7465, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9959)
!9959 = !{!9960}
!9960 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9958, file: !9845, line: 268, type: !108)
!9961 = !DILocation(line: 0, scope: !9958)
!9962 = !DILocation(line: 270, column: 3, scope: !9958)
!9963 = !DILocation(line: 271, column: 1, scope: !9958)
!9964 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !827, file: !827, line: 137, type: !9834, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9965)
!9965 = !{!9966}
!9966 = !DILocalVariable(name: "line", arg: 1, scope: !9964, file: !827, line: 137, type: !107)
!9967 = !DILocation(line: 0, scope: !9964)
!9968 = !DILocation(line: 141, column: 11, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9964, file: !827, line: 141, column: 6)
!9970 = !DILocation(line: 141, column: 6, scope: !9964)
!9971 = !DILocation(line: 145, column: 28, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9969, file: !827, line: 141, column: 17)
!9973 = !DILocation(line: 145, column: 3, scope: !9972)
!9974 = !DILocation(line: 147, column: 2, scope: !9972)
!9975 = !DILocation(line: 151, column: 1, scope: !9964)
!9976 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9845, file: !9845, line: 309, type: !7465, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9977)
!9977 = !{!9978}
!9978 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9976, file: !9845, line: 309, type: !108)
!9979 = !DILocation(line: 0, scope: !9976)
!9980 = !DILocation(line: 311, column: 3, scope: !9976)
!9981 = !DILocation(line: 312, column: 1, scope: !9976)
!9982 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !827, file: !827, line: 202, type: !9983, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9985)
!9983 = !DISubroutineType(types: !9984)
!9984 = !{null, !107, !107}
!9985 = !{!9986, !9987}
!9986 = !DILocalVariable(name: "line", arg: 1, scope: !9982, file: !827, line: 202, type: !107)
!9987 = !DILocalVariable(name: "trigger", arg: 2, scope: !9982, file: !827, line: 202, type: !107)
!9988 = !DILocation(line: 0, scope: !9982)
!9989 = !DILocation(line: 211, column: 2, scope: !9982)
!9990 = !DILocation(line: 213, column: 36, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9982, file: !827, line: 211, column: 19)
!9992 = !DILocation(line: 213, column: 3, scope: !9991)
!9993 = !DILocation(line: 214, column: 3, scope: !9991)
!9994 = !DILocation(line: 215, column: 3, scope: !9991)
!9995 = !DILocation(line: 217, column: 35, scope: !9991)
!9996 = !DILocation(line: 217, column: 3, scope: !9991)
!9997 = !DILocation(line: 218, column: 3, scope: !9991)
!9998 = !DILocation(line: 219, column: 3, scope: !9991)
!9999 = !DILocation(line: 221, column: 36, scope: !9991)
!10000 = !DILocation(line: 221, column: 3, scope: !9991)
!10001 = !DILocation(line: 222, column: 3, scope: !9991)
!10002 = !DILocation(line: 223, column: 3, scope: !9991)
!10003 = !DILocation(line: 225, column: 35, scope: !9991)
!10004 = !DILocation(line: 225, column: 3, scope: !9991)
!10005 = !DILocation(line: 226, column: 3, scope: !9991)
!10006 = !DILocation(line: 227, column: 3, scope: !9991)
!10007 = !DILocation(line: 232, column: 1, scope: !9982)
!10008 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9845, file: !9845, line: 573, type: !7465, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10009)
!10009 = !{!10010}
!10010 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10008, file: !9845, line: 573, type: !108)
!10011 = !DILocation(line: 0, scope: !10008)
!10012 = !DILocation(line: 575, column: 3, scope: !10008)
!10013 = !DILocation(line: 577, column: 1, scope: !10008)
!10014 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9845, file: !9845, line: 703, type: !7465, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10015)
!10015 = !{!10016}
!10016 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10014, file: !9845, line: 703, type: !108)
!10017 = !DILocation(line: 0, scope: !10014)
!10018 = !DILocation(line: 705, column: 3, scope: !10014)
!10019 = !DILocation(line: 706, column: 1, scope: !10014)
!10020 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9845, file: !9845, line: 529, type: !7465, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10021)
!10021 = !{!10022}
!10022 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10020, file: !9845, line: 529, type: !108)
!10023 = !DILocation(line: 0, scope: !10020)
!10024 = !DILocation(line: 531, column: 3, scope: !10020)
!10025 = !DILocation(line: 533, column: 1, scope: !10020)
!10026 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9845, file: !9845, line: 661, type: !7465, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10027)
!10027 = !{!10028}
!10028 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10026, file: !9845, line: 661, type: !108)
!10029 = !DILocation(line: 0, scope: !10026)
!10030 = !DILocation(line: 663, column: 3, scope: !10026)
!10031 = !DILocation(line: 664, column: 1, scope: !10026)
!10032 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !827, file: !827, line: 433, type: !10033, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10035)
!10033 = !DISubroutineType(types: !10034)
!10034 = !{!107, !107, !867, !106}
!10035 = !{!10036, !10037, !10038, !10039, !10041}
!10036 = !DILocalVariable(name: "line", arg: 1, scope: !10032, file: !827, line: 433, type: !107)
!10037 = !DILocalVariable(name: "cb", arg: 2, scope: !10032, file: !827, line: 433, type: !867)
!10038 = !DILocalVariable(name: "arg", arg: 3, scope: !10032, file: !827, line: 433, type: !106)
!10039 = !DILocalVariable(name: "dev", scope: !10032, file: !827, line: 435, type: !10040)
!10040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !856)
!10041 = !DILocalVariable(name: "data", scope: !10032, file: !827, line: 436, type: !9799)
!10042 = !DILocation(line: 0, scope: !10032)
!10043 = !DILocation(line: 438, column: 21, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10032, file: !827, line: 438, column: 6)
!10045 = !DILocation(line: 438, column: 6, scope: !10044)
!10046 = !DILocation(line: 438, column: 6, scope: !10032)
!10047 = !DILocation(line: 442, column: 20, scope: !10032)
!10048 = !DILocation(line: 443, column: 17, scope: !10032)
!10049 = !DILocation(line: 443, column: 22, scope: !10032)
!10050 = !DILocation(line: 445, column: 2, scope: !10032)
!10051 = !DILocation(line: 446, column: 1, scope: !10032)
!10052 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !827, file: !827, line: 448, type: !9834, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10053)
!10053 = !{!10054, !10055, !10056}
!10054 = !DILocalVariable(name: "line", arg: 1, scope: !10052, file: !827, line: 448, type: !107)
!10055 = !DILocalVariable(name: "dev", scope: !10052, file: !827, line: 450, type: !10040)
!10056 = !DILocalVariable(name: "data", scope: !10052, file: !827, line: 451, type: !9799)
!10057 = !DILocation(line: 0, scope: !10052)
!10058 = !DILocation(line: 453, column: 17, scope: !10052)
!10059 = !DILocation(line: 453, column: 20, scope: !10052)
!10060 = !DILocation(line: 454, column: 17, scope: !10052)
!10061 = !DILocation(line: 454, column: 22, scope: !10052)
!10062 = !DILocation(line: 455, column: 1, scope: !10052)
!10063 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1008, file: !1008, line: 183, type: !1046, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10064)
!10064 = !{!10065, !10066, !10067, !10068, !10069}
!10065 = !DILocalVariable(name: "dev", arg: 1, scope: !10063, file: !1008, line: 183, type: !1037)
!10066 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10063, file: !1008, line: 184, type: !1048)
!10067 = !DILocalVariable(name: "pclken", scope: !10063, file: !1008, line: 186, type: !998)
!10068 = !DILocalVariable(name: "reg", scope: !10063, file: !1008, line: 187, type: !1598)
!10069 = !DILocalVariable(name: "reg_val", scope: !10063, file: !1008, line: 188, type: !108)
!10070 = !DILocation(line: 0, scope: !10063)
!10071 = !DILocation(line: 192, column: 6, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10063, file: !1008, line: 192, column: 6)
!10073 = !DILocation(line: 192, column: 6, scope: !10063)
!10074 = !DILocation(line: 197, column: 52, scope: !10063)
!10075 = !DILocation(line: 197, column: 8, scope: !10063)
!10076 = !DILocation(line: 198, column: 12, scope: !10063)
!10077 = !DILocation(line: 199, column: 21, scope: !10063)
!10078 = !DILocation(line: 199, column: 10, scope: !10063)
!10079 = !DILocation(line: 200, column: 7, scope: !10063)
!10080 = !DILocation(line: 202, column: 2, scope: !10063)
!10081 = !DILocation(line: 203, column: 1, scope: !10063)
!10082 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1008, file: !1008, line: 205, type: !1046, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10083)
!10083 = !{!10084, !10085, !10086, !10087, !10088}
!10084 = !DILocalVariable(name: "dev", arg: 1, scope: !10082, file: !1008, line: 205, type: !1037)
!10085 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10082, file: !1008, line: 206, type: !1048)
!10086 = !DILocalVariable(name: "pclken", scope: !10082, file: !1008, line: 208, type: !998)
!10087 = !DILocalVariable(name: "reg", scope: !10082, file: !1008, line: 209, type: !1598)
!10088 = !DILocalVariable(name: "reg_val", scope: !10082, file: !1008, line: 210, type: !108)
!10089 = !DILocation(line: 0, scope: !10082)
!10090 = !DILocation(line: 214, column: 6, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10082, file: !1008, line: 214, column: 6)
!10092 = !DILocation(line: 214, column: 6, scope: !10082)
!10093 = !DILocation(line: 219, column: 52, scope: !10082)
!10094 = !DILocation(line: 219, column: 8, scope: !10082)
!10095 = !DILocation(line: 220, column: 12, scope: !10082)
!10096 = !DILocation(line: 221, column: 22, scope: !10082)
!10097 = !DILocation(line: 221, column: 13, scope: !10082)
!10098 = !DILocation(line: 221, column: 10, scope: !10082)
!10099 = !DILocation(line: 222, column: 7, scope: !10082)
!10100 = !DILocation(line: 224, column: 2, scope: !10082)
!10101 = !DILocation(line: 225, column: 1, scope: !10082)
!10102 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1008, file: !1008, line: 262, type: !1062, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10103)
!10103 = !{!10104, !10105, !10106, !10107, !10108, !10109, !10110, !10111}
!10104 = !DILocalVariable(name: "clock", arg: 1, scope: !10102, file: !1008, line: 262, type: !1037)
!10105 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10102, file: !1008, line: 263, type: !1048)
!10106 = !DILocalVariable(name: "rate", arg: 3, scope: !10102, file: !1008, line: 264, type: !1004)
!10107 = !DILocalVariable(name: "pclken", scope: !10102, file: !1008, line: 266, type: !998)
!10108 = !DILocalVariable(name: "ahb_clock", scope: !10102, file: !1008, line: 273, type: !108)
!10109 = !DILocalVariable(name: "apb1_clock", scope: !10102, file: !1008, line: 274, type: !108)
!10110 = !DILocalVariable(name: "apb2_clock", scope: !10102, file: !1008, line: 276, type: !108)
!10111 = !DILocalVariable(name: "ahb3_clock", scope: !10102, file: !1008, line: 286, type: !108)
!10112 = !DILocation(line: 0, scope: !10102)
!10113 = !DILocation(line: 273, column: 23, scope: !10102)
!10114 = !DILocation(line: 299, column: 18, scope: !10102)
!10115 = !DILocation(line: 299, column: 2, scope: !10102)
!10116 = !DILocation(line: 274, column: 24, scope: !10102)
!10117 = !DILocation(line: 319, column: 3, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10102, file: !1008, line: 299, column: 23)
!10119 = !DILocation(line: 276, column: 24, scope: !10102)
!10120 = !DILocation(line: 323, column: 3, scope: !10118)
!10121 = !DILocation(line: 346, column: 33, scope: !10118)
!10122 = !DILocation(line: 346, column: 11, scope: !10118)
!10123 = !DILocation(line: 350, column: 3, scope: !10118)
!10124 = !DILocation(line: 354, column: 33, scope: !10118)
!10125 = !DILocation(line: 354, column: 11, scope: !10118)
!10126 = !DILocation(line: 358, column: 3, scope: !10118)
!10127 = !DILocation(line: 374, column: 3, scope: !10118)
!10128 = !DILocation(line: 379, column: 3, scope: !10118)
!10129 = !DILocation(line: 0, scope: !10118)
!10130 = !DILocation(line: 396, column: 1, scope: !10102)
!10131 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1008, file: !1008, line: 227, type: !1078, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10132)
!10132 = !{!10133, !10134, !10135, !10136, !10137, !10138, !10139, !10140}
!10133 = !DILocalVariable(name: "dev", arg: 1, scope: !10131, file: !1008, line: 227, type: !1037)
!10134 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10131, file: !1008, line: 228, type: !1048)
!10135 = !DILocalVariable(name: "data", arg: 3, scope: !10131, file: !1008, line: 229, type: !106)
!10136 = !DILocalVariable(name: "pclken", scope: !10131, file: !1008, line: 233, type: !998)
!10137 = !DILocalVariable(name: "reg", scope: !10131, file: !1008, line: 234, type: !1598)
!10138 = !DILocalVariable(name: "reg_val", scope: !10131, file: !1008, line: 235, type: !108)
!10139 = !DILocalVariable(name: "dt_val", scope: !10131, file: !1008, line: 235, type: !108)
!10140 = !DILocalVariable(name: "err", scope: !10131, file: !1008, line: 236, type: !107)
!10141 = !DILocation(line: 0, scope: !10131)
!10142 = !DILocation(line: 241, column: 30, scope: !10131)
!10143 = !DILocation(line: 241, column: 8, scope: !10131)
!10144 = !DILocation(line: 242, column: 10, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10131, file: !1008, line: 242, column: 6)
!10146 = !DILocation(line: 242, column: 6, scope: !10131)
!10147 = !DILocation(line: 247, column: 11, scope: !10131)
!10148 = !DILocation(line: 248, column: 6, scope: !10131)
!10149 = !DILocation(line: 247, column: 44, scope: !10131)
!10150 = !DILocation(line: 250, column: 6, scope: !10131)
!10151 = !DILocation(line: 249, column: 52, scope: !10131)
!10152 = !DILocation(line: 249, column: 8, scope: !10131)
!10153 = !DILocation(line: 251, column: 12, scope: !10131)
!10154 = !DILocation(line: 252, column: 10, scope: !10131)
!10155 = !DILocation(line: 253, column: 7, scope: !10131)
!10156 = !DILocation(line: 255, column: 2, scope: !10131)
!10157 = !DILocation(line: 260, column: 1, scope: !10131)
!10158 = distinct !DISubprogram(name: "enabled_clock", scope: !1008, file: !1008, line: 100, type: !10159, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10161)
!10159 = !DISubroutineType(types: !10160)
!10160 = !{!107, !108}
!10161 = !{!10162, !10163}
!10162 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10158, file: !1008, line: 100, type: !108)
!10163 = !DILocalVariable(name: "r", scope: !10158, file: !1008, line: 102, type: !107)
!10164 = !DILocation(line: 0, scope: !10158)
!10165 = !DILocation(line: 104, column: 2, scope: !10158)
!10166 = !DILocation(line: 180, column: 2, scope: !10158)
!10167 = !DILocation(line: 181, column: 1, scope: !10158)
!10168 = distinct !DISubprogram(name: "get_bus_clock", scope: !1008, file: !1008, line: 79, type: !10169, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10171)
!10169 = !DISubroutineType(types: !10170)
!10170 = !{!108, !108, !108}
!10171 = !{!10172, !10173}
!10172 = !DILocalVariable(name: "clock", arg: 1, scope: !10168, file: !1008, line: 79, type: !108)
!10173 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10168, file: !1008, line: 79, type: !108)
!10174 = !DILocation(line: 0, scope: !10168)
!10175 = !DILocation(line: 81, column: 15, scope: !10168)
!10176 = !DILocation(line: 81, column: 2, scope: !10168)
!10177 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1008, file: !1008, line: 68, type: !10178, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10180)
!10178 = !DISubroutineType(types: !10179)
!10179 = !{!108, !108, !107, !107, !107}
!10180 = !{!10181, !10182, !10183, !10184}
!10181 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10177, file: !1008, line: 68, type: !108)
!10182 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10177, file: !1008, line: 69, type: !107)
!10183 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10177, file: !1008, line: 70, type: !107)
!10184 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10177, file: !1008, line: 71, type: !107)
!10185 = !DILocation(line: 0, scope: !10177)
!10186 = !DILocation(line: 75, column: 22, scope: !10177)
!10187 = !DILocation(line: 76, column: 13, scope: !10177)
!10188 = !DILocation(line: 75, column: 34, scope: !10177)
!10189 = !DILocation(line: 75, column: 2, scope: !10177)
!10190 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1008, file: !1008, line: 641, type: !1035, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10191)
!10191 = !{!10192, !10193, !10194}
!10192 = !DILocalVariable(name: "dev", arg: 1, scope: !10190, file: !1008, line: 641, type: !1037)
!10193 = !DILocalVariable(name: "old_flash_freq", scope: !10190, file: !1008, line: 664, type: !108)
!10194 = !DILocalVariable(name: "new_flash_freq", scope: !10190, file: !1008, line: 665, type: !108)
!10195 = !DILocation(line: 0, scope: !10190)
!10196 = !DILocation(line: 646, column: 2, scope: !10190)
!10197 = !DILocation(line: 667, column: 19, scope: !10190)
!10198 = !DILocation(line: 674, column: 21, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10190, file: !1008, line: 674, column: 6)
!10200 = !DILocation(line: 674, column: 6, scope: !10190)
!10201 = !DILocation(line: 675, column: 3, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10199, file: !1008, line: 674, column: 59)
!10203 = !DILocation(line: 676, column: 2, scope: !10202)
!10204 = !DILocation(line: 680, column: 2, scope: !10190)
!10205 = !DILocation(line: 683, column: 2, scope: !10190)
!10206 = !DILocation(line: 690, column: 3, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10208, file: !1008, line: 689, column: 9)
!10208 = distinct !DILexicalBlock(scope: !10190, file: !1008, line: 685, column: 6)
!10209 = !DILocation(line: 695, column: 2, scope: !10190)
!10210 = !DILocation(line: 696, column: 2, scope: !10190)
!10211 = !DILocation(line: 696, column: 9, scope: !10190)
!10212 = !DILocation(line: 696, column: 34, scope: !10190)
!10213 = distinct !{!10213, !10210, !10214}
!10214 = !DILocation(line: 697, column: 2, scope: !10190)
!10215 = !DILocation(line: 720, column: 21, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10190, file: !1008, line: 720, column: 6)
!10217 = !DILocation(line: 720, column: 6, scope: !10190)
!10218 = !DILocation(line: 721, column: 3, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10216, file: !1008, line: 720, column: 60)
!10220 = !DILocation(line: 722, column: 2, scope: !10219)
!10221 = !DILocation(line: 725, column: 18, scope: !10190)
!10222 = !DILocation(line: 728, column: 2, scope: !10190)
!10223 = !DILocation(line: 730, column: 2, scope: !10190)
!10224 = !DILocation(line: 745, column: 2, scope: !10190)
!10225 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10226, file: !10226, line: 3275, type: !7455, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10226 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10227 = !DILocation(line: 3277, column: 21, scope: !10225)
!10228 = !DILocation(line: 3277, column: 3, scope: !10225)
!10229 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1008, file: !1008, line: 507, type: !337, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10230 = !DILocation(line: 516, column: 4, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10232, file: !1008, line: 515, column: 10)
!10232 = distinct !DILexicalBlock(scope: !10233, file: !1008, line: 513, column: 7)
!10233 = distinct !DILexicalBlock(scope: !10234, file: !1008, line: 510, column: 37)
!10234 = distinct !DILexicalBlock(scope: !10229, file: !1008, line: 510, column: 6)
!10235 = !DILocation(line: 526, column: 3, scope: !10233)
!10236 = !DILocation(line: 527, column: 3, scope: !10233)
!10237 = !DILocation(line: 527, column: 10, scope: !10233)
!10238 = !DILocation(line: 527, column: 31, scope: !10233)
!10239 = distinct !{!10239, !10236, !10240}
!10240 = !DILocation(line: 529, column: 3, scope: !10233)
!10241 = !DILocation(line: 583, column: 3, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10243, file: !1008, line: 577, column: 37)
!10243 = distinct !DILexicalBlock(scope: !10229, file: !1008, line: 577, column: 6)
!10244 = !DILocation(line: 584, column: 3, scope: !10242)
!10245 = !DILocation(line: 584, column: 10, scope: !10242)
!10246 = !DILocation(line: 584, column: 31, scope: !10242)
!10247 = distinct !{!10247, !10244, !10248}
!10248 = !DILocation(line: 585, column: 3, scope: !10242)
!10249 = !DILocation(line: 627, column: 1, scope: !10229)
!10250 = distinct !DISubprogram(name: "set_up_plls", scope: !1008, file: !1008, line: 448, type: !337, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10251 = !DILocation(line: 460, column: 6, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10250, file: !1008, line: 460, column: 6)
!10253 = !DILocation(line: 460, column: 31, scope: !10252)
!10254 = !DILocation(line: 460, column: 6, scope: !10250)
!10255 = !DILocation(line: 461, column: 3, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10252, file: !1008, line: 460, column: 67)
!10257 = !DILocation(line: 462, column: 3, scope: !10256)
!10258 = !DILocation(line: 463, column: 2, scope: !10256)
!10259 = !DILocation(line: 464, column: 2, scope: !10250)
!10260 = !DILocation(line: 488, column: 2, scope: !10250)
!10261 = !DILocation(line: 492, column: 2, scope: !10250)
!10262 = !DILocation(line: 496, column: 2, scope: !10250)
!10263 = !DILocation(line: 499, column: 2, scope: !10250)
!10264 = !DILocation(line: 500, column: 2, scope: !10250)
!10265 = !DILocation(line: 500, column: 9, scope: !10250)
!10266 = !DILocation(line: 500, column: 30, scope: !10250)
!10267 = distinct !{!10267, !10264, !10268}
!10268 = !DILocation(line: 502, column: 2, scope: !10250)
!10269 = !DILocation(line: 505, column: 1, scope: !10250)
!10270 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10226, file: !10226, line: 3224, type: !7465, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10271)
!10271 = !{!10272}
!10272 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10270, file: !10226, line: 3224, type: !108)
!10273 = !DILocation(line: 0, scope: !10270)
!10274 = !DILocation(line: 3226, column: 3, scope: !10270)
!10275 = !DILocation(line: 3227, column: 1, scope: !10270)
!10276 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10226, file: !10226, line: 3188, type: !7465, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10277)
!10277 = !{!10278}
!10278 = !DILocalVariable(name: "Source", arg: 1, scope: !10276, file: !10226, line: 3188, type: !108)
!10279 = !DILocation(line: 0, scope: !10276)
!10280 = !DILocation(line: 3190, column: 3, scope: !10276)
!10281 = !DILocation(line: 3191, column: 1, scope: !10276)
!10282 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10226, file: !10226, line: 3204, type: !7455, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10283 = !DILocation(line: 3206, column: 21, scope: !10282)
!10284 = !DILocation(line: 3206, column: 3, scope: !10282)
!10285 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10226, file: !10226, line: 3240, type: !7465, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10286)
!10286 = !{!10287}
!10287 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10285, file: !10226, line: 3240, type: !108)
!10288 = !DILocation(line: 0, scope: !10285)
!10289 = !DILocation(line: 3242, column: 3, scope: !10285)
!10290 = !DILocation(line: 3243, column: 1, scope: !10285)
!10291 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10226, file: !10226, line: 3256, type: !7465, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10292)
!10292 = !{!10293}
!10293 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10291, file: !10226, line: 3256, type: !108)
!10294 = !DILocation(line: 0, scope: !10291)
!10295 = !DILocation(line: 3258, column: 3, scope: !10291)
!10296 = !DILocation(line: 3259, column: 1, scope: !10291)
!10297 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1008, file: !1008, line: 409, type: !337, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10298 = !DILocation(line: 412, column: 6, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10297, file: !1008, line: 412, column: 6)
!10300 = !DILocation(line: 412, column: 27, scope: !10299)
!10301 = !DILocation(line: 412, column: 6, scope: !10297)
!10302 = !DILocation(line: 414, column: 3, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10299, file: !1008, line: 412, column: 33)
!10304 = !DILocation(line: 415, column: 3, scope: !10303)
!10305 = !DILocation(line: 415, column: 10, scope: !10303)
!10306 = !DILocation(line: 415, column: 31, scope: !10303)
!10307 = distinct !{!10307, !10304, !10308}
!10308 = !DILocation(line: 417, column: 3, scope: !10303)
!10309 = !DILocation(line: 421, column: 2, scope: !10297)
!10310 = !DILocation(line: 422, column: 2, scope: !10297)
!10311 = !DILocation(line: 422, column: 9, scope: !10297)
!10312 = !DILocation(line: 422, column: 34, scope: !10297)
!10313 = distinct !{!10313, !10310, !10314}
!10314 = !DILocation(line: 423, column: 2, scope: !10297)
!10315 = !DILocation(line: 424, column: 1, scope: !10297)
!10316 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10226, file: !10226, line: 4195, type: !337, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10317 = !DILocation(line: 4197, column: 3, scope: !10316)
!10318 = !DILocation(line: 4198, column: 1, scope: !10316)
!10319 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10226, file: !10226, line: 4184, type: !337, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10320 = !DILocation(line: 4186, column: 3, scope: !10319)
!10321 = !DILocation(line: 4187, column: 1, scope: !10319)
!10322 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10226, file: !10226, line: 4205, type: !7455, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10323 = !DILocation(line: 4207, column: 11, scope: !10322)
!10324 = !DILocation(line: 4207, column: 44, scope: !10322)
!10325 = !DILocation(line: 4207, column: 3, scope: !10322)
!10326 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10226, file: !10226, line: 3007, type: !7455, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10327 = !DILocation(line: 3009, column: 11, scope: !10326)
!10328 = !DILocation(line: 3009, column: 44, scope: !10326)
!10329 = !DILocation(line: 3009, column: 3, scope: !10326)
!10330 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10226, file: !10226, line: 2987, type: !337, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10331 = !DILocation(line: 2989, column: 3, scope: !10330)
!10332 = !DILocation(line: 2990, column: 1, scope: !10330)
!10333 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10226, file: !10226, line: 2939, type: !337, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10334 = !DILocation(line: 2941, column: 3, scope: !10333)
!10335 = !DILocation(line: 2942, column: 1, scope: !10333)
!10336 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10226, file: !10226, line: 2949, type: !337, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10337 = !DILocation(line: 2951, column: 3, scope: !10336)
!10338 = !DILocation(line: 2952, column: 1, scope: !10336)
!10339 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10226, file: !10226, line: 2969, type: !7455, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10340 = !DILocation(line: 2971, column: 11, scope: !10339)
!10341 = !DILocation(line: 2971, column: 44, scope: !10339)
!10342 = !DILocation(line: 2971, column: 3, scope: !10339)
!10343 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10226, file: !10226, line: 3143, type: !337, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10344 = !DILocation(line: 3145, column: 3, scope: !10343)
!10345 = !DILocation(line: 3146, column: 1, scope: !10343)
!10346 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10226, file: !10226, line: 3163, type: !7455, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !256)
!10347 = !DILocation(line: 3165, column: 11, scope: !10346)
!10348 = !DILocation(line: 3165, column: 46, scope: !10346)
!10349 = !DILocation(line: 3165, column: 3, scope: !10346)
!10350 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10351, file: !10351, line: 40, type: !7455, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !256)
!10351 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10352 = !DILocation(line: 45, column: 3, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10354, file: !10351, line: 44, column: 44)
!10354 = distinct !DILexicalBlock(scope: !10355, file: !10351, line: 44, column: 13)
!10355 = distinct !DILexicalBlock(scope: !10350, file: !10351, line: 42, column: 6)
!10356 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10351, file: !10351, line: 56, type: !337, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !256)
!10357 = !DILocation(line: 58, column: 2, scope: !10356)
!10358 = !DILocation(line: 62, column: 1, scope: !10356)
!10359 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10226, file: !10226, line: 4304, type: !10360, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !10362)
!10360 = !DISubroutineType(types: !10361)
!10361 = !{null, !108, !108, !108, !108}
!10362 = !{!10363, !10364, !10365, !10366}
!10363 = !DILocalVariable(name: "Source", arg: 1, scope: !10359, file: !10226, line: 4304, type: !108)
!10364 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10359, file: !10226, line: 4304, type: !108)
!10365 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10359, file: !10226, line: 4304, type: !108)
!10366 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10359, file: !10226, line: 4304, type: !108)
!10367 = !DILocation(line: 0, scope: !10359)
!10368 = !DILocation(line: 4306, column: 3, scope: !10359)
!10369 = !DILocation(line: 4308, column: 3, scope: !10359)
!10370 = !DILocation(line: 4312, column: 1, scope: !10359)
!10371 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10351, file: !10351, line: 69, type: !337, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !256)
!10372 = !DILocation(line: 72, column: 2, scope: !10371)
!10373 = !DILocation(line: 73, column: 1, scope: !10371)
!10374 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10375, file: !10375, line: 1185, type: !7465, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !10376)
!10375 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10376 = !{!10377, !10378}
!10377 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10374, file: !10375, line: 1185, type: !108)
!10378 = !DILocalVariable(name: "tmpreg", scope: !10374, file: !10375, line: 1187, type: !431)
!10379 = !DILocation(line: 0, scope: !10374)
!10380 = !DILocation(line: 1187, column: 3, scope: !10374)
!10381 = !DILocation(line: 1187, column: 17, scope: !10374)
!10382 = !DILocation(line: 1188, column: 3, scope: !10374)
!10383 = !DILocation(line: 1190, column: 12, scope: !10374)
!10384 = !DILocation(line: 1190, column: 10, scope: !10374)
!10385 = !DILocation(line: 1191, column: 9, scope: !10374)
!10386 = !DILocation(line: 1192, column: 1, scope: !10374)
!10387 = distinct !DISubprogram(name: "uart_console_init", scope: !1139, file: !1139, line: 588, type: !1116, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !10388)
!10388 = !{!10389}
!10389 = !DILocalVariable(name: "arg", arg: 1, scope: !10387, file: !1139, line: 588, type: !1094)
!10390 = !DILocation(line: 0, scope: !10387)
!10391 = !DILocation(line: 593, column: 7, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10387, file: !1139, line: 593, column: 6)
!10393 = !DILocation(line: 593, column: 6, scope: !10387)
!10394 = !DILocation(line: 597, column: 2, scope: !10387)
!10395 = !DILocation(line: 599, column: 2, scope: !10387)
!10396 = !DILocation(line: 600, column: 1, scope: !10387)
!10397 = distinct !DISubprogram(name: "device_is_ready", scope: !10398, file: !10398, line: 47, type: !10399, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !10401)
!10398 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!10399 = !DISubroutineType(types: !10400)
!10400 = !{!136, !1094}
!10401 = !{!10402}
!10402 = !DILocalVariable(name: "dev", arg: 1, scope: !10397, file: !10398, line: 47, type: !1094)
!10403 = !DILocation(line: 0, scope: !10397)
!10404 = !DILocation(line: 55, column: 2, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10397, file: !10398, line: 55, column: 2)
!10406 = !{i64 2155044843}
!10407 = !DILocation(line: 56, column: 9, scope: !10397)
!10408 = !DILocation(line: 56, column: 2, scope: !10397)
!10409 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1139, file: !1139, line: 573, type: !337, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !256)
!10410 = !DILocation(line: 576, column: 2, scope: !10409)
!10411 = !DILocation(line: 579, column: 2, scope: !10409)
!10412 = !DILocation(line: 581, column: 1, scope: !10409)
!10413 = distinct !DISubprogram(name: "console_out", scope: !1139, file: !1139, line: 77, type: !418, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !10414)
!10414 = !{!10415}
!10415 = !DILocalVariable(name: "c", arg: 1, scope: !10413, file: !1139, line: 77, type: !107)
!10416 = !DILocation(line: 0, scope: !10413)
!10417 = !DILocation(line: 89, column: 11, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10413, file: !1139, line: 89, column: 6)
!10419 = !DILocation(line: 89, column: 6, scope: !10413)
!10420 = !DILocation(line: 90, column: 3, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10418, file: !1139, line: 89, column: 17)
!10422 = !DILocation(line: 91, column: 2, scope: !10421)
!10423 = !DILocation(line: 92, column: 34, scope: !10413)
!10424 = !DILocation(line: 92, column: 2, scope: !10413)
!10425 = !DILocation(line: 94, column: 2, scope: !10413)
!10426 = distinct !DISubprogram(name: "uart_poll_out", scope: !10427, file: !10427, line: 95, type: !1112, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !10428)
!10427 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/hello_world")
!10428 = !{!10429, !10430}
!10429 = !DILocalVariable(name: "dev", arg: 1, scope: !10426, file: !10427, line: 95, type: !1094)
!10430 = !DILocalVariable(name: "out_char", arg: 2, scope: !10426, file: !10427, line: 95, type: !191)
!10431 = !DILocation(line: 0, scope: !10426)
!10432 = !DILocation(line: 105, column: 2, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10426, file: !10427, line: 105, column: 2)
!10434 = !{i64 2155128234}
!10435 = !DILocation(line: 106, column: 2, scope: !10426)
!10436 = !DILocation(line: 107, column: 1, scope: !10426)
!10437 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1088, file: !1088, line: 574, type: !1112, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !10438)
!10438 = !{!10439, !10440, !10441}
!10439 = !DILocalVariable(name: "dev", arg: 1, scope: !10437, file: !1088, line: 574, type: !1094)
!10440 = !DILocalVariable(name: "out_char", arg: 2, scope: !10437, file: !1088, line: 575, type: !191)
!10441 = !DILocalVariable(name: "api", scope: !10437, file: !1088, line: 577, type: !1085)
!10442 = !DILocation(line: 0, scope: !10437)
!10443 = !DILocation(line: 578, column: 40, scope: !10437)
!10444 = !DILocation(line: 580, column: 7, scope: !10437)
!10445 = !DILocation(line: 580, column: 2, scope: !10437)
!10446 = !DILocation(line: 581, column: 1, scope: !10437)
!10447 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !451, file: !451, line: 730, type: !10399, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !10448)
!10448 = !{!10449}
!10449 = !DILocalVariable(name: "dev", arg: 1, scope: !10447, file: !451, line: 730, type: !1094)
!10450 = !DILocation(line: 0, scope: !10447)
!10451 = !DILocation(line: 732, column: 9, scope: !10447)
!10452 = !DILocation(line: 732, column: 2, scope: !10447)
!10453 = distinct !DISubprogram(name: "uart_register_input", scope: !1139, file: !1139, line: 560, type: !10454, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !10499)
!10454 = !DISubroutineType(types: !10455)
!10455 = !{null, !10456, !10456, !10496}
!10456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10457, size: 32)
!10457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !142, line: 2208, size: 128, elements: !10458)
!10458 = !{!10459}
!10459 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10457, file: !142, line: 2209, baseType: !10460, size: 128)
!10460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !142, line: 1709, size: 128, elements: !10461)
!10461 = !{!10462, !10475, !10477}
!10462 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10460, file: !142, line: 1710, baseType: !10463, size: 64)
!10463 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10464, line: 46, baseType: !10465)
!10464 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10464, line: 41, size: 64, elements: !10466)
!10466 = !{!10467, !10474}
!10467 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10465, file: !10464, line: 42, baseType: !10468, size: 32)
!10468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10469, size: 32)
!10469 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10464, line: 39, baseType: !10470)
!10470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10464, line: 35, size: 32, elements: !10471)
!10471 = !{!10472}
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10470, file: !10464, line: 36, baseType: !10473, size: 32)
!10473 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10464, line: 32, baseType: !108)
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10465, file: !10464, line: 43, baseType: !10468, size: 32, offset: 32)
!10475 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10460, file: !142, line: 1711, baseType: !10476, offset: 64)
!10476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10460, file: !142, line: 1712, baseType: !10478, size: 64, offset: 64)
!10478 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !10479)
!10479 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !10480)
!10480 = !{!10481}
!10481 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10479, file: !146, line: 232, baseType: !10482, size: 64)
!10482 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !10483)
!10483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !10484)
!10484 = !{!10485, !10491}
!10485 = !DIDerivedType(tag: DW_TAG_member, scope: !10483, file: !151, line: 38, baseType: !10486, size: 32)
!10486 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10483, file: !151, line: 38, size: 32, elements: !10487)
!10487 = !{!10488, !10490}
!10488 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10486, file: !151, line: 39, baseType: !10489, size: 32)
!10489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10483, size: 32)
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10486, file: !151, line: 40, baseType: !10489, size: 32)
!10491 = !DIDerivedType(tag: DW_TAG_member, scope: !10483, file: !151, line: 42, baseType: !10492, size: 32, offset: 32)
!10492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10483, file: !151, line: 42, size: 32, elements: !10493)
!10493 = !{!10494, !10495}
!10494 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10492, file: !151, line: 43, baseType: !10489, size: 32)
!10495 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10492, file: !151, line: 44, baseType: !10489, size: 32)
!10496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10497, size: 32)
!10497 = !DISubroutineType(types: !10498)
!10498 = !{!190, !283, !190}
!10499 = !{!10500, !10501, !10502}
!10500 = !DILocalVariable(name: "avail", arg: 1, scope: !10453, file: !1139, line: 560, type: !10456)
!10501 = !DILocalVariable(name: "lines", arg: 2, scope: !10453, file: !1139, line: 560, type: !10456)
!10502 = !DILocalVariable(name: "completion", arg: 3, scope: !10453, file: !1139, line: 561, type: !10496)
!10503 = !DILocation(line: 0, scope: !10453)
!10504 = !DILocation(line: 566, column: 1, scope: !10453)
!10505 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1317, file: !1317, line: 523, type: !1175, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10506)
!10506 = !{!10507, !10508, !10509, !10510, !10511}
!10507 = !DILocalVariable(name: "dev", arg: 1, scope: !10505, file: !1317, line: 523, type: !1177)
!10508 = !DILocalVariable(name: "pin", arg: 2, scope: !10505, file: !1317, line: 524, type: !1192)
!10509 = !DILocalVariable(name: "flags", arg: 3, scope: !10505, file: !1317, line: 524, type: !1193)
!10510 = !DILocalVariable(name: "err", scope: !10505, file: !1317, line: 526, type: !107)
!10511 = !DILocalVariable(name: "pincfg", scope: !10505, file: !1317, line: 527, type: !107)
!10512 = !DILocation(line: 0, scope: !10505)
!10513 = !DILocation(line: 527, column: 2, scope: !10505)
!10514 = !DILocation(line: 532, column: 8, scope: !10505)
!10515 = !DILocation(line: 533, column: 10, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10505, file: !1317, line: 533, column: 6)
!10517 = !DILocation(line: 533, column: 6, scope: !10505)
!10518 = !DILocation(line: 543, column: 13, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10505, file: !1317, line: 543, column: 6)
!10520 = !DILocation(line: 543, column: 28, scope: !10519)
!10521 = !DILocation(line: 543, column: 6, scope: !10505)
!10522 = !DILocation(line: 544, column: 14, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10524, file: !1317, line: 544, column: 7)
!10524 = distinct !DILexicalBlock(scope: !10519, file: !1317, line: 543, column: 34)
!10525 = !DILocation(line: 544, column: 39, scope: !10523)
!10526 = !DILocation(line: 544, column: 7, scope: !10524)
!10527 = !DILocation(line: 545, column: 38, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10523, file: !1317, line: 544, column: 45)
!10529 = !DILocation(line: 545, column: 4, scope: !10528)
!10530 = !DILocation(line: 546, column: 3, scope: !10528)
!10531 = !DILocation(line: 546, column: 21, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10523, file: !1317, line: 546, column: 14)
!10533 = !DILocation(line: 546, column: 45, scope: !10532)
!10534 = !DILocation(line: 546, column: 14, scope: !10523)
!10535 = !DILocation(line: 547, column: 40, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10532, file: !1317, line: 546, column: 51)
!10537 = !DILocation(line: 547, column: 4, scope: !10536)
!10538 = !DILocation(line: 548, column: 3, scope: !10536)
!10539 = !DILocation(line: 551, column: 32, scope: !10505)
!10540 = !DILocation(line: 551, column: 37, scope: !10505)
!10541 = !DILocation(line: 551, column: 2, scope: !10505)
!10542 = !DILocation(line: 554, column: 6, scope: !10505)
!10543 = !DILocation(line: 562, column: 1, scope: !10505)
!10544 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1317, file: !1317, line: 410, type: !10545, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10547)
!10545 = !DISubroutineType(types: !10546)
!10546 = !{!107, !1177, !1004}
!10547 = !{!10548, !10549, !10550, !10552}
!10548 = !DILocalVariable(name: "dev", arg: 1, scope: !10544, file: !1317, line: 410, type: !1177)
!10549 = !DILocalVariable(name: "value", arg: 2, scope: !10544, file: !1317, line: 410, type: !1004)
!10550 = !DILocalVariable(name: "cfg", scope: !10544, file: !1317, line: 412, type: !10551)
!10551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 32)
!10552 = !DILocalVariable(name: "gpio", scope: !10544, file: !1317, line: 413, type: !1250)
!10553 = !DILocation(line: 0, scope: !10544)
!10554 = !DILocation(line: 412, column: 45, scope: !10544)
!10555 = !DILocation(line: 413, column: 44, scope: !10544)
!10556 = !DILocation(line: 415, column: 11, scope: !10544)
!10557 = !DILocation(line: 415, column: 9, scope: !10544)
!10558 = !DILocation(line: 417, column: 2, scope: !10544)
!10559 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1317, file: !1317, line: 420, type: !1202, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10560)
!10560 = !{!10561, !10562, !10563, !10564, !10565, !10566}
!10561 = !DILocalVariable(name: "dev", arg: 1, scope: !10559, file: !1317, line: 420, type: !1177)
!10562 = !DILocalVariable(name: "mask", arg: 2, scope: !10559, file: !1317, line: 421, type: !1204)
!10563 = !DILocalVariable(name: "value", arg: 3, scope: !10559, file: !1317, line: 422, type: !1199)
!10564 = !DILocalVariable(name: "cfg", scope: !10559, file: !1317, line: 424, type: !10551)
!10565 = !DILocalVariable(name: "gpio", scope: !10559, file: !1317, line: 425, type: !1250)
!10566 = !DILocalVariable(name: "port_value", scope: !10559, file: !1317, line: 426, type: !108)
!10567 = !DILocation(line: 0, scope: !10559)
!10568 = !DILocation(line: 424, column: 45, scope: !10559)
!10569 = !DILocation(line: 425, column: 44, scope: !10559)
!10570 = !DILocation(line: 430, column: 15, scope: !10559)
!10571 = !DILocation(line: 431, column: 46, scope: !10559)
!10572 = !DILocation(line: 431, column: 44, scope: !10559)
!10573 = !DILocation(line: 431, column: 61, scope: !10559)
!10574 = !DILocation(line: 431, column: 53, scope: !10559)
!10575 = !DILocation(line: 431, column: 2, scope: !10559)
!10576 = !DILocation(line: 435, column: 2, scope: !10559)
!10577 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1317, file: !1317, line: 438, type: !1207, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10578)
!10578 = !{!10579, !10580, !10581, !10582}
!10579 = !DILocalVariable(name: "dev", arg: 1, scope: !10577, file: !1317, line: 438, type: !1177)
!10580 = !DILocalVariable(name: "pins", arg: 2, scope: !10577, file: !1317, line: 439, type: !1204)
!10581 = !DILocalVariable(name: "cfg", scope: !10577, file: !1317, line: 441, type: !10551)
!10582 = !DILocalVariable(name: "gpio", scope: !10577, file: !1317, line: 442, type: !1250)
!10583 = !DILocation(line: 0, scope: !10577)
!10584 = !DILocation(line: 441, column: 45, scope: !10577)
!10585 = !DILocation(line: 442, column: 44, scope: !10577)
!10586 = !DILocation(line: 448, column: 2, scope: !10577)
!10587 = !DILocation(line: 450, column: 2, scope: !10577)
!10588 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1317, file: !1317, line: 453, type: !1207, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10589)
!10589 = !{!10590, !10591, !10592, !10593}
!10590 = !DILocalVariable(name: "dev", arg: 1, scope: !10588, file: !1317, line: 453, type: !1177)
!10591 = !DILocalVariable(name: "pins", arg: 2, scope: !10588, file: !1317, line: 454, type: !1204)
!10592 = !DILocalVariable(name: "cfg", scope: !10588, file: !1317, line: 456, type: !10551)
!10593 = !DILocalVariable(name: "gpio", scope: !10588, file: !1317, line: 457, type: !1250)
!10594 = !DILocation(line: 0, scope: !10588)
!10595 = !DILocation(line: 456, column: 45, scope: !10588)
!10596 = !DILocation(line: 457, column: 44, scope: !10588)
!10597 = !DILocation(line: 467, column: 2, scope: !10588)
!10598 = !DILocation(line: 470, column: 2, scope: !10588)
!10599 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1317, file: !1317, line: 473, type: !1207, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10600)
!10600 = !{!10601, !10602, !10603, !10604}
!10601 = !DILocalVariable(name: "dev", arg: 1, scope: !10599, file: !1317, line: 473, type: !1177)
!10602 = !DILocalVariable(name: "pins", arg: 2, scope: !10599, file: !1317, line: 474, type: !1204)
!10603 = !DILocalVariable(name: "cfg", scope: !10599, file: !1317, line: 476, type: !10551)
!10604 = !DILocalVariable(name: "gpio", scope: !10599, file: !1317, line: 477, type: !1250)
!10605 = !DILocation(line: 0, scope: !10599)
!10606 = !DILocation(line: 476, column: 45, scope: !10599)
!10607 = !DILocation(line: 477, column: 44, scope: !10599)
!10608 = !DILocation(line: 484, column: 2, scope: !10599)
!10609 = !DILocation(line: 487, column: 2, scope: !10599)
!10610 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1317, file: !1317, line: 594, type: !1213, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10611)
!10611 = !{!10612, !10613, !10614, !10615, !10616, !10617, !10619, !10620, !10621}
!10612 = !DILocalVariable(name: "dev", arg: 1, scope: !10610, file: !1317, line: 594, type: !1177)
!10613 = !DILocalVariable(name: "pin", arg: 2, scope: !10610, file: !1317, line: 595, type: !1192)
!10614 = !DILocalVariable(name: "mode", arg: 3, scope: !10610, file: !1317, line: 596, type: !1151)
!10615 = !DILocalVariable(name: "trig", arg: 4, scope: !10610, file: !1317, line: 597, type: !1157)
!10616 = !DILocalVariable(name: "cfg", scope: !10610, file: !1317, line: 599, type: !10551)
!10617 = !DILocalVariable(name: "data", scope: !10610, file: !1317, line: 600, type: !10618)
!10618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 32)
!10619 = !DILocalVariable(name: "edge", scope: !10610, file: !1317, line: 601, type: !107)
!10620 = !DILocalVariable(name: "err", scope: !10610, file: !1317, line: 602, type: !107)
!10621 = !DILabel(scope: !10610, name: "exit", file: !1317, line: 643)
!10622 = !DILocation(line: 0, scope: !10610)
!10623 = !DILocation(line: 599, column: 45, scope: !10610)
!10624 = !DILocation(line: 604, column: 6, scope: !10610)
!10625 = !DILocation(line: 605, column: 34, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10627, file: !1317, line: 605, column: 7)
!10627 = distinct !DILexicalBlock(scope: !10628, file: !1317, line: 604, column: 38)
!10628 = distinct !DILexicalBlock(scope: !10610, file: !1317, line: 604, column: 6)
!10629 = !DILocation(line: 605, column: 7, scope: !10626)
!10630 = !DILocation(line: 605, column: 47, scope: !10626)
!10631 = !DILocation(line: 605, column: 39, scope: !10626)
!10632 = !DILocation(line: 605, column: 7, scope: !10627)
!10633 = !DILocation(line: 606, column: 4, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10626, file: !1317, line: 605, column: 53)
!10635 = !DILocation(line: 607, column: 4, scope: !10634)
!10636 = !DILocation(line: 608, column: 4, scope: !10634)
!10637 = !DILocation(line: 609, column: 3, scope: !10634)
!10638 = !DILocation(line: 600, column: 38, scope: !10610)
!10639 = !DILocation(line: 620, column: 30, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10610, file: !1317, line: 620, column: 6)
!10641 = !DILocation(line: 620, column: 6, scope: !10640)
!10642 = !DILocation(line: 620, column: 57, scope: !10640)
!10643 = !DILocation(line: 620, column: 6, scope: !10610)
!10644 = !DILocation(line: 625, column: 29, scope: !10610)
!10645 = !DILocation(line: 625, column: 2, scope: !10610)
!10646 = !DILocation(line: 627, column: 2, scope: !10610)
!10647 = !DILocation(line: 630, column: 3, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10610, file: !1317, line: 627, column: 16)
!10649 = !DILocation(line: 633, column: 3, scope: !10648)
!10650 = !DILocation(line: 636, column: 3, scope: !10648)
!10651 = !DILocation(line: 639, column: 2, scope: !10610)
!10652 = !DILocation(line: 641, column: 2, scope: !10610)
!10653 = !DILocation(line: 643, column: 1, scope: !10610)
!10654 = !DILocation(line: 644, column: 2, scope: !10610)
!10655 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1317, file: !1317, line: 647, type: !1217, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10656)
!10656 = !{!10657, !10658, !10659, !10660}
!10657 = !DILocalVariable(name: "dev", arg: 1, scope: !10655, file: !1317, line: 647, type: !1177)
!10658 = !DILocalVariable(name: "callback", arg: 2, scope: !10655, file: !1317, line: 648, type: !1219)
!10659 = !DILocalVariable(name: "set", arg: 3, scope: !10655, file: !1317, line: 649, type: !136)
!10660 = !DILocalVariable(name: "data", scope: !10655, file: !1317, line: 651, type: !10618)
!10661 = !DILocation(line: 0, scope: !10655)
!10662 = !DILocation(line: 651, column: 38, scope: !10655)
!10663 = !DILocation(line: 653, column: 37, scope: !10655)
!10664 = !DILocation(line: 653, column: 9, scope: !10655)
!10665 = !DILocation(line: 653, column: 2, scope: !10655)
!10666 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10667, file: !10667, line: 38, type: !10668, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10671)
!10667 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10668 = !DISubroutineType(types: !10669)
!10669 = !{!107, !10670, !1219, !136}
!10670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 32)
!10671 = !{!10672, !10673, !10674}
!10672 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10666, file: !10667, line: 38, type: !10670)
!10673 = !DILocalVariable(name: "callback", arg: 2, scope: !10666, file: !10667, line: 39, type: !1219)
!10674 = !DILocalVariable(name: "set", arg: 3, scope: !10666, file: !10667, line: 40, type: !136)
!10675 = !DILocation(line: 0, scope: !10666)
!10676 = !DILocation(line: 45, column: 7, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10666, file: !10667, line: 45, column: 6)
!10678 = !DILocation(line: 45, column: 6, scope: !10666)
!10679 = !DILocation(line: 46, column: 56, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10681, file: !10667, line: 46, column: 7)
!10681 = distinct !DILexicalBlock(scope: !10677, file: !10667, line: 45, column: 38)
!10682 = !DILocation(line: 46, column: 8, scope: !10680)
!10683 = !DILocation(line: 46, column: 7, scope: !10681)
!10684 = !DILocation(line: 51, column: 13, scope: !10677)
!10685 = !DILocation(line: 56, column: 43, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10687, file: !10667, line: 55, column: 11)
!10687 = distinct !DILexicalBlock(scope: !10666, file: !10667, line: 55, column: 6)
!10688 = !DILocation(line: 56, column: 3, scope: !10686)
!10689 = !DILocation(line: 57, column: 2, scope: !10686)
!10690 = !DILocation(line: 60, column: 1, scope: !10666)
!10691 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1224, file: !1224, line: 261, type: !10692, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10694)
!10692 = !DISubroutineType(types: !10693)
!10693 = !{!136, !10670}
!10694 = !{!10695}
!10695 = !DILocalVariable(name: "list", arg: 1, scope: !10691, file: !1224, line: 261, type: !10670)
!10696 = !DILocation(line: 0, scope: !10691)
!10697 = !DILocation(line: 261, column: 1, scope: !10691)
!10698 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1224, file: !1224, line: 417, type: !10699, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10701)
!10699 = !DISubroutineType(types: !10700)
!10700 = !{!136, !10670, !1396}
!10701 = !{!10702, !10703, !10704, !10705}
!10702 = !DILocalVariable(name: "list", arg: 1, scope: !10698, file: !1224, line: 417, type: !10670)
!10703 = !DILocalVariable(name: "node", arg: 2, scope: !10698, file: !1224, line: 417, type: !1396)
!10704 = !DILocalVariable(name: "prev", scope: !10698, file: !1224, line: 417, type: !1396)
!10705 = !DILocalVariable(name: "test", scope: !10698, file: !1224, line: 417, type: !1396)
!10706 = !DILocation(line: 0, scope: !10698)
!10707 = !DILocation(line: 417, column: 1, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10698, file: !1224, line: 417, column: 1)
!10709 = !DILocation(line: 417, column: 1, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10708, file: !1224, line: 417, column: 1)
!10711 = !DILocation(line: 417, column: 1, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10713, file: !1224, line: 417, column: 1)
!10713 = distinct !DILexicalBlock(scope: !10710, file: !1224, line: 417, column: 1)
!10714 = !DILocation(line: 417, column: 1, scope: !10713)
!10715 = distinct !{!10715, !10707, !10707}
!10716 = !DILocation(line: 417, column: 1, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10712, file: !1224, line: 417, column: 1)
!10718 = !DILocation(line: 417, column: 1, scope: !10698)
!10719 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1224, file: !1224, line: 298, type: !10720, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10722)
!10720 = !DISubroutineType(types: !10721)
!10721 = !{null, !10670, !1396}
!10722 = !{!10723, !10724}
!10723 = !DILocalVariable(name: "list", arg: 1, scope: !10719, file: !1224, line: 298, type: !10670)
!10724 = !DILocalVariable(name: "node", arg: 2, scope: !10719, file: !1224, line: 298, type: !1396)
!10725 = !DILocation(line: 0, scope: !10719)
!10726 = !DILocation(line: 298, column: 1, scope: !10719)
!10727 = !DILocation(line: 298, column: 1, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10719, file: !1224, line: 298, column: 1)
!10729 = !DILocation(line: 298, column: 1, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10728, file: !1224, line: 298, column: 1)
!10731 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1224, file: !1224, line: 231, type: !10732, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10734)
!10732 = !DISubroutineType(types: !10733)
!10733 = !{!1396, !10670}
!10734 = !{!10735}
!10735 = !DILocalVariable(name: "list", arg: 1, scope: !10731, file: !1224, line: 231, type: !10670)
!10736 = !DILocation(line: 0, scope: !10731)
!10737 = !DILocation(line: 233, column: 15, scope: !10731)
!10738 = !DILocation(line: 233, column: 2, scope: !10731)
!10739 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1224, file: !1224, line: 209, type: !10740, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10742)
!10740 = !DISubroutineType(types: !10741)
!10741 = !{null, !1396, !1396}
!10742 = !{!10743, !10744}
!10743 = !DILocalVariable(name: "parent", arg: 1, scope: !10739, file: !1224, line: 209, type: !1396)
!10744 = !DILocalVariable(name: "child", arg: 2, scope: !10739, file: !1224, line: 209, type: !1396)
!10745 = !DILocation(line: 0, scope: !10739)
!10746 = !DILocation(line: 211, column: 10, scope: !10739)
!10747 = !DILocation(line: 211, column: 15, scope: !10739)
!10748 = !DILocation(line: 212, column: 1, scope: !10739)
!10749 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1224, file: !1224, line: 214, type: !10720, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10750)
!10750 = !{!10751, !10752}
!10751 = !DILocalVariable(name: "list", arg: 1, scope: !10749, file: !1224, line: 214, type: !10670)
!10752 = !DILocalVariable(name: "node", arg: 2, scope: !10749, file: !1224, line: 214, type: !1396)
!10753 = !DILocation(line: 0, scope: !10749)
!10754 = !DILocation(line: 216, column: 8, scope: !10749)
!10755 = !DILocation(line: 216, column: 13, scope: !10749)
!10756 = !DILocation(line: 217, column: 1, scope: !10749)
!10757 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1224, file: !1224, line: 243, type: !10732, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10758)
!10758 = !{!10759}
!10759 = !DILocalVariable(name: "list", arg: 1, scope: !10757, file: !1224, line: 243, type: !10670)
!10760 = !DILocation(line: 0, scope: !10757)
!10761 = !DILocation(line: 245, column: 15, scope: !10757)
!10762 = !DILocation(line: 245, column: 2, scope: !10757)
!10763 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1224, file: !1224, line: 219, type: !10720, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10764)
!10764 = !{!10765, !10766}
!10765 = !DILocalVariable(name: "list", arg: 1, scope: !10763, file: !1224, line: 219, type: !10670)
!10766 = !DILocalVariable(name: "node", arg: 2, scope: !10763, file: !1224, line: 219, type: !1396)
!10767 = !DILocation(line: 0, scope: !10763)
!10768 = !DILocation(line: 221, column: 8, scope: !10763)
!10769 = !DILocation(line: 221, column: 13, scope: !10763)
!10770 = !DILocation(line: 222, column: 1, scope: !10763)
!10771 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1224, file: !1224, line: 401, type: !10772, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10774)
!10772 = !DISubroutineType(types: !10773)
!10773 = !{null, !10670, !1396, !1396}
!10774 = !{!10775, !10776, !10777}
!10775 = !DILocalVariable(name: "list", arg: 1, scope: !10771, file: !1224, line: 401, type: !10670)
!10776 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10771, file: !1224, line: 401, type: !1396)
!10777 = !DILocalVariable(name: "node", arg: 3, scope: !10771, file: !1224, line: 401, type: !1396)
!10778 = !DILocation(line: 0, scope: !10771)
!10779 = !DILocation(line: 401, column: 1, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10771, file: !1224, line: 401, column: 1)
!10781 = !DILocation(line: 0, scope: !10780)
!10782 = !DILocation(line: 401, column: 1, scope: !10771)
!10783 = !DILocation(line: 401, column: 1, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10780, file: !1224, line: 401, column: 1)
!10785 = !DILocation(line: 401, column: 1, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10784, file: !1224, line: 401, column: 1)
!10787 = !DILocation(line: 401, column: 1, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10786, file: !1224, line: 401, column: 1)
!10789 = !DILocation(line: 401, column: 1, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10780, file: !1224, line: 401, column: 1)
!10791 = !DILocation(line: 401, column: 1, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10790, file: !1224, line: 401, column: 1)
!10793 = !DILocation(line: 401, column: 1, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10792, file: !1224, line: 401, column: 1)
!10795 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1224, file: !1224, line: 285, type: !10796, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10798)
!10796 = !DISubroutineType(types: !10797)
!10797 = !{!1396, !1396}
!10798 = !{!10799}
!10799 = !DILocalVariable(name: "node", arg: 1, scope: !10795, file: !1224, line: 285, type: !1396)
!10800 = !DILocation(line: 0, scope: !10795)
!10801 = !DILocation(line: 285, column: 1, scope: !10795)
!10802 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1224, file: !1224, line: 274, type: !10796, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10803)
!10803 = !{!10804}
!10804 = !DILocalVariable(name: "node", arg: 1, scope: !10802, file: !1224, line: 274, type: !1396)
!10805 = !DILocation(line: 0, scope: !10802)
!10806 = !DILocation(line: 274, column: 1, scope: !10802)
!10807 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1224, file: !1224, line: 204, type: !10796, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10808)
!10808 = !{!10809}
!10809 = !DILocalVariable(name: "node", arg: 1, scope: !10807, file: !1224, line: 204, type: !1396)
!10810 = !DILocation(line: 0, scope: !10807)
!10811 = !DILocation(line: 206, column: 15, scope: !10807)
!10812 = !DILocation(line: 206, column: 2, scope: !10807)
!10813 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1317, file: !1317, line: 342, type: !418, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10814)
!10814 = !{!10815, !10816, !10817}
!10815 = !DILocalVariable(name: "pin", arg: 1, scope: !10813, file: !1317, line: 342, type: !107)
!10816 = !DILocalVariable(name: "line", scope: !10813, file: !1317, line: 344, type: !108)
!10817 = !DILocalVariable(name: "port", scope: !10813, file: !1317, line: 345, type: !107)
!10818 = !DILocation(line: 0, scope: !10813)
!10819 = !DILocation(line: 344, column: 18, scope: !10813)
!10820 = !{i32 983040, i32 0}
!10821 = !DILocation(line: 356, column: 9, scope: !10813)
!10822 = !DILocation(line: 370, column: 2, scope: !10813)
!10823 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1317, file: !1317, line: 37, type: !870, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10824)
!10824 = !{!10825, !10826, !10827}
!10825 = !DILocalVariable(name: "line", arg: 1, scope: !10823, file: !1317, line: 37, type: !107)
!10826 = !DILocalVariable(name: "arg", arg: 2, scope: !10823, file: !1317, line: 37, type: !106)
!10827 = !DILocalVariable(name: "data", scope: !10823, file: !1317, line: 39, type: !10618)
!10828 = !DILocation(line: 0, scope: !10823)
!10829 = !DILocation(line: 41, column: 29, scope: !10823)
!10830 = !DILocation(line: 41, column: 39, scope: !10823)
!10831 = !DILocation(line: 41, column: 44, scope: !10823)
!10832 = !DILocation(line: 41, column: 2, scope: !10823)
!10833 = !DILocation(line: 42, column: 1, scope: !10823)
!10834 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1317, file: !1317, line: 376, type: !10835, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10837)
!10835 = !DISubroutineType(types: !10836)
!10836 = !{!107, !107, !107}
!10837 = !{!10838, !10839, !10840, !10842, !10843}
!10838 = !DILocalVariable(name: "port", arg: 1, scope: !10834, file: !1317, line: 376, type: !107)
!10839 = !DILocalVariable(name: "pin", arg: 2, scope: !10834, file: !1317, line: 376, type: !107)
!10840 = !DILocalVariable(name: "clk", scope: !10834, file: !1317, line: 386, type: !10841)
!10841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1177)
!10842 = !DILocalVariable(name: "pclken", scope: !10834, file: !1317, line: 387, type: !1443)
!10843 = !DILocalVariable(name: "ret", scope: !10834, file: !1317, line: 396, type: !107)
!10844 = !DILocation(line: 0, scope: !10834)
!10845 = !DILocation(line: 387, column: 2, scope: !10834)
!10846 = !DILocation(line: 387, column: 22, scope: !10834)
!10847 = !DILocation(line: 399, column: 8, scope: !10834)
!10848 = !DILocation(line: 400, column: 10, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10834, file: !1317, line: 400, column: 6)
!10850 = !DILocation(line: 400, column: 6, scope: !10834)
!10851 = !DILocation(line: 405, column: 2, scope: !10834)
!10852 = !DILocation(line: 407, column: 2, scope: !10834)
!10853 = !DILocation(line: 408, column: 1, scope: !10834)
!10854 = distinct !DISubprogram(name: "clock_control_on", scope: !956, file: !956, line: 123, type: !1282, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10855)
!10855 = !{!10856, !10857, !10858}
!10856 = !DILocalVariable(name: "dev", arg: 1, scope: !10854, file: !956, line: 123, type: !1177)
!10857 = !DILocalVariable(name: "sys", arg: 2, scope: !10854, file: !956, line: 124, type: !1048)
!10858 = !DILocalVariable(name: "api", scope: !10854, file: !956, line: 126, type: !1275)
!10859 = !DILocation(line: 0, scope: !10854)
!10860 = !DILocation(line: 127, column: 49, scope: !10854)
!10861 = !DILocation(line: 129, column: 14, scope: !10854)
!10862 = !DILocation(line: 129, column: 9, scope: !10854)
!10863 = !DILocation(line: 129, column: 2, scope: !10854)
!10864 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1317, file: !1317, line: 311, type: !9983, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10865)
!10865 = !{!10866, !10867, !10868}
!10866 = !DILocalVariable(name: "port", arg: 1, scope: !10864, file: !1317, line: 311, type: !107)
!10867 = !DILocalVariable(name: "pin", arg: 2, scope: !10864, file: !1317, line: 311, type: !107)
!10868 = !DILocalVariable(name: "line", scope: !10864, file: !1317, line: 313, type: !108)
!10869 = !DILocation(line: 0, scope: !10864)
!10870 = !DILocation(line: 313, column: 18, scope: !10864)
!10871 = !DILocation(line: 337, column: 2, scope: !10864)
!10872 = !DILocation(line: 340, column: 1, scope: !10864)
!10873 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1317, file: !1317, line: 295, type: !10874, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10876)
!10874 = !DISubroutineType(types: !10875)
!10875 = !{!108, !107}
!10876 = !{!10877}
!10877 = !DILocalVariable(name: "pin", arg: 1, scope: !10873, file: !1317, line: 295, type: !107)
!10878 = !DILocation(line: 0, scope: !10873)
!10879 = !DILocation(line: 307, column: 46, scope: !10873)
!10880 = !DILocation(line: 307, column: 27, scope: !10873)
!10881 = !DILocation(line: 307, column: 32, scope: !10873)
!10882 = !DILocation(line: 307, column: 14, scope: !10873)
!10883 = !DILocation(line: 307, column: 39, scope: !10873)
!10884 = !DILocation(line: 307, column: 2, scope: !10873)
!10885 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7074, file: !7074, line: 671, type: !10886, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10888)
!10886 = !DISubroutineType(types: !10887)
!10887 = !{null, !108, !108}
!10888 = !{!10889, !10890}
!10889 = !DILocalVariable(name: "Port", arg: 1, scope: !10885, file: !7074, line: 671, type: !108)
!10890 = !DILocalVariable(name: "Line", arg: 2, scope: !10885, file: !7074, line: 671, type: !108)
!10891 = !DILocation(line: 0, scope: !10885)
!10892 = !DILocation(line: 673, column: 3, scope: !10885)
!10893 = !DILocalVariable(name: "value", arg: 1, scope: !10894, file: !7374, line: 373, type: !108)
!10894 = distinct !DISubprogram(name: "__RBIT", scope: !7374, file: !7374, line: 373, type: !8619, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10895)
!10895 = !{!10893, !10896}
!10896 = !DILocalVariable(name: "result", scope: !10894, file: !7374, line: 375, type: !108)
!10897 = !DILocation(line: 0, scope: !10894, inlinedAt: !10898)
!10898 = distinct !DILocation(line: 673, column: 3, scope: !10885)
!10899 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !10898)
!10900 = !{i64 3547076}
!10901 = !DILocalVariable(name: "value", arg: 1, scope: !10902, file: !7374, line: 403, type: !108)
!10902 = distinct !DISubprogram(name: "__CLZ", scope: !7374, file: !7374, line: 403, type: !10903, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10905)
!10903 = !DISubroutineType(types: !10904)
!10904 = !{!190, !108}
!10905 = !{!10901}
!10906 = !DILocation(line: 0, scope: !10902, inlinedAt: !10907)
!10907 = distinct !DILocation(line: 673, column: 3, scope: !10885)
!10908 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !10907)
!10909 = !DILocation(line: 674, column: 1, scope: !10885)
!10910 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10667, file: !10667, line: 69, type: !10911, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10913)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{null, !10670, !1177, !108}
!10913 = !{!10914, !10915, !10916, !10917, !10918}
!10914 = !DILocalVariable(name: "list", arg: 1, scope: !10910, file: !10667, line: 69, type: !10670)
!10915 = !DILocalVariable(name: "port", arg: 2, scope: !10910, file: !10667, line: 70, type: !1177)
!10916 = !DILocalVariable(name: "pins", arg: 3, scope: !10910, file: !10667, line: 71, type: !108)
!10917 = !DILocalVariable(name: "cb", scope: !10910, file: !10667, line: 73, type: !1219)
!10918 = !DILocalVariable(name: "tmp", scope: !10910, file: !10667, line: 73, type: !1219)
!10919 = !DILocation(line: 0, scope: !10910)
!10920 = !DILocation(line: 75, column: 2, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10910, file: !10667, line: 75, column: 2)
!10922 = !DILocation(line: 0, scope: !10921)
!10923 = !DILocation(line: 76, column: 11, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10925, file: !10667, line: 76, column: 7)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !10667, line: 75, column: 57)
!10926 = distinct !DILexicalBlock(scope: !10921, file: !10667, line: 75, column: 2)
!10927 = !DILocation(line: 76, column: 20, scope: !10924)
!10928 = !DILocation(line: 76, column: 7, scope: !10925)
!10929 = !DILocation(line: 78, column: 8, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10924, file: !10667, line: 76, column: 28)
!10931 = !DILocation(line: 78, column: 4, scope: !10930)
!10932 = !DILocation(line: 79, column: 3, scope: !10930)
!10933 = !DILocation(line: 75, column: 2, scope: !10926)
!10934 = !DILocation(line: 81, column: 1, scope: !10910)
!10935 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7074, file: !7074, line: 710, type: !8619, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10936)
!10936 = !{!10937}
!10937 = !DILocalVariable(name: "Line", arg: 1, scope: !10935, file: !7074, line: 710, type: !108)
!10938 = !DILocation(line: 0, scope: !10935)
!10939 = !DILocation(line: 712, column: 21, scope: !10935)
!10940 = !DILocation(line: 0, scope: !10894, inlinedAt: !10941)
!10941 = distinct !DILocation(line: 712, column: 76, scope: !10935)
!10942 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !10941)
!10943 = !DILocation(line: 0, scope: !10902, inlinedAt: !10944)
!10944 = distinct !DILocation(line: 712, column: 76, scope: !10935)
!10945 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !10944)
!10946 = !DILocation(line: 712, column: 73, scope: !10935)
!10947 = !DILocation(line: 712, column: 3, scope: !10935)
!10948 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10949, file: !10949, line: 910, type: !10950, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10952)
!10949 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10950 = !DISubroutineType(types: !10951)
!10951 = !{null, !1250, !108}
!10952 = !{!10953, !10954}
!10953 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10948, file: !10949, line: 910, type: !1250)
!10954 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10948, file: !10949, line: 910, type: !108)
!10955 = !DILocation(line: 0, scope: !10948)
!10956 = !DILocation(line: 912, column: 3, scope: !10948)
!10957 = !DILocation(line: 913, column: 1, scope: !10948)
!10958 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10949, file: !10949, line: 823, type: !10959, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10961)
!10959 = !DISubroutineType(types: !10960)
!10960 = !{!108, !1250}
!10961 = !{!10962}
!10962 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10958, file: !10949, line: 823, type: !1250)
!10963 = !DILocation(line: 0, scope: !10958)
!10964 = !DILocation(line: 825, column: 21, scope: !10958)
!10965 = !DILocation(line: 825, column: 3, scope: !10958)
!10966 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10949, file: !10949, line: 812, type: !10950, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10967)
!10967 = !{!10968, !10969}
!10968 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10966, file: !10949, line: 812, type: !1250)
!10969 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10966, file: !10949, line: 812, type: !108)
!10970 = !DILocation(line: 0, scope: !10966)
!10971 = !DILocation(line: 814, column: 3, scope: !10966)
!10972 = !DILocation(line: 815, column: 1, scope: !10966)
!10973 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10949, file: !10949, line: 771, type: !10959, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10974)
!10974 = !{!10975}
!10975 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10973, file: !10949, line: 771, type: !1250)
!10976 = !DILocation(line: 0, scope: !10973)
!10977 = !DILocation(line: 773, column: 21, scope: !10973)
!10978 = !DILocation(line: 773, column: 3, scope: !10973)
!10979 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1317, file: !1317, line: 47, type: !10980, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !10982)
!10980 = !DISubroutineType(types: !10981)
!10981 = !{!107, !1193, !396}
!10982 = !{!10983, !10984}
!10983 = !DILocalVariable(name: "flags", arg: 1, scope: !10979, file: !1317, line: 47, type: !1193)
!10984 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10979, file: !1317, line: 47, type: !396)
!10985 = !DILocation(line: 0, scope: !10979)
!10986 = !DILocation(line: 50, column: 13, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10979, file: !1317, line: 50, column: 6)
!10988 = !DILocation(line: 50, column: 28, scope: !10987)
!10989 = !DILocation(line: 50, column: 6, scope: !10979)
!10990 = !DILocation(line: 53, column: 11, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10987, file: !1317, line: 50, column: 34)
!10992 = !DILocation(line: 55, column: 14, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10991, file: !1317, line: 55, column: 7)
!10994 = !DILocation(line: 55, column: 35, scope: !10993)
!10995 = !DILocation(line: 55, column: 7, scope: !10991)
!10996 = !DILocation(line: 56, column: 14, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !1317, line: 56, column: 8)
!10998 = distinct !DILexicalBlock(scope: !10993, file: !1317, line: 55, column: 41)
!10999 = !DILocation(line: 56, column: 8, scope: !10998)
!11000 = !DILocation(line: 0, scope: !10993)
!11001 = !DILocation(line: 66, column: 14, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10991, file: !1317, line: 66, column: 7)
!11003 = !DILocation(line: 66, column: 30, scope: !11002)
!11004 = !DILocation(line: 66, column: 7, scope: !10991)
!11005 = !DILocation(line: 67, column: 12, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11002, file: !1317, line: 66, column: 36)
!11007 = !DILocation(line: 68, column: 3, scope: !11006)
!11008 = !DILocation(line: 68, column: 21, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11002, file: !1317, line: 68, column: 14)
!11010 = !DILocation(line: 68, column: 39, scope: !11009)
!11011 = !DILocation(line: 68, column: 14, scope: !11002)
!11012 = !DILocation(line: 69, column: 12, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11009, file: !1317, line: 68, column: 45)
!11014 = !DILocation(line: 70, column: 3, scope: !11013)
!11015 = !DILocation(line: 72, column: 21, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !10987, file: !1317, line: 72, column: 14)
!11017 = !DILocation(line: 72, column: 35, scope: !11016)
!11018 = !DILocation(line: 72, column: 14, scope: !10987)
!11019 = !DILocation(line: 77, column: 14, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11021, file: !1317, line: 77, column: 7)
!11021 = distinct !DILexicalBlock(scope: !11016, file: !1317, line: 72, column: 41)
!11022 = !DILocation(line: 77, column: 30, scope: !11020)
!11023 = !DILocation(line: 77, column: 7, scope: !11021)
!11024 = !DILocation(line: 0, scope: !10987)
!11025 = !DILocation(line: 90, column: 1, scope: !10979)
!11026 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1317, file: !1317, line: 157, type: !11027, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !11029)
!11027 = !DISubroutineType(types: !11028)
!11028 = !{null, !1177, !107, !107, !107}
!11029 = !{!11030, !11031, !11032, !11033, !11034, !11035, !11036, !11037, !11038, !11039, !11040}
!11030 = !DILocalVariable(name: "dev", arg: 1, scope: !11026, file: !1317, line: 157, type: !1177)
!11031 = !DILocalVariable(name: "pin", arg: 2, scope: !11026, file: !1317, line: 157, type: !107)
!11032 = !DILocalVariable(name: "conf", arg: 3, scope: !11026, file: !1317, line: 158, type: !107)
!11033 = !DILocalVariable(name: "func", arg: 4, scope: !11026, file: !1317, line: 158, type: !107)
!11034 = !DILocalVariable(name: "cfg", scope: !11026, file: !1317, line: 160, type: !10551)
!11035 = !DILocalVariable(name: "gpio", scope: !11026, file: !1317, line: 161, type: !1250)
!11036 = !DILocalVariable(name: "pin_ll", scope: !11026, file: !1317, line: 163, type: !107)
!11037 = !DILocalVariable(name: "mode", scope: !11026, file: !1317, line: 227, type: !32)
!11038 = !DILocalVariable(name: "otype", scope: !11026, file: !1317, line: 227, type: !32)
!11039 = !DILocalVariable(name: "ospeed", scope: !11026, file: !1317, line: 227, type: !32)
!11040 = !DILocalVariable(name: "pupd", scope: !11026, file: !1317, line: 227, type: !32)
!11041 = !DILocation(line: 0, scope: !11026)
!11042 = !DILocation(line: 160, column: 45, scope: !11026)
!11043 = !DILocation(line: 161, column: 44, scope: !11026)
!11044 = !DILocation(line: 163, column: 15, scope: !11026)
!11045 = !DILocation(line: 229, column: 14, scope: !11026)
!11046 = !DILocation(line: 246, column: 47, scope: !11026)
!11047 = !DILocation(line: 246, column: 2, scope: !11026)
!11048 = !DILocation(line: 248, column: 43, scope: !11026)
!11049 = !DILocation(line: 248, column: 2, scope: !11026)
!11050 = !DILocation(line: 250, column: 40, scope: !11026)
!11051 = !DILocation(line: 250, column: 2, scope: !11026)
!11052 = !DILocation(line: 252, column: 11, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11026, file: !1317, line: 252, column: 6)
!11054 = !DILocation(line: 252, column: 6, scope: !11026)
!11055 = !DILocation(line: 253, column: 11, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11057, file: !1317, line: 253, column: 7)
!11057 = distinct !DILexicalBlock(scope: !11053, file: !1317, line: 252, column: 36)
!11058 = !DILocation(line: 253, column: 7, scope: !11057)
!11059 = !DILocation(line: 254, column: 4, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11056, file: !1317, line: 253, column: 16)
!11061 = !DILocation(line: 255, column: 3, scope: !11060)
!11062 = !DILocation(line: 256, column: 4, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11056, file: !1317, line: 255, column: 10)
!11064 = !DILocation(line: 260, column: 40, scope: !11026)
!11065 = !DILocation(line: 260, column: 2, scope: !11026)
!11066 = !DILocation(line: 265, column: 1, scope: !11026)
!11067 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1317, file: !1317, line: 137, type: !10874, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !11068)
!11068 = !{!11069, !11070}
!11069 = !DILocalVariable(name: "pin", arg: 1, scope: !11067, file: !1317, line: 137, type: !107)
!11070 = !DILocalVariable(name: "pinval", scope: !11067, file: !1317, line: 139, type: !108)
!11071 = !DILocation(line: 0, scope: !11067)
!11072 = !DILocation(line: 149, column: 13, scope: !11067)
!11073 = !DILocation(line: 151, column: 2, scope: !11067)
!11074 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10949, file: !10949, line: 342, type: !11075, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !11077)
!11075 = !DISubroutineType(types: !11076)
!11076 = !{null, !1250, !108, !108}
!11077 = !{!11078, !11079, !11080}
!11078 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11074, file: !10949, line: 342, type: !1250)
!11079 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11074, file: !10949, line: 342, type: !108)
!11080 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11074, file: !10949, line: 342, type: !108)
!11081 = !DILocation(line: 0, scope: !11074)
!11082 = !DILocation(line: 344, column: 3, scope: !11074)
!11083 = !DILocation(line: 345, column: 1, scope: !11074)
!11084 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10949, file: !10949, line: 413, type: !11075, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !11085)
!11085 = !{!11086, !11087, !11088}
!11086 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11084, file: !10949, line: 413, type: !1250)
!11087 = !DILocalVariable(name: "Pin", arg: 2, scope: !11084, file: !10949, line: 413, type: !108)
!11088 = !DILocalVariable(name: "Speed", arg: 3, scope: !11084, file: !10949, line: 413, type: !108)
!11089 = !DILocation(line: 0, scope: !11084)
!11090 = !DILocation(line: 415, column: 3, scope: !11084)
!11091 = !DILocation(line: 0, scope: !10894, inlinedAt: !11092)
!11092 = distinct !DILocation(line: 415, column: 3, scope: !11084)
!11093 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !11092)
!11094 = !DILocation(line: 0, scope: !10902, inlinedAt: !11095)
!11095 = distinct !DILocation(line: 415, column: 3, scope: !11084)
!11096 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !11095)
!11097 = !DILocation(line: 0, scope: !10894, inlinedAt: !11098)
!11098 = distinct !DILocation(line: 415, column: 3, scope: !11084)
!11099 = !DILocation(line: 0, scope: !10902, inlinedAt: !11100)
!11100 = distinct !DILocation(line: 415, column: 3, scope: !11084)
!11101 = !DILocation(line: 417, column: 1, scope: !11084)
!11102 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10949, file: !10949, line: 484, type: !11075, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !11103)
!11103 = !{!11104, !11105, !11106}
!11104 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11102, file: !10949, line: 484, type: !1250)
!11105 = !DILocalVariable(name: "Pin", arg: 2, scope: !11102, file: !10949, line: 484, type: !108)
!11106 = !DILocalVariable(name: "Pull", arg: 3, scope: !11102, file: !10949, line: 484, type: !108)
!11107 = !DILocation(line: 0, scope: !11102)
!11108 = !DILocation(line: 486, column: 3, scope: !11102)
!11109 = !DILocation(line: 0, scope: !10894, inlinedAt: !11110)
!11110 = distinct !DILocation(line: 486, column: 3, scope: !11102)
!11111 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !11110)
!11112 = !DILocation(line: 0, scope: !10902, inlinedAt: !11113)
!11113 = distinct !DILocation(line: 486, column: 3, scope: !11102)
!11114 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !11113)
!11115 = !DILocation(line: 0, scope: !10894, inlinedAt: !11116)
!11116 = distinct !DILocation(line: 486, column: 3, scope: !11102)
!11117 = !DILocation(line: 0, scope: !10902, inlinedAt: !11118)
!11118 = distinct !DILocation(line: 486, column: 3, scope: !11102)
!11119 = !DILocation(line: 487, column: 1, scope: !11102)
!11120 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10949, file: !10949, line: 556, type: !11075, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !11121)
!11121 = !{!11122, !11123, !11124}
!11122 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11120, file: !10949, line: 556, type: !1250)
!11123 = !DILocalVariable(name: "Pin", arg: 2, scope: !11120, file: !10949, line: 556, type: !108)
!11124 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11120, file: !10949, line: 556, type: !108)
!11125 = !DILocation(line: 0, scope: !11120)
!11126 = !DILocation(line: 558, column: 3, scope: !11120)
!11127 = !DILocation(line: 0, scope: !10894, inlinedAt: !11128)
!11128 = distinct !DILocation(line: 558, column: 3, scope: !11120)
!11129 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !11128)
!11130 = !DILocation(line: 0, scope: !10902, inlinedAt: !11131)
!11131 = distinct !DILocation(line: 558, column: 3, scope: !11120)
!11132 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !11131)
!11133 = !DILocation(line: 0, scope: !10894, inlinedAt: !11134)
!11134 = distinct !DILocation(line: 558, column: 3, scope: !11120)
!11135 = !DILocation(line: 0, scope: !10902, inlinedAt: !11136)
!11136 = distinct !DILocation(line: 558, column: 3, scope: !11120)
!11137 = !DILocation(line: 560, column: 1, scope: !11120)
!11138 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10949, file: !10949, line: 633, type: !11075, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !11139)
!11139 = !{!11140, !11141, !11142}
!11140 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11138, file: !10949, line: 633, type: !1250)
!11141 = !DILocalVariable(name: "Pin", arg: 2, scope: !11138, file: !10949, line: 633, type: !108)
!11142 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11138, file: !10949, line: 633, type: !108)
!11143 = !DILocation(line: 0, scope: !11138)
!11144 = !DILocation(line: 635, column: 3, scope: !11138)
!11145 = !DILocation(line: 0, scope: !10894, inlinedAt: !11146)
!11146 = distinct !DILocation(line: 635, column: 3, scope: !11138)
!11147 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !11146)
!11148 = !DILocation(line: 0, scope: !10902, inlinedAt: !11149)
!11149 = distinct !DILocation(line: 635, column: 3, scope: !11138)
!11150 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !11149)
!11151 = !DILocation(line: 0, scope: !10894, inlinedAt: !11152)
!11152 = distinct !DILocation(line: 635, column: 3, scope: !11138)
!11153 = !DILocation(line: 0, scope: !10902, inlinedAt: !11154)
!11154 = distinct !DILocation(line: 635, column: 3, scope: !11138)
!11155 = !DILocation(line: 637, column: 1, scope: !11138)
!11156 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10949, file: !10949, line: 273, type: !11075, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !11157)
!11157 = !{!11158, !11159, !11160}
!11158 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11156, file: !10949, line: 273, type: !1250)
!11159 = !DILocalVariable(name: "Pin", arg: 2, scope: !11156, file: !10949, line: 273, type: !108)
!11160 = !DILocalVariable(name: "Mode", arg: 3, scope: !11156, file: !10949, line: 273, type: !108)
!11161 = !DILocation(line: 0, scope: !11156)
!11162 = !DILocation(line: 275, column: 3, scope: !11156)
!11163 = !DILocation(line: 0, scope: !10894, inlinedAt: !11164)
!11164 = distinct !DILocation(line: 275, column: 3, scope: !11156)
!11165 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !11164)
!11166 = !DILocation(line: 0, scope: !10902, inlinedAt: !11167)
!11167 = distinct !DILocation(line: 275, column: 3, scope: !11156)
!11168 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !11167)
!11169 = !DILocation(line: 0, scope: !10894, inlinedAt: !11170)
!11170 = distinct !DILocation(line: 275, column: 3, scope: !11156)
!11171 = !DILocation(line: 0, scope: !10902, inlinedAt: !11172)
!11172 = distinct !DILocation(line: 275, column: 3, scope: !11156)
!11173 = !DILocation(line: 276, column: 1, scope: !11156)
!11174 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1317, file: !1317, line: 698, type: !1330, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !11175)
!11175 = !{!11176, !11177, !11178}
!11176 = !DILocalVariable(name: "dev", arg: 1, scope: !11174, file: !1317, line: 698, type: !1177)
!11177 = !DILocalVariable(name: "data", scope: !11174, file: !1317, line: 700, type: !10618)
!11178 = !DILocalVariable(name: "ret", scope: !11174, file: !1317, line: 701, type: !107)
!11179 = !DILocation(line: 0, scope: !11174)
!11180 = !DILocation(line: 700, column: 38, scope: !11174)
!11181 = !DILocation(line: 703, column: 8, scope: !11174)
!11182 = !DILocation(line: 703, column: 12, scope: !11174)
!11183 = !DILocation(line: 705, column: 7, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11174, file: !1317, line: 705, column: 6)
!11185 = !DILocation(line: 705, column: 6, scope: !11174)
!11186 = !DILocation(line: 722, column: 8, scope: !11174)
!11187 = !DILocation(line: 723, column: 10, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11174, file: !1317, line: 723, column: 6)
!11189 = !DILocation(line: 723, column: 6, scope: !11174)
!11190 = !DILocation(line: 731, column: 1, scope: !11174)
!11191 = distinct !DISubprogram(name: "device_is_ready", scope: !10398, file: !10398, line: 47, type: !11192, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !11194)
!11192 = !DISubroutineType(types: !11193)
!11193 = !{!136, !1177}
!11194 = !{!11195}
!11195 = !DILocalVariable(name: "dev", arg: 1, scope: !11191, file: !10398, line: 47, type: !1177)
!11196 = !DILocation(line: 0, scope: !11191)
!11197 = !DILocation(line: 55, column: 2, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11191, file: !10398, line: 55, column: 2)
!11199 = !{i64 2155036050}
!11200 = !DILocation(line: 56, column: 9, scope: !11191)
!11201 = !DILocation(line: 56, column: 2, scope: !11191)
!11202 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1317, file: !1317, line: 270, type: !11203, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !11205)
!11203 = !DISubroutineType(types: !11204)
!11204 = !{!107, !1177, !136}
!11205 = !{!11206, !11207, !11208, !11209, !11210}
!11206 = !DILocalVariable(name: "dev", arg: 1, scope: !11202, file: !1317, line: 270, type: !1177)
!11207 = !DILocalVariable(name: "on", arg: 2, scope: !11202, file: !1317, line: 270, type: !136)
!11208 = !DILocalVariable(name: "cfg", scope: !11202, file: !1317, line: 272, type: !10551)
!11209 = !DILocalVariable(name: "ret", scope: !11202, file: !1317, line: 273, type: !107)
!11210 = !DILocalVariable(name: "clk", scope: !11202, file: !1317, line: 278, type: !10841)
!11211 = !DILocation(line: 0, scope: !11202)
!11212 = !DILocation(line: 272, column: 45, scope: !11202)
!11213 = !DILocation(line: 282, column: 38, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !1317, line: 280, column: 10)
!11215 = distinct !DILexicalBlock(scope: !11202, file: !1317, line: 280, column: 6)
!11216 = !DILocation(line: 282, column: 6, scope: !11214)
!11217 = !DILocation(line: 281, column: 9, scope: !11214)
!11218 = !DILocation(line: 293, column: 1, scope: !11202)
!11219 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !451, file: !451, line: 730, type: !11192, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !11220)
!11220 = !{!11221}
!11221 = !DILocalVariable(name: "dev", arg: 1, scope: !11219, file: !451, line: 730, type: !1177)
!11222 = !DILocation(line: 0, scope: !11219)
!11223 = !DILocation(line: 732, column: 9, scope: !11219)
!11224 = !DILocation(line: 732, column: 2, scope: !11219)
!11225 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1317, file: !1317, line: 496, type: !11226, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !11228)
!11226 = !DISubroutineType(types: !11227)
!11227 = !{!107, !1177, !107, !107, !107}
!11228 = !{!11229, !11230, !11231, !11232, !11233, !11234}
!11229 = !DILocalVariable(name: "dev", arg: 1, scope: !11225, file: !1317, line: 496, type: !1177)
!11230 = !DILocalVariable(name: "pin", arg: 2, scope: !11225, file: !1317, line: 496, type: !107)
!11231 = !DILocalVariable(name: "conf", arg: 3, scope: !11225, file: !1317, line: 496, type: !107)
!11232 = !DILocalVariable(name: "func", arg: 4, scope: !11225, file: !1317, line: 496, type: !107)
!11233 = !DILocalVariable(name: "ret", scope: !11225, file: !1317, line: 498, type: !107)
!11234 = !DILocalVariable(name: "gpio_out", scope: !11235, file: !1317, line: 508, type: !108)
!11235 = distinct !DILexicalBlock(scope: !11236, file: !1317, line: 507, column: 27)
!11236 = distinct !DILexicalBlock(scope: !11225, file: !1317, line: 507, column: 6)
!11237 = !DILocation(line: 0, scope: !11225)
!11238 = !DILocation(line: 505, column: 2, scope: !11225)
!11239 = !DILocation(line: 507, column: 11, scope: !11236)
!11240 = !DILocation(line: 507, column: 6, scope: !11225)
!11241 = !DILocation(line: 508, column: 28, scope: !11235)
!11242 = !DILocation(line: 0, scope: !11235)
!11243 = !DILocation(line: 510, column: 16, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11235, file: !1317, line: 510, column: 7)
!11245 = !DILocation(line: 0, scope: !11244)
!11246 = !DILocation(line: 510, column: 7, scope: !11235)
!11247 = !DILocation(line: 511, column: 4, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11244, file: !1317, line: 510, column: 32)
!11249 = !DILocation(line: 512, column: 3, scope: !11248)
!11250 = !DILocation(line: 513, column: 4, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !1317, line: 512, column: 39)
!11252 = distinct !DILexicalBlock(scope: !11244, file: !1317, line: 512, column: 14)
!11253 = !DILocation(line: 514, column: 3, scope: !11251)
!11254 = !DILocation(line: 518, column: 1, scope: !11225)
!11255 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1602, file: !1602, line: 526, type: !1505, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11256)
!11256 = !{!11257, !11258, !11259}
!11257 = !DILocalVariable(name: "dev", arg: 1, scope: !11255, file: !1602, line: 526, type: !1507)
!11258 = !DILocalVariable(name: "c", arg: 2, scope: !11255, file: !1602, line: 526, type: !1109)
!11259 = !DILocalVariable(name: "config", scope: !11255, file: !1602, line: 528, type: !11260)
!11260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 32)
!11261 = !DILocation(line: 0, scope: !11255)
!11262 = !DILocation(line: 528, column: 48, scope: !11255)
!11263 = !DILocation(line: 531, column: 40, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11255, file: !1602, line: 531, column: 6)
!11265 = !DILocation(line: 531, column: 6, scope: !11264)
!11266 = !DILocation(line: 531, column: 6, scope: !11255)
!11267 = !DILocation(line: 532, column: 34, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11264, file: !1602, line: 531, column: 48)
!11269 = !DILocation(line: 532, column: 3, scope: !11268)
!11270 = !DILocation(line: 533, column: 2, scope: !11268)
!11271 = !DILocation(line: 539, column: 42, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11255, file: !1602, line: 539, column: 6)
!11273 = !DILocation(line: 539, column: 7, scope: !11272)
!11274 = !DILocation(line: 539, column: 6, scope: !11255)
!11275 = !DILocation(line: 543, column: 52, scope: !11255)
!11276 = !DILocation(line: 543, column: 22, scope: !11255)
!11277 = !DILocation(line: 543, column: 5, scope: !11255)
!11278 = !DILocation(line: 545, column: 2, scope: !11255)
!11279 = !DILocation(line: 546, column: 1, scope: !11255)
!11280 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1602, file: !1602, line: 548, type: !1524, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11281)
!11281 = !{!11282, !11283, !11284, !11285}
!11282 = !DILocalVariable(name: "dev", arg: 1, scope: !11280, file: !1602, line: 548, type: !1507)
!11283 = !DILocalVariable(name: "c", arg: 2, scope: !11280, file: !1602, line: 549, type: !191)
!11284 = !DILocalVariable(name: "config", scope: !11280, file: !1602, line: 551, type: !11260)
!11285 = !DILocalVariable(name: "key", scope: !11280, file: !1602, line: 555, type: !32)
!11286 = !DILocation(line: 0, scope: !11280)
!11287 = !DILocation(line: 551, column: 48, scope: !11280)
!11288 = !DILocation(line: 562, column: 2, scope: !11280)
!11289 = !DILocation(line: 563, column: 41, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !1602, line: 563, column: 7)
!11291 = distinct !DILexicalBlock(scope: !11280, file: !1602, line: 562, column: 12)
!11292 = !DILocation(line: 563, column: 7, scope: !11290)
!11293 = !DILocation(line: 563, column: 7, scope: !11291)
!11294 = !DILocation(line: 55, column: 2, scope: !11295, inlinedAt: !11299)
!11295 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7053, file: !7053, line: 42, type: !7054, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11296)
!11296 = !{!11297, !11298}
!11297 = !DILocalVariable(name: "key", scope: !11295, file: !7053, line: 44, type: !32)
!11298 = !DILocalVariable(name: "tmp", scope: !11295, file: !7053, line: 53, type: !32)
!11299 = distinct !DILocation(line: 564, column: 10, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11290, file: !1602, line: 563, column: 49)
!11301 = !{i64 2272747}
!11302 = !DILocation(line: 0, scope: !11295, inlinedAt: !11299)
!11303 = !DILocation(line: 565, column: 42, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11300, file: !1602, line: 565, column: 8)
!11305 = !DILocation(line: 565, column: 8, scope: !11304)
!11306 = !DILocation(line: 565, column: 8, scope: !11300)
!11307 = !DILocalVariable(name: "key", arg: 1, scope: !11308, file: !7053, line: 84, type: !32)
!11308 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7053, file: !7053, line: 84, type: !7064, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11309)
!11309 = !{!11307}
!11310 = !DILocation(line: 0, scope: !11308, inlinedAt: !11311)
!11311 = distinct !DILocation(line: 568, column: 4, scope: !11300)
!11312 = !DILocation(line: 95, column: 2, scope: !11308, inlinedAt: !11311)
!11313 = !{i64 2273564}
!11314 = !DILocation(line: 569, column: 3, scope: !11300)
!11315 = distinct !{!11315, !11288, !11316}
!11316 = !DILocation(line: 570, column: 2, scope: !11280)
!11317 = !DILocation(line: 592, column: 33, scope: !11280)
!11318 = !DILocation(line: 592, column: 2, scope: !11280)
!11319 = !DILocation(line: 0, scope: !11308, inlinedAt: !11320)
!11320 = distinct !DILocation(line: 593, column: 2, scope: !11280)
!11321 = !DILocation(line: 95, column: 2, scope: !11308, inlinedAt: !11320)
!11322 = !DILocation(line: 594, column: 1, scope: !11280)
!11323 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1602, file: !1602, line: 596, type: !1528, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11324)
!11324 = !{!11325, !11326, !11327}
!11325 = !DILocalVariable(name: "dev", arg: 1, scope: !11323, file: !1602, line: 596, type: !1507)
!11326 = !DILocalVariable(name: "config", scope: !11323, file: !1602, line: 598, type: !11260)
!11327 = !DILocalVariable(name: "err", scope: !11323, file: !1602, line: 599, type: !108)
!11328 = !DILocation(line: 0, scope: !11323)
!11329 = !DILocation(line: 598, column: 48, scope: !11323)
!11330 = !DILocation(line: 606, column: 40, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11323, file: !1602, line: 606, column: 6)
!11332 = !DILocation(line: 606, column: 6, scope: !11331)
!11333 = !DILocation(line: 606, column: 6, scope: !11323)
!11334 = !DILocation(line: 610, column: 39, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11323, file: !1602, line: 610, column: 6)
!11336 = !DILocation(line: 610, column: 6, scope: !11335)
!11337 = !DILocation(line: 610, column: 6, scope: !11323)
!11338 = !DILocation(line: 614, column: 39, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11323, file: !1602, line: 614, column: 6)
!11340 = !DILocation(line: 614, column: 6, scope: !11339)
!11341 = !DILocation(line: 614, column: 6, scope: !11323)
!11342 = !DILocation(line: 619, column: 40, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11323, file: !1602, line: 619, column: 6)
!11344 = !DILocation(line: 619, column: 6, scope: !11343)
!11345 = !DILocation(line: 619, column: 6, scope: !11323)
!11346 = !DILocation(line: 623, column: 10, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11323, file: !1602, line: 623, column: 6)
!11348 = !DILocation(line: 623, column: 6, scope: !11323)
!11349 = !DILocation(line: 624, column: 34, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11347, file: !1602, line: 623, column: 24)
!11351 = !DILocation(line: 624, column: 3, scope: !11350)
!11352 = !DILocation(line: 625, column: 2, scope: !11350)
!11353 = !DILocation(line: 632, column: 10, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11323, file: !1602, line: 632, column: 6)
!11355 = !DILocation(line: 632, column: 6, scope: !11323)
!11356 = !DILocation(line: 633, column: 34, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11354, file: !1602, line: 632, column: 32)
!11358 = !DILocation(line: 633, column: 3, scope: !11357)
!11359 = !DILocation(line: 634, column: 2, scope: !11357)
!11360 = !DILocation(line: 636, column: 10, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11323, file: !1602, line: 636, column: 6)
!11362 = !DILocation(line: 636, column: 6, scope: !11323)
!11363 = !DILocation(line: 637, column: 33, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11361, file: !1602, line: 636, column: 31)
!11365 = !DILocation(line: 637, column: 3, scope: !11364)
!11366 = !DILocation(line: 638, column: 2, scope: !11364)
!11367 = !DILocation(line: 640, column: 10, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11323, file: !1602, line: 640, column: 6)
!11369 = !DILocation(line: 640, column: 6, scope: !11323)
!11370 = !DILocation(line: 641, column: 33, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11368, file: !1602, line: 640, column: 32)
!11372 = !DILocation(line: 641, column: 3, scope: !11371)
!11373 = !DILocation(line: 642, column: 2, scope: !11371)
!11374 = !DILocation(line: 646, column: 32, scope: !11323)
!11375 = !DILocation(line: 646, column: 2, scope: !11323)
!11376 = !DILocation(line: 648, column: 2, scope: !11323)
!11377 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1602, file: !1602, line: 419, type: !1532, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11378)
!11378 = !{!11379, !11380, !11381, !11382, !11384, !11385, !11386, !11387}
!11379 = !DILocalVariable(name: "dev", arg: 1, scope: !11377, file: !1602, line: 419, type: !1507)
!11380 = !DILocalVariable(name: "cfg", arg: 2, scope: !11377, file: !1602, line: 420, type: !1534)
!11381 = !DILocalVariable(name: "config", scope: !11377, file: !1602, line: 422, type: !11260)
!11382 = !DILocalVariable(name: "data", scope: !11377, file: !1602, line: 423, type: !11383)
!11383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!11384 = !DILocalVariable(name: "parity", scope: !11377, file: !1602, line: 424, type: !7642)
!11385 = !DILocalVariable(name: "stopbits", scope: !11377, file: !1602, line: 425, type: !7642)
!11386 = !DILocalVariable(name: "databits", scope: !11377, file: !1602, line: 426, type: !7642)
!11387 = !DILocalVariable(name: "flowctrl", scope: !11377, file: !1602, line: 428, type: !7642)
!11388 = !DILocation(line: 0, scope: !11377)
!11389 = !DILocation(line: 422, column: 48, scope: !11377)
!11390 = !DILocation(line: 423, column: 38, scope: !11377)
!11391 = !DILocation(line: 424, column: 56, scope: !11377)
!11392 = !DILocation(line: 424, column: 51, scope: !11377)
!11393 = !DILocation(line: 424, column: 26, scope: !11377)
!11394 = !DILocation(line: 425, column: 60, scope: !11377)
!11395 = !DILocation(line: 425, column: 55, scope: !11377)
!11396 = !DILocation(line: 425, column: 28, scope: !11377)
!11397 = !DILocation(line: 426, column: 60, scope: !11377)
!11398 = !DILocation(line: 426, column: 55, scope: !11377)
!11399 = !DILocation(line: 426, column: 28, scope: !11377)
!11400 = !DILocation(line: 428, column: 58, scope: !11377)
!11401 = !DILocation(line: 428, column: 53, scope: !11377)
!11402 = !DILocation(line: 428, column: 28, scope: !11377)
!11403 = !DILocation(line: 431, column: 44, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11377, file: !1602, line: 431, column: 6)
!11405 = !DILocation(line: 438, column: 22, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11377, file: !1602, line: 437, column: 6)
!11407 = !DILocation(line: 437, column: 6, scope: !11377)
!11408 = !DILocation(line: 448, column: 6, scope: !11377)
!11409 = !DILocation(line: 465, column: 47, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11377, file: !1602, line: 465, column: 6)
!11411 = !DILocation(line: 475, column: 21, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11377, file: !1602, line: 475, column: 6)
!11413 = !DILocation(line: 475, column: 6, scope: !11377)
!11414 = !DILocation(line: 476, column: 8, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11416, file: !1602, line: 476, column: 7)
!11416 = distinct !DILexicalBlock(scope: !11412, file: !1602, line: 475, column: 49)
!11417 = !DILocation(line: 477, column: 34, scope: !11415)
!11418 = !DILocation(line: 476, column: 7, scope: !11416)
!11419 = !DILocation(line: 482, column: 27, scope: !11377)
!11420 = !DILocation(line: 482, column: 2, scope: !11377)
!11421 = !DILocation(line: 484, column: 16, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11377, file: !1602, line: 484, column: 6)
!11423 = !DILocation(line: 484, column: 13, scope: !11422)
!11424 = !DILocation(line: 484, column: 6, scope: !11377)
!11425 = !DILocation(line: 485, column: 3, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11422, file: !1602, line: 484, column: 44)
!11427 = !DILocation(line: 486, column: 2, scope: !11426)
!11428 = !DILocation(line: 488, column: 18, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11377, file: !1602, line: 488, column: 6)
!11430 = !DILocation(line: 488, column: 15, scope: !11429)
!11431 = !DILocation(line: 488, column: 6, scope: !11377)
!11432 = !DILocation(line: 489, column: 3, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11429, file: !1602, line: 488, column: 48)
!11434 = !DILocation(line: 490, column: 2, scope: !11433)
!11435 = !DILocation(line: 492, column: 18, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11377, file: !1602, line: 492, column: 6)
!11437 = !DILocation(line: 492, column: 15, scope: !11436)
!11438 = !DILocation(line: 492, column: 6, scope: !11377)
!11439 = !DILocation(line: 493, column: 3, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11436, file: !1602, line: 492, column: 48)
!11441 = !DILocation(line: 494, column: 2, scope: !11440)
!11442 = !DILocation(line: 496, column: 18, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11377, file: !1602, line: 496, column: 6)
!11444 = !DILocation(line: 496, column: 15, scope: !11443)
!11445 = !DILocation(line: 496, column: 6, scope: !11377)
!11446 = !DILocation(line: 497, column: 3, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11443, file: !1602, line: 496, column: 46)
!11448 = !DILocation(line: 498, column: 2, scope: !11447)
!11449 = !DILocation(line: 500, column: 11, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11377, file: !1602, line: 500, column: 6)
!11451 = !DILocation(line: 500, column: 29, scope: !11450)
!11452 = !DILocation(line: 500, column: 20, scope: !11450)
!11453 = !DILocation(line: 500, column: 6, scope: !11377)
!11454 = !DILocation(line: 501, column: 3, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11450, file: !1602, line: 500, column: 40)
!11456 = !DILocation(line: 502, column: 26, scope: !11455)
!11457 = !DILocation(line: 502, column: 19, scope: !11455)
!11458 = !DILocation(line: 503, column: 2, scope: !11455)
!11459 = !DILocation(line: 505, column: 26, scope: !11377)
!11460 = !DILocation(line: 505, column: 2, scope: !11377)
!11461 = !DILocation(line: 506, column: 2, scope: !11377)
!11462 = !DILocation(line: 507, column: 1, scope: !11377)
!11463 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1602, file: !1602, line: 509, type: !1545, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11464)
!11464 = !{!11465, !11466, !11467}
!11465 = !DILocalVariable(name: "dev", arg: 1, scope: !11463, file: !1602, line: 509, type: !1507)
!11466 = !DILocalVariable(name: "cfg", arg: 2, scope: !11463, file: !1602, line: 510, type: !1547)
!11467 = !DILocalVariable(name: "data", scope: !11463, file: !1602, line: 512, type: !11383)
!11468 = !DILocation(line: 0, scope: !11463)
!11469 = !DILocation(line: 512, column: 38, scope: !11463)
!11470 = !DILocation(line: 514, column: 24, scope: !11463)
!11471 = !DILocation(line: 514, column: 7, scope: !11463)
!11472 = !DILocation(line: 514, column: 16, scope: !11463)
!11473 = !DILocation(line: 515, column: 41, scope: !11463)
!11474 = !{i32 0, i32 1537}
!11475 = !DILocation(line: 515, column: 16, scope: !11463)
!11476 = !DILocation(line: 515, column: 7, scope: !11463)
!11477 = !DILocation(line: 515, column: 14, scope: !11463)
!11478 = !DILocation(line: 517, column: 3, scope: !11463)
!11479 = !{i32 0, i32 12289}
!11480 = !DILocation(line: 516, column: 19, scope: !11463)
!11481 = !DILocation(line: 516, column: 7, scope: !11463)
!11482 = !DILocation(line: 516, column: 17, scope: !11463)
!11483 = !DILocation(line: 519, column: 3, scope: !11463)
!11484 = !DILocation(line: 519, column: 33, scope: !11463)
!11485 = !DILocation(line: 518, column: 19, scope: !11463)
!11486 = !DILocation(line: 518, column: 7, scope: !11463)
!11487 = !DILocation(line: 518, column: 17, scope: !11463)
!11488 = !DILocation(line: 521, column: 3, scope: !11463)
!11489 = !{i32 0, i32 769}
!11490 = !DILocation(line: 520, column: 19, scope: !11463)
!11491 = !DILocation(line: 520, column: 7, scope: !11463)
!11492 = !DILocation(line: 520, column: 17, scope: !11463)
!11493 = !DILocation(line: 522, column: 2, scope: !11463)
!11494 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1602, file: !1602, line: 205, type: !11495, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11497)
!11495 = !DISubroutineType(types: !11496)
!11496 = !{!108, !1507}
!11497 = !{!11498, !11499}
!11498 = !DILocalVariable(name: "dev", arg: 1, scope: !11494, file: !1602, line: 205, type: !1507)
!11499 = !DILocalVariable(name: "config", scope: !11494, file: !1602, line: 207, type: !11260)
!11500 = !DILocation(line: 0, scope: !11494)
!11501 = !DILocation(line: 207, column: 48, scope: !11494)
!11502 = !DILocation(line: 209, column: 36, scope: !11494)
!11503 = !DILocation(line: 209, column: 9, scope: !11494)
!11504 = !DILocation(line: 209, column: 2, scope: !11494)
!11505 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1602, file: !1602, line: 270, type: !11506, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11508)
!11506 = !DISubroutineType(types: !11507)
!11507 = !{!1473, !108}
!11508 = !{!11509}
!11509 = !DILocalVariable(name: "parity", arg: 1, scope: !11505, file: !1602, line: 270, type: !108)
!11510 = !DILocation(line: 0, scope: !11505)
!11511 = !DILocation(line: 272, column: 2, scope: !11505)
!11512 = !DILocation(line: 281, column: 1, scope: !11505)
!11513 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1602, file: !1602, line: 220, type: !11495, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11514)
!11514 = !{!11515, !11516}
!11515 = !DILocalVariable(name: "dev", arg: 1, scope: !11513, file: !1602, line: 220, type: !1507)
!11516 = !DILocalVariable(name: "config", scope: !11513, file: !1602, line: 222, type: !11260)
!11517 = !DILocation(line: 0, scope: !11513)
!11518 = !DILocation(line: 222, column: 48, scope: !11513)
!11519 = !DILocation(line: 224, column: 44, scope: !11513)
!11520 = !DILocation(line: 224, column: 9, scope: !11513)
!11521 = !DILocation(line: 224, column: 2, scope: !11513)
!11522 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1602, file: !1602, line: 304, type: !11523, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11525)
!11523 = !DISubroutineType(types: !11524)
!11524 = !{!1487, !108}
!11525 = !{!11526}
!11526 = !DILocalVariable(name: "sb", arg: 1, scope: !11522, file: !1602, line: 304, type: !108)
!11527 = !DILocation(line: 0, scope: !11522)
!11528 = !DILocation(line: 306, column: 2, scope: !11522)
!11529 = !DILocation(line: 0, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11522, file: !1602, line: 306, column: 14)
!11531 = !DILocation(line: 323, column: 1, scope: !11522)
!11532 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1602, file: !1602, line: 235, type: !11495, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11533)
!11533 = !{!11534, !11535}
!11534 = !DILocalVariable(name: "dev", arg: 1, scope: !11532, file: !1602, line: 235, type: !1507)
!11535 = !DILocalVariable(name: "config", scope: !11532, file: !1602, line: 237, type: !11260)
!11536 = !DILocation(line: 0, scope: !11532)
!11537 = !DILocation(line: 237, column: 48, scope: !11532)
!11538 = !DILocation(line: 239, column: 39, scope: !11532)
!11539 = !DILocation(line: 239, column: 9, scope: !11532)
!11540 = !DILocation(line: 239, column: 2, scope: !11532)
!11541 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1602, file: !1602, line: 355, type: !11542, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11544)
!11542 = !DISubroutineType(types: !11543)
!11543 = !{!1480, !108, !108}
!11544 = !{!11545, !11546}
!11545 = !DILocalVariable(name: "db", arg: 1, scope: !11541, file: !1602, line: 355, type: !108)
!11546 = !DILocalVariable(name: "p", arg: 2, scope: !11541, file: !1602, line: 356, type: !108)
!11547 = !DILocation(line: 0, scope: !11541)
!11548 = !DILocation(line: 358, column: 2, scope: !11541)
!11549 = !DILocation(line: 384, column: 1, scope: !11541)
!11550 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1602, file: !1602, line: 250, type: !11495, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11551)
!11551 = !{!11552, !11553}
!11552 = !DILocalVariable(name: "dev", arg: 1, scope: !11550, file: !1602, line: 250, type: !1507)
!11553 = !DILocalVariable(name: "config", scope: !11550, file: !1602, line: 252, type: !11260)
!11554 = !DILocation(line: 0, scope: !11550)
!11555 = !DILocation(line: 252, column: 48, scope: !11550)
!11556 = !DILocation(line: 254, column: 40, scope: !11550)
!11557 = !DILocation(line: 254, column: 9, scope: !11550)
!11558 = !DILocation(line: 254, column: 2, scope: !11550)
!11559 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1602, file: !1602, line: 409, type: !11560, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11562)
!11560 = !DISubroutineType(types: !11561)
!11561 = !{!1493, !108}
!11562 = !{!11563}
!11563 = !DILocalVariable(name: "fc", arg: 1, scope: !11559, file: !1602, line: 409, type: !108)
!11564 = !DILocation(line: 0, scope: !11559)
!11565 = !DILocation(line: 411, column: 9, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11559, file: !1602, line: 411, column: 6)
!11567 = !DILocation(line: 416, column: 1, scope: !11559)
!11568 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11569, file: !11569, line: 967, type: !11570, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11572)
!11569 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11570 = !DISubroutineType(types: !11571)
!11571 = !{!108, !1548}
!11572 = !{!11573}
!11573 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11568, file: !11569, line: 967, type: !1548)
!11574 = !DILocation(line: 0, scope: !11568)
!11575 = !DILocation(line: 969, column: 21, scope: !11568)
!11576 = !DILocation(line: 969, column: 3, scope: !11568)
!11577 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11569, file: !11569, line: 601, type: !11570, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11578)
!11578 = !{!11579}
!11579 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11577, file: !11569, line: 601, type: !1548)
!11580 = !DILocation(line: 0, scope: !11577)
!11581 = !DILocation(line: 603, column: 21, scope: !11577)
!11582 = !DILocation(line: 603, column: 3, scope: !11577)
!11583 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11569, file: !11569, line: 820, type: !11570, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11584)
!11584 = !{!11585}
!11585 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11583, file: !11569, line: 820, type: !1548)
!11586 = !DILocation(line: 0, scope: !11583)
!11587 = !DILocation(line: 822, column: 21, scope: !11583)
!11588 = !DILocation(line: 822, column: 3, scope: !11583)
!11589 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11569, file: !11569, line: 547, type: !11570, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11590)
!11590 = !{!11591}
!11591 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11589, file: !11569, line: 547, type: !1548)
!11592 = !DILocation(line: 0, scope: !11589)
!11593 = !DILocation(line: 549, column: 21, scope: !11589)
!11594 = !DILocation(line: 549, column: 3, scope: !11589)
!11595 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1602, file: !1602, line: 257, type: !11596, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11598)
!11596 = !DISubroutineType(types: !11597)
!11597 = !{!108, !1473}
!11598 = !{!11599}
!11599 = !DILocalVariable(name: "parity", arg: 1, scope: !11595, file: !1602, line: 257, type: !1473)
!11600 = !DILocation(line: 0, scope: !11595)
!11601 = !DILocation(line: 259, column: 2, scope: !11595)
!11602 = !DILocation(line: 268, column: 1, scope: !11595)
!11603 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1602, file: !1602, line: 283, type: !11604, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11606)
!11604 = !DISubroutineType(types: !11605)
!11605 = !{!108, !1487}
!11606 = !{!11607}
!11607 = !DILocalVariable(name: "sb", arg: 1, scope: !11603, file: !1602, line: 283, type: !1487)
!11608 = !DILocation(line: 0, scope: !11603)
!11609 = !DILocation(line: 285, column: 2, scope: !11603)
!11610 = !DILocation(line: 0, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11603, file: !1602, line: 285, column: 14)
!11612 = !DILocation(line: 302, column: 1, scope: !11603)
!11613 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1602, file: !1602, line: 325, type: !11614, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11616)
!11614 = !DISubroutineType(types: !11615)
!11615 = !{!108, !1480, !1473}
!11616 = !{!11617, !11618}
!11617 = !DILocalVariable(name: "db", arg: 1, scope: !11613, file: !1602, line: 325, type: !1480)
!11618 = !DILocalVariable(name: "p", arg: 2, scope: !11613, file: !1602, line: 326, type: !1473)
!11619 = !DILocation(line: 0, scope: !11613)
!11620 = !DILocation(line: 328, column: 2, scope: !11613)
!11621 = !DILocation(line: 353, column: 1, scope: !11613)
!11622 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1602, file: !1602, line: 393, type: !11623, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11625)
!11623 = !DISubroutineType(types: !11624)
!11624 = !{!108, !1493}
!11625 = !{!11626}
!11626 = !DILocalVariable(name: "fc", arg: 1, scope: !11622, file: !1602, line: 393, type: !1493)
!11627 = !DILocation(line: 0, scope: !11622)
!11628 = !DILocation(line: 395, column: 9, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11622, file: !1602, line: 395, column: 6)
!11630 = !DILocation(line: 400, column: 1, scope: !11622)
!11631 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11569, file: !11569, line: 424, type: !11632, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11634)
!11632 = !DISubroutineType(types: !11633)
!11633 = !{null, !1548}
!11634 = !{!11635}
!11635 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11631, file: !11569, line: 424, type: !1548)
!11636 = !DILocation(line: 0, scope: !11631)
!11637 = !DILocation(line: 426, column: 3, scope: !11631)
!11638 = !DILocation(line: 427, column: 1, scope: !11631)
!11639 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1602, file: !1602, line: 197, type: !11640, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11642)
!11640 = !DISubroutineType(types: !11641)
!11641 = !{null, !1507, !108}
!11642 = !{!11643, !11644, !11645}
!11643 = !DILocalVariable(name: "dev", arg: 1, scope: !11639, file: !1602, line: 197, type: !1507)
!11644 = !DILocalVariable(name: "parity", arg: 2, scope: !11639, file: !1602, line: 198, type: !108)
!11645 = !DILocalVariable(name: "config", scope: !11639, file: !1602, line: 200, type: !11260)
!11646 = !DILocation(line: 0, scope: !11639)
!11647 = !DILocation(line: 200, column: 48, scope: !11639)
!11648 = !DILocation(line: 202, column: 29, scope: !11639)
!11649 = !DILocation(line: 202, column: 2, scope: !11639)
!11650 = !DILocation(line: 203, column: 1, scope: !11639)
!11651 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1602, file: !1602, line: 212, type: !11640, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11652)
!11652 = !{!11653, !11654, !11655}
!11653 = !DILocalVariable(name: "dev", arg: 1, scope: !11651, file: !1602, line: 212, type: !1507)
!11654 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11651, file: !1602, line: 213, type: !108)
!11655 = !DILocalVariable(name: "config", scope: !11651, file: !1602, line: 215, type: !11260)
!11656 = !DILocation(line: 0, scope: !11651)
!11657 = !DILocation(line: 215, column: 48, scope: !11651)
!11658 = !DILocation(line: 217, column: 37, scope: !11651)
!11659 = !DILocation(line: 217, column: 2, scope: !11651)
!11660 = !DILocation(line: 218, column: 1, scope: !11651)
!11661 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1602, file: !1602, line: 227, type: !11640, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11662)
!11662 = !{!11663, !11664, !11665}
!11663 = !DILocalVariable(name: "dev", arg: 1, scope: !11661, file: !1602, line: 227, type: !1507)
!11664 = !DILocalVariable(name: "databits", arg: 2, scope: !11661, file: !1602, line: 228, type: !108)
!11665 = !DILocalVariable(name: "config", scope: !11661, file: !1602, line: 230, type: !11260)
!11666 = !DILocation(line: 0, scope: !11661)
!11667 = !DILocation(line: 230, column: 48, scope: !11661)
!11668 = !DILocation(line: 232, column: 32, scope: !11661)
!11669 = !DILocation(line: 232, column: 2, scope: !11661)
!11670 = !DILocation(line: 233, column: 1, scope: !11661)
!11671 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1602, file: !1602, line: 242, type: !11640, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11672)
!11672 = !{!11673, !11674, !11675}
!11673 = !DILocalVariable(name: "dev", arg: 1, scope: !11671, file: !1602, line: 242, type: !1507)
!11674 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11671, file: !1602, line: 243, type: !108)
!11675 = !DILocalVariable(name: "config", scope: !11671, file: !1602, line: 245, type: !11260)
!11676 = !DILocation(line: 0, scope: !11671)
!11677 = !DILocation(line: 245, column: 48, scope: !11671)
!11678 = !DILocation(line: 247, column: 33, scope: !11671)
!11679 = !DILocation(line: 247, column: 2, scope: !11671)
!11680 = !DILocation(line: 248, column: 1, scope: !11671)
!11681 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1602, file: !1602, line: 107, type: !11640, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11682)
!11682 = !{!11683, !11684, !11685, !11686, !11687}
!11683 = !DILocalVariable(name: "dev", arg: 1, scope: !11681, file: !1602, line: 107, type: !1507)
!11684 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11681, file: !1602, line: 107, type: !108)
!11685 = !DILocalVariable(name: "config", scope: !11681, file: !1602, line: 109, type: !11260)
!11686 = !DILocalVariable(name: "data", scope: !11681, file: !1602, line: 110, type: !11383)
!11687 = !DILocalVariable(name: "clock_rate", scope: !11681, file: !1602, line: 112, type: !108)
!11688 = !DILocation(line: 0, scope: !11681)
!11689 = !DILocation(line: 109, column: 48, scope: !11681)
!11690 = !DILocation(line: 110, column: 38, scope: !11681)
!11691 = !DILocation(line: 112, column: 2, scope: !11681)
!11692 = !DILocation(line: 123, column: 36, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11694, file: !1602, line: 123, column: 7)
!11694 = distinct !DILexicalBlock(scope: !11695, file: !1602, line: 122, column: 9)
!11695 = distinct !DILexicalBlock(scope: !11681, file: !1602, line: 115, column: 6)
!11696 = !DILocation(line: 124, column: 42, scope: !11693)
!11697 = !DILocation(line: 123, column: 7, scope: !11693)
!11698 = !DILocation(line: 125, column: 22, scope: !11693)
!11699 = !DILocation(line: 123, column: 7, scope: !11694)
!11700 = !DILocation(line: 126, column: 4, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11702, file: !1602, line: 126, column: 4)
!11702 = distinct !DILexicalBlock(scope: !11703, file: !1602, line: 126, column: 4)
!11703 = distinct !DILexicalBlock(scope: !11704, file: !1602, line: 126, column: 4)
!11704 = distinct !DILexicalBlock(scope: !11705, file: !1602, line: 126, column: 4)
!11705 = distinct !DILexicalBlock(scope: !11693, file: !1602, line: 125, column: 27)
!11706 = !DILocation(line: 127, column: 4, scope: !11705)
!11707 = !DILocation(line: 176, column: 36, scope: !11681)
!11708 = !DILocation(line: 176, column: 3, scope: !11681)
!11709 = !DILocation(line: 179, column: 32, scope: !11681)
!11710 = !DILocation(line: 180, column: 10, scope: !11681)
!11711 = !DILocation(line: 179, column: 3, scope: !11681)
!11712 = !DILocation(line: 195, column: 1, scope: !11681)
!11713 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11569, file: !11569, line: 410, type: !11632, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11714)
!11714 = !{!11715}
!11715 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11713, file: !11569, line: 410, type: !1548)
!11716 = !DILocation(line: 0, scope: !11713)
!11717 = !DILocation(line: 412, column: 3, scope: !11713)
!11718 = !DILocation(line: 413, column: 1, scope: !11713)
!11719 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !956, file: !956, line: 216, type: !1581, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11720)
!11720 = !{!11721, !11722, !11723, !11724}
!11721 = !DILocalVariable(name: "dev", arg: 1, scope: !11719, file: !956, line: 216, type: !1507)
!11722 = !DILocalVariable(name: "sys", arg: 2, scope: !11719, file: !956, line: 217, type: !1048)
!11723 = !DILocalVariable(name: "rate", arg: 3, scope: !11719, file: !956, line: 218, type: !1004)
!11724 = !DILocalVariable(name: "api", scope: !11719, file: !956, line: 220, type: !1559)
!11725 = !DILocation(line: 0, scope: !11719)
!11726 = !DILocation(line: 221, column: 49, scope: !11719)
!11727 = !DILocation(line: 223, column: 11, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11719, file: !956, line: 223, column: 6)
!11729 = !DILocation(line: 223, column: 20, scope: !11728)
!11730 = !DILocation(line: 223, column: 6, scope: !11719)
!11731 = !DILocation(line: 227, column: 9, scope: !11719)
!11732 = !DILocation(line: 227, column: 2, scope: !11719)
!11733 = !DILocation(line: 228, column: 1, scope: !11719)
!11734 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7131, file: !7131, line: 175, type: !7132, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11735)
!11735 = !{!11736}
!11736 = !DILocalVariable(name: "level", arg: 1, scope: !11734, file: !7131, line: 175, type: !107)
!11737 = !DILocation(line: 0, scope: !11734)
!11738 = !DILocation(line: 177, column: 2, scope: !11734)
!11739 = !DILocation(line: 189, column: 1, scope: !11734)
!11740 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11569, file: !11569, line: 615, type: !11741, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11743)
!11741 = !DISubroutineType(types: !11742)
!11742 = !{null, !1548, !108}
!11743 = !{!11744, !11745}
!11744 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11740, file: !11569, line: 615, type: !1548)
!11745 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11740, file: !11569, line: 615, type: !108)
!11746 = !DILocation(line: 0, scope: !11740)
!11747 = !DILocation(line: 617, column: 3, scope: !11740)
!11748 = !DILocation(line: 618, column: 1, scope: !11740)
!11749 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11569, file: !11569, line: 1020, type: !11750, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11752)
!11750 = !DISubroutineType(types: !11751)
!11751 = !{null, !1548, !108, !108, !108}
!11752 = !{!11753, !11754, !11755, !11756}
!11753 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11749, file: !11569, line: 1020, type: !1548)
!11754 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11749, file: !11569, line: 1020, type: !108)
!11755 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11749, file: !11569, line: 1020, type: !108)
!11756 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11749, file: !11569, line: 1021, type: !108)
!11757 = !DILocation(line: 0, scope: !11749)
!11758 = !DILocation(line: 1029, column: 30, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11760, file: !11569, line: 1028, column: 3)
!11760 = distinct !DILexicalBlock(scope: !11749, file: !11569, line: 1023, column: 7)
!11761 = !DILocation(line: 1029, column: 19, scope: !11759)
!11762 = !DILocation(line: 1029, column: 13, scope: !11759)
!11763 = !DILocation(line: 1029, column: 17, scope: !11759)
!11764 = !DILocation(line: 1031, column: 1, scope: !11749)
!11765 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11569, file: !11569, line: 949, type: !11741, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11766)
!11766 = !{!11767, !11768}
!11767 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11765, file: !11569, line: 949, type: !1548)
!11768 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11765, file: !11569, line: 949, type: !108)
!11769 = !DILocation(line: 0, scope: !11765)
!11770 = !DILocation(line: 951, column: 3, scope: !11765)
!11771 = !DILocation(line: 952, column: 1, scope: !11765)
!11772 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11569, file: !11569, line: 588, type: !11741, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11773)
!11773 = !{!11774, !11775}
!11774 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11772, file: !11569, line: 588, type: !1548)
!11775 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11772, file: !11569, line: 588, type: !108)
!11776 = !DILocation(line: 0, scope: !11772)
!11777 = !DILocation(line: 590, column: 3, scope: !11772)
!11778 = !DILocation(line: 591, column: 1, scope: !11772)
!11779 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11569, file: !11569, line: 805, type: !11741, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11780)
!11780 = !{!11781, !11782}
!11781 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11779, file: !11569, line: 805, type: !1548)
!11782 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11779, file: !11569, line: 805, type: !108)
!11783 = !DILocation(line: 0, scope: !11779)
!11784 = !DILocation(line: 807, column: 3, scope: !11779)
!11785 = !DILocation(line: 808, column: 1, scope: !11779)
!11786 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11569, file: !11569, line: 532, type: !11741, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11787)
!11787 = !{!11788, !11789}
!11788 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11786, file: !11569, line: 532, type: !1548)
!11789 = !DILocalVariable(name: "Parity", arg: 2, scope: !11786, file: !11569, line: 532, type: !108)
!11790 = !DILocation(line: 0, scope: !11786)
!11791 = !DILocation(line: 534, column: 3, scope: !11786)
!11792 = !DILocation(line: 535, column: 1, scope: !11786)
!11793 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11569, file: !11569, line: 1770, type: !11570, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11794)
!11794 = !{!11795}
!11795 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11793, file: !11569, line: 1770, type: !1548)
!11796 = !DILocation(line: 0, scope: !11793)
!11797 = !DILocation(line: 1772, column: 11, scope: !11793)
!11798 = !DILocation(line: 1772, column: 46, scope: !11793)
!11799 = !DILocation(line: 1772, column: 3, scope: !11793)
!11800 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11569, file: !11569, line: 1737, type: !11570, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11801)
!11801 = !{!11802}
!11802 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11800, file: !11569, line: 1737, type: !1548)
!11803 = !DILocation(line: 0, scope: !11800)
!11804 = !DILocation(line: 1739, column: 11, scope: !11800)
!11805 = !DILocation(line: 1739, column: 3, scope: !11800)
!11806 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11569, file: !11569, line: 1748, type: !11570, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11807)
!11807 = !{!11808}
!11808 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11806, file: !11569, line: 1748, type: !1548)
!11809 = !DILocation(line: 0, scope: !11806)
!11810 = !DILocation(line: 1750, column: 11, scope: !11806)
!11811 = !DILocation(line: 1750, column: 45, scope: !11806)
!11812 = !DILocation(line: 1750, column: 3, scope: !11806)
!11813 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11569, file: !11569, line: 1827, type: !11570, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11814)
!11814 = !{!11815}
!11815 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11813, file: !11569, line: 1827, type: !1548)
!11816 = !DILocation(line: 0, scope: !11813)
!11817 = !DILocation(line: 1829, column: 11, scope: !11813)
!11818 = !DILocation(line: 1829, column: 46, scope: !11813)
!11819 = !DILocation(line: 1829, column: 3, scope: !11813)
!11820 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11569, file: !11569, line: 1992, type: !11632, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11821)
!11821 = !{!11822}
!11822 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11820, file: !11569, line: 1992, type: !1548)
!11823 = !DILocation(line: 0, scope: !11820)
!11824 = !DILocation(line: 1994, column: 3, scope: !11820)
!11825 = !DILocation(line: 1995, column: 1, scope: !11820)
!11826 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11569, file: !11569, line: 1934, type: !11632, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11827)
!11827 = !{!11828, !11829}
!11828 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11826, file: !11569, line: 1934, type: !1548)
!11829 = !DILocalVariable(name: "tmpreg", scope: !11826, file: !11569, line: 1936, type: !431)
!11830 = !DILocation(line: 0, scope: !11826)
!11831 = !DILocation(line: 1936, column: 3, scope: !11826)
!11832 = !DILocation(line: 1936, column: 17, scope: !11826)
!11833 = !DILocation(line: 1937, column: 20, scope: !11826)
!11834 = !DILocation(line: 1937, column: 10, scope: !11826)
!11835 = !DILocation(line: 1938, column: 10, scope: !11826)
!11836 = !DILocation(line: 1939, column: 20, scope: !11826)
!11837 = !DILocation(line: 1939, column: 10, scope: !11826)
!11838 = !DILocation(line: 1940, column: 10, scope: !11826)
!11839 = !DILocation(line: 1941, column: 1, scope: !11826)
!11840 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11569, file: !11569, line: 1877, type: !11632, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11841)
!11841 = !{!11842, !11843}
!11842 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11840, file: !11569, line: 1877, type: !1548)
!11843 = !DILocalVariable(name: "tmpreg", scope: !11840, file: !11569, line: 1879, type: !431)
!11844 = !DILocation(line: 0, scope: !11840)
!11845 = !DILocation(line: 1879, column: 3, scope: !11840)
!11846 = !DILocation(line: 1879, column: 17, scope: !11840)
!11847 = !DILocation(line: 1880, column: 20, scope: !11840)
!11848 = !DILocation(line: 1880, column: 10, scope: !11840)
!11849 = !DILocation(line: 1881, column: 10, scope: !11840)
!11850 = !DILocation(line: 1882, column: 20, scope: !11840)
!11851 = !DILocation(line: 1882, column: 10, scope: !11840)
!11852 = !DILocation(line: 1883, column: 10, scope: !11840)
!11853 = !DILocation(line: 1884, column: 1, scope: !11840)
!11854 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11569, file: !11569, line: 1896, type: !11632, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11855)
!11855 = !{!11856, !11857}
!11856 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11854, file: !11569, line: 1896, type: !1548)
!11857 = !DILocalVariable(name: "tmpreg", scope: !11854, file: !11569, line: 1898, type: !431)
!11858 = !DILocation(line: 0, scope: !11854)
!11859 = !DILocation(line: 1898, column: 3, scope: !11854)
!11860 = !DILocation(line: 1898, column: 17, scope: !11854)
!11861 = !DILocation(line: 1899, column: 20, scope: !11854)
!11862 = !DILocation(line: 1899, column: 10, scope: !11854)
!11863 = !DILocation(line: 1900, column: 10, scope: !11854)
!11864 = !DILocation(line: 1901, column: 20, scope: !11854)
!11865 = !DILocation(line: 1901, column: 10, scope: !11854)
!11866 = !DILocation(line: 1902, column: 10, scope: !11854)
!11867 = !DILocation(line: 1903, column: 1, scope: !11854)
!11868 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11569, file: !11569, line: 1915, type: !11632, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11869)
!11869 = !{!11870, !11871}
!11870 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11868, file: !11569, line: 1915, type: !1548)
!11871 = !DILocalVariable(name: "tmpreg", scope: !11868, file: !11569, line: 1917, type: !431)
!11872 = !DILocation(line: 0, scope: !11868)
!11873 = !DILocation(line: 1917, column: 3, scope: !11868)
!11874 = !DILocation(line: 1917, column: 17, scope: !11868)
!11875 = !DILocation(line: 1918, column: 20, scope: !11868)
!11876 = !DILocation(line: 1918, column: 10, scope: !11868)
!11877 = !DILocation(line: 1919, column: 10, scope: !11868)
!11878 = !DILocation(line: 1920, column: 20, scope: !11868)
!11879 = !DILocation(line: 1920, column: 10, scope: !11868)
!11880 = !DILocation(line: 1921, column: 10, scope: !11868)
!11881 = !DILocation(line: 1922, column: 1, scope: !11868)
!11882 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11569, file: !11569, line: 1814, type: !11570, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11883)
!11883 = !{!11884}
!11884 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11882, file: !11569, line: 1814, type: !1548)
!11885 = !DILocation(line: 0, scope: !11882)
!11886 = !DILocation(line: 1816, column: 11, scope: !11882)
!11887 = !DILocation(line: 1816, column: 46, scope: !11882)
!11888 = !DILocation(line: 1816, column: 3, scope: !11882)
!11889 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11569, file: !11569, line: 2426, type: !11890, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11892)
!11890 = !DISubroutineType(types: !11891)
!11891 = !{null, !1548, !190}
!11892 = !{!11893, !11894}
!11893 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11889, file: !11569, line: 2426, type: !1548)
!11894 = !DILocalVariable(name: "Value", arg: 2, scope: !11889, file: !11569, line: 2426, type: !190)
!11895 = !DILocation(line: 0, scope: !11889)
!11896 = !DILocation(line: 2428, column: 16, scope: !11889)
!11897 = !DILocation(line: 2428, column: 11, scope: !11889)
!11898 = !DILocation(line: 2428, column: 14, scope: !11889)
!11899 = !DILocation(line: 2429, column: 1, scope: !11889)
!11900 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11569, file: !11569, line: 1792, type: !11570, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11901)
!11901 = !{!11902}
!11902 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11900, file: !11569, line: 1792, type: !1548)
!11903 = !DILocation(line: 0, scope: !11900)
!11904 = !DILocation(line: 1794, column: 11, scope: !11900)
!11905 = !DILocation(line: 1794, column: 47, scope: !11900)
!11906 = !DILocation(line: 1794, column: 3, scope: !11900)
!11907 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11569, file: !11569, line: 2403, type: !11908, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11910)
!11908 = !DISubroutineType(types: !11909)
!11909 = !{!190, !1548}
!11910 = !{!11911}
!11911 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11907, file: !11569, line: 2403, type: !1548)
!11912 = !DILocation(line: 0, scope: !11907)
!11913 = !DILocation(line: 2405, column: 20, scope: !11907)
!11914 = !DILocation(line: 2405, column: 10, scope: !11907)
!11915 = !DILocation(line: 2405, column: 3, scope: !11907)
!11916 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1602, file: !1602, line: 1583, type: !1528, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11917)
!11917 = !{!11918, !11919, !11920, !11921, !11922, !11923}
!11918 = !DILocalVariable(name: "dev", arg: 1, scope: !11916, file: !1602, line: 1583, type: !1507)
!11919 = !DILocalVariable(name: "config", scope: !11916, file: !1602, line: 1585, type: !11260)
!11920 = !DILocalVariable(name: "data", scope: !11916, file: !1602, line: 1586, type: !11383)
!11921 = !DILocalVariable(name: "ll_parity", scope: !11916, file: !1602, line: 1587, type: !108)
!11922 = !DILocalVariable(name: "ll_datawidth", scope: !11916, file: !1602, line: 1588, type: !108)
!11923 = !DILocalVariable(name: "err", scope: !11916, file: !1602, line: 1589, type: !107)
!11924 = !DILocation(line: 0, scope: !11916)
!11925 = !DILocation(line: 1585, column: 48, scope: !11916)
!11926 = !DILocation(line: 1586, column: 38, scope: !11916)
!11927 = !DILocation(line: 1591, column: 2, scope: !11916)
!11928 = !DILocation(line: 1593, column: 29, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11916, file: !1602, line: 1593, column: 6)
!11930 = !DILocation(line: 1593, column: 7, scope: !11929)
!11931 = !DILocation(line: 1593, column: 6, scope: !11916)
!11932 = !DILocation(line: 1594, column: 3, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11934, file: !1602, line: 1594, column: 3)
!11934 = distinct !DILexicalBlock(scope: !11935, file: !1602, line: 1594, column: 3)
!11935 = distinct !DILexicalBlock(scope: !11936, file: !1602, line: 1594, column: 3)
!11936 = distinct !DILexicalBlock(scope: !11937, file: !1602, line: 1594, column: 3)
!11937 = distinct !DILexicalBlock(scope: !11929, file: !1602, line: 1593, column: 37)
!11938 = !DILocation(line: 1595, column: 3, scope: !11937)
!11939 = !DILocation(line: 1599, column: 31, scope: !11916)
!11940 = !DILocation(line: 1599, column: 71, scope: !11916)
!11941 = !DILocation(line: 1599, column: 8, scope: !11916)
!11942 = !DILocation(line: 1600, column: 10, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11916, file: !1602, line: 1600, column: 6)
!11944 = !DILocation(line: 1600, column: 6, scope: !11916)
!11945 = !DILocation(line: 1601, column: 3, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11947, file: !1602, line: 1601, column: 3)
!11947 = distinct !DILexicalBlock(scope: !11948, file: !1602, line: 1601, column: 3)
!11948 = distinct !DILexicalBlock(scope: !11949, file: !1602, line: 1601, column: 3)
!11949 = distinct !DILexicalBlock(scope: !11950, file: !1602, line: 1601, column: 3)
!11950 = distinct !DILexicalBlock(scope: !11943, file: !1602, line: 1600, column: 16)
!11951 = !DILocation(line: 1602, column: 3, scope: !11950)
!11952 = !DILocation(line: 1616, column: 36, scope: !11916)
!11953 = !DILocation(line: 1616, column: 8, scope: !11916)
!11954 = !DILocation(line: 1617, column: 10, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11916, file: !1602, line: 1617, column: 6)
!11956 = !DILocation(line: 1617, column: 6, scope: !11916)
!11957 = !DILocation(line: 1621, column: 27, scope: !11916)
!11958 = !DILocation(line: 1621, column: 2, scope: !11916)
!11959 = !DILocation(line: 1624, column: 40, scope: !11916)
!11960 = !DILocation(line: 1624, column: 2, scope: !11916)
!11961 = !DILocation(line: 1630, column: 14, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11916, file: !1602, line: 1630, column: 6)
!11963 = !DILocation(line: 1630, column: 6, scope: !11916)
!11964 = !DILocation(line: 1640, column: 4, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11966, file: !1602, line: 1640, column: 4)
!11966 = distinct !DILexicalBlock(scope: !11967, file: !1602, line: 1640, column: 4)
!11967 = distinct !DILexicalBlock(scope: !11968, file: !1602, line: 1640, column: 4)
!11968 = distinct !DILexicalBlock(scope: !11969, file: !1602, line: 1640, column: 4)
!11969 = distinct !DILexicalBlock(scope: !11970, file: !1602, line: 1639, column: 28)
!11970 = distinct !DILexicalBlock(scope: !11971, file: !1602, line: 1639, column: 7)
!11971 = distinct !DILexicalBlock(scope: !11972, file: !1602, line: 1638, column: 9)
!11972 = distinct !DILexicalBlock(scope: !11962, file: !1602, line: 1634, column: 13)
!11973 = !DILocation(line: 0, scope: !11962)
!11974 = !DILocation(line: 1649, column: 35, scope: !11916)
!11975 = !DILocation(line: 1649, column: 2, scope: !11916)
!11976 = !DILocation(line: 1654, column: 14, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11916, file: !1602, line: 1654, column: 6)
!11978 = !DILocation(line: 1654, column: 6, scope: !11916)
!11979 = !DILocation(line: 1655, column: 3, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11977, file: !1602, line: 1654, column: 31)
!11981 = !DILocation(line: 1656, column: 2, scope: !11980)
!11982 = !DILocation(line: 1659, column: 37, scope: !11916)
!11983 = !DILocation(line: 1659, column: 2, scope: !11916)
!11984 = !DILocation(line: 1662, column: 14, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11916, file: !1602, line: 1662, column: 6)
!11986 = !DILocation(line: 1662, column: 6, scope: !11916)
!11987 = !DILocation(line: 1663, column: 37, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11985, file: !1602, line: 1662, column: 27)
!11989 = !DILocation(line: 1663, column: 3, scope: !11988)
!11990 = !DILocation(line: 1664, column: 2, scope: !11988)
!11991 = !DILocation(line: 1684, column: 26, scope: !11916)
!11992 = !DILocation(line: 1684, column: 2, scope: !11916)
!11993 = !DILocation(line: 1722, column: 2, scope: !11916)
!11994 = !DILocation(line: 1724, column: 1, scope: !11916)
!11995 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1602, file: !1602, line: 651, type: !11996, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !11998)
!11996 = !DISubroutineType(types: !11997)
!11997 = !{null, !1507}
!11998 = !{!11999, !12000, !12001}
!11999 = !DILocalVariable(name: "dev", arg: 1, scope: !11995, file: !1602, line: 651, type: !1507)
!12000 = !DILocalVariable(name: "data", scope: !11995, file: !1602, line: 653, type: !11383)
!12001 = !DILocalVariable(name: "clk", scope: !11995, file: !1602, line: 654, type: !12002)
!12002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1507)
!12003 = !DILocation(line: 0, scope: !11995)
!12004 = !DILocation(line: 653, column: 38, scope: !11995)
!12005 = !DILocation(line: 656, column: 8, scope: !11995)
!12006 = !DILocation(line: 656, column: 14, scope: !11995)
!12007 = !DILocation(line: 657, column: 1, scope: !11995)
!12008 = distinct !DISubprogram(name: "device_is_ready", scope: !10398, file: !10398, line: 47, type: !12009, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !12011)
!12009 = !DISubroutineType(types: !12010)
!12010 = !{!136, !1507}
!12011 = !{!12012}
!12012 = !DILocalVariable(name: "dev", arg: 1, scope: !12008, file: !10398, line: 47, type: !1507)
!12013 = !DILocation(line: 0, scope: !12008)
!12014 = !DILocation(line: 55, column: 2, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12008, file: !10398, line: 55, column: 2)
!12016 = !{i64 2155127213}
!12017 = !DILocation(line: 56, column: 9, scope: !12008)
!12018 = !DILocation(line: 56, column: 2, scope: !12008)
!12019 = distinct !DISubprogram(name: "clock_control_on", scope: !956, file: !956, line: 123, type: !1566, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !12020)
!12020 = !{!12021, !12022, !12023}
!12021 = !DILocalVariable(name: "dev", arg: 1, scope: !12019, file: !956, line: 123, type: !1507)
!12022 = !DILocalVariable(name: "sys", arg: 2, scope: !12019, file: !956, line: 124, type: !1048)
!12023 = !DILocalVariable(name: "api", scope: !12019, file: !956, line: 126, type: !1559)
!12024 = !DILocation(line: 0, scope: !12019)
!12025 = !DILocation(line: 127, column: 49, scope: !12019)
!12026 = !DILocation(line: 129, column: 14, scope: !12019)
!12027 = !DILocation(line: 129, column: 9, scope: !12019)
!12028 = !DILocation(line: 129, column: 2, scope: !12019)
!12029 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1642, file: !1642, line: 342, type: !12030, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !12032)
!12030 = !DISubroutineType(types: !12031)
!12031 = !{!107, !1639, !190}
!12032 = !{!12033, !12034, !12035, !12036}
!12033 = !DILocalVariable(name: "config", arg: 1, scope: !12029, file: !1642, line: 342, type: !1639)
!12034 = !DILocalVariable(name: "id", arg: 2, scope: !12029, file: !1642, line: 343, type: !190)
!12035 = !DILocalVariable(name: "ret", scope: !12029, file: !1642, line: 345, type: !107)
!12036 = !DILocalVariable(name: "state", scope: !12029, file: !1642, line: 346, type: !1645)
!12037 = !DILocation(line: 0, scope: !12029)
!12038 = !DILocation(line: 346, column: 2, scope: !12029)
!12039 = !DILocation(line: 348, column: 8, scope: !12029)
!12040 = !DILocation(line: 349, column: 10, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12029, file: !1642, line: 349, column: 6)
!12042 = !DILocation(line: 349, column: 6, scope: !12029)
!12043 = !DILocation(line: 353, column: 44, scope: !12029)
!12044 = !DILocation(line: 353, column: 9, scope: !12029)
!12045 = !DILocation(line: 353, column: 2, scope: !12029)
!12046 = !DILocation(line: 354, column: 1, scope: !12029)
!12047 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11569, file: !11569, line: 497, type: !11741, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !12048)
!12048 = !{!12049, !12050, !12051}
!12049 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12047, file: !11569, line: 497, type: !1548)
!12050 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12047, file: !11569, line: 497, type: !108)
!12051 = !DILocalVariable(name: "val", scope: !12052, file: !11569, line: 499, type: !108)
!12052 = distinct !DILexicalBlock(scope: !12047, file: !11569, line: 499, column: 3)
!12053 = !DILocation(line: 0, scope: !12047)
!12054 = !DILocation(line: 499, column: 3, scope: !12052)
!12055 = !DILocalVariable(name: "addr", arg: 1, scope: !12056, file: !7374, line: 476, type: !1598)
!12056 = distinct !DISubprogram(name: "__LDREXW", scope: !7374, file: !7374, line: 476, type: !12057, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !12059)
!12057 = !DISubroutineType(types: !12058)
!12058 = !{!108, !1598}
!12059 = !{!12055, !12060}
!12060 = !DILocalVariable(name: "result", scope: !12056, file: !7374, line: 478, type: !108)
!12061 = !DILocation(line: 0, scope: !12056, inlinedAt: !12062)
!12062 = distinct !DILocation(line: 499, column: 3, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12052, file: !11569, line: 499, column: 3)
!12064 = !DILocation(line: 480, column: 4, scope: !12056, inlinedAt: !12062)
!12065 = !{i64 3574683}
!12066 = !DILocation(line: 499, column: 3, scope: !12063)
!12067 = !DILocation(line: 0, scope: !12052)
!12068 = !DILocalVariable(name: "value", arg: 1, scope: !12069, file: !7374, line: 527, type: !108)
!12069 = distinct !DISubprogram(name: "__STREXW", scope: !7374, file: !7374, line: 527, type: !12070, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !12072)
!12070 = !DISubroutineType(types: !12071)
!12071 = !{!108, !108, !1598}
!12072 = !{!12068, !12073, !12074}
!12073 = !DILocalVariable(name: "addr", arg: 2, scope: !12069, file: !7374, line: 527, type: !1598)
!12074 = !DILocalVariable(name: "result", scope: !12069, file: !7374, line: 529, type: !108)
!12075 = !DILocation(line: 0, scope: !12069, inlinedAt: !12076)
!12076 = distinct !DILocation(line: 499, column: 3, scope: !12052)
!12077 = !DILocation(line: 531, column: 4, scope: !12069, inlinedAt: !12076)
!12078 = !{i64 3576119}
!12079 = distinct !{!12079, !12054, !12054}
!12080 = !DILocation(line: 500, column: 1, scope: !12047)
!12081 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11569, file: !11569, line: 850, type: !11750, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !12082)
!12082 = !{!12083, !12084, !12085, !12086}
!12083 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12081, file: !11569, line: 850, type: !1548)
!12084 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12081, file: !11569, line: 850, type: !108)
!12085 = !DILocalVariable(name: "Parity", arg: 3, scope: !12081, file: !11569, line: 850, type: !108)
!12086 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12081, file: !11569, line: 851, type: !108)
!12087 = !DILocation(line: 0, scope: !12081)
!12088 = !DILocation(line: 853, column: 3, scope: !12081)
!12089 = !DILocation(line: 854, column: 3, scope: !12081)
!12090 = !DILocation(line: 855, column: 1, scope: !12081)
!12091 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11569, file: !11569, line: 1337, type: !11632, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !12092)
!12092 = !{!12093}
!12093 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12091, file: !11569, line: 1337, type: !1548)
!12094 = !DILocation(line: 0, scope: !12091)
!12095 = !DILocation(line: 1339, column: 3, scope: !12091)
!12096 = !DILocation(line: 1340, column: 1, scope: !12091)
!12097 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1642, file: !1642, line: 316, type: !12098, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !12100)
!12098 = !DISubroutineType(types: !12099)
!12099 = !{!107, !1639, !1645}
!12100 = !{!12101, !12102, !12103}
!12101 = !DILocalVariable(name: "config", arg: 1, scope: !12097, file: !1642, line: 317, type: !1639)
!12102 = !DILocalVariable(name: "state", arg: 2, scope: !12097, file: !1642, line: 318, type: !1645)
!12103 = !DILocalVariable(name: "reg", scope: !12097, file: !1642, line: 320, type: !22)
!12104 = !DILocation(line: 0, scope: !12097)
!12105 = !DILocation(line: 329, column: 39, scope: !12097)
!12106 = !DILocation(line: 329, column: 52, scope: !12097)
!12107 = !DILocation(line: 329, column: 9, scope: !12097)
!12108 = !DILocation(line: 329, column: 2, scope: !12097)
!12109 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !451, file: !451, line: 730, type: !12009, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1463, retainedNodes: !12110)
!12110 = !{!12111}
!12111 = !DILocalVariable(name: "dev", arg: 1, scope: !12109, file: !451, line: 730, type: !1507)
!12112 = !DILocation(line: 0, scope: !12109)
!12113 = !DILocation(line: 732, column: 9, scope: !12109)
!12114 = !DILocation(line: 732, column: 2, scope: !12109)
!12115 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1765, file: !1765, line: 270, type: !1771, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !12116)
!12116 = !{!12117}
!12117 = !DILocalVariable(name: "dev", arg: 1, scope: !12115, file: !1765, line: 270, type: !1773)
!12118 = !DILocation(line: 0, scope: !12115)
!12119 = !DILocation(line: 274, column: 2, scope: !12115)
!12120 = !DILocation(line: 275, column: 12, scope: !12115)
!12121 = !DILocation(line: 276, column: 15, scope: !12115)
!12122 = !DILocation(line: 277, column: 16, scope: !12115)
!12123 = !DILocation(line: 278, column: 15, scope: !12115)
!12124 = !DILocation(line: 279, column: 16, scope: !12115)
!12125 = !DILocation(line: 282, column: 2, scope: !12115)
!12126 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !644, file: !644, line: 1814, type: !7408, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !12127)
!12127 = !{!12128, !12129}
!12128 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12126, file: !644, line: 1814, type: !912)
!12129 = !DILocalVariable(name: "priority", arg: 2, scope: !12126, file: !644, line: 1814, type: !108)
!12130 = !DILocation(line: 0, scope: !12126)
!12131 = !DILocation(line: 1822, column: 46, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12133, file: !644, line: 1821, column: 3)
!12133 = distinct !DILexicalBlock(scope: !12126, file: !644, line: 1816, column: 7)
!12134 = !DILocation(line: 1824, column: 1, scope: !12126)
!12135 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1765, file: !1765, line: 118, type: !7311, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !12136)
!12136 = !{!12137, !12138}
!12137 = !DILocalVariable(name: "arg", arg: 1, scope: !12135, file: !1765, line: 118, type: !106)
!12138 = !DILocalVariable(name: "dticks", scope: !12135, file: !1765, line: 121, type: !108)
!12139 = !DILocation(line: 0, scope: !12135)
!12140 = !DILocation(line: 124, column: 2, scope: !12135)
!12141 = !DILocation(line: 129, column: 17, scope: !12135)
!12142 = !DILocation(line: 129, column: 14, scope: !12135)
!12143 = !DILocation(line: 130, column: 15, scope: !12135)
!12144 = !DILocation(line: 145, column: 27, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12146, file: !1765, line: 132, column: 16)
!12146 = distinct !DILexicalBlock(scope: !12135, file: !1765, line: 132, column: 6)
!12147 = !DILocation(line: 145, column: 25, scope: !12145)
!12148 = !DILocation(line: 145, column: 45, scope: !12145)
!12149 = !DILocation(line: 146, column: 30, scope: !12145)
!12150 = !DILocation(line: 146, column: 20, scope: !12145)
!12151 = !DILocation(line: 147, column: 3, scope: !12145)
!12152 = !DILocation(line: 151, column: 2, scope: !12135)
!12153 = !DILocation(line: 152, column: 1, scope: !12135)
!12154 = distinct !DISubprogram(name: "elapsed", scope: !1765, file: !1765, line: 85, type: !7455, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !12155)
!12155 = !{!12156, !12157, !12158}
!12156 = !DILocalVariable(name: "val1", scope: !12154, file: !1765, line: 87, type: !108)
!12157 = !DILocalVariable(name: "ctrl", scope: !12154, file: !1765, line: 88, type: !108)
!12158 = !DILocalVariable(name: "val2", scope: !12154, file: !1765, line: 89, type: !108)
!12159 = !DILocation(line: 87, column: 27, scope: !12154)
!12160 = !DILocation(line: 0, scope: !12154)
!12161 = !DILocation(line: 88, column: 27, scope: !12154)
!12162 = !DILocation(line: 89, column: 27, scope: !12154)
!12163 = !DILocation(line: 105, column: 12, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12154, file: !1765, line: 105, column: 6)
!12165 = !DILocation(line: 106, column: 6, scope: !12164)
!12166 = !DILocation(line: 107, column: 16, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12164, file: !1765, line: 106, column: 24)
!12168 = !DILocation(line: 111, column: 18, scope: !12167)
!12169 = !DILocation(line: 112, column: 2, scope: !12167)
!12170 = !DILocation(line: 114, column: 20, scope: !12154)
!12171 = !DILocation(line: 114, column: 30, scope: !12154)
!12172 = !DILocation(line: 114, column: 28, scope: !12154)
!12173 = !DILocation(line: 114, column: 2, scope: !12154)
!12174 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1765, file: !1765, line: 154, type: !12175, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !12177)
!12175 = !DISubroutineType(types: !12176)
!12176 = !{null, !334, !136}
!12177 = !{!12178, !12179, !12180, !12181, !12182, !12183, !12184, !12189, !12190}
!12178 = !DILocalVariable(name: "ticks", arg: 1, scope: !12174, file: !1765, line: 154, type: !334)
!12179 = !DILocalVariable(name: "idle", arg: 2, scope: !12174, file: !1765, line: 154, type: !136)
!12180 = !DILocalVariable(name: "delay", scope: !12174, file: !1765, line: 169, type: !108)
!12181 = !DILocalVariable(name: "val1", scope: !12174, file: !1765, line: 170, type: !108)
!12182 = !DILocalVariable(name: "val2", scope: !12174, file: !1765, line: 170, type: !108)
!12183 = !DILocalVariable(name: "last_load_", scope: !12174, file: !1765, line: 171, type: !108)
!12184 = !DILocalVariable(name: "key", scope: !12174, file: !1765, line: 176, type: !12185)
!12185 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !12186)
!12186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !12187)
!12187 = !{!12188}
!12188 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12186, file: !255, line: 33, baseType: !107, size: 32)
!12189 = !DILocalVariable(name: "pending", scope: !12174, file: !1765, line: 178, type: !108)
!12190 = !DILocalVariable(name: "unannounced", scope: !12174, file: !1765, line: 185, type: !108)
!12191 = !DILocation(line: 0, scope: !12174)
!12192 = !DILocation(line: 162, column: 49, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12174, file: !1765, line: 162, column: 6)
!12194 = !DILocation(line: 163, column: 17, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12193, file: !1765, line: 162, column: 78)
!12196 = !DILocation(line: 164, column: 13, scope: !12195)
!12197 = !DILocation(line: 165, column: 3, scope: !12195)
!12198 = !DILocation(line: 171, column: 24, scope: !12174)
!12199 = !DILocation(line: 173, column: 10, scope: !12174)
!12200 = !DILocation(line: 174, column: 10, scope: !12174)
!12201 = !DILocalVariable(name: "l", arg: 1, scope: !12202, file: !255, line: 136, type: !12205)
!12202 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !12203, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !12206)
!12203 = !DISubroutineType(types: !12204)
!12204 = !{!12185, !12205}
!12205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!12206 = !{!12201, !12207}
!12207 = !DILocalVariable(name: "k", scope: !12202, file: !255, line: 139, type: !12185)
!12208 = !DILocation(line: 0, scope: !12202, inlinedAt: !12209)
!12209 = distinct !DILocation(line: 176, column: 25, scope: !12174)
!12210 = !DILocation(line: 55, column: 2, scope: !12211, inlinedAt: !12215)
!12211 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7053, file: !7053, line: 42, type: !7054, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !12212)
!12212 = !{!12213, !12214}
!12213 = !DILocalVariable(name: "key", scope: !12211, file: !7053, line: 44, type: !32)
!12214 = !DILocalVariable(name: "tmp", scope: !12211, file: !7053, line: 53, type: !32)
!12215 = distinct !DILocation(line: 145, column: 10, scope: !12202, inlinedAt: !12209)
!12216 = !{i64 2197135}
!12217 = !DILocation(line: 0, scope: !12211, inlinedAt: !12215)
!12218 = !DILocation(line: 178, column: 21, scope: !12174)
!12219 = !DILocation(line: 180, column: 18, scope: !12174)
!12220 = !DILocation(line: 182, column: 14, scope: !12174)
!12221 = !DILocation(line: 183, column: 15, scope: !12174)
!12222 = !DILocation(line: 185, column: 39, scope: !12174)
!12223 = !DILocation(line: 185, column: 37, scope: !12174)
!12224 = !DILocation(line: 187, column: 27, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12174, file: !1765, line: 187, column: 6)
!12226 = !DILocation(line: 187, column: 6, scope: !12174)
!12227 = !DILocation(line: 202, column: 27, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12225, file: !1765, line: 195, column: 9)
!12229 = !DILocation(line: 202, column: 48, scope: !12228)
!12230 = !DILocation(line: 203, column: 9, scope: !12228)
!12231 = !DILocation(line: 204, column: 11, scope: !12228)
!12232 = !DILocation(line: 205, column: 13, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12228, file: !1765, line: 205, column: 7)
!12234 = !DILocation(line: 205, column: 7, scope: !12228)
!12235 = !DILocation(line: 0, scope: !12225)
!12236 = !DILocation(line: 212, column: 18, scope: !12174)
!12237 = !DILocation(line: 214, column: 28, scope: !12174)
!12238 = !DILocation(line: 214, column: 16, scope: !12174)
!12239 = !DILocation(line: 215, column: 15, scope: !12174)
!12240 = !DILocation(line: 227, column: 11, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12174, file: !1765, line: 227, column: 6)
!12242 = !DILocation(line: 227, column: 6, scope: !12174)
!12243 = !DILocation(line: 228, column: 15, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12241, file: !1765, line: 227, column: 19)
!12245 = !DILocation(line: 228, column: 38, scope: !12244)
!12246 = !DILocation(line: 228, column: 24, scope: !12244)
!12247 = !DILocation(line: 229, column: 2, scope: !12244)
!12248 = !DILocation(line: 230, column: 24, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12241, file: !1765, line: 229, column: 9)
!12250 = !DILocation(line: 230, column: 15, scope: !12249)
!12251 = !DILocation(line: 0, scope: !12241)
!12252 = !DILocalVariable(name: "key", arg: 2, scope: !12253, file: !255, line: 190, type: !12185)
!12253 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !12254, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !12256)
!12254 = !DISubroutineType(types: !12255)
!12255 = !{null, !12205, !12185}
!12256 = !{!12257, !12252}
!12257 = !DILocalVariable(name: "l", arg: 1, scope: !12253, file: !255, line: 189, type: !12205)
!12258 = !DILocation(line: 0, scope: !12253, inlinedAt: !12259)
!12259 = distinct !DILocation(line: 232, column: 2, scope: !12174)
!12260 = !DILocalVariable(name: "key", arg: 1, scope: !12261, file: !7053, line: 84, type: !32)
!12261 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7053, file: !7053, line: 84, type: !7064, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !12262)
!12262 = !{!12260}
!12263 = !DILocation(line: 0, scope: !12261, inlinedAt: !12264)
!12264 = distinct !DILocation(line: 215, column: 2, scope: !12253, inlinedAt: !12259)
!12265 = !DILocation(line: 95, column: 2, scope: !12261, inlinedAt: !12264)
!12266 = !{i64 2197952}
!12267 = !DILocation(line: 234, column: 1, scope: !12174)
!12268 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1765, file: !1765, line: 236, type: !7455, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !12269)
!12269 = !{!12270, !12271}
!12270 = !DILocalVariable(name: "key", scope: !12268, file: !1765, line: 242, type: !12185)
!12271 = !DILocalVariable(name: "cyc", scope: !12268, file: !1765, line: 243, type: !108)
!12272 = !DILocation(line: 0, scope: !12202, inlinedAt: !12273)
!12273 = distinct !DILocation(line: 242, column: 25, scope: !12268)
!12274 = !DILocation(line: 55, column: 2, scope: !12211, inlinedAt: !12275)
!12275 = distinct !DILocation(line: 145, column: 10, scope: !12202, inlinedAt: !12273)
!12276 = !DILocation(line: 0, scope: !12211, inlinedAt: !12275)
!12277 = !DILocation(line: 0, scope: !12268)
!12278 = !DILocation(line: 243, column: 17, scope: !12268)
!12279 = !DILocation(line: 243, column: 29, scope: !12268)
!12280 = !DILocation(line: 243, column: 27, scope: !12268)
!12281 = !DILocation(line: 243, column: 43, scope: !12268)
!12282 = !DILocation(line: 243, column: 41, scope: !12268)
!12283 = !DILocation(line: 0, scope: !12253, inlinedAt: !12284)
!12284 = distinct !DILocation(line: 245, column: 2, scope: !12268)
!12285 = !DILocation(line: 0, scope: !12261, inlinedAt: !12286)
!12286 = distinct !DILocation(line: 215, column: 2, scope: !12253, inlinedAt: !12284)
!12287 = !DILocation(line: 95, column: 2, scope: !12261, inlinedAt: !12286)
!12288 = !DILocation(line: 246, column: 13, scope: !12268)
!12289 = !DILocation(line: 246, column: 2, scope: !12268)
!12290 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1765, file: !1765, line: 249, type: !7455, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !12291)
!12291 = !{!12292, !12293}
!12292 = !DILocalVariable(name: "key", scope: !12290, file: !1765, line: 251, type: !12185)
!12293 = !DILocalVariable(name: "ret", scope: !12290, file: !1765, line: 252, type: !108)
!12294 = !DILocation(line: 0, scope: !12202, inlinedAt: !12295)
!12295 = distinct !DILocation(line: 251, column: 25, scope: !12290)
!12296 = !DILocation(line: 55, column: 2, scope: !12211, inlinedAt: !12297)
!12297 = distinct !DILocation(line: 145, column: 10, scope: !12202, inlinedAt: !12295)
!12298 = !DILocation(line: 0, scope: !12211, inlinedAt: !12297)
!12299 = !DILocation(line: 0, scope: !12290)
!12300 = !DILocation(line: 252, column: 17, scope: !12290)
!12301 = !DILocation(line: 252, column: 29, scope: !12290)
!12302 = !DILocation(line: 252, column: 27, scope: !12290)
!12303 = !DILocation(line: 0, scope: !12253, inlinedAt: !12304)
!12304 = distinct !DILocation(line: 254, column: 2, scope: !12290)
!12305 = !DILocation(line: 0, scope: !12261, inlinedAt: !12306)
!12306 = distinct !DILocation(line: 215, column: 2, scope: !12253, inlinedAt: !12304)
!12307 = !DILocation(line: 95, column: 2, scope: !12261, inlinedAt: !12306)
!12308 = !DILocation(line: 255, column: 2, scope: !12290)
!12309 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1765, file: !1765, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !256)
!12310 = !DILocation(line: 260, column: 6, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12309, file: !1765, line: 260, column: 6)
!12312 = !DILocation(line: 260, column: 16, scope: !12311)
!12313 = !DILocation(line: 260, column: 6, scope: !12309)
!12314 = !DILocation(line: 261, column: 17, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12311, file: !1765, line: 260, column: 34)
!12316 = !DILocation(line: 262, column: 2, scope: !12315)
!12317 = !DILocation(line: 263, column: 1, scope: !12309)
!12318 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1765, file: !1765, line: 265, type: !337, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !256)
!12319 = !DILocation(line: 267, column: 16, scope: !12318)
!12320 = !DILocation(line: 268, column: 1, scope: !12318)
!12321 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12322, file: !12322, line: 9, type: !12323, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !12346)
!12322 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12323 = !DISubroutineType(types: !12324)
!12324 = !{!107, !12325, !190, !12345}
!12325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12326, size: 32)
!12326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12327)
!12327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1642, line: 60, size: 64, elements: !12328)
!12328 = !{!12329, !12344}
!12329 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12327, file: !1642, line: 69, baseType: !12330, size: 32)
!12330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12331, size: 32)
!12331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12332)
!12332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1642, line: 50, size: 64, elements: !12333)
!12333 = !{!12334, !12342, !12343}
!12334 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12332, file: !1642, line: 52, baseType: !12335, size: 32)
!12335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12336, size: 32)
!12336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12337)
!12337 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1653, line: 37, baseType: !12338)
!12338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1653, line: 32, size: 64, elements: !12339)
!12339 = !{!12340, !12341}
!12340 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12338, file: !1653, line: 34, baseType: !108, size: 32)
!12341 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12338, file: !1653, line: 36, baseType: !108, size: 32, offset: 32)
!12342 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12332, file: !1642, line: 54, baseType: !190, size: 8, offset: 32)
!12343 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12332, file: !1642, line: 56, baseType: !190, size: 8, offset: 40)
!12344 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12327, file: !1642, line: 71, baseType: !190, size: 8, offset: 32)
!12345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12330, size: 32)
!12346 = !{!12347, !12348, !12349}
!12347 = !DILocalVariable(name: "config", arg: 1, scope: !12321, file: !12322, line: 9, type: !12325)
!12348 = !DILocalVariable(name: "id", arg: 2, scope: !12321, file: !12322, line: 9, type: !190)
!12349 = !DILocalVariable(name: "state", arg: 3, scope: !12321, file: !12322, line: 10, type: !12345)
!12350 = !DILocation(line: 0, scope: !12321)
!12351 = !DILocation(line: 12, column: 20, scope: !12321)
!12352 = !DILocation(line: 13, column: 27, scope: !12321)
!12353 = !DILocation(line: 13, column: 42, scope: !12321)
!12354 = !DILocation(line: 13, column: 19, scope: !12321)
!12355 = !DILocation(line: 13, column: 16, scope: !12321)
!12356 = !DILocation(line: 13, column: 2, scope: !12321)
!12357 = distinct !{!12357, !12356, !12358}
!12358 = !DILocation(line: 19, column: 2, scope: !12321)
!12359 = !DILocation(line: 14, column: 23, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12361, file: !12322, line: 14, column: 7)
!12361 = distinct !DILexicalBlock(scope: !12321, file: !12322, line: 13, column: 54)
!12362 = !DILocation(line: 14, column: 10, scope: !12360)
!12363 = !DILocation(line: 18, column: 11, scope: !12361)
!12364 = !DILocation(line: 14, column: 7, scope: !12361)
!12365 = !DILocation(line: 22, column: 1, scope: !12321)
!12366 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1882, file: !1882, line: 193, type: !12367, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1800, retainedNodes: !12376)
!12367 = !DISubroutineType(types: !12368)
!12368 = !{!107, !12369, !190, !22}
!12369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12370, size: 32)
!12370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12371)
!12371 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1653, line: 37, baseType: !12372)
!12372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1653, line: 32, size: 64, elements: !12373)
!12373 = !{!12374, !12375}
!12374 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12372, file: !1653, line: 34, baseType: !108, size: 32)
!12375 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12372, file: !1653, line: 36, baseType: !108, size: 32, offset: 32)
!12376 = !{!12377, !12378, !12379, !12380, !12381, !12382, !12383, !12384, !12386}
!12377 = !DILocalVariable(name: "pins", arg: 1, scope: !12366, file: !1882, line: 193, type: !12369)
!12378 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12366, file: !1882, line: 193, type: !190)
!12379 = !DILocalVariable(name: "reg", arg: 3, scope: !12366, file: !1882, line: 194, type: !22)
!12380 = !DILocalVariable(name: "pin", scope: !12366, file: !1882, line: 196, type: !108)
!12381 = !DILocalVariable(name: "mux", scope: !12366, file: !1882, line: 196, type: !108)
!12382 = !DILocalVariable(name: "pin_cgf", scope: !12366, file: !1882, line: 197, type: !108)
!12383 = !DILocalVariable(name: "ret", scope: !12366, file: !1882, line: 198, type: !107)
!12384 = !DILocalVariable(name: "i", scope: !12385, file: !1882, line: 209, type: !190)
!12385 = distinct !DILexicalBlock(scope: !12366, file: !1882, line: 209, column: 2)
!12386 = !DILocalVariable(name: "gpio_out", scope: !12387, file: !1882, line: 239, type: !108)
!12387 = distinct !DILexicalBlock(scope: !12388, file: !1882, line: 238, column: 55)
!12388 = distinct !DILexicalBlock(scope: !12389, file: !1882, line: 238, column: 14)
!12389 = distinct !DILexicalBlock(scope: !12390, file: !1882, line: 236, column: 14)
!12390 = distinct !DILexicalBlock(scope: !12391, file: !1882, line: 234, column: 7)
!12391 = distinct !DILexicalBlock(scope: !12392, file: !1882, line: 209, column: 41)
!12392 = distinct !DILexicalBlock(scope: !12385, file: !1882, line: 209, column: 2)
!12393 = !DILocation(line: 0, scope: !12366)
!12394 = !DILocation(line: 0, scope: !12385)
!12395 = !DILocation(line: 209, column: 25, scope: !12392)
!12396 = !DILocation(line: 209, column: 2, scope: !12385)
!12397 = distinct !{!12397, !12396, !12398}
!12398 = !DILocation(line: 259, column: 2, scope: !12385)
!12399 = !DILocation(line: 210, column: 17, scope: !12391)
!12400 = !DILocation(line: 234, column: 7, scope: !12390)
!12401 = !DILocation(line: 234, column: 33, scope: !12390)
!12402 = !DILocation(line: 234, column: 7, scope: !12391)
!12403 = !DILocation(line: 235, column: 22, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12390, file: !1882, line: 234, column: 49)
!12405 = !DILocation(line: 235, column: 29, scope: !12404)
!12406 = !DILocation(line: 236, column: 3, scope: !12404)
!12407 = !DILocation(line: 236, column: 14, scope: !12390)
!12408 = !DILocation(line: 239, column: 32, scope: !12387)
!12409 = !DILocation(line: 0, scope: !12387)
!12410 = !DILocation(line: 241, column: 8, scope: !12387)
!12411 = !DILocation(line: 246, column: 3, scope: !12387)
!12412 = !DILocation(line: 252, column: 9, scope: !12391)
!12413 = !DILocation(line: 255, column: 9, scope: !12391)
!12414 = !DILocation(line: 256, column: 11, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12391, file: !1882, line: 256, column: 7)
!12416 = !DILocation(line: 209, column: 37, scope: !12392)
!12417 = !DILocation(line: 256, column: 7, scope: !12391)
!12418 = !DILocation(line: 262, column: 1, scope: !12366)
!12419 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1882, file: !1882, line: 176, type: !12420, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1800, retainedNodes: !12422)
!12420 = !DISubroutineType(types: !12421)
!12421 = !{!107, !108, !108, !108}
!12422 = !{!12423, !12424, !12425, !12426}
!12423 = !DILocalVariable(name: "pin", arg: 1, scope: !12419, file: !1882, line: 176, type: !108)
!12424 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12419, file: !1882, line: 176, type: !108)
!12425 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12419, file: !1882, line: 176, type: !108)
!12426 = !DILocalVariable(name: "port_device", scope: !12419, file: !1882, line: 178, type: !1812)
!12427 = !DILocation(line: 0, scope: !12419)
!12428 = !DILocation(line: 180, column: 22, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12419, file: !1882, line: 180, column: 6)
!12430 = !DILocation(line: 180, column: 6, scope: !12419)
!12431 = !DILocation(line: 180, column: 6, scope: !12429)
!12432 = !DILocation(line: 184, column: 16, scope: !12419)
!12433 = !DILocation(line: 186, column: 19, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12419, file: !1882, line: 186, column: 6)
!12435 = !DILocation(line: 186, column: 28, scope: !12434)
!12436 = !DILocation(line: 186, column: 33, scope: !12434)
!12437 = !DILocation(line: 186, column: 6, scope: !12419)
!12438 = !DILocation(line: 190, column: 43, scope: !12419)
!12439 = !DILocation(line: 190, column: 9, scope: !12419)
!12440 = !DILocation(line: 190, column: 2, scope: !12419)
!12441 = !DILocation(line: 191, column: 1, scope: !12419)
!12442 = distinct !DISubprogram(name: "device_is_ready", scope: !10398, file: !10398, line: 47, type: !12443, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1800, retainedNodes: !12445)
!12443 = !DISubroutineType(types: !12444)
!12444 = !{!136, !1812}
!12445 = !{!12446}
!12446 = !DILocalVariable(name: "dev", arg: 1, scope: !12442, file: !10398, line: 47, type: !1812)
!12447 = !DILocation(line: 0, scope: !12442)
!12448 = !DILocation(line: 55, column: 2, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12442, file: !10398, line: 55, column: 2)
!12450 = !{i64 2149431141}
!12451 = !DILocation(line: 56, column: 9, scope: !12442)
!12452 = !DILocation(line: 56, column: 2, scope: !12442)
!12453 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !451, file: !451, line: 730, type: !12443, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1800, retainedNodes: !12454)
!12454 = !{!12455}
!12455 = !DILocalVariable(name: "dev", arg: 1, scope: !12453, file: !451, line: 730, type: !1812)
!12456 = !DILocation(line: 0, scope: !12453)
!12457 = !DILocation(line: 732, column: 9, scope: !12453)
!12458 = !DILocation(line: 732, column: 2, scope: !12453)
!12459 = distinct !DISubprogram(name: "SystemInit", scope: !1930, file: !1930, line: 167, type: !337, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1890, retainedNodes: !256)
!12460 = !DILocation(line: 182, column: 1, scope: !12459)
!12461 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1930, file: !1930, line: 220, type: !337, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1890, retainedNodes: !12462)
!12462 = !{!12463, !12464, !12465, !12466, !12467}
!12463 = !DILocalVariable(name: "tmp", scope: !12461, file: !1930, line: 222, type: !108)
!12464 = !DILocalVariable(name: "pllvco", scope: !12461, file: !1930, line: 222, type: !108)
!12465 = !DILocalVariable(name: "pllp", scope: !12461, file: !1930, line: 222, type: !108)
!12466 = !DILocalVariable(name: "pllsource", scope: !12461, file: !1930, line: 222, type: !108)
!12467 = !DILocalVariable(name: "pllm", scope: !12461, file: !1930, line: 222, type: !108)
!12468 = !DILocation(line: 0, scope: !12461)
!12469 = !DILocation(line: 225, column: 14, scope: !12461)
!12470 = !DILocation(line: 225, column: 19, scope: !12461)
!12471 = !DILocation(line: 227, column: 3, scope: !12461)
!12472 = !DILocation(line: 234, column: 7, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12461, file: !1930, line: 228, column: 3)
!12474 = !DILocation(line: 240, column: 25, scope: !12473)
!12475 = !DILocation(line: 241, column: 19, scope: !12473)
!12476 = !DILocation(line: 241, column: 27, scope: !12473)
!12477 = !DILocation(line: 243, column: 21, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12473, file: !1930, line: 243, column: 11)
!12479 = !DILocation(line: 0, scope: !12478)
!12480 = !DILocation(line: 254, column: 22, scope: !12473)
!12481 = !DILocation(line: 254, column: 62, scope: !12473)
!12482 = !DILocation(line: 255, column: 31, scope: !12473)
!12483 = !DILocation(line: 256, column: 7, scope: !12473)
!12484 = !DILocation(line: 0, scope: !12473)
!12485 = !DILocation(line: 263, column: 30, scope: !12461)
!12486 = !DILocation(line: 263, column: 52, scope: !12461)
!12487 = !DILocation(line: 263, column: 9, scope: !12461)
!12488 = !DILocation(line: 265, column: 19, scope: !12461)
!12489 = !DILocation(line: 266, column: 1, scope: !12461)
!12490 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12491, file: !12491, line: 200, type: !12492, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !256)
!12491 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12492 = !DISubroutineType(types: !12493)
!12493 = !{!12494}
!12494 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3053, line: 44, baseType: !3052)
!12495 = !DILocation(line: 202, column: 3, scope: !12490)
!12496 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12491, file: !12491, line: 219, type: !12497, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12521)
!12497 = !DISubroutineType(types: !12498)
!12498 = !{!12494, !12499}
!12499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12500, size: 32)
!12500 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12501, line: 70, baseType: !12502)
!12501 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12502 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12501, line: 49, size: 384, elements: !12503)
!12503 = !{!12504, !12505, !12506, !12507, !12508, !12509, !12510}
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12502, file: !12501, line: 51, baseType: !108, size: 32)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12502, file: !12501, line: 54, baseType: !108, size: 32, offset: 32)
!12506 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12502, file: !12501, line: 57, baseType: !108, size: 32, offset: 64)
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12502, file: !12501, line: 60, baseType: !108, size: 32, offset: 96)
!12508 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12502, file: !12501, line: 63, baseType: !108, size: 32, offset: 128)
!12509 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12502, file: !12501, line: 66, baseType: !108, size: 32, offset: 160)
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12502, file: !12501, line: 69, baseType: !12511, size: 192, offset: 192)
!12511 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12512, line: 73, baseType: !12513)
!12512 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12513 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12512, line: 45, size: 192, elements: !12514)
!12514 = !{!12515, !12516, !12517, !12518, !12519, !12520}
!12515 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12513, file: !12512, line: 47, baseType: !108, size: 32)
!12516 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12513, file: !12512, line: 50, baseType: !108, size: 32, offset: 32)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12513, file: !12512, line: 53, baseType: !108, size: 32, offset: 64)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12513, file: !12512, line: 56, baseType: !108, size: 32, offset: 96)
!12519 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12513, file: !12512, line: 60, baseType: !108, size: 32, offset: 128)
!12520 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12513, file: !12512, line: 63, baseType: !108, size: 32, offset: 160)
!12521 = !{!12522, !12523, !12524, !12525, !12529}
!12522 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12496, file: !12491, line: 219, type: !12499)
!12523 = !DILocalVariable(name: "tickstart", scope: !12496, file: !12491, line: 221, type: !108)
!12524 = !DILocalVariable(name: "pll_config", scope: !12496, file: !12491, line: 221, type: !108)
!12525 = !DILocalVariable(name: "pwrclkchanged", scope: !12526, file: !12491, line: 391, type: !12528)
!12526 = distinct !DILexicalBlock(scope: !12527, file: !12491, line: 390, column: 3)
!12527 = distinct !DILexicalBlock(scope: !12496, file: !12491, line: 389, column: 6)
!12528 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !951, line: 188, baseType: !3059)
!12529 = !DILocalVariable(name: "tmpreg", scope: !12530, file: !12491, line: 400, type: !431)
!12530 = distinct !DILexicalBlock(scope: !12531, file: !12491, line: 400, column: 7)
!12531 = distinct !DILexicalBlock(scope: !12532, file: !12491, line: 399, column: 5)
!12532 = distinct !DILexicalBlock(scope: !12526, file: !12491, line: 398, column: 8)
!12533 = !DILocation(line: 0, scope: !12496)
!12534 = !DILocation(line: 224, column: 24, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12496, file: !12491, line: 224, column: 6)
!12536 = !DILocation(line: 224, column: 6, scope: !12496)
!12537 = !DILocation(line: 232, column: 27, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12496, file: !12491, line: 232, column: 6)
!12539 = !DILocation(line: 232, column: 43, scope: !12538)
!12540 = !DILocation(line: 232, column: 69, scope: !12538)
!12541 = !DILocation(line: 232, column: 6, scope: !12496)
!12542 = !DILocation(line: 237, column: 9, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12544, file: !12491, line: 237, column: 8)
!12544 = distinct !DILexicalBlock(scope: !12538, file: !12491, line: 233, column: 3)
!12545 = !DILocation(line: 237, column: 39, scope: !12543)
!12546 = !DILocation(line: 237, column: 60, scope: !12543)
!12547 = !DILocation(line: 238, column: 9, scope: !12543)
!12548 = !DILocation(line: 238, column: 39, scope: !12543)
!12549 = !DILocation(line: 238, column: 60, scope: !12543)
!12550 = !DILocation(line: 238, column: 70, scope: !12543)
!12551 = !DILocation(line: 238, column: 78, scope: !12543)
!12552 = !DILocation(line: 238, column: 100, scope: !12543)
!12553 = !DILocation(line: 237, column: 8, scope: !12544)
!12554 = !DILocation(line: 240, column: 11, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12556, file: !12491, line: 240, column: 10)
!12556 = distinct !DILexicalBlock(scope: !12543, file: !12491, line: 239, column: 5)
!12557 = !DILocation(line: 240, column: 57, scope: !12555)
!12558 = !DILocation(line: 240, column: 80, scope: !12555)
!12559 = !DILocation(line: 240, column: 89, scope: !12555)
!12560 = !DILocation(line: 240, column: 10, scope: !12556)
!12561 = !DILocation(line: 248, column: 7, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12563, file: !12491, line: 248, column: 7)
!12563 = distinct !DILexicalBlock(scope: !12564, file: !12491, line: 248, column: 7)
!12564 = distinct !DILexicalBlock(scope: !12543, file: !12491, line: 246, column: 5)
!12565 = !DILocation(line: 248, column: 7, scope: !12563)
!12566 = !DILocation(line: 248, column: 7, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12562, file: !12491, line: 248, column: 7)
!12568 = !DILocation(line: 248, column: 7, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12570, file: !12491, line: 248, column: 7)
!12570 = distinct !DILexicalBlock(scope: !12562, file: !12491, line: 248, column: 7)
!12571 = !DILocation(line: 248, column: 7, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12570, file: !12491, line: 248, column: 7)
!12573 = !DILocation(line: 0, scope: !12562)
!12574 = !DILocation(line: 251, column: 30, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12564, file: !12491, line: 251, column: 10)
!12576 = !DILocation(line: 251, column: 40, scope: !12575)
!12577 = !DILocation(line: 0, scope: !12575)
!12578 = !DILocation(line: 251, column: 10, scope: !12564)
!12579 = !DILocation(line: 257, column: 15, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12575, file: !12491, line: 252, column: 7)
!12581 = !DILocation(line: 257, column: 51, scope: !12580)
!12582 = !DILocation(line: 257, column: 9, scope: !12580)
!12583 = !DILocation(line: 259, column: 15, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12585, file: !12491, line: 259, column: 14)
!12585 = distinct !DILexicalBlock(scope: !12580, file: !12491, line: 258, column: 9)
!12586 = !DILocation(line: 259, column: 29, scope: !12584)
!12587 = !DILocation(line: 259, column: 43, scope: !12584)
!12588 = !DILocation(line: 259, column: 14, scope: !12585)
!12589 = distinct !{!12589, !12582, !12590}
!12590 = !DILocation(line: 263, column: 9, scope: !12580)
!12591 = !DILocation(line: 271, column: 15, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12575, file: !12491, line: 266, column: 7)
!12593 = !DILocation(line: 271, column: 9, scope: !12592)
!12594 = !DILocation(line: 273, column: 15, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12596, file: !12491, line: 273, column: 14)
!12596 = distinct !DILexicalBlock(scope: !12592, file: !12491, line: 272, column: 9)
!12597 = !DILocation(line: 273, column: 29, scope: !12595)
!12598 = !DILocation(line: 273, column: 43, scope: !12595)
!12599 = !DILocation(line: 273, column: 14, scope: !12596)
!12600 = distinct !{!12600, !12593, !12601}
!12601 = !DILocation(line: 277, column: 9, scope: !12592)
!12602 = !DILocation(line: 282, column: 27, scope: !12603)
!12603 = distinct !DILexicalBlock(scope: !12496, file: !12491, line: 282, column: 6)
!12604 = !DILocation(line: 282, column: 43, scope: !12603)
!12605 = !DILocation(line: 282, column: 69, scope: !12603)
!12606 = !DILocation(line: 282, column: 6, scope: !12496)
!12607 = !DILocation(line: 289, column: 9, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12609, file: !12491, line: 289, column: 8)
!12609 = distinct !DILexicalBlock(scope: !12603, file: !12491, line: 283, column: 3)
!12610 = !DILocation(line: 289, column: 39, scope: !12608)
!12611 = !DILocation(line: 289, column: 60, scope: !12608)
!12612 = !DILocation(line: 290, column: 9, scope: !12608)
!12613 = !DILocation(line: 290, column: 39, scope: !12608)
!12614 = !DILocation(line: 290, column: 60, scope: !12608)
!12615 = !DILocation(line: 290, column: 70, scope: !12608)
!12616 = !DILocation(line: 290, column: 78, scope: !12608)
!12617 = !DILocation(line: 290, column: 100, scope: !12608)
!12618 = !DILocation(line: 289, column: 8, scope: !12609)
!12619 = !DILocation(line: 293, column: 11, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12621, file: !12491, line: 293, column: 10)
!12621 = distinct !DILexicalBlock(scope: !12608, file: !12491, line: 291, column: 5)
!12622 = !DILocation(line: 293, column: 57, scope: !12620)
!12623 = !DILocation(line: 293, column: 80, scope: !12620)
!12624 = !DILocation(line: 293, column: 89, scope: !12620)
!12625 = !DILocation(line: 293, column: 10, scope: !12621)
!12626 = !DILocation(line: 307, column: 30, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12628, file: !12491, line: 307, column: 10)
!12628 = distinct !DILexicalBlock(scope: !12608, file: !12491, line: 305, column: 5)
!12629 = !DILocation(line: 307, column: 39, scope: !12627)
!12630 = !DILocation(line: 307, column: 10, scope: !12628)
!12631 = !DILocation(line: 310, column: 9, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12627, file: !12491, line: 308, column: 7)
!12633 = !DILocation(line: 313, column: 21, scope: !12632)
!12634 = !DILocation(line: 316, column: 9, scope: !12632)
!12635 = !DILocation(line: 316, column: 15, scope: !12632)
!12636 = !DILocation(line: 316, column: 51, scope: !12632)
!12637 = !DILocation(line: 318, column: 15, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12639, file: !12491, line: 318, column: 14)
!12639 = distinct !DILexicalBlock(scope: !12632, file: !12491, line: 317, column: 9)
!12640 = !DILocation(line: 318, column: 29, scope: !12638)
!12641 = !DILocation(line: 318, column: 43, scope: !12638)
!12642 = !DILocation(line: 318, column: 14, scope: !12639)
!12643 = distinct !{!12643, !12634, !12644}
!12644 = !DILocation(line: 322, column: 9, scope: !12632)
!12645 = !DILocation(line: 330, column: 9, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12627, file: !12491, line: 328, column: 7)
!12647 = !DILocation(line: 333, column: 21, scope: !12646)
!12648 = !DILocation(line: 336, column: 9, scope: !12646)
!12649 = !DILocation(line: 336, column: 15, scope: !12646)
!12650 = !DILocation(line: 338, column: 15, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12652, file: !12491, line: 338, column: 14)
!12652 = distinct !DILexicalBlock(scope: !12646, file: !12491, line: 337, column: 9)
!12653 = !DILocation(line: 338, column: 29, scope: !12651)
!12654 = !DILocation(line: 338, column: 43, scope: !12651)
!12655 = !DILocation(line: 338, column: 14, scope: !12652)
!12656 = distinct !{!12656, !12648, !12657}
!12657 = !DILocation(line: 342, column: 9, scope: !12646)
!12658 = !DILocation(line: 0, scope: !12608)
!12659 = !DILocation(line: 347, column: 27, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12496, file: !12491, line: 347, column: 6)
!12661 = !DILocation(line: 347, column: 43, scope: !12660)
!12662 = !DILocation(line: 347, column: 69, scope: !12660)
!12663 = !DILocation(line: 347, column: 6, scope: !12496)
!12664 = !DILocation(line: 353, column: 28, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12666, file: !12491, line: 353, column: 8)
!12666 = distinct !DILexicalBlock(scope: !12660, file: !12491, line: 348, column: 3)
!12667 = !DILocation(line: 353, column: 37, scope: !12665)
!12668 = !DILocation(line: 353, column: 8, scope: !12666)
!12669 = !DILocation(line: 356, column: 7, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12665, file: !12491, line: 354, column: 5)
!12671 = !DILocation(line: 359, column: 19, scope: !12670)
!12672 = !DILocation(line: 362, column: 7, scope: !12670)
!12673 = !DILocation(line: 362, column: 13, scope: !12670)
!12674 = !DILocation(line: 362, column: 49, scope: !12670)
!12675 = !DILocation(line: 364, column: 13, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12677, file: !12491, line: 364, column: 12)
!12677 = distinct !DILexicalBlock(scope: !12670, file: !12491, line: 363, column: 7)
!12678 = !DILocation(line: 364, column: 27, scope: !12676)
!12679 = !DILocation(line: 364, column: 41, scope: !12676)
!12680 = !DILocation(line: 364, column: 12, scope: !12677)
!12681 = distinct !{!12681, !12672, !12682}
!12682 = !DILocation(line: 368, column: 7, scope: !12670)
!12683 = !DILocation(line: 373, column: 7, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12665, file: !12491, line: 371, column: 5)
!12685 = !DILocation(line: 376, column: 19, scope: !12684)
!12686 = !DILocation(line: 379, column: 7, scope: !12684)
!12687 = !DILocation(line: 379, column: 13, scope: !12684)
!12688 = !DILocation(line: 381, column: 13, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12690, file: !12491, line: 381, column: 12)
!12690 = distinct !DILexicalBlock(scope: !12684, file: !12491, line: 380, column: 7)
!12691 = !DILocation(line: 381, column: 27, scope: !12689)
!12692 = !DILocation(line: 381, column: 41, scope: !12689)
!12693 = !DILocation(line: 381, column: 12, scope: !12690)
!12694 = distinct !{!12694, !12686, !12695}
!12695 = !DILocation(line: 385, column: 7, scope: !12684)
!12696 = !DILocation(line: 389, column: 27, scope: !12527)
!12697 = !DILocation(line: 389, column: 43, scope: !12527)
!12698 = !DILocation(line: 389, column: 69, scope: !12527)
!12699 = !DILocation(line: 389, column: 6, scope: !12496)
!12700 = !DILocation(line: 0, scope: !12526)
!12701 = !DILocation(line: 398, column: 8, scope: !12532)
!12702 = !DILocation(line: 398, column: 8, scope: !12526)
!12703 = !DILocation(line: 400, column: 7, scope: !12530)
!12704 = !DILocation(line: 400, column: 7, scope: !12531)
!12705 = !DILocation(line: 402, column: 5, scope: !12531)
!12706 = !DILocation(line: 404, column: 8, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12526, file: !12491, line: 404, column: 8)
!12708 = !DILocation(line: 404, column: 8, scope: !12526)
!12709 = !DILocation(line: 407, column: 7, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12707, file: !12491, line: 405, column: 5)
!12711 = !DILocation(line: 410, column: 19, scope: !12710)
!12712 = !DILocation(line: 412, column: 7, scope: !12710)
!12713 = !DILocation(line: 412, column: 13, scope: !12710)
!12714 = !DILocation(line: 414, column: 13, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12716, file: !12491, line: 414, column: 12)
!12716 = distinct !DILexicalBlock(scope: !12710, file: !12491, line: 413, column: 7)
!12717 = !DILocation(line: 414, column: 27, scope: !12715)
!12718 = !DILocation(line: 414, column: 40, scope: !12715)
!12719 = !DILocation(line: 414, column: 12, scope: !12716)
!12720 = distinct !{!12720, !12712, !12721}
!12721 = !DILocation(line: 418, column: 7, scope: !12710)
!12722 = !DILocation(line: 422, column: 5, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12724, file: !12491, line: 422, column: 5)
!12724 = distinct !DILexicalBlock(scope: !12526, file: !12491, line: 422, column: 5)
!12725 = !DILocation(line: 422, column: 5, scope: !12724)
!12726 = !DILocation(line: 422, column: 5, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12723, file: !12491, line: 422, column: 5)
!12728 = !DILocation(line: 422, column: 5, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12730, file: !12491, line: 422, column: 5)
!12730 = distinct !DILexicalBlock(scope: !12723, file: !12491, line: 422, column: 5)
!12731 = !DILocation(line: 422, column: 5, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12730, file: !12491, line: 422, column: 5)
!12733 = !DILocation(line: 0, scope: !12723)
!12734 = !DILocation(line: 424, column: 28, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12526, file: !12491, line: 424, column: 8)
!12736 = !DILocation(line: 424, column: 38, scope: !12735)
!12737 = !DILocation(line: 0, scope: !12735)
!12738 = !DILocation(line: 424, column: 8, scope: !12526)
!12739 = !DILocation(line: 430, column: 13, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12735, file: !12491, line: 425, column: 5)
!12741 = !DILocation(line: 430, column: 49, scope: !12740)
!12742 = !DILocation(line: 430, column: 7, scope: !12740)
!12743 = !DILocation(line: 432, column: 13, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12745, file: !12491, line: 432, column: 12)
!12745 = distinct !DILexicalBlock(scope: !12740, file: !12491, line: 431, column: 7)
!12746 = !DILocation(line: 432, column: 27, scope: !12744)
!12747 = !DILocation(line: 432, column: 41, scope: !12744)
!12748 = !DILocation(line: 432, column: 12, scope: !12745)
!12749 = distinct !{!12749, !12742, !12750}
!12750 = !DILocation(line: 436, column: 7, scope: !12740)
!12751 = !DILocation(line: 444, column: 13, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12735, file: !12491, line: 439, column: 5)
!12753 = !DILocation(line: 444, column: 7, scope: !12752)
!12754 = !DILocation(line: 446, column: 13, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12756, file: !12491, line: 446, column: 12)
!12756 = distinct !DILexicalBlock(scope: !12752, file: !12491, line: 445, column: 7)
!12757 = !DILocation(line: 446, column: 27, scope: !12755)
!12758 = !DILocation(line: 446, column: 41, scope: !12755)
!12759 = !DILocation(line: 446, column: 12, scope: !12756)
!12760 = distinct !{!12760, !12753, !12761}
!12761 = !DILocation(line: 450, column: 7, scope: !12752)
!12762 = !DILocation(line: 454, column: 8, scope: !12526)
!12763 = !DILocation(line: 456, column: 7, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12765, file: !12491, line: 455, column: 5)
!12765 = distinct !DILexicalBlock(scope: !12526, file: !12491, line: 454, column: 8)
!12766 = !DILocation(line: 457, column: 5, scope: !12764)
!12767 = !DILocation(line: 462, column: 31, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12496, file: !12491, line: 462, column: 7)
!12769 = !DILocation(line: 462, column: 41, scope: !12768)
!12770 = !DILocation(line: 462, column: 7, scope: !12496)
!12771 = !DILocation(line: 465, column: 8, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12773, file: !12491, line: 465, column: 8)
!12773 = distinct !DILexicalBlock(scope: !12768, file: !12491, line: 463, column: 3)
!12774 = !DILocation(line: 465, column: 38, scope: !12772)
!12775 = !DILocation(line: 465, column: 8, scope: !12773)
!12776 = !DILocation(line: 467, column: 44, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12778, file: !12491, line: 467, column: 10)
!12778 = distinct !DILexicalBlock(scope: !12772, file: !12491, line: 466, column: 5)
!12779 = !DILocation(line: 0, scope: !12777)
!12780 = !DILocation(line: 467, column: 10, scope: !12778)
!12781 = !DILocation(line: 483, column: 15, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !12777, file: !12491, line: 468, column: 7)
!12783 = !DILocation(line: 483, column: 9, scope: !12782)
!12784 = !DILocation(line: 485, column: 15, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12786, file: !12491, line: 485, column: 14)
!12786 = distinct !DILexicalBlock(scope: !12782, file: !12491, line: 484, column: 9)
!12787 = !DILocation(line: 485, column: 29, scope: !12785)
!12788 = !DILocation(line: 485, column: 43, scope: !12785)
!12789 = !DILocation(line: 485, column: 14, scope: !12786)
!12790 = distinct !{!12790, !12783, !12791}
!12791 = !DILocation(line: 489, column: 9, scope: !12782)
!12792 = !DILocation(line: 492, column: 9, scope: !12782)
!12793 = !DILocation(line: 498, column: 9, scope: !12782)
!12794 = !DILocation(line: 501, column: 21, scope: !12782)
!12795 = !DILocation(line: 504, column: 9, scope: !12782)
!12796 = !DILocation(line: 504, column: 15, scope: !12782)
!12797 = !DILocation(line: 504, column: 51, scope: !12782)
!12798 = !DILocation(line: 506, column: 15, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12800, file: !12491, line: 506, column: 14)
!12800 = distinct !DILexicalBlock(scope: !12782, file: !12491, line: 505, column: 9)
!12801 = !DILocation(line: 506, column: 29, scope: !12799)
!12802 = !DILocation(line: 506, column: 43, scope: !12799)
!12803 = !DILocation(line: 506, column: 14, scope: !12800)
!12804 = distinct !{!12804, !12795, !12805}
!12805 = !DILocation(line: 510, column: 9, scope: !12782)
!12806 = !DILocation(line: 521, column: 15, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12777, file: !12491, line: 513, column: 7)
!12808 = !DILocation(line: 521, column: 9, scope: !12807)
!12809 = !DILocation(line: 523, column: 15, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12811, file: !12491, line: 523, column: 14)
!12811 = distinct !DILexicalBlock(scope: !12807, file: !12491, line: 522, column: 9)
!12812 = !DILocation(line: 523, column: 29, scope: !12810)
!12813 = !DILocation(line: 523, column: 43, scope: !12810)
!12814 = !DILocation(line: 523, column: 14, scope: !12811)
!12815 = distinct !{!12815, !12808, !12816}
!12816 = !DILocation(line: 527, column: 9, scope: !12807)
!12817 = !DILocation(line: 533, column: 44, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12819, file: !12491, line: 533, column: 10)
!12819 = distinct !DILexicalBlock(scope: !12772, file: !12491, line: 531, column: 5)
!12820 = !DILocation(line: 533, column: 10, scope: !12819)
!12821 = !DILocation(line: 540, column: 27, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12818, file: !12491, line: 538, column: 7)
!12823 = !DILocation(line: 551, column: 14, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12822, file: !12491, line: 550, column: 13)
!12825 = !DILocation(line: 551, column: 81, scope: !12824)
!12826 = !DILocation(line: 551, column: 55, scope: !12824)
!12827 = !DILocation(line: 551, column: 92, scope: !12824)
!12828 = !DILocation(line: 552, column: 14, scope: !12824)
!12829 = !DILocation(line: 552, column: 80, scope: !12824)
!12830 = !DILocation(line: 552, column: 53, scope: !12824)
!12831 = !DILocation(line: 552, column: 111, scope: !12824)
!12832 = !DILocation(line: 553, column: 14, scope: !12824)
!12833 = !DILocation(line: 553, column: 80, scope: !12824)
!12834 = !DILocation(line: 553, column: 86, scope: !12824)
!12835 = !DILocation(line: 553, column: 53, scope: !12824)
!12836 = !DILocation(line: 553, column: 111, scope: !12824)
!12837 = !DILocation(line: 554, column: 14, scope: !12824)
!12838 = !DILocation(line: 554, column: 82, scope: !12824)
!12839 = !DILocation(line: 554, column: 101, scope: !12824)
!12840 = !DILocation(line: 554, column: 53, scope: !12824)
!12841 = !DILocation(line: 554, column: 126, scope: !12824)
!12842 = !DILocation(line: 555, column: 14, scope: !12824)
!12843 = !DILocation(line: 555, column: 80, scope: !12824)
!12844 = !DILocation(line: 555, column: 85, scope: !12824)
!12845 = !DILocation(line: 555, column: 53, scope: !12824)
!12846 = !DILocation(line: 550, column: 13, scope: !12822)
!12847 = !DILocation(line: 563, column: 3, scope: !12496)
!12848 = !DILocation(line: 564, column: 1, scope: !12496)
!12849 = !DISubprogram(name: "HAL_GetTick", scope: !12850, file: !12850, line: 234, type: !7455, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!12850 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12851 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12491, file: !12491, line: 591, type: !12852, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12863)
!12852 = !DISubroutineType(types: !12853)
!12853 = !{!12494, !12854, !108}
!12854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12855, size: 32)
!12855 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12501, line: 92, baseType: !12856)
!12856 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12501, line: 75, size: 160, elements: !12857)
!12857 = !{!12858, !12859, !12860, !12861, !12862}
!12858 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12856, file: !12501, line: 77, baseType: !108, size: 32)
!12859 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12856, file: !12501, line: 80, baseType: !108, size: 32, offset: 32)
!12860 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12856, file: !12501, line: 83, baseType: !108, size: 32, offset: 64)
!12861 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12856, file: !12501, line: 86, baseType: !108, size: 32, offset: 96)
!12862 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12856, file: !12501, line: 89, baseType: !108, size: 32, offset: 128)
!12863 = !{!12864, !12865, !12866}
!12864 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12851, file: !12491, line: 591, type: !12854)
!12865 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12851, file: !12491, line: 591, type: !108)
!12866 = !DILocalVariable(name: "tickstart", scope: !12851, file: !12491, line: 593, type: !108)
!12867 = !DILocation(line: 0, scope: !12851)
!12868 = !DILocation(line: 596, column: 24, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12851, file: !12491, line: 596, column: 6)
!12870 = !DILocation(line: 596, column: 6, scope: !12851)
!12871 = !DILocation(line: 610, column: 17, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12851, file: !12491, line: 610, column: 6)
!12873 = !DILocation(line: 610, column: 15, scope: !12872)
!12874 = !DILocation(line: 610, column: 6, scope: !12851)
!12875 = !DILocation(line: 613, column: 5, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12872, file: !12491, line: 611, column: 3)
!12877 = !DILocation(line: 617, column: 8, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12876, file: !12491, line: 617, column: 8)
!12879 = !DILocation(line: 617, column: 34, scope: !12878)
!12880 = !DILocation(line: 617, column: 8, scope: !12876)
!12881 = !DILocation(line: 624, column: 27, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12851, file: !12491, line: 624, column: 6)
!12883 = !DILocation(line: 624, column: 38, scope: !12882)
!12884 = !DILocation(line: 624, column: 60, scope: !12882)
!12885 = !DILocation(line: 624, column: 6, scope: !12851)
!12886 = !DILocation(line: 628, column: 40, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !12888, file: !12491, line: 628, column: 8)
!12888 = distinct !DILexicalBlock(scope: !12882, file: !12491, line: 625, column: 3)
!12889 = !DILocation(line: 628, column: 63, scope: !12887)
!12890 = !DILocation(line: 628, column: 8, scope: !12888)
!12891 = !DILocation(line: 630, column: 7, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12887, file: !12491, line: 629, column: 5)
!12893 = !DILocation(line: 633, column: 29, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12888, file: !12491, line: 633, column: 8)
!12895 = !DILocation(line: 631, column: 5, scope: !12892)
!12896 = !DILocation(line: 633, column: 40, scope: !12894)
!12897 = !DILocation(line: 633, column: 63, scope: !12894)
!12898 = !DILocation(line: 633, column: 8, scope: !12888)
!12899 = !DILocation(line: 635, column: 7, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12894, file: !12491, line: 634, column: 5)
!12901 = !DILocation(line: 636, column: 5, scope: !12900)
!12902 = !DILocation(line: 639, column: 5, scope: !12888)
!12903 = !DILocation(line: 643, column: 27, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12851, file: !12491, line: 643, column: 6)
!12905 = !DILocation(line: 640, column: 3, scope: !12888)
!12906 = !DILocation(line: 643, column: 38, scope: !12904)
!12907 = !DILocation(line: 643, column: 62, scope: !12904)
!12908 = !DILocation(line: 643, column: 6, scope: !12851)
!12909 = !DILocation(line: 648, column: 27, scope: !12910)
!12910 = distinct !DILexicalBlock(scope: !12911, file: !12491, line: 648, column: 8)
!12911 = distinct !DILexicalBlock(scope: !12904, file: !12491, line: 644, column: 3)
!12912 = !DILocation(line: 648, column: 8, scope: !12911)
!12913 = !DILocation(line: 651, column: 10, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12915, file: !12491, line: 651, column: 10)
!12915 = distinct !DILexicalBlock(scope: !12910, file: !12491, line: 649, column: 5)
!12916 = !DILocation(line: 651, column: 46, scope: !12914)
!12917 = !DILocation(line: 651, column: 10, scope: !12915)
!12918 = !DILocation(line: 661, column: 10, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12920, file: !12491, line: 661, column: 10)
!12920 = distinct !DILexicalBlock(scope: !12921, file: !12491, line: 659, column: 5)
!12921 = distinct !DILexicalBlock(scope: !12910, file: !12491, line: 657, column: 13)
!12922 = !DILocation(line: 661, column: 46, scope: !12919)
!12923 = !DILocation(line: 661, column: 10, scope: !12920)
!12924 = !DILocation(line: 670, column: 10, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12926, file: !12491, line: 670, column: 10)
!12926 = distinct !DILexicalBlock(scope: !12921, file: !12491, line: 668, column: 5)
!12927 = !DILocation(line: 670, column: 46, scope: !12925)
!12928 = !DILocation(line: 670, column: 10, scope: !12926)
!12929 = !DILocation(line: 676, column: 5, scope: !12911)
!12930 = !DILocation(line: 679, column: 17, scope: !12911)
!12931 = !DILocation(line: 681, column: 5, scope: !12911)
!12932 = !DILocation(line: 681, column: 12, scope: !12911)
!12933 = !DILocation(line: 681, column: 65, scope: !12911)
!12934 = !DILocation(line: 681, column: 78, scope: !12911)
!12935 = !DILocation(line: 681, column: 42, scope: !12911)
!12936 = !DILocation(line: 683, column: 12, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12938, file: !12491, line: 683, column: 11)
!12938 = distinct !DILexicalBlock(scope: !12911, file: !12491, line: 682, column: 5)
!12939 = !DILocation(line: 683, column: 26, scope: !12937)
!12940 = !DILocation(line: 683, column: 39, scope: !12937)
!12941 = !DILocation(line: 683, column: 11, scope: !12938)
!12942 = distinct !{!12942, !12931, !12943}
!12943 = !DILocation(line: 687, column: 5, scope: !12911)
!12944 = !DILocation(line: 691, column: 17, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12851, file: !12491, line: 691, column: 6)
!12946 = !DILocation(line: 691, column: 15, scope: !12945)
!12947 = !DILocation(line: 691, column: 6, scope: !12851)
!12948 = !DILocation(line: 694, column: 5, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12945, file: !12491, line: 692, column: 3)
!12950 = !DILocation(line: 698, column: 8, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12949, file: !12491, line: 698, column: 8)
!12952 = !DILocation(line: 698, column: 34, scope: !12951)
!12953 = !DILocation(line: 698, column: 8, scope: !12949)
!12954 = !DILocation(line: 705, column: 27, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12851, file: !12491, line: 705, column: 6)
!12956 = !DILocation(line: 705, column: 38, scope: !12955)
!12957 = !DILocation(line: 705, column: 61, scope: !12955)
!12958 = !DILocation(line: 705, column: 6, scope: !12851)
!12959 = !DILocation(line: 708, column: 5, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12955, file: !12491, line: 706, column: 3)
!12961 = !DILocation(line: 712, column: 27, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12851, file: !12491, line: 712, column: 6)
!12963 = !DILocation(line: 709, column: 3, scope: !12960)
!12964 = !DILocation(line: 712, column: 38, scope: !12962)
!12965 = !DILocation(line: 712, column: 61, scope: !12962)
!12966 = !DILocation(line: 712, column: 6, scope: !12851)
!12967 = !DILocation(line: 715, column: 5, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12962, file: !12491, line: 713, column: 3)
!12969 = !DILocation(line: 716, column: 3, scope: !12968)
!12970 = !DILocation(line: 719, column: 21, scope: !12851)
!12971 = !DILocation(line: 719, column: 70, scope: !12851)
!12972 = !DILocation(line: 719, column: 91, scope: !12851)
!12973 = !DILocation(line: 719, column: 50, scope: !12851)
!12974 = !DILocation(line: 719, column: 47, scope: !12851)
!12975 = !DILocation(line: 719, column: 19, scope: !12851)
!12976 = !DILocation(line: 722, column: 17, scope: !12851)
!12977 = !DILocation(line: 722, column: 3, scope: !12851)
!12978 = !DILocation(line: 724, column: 3, scope: !12851)
!12979 = !DILocation(line: 725, column: 1, scope: !12851)
!12980 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12491, file: !12491, line: 885, type: !7455, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12981)
!12981 = !{!12982, !12983, !12984, !12985}
!12982 = !DILocalVariable(name: "pllm", scope: !12980, file: !12491, line: 887, type: !108)
!12983 = !DILocalVariable(name: "pllvco", scope: !12980, file: !12491, line: 887, type: !108)
!12984 = !DILocalVariable(name: "pllp", scope: !12980, file: !12491, line: 887, type: !108)
!12985 = !DILocalVariable(name: "sysclockfreq", scope: !12980, file: !12491, line: 888, type: !108)
!12986 = !DILocation(line: 0, scope: !12980)
!12987 = !DILocation(line: 891, column: 16, scope: !12980)
!12988 = !DILocation(line: 891, column: 21, scope: !12980)
!12989 = !DILocation(line: 891, column: 3, scope: !12980)
!12990 = !DILocation(line: 901, column: 7, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12992, file: !12491, line: 899, column: 5)
!12992 = distinct !DILexicalBlock(scope: !12980, file: !12491, line: 892, column: 3)
!12993 = !DILocation(line: 907, column: 19, scope: !12994)
!12994 = distinct !DILexicalBlock(scope: !12992, file: !12491, line: 904, column: 5)
!12995 = !DILocation(line: 907, column: 27, scope: !12994)
!12996 = !DILocation(line: 908, column: 10, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12994, file: !12491, line: 908, column: 10)
!12998 = !DILocation(line: 908, column: 40, scope: !12997)
!12999 = !DILocation(line: 0, scope: !12997)
!13000 = !DILocation(line: 918, column: 23, scope: !12994)
!13001 = !DILocation(line: 918, column: 82, scope: !12994)
!13002 = !DILocation(line: 920, column: 28, scope: !12994)
!13003 = !DILocation(line: 921, column: 7, scope: !12994)
!13004 = !DILocation(line: 0, scope: !12992)
!13005 = !DILocation(line: 929, column: 3, scope: !12980)
!13006 = !DISubprogram(name: "HAL_InitTick", scope: !12850, file: !12850, line: 223, type: !13007, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!13007 = !DISubroutineType(types: !13008)
!13008 = !{!12494, !108}
!13009 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12491, file: !12491, line: 775, type: !13010, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13012)
!13010 = !DISubroutineType(types: !13011)
!13011 = !{null, !108, !108, !108}
!13012 = !{!13013, !13014, !13015, !13016, !13026, !13030}
!13013 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !13009, file: !12491, line: 775, type: !108)
!13014 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !13009, file: !12491, line: 775, type: !108)
!13015 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !13009, file: !12491, line: 775, type: !108)
!13016 = !DILocalVariable(name: "GPIO_InitStruct", scope: !13009, file: !12491, line: 777, type: !13017)
!13017 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !13018, line: 62, baseType: !13019)
!13018 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13019 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13018, line: 46, size: 160, elements: !13020)
!13020 = !{!13021, !13022, !13023, !13024, !13025}
!13021 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !13019, file: !13018, line: 48, baseType: !108, size: 32)
!13022 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !13019, file: !13018, line: 51, baseType: !108, size: 32, offset: 32)
!13023 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !13019, file: !13018, line: 54, baseType: !108, size: 32, offset: 64)
!13024 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !13019, file: !13018, line: 57, baseType: !108, size: 32, offset: 96)
!13025 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !13019, file: !13018, line: 60, baseType: !108, size: 32, offset: 128)
!13026 = !DILocalVariable(name: "tmpreg", scope: !13027, file: !12491, line: 787, type: !431)
!13027 = distinct !DILexicalBlock(scope: !13028, file: !12491, line: 787, column: 5)
!13028 = distinct !DILexicalBlock(scope: !13029, file: !12491, line: 783, column: 3)
!13029 = distinct !DILexicalBlock(scope: !13009, file: !12491, line: 782, column: 6)
!13030 = !DILocalVariable(name: "tmpreg", scope: !13031, file: !12491, line: 811, type: !431)
!13031 = distinct !DILexicalBlock(scope: !13032, file: !12491, line: 811, column: 5)
!13032 = distinct !DILexicalBlock(scope: !13029, file: !12491, line: 807, column: 3)
!13033 = !DILocation(line: 0, scope: !13009)
!13034 = !DILocation(line: 777, column: 3, scope: !13009)
!13035 = !DILocation(line: 777, column: 20, scope: !13009)
!13036 = !DILocation(line: 782, column: 15, scope: !13029)
!13037 = !DILocation(line: 782, column: 6, scope: !13009)
!13038 = !DILocation(line: 787, column: 5, scope: !13027)
!13039 = !DILocation(line: 787, column: 5, scope: !13028)
!13040 = !DILocation(line: 790, column: 21, scope: !13028)
!13041 = !DILocation(line: 790, column: 25, scope: !13028)
!13042 = !DILocation(line: 791, column: 21, scope: !13028)
!13043 = !DILocation(line: 791, column: 26, scope: !13028)
!13044 = !DILocation(line: 792, column: 21, scope: !13028)
!13045 = !DILocation(line: 792, column: 27, scope: !13028)
!13046 = !DILocation(line: 793, column: 21, scope: !13028)
!13047 = !DILocation(line: 793, column: 26, scope: !13028)
!13048 = !DILocation(line: 794, column: 21, scope: !13028)
!13049 = !DILocation(line: 794, column: 31, scope: !13028)
!13050 = !DILocation(line: 795, column: 5, scope: !13028)
!13051 = !DILocation(line: 798, column: 5, scope: !13028)
!13052 = !DILocation(line: 804, column: 3, scope: !13028)
!13053 = !DILocation(line: 811, column: 5, scope: !13031)
!13054 = !DILocation(line: 811, column: 5, scope: !13032)
!13055 = !DILocation(line: 814, column: 21, scope: !13032)
!13056 = !DILocation(line: 814, column: 25, scope: !13032)
!13057 = !DILocation(line: 815, column: 21, scope: !13032)
!13058 = !DILocation(line: 815, column: 26, scope: !13032)
!13059 = !DILocation(line: 816, column: 21, scope: !13032)
!13060 = !DILocation(line: 816, column: 27, scope: !13032)
!13061 = !DILocation(line: 817, column: 21, scope: !13032)
!13062 = !DILocation(line: 817, column: 26, scope: !13032)
!13063 = !DILocation(line: 818, column: 21, scope: !13032)
!13064 = !DILocation(line: 818, column: 31, scope: !13032)
!13065 = !DILocation(line: 819, column: 5, scope: !13032)
!13066 = !DILocation(line: 822, column: 5, scope: !13032)
!13067 = !DILocation(line: 0, scope: !13029)
!13068 = !DILocation(line: 830, column: 1, scope: !13009)
!13069 = !DISubprogram(name: "HAL_GPIO_Init", scope: !13018, file: !13018, line: 224, type: !13070, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!13070 = !DISubroutineType(types: !13071)
!13071 = !{null, !3120, !13072}
!13072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13017, size: 32)
!13073 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12491, file: !12491, line: 841, type: !337, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !256)
!13074 = !DILocation(line: 843, column: 38, scope: !13073)
!13075 = !DILocation(line: 844, column: 1, scope: !13073)
!13076 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12491, file: !12491, line: 850, type: !337, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !256)
!13077 = !DILocation(line: 852, column: 38, scope: !13076)
!13078 = !DILocation(line: 853, column: 1, scope: !13076)
!13079 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12491, file: !12491, line: 941, type: !7455, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !256)
!13080 = !DILocation(line: 943, column: 10, scope: !13079)
!13081 = !DILocation(line: 943, column: 3, scope: !13079)
!13082 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12491, file: !12491, line: 952, type: !7455, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !256)
!13083 = !DILocation(line: 955, column: 11, scope: !13082)
!13084 = !DILocation(line: 955, column: 56, scope: !13082)
!13085 = !DILocation(line: 955, column: 78, scope: !13082)
!13086 = !DILocation(line: 955, column: 36, scope: !13082)
!13087 = !DILocation(line: 955, column: 33, scope: !13082)
!13088 = !DILocation(line: 955, column: 3, scope: !13082)
!13089 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12491, file: !12491, line: 964, type: !7455, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !256)
!13090 = !DILocation(line: 967, column: 11, scope: !13089)
!13091 = !DILocation(line: 967, column: 55, scope: !13089)
!13092 = !DILocation(line: 967, column: 77, scope: !13089)
!13093 = !DILocation(line: 967, column: 35, scope: !13089)
!13094 = !DILocation(line: 967, column: 32, scope: !13089)
!13095 = !DILocation(line: 967, column: 3, scope: !13089)
!13096 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12491, file: !12491, line: 977, type: !13097, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13099)
!13097 = !DISubroutineType(types: !13098)
!13098 = !{null, !12499}
!13099 = !{!13100}
!13100 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13096, file: !12491, line: 977, type: !12499)
!13101 = !DILocation(line: 0, scope: !13096)
!13102 = !DILocation(line: 980, column: 22, scope: !13096)
!13103 = !DILocation(line: 980, column: 37, scope: !13096)
!13104 = !DILocation(line: 983, column: 12, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13096, file: !12491, line: 983, column: 6)
!13106 = !DILocation(line: 983, column: 15, scope: !13105)
!13107 = !DILocation(line: 983, column: 31, scope: !13105)
!13108 = !DILocation(line: 983, column: 6, scope: !13096)
!13109 = !DILocation(line: 985, column: 24, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13105, file: !12491, line: 984, column: 3)
!13111 = !DILocation(line: 985, column: 33, scope: !13110)
!13112 = !DILocation(line: 986, column: 3, scope: !13110)
!13113 = !DILocation(line: 987, column: 17, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13105, file: !12491, line: 987, column: 11)
!13115 = !DILocation(line: 987, column: 20, scope: !13114)
!13116 = !DILocation(line: 987, column: 35, scope: !13114)
!13117 = !DILocation(line: 0, scope: !13114)
!13118 = !DILocation(line: 987, column: 11, scope: !13105)
!13119 = !DILocation(line: 989, column: 33, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13114, file: !12491, line: 988, column: 3)
!13121 = !DILocation(line: 990, column: 3, scope: !13120)
!13122 = !DILocation(line: 993, column: 33, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13114, file: !12491, line: 992, column: 3)
!13124 = !DILocation(line: 997, column: 12, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13096, file: !12491, line: 997, column: 6)
!13126 = !DILocation(line: 997, column: 15, scope: !13125)
!13127 = !DILocation(line: 1003, column: 24, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13125, file: !12491, line: 1002, column: 3)
!13129 = !DILocation(line: 1003, column: 33, scope: !13128)
!13130 = !DILocation(line: 1006, column: 61, scope: !13096)
!13131 = !DILocation(line: 1006, column: 81, scope: !13096)
!13132 = !DILocation(line: 1006, column: 22, scope: !13096)
!13133 = !DILocation(line: 1006, column: 42, scope: !13096)
!13134 = !DILocation(line: 1009, column: 12, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13096, file: !12491, line: 1009, column: 6)
!13136 = !DILocation(line: 1009, column: 17, scope: !13135)
!13137 = !DILocation(line: 1009, column: 35, scope: !13135)
!13138 = !DILocation(line: 1009, column: 6, scope: !13096)
!13139 = !DILocation(line: 1011, column: 24, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13135, file: !12491, line: 1010, column: 3)
!13141 = !DILocation(line: 1011, column: 33, scope: !13140)
!13142 = !DILocation(line: 1012, column: 3, scope: !13140)
!13143 = !DILocation(line: 1013, column: 17, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13135, file: !12491, line: 1013, column: 11)
!13145 = !DILocation(line: 1013, column: 22, scope: !13144)
!13146 = !DILocation(line: 1013, column: 39, scope: !13144)
!13147 = !DILocation(line: 0, scope: !13144)
!13148 = !DILocation(line: 1013, column: 11, scope: !13135)
!13149 = !DILocation(line: 1015, column: 33, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13144, file: !12491, line: 1014, column: 3)
!13151 = !DILocation(line: 1016, column: 3, scope: !13150)
!13152 = !DILocation(line: 1019, column: 33, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13144, file: !12491, line: 1018, column: 3)
!13154 = !DILocation(line: 1023, column: 12, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13096, file: !12491, line: 1023, column: 6)
!13156 = !DILocation(line: 1023, column: 16, scope: !13155)
!13157 = !DILocation(line: 1029, column: 24, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13155, file: !12491, line: 1028, column: 3)
!13159 = !DILocation(line: 1029, column: 33, scope: !13158)
!13160 = !DILocation(line: 1033, column: 12, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13096, file: !12491, line: 1033, column: 6)
!13162 = !DILocation(line: 1033, column: 15, scope: !13161)
!13163 = !DILocation(line: 1033, column: 30, scope: !13161)
!13164 = !DILocation(line: 1033, column: 6, scope: !13096)
!13165 = !DILocation(line: 1039, column: 28, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13161, file: !12491, line: 1038, column: 3)
!13167 = !DILocation(line: 1039, column: 37, scope: !13166)
!13168 = !DILocation(line: 1041, column: 54, scope: !13096)
!13169 = !DILocation(line: 1041, column: 62, scope: !13096)
!13170 = !DILocation(line: 1041, column: 26, scope: !13096)
!13171 = !DILocation(line: 1041, column: 36, scope: !13096)
!13172 = !DILocation(line: 1042, column: 49, scope: !13096)
!13173 = !DILocation(line: 1042, column: 57, scope: !13096)
!13174 = !DILocation(line: 1042, column: 26, scope: !13096)
!13175 = !DILocation(line: 1042, column: 31, scope: !13096)
!13176 = !DILocation(line: 1043, column: 50, scope: !13096)
!13177 = !DILocation(line: 1043, column: 78, scope: !13096)
!13178 = !DILocation(line: 1043, column: 26, scope: !13096)
!13179 = !DILocation(line: 1043, column: 31, scope: !13096)
!13180 = !DILocation(line: 1044, column: 52, scope: !13096)
!13181 = !DILocation(line: 1044, column: 102, scope: !13096)
!13182 = !DILocation(line: 1044, column: 109, scope: !13096)
!13183 = !DILocation(line: 1044, column: 26, scope: !13096)
!13184 = !DILocation(line: 1044, column: 31, scope: !13096)
!13185 = !DILocation(line: 1045, column: 50, scope: !13096)
!13186 = !DILocation(line: 1045, column: 78, scope: !13096)
!13187 = !DILocation(line: 1045, column: 26, scope: !13096)
!13188 = !DILocation(line: 1045, column: 31, scope: !13096)
!13189 = !DILocation(line: 1046, column: 1, scope: !13096)
!13190 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12491, file: !12491, line: 1056, type: !13191, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13193)
!13191 = !DISubroutineType(types: !13192)
!13192 = !{null, !12854, !1004}
!13193 = !{!13194, !13195}
!13194 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13190, file: !12491, line: 1056, type: !12854)
!13195 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13190, file: !12491, line: 1056, type: !1004)
!13196 = !DILocation(line: 0, scope: !13190)
!13197 = !DILocation(line: 1059, column: 22, scope: !13190)
!13198 = !DILocation(line: 1059, column: 32, scope: !13190)
!13199 = !DILocation(line: 1062, column: 53, scope: !13190)
!13200 = !DILocation(line: 1062, column: 58, scope: !13190)
!13201 = !DILocation(line: 1062, column: 22, scope: !13190)
!13202 = !DILocation(line: 1062, column: 35, scope: !13190)
!13203 = !DILocation(line: 1065, column: 54, scope: !13190)
!13204 = !DILocation(line: 1065, column: 59, scope: !13190)
!13205 = !DILocation(line: 1065, column: 22, scope: !13190)
!13206 = !DILocation(line: 1065, column: 36, scope: !13190)
!13207 = !DILocation(line: 1068, column: 55, scope: !13190)
!13208 = !DILocation(line: 1068, column: 60, scope: !13190)
!13209 = !DILocation(line: 1068, column: 22, scope: !13190)
!13210 = !DILocation(line: 1068, column: 37, scope: !13190)
!13211 = !DILocation(line: 1071, column: 56, scope: !13190)
!13212 = !DILocation(line: 1071, column: 79, scope: !13190)
!13213 = !DILocation(line: 1071, column: 22, scope: !13190)
!13214 = !DILocation(line: 1071, column: 37, scope: !13190)
!13215 = !DILocation(line: 1074, column: 34, scope: !13190)
!13216 = !DILocation(line: 1074, column: 38, scope: !13190)
!13217 = !DILocation(line: 1074, column: 14, scope: !13190)
!13218 = !DILocation(line: 1075, column: 1, scope: !13190)
!13219 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12491, file: !12491, line: 1082, type: !337, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !256)
!13220 = !DILocation(line: 1085, column: 6, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !13219, file: !12491, line: 1085, column: 6)
!13222 = !DILocation(line: 1085, column: 6, scope: !13219)
!13223 = !DILocation(line: 1088, column: 5, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13221, file: !12491, line: 1086, column: 3)
!13225 = !DILocation(line: 1091, column: 5, scope: !13224)
!13226 = !DILocation(line: 1092, column: 3, scope: !13224)
!13227 = !DILocation(line: 1093, column: 1, scope: !13219)
!13228 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12491, file: !12491, line: 1099, type: !337, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !256)
!13229 = !DILocation(line: 1104, column: 1, scope: !13228)
!13230 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13231, file: !13231, line: 257, type: !7465, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13232)
!13231 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13232 = !{!13233}
!13233 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13230, file: !13231, line: 257, type: !108)
!13234 = !DILocation(line: 0, scope: !13230)
!13235 = !DILocation(line: 260, column: 3, scope: !13230)
!13236 = !DILocation(line: 261, column: 1, scope: !13230)
!13237 = distinct !DISubprogram(name: "LL_InitTick", scope: !13238, file: !13238, line: 260, type: !10886, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13239)
!13238 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13239 = !{!13240, !13241}
!13240 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13237, file: !13238, line: 260, type: !108)
!13241 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13237, file: !13238, line: 260, type: !108)
!13242 = !DILocation(line: 0, scope: !13237)
!13243 = !DILocation(line: 263, column: 46, scope: !13237)
!13244 = !DILocation(line: 263, column: 55, scope: !13237)
!13245 = !DILocation(line: 263, column: 18, scope: !13237)
!13246 = !DILocation(line: 264, column: 18, scope: !13237)
!13247 = !DILocation(line: 265, column: 18, scope: !13237)
!13248 = !DILocation(line: 267, column: 1, scope: !13237)
!13249 = distinct !DISubprogram(name: "LL_mDelay", scope: !13231, file: !13231, line: 273, type: !7465, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13250)
!13250 = !{!13251, !13252}
!13251 = !DILocalVariable(name: "Delay", arg: 1, scope: !13249, file: !13231, line: 273, type: !108)
!13252 = !DILocalVariable(name: "tmp", scope: !13249, file: !13231, line: 275, type: !431)
!13253 = !DILocation(line: 0, scope: !13249)
!13254 = !DILocation(line: 275, column: 3, scope: !13249)
!13255 = !DILocation(line: 275, column: 18, scope: !13249)
!13256 = !DILocation(line: 275, column: 33, scope: !13249)
!13257 = !DILocation(line: 277, column: 10, scope: !13249)
!13258 = !DILocation(line: 280, column: 12, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13249, file: !13231, line: 280, column: 6)
!13260 = !DILocation(line: 285, column: 3, scope: !13249)
!13261 = !DILocation(line: 287, column: 18, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13263, file: !13231, line: 287, column: 8)
!13263 = distinct !DILexicalBlock(scope: !13249, file: !13231, line: 286, column: 3)
!13264 = !DILocation(line: 292, column: 1, scope: !13249)
!13265 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13231, file: !13231, line: 323, type: !7465, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13266)
!13266 = !{!13267}
!13267 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13265, file: !13231, line: 323, type: !108)
!13268 = !DILocation(line: 0, scope: !13265)
!13269 = !DILocation(line: 326, column: 19, scope: !13265)
!13270 = !DILocation(line: 327, column: 1, scope: !13265)
!13271 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13231, file: !13231, line: 338, type: !13272, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13275)
!13272 = !DISubroutineType(types: !13273)
!13273 = !{!13274, !108}
!13274 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !951, line: 201, baseType: !950)
!13275 = !{!13276, !13277, !13278, !13279, !13280}
!13276 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13271, file: !13231, line: 338, type: !108)
!13277 = !DILocalVariable(name: "timeout", scope: !13271, file: !13231, line: 340, type: !108)
!13278 = !DILocalVariable(name: "getlatency", scope: !13271, file: !13231, line: 341, type: !108)
!13279 = !DILocalVariable(name: "latency", scope: !13271, file: !13231, line: 342, type: !108)
!13280 = !DILocalVariable(name: "status", scope: !13271, file: !13231, line: 343, type: !13274)
!13281 = !DILocation(line: 0, scope: !13271)
!13282 = !DILocation(line: 347, column: 21, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13271, file: !13231, line: 347, column: 6)
!13284 = !DILocation(line: 347, column: 6, scope: !13271)
!13285 = !DILocation(line: 353, column: 8, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13287, file: !13231, line: 353, column: 8)
!13287 = distinct !DILexicalBlock(scope: !13283, file: !13231, line: 352, column: 3)
!13288 = !DILocation(line: 353, column: 40, scope: !13286)
!13289 = !DILocation(line: 353, column: 8, scope: !13287)
!13290 = !DILocation(line: 356, column: 26, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13292, file: !13231, line: 356, column: 10)
!13292 = distinct !DILexicalBlock(scope: !13286, file: !13231, line: 354, column: 5)
!13293 = !DILocation(line: 356, column: 55, scope: !13291)
!13294 = !DILocation(line: 362, column: 55, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13292, file: !13231, line: 362, column: 10)
!13296 = !DILocation(line: 368, column: 55, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13292, file: !13231, line: 368, column: 10)
!13298 = !DILocation(line: 374, column: 26, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13292, file: !13231, line: 374, column: 10)
!13300 = !DILocation(line: 374, column: 55, scope: !13299)
!13301 = !DILocation(line: 380, column: 28, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13303, file: !13231, line: 380, column: 12)
!13303 = distinct !DILexicalBlock(scope: !13299, file: !13231, line: 379, column: 7)
!13304 = !DILocation(line: 380, column: 57, scope: !13302)
!13305 = !DILocation(line: 387, column: 8, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13287, file: !13231, line: 387, column: 8)
!13307 = !DILocation(line: 387, column: 40, scope: !13306)
!13308 = !DILocation(line: 387, column: 8, scope: !13287)
!13309 = !DILocation(line: 396, column: 26, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13311, file: !13231, line: 396, column: 10)
!13311 = distinct !DILexicalBlock(scope: !13306, file: !13231, line: 388, column: 5)
!13312 = !DILocation(line: 396, column: 55, scope: !13310)
!13313 = !DILocation(line: 402, column: 26, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13311, file: !13231, line: 402, column: 10)
!13315 = !DILocation(line: 402, column: 55, scope: !13314)
!13316 = !DILocation(line: 407, column: 26, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13311, file: !13231, line: 407, column: 10)
!13318 = !DILocation(line: 407, column: 55, scope: !13317)
!13319 = !DILocation(line: 413, column: 28, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13321, file: !13231, line: 413, column: 12)
!13321 = distinct !DILexicalBlock(scope: !13317, file: !13231, line: 412, column: 7)
!13322 = !DILocation(line: 413, column: 57, scope: !13320)
!13323 = !DILocation(line: 0, scope: !13287)
!13324 = !DILocation(line: 444, column: 5, scope: !13287)
!13325 = !DILocation(line: 448, column: 5, scope: !13287)
!13326 = !DILocation(line: 451, column: 18, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13287, file: !13231, line: 449, column: 5)
!13328 = !DILocation(line: 452, column: 12, scope: !13327)
!13329 = !DILocation(line: 453, column: 26, scope: !13287)
!13330 = !DILocation(line: 453, column: 38, scope: !13287)
!13331 = !DILocation(line: 453, column: 5, scope: !13327)
!13332 = distinct !{!13332, !13325, !13333}
!13333 = !DILocation(line: 453, column: 54, scope: !13287)
!13334 = !DILocation(line: 0, scope: !13283)
!13335 = !DILocation(line: 464, column: 3, scope: !13271)
!13336 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13337, file: !13337, line: 519, type: !7455, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !256)
!13337 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13338 = !DILocation(line: 521, column: 21, scope: !13336)
!13339 = !DILocation(line: 521, column: 3, scope: !13336)
!13340 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7074, file: !7074, line: 1543, type: !7465, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13341)
!13341 = !{!13342}
!13342 = !DILocalVariable(name: "Latency", arg: 1, scope: !13340, file: !7074, line: 1543, type: !108)
!13343 = !DILocation(line: 0, scope: !13340)
!13344 = !DILocation(line: 1545, column: 3, scope: !13340)
!13345 = !DILocation(line: 1546, column: 1, scope: !13340)
!13346 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7074, file: !7074, line: 1569, type: !7455, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !256)
!13347 = !DILocation(line: 1571, column: 21, scope: !13346)
!13348 = !DILocation(line: 1571, column: 3, scope: !13346)
!13349 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13231, file: !13231, line: 483, type: !13350, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13366)
!13350 = !DISubroutineType(types: !13351)
!13351 = !{!13274, !13352, !13359}
!13352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13353, size: 32)
!13353 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13238, line: 114, baseType: !13354)
!13354 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13238, line: 94, size: 96, elements: !13355)
!13355 = !{!13356, !13357, !13358}
!13356 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13354, file: !13238, line: 96, baseType: !108, size: 32)
!13357 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13354, file: !13238, line: 102, baseType: !108, size: 32, offset: 32)
!13358 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13354, file: !13238, line: 109, baseType: !108, size: 32, offset: 64)
!13359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13360, size: 32)
!13360 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13238, line: 139, baseType: !13361)
!13361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13238, line: 119, size: 96, elements: !13362)
!13362 = !{!13363, !13364, !13365}
!13363 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13361, file: !13238, line: 121, baseType: !108, size: 32)
!13364 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13361, file: !13238, line: 127, baseType: !108, size: 32, offset: 32)
!13365 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13361, file: !13238, line: 133, baseType: !108, size: 32, offset: 64)
!13366 = !{!13367, !13368, !13369, !13370}
!13367 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13349, file: !13231, line: 483, type: !13352)
!13368 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13349, file: !13231, line: 484, type: !13359)
!13369 = !DILocalVariable(name: "status", scope: !13349, file: !13231, line: 486, type: !13274)
!13370 = !DILocalVariable(name: "pllfreq", scope: !13349, file: !13231, line: 487, type: !108)
!13371 = !DILocation(line: 0, scope: !13349)
!13372 = !DILocation(line: 490, column: 6, scope: !13373)
!13373 = distinct !DILexicalBlock(scope: !13349, file: !13231, line: 490, column: 6)
!13374 = !DILocation(line: 490, column: 25, scope: !13373)
!13375 = !DILocation(line: 490, column: 6, scope: !13349)
!13376 = !DILocation(line: 493, column: 15, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13373, file: !13231, line: 491, column: 3)
!13378 = !DILocation(line: 496, column: 8, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13377, file: !13231, line: 496, column: 8)
!13380 = !DILocation(line: 496, column: 29, scope: !13379)
!13381 = !DILocation(line: 496, column: 8, scope: !13377)
!13382 = !DILocation(line: 498, column: 7, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13379, file: !13231, line: 497, column: 5)
!13384 = !DILocation(line: 499, column: 7, scope: !13383)
!13385 = !DILocation(line: 499, column: 14, scope: !13383)
!13386 = !DILocation(line: 499, column: 35, scope: !13383)
!13387 = distinct !{!13387, !13384, !13388}
!13388 = !DILocation(line: 502, column: 7, scope: !13383)
!13389 = !DILocation(line: 506, column: 76, scope: !13377)
!13390 = !DILocation(line: 506, column: 103, scope: !13377)
!13391 = !DILocation(line: 507, column: 54, scope: !13377)
!13392 = !DILocation(line: 506, column: 5, scope: !13377)
!13393 = !DILocation(line: 510, column: 14, scope: !13377)
!13394 = !DILocation(line: 511, column: 3, scope: !13377)
!13395 = !DILocation(line: 0, scope: !13373)
!13396 = !DILocation(line: 518, column: 3, scope: !13349)
!13397 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13231, file: !13231, line: 642, type: !13398, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13400)
!13398 = !DISubroutineType(types: !13399)
!13399 = !{!13274}
!13400 = !{!13401}
!13401 = !DILocalVariable(name: "status", scope: !13397, file: !13231, line: 644, type: !13274)
!13402 = !DILocation(line: 0, scope: !13397)
!13403 = !DILocation(line: 647, column: 6, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13397, file: !13231, line: 647, column: 6)
!13405 = !DILocation(line: 647, column: 27, scope: !13404)
!13406 = !DILocation(line: 663, column: 6, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13397, file: !13231, line: 663, column: 6)
!13408 = !DILocation(line: 663, column: 30, scope: !13407)
!13409 = !DILocation(line: 663, column: 6, scope: !13397)
!13410 = !DILocation(line: 669, column: 3, scope: !13397)
!13411 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13231, file: !13231, line: 611, type: !13412, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13414)
!13412 = !DISubroutineType(types: !13413)
!13413 = !{!108, !108, !13352}
!13414 = !{!13415, !13416, !13417}
!13415 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13411, file: !13231, line: 611, type: !108)
!13416 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13411, file: !13231, line: 611, type: !13352)
!13417 = !DILocalVariable(name: "pllfreq", scope: !13411, file: !13231, line: 613, type: !108)
!13418 = !DILocation(line: 0, scope: !13411)
!13419 = !DILocation(line: 622, column: 56, scope: !13411)
!13420 = !DILocation(line: 622, column: 61, scope: !13411)
!13421 = !DILocation(line: 622, column: 32, scope: !13411)
!13422 = !DILocation(line: 626, column: 45, scope: !13411)
!13423 = !DILocation(line: 626, column: 50, scope: !13411)
!13424 = !DILocation(line: 626, column: 21, scope: !13411)
!13425 = !DILocation(line: 630, column: 47, scope: !13411)
!13426 = !DILocation(line: 630, column: 82, scope: !13411)
!13427 = !DILocation(line: 630, column: 21, scope: !13411)
!13428 = !DILocation(line: 633, column: 3, scope: !13411)
!13429 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10226, file: !10226, line: 3007, type: !7455, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !256)
!13430 = !DILocation(line: 3009, column: 11, scope: !13429)
!13431 = !DILocation(line: 3009, column: 44, scope: !13429)
!13432 = !DILocation(line: 3009, column: 3, scope: !13429)
!13433 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10226, file: !10226, line: 2987, type: !337, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !256)
!13434 = !DILocation(line: 2989, column: 3, scope: !13433)
!13435 = !DILocation(line: 2990, column: 1, scope: !13433)
!13436 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10226, file: !10226, line: 4304, type: !10360, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13437)
!13437 = !{!13438, !13439, !13440, !13441}
!13438 = !DILocalVariable(name: "Source", arg: 1, scope: !13436, file: !10226, line: 4304, type: !108)
!13439 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13436, file: !10226, line: 4304, type: !108)
!13440 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13436, file: !10226, line: 4304, type: !108)
!13441 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13436, file: !10226, line: 4304, type: !108)
!13442 = !DILocation(line: 0, scope: !13436)
!13443 = !DILocation(line: 4306, column: 3, scope: !13436)
!13444 = !DILocation(line: 4308, column: 3, scope: !13436)
!13445 = !DILocation(line: 4312, column: 1, scope: !13436)
!13446 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13231, file: !13231, line: 681, type: !13447, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13449)
!13447 = !DISubroutineType(types: !13448)
!13448 = !{!13274, !108, !13359}
!13449 = !{!13450, !13451, !13452, !13453}
!13450 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13446, file: !13231, line: 681, type: !108)
!13451 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13446, file: !13231, line: 681, type: !13359)
!13452 = !DILocalVariable(name: "status", scope: !13446, file: !13231, line: 683, type: !13274)
!13453 = !DILocalVariable(name: "hclk_frequency", scope: !13446, file: !13231, line: 684, type: !108)
!13454 = !DILocation(line: 0, scope: !13446)
!13455 = !DILocation(line: 691, column: 20, scope: !13446)
!13456 = !DILocation(line: 694, column: 6, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13446, file: !13231, line: 694, column: 6)
!13458 = !DILocation(line: 694, column: 22, scope: !13457)
!13459 = !DILocation(line: 694, column: 6, scope: !13446)
!13460 = !DILocation(line: 697, column: 14, scope: !13461)
!13461 = distinct !DILexicalBlock(scope: !13457, file: !13231, line: 695, column: 3)
!13462 = !DILocation(line: 701, column: 13, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13446, file: !13231, line: 701, column: 6)
!13464 = !DILocation(line: 701, column: 6, scope: !13446)
!13465 = !DILocation(line: 704, column: 5, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13463, file: !13231, line: 702, column: 3)
!13467 = !DILocation(line: 705, column: 5, scope: !13466)
!13468 = !DILocation(line: 705, column: 12, scope: !13466)
!13469 = !DILocation(line: 705, column: 33, scope: !13466)
!13470 = distinct !{!13470, !13467, !13471}
!13471 = !DILocation(line: 708, column: 5, scope: !13466)
!13472 = !DILocation(line: 711, column: 49, scope: !13466)
!13473 = !DILocation(line: 711, column: 5, scope: !13466)
!13474 = !DILocation(line: 712, column: 5, scope: !13466)
!13475 = !DILocation(line: 713, column: 5, scope: !13466)
!13476 = !DILocation(line: 713, column: 12, scope: !13466)
!13477 = !DILocation(line: 713, column: 37, scope: !13466)
!13478 = distinct !{!13478, !13475, !13479}
!13479 = !DILocation(line: 716, column: 5, scope: !13466)
!13480 = !DILocation(line: 719, column: 50, scope: !13466)
!13481 = !DILocation(line: 719, column: 5, scope: !13466)
!13482 = !DILocation(line: 720, column: 50, scope: !13466)
!13483 = !DILocation(line: 720, column: 5, scope: !13466)
!13484 = !DILocation(line: 721, column: 3, scope: !13466)
!13485 = !DILocation(line: 724, column: 6, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13446, file: !13231, line: 724, column: 6)
!13487 = !DILocation(line: 724, column: 22, scope: !13486)
!13488 = !DILocation(line: 724, column: 6, scope: !13446)
!13489 = !DILocation(line: 727, column: 14, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13486, file: !13231, line: 725, column: 3)
!13491 = !DILocation(line: 728, column: 3, scope: !13490)
!13492 = !DILocation(line: 731, column: 13, scope: !13493)
!13493 = distinct !DILexicalBlock(scope: !13446, file: !13231, line: 731, column: 6)
!13494 = !DILocation(line: 731, column: 6, scope: !13446)
!13495 = !DILocation(line: 733, column: 5, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13493, file: !13231, line: 732, column: 3)
!13497 = !DILocation(line: 734, column: 3, scope: !13496)
!13498 = !DILocation(line: 736, column: 3, scope: !13446)
!13499 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10226, file: !10226, line: 4184, type: !337, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !256)
!13500 = !DILocation(line: 4186, column: 3, scope: !13499)
!13501 = !DILocation(line: 4187, column: 1, scope: !13499)
!13502 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10226, file: !10226, line: 4205, type: !7455, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !256)
!13503 = !DILocation(line: 4207, column: 11, scope: !13502)
!13504 = !DILocation(line: 4207, column: 44, scope: !13502)
!13505 = !DILocation(line: 4207, column: 3, scope: !13502)
!13506 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10226, file: !10226, line: 3224, type: !7465, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13507)
!13507 = !{!13508}
!13508 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13506, file: !10226, line: 3224, type: !108)
!13509 = !DILocation(line: 0, scope: !13506)
!13510 = !DILocation(line: 3226, column: 3, scope: !13506)
!13511 = !DILocation(line: 3227, column: 1, scope: !13506)
!13512 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10226, file: !10226, line: 3188, type: !7465, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13513)
!13513 = !{!13514}
!13514 = !DILocalVariable(name: "Source", arg: 1, scope: !13512, file: !10226, line: 3188, type: !108)
!13515 = !DILocation(line: 0, scope: !13512)
!13516 = !DILocation(line: 3190, column: 3, scope: !13512)
!13517 = !DILocation(line: 3191, column: 1, scope: !13512)
!13518 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10226, file: !10226, line: 3204, type: !7455, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !256)
!13519 = !DILocation(line: 3206, column: 21, scope: !13518)
!13520 = !DILocation(line: 3206, column: 3, scope: !13518)
!13521 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10226, file: !10226, line: 3240, type: !7465, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13522)
!13522 = !{!13523}
!13523 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13521, file: !10226, line: 3240, type: !108)
!13524 = !DILocation(line: 0, scope: !13521)
!13525 = !DILocation(line: 3242, column: 3, scope: !13521)
!13526 = !DILocation(line: 3243, column: 1, scope: !13521)
!13527 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10226, file: !10226, line: 3256, type: !7465, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13528)
!13528 = !{!13529}
!13529 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13527, file: !10226, line: 3256, type: !108)
!13530 = !DILocation(line: 0, scope: !13527)
!13531 = !DILocation(line: 3258, column: 3, scope: !13527)
!13532 = !DILocation(line: 3259, column: 1, scope: !13527)
!13533 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10226, file: !10226, line: 5153, type: !7455, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !256)
!13534 = !DILocation(line: 5155, column: 11, scope: !13533)
!13535 = !DILocation(line: 5155, column: 47, scope: !13533)
!13536 = !DILocation(line: 5155, column: 3, scope: !13533)
!13537 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13231, file: !13231, line: 540, type: !13538, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13540)
!13538 = !DISubroutineType(types: !13539)
!13539 = !{!13274, !108, !108, !13352, !13359}
!13540 = !{!13541, !13542, !13543, !13544, !13545, !13546}
!13541 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13537, file: !13231, line: 540, type: !108)
!13542 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13537, file: !13231, line: 540, type: !108)
!13543 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13537, file: !13231, line: 541, type: !13352)
!13544 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13537, file: !13231, line: 541, type: !13359)
!13545 = !DILocalVariable(name: "status", scope: !13537, file: !13231, line: 543, type: !13274)
!13546 = !DILocalVariable(name: "pllfreq", scope: !13537, file: !13231, line: 544, type: !108)
!13547 = !DILocation(line: 0, scope: !13537)
!13548 = !DILocation(line: 551, column: 6, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13537, file: !13231, line: 551, column: 6)
!13550 = !DILocation(line: 551, column: 25, scope: !13549)
!13551 = !DILocation(line: 551, column: 6, scope: !13537)
!13552 = !DILocation(line: 554, column: 15, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13549, file: !13231, line: 552, column: 3)
!13554 = !DILocation(line: 557, column: 8, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13553, file: !13231, line: 557, column: 8)
!13556 = !DILocation(line: 557, column: 29, scope: !13555)
!13557 = !DILocation(line: 557, column: 8, scope: !13553)
!13558 = !DILocation(line: 560, column: 20, scope: !13559)
!13559 = distinct !DILexicalBlock(scope: !13560, file: !13231, line: 560, column: 10)
!13560 = distinct !DILexicalBlock(scope: !13555, file: !13231, line: 558, column: 5)
!13561 = !DILocation(line: 560, column: 10, scope: !13560)
!13562 = !DILocation(line: 562, column: 9, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13559, file: !13231, line: 561, column: 7)
!13564 = !DILocation(line: 563, column: 7, scope: !13563)
!13565 = !DILocation(line: 566, column: 9, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13559, file: !13231, line: 565, column: 7)
!13567 = !DILocation(line: 570, column: 7, scope: !13560)
!13568 = !DILocation(line: 571, column: 7, scope: !13560)
!13569 = !DILocation(line: 571, column: 14, scope: !13560)
!13570 = !DILocation(line: 571, column: 35, scope: !13560)
!13571 = distinct !{!13571, !13568, !13572}
!13572 = !DILocation(line: 574, column: 7, scope: !13560)
!13573 = !DILocation(line: 578, column: 76, scope: !13553)
!13574 = !DILocation(line: 578, column: 103, scope: !13553)
!13575 = !DILocation(line: 579, column: 54, scope: !13553)
!13576 = !DILocation(line: 578, column: 5, scope: !13553)
!13577 = !DILocation(line: 582, column: 14, scope: !13553)
!13578 = !DILocation(line: 583, column: 3, scope: !13553)
!13579 = !DILocation(line: 0, scope: !13549)
!13580 = !DILocation(line: 590, column: 3, scope: !13537)
!13581 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10226, file: !10226, line: 2969, type: !7455, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !256)
!13582 = !DILocation(line: 2971, column: 11, scope: !13581)
!13583 = !DILocation(line: 2971, column: 44, scope: !13581)
!13584 = !DILocation(line: 2971, column: 3, scope: !13581)
!13585 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10226, file: !10226, line: 2929, type: !337, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !256)
!13586 = !DILocation(line: 2931, column: 3, scope: !13585)
!13587 = !DILocation(line: 2932, column: 1, scope: !13585)
!13588 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10226, file: !10226, line: 2939, type: !337, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !256)
!13589 = !DILocation(line: 2941, column: 3, scope: !13588)
!13590 = !DILocation(line: 2942, column: 1, scope: !13588)
!13591 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10226, file: !10226, line: 2949, type: !337, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !256)
!13592 = !DILocation(line: 2951, column: 3, scope: !13591)
!13593 = !DILocation(line: 2952, column: 1, scope: !13591)
!13594 = distinct !DISubprogram(name: "z_device_state_init", scope: !13595, file: !13595, line: 23, type: !337, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !13596)
!13595 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13596 = !{!13597}
!13597 = !DILocalVariable(name: "dev", scope: !13594, file: !13595, line: 25, type: !13598)
!13598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13599, size: 32)
!13599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13600)
!13600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !13601)
!13601 = !{!13602, !13603, !13604, !13605, !13611, !13612}
!13602 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13600, file: !451, line: 380, baseType: !121, size: 32)
!13603 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13600, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!13604 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13600, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!13605 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13600, file: !451, line: 386, baseType: !13606, size: 32, offset: 96)
!13606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13607, size: 32)
!13607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !13608)
!13608 = !{!13609, !13610}
!13609 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13607, file: !451, line: 359, baseType: !190, size: 8)
!13610 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13607, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13611 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13600, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!13612 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13600, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!13613 = !DILocation(line: 0, scope: !13594)
!13614 = !DILocation(line: 31, column: 1, scope: !13594)
!13615 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13595, file: !13595, line: 33, type: !13616, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !13618)
!13616 = !DISubroutineType(types: !13617)
!13617 = !{!13598, !121}
!13618 = !{!13619, !13620}
!13619 = !DILocalVariable(name: "name", arg: 1, scope: !13615, file: !13595, line: 33, type: !121)
!13620 = !DILocalVariable(name: "dev", scope: !13615, file: !13595, line: 35, type: !13598)
!13621 = !DILocation(line: 0, scope: !13615)
!13622 = !DILocation(line: 40, column: 12, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13615, file: !13595, line: 40, column: 6)
!13624 = !DILocation(line: 40, column: 21, scope: !13623)
!13625 = !DILocation(line: 40, column: 25, scope: !13623)
!13626 = !DILocation(line: 40, column: 33, scope: !13623)
!13627 = !DILocation(line: 40, column: 6, scope: !13615)
!13628 = !DILocation(line: 55, column: 2, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13615, file: !13595, line: 55, column: 2)
!13630 = !DILocation(line: 50, column: 7, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13632, file: !13595, line: 50, column: 7)
!13632 = distinct !DILexicalBlock(scope: !13633, file: !13595, line: 49, column: 57)
!13633 = distinct !DILexicalBlock(scope: !13634, file: !13595, line: 49, column: 2)
!13634 = distinct !DILexicalBlock(scope: !13615, file: !13595, line: 49, column: 2)
!13635 = !DILocation(line: 50, column: 30, scope: !13631)
!13636 = !DILocation(line: 50, column: 39, scope: !13631)
!13637 = !DILocation(line: 50, column: 44, scope: !13631)
!13638 = !DILocation(line: 50, column: 7, scope: !13632)
!13639 = !DILocation(line: 49, column: 53, scope: !13633)
!13640 = !DILocation(line: 49, column: 33, scope: !13633)
!13641 = !DILocation(line: 49, column: 2, scope: !13634)
!13642 = distinct !{!13642, !13641, !13643}
!13643 = !DILocation(line: 53, column: 2, scope: !13634)
!13644 = !DILocation(line: 56, column: 7, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13646, file: !13595, line: 56, column: 7)
!13646 = distinct !DILexicalBlock(scope: !13647, file: !13595, line: 55, column: 57)
!13647 = distinct !DILexicalBlock(scope: !13629, file: !13595, line: 55, column: 2)
!13648 = !DILocation(line: 56, column: 30, scope: !13645)
!13649 = !DILocation(line: 56, column: 52, scope: !13645)
!13650 = !DILocation(line: 56, column: 34, scope: !13645)
!13651 = !DILocation(line: 56, column: 58, scope: !13645)
!13652 = !DILocation(line: 56, column: 7, scope: !13646)
!13653 = !DILocation(line: 55, column: 53, scope: !13647)
!13654 = !DILocation(line: 55, column: 33, scope: !13647)
!13655 = distinct !{!13655, !13628, !13656}
!13656 = !DILocation(line: 59, column: 2, scope: !13629)
!13657 = !DILocation(line: 62, column: 1, scope: !13615)
!13658 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13595, file: !13595, line: 93, type: !13659, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !13661)
!13659 = !DISubroutineType(types: !13660)
!13660 = !{!136, !13598}
!13661 = !{!13662}
!13662 = !DILocalVariable(name: "dev", arg: 1, scope: !13658, file: !13595, line: 93, type: !13598)
!13663 = !DILocation(line: 0, scope: !13658)
!13664 = !DILocation(line: 99, column: 10, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13658, file: !13595, line: 99, column: 6)
!13666 = !DILocation(line: 99, column: 6, scope: !13658)
!13667 = !DILocation(line: 103, column: 14, scope: !13658)
!13668 = !DILocation(line: 103, column: 21, scope: !13658)
!13669 = !DILocation(line: 103, column: 33, scope: !13658)
!13670 = !DILocation(line: 103, column: 49, scope: !13658)
!13671 = !DILocation(line: 103, column: 58, scope: !13658)
!13672 = !DILocation(line: 104, column: 1, scope: !13658)
!13673 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13595, file: !13595, line: 87, type: !13674, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !13677)
!13674 = !DISubroutineType(types: !13675)
!13675 = !{!137, !13676}
!13676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13598, size: 32)
!13677 = !{!13678}
!13678 = !DILocalVariable(name: "devices", arg: 1, scope: !13673, file: !13595, line: 87, type: !13676)
!13679 = !DILocation(line: 0, scope: !13673)
!13680 = !DILocation(line: 89, column: 11, scope: !13673)
!13681 = !DILocation(line: 90, column: 2, scope: !13673)
!13682 = distinct !DISubprogram(name: "device_required_foreach", scope: !13595, file: !13595, line: 125, type: !13683, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !13689)
!13683 = !DISubroutineType(types: !13684)
!13684 = !{!107, !13598, !13685, !106}
!13685 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !451, line: 471, baseType: !13686)
!13686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13687, size: 32)
!13687 = !DISubroutineType(types: !13688)
!13688 = !{!107, !13598, !106}
!13689 = !{!13690, !13691, !13692, !13693, !13694}
!13690 = !DILocalVariable(name: "dev", arg: 1, scope: !13682, file: !13595, line: 125, type: !13598)
!13691 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13682, file: !13595, line: 126, type: !13685)
!13692 = !DILocalVariable(name: "context", arg: 3, scope: !13682, file: !13595, line: 127, type: !106)
!13693 = !DILocalVariable(name: "handle_count", scope: !13682, file: !13595, line: 129, type: !137)
!13694 = !DILocalVariable(name: "handles", scope: !13682, file: !13595, line: 130, type: !464)
!13695 = !DILocation(line: 0, scope: !13682)
!13696 = !DILocation(line: 129, column: 2, scope: !13682)
!13697 = !DILocation(line: 129, column: 9, scope: !13682)
!13698 = !DILocation(line: 130, column: 35, scope: !13682)
!13699 = !DILocation(line: 132, column: 33, scope: !13682)
!13700 = !DILocation(line: 132, column: 9, scope: !13682)
!13701 = !DILocation(line: 133, column: 1, scope: !13682)
!13702 = !DILocation(line: 132, column: 2, scope: !13682)
!13703 = distinct !DISubprogram(name: "device_required_handles_get", scope: !451, file: !451, line: 493, type: !13704, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !13706)
!13704 = !DISubroutineType(types: !13705)
!13705 = !{!464, !13598, !2693}
!13706 = !{!13707, !13708, !13709, !13710}
!13707 = !DILocalVariable(name: "dev", arg: 1, scope: !13703, file: !451, line: 493, type: !13598)
!13708 = !DILocalVariable(name: "count", arg: 2, scope: !13703, file: !451, line: 493, type: !2693)
!13709 = !DILocalVariable(name: "rv", scope: !13703, file: !451, line: 495, type: !464)
!13710 = !DILocalVariable(name: "i", scope: !13711, file: !451, line: 498, type: !137)
!13711 = distinct !DILexicalBlock(scope: !13712, file: !451, line: 497, column: 18)
!13712 = distinct !DILexicalBlock(scope: !13703, file: !451, line: 497, column: 6)
!13713 = !DILocation(line: 0, scope: !13703)
!13714 = !DILocation(line: 495, column: 35, scope: !13703)
!13715 = !DILocation(line: 497, column: 9, scope: !13712)
!13716 = !DILocation(line: 497, column: 6, scope: !13703)
!13717 = !DILocation(line: 0, scope: !13711)
!13718 = !DILocation(line: 500, column: 11, scope: !13711)
!13719 = !DILocation(line: 500, column: 40, scope: !13711)
!13720 = !DILocation(line: 502, column: 4, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13711, file: !451, line: 501, column: 40)
!13722 = distinct !{!13722, !13723, !13724}
!13723 = !DILocation(line: 500, column: 3, scope: !13711)
!13724 = !DILocation(line: 503, column: 3, scope: !13711)
!13725 = !DILocation(line: 504, column: 10, scope: !13711)
!13726 = !DILocation(line: 505, column: 2, scope: !13711)
!13727 = !DILocation(line: 507, column: 2, scope: !13703)
!13728 = distinct !DISubprogram(name: "device_visitor", scope: !13595, file: !13595, line: 106, type: !13729, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !13731)
!13729 = !DISubroutineType(types: !13730)
!13730 = !{!107, !464, !137, !13685, !106}
!13731 = !{!13732, !13733, !13734, !13735, !13736, !13738, !13741, !13742}
!13732 = !DILocalVariable(name: "handles", arg: 1, scope: !13728, file: !13595, line: 106, type: !464)
!13733 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13728, file: !13595, line: 107, type: !137)
!13734 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13728, file: !13595, line: 108, type: !13685)
!13735 = !DILocalVariable(name: "context", arg: 4, scope: !13728, file: !13595, line: 109, type: !106)
!13736 = !DILocalVariable(name: "i", scope: !13737, file: !13595, line: 112, type: !137)
!13737 = distinct !DILexicalBlock(scope: !13728, file: !13595, line: 112, column: 2)
!13738 = !DILocalVariable(name: "dh", scope: !13739, file: !13595, line: 113, type: !466)
!13739 = distinct !DILexicalBlock(scope: !13740, file: !13595, line: 112, column: 44)
!13740 = distinct !DILexicalBlock(scope: !13737, file: !13595, line: 112, column: 2)
!13741 = !DILocalVariable(name: "rdev", scope: !13739, file: !13595, line: 114, type: !13598)
!13742 = !DILocalVariable(name: "rc", scope: !13739, file: !13595, line: 115, type: !107)
!13743 = !DILocation(line: 0, scope: !13728)
!13744 = !DILocation(line: 0, scope: !13737)
!13745 = !DILocation(line: 112, column: 23, scope: !13740)
!13746 = !DILocation(line: 112, column: 2, scope: !13737)
!13747 = distinct !{!13747, !13746, !13748}
!13748 = !DILocation(line: 120, column: 2, scope: !13737)
!13749 = !DILocation(line: 113, column: 24, scope: !13739)
!13750 = !DILocation(line: 0, scope: !13739)
!13751 = !DILocation(line: 114, column: 31, scope: !13739)
!13752 = !DILocation(line: 115, column: 12, scope: !13739)
!13753 = !DILocation(line: 117, column: 10, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13739, file: !13595, line: 117, column: 7)
!13755 = !DILocation(line: 112, column: 39, scope: !13740)
!13756 = !DILocation(line: 123, column: 1, scope: !13728)
!13757 = distinct !DISubprogram(name: "device_from_handle", scope: !451, file: !451, line: 439, type: !13758, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !13760)
!13758 = !DISubroutineType(types: !13759)
!13759 = !{!13598, !466}
!13760 = !{!13761, !13762, !13763}
!13761 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13757, file: !451, line: 439, type: !466)
!13762 = !DILocalVariable(name: "dev", scope: !13757, file: !451, line: 443, type: !13598)
!13763 = !DILocalVariable(name: "numdev", scope: !13757, file: !451, line: 444, type: !137)
!13764 = !DILocation(line: 0, scope: !13757)
!13765 = !DILocation(line: 446, column: 7, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13757, file: !451, line: 446, column: 6)
!13767 = !DILocation(line: 446, column: 18, scope: !13766)
!13768 = !DILocation(line: 446, column: 23, scope: !13766)
!13769 = !DILocation(line: 450, column: 2, scope: !13757)
!13770 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13595, file: !13595, line: 135, type: !13683, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !13771)
!13771 = !{!13772, !13773, !13774, !13775, !13776}
!13772 = !DILocalVariable(name: "dev", arg: 1, scope: !13770, file: !13595, line: 135, type: !13598)
!13773 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13770, file: !13595, line: 136, type: !13685)
!13774 = !DILocalVariable(name: "context", arg: 3, scope: !13770, file: !13595, line: 137, type: !106)
!13775 = !DILocalVariable(name: "handle_count", scope: !13770, file: !13595, line: 139, type: !137)
!13776 = !DILocalVariable(name: "handles", scope: !13770, file: !13595, line: 140, type: !464)
!13777 = !DILocation(line: 0, scope: !13770)
!13778 = !DILocation(line: 139, column: 2, scope: !13770)
!13779 = !DILocation(line: 139, column: 9, scope: !13770)
!13780 = !DILocation(line: 140, column: 35, scope: !13770)
!13781 = !DILocation(line: 142, column: 33, scope: !13770)
!13782 = !DILocation(line: 142, column: 9, scope: !13770)
!13783 = !DILocation(line: 143, column: 1, scope: !13770)
!13784 = !DILocation(line: 142, column: 2, scope: !13770)
!13785 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !451, file: !451, line: 573, type: !13704, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !13786)
!13786 = !{!13787, !13788, !13789, !13790, !13791}
!13787 = !DILocalVariable(name: "dev", arg: 1, scope: !13785, file: !451, line: 573, type: !13598)
!13788 = !DILocalVariable(name: "count", arg: 2, scope: !13785, file: !451, line: 573, type: !2693)
!13789 = !DILocalVariable(name: "rv", scope: !13785, file: !451, line: 575, type: !464)
!13790 = !DILocalVariable(name: "region", scope: !13785, file: !451, line: 576, type: !137)
!13791 = !DILocalVariable(name: "i", scope: !13785, file: !451, line: 577, type: !137)
!13792 = !DILocation(line: 0, scope: !13785)
!13793 = !DILocation(line: 575, column: 35, scope: !13785)
!13794 = !DILocation(line: 579, column: 9, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13785, file: !451, line: 579, column: 6)
!13796 = !DILocation(line: 579, column: 6, scope: !13785)
!13797 = !DILocation(line: 582, column: 8, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13799, file: !451, line: 582, column: 8)
!13799 = distinct !DILexicalBlock(scope: !13800, file: !451, line: 581, column: 23)
!13800 = distinct !DILexicalBlock(scope: !13795, file: !451, line: 579, column: 18)
!13801 = !DILocation(line: 582, column: 12, scope: !13798)
!13802 = !DILocation(line: 585, column: 6, scope: !13799)
!13803 = !DILocation(line: 0, scope: !13800)
!13804 = !DILocation(line: 581, column: 17, scope: !13800)
!13805 = !DILocation(line: 581, column: 3, scope: !13800)
!13806 = !DILocation(line: 588, column: 10, scope: !13800)
!13807 = !DILocation(line: 588, column: 16, scope: !13800)
!13808 = !DILocation(line: 589, column: 4, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13800, file: !451, line: 588, column: 39)
!13810 = !DILocation(line: 588, column: 3, scope: !13800)
!13811 = distinct !{!13811, !13810, !13812}
!13812 = !DILocation(line: 590, column: 3, scope: !13800)
!13813 = !DILocation(line: 591, column: 10, scope: !13800)
!13814 = !DILocation(line: 592, column: 2, scope: !13800)
!13815 = !DILocation(line: 575, column: 25, scope: !13785)
!13816 = !DILocation(line: 594, column: 2, scope: !13785)
!13817 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1941, file: !1941, line: 49, type: !13818, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !256)
!13818 = !DISubroutineType(types: !13819)
!13819 = !{!396}
!13820 = !DILocation(line: 51, column: 10, scope: !13817)
!13821 = !DILocation(line: 51, column: 20, scope: !13817)
!13822 = !DILocation(line: 51, column: 2, scope: !13817)
!13823 = distinct !DISubprogram(name: "coredump", scope: !3203, file: !3203, line: 209, type: !13824, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !13970)
!13824 = !DISubroutineType(types: !13825)
!13825 = !{null, !32, !13826, !13870}
!13826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13827, size: 32)
!13827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13828)
!13828 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2821, line: 141, baseType: !13829)
!13829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2821, line: 97, size: 256, elements: !13830)
!13830 = !{!13831}
!13831 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13829, file: !2821, line: 107, baseType: !13832, size: 256)
!13832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2821, line: 98, size: 256, elements: !13833)
!13833 = !{!13834, !13839, !13844, !13849, !13854, !13859, !13864, !13869}
!13834 = !DIDerivedType(tag: DW_TAG_member, scope: !13832, file: !2821, line: 99, baseType: !13835, size: 32)
!13835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13832, file: !2821, line: 99, size: 32, elements: !13836)
!13836 = !{!13837, !13838}
!13837 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13835, file: !2821, line: 99, baseType: !108, size: 32)
!13838 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13835, file: !2821, line: 99, baseType: !108, size: 32)
!13839 = !DIDerivedType(tag: DW_TAG_member, scope: !13832, file: !2821, line: 100, baseType: !13840, size: 32, offset: 32)
!13840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13832, file: !2821, line: 100, size: 32, elements: !13841)
!13841 = !{!13842, !13843}
!13842 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13840, file: !2821, line: 100, baseType: !108, size: 32)
!13843 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13840, file: !2821, line: 100, baseType: !108, size: 32)
!13844 = !DIDerivedType(tag: DW_TAG_member, scope: !13832, file: !2821, line: 101, baseType: !13845, size: 32, offset: 64)
!13845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13832, file: !2821, line: 101, size: 32, elements: !13846)
!13846 = !{!13847, !13848}
!13847 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13845, file: !2821, line: 101, baseType: !108, size: 32)
!13848 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13845, file: !2821, line: 101, baseType: !108, size: 32)
!13849 = !DIDerivedType(tag: DW_TAG_member, scope: !13832, file: !2821, line: 102, baseType: !13850, size: 32, offset: 96)
!13850 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13832, file: !2821, line: 102, size: 32, elements: !13851)
!13851 = !{!13852, !13853}
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13850, file: !2821, line: 102, baseType: !108, size: 32)
!13853 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13850, file: !2821, line: 102, baseType: !108, size: 32)
!13854 = !DIDerivedType(tag: DW_TAG_member, scope: !13832, file: !2821, line: 103, baseType: !13855, size: 32, offset: 128)
!13855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13832, file: !2821, line: 103, size: 32, elements: !13856)
!13856 = !{!13857, !13858}
!13857 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13855, file: !2821, line: 103, baseType: !108, size: 32)
!13858 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13855, file: !2821, line: 103, baseType: !108, size: 32)
!13859 = !DIDerivedType(tag: DW_TAG_member, scope: !13832, file: !2821, line: 104, baseType: !13860, size: 32, offset: 160)
!13860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13832, file: !2821, line: 104, size: 32, elements: !13861)
!13861 = !{!13862, !13863}
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13860, file: !2821, line: 104, baseType: !108, size: 32)
!13863 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13860, file: !2821, line: 104, baseType: !108, size: 32)
!13864 = !DIDerivedType(tag: DW_TAG_member, scope: !13832, file: !2821, line: 105, baseType: !13865, size: 32, offset: 192)
!13865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13832, file: !2821, line: 105, size: 32, elements: !13866)
!13866 = !{!13867, !13868}
!13867 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13865, file: !2821, line: 105, baseType: !108, size: 32)
!13868 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13865, file: !2821, line: 105, baseType: !108, size: 32)
!13869 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13832, file: !2821, line: 106, baseType: !108, size: 32, offset: 224)
!13870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13871, size: 32)
!13871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !13872)
!13872 = !{!13873, !13931, !13943, !13944, !13945, !13946, !13952, !13965}
!13873 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13871, file: !168, line: 247, baseType: !13874, size: 384)
!13874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !13875)
!13875 = !{!13876, !13900, !13907, !13908, !13909, !13918, !13919, !13920}
!13876 = !DIDerivedType(tag: DW_TAG_member, scope: !13874, file: !168, line: 60, baseType: !13877, size: 64)
!13877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13874, file: !168, line: 60, size: 64, elements: !13878)
!13878 = !{!13879, !13894}
!13879 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13877, file: !168, line: 61, baseType: !13880, size: 64)
!13880 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !13881)
!13881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !13882)
!13882 = !{!13883, !13889}
!13883 = !DIDerivedType(tag: DW_TAG_member, scope: !13881, file: !151, line: 38, baseType: !13884, size: 32)
!13884 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13881, file: !151, line: 38, size: 32, elements: !13885)
!13885 = !{!13886, !13888}
!13886 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13884, file: !151, line: 39, baseType: !13887, size: 32)
!13887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13881, size: 32)
!13888 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13884, file: !151, line: 40, baseType: !13887, size: 32)
!13889 = !DIDerivedType(tag: DW_TAG_member, scope: !13881, file: !151, line: 42, baseType: !13890, size: 32, offset: 32)
!13890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13881, file: !151, line: 42, size: 32, elements: !13891)
!13891 = !{!13892, !13893}
!13892 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13890, file: !151, line: 43, baseType: !13887, size: 32)
!13893 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13890, file: !151, line: 44, baseType: !13887, size: 32)
!13894 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13877, file: !168, line: 62, baseType: !13895, size: 64)
!13895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !13896)
!13896 = !{!13897}
!13897 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13895, file: !180, line: 50, baseType: !13898, size: 64)
!13898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13899, size: 64, elements: !185)
!13899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13895, size: 32)
!13900 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13874, file: !168, line: 68, baseType: !13901, size: 32, offset: 64)
!13901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13902, size: 32)
!13902 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !13903)
!13903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !13904)
!13904 = !{!13905}
!13905 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13903, file: !146, line: 232, baseType: !13906, size: 64)
!13906 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !13881)
!13907 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13874, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!13908 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13874, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!13909 = !DIDerivedType(tag: DW_TAG_member, scope: !13874, file: !168, line: 90, baseType: !13910, size: 16, offset: 112)
!13910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13874, file: !168, line: 90, size: 16, elements: !13911)
!13911 = !{!13912, !13917}
!13912 = !DIDerivedType(tag: DW_TAG_member, scope: !13910, file: !168, line: 91, baseType: !13913, size: 16)
!13913 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13910, file: !168, line: 91, size: 16, elements: !13914)
!13914 = !{!13915, !13916}
!13915 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13913, file: !168, line: 96, baseType: !200, size: 8)
!13916 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13913, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!13917 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13910, file: !168, line: 100, baseType: !126, size: 16)
!13918 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13874, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!13919 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13874, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!13920 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13874, file: !168, line: 131, baseType: !13921, size: 192, offset: 192)
!13921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !13922)
!13922 = !{!13923, !13924, !13930}
!13923 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13921, file: !146, line: 245, baseType: !13880, size: 64)
!13924 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13921, file: !146, line: 246, baseType: !13925, size: 32, offset: 64)
!13925 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !13926)
!13926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13927, size: 32)
!13927 = !DISubroutineType(types: !13928)
!13928 = !{null, !13929}
!13929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13921, size: 32)
!13930 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13921, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!13931 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13871, file: !168, line: 250, baseType: !13932, size: 288, offset: 384)
!13932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !13933)
!13933 = !{!13934, !13935, !13936, !13937, !13938, !13939, !13940, !13941, !13942}
!13934 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13932, file: !219, line: 26, baseType: !108, size: 32)
!13935 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13932, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!13936 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13932, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!13937 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13932, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!13938 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13932, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!13939 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13932, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!13940 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13932, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!13941 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13932, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!13942 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13932, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!13943 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13871, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!13944 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13871, file: !168, line: 256, baseType: !13902, size: 64, offset: 704)
!13945 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13871, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!13946 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13871, file: !168, line: 300, baseType: !13947, size: 96, offset: 800)
!13947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !13948)
!13948 = !{!13949, !13950, !13951}
!13949 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13947, file: !168, line: 153, baseType: !22, size: 32)
!13950 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13947, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!13951 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13947, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!13952 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13871, file: !168, line: 325, baseType: !13953, size: 32, offset: 896)
!13953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13954, size: 32)
!13954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !13955)
!13955 = !{!13956, !13962, !13963}
!13956 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13954, file: !142, line: 5074, baseType: !13957, size: 96)
!13957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !13958)
!13958 = !{!13959, !13960, !13961}
!13959 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13957, file: !245, line: 57, baseType: !248, size: 32)
!13960 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13957, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!13961 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13957, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!13962 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13954, file: !142, line: 5075, baseType: !13902, size: 64, offset: 96)
!13963 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13954, file: !142, line: 5076, baseType: !13964, offset: 160)
!13964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!13965 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13871, file: !168, line: 343, baseType: !13966, size: 64, offset: 928)
!13966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !13967)
!13967 = !{!13968, !13969}
!13968 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13966, file: !219, line: 63, baseType: !108, size: 32)
!13969 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13966, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!13970 = !{!13971, !13972, !13973}
!13971 = !DILocalVariable(name: "reason", arg: 1, scope: !13823, file: !3203, line: 209, type: !32)
!13972 = !DILocalVariable(name: "esf", arg: 2, scope: !13823, file: !3203, line: 209, type: !13826)
!13973 = !DILocalVariable(name: "thread", arg: 3, scope: !13823, file: !3203, line: 210, type: !13870)
!13974 = !DILocation(line: 0, scope: !13823)
!13975 = !DILocation(line: 212, column: 1, scope: !13823)
!13976 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3203, file: !3203, line: 214, type: !13977, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !13979)
!13977 = !DISubroutineType(types: !13978)
!13978 = !{null, !22, !22}
!13979 = !{!13980, !13981}
!13980 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13976, file: !3203, line: 214, type: !22)
!13981 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13976, file: !3203, line: 214, type: !22)
!13982 = !DILocation(line: 0, scope: !13976)
!13983 = !DILocation(line: 216, column: 1, scope: !13976)
!13984 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3203, file: !3203, line: 218, type: !13985, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !13987)
!13985 = !DISubroutineType(types: !13986)
!13986 = !{null, !401, !137}
!13987 = !{!13988, !13989}
!13988 = !DILocalVariable(name: "buf", arg: 1, scope: !13984, file: !3203, line: 218, type: !401)
!13989 = !DILocalVariable(name: "buflen", arg: 2, scope: !13984, file: !3203, line: 218, type: !137)
!13990 = !DILocation(line: 0, scope: !13984)
!13991 = !DILocation(line: 220, column: 1, scope: !13984)
!13992 = distinct !DISubprogram(name: "coredump_query", scope: !3203, file: !3203, line: 222, type: !13993, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !13995)
!13993 = !DISubroutineType(types: !13994)
!13994 = !{!107, !3202, !106}
!13995 = !{!13996, !13997}
!13996 = !DILocalVariable(name: "query_id", arg: 1, scope: !13992, file: !3203, line: 222, type: !3202)
!13997 = !DILocalVariable(name: "arg", arg: 2, scope: !13992, file: !3203, line: 222, type: !106)
!13998 = !DILocation(line: 0, scope: !13992)
!13999 = !DILocation(line: 224, column: 2, scope: !13992)
!14000 = distinct !DISubprogram(name: "coredump_cmd", scope: !3203, file: !3203, line: 227, type: !14001, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !14003)
!14001 = !DISubroutineType(types: !14002)
!14002 = !{!107, !3209, !106}
!14003 = !{!14004, !14005}
!14004 = !DILocalVariable(name: "query_id", arg: 1, scope: !14000, file: !3203, line: 227, type: !3209)
!14005 = !DILocalVariable(name: "arg", arg: 2, scope: !14000, file: !3203, line: 227, type: !106)
!14006 = !DILocation(line: 0, scope: !14000)
!14007 = !DILocation(line: 229, column: 2, scope: !14000)
!14008 = distinct !DISubprogram(name: "arch_system_halt", scope: !14009, file: !14009, line: 23, type: !7064, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !14010)
!14009 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14010 = !{!14011}
!14011 = !DILocalVariable(name: "reason", arg: 1, scope: !14008, file: !14009, line: 23, type: !32)
!14012 = !DILocation(line: 0, scope: !14008)
!14013 = !DILocation(line: 55, column: 2, scope: !14014, inlinedAt: !14018)
!14014 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7053, file: !7053, line: 42, type: !7054, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !14015)
!14015 = !{!14016, !14017}
!14016 = !DILocalVariable(name: "key", scope: !14014, file: !7053, line: 44, type: !32)
!14017 = !DILocalVariable(name: "tmp", scope: !14014, file: !7053, line: 53, type: !32)
!14018 = distinct !DILocation(line: 31, column: 8, scope: !14008)
!14019 = !{i64 2225307}
!14020 = !DILocation(line: 0, scope: !14014, inlinedAt: !14018)
!14021 = !DILocation(line: 32, column: 2, scope: !14008)
!14022 = !DILocation(line: 32, column: 2, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14024, file: !14009, line: 32, column: 2)
!14024 = distinct !DILexicalBlock(scope: !14008, file: !14009, line: 32, column: 2)
!14025 = distinct !{!14025, !14026, !14027}
!14026 = !DILocation(line: 32, column: 2, scope: !14024)
!14027 = !DILocation(line: 34, column: 2, scope: !14024)
!14028 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14009, file: !14009, line: 39, type: !14029, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !14031)
!14029 = !DISubroutineType(types: !14030)
!14030 = !{null, !32, !13826}
!14031 = !{!14032, !14033}
!14032 = !DILocalVariable(name: "reason", arg: 1, scope: !14028, file: !14009, line: 39, type: !32)
!14033 = !DILocalVariable(name: "esf", arg: 2, scope: !14028, file: !14009, line: 40, type: !13826)
!14034 = !DILocation(line: 0, scope: !14028)
!14035 = !DILocation(line: 45, column: 2, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !14037, file: !14009, line: 45, column: 2)
!14037 = distinct !DILexicalBlock(scope: !14038, file: !14009, line: 45, column: 2)
!14038 = distinct !DILexicalBlock(scope: !14039, file: !14009, line: 45, column: 2)
!14039 = distinct !DILexicalBlock(scope: !14028, file: !14009, line: 45, column: 2)
!14040 = !DILocation(line: 46, column: 2, scope: !14028)
!14041 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14009, file: !14009, line: 81, type: !7064, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !14042)
!14042 = !{!14043}
!14043 = !DILocalVariable(name: "reason", arg: 1, scope: !14041, file: !14009, line: 81, type: !32)
!14044 = !DILocation(line: 0, scope: !14041)
!14045 = !DILocation(line: 83, column: 2, scope: !14041)
!14046 = distinct !DISubprogram(name: "z_fatal_error", scope: !14009, file: !14009, line: 96, type: !14029, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !14047)
!14047 = !{!14048, !14049, !14050, !14051}
!14048 = !DILocalVariable(name: "reason", arg: 1, scope: !14046, file: !14009, line: 96, type: !32)
!14049 = !DILocalVariable(name: "esf", arg: 2, scope: !14046, file: !14009, line: 96, type: !13826)
!14050 = !DILocalVariable(name: "key", scope: !14046, file: !14009, line: 102, type: !32)
!14051 = !DILocalVariable(name: "thread", scope: !14046, file: !14009, line: 103, type: !13870)
!14052 = !DILocation(line: 0, scope: !14046)
!14053 = !DILocation(line: 55, column: 2, scope: !14014, inlinedAt: !14054)
!14054 = distinct !DILocation(line: 102, column: 21, scope: !14046)
!14055 = !DILocation(line: 0, scope: !14014, inlinedAt: !14054)
!14056 = !DILocation(line: 104, column: 4, scope: !14046)
!14057 = !DILocation(line: 109, column: 2, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14059, file: !14009, line: 109, column: 2)
!14059 = distinct !DILexicalBlock(scope: !14060, file: !14009, line: 109, column: 2)
!14060 = distinct !DILexicalBlock(scope: !14061, file: !14009, line: 109, column: 2)
!14061 = distinct !DILexicalBlock(scope: !14046, file: !14009, line: 109, column: 2)
!14062 = !DILocation(line: 119, column: 11, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14046, file: !14009, line: 119, column: 6)
!14064 = !DILocation(line: 119, column: 20, scope: !14063)
!14065 = !DILocalVariable(name: "esf", arg: 1, scope: !14066, file: !8392, line: 71, type: !13826)
!14066 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8392, file: !8392, line: 71, type: !14067, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !14069)
!14067 = !DISubroutineType(types: !14068)
!14068 = !{!136, !13826}
!14069 = !{!14065}
!14070 = !DILocation(line: 0, scope: !14066, inlinedAt: !14071)
!14071 = distinct !DILocation(line: 119, column: 23, scope: !14063)
!14072 = !DILocation(line: 73, column: 21, scope: !14066, inlinedAt: !14071)
!14073 = !DILocation(line: 73, column: 26, scope: !14066, inlinedAt: !14071)
!14074 = !DILocation(line: 73, column: 9, scope: !14066, inlinedAt: !14071)
!14075 = !DILocation(line: 119, column: 6, scope: !14046)
!14076 = !DILocation(line: 120, column: 3, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14078, file: !14009, line: 120, column: 3)
!14078 = distinct !DILexicalBlock(scope: !14079, file: !14009, line: 120, column: 3)
!14079 = distinct !DILexicalBlock(scope: !14080, file: !14009, line: 120, column: 3)
!14080 = distinct !DILexicalBlock(scope: !14081, file: !14009, line: 120, column: 3)
!14081 = distinct !DILexicalBlock(scope: !14063, file: !14009, line: 119, column: 57)
!14082 = !DILocation(line: 121, column: 2, scope: !14081)
!14083 = !DILocation(line: 124, column: 2, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14085, file: !14009, line: 124, column: 2)
!14085 = distinct !DILexicalBlock(scope: !14086, file: !14009, line: 124, column: 2)
!14086 = distinct !DILexicalBlock(scope: !14087, file: !14009, line: 124, column: 2)
!14087 = distinct !DILexicalBlock(scope: !14046, file: !14009, line: 124, column: 2)
!14088 = !DILocation(line: 131, column: 2, scope: !14046)
!14089 = !DILocation(line: 0, scope: !14066, inlinedAt: !14090)
!14090 = distinct !DILocation(line: 151, column: 24, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14092, file: !14009, line: 151, column: 7)
!14092 = distinct !DILexicalBlock(scope: !14093, file: !14009, line: 146, column: 32)
!14093 = distinct !DILexicalBlock(scope: !14046, file: !14009, line: 146, column: 6)
!14094 = !DILocation(line: 151, column: 7, scope: !14092)
!14095 = !DILocation(line: 151, column: 21, scope: !14091)
!14096 = !DILocalVariable(name: "key", arg: 1, scope: !14097, file: !7053, line: 84, type: !32)
!14097 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7053, file: !7053, line: 84, type: !7064, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !14098)
!14098 = !{!14096}
!14099 = !DILocation(line: 0, scope: !14097, inlinedAt: !14100)
!14100 = distinct !DILocation(line: 186, column: 2, scope: !14046)
!14101 = !DILocation(line: 95, column: 2, scope: !14097, inlinedAt: !14100)
!14102 = !{i64 2226124}
!14103 = !DILocation(line: 189, column: 3, scope: !14104)
!14104 = distinct !DILexicalBlock(scope: !14105, file: !14009, line: 188, column: 41)
!14105 = distinct !DILexicalBlock(scope: !14046, file: !14009, line: 188, column: 6)
!14106 = !DILocation(line: 191, column: 1, scope: !14046)
!14107 = distinct !DISubprogram(name: "k_current_get", scope: !142, file: !142, line: 530, type: !14108, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !256)
!14108 = !DISubroutineType(types: !14109)
!14109 = !{!14110}
!14110 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !13870)
!14111 = !DILocation(line: 535, column: 9, scope: !14107)
!14112 = !DILocation(line: 535, column: 2, scope: !14107)
!14113 = distinct !DISubprogram(name: "reason_to_str", scope: !14009, file: !14009, line: 62, type: !14114, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !14116)
!14114 = !DISubroutineType(types: !14115)
!14115 = !{!121, !32}
!14116 = !{!14117}
!14117 = !DILocalVariable(name: "reason", arg: 1, scope: !14113, file: !14009, line: 62, type: !32)
!14118 = !DILocation(line: 0, scope: !14113)
!14119 = !DILocation(line: 64, column: 2, scope: !14113)
!14120 = !DILocation(line: 0, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14113, file: !14009, line: 64, column: 18)
!14122 = !DILocation(line: 78, column: 1, scope: !14113)
!14123 = distinct !DISubprogram(name: "thread_name_get", scope: !14009, file: !14009, line: 51, type: !14124, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !14126)
!14124 = !DISubroutineType(types: !14125)
!14125 = !{!121, !13870}
!14126 = !{!14127, !14128}
!14127 = !DILocalVariable(name: "thread", arg: 1, scope: !14123, file: !14009, line: 51, type: !13870)
!14128 = !DILocalVariable(name: "thread_name", scope: !14123, file: !14009, line: 53, type: !121)
!14129 = !DILocation(line: 0, scope: !14123)
!14130 = !DILocation(line: 53, column: 36, scope: !14123)
!14131 = !DILocation(line: 53, column: 28, scope: !14123)
!14132 = !DILocation(line: 53, column: 47, scope: !14123)
!14133 = !DILocation(line: 55, column: 19, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14123, file: !14009, line: 55, column: 6)
!14135 = !DILocation(line: 55, column: 28, scope: !14134)
!14136 = !DILocation(line: 55, column: 32, scope: !14134)
!14137 = !DILocation(line: 55, column: 47, scope: !14134)
!14138 = !DILocation(line: 55, column: 6, scope: !14123)
!14139 = !DILocation(line: 57, column: 2, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14134, file: !14009, line: 55, column: 57)
!14141 = !DILocation(line: 59, column: 2, scope: !14123)
!14142 = distinct !DISubprogram(name: "k_thread_abort", scope: !3675, file: !3675, line: 188, type: !14143, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !14145)
!14143 = !DISubroutineType(types: !14144)
!14144 = !{null, !14110}
!14145 = !{!14146}
!14146 = !DILocalVariable(name: "thread", arg: 1, scope: !14142, file: !3675, line: 188, type: !14110)
!14147 = !DILocation(line: 0, scope: !14142)
!14148 = !DILocation(line: 197, column: 2, scope: !14149)
!14149 = distinct !DILexicalBlock(scope: !14142, file: !3675, line: 197, column: 2)
!14150 = !{i64 2154843069}
!14151 = !DILocation(line: 198, column: 2, scope: !14142)
!14152 = !DILocation(line: 199, column: 1, scope: !14142)
!14153 = distinct !DISubprogram(name: "z_current_get", scope: !3675, file: !3675, line: 173, type: !14108, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !256)
!14154 = !DILocation(line: 180, column: 2, scope: !14155)
!14155 = distinct !DILexicalBlock(scope: !14153, file: !3675, line: 180, column: 2)
!14156 = !{i64 2154843001}
!14157 = !DILocation(line: 181, column: 9, scope: !14153)
!14158 = !DILocation(line: 181, column: 2, scope: !14153)
!14159 = distinct !DISubprogram(name: "z_early_memset", scope: !1949, file: !1949, line: 108, type: !14160, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14162)
!14160 = !DISubroutineType(types: !14161)
!14161 = !{null, !106, !107, !137}
!14162 = !{!14163, !14164, !14165}
!14163 = !DILocalVariable(name: "dst", arg: 1, scope: !14159, file: !1949, line: 108, type: !106)
!14164 = !DILocalVariable(name: "c", arg: 2, scope: !14159, file: !1949, line: 108, type: !107)
!14165 = !DILocalVariable(name: "n", arg: 3, scope: !14159, file: !1949, line: 108, type: !137)
!14166 = !DILocation(line: 0, scope: !14159)
!14167 = !DILocation(line: 110, column: 9, scope: !14159)
!14168 = !DILocation(line: 111, column: 1, scope: !14159)
!14169 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1949, file: !1949, line: 121, type: !14170, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14172)
!14170 = !DISubroutineType(types: !14171)
!14171 = !{null, !106, !13, !137}
!14172 = !{!14173, !14174, !14175}
!14173 = !DILocalVariable(name: "dst", arg: 1, scope: !14169, file: !1949, line: 121, type: !106)
!14174 = !DILocalVariable(name: "src", arg: 2, scope: !14169, file: !1949, line: 121, type: !13)
!14175 = !DILocalVariable(name: "n", arg: 3, scope: !14169, file: !1949, line: 121, type: !137)
!14176 = !DILocation(line: 0, scope: !14169)
!14177 = !DILocation(line: 123, column: 9, scope: !14169)
!14178 = !DILocation(line: 124, column: 1, scope: !14169)
!14179 = distinct !DISubprogram(name: "z_bss_zero", scope: !1949, file: !1949, line: 132, type: !337, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !256)
!14180 = !DILocation(line: 143, column: 2, scope: !14179)
!14181 = !DILocation(line: 145, column: 2, scope: !14179)
!14182 = !DILocation(line: 168, column: 1, scope: !14179)
!14183 = distinct !DISubprogram(name: "z_init_cpu", scope: !1949, file: !1949, line: 372, type: !9834, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14184)
!14184 = !{!14185}
!14185 = !DILocalVariable(name: "id", arg: 1, scope: !14183, file: !1949, line: 372, type: !107)
!14186 = !DILocation(line: 0, scope: !14183)
!14187 = !DILocation(line: 374, column: 2, scope: !14183)
!14188 = !DILocation(line: 375, column: 34, scope: !14183)
!14189 = !DILocation(line: 375, column: 19, scope: !14183)
!14190 = !DILocation(line: 375, column: 31, scope: !14183)
!14191 = !DILocation(line: 376, column: 24, scope: !14183)
!14192 = !DILocation(line: 376, column: 19, scope: !14183)
!14193 = !DILocation(line: 376, column: 22, scope: !14183)
!14194 = !DILocation(line: 378, column: 26, scope: !14183)
!14195 = !DILocation(line: 378, column: 4, scope: !14183)
!14196 = !DILocation(line: 378, column: 50, scope: !14183)
!14197 = !DILocation(line: 377, column: 19, scope: !14183)
!14198 = !DILocation(line: 377, column: 29, scope: !14183)
!14199 = !DILocation(line: 384, column: 1, scope: !14183)
!14200 = distinct !DISubprogram(name: "init_idle_thread", scope: !1949, file: !1949, line: 343, type: !9834, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14201)
!14201 = !{!14202, !14203, !14204, !14207}
!14202 = !DILocalVariable(name: "i", arg: 1, scope: !14200, file: !1949, line: 343, type: !107)
!14203 = !DILocalVariable(name: "thread", scope: !14200, file: !1949, line: 345, type: !2041)
!14204 = !DILocalVariable(name: "stack", scope: !14200, file: !1949, line: 346, type: !14205)
!14205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14206, size: 32)
!14206 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !317, line: 44, baseType: !2155)
!14207 = !DILocalVariable(name: "tname", scope: !14200, file: !1949, line: 358, type: !283)
!14208 = !DILocation(line: 0, scope: !14200)
!14209 = !DILocation(line: 345, column: 29, scope: !14200)
!14210 = !DILocation(line: 346, column: 28, scope: !14200)
!14211 = !DILocation(line: 362, column: 37, scope: !14200)
!14212 = !DILocation(line: 362, column: 36, scope: !14200)
!14213 = !DILocation(line: 361, column: 2, scope: !14200)
!14214 = !DILocation(line: 365, column: 2, scope: !14200)
!14215 = !DILocation(line: 370, column: 1, scope: !14200)
!14216 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !319, file: !319, line: 331, type: !14217, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14219)
!14217 = !DISubroutineType(types: !14218)
!14218 = !{!283, !14205}
!14219 = !{!14220}
!14220 = !DILocalVariable(name: "sym", arg: 1, scope: !14216, file: !319, line: 331, type: !14205)
!14221 = !DILocation(line: 0, scope: !14216)
!14222 = !DILocation(line: 333, column: 21, scope: !14216)
!14223 = !DILocation(line: 333, column: 2, scope: !14216)
!14224 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14225, file: !14225, line: 155, type: !14226, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14228)
!14225 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14226 = !DISubroutineType(types: !14227)
!14227 = !{null, !2041}
!14228 = !{!14229}
!14229 = !DILocalVariable(name: "thread", arg: 1, scope: !14224, file: !14225, line: 155, type: !2041)
!14230 = !DILocation(line: 0, scope: !14224)
!14231 = !DILocation(line: 157, column: 15, scope: !14224)
!14232 = !DILocation(line: 157, column: 28, scope: !14224)
!14233 = !DILocation(line: 158, column: 1, scope: !14224)
!14234 = distinct !DISubprogram(name: "z_cstart", scope: !1949, file: !1949, line: 501, type: !337, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14235)
!14235 = !{!14236}
!14236 = !DILocalVariable(name: "dummy_thread", scope: !14234, file: !1949, line: 518, type: !2042)
!14237 = !DILocation(line: 507, column: 2, scope: !14234)
!14238 = !DILocation(line: 43, column: 14, scope: !14239, inlinedAt: !14243)
!14239 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14240, file: !14240, line: 40, type: !337, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14241)
!14240 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14241 = !{!14242}
!14242 = !DILocalVariable(name: "msp", scope: !14239, file: !14240, line: 42, type: !108)
!14243 = distinct !DILocation(line: 44, column: 2, scope: !14244, inlinedAt: !14246)
!14244 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14245, file: !14245, line: 42, type: !337, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !256)
!14245 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14246 = distinct !DILocation(line: 510, column: 2, scope: !14234)
!14247 = !DILocation(line: 43, column: 3, scope: !14239, inlinedAt: !14243)
!14248 = !DILocation(line: 43, column: 60, scope: !14239, inlinedAt: !14243)
!14249 = !DILocation(line: 0, scope: !14239, inlinedAt: !14243)
!14250 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14251, file: !7374, line: 1153, type: !108)
!14251 = distinct !DISubprogram(name: "__set_MSP", scope: !7374, file: !7374, line: 1153, type: !7465, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14252)
!14252 = !{!14250}
!14253 = !DILocation(line: 0, scope: !14251, inlinedAt: !14254)
!14254 = distinct !DILocation(line: 46, column: 2, scope: !14239, inlinedAt: !14243)
!14255 = !DILocation(line: 1155, column: 3, scope: !14251, inlinedAt: !14254)
!14256 = !{i64 3562425}
!14257 = !DILocation(line: 62, column: 11, scope: !14239, inlinedAt: !14243)
!14258 = !DILocation(line: 102, column: 2, scope: !14259, inlinedAt: !14260)
!14259 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8392, file: !8392, line: 97, type: !337, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !256)
!14260 = distinct !DILocation(line: 45, column: 2, scope: !14244, inlinedAt: !14246)
!14261 = !DILocation(line: 108, column: 2, scope: !14259, inlinedAt: !14260)
!14262 = !DILocation(line: 112, column: 2, scope: !14259, inlinedAt: !14260)
!14263 = !DILocation(line: 113, column: 2, scope: !14259, inlinedAt: !14260)
!14264 = !DILocation(line: 114, column: 2, scope: !14259, inlinedAt: !14260)
!14265 = !DILocation(line: 116, column: 2, scope: !14259, inlinedAt: !14260)
!14266 = !DILocation(line: 123, column: 13, scope: !14259, inlinedAt: !14260)
!14267 = !DILocation(line: 46, column: 2, scope: !14244, inlinedAt: !14246)
!14268 = !DILocation(line: 47, column: 2, scope: !14244, inlinedAt: !14246)
!14269 = !DILocation(line: 174, column: 12, scope: !14270, inlinedAt: !14271)
!14270 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8392, file: !8392, line: 169, type: !337, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !256)
!14271 = distinct !DILocation(line: 48, column: 2, scope: !14244, inlinedAt: !14246)
!14272 = !DILocation(line: 179, column: 12, scope: !14270, inlinedAt: !14271)
!14273 = !DILocation(line: 50, column: 2, scope: !14244, inlinedAt: !14246)
!14274 = !DILocation(line: 57, column: 2, scope: !14244, inlinedAt: !14246)
!14275 = !DILocation(line: 518, column: 2, scope: !14234)
!14276 = !DILocation(line: 518, column: 18, scope: !14234)
!14277 = !DILocation(line: 520, column: 2, scope: !14234)
!14278 = !DILocation(line: 523, column: 2, scope: !14234)
!14279 = !DILocation(line: 526, column: 2, scope: !14234)
!14280 = !DILocation(line: 527, column: 2, scope: !14234)
!14281 = !DILocation(line: 543, column: 24, scope: !14234)
!14282 = !DILocation(line: 543, column: 2, scope: !14234)
!14283 = !DILocation(line: 0, scope: !2179)
!14284 = !DILocation(line: 246, column: 15, scope: !2197)
!14285 = !DILocation(line: 246, column: 36, scope: !2196)
!14286 = !DILocation(line: 246, column: 2, scope: !2197)
!14287 = !DILocation(line: 247, column: 37, scope: !2195)
!14288 = !DILocation(line: 0, scope: !2195)
!14289 = !DILocation(line: 248, column: 19, scope: !2195)
!14290 = !DILocation(line: 248, column: 12, scope: !2195)
!14291 = !DILocation(line: 250, column: 11, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !2195, file: !1949, line: 250, column: 7)
!14293 = !DILocation(line: 250, column: 7, scope: !2195)
!14294 = !DILocation(line: 254, column: 11, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14296, file: !1949, line: 254, column: 8)
!14296 = distinct !DILexicalBlock(scope: !14292, file: !1949, line: 250, column: 20)
!14297 = !DILocation(line: 254, column: 8, scope: !14296)
!14298 = !DILocation(line: 255, column: 9, scope: !14299)
!14299 = distinct !DILexicalBlock(scope: !14295, file: !1949, line: 254, column: 17)
!14300 = !DILocation(line: 258, column: 9, scope: !14299)
!14301 = !DILocation(line: 261, column: 28, scope: !14299)
!14302 = !DILocation(line: 261, column: 10, scope: !14299)
!14303 = !DILocation(line: 261, column: 17, scope: !14299)
!14304 = !DILocation(line: 261, column: 26, scope: !14299)
!14305 = !DILocation(line: 262, column: 4, scope: !14299)
!14306 = !DILocation(line: 263, column: 9, scope: !14296)
!14307 = !DILocation(line: 263, column: 16, scope: !14296)
!14308 = !DILocation(line: 263, column: 28, scope: !14296)
!14309 = !DILocation(line: 264, column: 3, scope: !14296)
!14310 = !DILocation(line: 246, column: 60, scope: !2196)
!14311 = distinct !{!14311, !14286, !14312}
!14312 = !DILocation(line: 265, column: 2, scope: !2197)
!14313 = !DILocation(line: 266, column: 1, scope: !2179)
!14314 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !644, file: !644, line: 1814, type: !7408, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14315)
!14315 = !{!14316, !14317}
!14316 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14314, file: !644, line: 1814, type: !912)
!14317 = !DILocalVariable(name: "priority", arg: 2, scope: !14314, file: !644, line: 1814, type: !108)
!14318 = !DILocation(line: 0, scope: !14314)
!14319 = !DILocation(line: 1822, column: 48, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14321, file: !644, line: 1821, column: 3)
!14321 = distinct !DILexicalBlock(scope: !14314, file: !644, line: 1816, column: 7)
!14322 = !DILocation(line: 1822, column: 32, scope: !14320)
!14323 = !DILocation(line: 1822, column: 40, scope: !14320)
!14324 = !DILocation(line: 1822, column: 5, scope: !14320)
!14325 = !DILocation(line: 1822, column: 46, scope: !14320)
!14326 = !DILocation(line: 1824, column: 1, scope: !14314)
!14327 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14245, file: !14245, line: 32, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!14328 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14329, file: !14329, line: 215, type: !14226, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14330)
!14329 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14330 = !{!14331}
!14331 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14328, file: !14329, line: 215, type: !2041)
!14332 = !DILocation(line: 0, scope: !14328)
!14333 = !DILocation(line: 217, column: 21, scope: !14328)
!14334 = !DILocation(line: 217, column: 34, scope: !14328)
!14335 = !DILocation(line: 221, column: 21, scope: !14328)
!14336 = !DILocation(line: 221, column: 34, scope: !14328)
!14337 = !DILocation(line: 223, column: 27, scope: !14328)
!14338 = !DILocation(line: 223, column: 33, scope: !14328)
!14339 = !DILocation(line: 224, column: 27, scope: !14328)
!14340 = !DILocation(line: 224, column: 32, scope: !14328)
!14341 = !DILocation(line: 232, column: 16, scope: !14328)
!14342 = !DILocation(line: 232, column: 30, scope: !14328)
!14343 = !DILocation(line: 239, column: 24, scope: !14328)
!14344 = !DILocation(line: 240, column: 1, scope: !14328)
!14345 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1949, file: !1949, line: 399, type: !14346, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14348)
!14346 = !DISubroutineType(types: !14347)
!14347 = !{!283}
!14348 = !{!14349}
!14349 = !DILocalVariable(name: "stack_ptr", scope: !14345, file: !1949, line: 401, type: !283)
!14350 = !DILocation(line: 404, column: 2, scope: !14345)
!14351 = !DILocation(line: 416, column: 24, scope: !14345)
!14352 = !DILocation(line: 418, column: 14, scope: !14345)
!14353 = !DILocation(line: 0, scope: !14345)
!14354 = !DILocation(line: 423, column: 2, scope: !14345)
!14355 = !DILocation(line: 424, column: 2, scope: !14345)
!14356 = !DILocation(line: 426, column: 2, scope: !14345)
!14357 = !DILocation(line: 428, column: 2, scope: !14345)
!14358 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1949, file: !1949, line: 432, type: !14359, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14361)
!14359 = !DISubroutineType(types: !14360)
!14360 = !{null, !283}
!14361 = !{!14362}
!14362 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14358, file: !1949, line: 432, type: !283)
!14363 = !DILocation(line: 0, scope: !14358)
!14364 = !DILocation(line: 435, column: 2, scope: !14358)
!14365 = !DILocation(line: 445, column: 2, scope: !14358)
!14366 = distinct !DISubprogram(name: "bg_thread_main", scope: !1949, file: !1949, line: 277, type: !326, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14367)
!14367 = !{!14368, !14369, !14370}
!14368 = !DILocalVariable(name: "unused1", arg: 1, scope: !14366, file: !1949, line: 277, type: !106)
!14369 = !DILocalVariable(name: "unused2", arg: 2, scope: !14366, file: !1949, line: 277, type: !106)
!14370 = !DILocalVariable(name: "unused3", arg: 3, scope: !14366, file: !1949, line: 277, type: !106)
!14371 = !DILocation(line: 0, scope: !14366)
!14372 = !DILocation(line: 291, column: 20, scope: !14366)
!14373 = !DILocation(line: 293, column: 2, scope: !14366)
!14374 = !DILocation(line: 297, column: 2, scope: !14366)
!14375 = !DILocation(line: 305, column: 2, scope: !14366)
!14376 = !DILocation(line: 307, column: 2, scope: !14366)
!14377 = !DILocation(line: 330, column: 8, scope: !14366)
!14378 = !DILocation(line: 333, column: 34, scope: !14366)
!14379 = !DILocation(line: 339, column: 1, scope: !14366)
!14380 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2208, file: !2208, line: 45, type: !14381, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14389)
!14381 = !DISubroutineType(types: !14382)
!14382 = !{null, !14383, !106}
!14383 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !142, line: 103, baseType: !14384)
!14384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14385, size: 32)
!14385 = !DISubroutineType(types: !14386)
!14386 = !{null, !14387, !106}
!14387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14388, size: 32)
!14388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2213)
!14389 = !{!14390, !14391}
!14390 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14380, file: !2208, line: 45, type: !14383)
!14391 = !DILocalVariable(name: "user_data", arg: 2, scope: !14380, file: !2208, line: 45, type: !106)
!14392 = !DILocation(line: 0, scope: !14380)
!14393 = !DILocation(line: 71, column: 1, scope: !14380)
!14394 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2208, file: !2208, line: 73, type: !14381, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14395)
!14395 = !{!14396, !14397}
!14396 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14394, file: !2208, line: 73, type: !14383)
!14397 = !DILocalVariable(name: "user_data", arg: 2, scope: !14394, file: !2208, line: 73, type: !106)
!14398 = !DILocation(line: 0, scope: !14394)
!14399 = !DILocation(line: 95, column: 1, scope: !14394)
!14400 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2208, file: !2208, line: 97, type: !8393, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !256)
!14401 = !DILocation(line: 1031, column: 3, scope: !14402, inlinedAt: !14405)
!14402 = distinct !DISubprogram(name: "__get_IPSR", scope: !7374, file: !7374, line: 1027, type: !7455, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14403)
!14403 = !{!14404}
!14404 = !DILocalVariable(name: "result", scope: !14402, file: !7374, line: 1029, type: !108)
!14405 = distinct !DILocation(line: 48, column: 10, scope: !14406, inlinedAt: !14407)
!14406 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8392, file: !8392, line: 46, type: !8393, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !256)
!14407 = distinct !DILocation(line: 99, column: 9, scope: !14400)
!14408 = !{i64 3568076}
!14409 = !DILocation(line: 0, scope: !14402, inlinedAt: !14405)
!14410 = !DILocation(line: 48, column: 9, scope: !14406, inlinedAt: !14407)
!14411 = !DILocation(line: 99, column: 2, scope: !14400)
!14412 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2208, file: !2208, line: 106, type: !337, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !256)
!14413 = !DILocation(line: 108, column: 2, scope: !14412)
!14414 = !DILocation(line: 108, column: 17, scope: !14412)
!14415 = !DILocation(line: 108, column: 30, scope: !14412)
!14416 = !DILocation(line: 109, column: 1, scope: !14412)
!14417 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2208, file: !2208, line: 116, type: !337, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !256)
!14418 = !DILocation(line: 118, column: 2, scope: !14417)
!14419 = !DILocation(line: 118, column: 17, scope: !14417)
!14420 = !DILocation(line: 118, column: 30, scope: !14417)
!14421 = !DILocation(line: 119, column: 1, scope: !14417)
!14422 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2208, file: !2208, line: 126, type: !8393, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !256)
!14423 = !DILocation(line: 128, column: 10, scope: !14422)
!14424 = !DILocation(line: 128, column: 25, scope: !14422)
!14425 = !DILocation(line: 128, column: 38, scope: !14422)
!14426 = !DILocation(line: 128, column: 53, scope: !14422)
!14427 = !DILocation(line: 128, column: 2, scope: !14422)
!14428 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2208, file: !2208, line: 187, type: !14429, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14431)
!14429 = !DISubroutineType(types: !14430)
!14430 = !{!107, !2212, !121}
!14431 = !{!14432, !14433}
!14432 = !DILocalVariable(name: "thread", arg: 1, scope: !14428, file: !2208, line: 187, type: !2212)
!14433 = !DILocalVariable(name: "value", arg: 2, scope: !14428, file: !2208, line: 187, type: !121)
!14434 = !DILocation(line: 0, scope: !14428)
!14435 = !DILocation(line: 206, column: 2, scope: !14428)
!14436 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2208, file: !2208, line: 238, type: !14437, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14439)
!14437 = !DISubroutineType(types: !14438)
!14438 = !{!121, !2212}
!14439 = !{!14440}
!14440 = !DILocalVariable(name: "thread", arg: 1, scope: !14436, file: !2208, line: 238, type: !2212)
!14441 = !DILocation(line: 0, scope: !14436)
!14442 = !DILocation(line: 244, column: 2, scope: !14436)
!14443 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2208, file: !2208, line: 248, type: !14444, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14446)
!14444 = !DISubroutineType(types: !14445)
!14445 = !{!107, !2211, !283, !137}
!14446 = !{!14447, !14448, !14449}
!14447 = !DILocalVariable(name: "thread", arg: 1, scope: !14443, file: !2208, line: 248, type: !2211)
!14448 = !DILocalVariable(name: "buf", arg: 2, scope: !14443, file: !2208, line: 248, type: !283)
!14449 = !DILocalVariable(name: "size", arg: 3, scope: !14443, file: !2208, line: 248, type: !137)
!14450 = !DILocation(line: 0, scope: !14443)
!14451 = !DILocation(line: 257, column: 2, scope: !14443)
!14452 = !DILocation(line: 0, scope: !2207)
!14453 = !DILocation(line: 281, column: 11, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !2207, file: !2208, line: 281, column: 6)
!14455 = !DILocation(line: 281, column: 20, scope: !14454)
!14456 = !DILocation(line: 275, column: 45, scope: !2207)
!14457 = !DILocation(line: 285, column: 10, scope: !2207)
!14458 = !DILocation(line: 0, scope: !2328)
!14459 = !DILocation(line: 293, column: 39, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !2328, file: !2208, line: 293, column: 2)
!14461 = !DILocation(line: 293, column: 2, scope: !2328)
!14462 = !DILocation(line: 273, column: 14, scope: !2207)
!14463 = !DILocation(line: 309, column: 2, scope: !2207)
!14464 = !DILocation(line: 309, column: 11, scope: !2207)
!14465 = !DILocation(line: 311, column: 2, scope: !2207)
!14466 = !DILocation(line: 293, column: 26, scope: !14460)
!14467 = !DILocation(line: 294, column: 9, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14460, file: !2208, line: 293, column: 54)
!14469 = !DILocation(line: 295, column: 21, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14468, file: !2208, line: 295, column: 7)
!14471 = !DILocation(line: 295, column: 28, scope: !14470)
!14472 = !DILocation(line: 295, column: 7, scope: !14468)
!14473 = !DILocation(line: 299, column: 25, scope: !14468)
!14474 = !DILocation(line: 299, column: 41, scope: !14468)
!14475 = !DILocation(line: 300, column: 7, scope: !14468)
!14476 = !DILocation(line: 300, column: 26, scope: !14468)
!14477 = !DILocation(line: 299, column: 10, scope: !14468)
!14478 = !DILocation(line: 299, column: 7, scope: !14468)
!14479 = !DILocation(line: 302, column: 16, scope: !14468)
!14480 = !DILocation(line: 304, column: 20, scope: !14481)
!14481 = distinct !DILexicalBlock(scope: !14468, file: !2208, line: 304, column: 7)
!14482 = !DILocation(line: 304, column: 7, scope: !14468)
!14483 = !DILocation(line: 305, column: 26, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14481, file: !2208, line: 304, column: 26)
!14485 = !DILocation(line: 305, column: 42, scope: !14484)
!14486 = !DILocation(line: 305, column: 11, scope: !14484)
!14487 = !DILocation(line: 305, column: 8, scope: !14484)
!14488 = !DILocation(line: 306, column: 3, scope: !14484)
!14489 = !DILocation(line: 293, column: 50, scope: !14460)
!14490 = !DILocation(line: 312, column: 1, scope: !2207)
!14491 = distinct !DISubprogram(name: "copy_bytes", scope: !2208, file: !2208, line: 261, type: !14492, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14494)
!14492 = !DISubroutineType(types: !14493)
!14493 = !{!137, !283, !137, !121, !137}
!14494 = !{!14495, !14496, !14497, !14498, !14499}
!14495 = !DILocalVariable(name: "dest", arg: 1, scope: !14491, file: !2208, line: 261, type: !283)
!14496 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14491, file: !2208, line: 261, type: !137)
!14497 = !DILocalVariable(name: "src", arg: 3, scope: !14491, file: !2208, line: 261, type: !121)
!14498 = !DILocalVariable(name: "src_size", arg: 4, scope: !14491, file: !2208, line: 261, type: !137)
!14499 = !DILocalVariable(name: "bytes_to_copy", scope: !14491, file: !2208, line: 263, type: !137)
!14500 = !DILocation(line: 0, scope: !14491)
!14501 = !DILocation(line: 265, column: 18, scope: !14491)
!14502 = !DILocation(line: 266, column: 2, scope: !14491)
!14503 = !DILocation(line: 268, column: 2, scope: !14491)
!14504 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2208, file: !2208, line: 383, type: !14505, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14507)
!14505 = !DISubroutineType(types: !14506)
!14506 = !{null, !2212}
!14507 = !{!14508}
!14508 = !DILocalVariable(name: "thread", arg: 1, scope: !14504, file: !2208, line: 383, type: !2212)
!14509 = !DILocation(line: 0, scope: !14504)
!14510 = !DILocation(line: 387, column: 2, scope: !14504)
!14511 = !DILocation(line: 388, column: 1, scope: !14504)
!14512 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2208, file: !2208, line: 528, type: !14513, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14520)
!14513 = !DISubroutineType(types: !14514)
!14514 = !{!283, !2212, !14515, !137, !324, !106, !106, !106, !107, !108, !121}
!14515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14516, size: 32)
!14516 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !317, line: 44, baseType: !14517)
!14517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !319, line: 47, size: 8, elements: !14518)
!14518 = !{!14519}
!14519 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14517, file: !319, line: 48, baseType: !123, size: 8)
!14520 = !{!14521, !14522, !14523, !14524, !14525, !14526, !14527, !14528, !14529, !14530, !14531}
!14521 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14512, file: !2208, line: 528, type: !2212)
!14522 = !DILocalVariable(name: "stack", arg: 2, scope: !14512, file: !2208, line: 529, type: !14515)
!14523 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14512, file: !2208, line: 529, type: !137)
!14524 = !DILocalVariable(name: "entry", arg: 4, scope: !14512, file: !2208, line: 530, type: !324)
!14525 = !DILocalVariable(name: "p1", arg: 5, scope: !14512, file: !2208, line: 531, type: !106)
!14526 = !DILocalVariable(name: "p2", arg: 6, scope: !14512, file: !2208, line: 531, type: !106)
!14527 = !DILocalVariable(name: "p3", arg: 7, scope: !14512, file: !2208, line: 531, type: !106)
!14528 = !DILocalVariable(name: "prio", arg: 8, scope: !14512, file: !2208, line: 532, type: !107)
!14529 = !DILocalVariable(name: "options", arg: 9, scope: !14512, file: !2208, line: 532, type: !108)
!14530 = !DILocalVariable(name: "name", arg: 10, scope: !14512, file: !2208, line: 532, type: !121)
!14531 = !DILocalVariable(name: "stack_ptr", scope: !14512, file: !2208, line: 534, type: !283)
!14532 = !DILocation(line: 0, scope: !14512)
!14533 = !DILocation(line: 550, column: 28, scope: !14512)
!14534 = !DILocation(line: 550, column: 2, scope: !14512)
!14535 = !DILocation(line: 553, column: 34, scope: !14512)
!14536 = !DILocation(line: 553, column: 2, scope: !14512)
!14537 = !DILocation(line: 554, column: 14, scope: !14512)
!14538 = !DILocation(line: 564, column: 2, scope: !14512)
!14539 = !DILocation(line: 567, column: 14, scope: !14512)
!14540 = !DILocation(line: 567, column: 24, scope: !14512)
!14541 = !DILocation(line: 612, column: 7, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14512, file: !2208, line: 612, column: 6)
!14543 = !DILocation(line: 612, column: 6, scope: !14512)
!14544 = !DILocation(line: 627, column: 40, scope: !14512)
!14545 = !DILocation(line: 637, column: 2, scope: !14512)
!14546 = !DILocation(line: 613, column: 15, scope: !14547)
!14547 = distinct !DILexicalBlock(scope: !14542, file: !2208, line: 612, column: 17)
!14548 = !DILocation(line: 613, column: 29, scope: !14547)
!14549 = !DILocation(line: 638, column: 1, scope: !14512)
!14550 = distinct !DISubprogram(name: "z_waitq_init", scope: !14551, file: !14551, line: 47, type: !14552, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14554)
!14551 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14552 = !DISubroutineType(types: !14553)
!14553 = !{null, !2243}
!14554 = !{!14555}
!14555 = !DILocalVariable(name: "w", arg: 1, scope: !14550, file: !14551, line: 47, type: !2243)
!14556 = !DILocation(line: 0, scope: !14550)
!14557 = !DILocation(line: 49, column: 21, scope: !14550)
!14558 = !DILocation(line: 49, column: 2, scope: !14550)
!14559 = !DILocation(line: 50, column: 1, scope: !14550)
!14560 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2208, file: !2208, line: 791, type: !14561, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14564)
!14561 = !DISubroutineType(types: !14562)
!14562 = !{null, !14563, !107, !108, !32}
!14563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 32)
!14564 = !{!14565, !14566, !14567, !14568}
!14565 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14560, file: !2208, line: 791, type: !14563)
!14566 = !DILocalVariable(name: "priority", arg: 2, scope: !14560, file: !2208, line: 791, type: !107)
!14567 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14560, file: !2208, line: 792, type: !108)
!14568 = !DILocalVariable(name: "options", arg: 4, scope: !14560, file: !2208, line: 792, type: !32)
!14569 = !DILocation(line: 0, scope: !14560)
!14570 = !DILocation(line: 795, column: 15, scope: !14560)
!14571 = !DILocation(line: 795, column: 25, scope: !14560)
!14572 = !DILocation(line: 796, column: 30, scope: !14560)
!14573 = !DILocation(line: 796, column: 15, scope: !14560)
!14574 = !DILocation(line: 796, column: 28, scope: !14560)
!14575 = !DILocation(line: 797, column: 30, scope: !14560)
!14576 = !DILocation(line: 797, column: 15, scope: !14560)
!14577 = !DILocation(line: 797, column: 28, scope: !14560)
!14578 = !DILocation(line: 799, column: 22, scope: !14560)
!14579 = !DILocation(line: 799, column: 15, scope: !14560)
!14580 = !DILocation(line: 799, column: 20, scope: !14560)
!14581 = !DILocation(line: 801, column: 15, scope: !14560)
!14582 = !DILocation(line: 801, column: 28, scope: !14560)
!14583 = !DILocation(line: 814, column: 2, scope: !14560)
!14584 = !DILocation(line: 815, column: 1, scope: !14560)
!14585 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2208, file: !2208, line: 449, type: !14586, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14588)
!14586 = !DISubroutineType(types: !14587)
!14587 = !{!283, !2212, !14515, !137}
!14588 = !{!14589, !14590, !14591, !14592, !14593, !14594, !14595, !14596}
!14589 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14585, file: !2208, line: 449, type: !2212)
!14590 = !DILocalVariable(name: "stack", arg: 2, scope: !14585, file: !2208, line: 450, type: !14515)
!14591 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14585, file: !2208, line: 450, type: !137)
!14592 = !DILocalVariable(name: "stack_obj_size", scope: !14585, file: !2208, line: 452, type: !137)
!14593 = !DILocalVariable(name: "stack_buf_size", scope: !14585, file: !2208, line: 452, type: !137)
!14594 = !DILocalVariable(name: "stack_ptr", scope: !14585, file: !2208, line: 453, type: !283)
!14595 = !DILocalVariable(name: "stack_buf_start", scope: !14585, file: !2208, line: 453, type: !283)
!14596 = !DILocalVariable(name: "delta", scope: !14585, file: !2208, line: 454, type: !137)
!14597 = !DILocation(line: 0, scope: !14585)
!14598 = !DILocation(line: 465, column: 20, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14585, file: !2208, line: 463, column: 2)
!14600 = !DILocation(line: 466, column: 21, scope: !14599)
!14601 = !DILocation(line: 473, column: 28, scope: !14585)
!14602 = !DILocation(line: 514, column: 33, scope: !14585)
!14603 = !DILocation(line: 514, column: 25, scope: !14585)
!14604 = !DILocation(line: 514, column: 31, scope: !14585)
!14605 = !DILocation(line: 515, column: 25, scope: !14585)
!14606 = !DILocation(line: 515, column: 30, scope: !14585)
!14607 = !DILocation(line: 516, column: 25, scope: !14585)
!14608 = !DILocation(line: 516, column: 31, scope: !14585)
!14609 = !DILocation(line: 520, column: 2, scope: !14585)
!14610 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !319, file: !319, line: 331, type: !14611, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14613)
!14611 = !DISubroutineType(types: !14612)
!14612 = !{!283, !14515}
!14613 = !{!14614}
!14614 = !DILocalVariable(name: "sym", arg: 1, scope: !14610, file: !319, line: 331, type: !14515)
!14615 = !DILocation(line: 0, scope: !14610)
!14616 = !DILocation(line: 333, column: 21, scope: !14610)
!14617 = !DILocation(line: 333, column: 2, scope: !14610)
!14618 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14619, file: !14619, line: 40, type: !14620, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14622)
!14619 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14620 = !DISubroutineType(types: !14621)
!14621 = !{null, !14563}
!14622 = !{!14623}
!14623 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14618, file: !14619, line: 40, type: !14563)
!14624 = !DILocation(line: 0, scope: !14618)
!14625 = !DILocation(line: 42, column: 31, scope: !14618)
!14626 = !DILocation(line: 42, column: 2, scope: !14618)
!14627 = !DILocation(line: 43, column: 1, scope: !14618)
!14628 = distinct !DISubprogram(name: "z_init_timeout", scope: !14619, file: !14619, line: 25, type: !2269, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14629)
!14629 = !{!14630}
!14630 = !DILocalVariable(name: "to", arg: 1, scope: !14628, file: !14619, line: 25, type: !2271)
!14631 = !DILocation(line: 0, scope: !14628)
!14632 = !DILocation(line: 27, column: 22, scope: !14628)
!14633 = !DILocation(line: 27, column: 2, scope: !14628)
!14634 = !DILocation(line: 28, column: 1, scope: !14628)
!14635 = distinct !DISubprogram(name: "sys_dnode_init", scope: !151, file: !151, line: 211, type: !14636, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14638)
!14636 = !DISubroutineType(types: !14637)
!14637 = !{null, !2315}
!14638 = !{!14639}
!14639 = !DILocalVariable(name: "node", arg: 1, scope: !14635, file: !151, line: 211, type: !2315)
!14640 = !DILocation(line: 0, scope: !14635)
!14641 = !DILocation(line: 213, column: 8, scope: !14635)
!14642 = !DILocation(line: 213, column: 13, scope: !14635)
!14643 = !DILocation(line: 214, column: 8, scope: !14635)
!14644 = !DILocation(line: 214, column: 13, scope: !14635)
!14645 = !DILocation(line: 215, column: 1, scope: !14635)
!14646 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !14647, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14650)
!14647 = !DISubroutineType(types: !14648)
!14648 = !{null, !14649}
!14649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!14650 = !{!14651}
!14651 = !DILocalVariable(name: "list", arg: 1, scope: !14646, file: !151, line: 197, type: !14649)
!14652 = !DILocation(line: 0, scope: !14646)
!14653 = !DILocation(line: 199, column: 8, scope: !14646)
!14654 = !DILocation(line: 199, column: 13, scope: !14646)
!14655 = !DILocation(line: 200, column: 8, scope: !14646)
!14656 = !DILocation(line: 200, column: 13, scope: !14646)
!14657 = !DILocation(line: 201, column: 1, scope: !14646)
!14658 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2208, file: !2208, line: 641, type: !14659, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14665)
!14659 = !DISubroutineType(types: !14660)
!14660 = !{!2211, !2212, !14515, !137, !324, !106, !106, !106, !107, !108, !14661}
!14661 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !14662)
!14662 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !14663)
!14663 = !{!14664}
!14664 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14662, file: !103, line: 66, baseType: !102, size: 64)
!14665 = !{!14666, !14667, !14668, !14669, !14670, !14671, !14672, !14673, !14674, !14675}
!14666 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14658, file: !2208, line: 641, type: !2212)
!14667 = !DILocalVariable(name: "stack", arg: 2, scope: !14658, file: !2208, line: 642, type: !14515)
!14668 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14658, file: !2208, line: 643, type: !137)
!14669 = !DILocalVariable(name: "entry", arg: 4, scope: !14658, file: !2208, line: 643, type: !324)
!14670 = !DILocalVariable(name: "p1", arg: 5, scope: !14658, file: !2208, line: 644, type: !106)
!14671 = !DILocalVariable(name: "p2", arg: 6, scope: !14658, file: !2208, line: 644, type: !106)
!14672 = !DILocalVariable(name: "p3", arg: 7, scope: !14658, file: !2208, line: 644, type: !106)
!14673 = !DILocalVariable(name: "prio", arg: 8, scope: !14658, file: !2208, line: 645, type: !107)
!14674 = !DILocalVariable(name: "options", arg: 9, scope: !14658, file: !2208, line: 645, type: !108)
!14675 = !DILocalVariable(name: "delay", arg: 10, scope: !14658, file: !2208, line: 645, type: !14661)
!14676 = !DILocation(line: 0, scope: !14658)
!14677 = !DILocation(line: 649, column: 2, scope: !14658)
!14678 = !DILocation(line: 652, column: 7, scope: !14679)
!14679 = distinct !DILexicalBlock(scope: !14658, file: !2208, line: 652, column: 6)
!14680 = !DILocation(line: 652, column: 6, scope: !14658)
!14681 = !DILocation(line: 653, column: 3, scope: !14682)
!14682 = distinct !DILexicalBlock(scope: !14679, file: !2208, line: 652, column: 39)
!14683 = !DILocation(line: 654, column: 2, scope: !14682)
!14684 = !DILocation(line: 656, column: 2, scope: !14658)
!14685 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2208, file: !2208, line: 401, type: !14686, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14688)
!14686 = !DISubroutineType(types: !14687)
!14687 = !{null, !2212, !14661}
!14688 = !{!14689, !14690}
!14689 = !DILocalVariable(name: "thread", arg: 1, scope: !14685, file: !2208, line: 401, type: !2212)
!14690 = !DILocalVariable(name: "delay", arg: 2, scope: !14685, file: !2208, line: 401, type: !14661)
!14691 = !DILocation(line: 0, scope: !14685)
!14692 = !DILocation(line: 404, column: 6, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14685, file: !2208, line: 404, column: 6)
!14694 = !DILocation(line: 404, column: 6, scope: !14685)
!14695 = !DILocation(line: 405, column: 3, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !14693, file: !2208, line: 404, column: 38)
!14697 = !DILocation(line: 406, column: 2, scope: !14696)
!14698 = !DILocation(line: 407, column: 3, scope: !14699)
!14699 = distinct !DILexicalBlock(scope: !14693, file: !2208, line: 406, column: 9)
!14700 = !DILocation(line: 413, column: 1, scope: !14685)
!14701 = distinct !DISubprogram(name: "k_thread_start", scope: !3675, file: !3675, line: 205, type: !14702, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14704)
!14702 = !DISubroutineType(types: !14703)
!14703 = !{null, !2211}
!14704 = !{!14705}
!14705 = !DILocalVariable(name: "thread", arg: 1, scope: !14701, file: !3675, line: 205, type: !2211)
!14706 = !DILocation(line: 0, scope: !14701)
!14707 = !DILocation(line: 214, column: 2, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14701, file: !3675, line: 214, column: 2)
!14709 = !{i64 2154868293}
!14710 = !DILocation(line: 215, column: 2, scope: !14701)
!14711 = !DILocation(line: 216, column: 1, scope: !14701)
!14712 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14619, file: !14619, line: 47, type: !14686, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14713)
!14713 = !{!14714, !14715}
!14714 = !DILocalVariable(name: "thread", arg: 1, scope: !14712, file: !14619, line: 47, type: !2212)
!14715 = !DILocalVariable(name: "ticks", arg: 2, scope: !14712, file: !14619, line: 47, type: !14661)
!14716 = !DILocation(line: 0, scope: !14712)
!14717 = !DILocation(line: 49, column: 30, scope: !14712)
!14718 = !DILocation(line: 49, column: 2, scope: !14712)
!14719 = !DILocation(line: 50, column: 1, scope: !14712)
!14720 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2208, file: !2208, line: 748, type: !337, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14721)
!14721 = !{!14722, !14739}
!14722 = !DILocalVariable(name: "thread_data", scope: !14723, file: !2208, line: 750, type: !14724)
!14723 = distinct !DILexicalBlock(scope: !14720, file: !2208, line: 750, column: 2)
!14724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14725, size: 32)
!14725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !142, line: 620, size: 384, elements: !14726)
!14726 = !{!14727, !14728, !14729, !14730, !14731, !14732, !14733, !14734, !14735, !14736, !14737, !14738}
!14727 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14725, file: !142, line: 621, baseType: !2212, size: 32)
!14728 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14725, file: !142, line: 622, baseType: !14515, size: 32, offset: 32)
!14729 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14725, file: !142, line: 623, baseType: !32, size: 32, offset: 64)
!14730 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14725, file: !142, line: 624, baseType: !324, size: 32, offset: 96)
!14731 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14725, file: !142, line: 625, baseType: !106, size: 32, offset: 128)
!14732 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14725, file: !142, line: 626, baseType: !106, size: 32, offset: 160)
!14733 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14725, file: !142, line: 627, baseType: !106, size: 32, offset: 192)
!14734 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14725, file: !142, line: 628, baseType: !107, size: 32, offset: 224)
!14735 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14725, file: !142, line: 629, baseType: !108, size: 32, offset: 256)
!14736 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14725, file: !142, line: 630, baseType: !334, size: 32, offset: 288)
!14737 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14725, file: !142, line: 631, baseType: !336, size: 32, offset: 320)
!14738 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14725, file: !142, line: 632, baseType: !121, size: 32, offset: 352)
!14739 = !DILocalVariable(name: "thread_data", scope: !14740, file: !2208, line: 781, type: !14724)
!14740 = distinct !DILexicalBlock(scope: !14720, file: !2208, line: 781, column: 2)
!14741 = !DILocation(line: 0, scope: !14723)
!14742 = !DILocation(line: 750, column: 2, scope: !14723)
!14743 = !DILocation(line: 780, column: 2, scope: !14720)
!14744 = !DILocation(line: 0, scope: !14740)
!14745 = !DILocation(line: 781, column: 2, scope: !14740)
!14746 = !DILocation(line: 752, column: 17, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14748, file: !2208, line: 750, column: 38)
!14748 = distinct !DILexicalBlock(scope: !14723, file: !2208, line: 750, column: 2)
!14749 = !DILocation(line: 753, column: 17, scope: !14747)
!14750 = !DILocation(line: 754, column: 17, scope: !14747)
!14751 = !DILocation(line: 755, column: 17, scope: !14747)
!14752 = !DILocation(line: 756, column: 17, scope: !14747)
!14753 = !DILocation(line: 757, column: 17, scope: !14747)
!14754 = !DILocation(line: 758, column: 17, scope: !14747)
!14755 = !DILocation(line: 759, column: 17, scope: !14747)
!14756 = !DILocation(line: 760, column: 17, scope: !14747)
!14757 = !DILocation(line: 751, column: 3, scope: !14747)
!14758 = !DILocation(line: 763, column: 16, scope: !14747)
!14759 = !DILocation(line: 763, column: 29, scope: !14747)
!14760 = !DILocation(line: 763, column: 39, scope: !14747)
!14761 = !DILocation(line: 750, column: 2, scope: !14748)
!14762 = !DILocation(line: 750, column: 2, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14748, file: !2208, line: 750, column: 2)
!14764 = distinct !{!14764, !14742, !14765}
!14765 = !DILocation(line: 764, column: 2, scope: !14723)
!14766 = !DILocation(line: 787, column: 2, scope: !14720)
!14767 = !DILocation(line: 788, column: 1, scope: !14720)
!14768 = !DILocation(line: 782, column: 20, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14770, file: !2208, line: 782, column: 7)
!14770 = distinct !DILexicalBlock(scope: !14771, file: !2208, line: 781, column: 38)
!14771 = distinct !DILexicalBlock(scope: !14740, file: !2208, line: 781, column: 2)
!14772 = !DILocation(line: 782, column: 31, scope: !14769)
!14773 = !DILocation(line: 782, column: 7, scope: !14770)
!14774 = !DILocation(line: 783, column: 37, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14769, file: !2208, line: 782, column: 51)
!14776 = !DILocation(line: 784, column: 10, scope: !14775)
!14777 = !DILocation(line: 783, column: 4, scope: !14775)
!14778 = !DILocation(line: 785, column: 3, scope: !14775)
!14779 = !DILocation(line: 781, column: 2, scope: !14771)
!14780 = !DILocation(line: 781, column: 2, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14771, file: !2208, line: 781, column: 2)
!14782 = distinct !{!14782, !14745, !14783}
!14783 = !DILocation(line: 786, column: 2, scope: !14740)
!14784 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3512, file: !3512, line: 403, type: !3513, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14785)
!14785 = !{!14786}
!14786 = !DILocalVariable(name: "t", arg: 1, scope: !14784, file: !3512, line: 403, type: !109)
!14787 = !DILocation(line: 0, scope: !14784)
!14788 = !DILocalVariable(name: "t", arg: 1, scope: !14789, file: !3512, line: 102, type: !109)
!14789 = distinct !DISubprogram(name: "z_tmcvt", scope: !3512, file: !3512, line: 102, type: !3520, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14790)
!14790 = !{!14788, !14791, !14792, !14793, !14794, !14795, !14796, !14797, !14798, !14799, !14800}
!14791 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14789, file: !3512, line: 102, type: !108)
!14792 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14789, file: !3512, line: 103, type: !108)
!14793 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14789, file: !3512, line: 103, type: !136)
!14794 = !DILocalVariable(name: "result32", arg: 5, scope: !14789, file: !3512, line: 104, type: !136)
!14795 = !DILocalVariable(name: "round_up", arg: 6, scope: !14789, file: !3512, line: 104, type: !136)
!14796 = !DILocalVariable(name: "round_off", arg: 7, scope: !14789, file: !3512, line: 105, type: !136)
!14797 = !DILocalVariable(name: "mul_ratio", scope: !14789, file: !3512, line: 107, type: !136)
!14798 = !DILocalVariable(name: "div_ratio", scope: !14789, file: !3512, line: 109, type: !136)
!14799 = !DILocalVariable(name: "off", scope: !14789, file: !3512, line: 116, type: !109)
!14800 = !DILocalVariable(name: "rdivisor", scope: !14801, file: !3512, line: 119, type: !108)
!14801 = distinct !DILexicalBlock(scope: !14802, file: !3512, line: 118, column: 18)
!14802 = distinct !DILexicalBlock(scope: !14789, file: !3512, line: 118, column: 6)
!14803 = !DILocation(line: 0, scope: !14789, inlinedAt: !14804)
!14804 = distinct !DILocation(line: 406, column: 9, scope: !14784)
!14805 = !DILocation(line: 145, column: 13, scope: !14806, inlinedAt: !14804)
!14806 = distinct !DILexicalBlock(scope: !14807, file: !3512, line: 144, column: 10)
!14807 = distinct !DILexicalBlock(scope: !14808, file: !3512, line: 142, column: 7)
!14808 = distinct !DILexicalBlock(scope: !14809, file: !3512, line: 141, column: 24)
!14809 = distinct !DILexicalBlock(scope: !14810, file: !3512, line: 141, column: 13)
!14810 = distinct !DILexicalBlock(scope: !14789, file: !3512, line: 134, column: 6)
!14811 = !DILocation(line: 406, column: 2, scope: !14784)
!14812 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2208, file: !2208, line: 817, type: !4745, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14813)
!14813 = !{!14814, !14815, !14816, !14817}
!14814 = !DILocalVariable(name: "entry", arg: 1, scope: !14812, file: !2208, line: 817, type: !324)
!14815 = !DILocalVariable(name: "p1", arg: 2, scope: !14812, file: !2208, line: 818, type: !106)
!14816 = !DILocalVariable(name: "p2", arg: 3, scope: !14812, file: !2208, line: 818, type: !106)
!14817 = !DILocalVariable(name: "p3", arg: 4, scope: !14812, file: !2208, line: 818, type: !106)
!14818 = !DILocation(line: 0, scope: !14812)
!14819 = !DILocation(line: 822, column: 2, scope: !14812)
!14820 = !DILocation(line: 822, column: 17, scope: !14812)
!14821 = !DILocation(line: 822, column: 30, scope: !14812)
!14822 = !DILocation(line: 823, column: 2, scope: !14812)
!14823 = !DILocation(line: 845, column: 2, scope: !14812)
!14824 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2208, file: !2208, line: 888, type: !14825, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14827)
!14825 = !DISubroutineType(types: !14826)
!14826 = !{!107, !2212}
!14827 = !{!14828}
!14828 = !DILocalVariable(name: "thread", arg: 1, scope: !14824, file: !2208, line: 888, type: !2212)
!14829 = !DILocation(line: 0, scope: !14824)
!14830 = !DILocation(line: 893, column: 2, scope: !14824)
!14831 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2208, file: !2208, line: 897, type: !14832, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14834)
!14832 = !DISubroutineType(types: !14833)
!14833 = !{!107, !2212, !32}
!14834 = !{!14835, !14836}
!14835 = !DILocalVariable(name: "thread", arg: 1, scope: !14831, file: !2208, line: 897, type: !2212)
!14836 = !DILocalVariable(name: "options", arg: 2, scope: !14831, file: !2208, line: 897, type: !32)
!14837 = !DILocation(line: 0, scope: !14831)
!14838 = !DILocation(line: 902, column: 2, scope: !14831)
!14839 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2208, file: !2208, line: 1072, type: !14840, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14845)
!14840 = !DISubroutineType(types: !14841)
!14841 = !{!107, !2211, !14842}
!14842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14843, size: 32)
!14843 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !168, line: 234, baseType: !14844)
!14844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !168, line: 192, elements: !256)
!14845 = !{!14846, !14847}
!14846 = !DILocalVariable(name: "thread", arg: 1, scope: !14839, file: !2208, line: 1072, type: !2211)
!14847 = !DILocalVariable(name: "stats", arg: 2, scope: !14839, file: !2208, line: 1073, type: !14842)
!14848 = !DILocation(line: 0, scope: !14839)
!14849 = !DILocation(line: 1075, column: 14, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14839, file: !2208, line: 1075, column: 6)
!14851 = !DILocation(line: 1075, column: 23, scope: !14850)
!14852 = !DILocation(line: 1086, column: 1, scope: !14839)
!14853 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2208, file: !2208, line: 1088, type: !14854, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !14856)
!14854 = !DISubroutineType(types: !14855)
!14855 = !{!107, !14842}
!14856 = !{!14857}
!14857 = !DILocalVariable(name: "stats", arg: 1, scope: !14853, file: !2208, line: 1088, type: !14842)
!14858 = !DILocation(line: 0, scope: !14853)
!14859 = !DILocation(line: 1094, column: 12, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14853, file: !2208, line: 1094, column: 6)
!14861 = !DILocation(line: 1120, column: 1, scope: !14853)
!14862 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14863, file: !14863, line: 20, type: !337, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !256)
!14863 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14864 = !DILocation(line: 30, column: 2, scope: !14862)
!14865 = !DILocation(line: 31, column: 1, scope: !14862)
!14866 = distinct !DISubprogram(name: "idle", scope: !14863, file: !14863, line: 33, type: !326, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !14867)
!14867 = !{!14868, !14869, !14870}
!14868 = !DILocalVariable(name: "unused1", arg: 1, scope: !14866, file: !14863, line: 33, type: !106)
!14869 = !DILocalVariable(name: "unused2", arg: 2, scope: !14866, file: !14863, line: 33, type: !106)
!14870 = !DILocalVariable(name: "unused3", arg: 3, scope: !14866, file: !14863, line: 33, type: !106)
!14871 = !DILocation(line: 0, scope: !14866)
!14872 = !DILocation(line: 41, column: 2, scope: !14866)
!14873 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !14878)
!14874 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7053, file: !7053, line: 42, type: !7054, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !14875)
!14875 = !{!14876, !14877}
!14876 = !DILocalVariable(name: "key", scope: !14874, file: !7053, line: 44, type: !32)
!14877 = !DILocalVariable(name: "tmp", scope: !14874, file: !7053, line: 53, type: !32)
!14878 = distinct !DILocation(line: 62, column: 10, scope: !14879)
!14879 = distinct !DILexicalBlock(scope: !14866, file: !14863, line: 41, column: 15)
!14880 = !{i64 2223649}
!14881 = !DILocation(line: 0, scope: !14874, inlinedAt: !14878)
!14882 = !DILocation(line: 86, column: 3, scope: !14879)
!14883 = distinct !{!14883, !14872, !14884}
!14884 = !DILocation(line: 105, column: 2, scope: !14866)
!14885 = distinct !DISubprogram(name: "k_cpu_idle", scope: !142, file: !142, line: 5627, type: !337, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !256)
!14886 = !DILocation(line: 5629, column: 2, scope: !14885)
!14887 = !DILocation(line: 5630, column: 1, scope: !14885)
!14888 = !DISubprogram(name: "arch_cpu_idle", scope: !317, file: !317, line: 167, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!14889 = distinct !DISubprogram(name: "k_msgq_init", scope: !14890, file: !14890, line: 35, type: !14891, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !14906)
!14890 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14891 = !DISubroutineType(types: !14892)
!14892 = !{null, !14893, !283, !137, !108}
!14893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14894, size: 32)
!14894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !142, line: 4204, size: 320, elements: !14895)
!14895 = !{!14896, !14897, !14898, !14899, !14900, !14901, !14902, !14903, !14904, !14905}
!14896 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14894, file: !142, line: 4206, baseType: !3255, size: 64)
!14897 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14894, file: !142, line: 4208, baseType: !3317, offset: 64)
!14898 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14894, file: !142, line: 4210, baseType: !137, size: 32, offset: 64)
!14899 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14894, file: !142, line: 4212, baseType: !108, size: 32, offset: 96)
!14900 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !14894, file: !142, line: 4214, baseType: !283, size: 32, offset: 128)
!14901 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !14894, file: !142, line: 4216, baseType: !283, size: 32, offset: 160)
!14902 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !14894, file: !142, line: 4218, baseType: !283, size: 32, offset: 192)
!14903 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !14894, file: !142, line: 4220, baseType: !283, size: 32, offset: 224)
!14904 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14894, file: !142, line: 4222, baseType: !108, size: 32, offset: 256)
!14905 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14894, file: !142, line: 4227, baseType: !190, size: 8, offset: 288)
!14906 = !{!14907, !14908, !14909, !14910}
!14907 = !DILocalVariable(name: "msgq", arg: 1, scope: !14889, file: !14890, line: 35, type: !14893)
!14908 = !DILocalVariable(name: "buffer", arg: 2, scope: !14889, file: !14890, line: 35, type: !283)
!14909 = !DILocalVariable(name: "msg_size", arg: 3, scope: !14889, file: !14890, line: 35, type: !137)
!14910 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !14889, file: !14890, line: 36, type: !108)
!14911 = !DILocation(line: 0, scope: !14889)
!14912 = !DILocation(line: 38, column: 8, scope: !14889)
!14913 = !DILocation(line: 38, column: 17, scope: !14889)
!14914 = !DILocation(line: 39, column: 8, scope: !14889)
!14915 = !DILocation(line: 39, column: 17, scope: !14889)
!14916 = !DILocation(line: 40, column: 8, scope: !14889)
!14917 = !DILocation(line: 40, column: 21, scope: !14889)
!14918 = !DILocation(line: 41, column: 40, scope: !14889)
!14919 = !DILocation(line: 41, column: 28, scope: !14889)
!14920 = !DILocation(line: 41, column: 8, scope: !14889)
!14921 = !DILocation(line: 41, column: 19, scope: !14889)
!14922 = !DILocation(line: 42, column: 8, scope: !14889)
!14923 = !DILocation(line: 42, column: 17, scope: !14889)
!14924 = !DILocation(line: 43, column: 8, scope: !14889)
!14925 = !DILocation(line: 43, column: 18, scope: !14889)
!14926 = !DILocation(line: 44, column: 8, scope: !14889)
!14927 = !DILocation(line: 44, column: 18, scope: !14889)
!14928 = !DILocation(line: 45, column: 8, scope: !14889)
!14929 = !DILocation(line: 45, column: 14, scope: !14889)
!14930 = !DILocation(line: 46, column: 22, scope: !14889)
!14931 = !DILocation(line: 46, column: 2, scope: !14889)
!14932 = !DILocation(line: 55, column: 1, scope: !14889)
!14933 = distinct !DISubprogram(name: "z_waitq_init", scope: !14551, file: !14551, line: 47, type: !14934, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !14936)
!14934 = !DISubroutineType(types: !14935)
!14935 = !{null, !3254}
!14936 = !{!14937}
!14937 = !DILocalVariable(name: "w", arg: 1, scope: !14933, file: !14551, line: 47, type: !3254)
!14938 = !DILocation(line: 0, scope: !14933)
!14939 = !DILocation(line: 49, column: 21, scope: !14933)
!14940 = !DILocation(line: 49, column: 2, scope: !14933)
!14941 = !DILocation(line: 50, column: 1, scope: !14933)
!14942 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !14943, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !14946)
!14943 = !DISubroutineType(types: !14944)
!14944 = !{null, !14945}
!14945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 32)
!14946 = !{!14947}
!14947 = !DILocalVariable(name: "list", arg: 1, scope: !14942, file: !151, line: 197, type: !14945)
!14948 = !DILocation(line: 0, scope: !14942)
!14949 = !DILocation(line: 199, column: 8, scope: !14942)
!14950 = !DILocation(line: 199, column: 13, scope: !14942)
!14951 = !DILocation(line: 200, column: 8, scope: !14942)
!14952 = !DILocation(line: 200, column: 13, scope: !14942)
!14953 = !DILocation(line: 201, column: 1, scope: !14942)
!14954 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !14890, file: !14890, line: 57, type: !14955, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !14957)
!14955 = !DISubroutineType(types: !14956)
!14956 = !{!107, !14893, !137, !108}
!14957 = !{!14958, !14959, !14960, !14961, !14962, !14963}
!14958 = !DILocalVariable(name: "msgq", arg: 1, scope: !14954, file: !14890, line: 57, type: !14893)
!14959 = !DILocalVariable(name: "msg_size", arg: 2, scope: !14954, file: !14890, line: 57, type: !137)
!14960 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !14954, file: !14890, line: 58, type: !108)
!14961 = !DILocalVariable(name: "buffer", scope: !14954, file: !14890, line: 60, type: !106)
!14962 = !DILocalVariable(name: "ret", scope: !14954, file: !14890, line: 61, type: !107)
!14963 = !DILocalVariable(name: "total_size", scope: !14954, file: !14890, line: 62, type: !137)
!14964 = !DILocation(line: 0, scope: !14954)
!14965 = !DILocation(line: 62, column: 2, scope: !14954)
!14966 = !DILocation(line: 66, column: 6, scope: !14967)
!14967 = distinct !DILexicalBlock(scope: !14954, file: !14890, line: 66, column: 6)
!14968 = !DILocation(line: 66, column: 6, scope: !14954)
!14969 = !DILocation(line: 69, column: 28, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14967, file: !14890, line: 68, column: 9)
!14971 = !DILocation(line: 69, column: 12, scope: !14970)
!14972 = !DILocation(line: 70, column: 14, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14970, file: !14890, line: 70, column: 7)
!14974 = !DILocation(line: 70, column: 7, scope: !14970)
!14975 = !DILocation(line: 71, column: 4, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14973, file: !14890, line: 70, column: 23)
!14977 = !DILocation(line: 72, column: 10, scope: !14976)
!14978 = !DILocation(line: 72, column: 16, scope: !14976)
!14979 = !DILocation(line: 74, column: 3, scope: !14976)
!14980 = !DILocation(line: 0, scope: !14967)
!14981 = !DILocation(line: 82, column: 1, scope: !14954)
!14982 = !DILocation(line: 81, column: 2, scope: !14954)
!14983 = distinct !DISubprogram(name: "size_mul_overflow", scope: !14984, file: !14984, line: 105, type: !14985, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !14987)
!14984 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14985 = !DISubroutineType(types: !14986)
!14986 = !{!136, !137, !137, !2693}
!14987 = !{!14988, !14989, !14990}
!14988 = !DILocalVariable(name: "a", arg: 1, scope: !14983, file: !14984, line: 105, type: !137)
!14989 = !DILocalVariable(name: "b", arg: 2, scope: !14983, file: !14984, line: 105, type: !137)
!14990 = !DILocalVariable(name: "result", arg: 3, scope: !14983, file: !14984, line: 105, type: !2693)
!14991 = !DILocation(line: 0, scope: !14983)
!14992 = !DILocation(line: 107, column: 9, scope: !14983)
!14993 = !DILocation(line: 107, column: 2, scope: !14983)
!14994 = distinct !DISubprogram(name: "z_thread_malloc", scope: !14995, file: !14995, line: 102, type: !14996, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !14997)
!14995 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14996 = !DISubroutineType(types: !3198)
!14997 = !{!14998}
!14998 = !DILocalVariable(name: "size", arg: 1, scope: !14994, file: !14995, line: 102, type: !137)
!14999 = !DILocation(line: 0, scope: !14994)
!15000 = !DILocation(line: 104, column: 9, scope: !14994)
!15001 = !DILocation(line: 104, column: 2, scope: !14994)
!15002 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !14995, file: !14995, line: 87, type: !15003, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!15003 = !DISubroutineType(types: !15004)
!15004 = !{!106, !137, !137}
!15005 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !14890, file: !14890, line: 95, type: !15006, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15008)
!15006 = !DISubroutineType(types: !15007)
!15007 = !{!107, !14893}
!15008 = !{!15009}
!15009 = !DILocalVariable(name: "msgq", arg: 1, scope: !15005, file: !14890, line: 95, type: !14893)
!15010 = !DILocation(line: 0, scope: !15005)
!15011 = !DILocation(line: 99, column: 2, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !15005, file: !14890, line: 99, column: 2)
!15013 = !DILocation(line: 99, column: 2, scope: !15005)
!15014 = !DILocation(line: 105, column: 13, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !15005, file: !14890, line: 105, column: 6)
!15016 = !DILocation(line: 105, column: 19, scope: !15015)
!15017 = !DILocation(line: 105, column: 40, scope: !15015)
!15018 = !DILocation(line: 105, column: 6, scope: !15005)
!15019 = !DILocation(line: 106, column: 16, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !15015, file: !14890, line: 105, column: 47)
!15021 = !DILocation(line: 106, column: 3, scope: !15020)
!15022 = !DILocation(line: 107, column: 15, scope: !15020)
!15023 = !DILocation(line: 108, column: 2, scope: !15020)
!15024 = !DILocation(line: 113, column: 1, scope: !15005)
!15025 = distinct !DISubprogram(name: "z_waitq_head", scope: !14551, file: !14551, line: 52, type: !15026, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15028)
!15026 = !DISubroutineType(types: !15027)
!15027 = !{!3237, !3254}
!15028 = !{!15029}
!15029 = !DILocalVariable(name: "w", arg: 1, scope: !15025, file: !14551, line: 52, type: !3254)
!15030 = !DILocation(line: 0, scope: !15025)
!15031 = !DILocation(line: 54, column: 52, scope: !15025)
!15032 = !DILocation(line: 54, column: 28, scope: !15025)
!15033 = !DILocation(line: 54, column: 9, scope: !15025)
!15034 = !DILocation(line: 54, column: 2, scope: !15025)
!15035 = !DISubprogram(name: "k_free", scope: !142, file: !142, line: 5272, type: !7311, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!15036 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !151, file: !151, line: 294, type: !15037, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15039)
!15037 = !DISubroutineType(types: !15038)
!15038 = !{!3222, !14945}
!15039 = !{!15040}
!15040 = !DILocalVariable(name: "list", arg: 1, scope: !15036, file: !151, line: 294, type: !14945)
!15041 = !DILocation(line: 0, scope: !15036)
!15042 = !DILocation(line: 296, column: 9, scope: !15036)
!15043 = !DILocation(line: 296, column: 49, scope: !15036)
!15044 = !DILocation(line: 296, column: 2, scope: !15036)
!15045 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !151, file: !151, line: 266, type: !15046, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15048)
!15046 = !DISubroutineType(types: !15047)
!15047 = !{!136, !14945}
!15048 = !{!15049}
!15049 = !DILocalVariable(name: "list", arg: 1, scope: !15045, file: !151, line: 266, type: !14945)
!15050 = !DILocation(line: 0, scope: !15045)
!15051 = !DILocation(line: 268, column: 15, scope: !15045)
!15052 = !DILocation(line: 268, column: 20, scope: !15045)
!15053 = !DILocation(line: 268, column: 2, scope: !15045)
!15054 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !14890, file: !14890, line: 116, type: !15055, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15061)
!15055 = !DISubroutineType(types: !15056)
!15056 = !{!107, !14893, !13, !15057}
!15057 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !15058)
!15058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !15059)
!15059 = !{!15060}
!15060 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15058, file: !103, line: 66, baseType: !102, size: 64)
!15061 = !{!15062, !15063, !15064, !15065, !15066, !15071}
!15062 = !DILocalVariable(name: "msgq", arg: 1, scope: !15054, file: !14890, line: 116, type: !14893)
!15063 = !DILocalVariable(name: "data", arg: 2, scope: !15054, file: !14890, line: 116, type: !13)
!15064 = !DILocalVariable(name: "timeout", arg: 3, scope: !15054, file: !14890, line: 116, type: !15057)
!15065 = !DILocalVariable(name: "pending_thread", scope: !15054, file: !14890, line: 120, type: !3237)
!15066 = !DILocalVariable(name: "key", scope: !15054, file: !14890, line: 121, type: !15067)
!15067 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !15068)
!15068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !15069)
!15069 = !{!15070}
!15070 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15068, file: !255, line: 33, baseType: !107, size: 32)
!15071 = !DILocalVariable(name: "result", scope: !15054, file: !14890, line: 122, type: !107)
!15072 = !DILocation(line: 0, scope: !15054)
!15073 = !DILocation(line: 124, column: 27, scope: !15054)
!15074 = !DILocalVariable(name: "l", arg: 1, scope: !15075, file: !255, line: 136, type: !15078)
!15075 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !15076, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15079)
!15076 = !DISubroutineType(types: !15077)
!15077 = !{!15067, !15078}
!15078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 32)
!15079 = !{!15074, !15080}
!15080 = !DILocalVariable(name: "k", scope: !15075, file: !255, line: 139, type: !15067)
!15081 = !DILocation(line: 0, scope: !15075, inlinedAt: !15082)
!15082 = distinct !DILocation(line: 124, column: 8, scope: !15054)
!15083 = !DILocation(line: 55, column: 2, scope: !15084, inlinedAt: !15088)
!15084 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7053, file: !7053, line: 42, type: !7054, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15085)
!15085 = !{!15086, !15087}
!15086 = !DILocalVariable(name: "key", scope: !15084, file: !7053, line: 44, type: !32)
!15087 = !DILocalVariable(name: "tmp", scope: !15084, file: !7053, line: 53, type: !32)
!15088 = distinct !DILocation(line: 145, column: 10, scope: !15075, inlinedAt: !15082)
!15089 = !{i64 2229786}
!15090 = !DILocation(line: 0, scope: !15084, inlinedAt: !15088)
!15091 = !DILocation(line: 128, column: 12, scope: !15092)
!15092 = distinct !DILexicalBlock(scope: !15054, file: !14890, line: 128, column: 6)
!15093 = !DILocation(line: 128, column: 30, scope: !15092)
!15094 = !DILocation(line: 128, column: 22, scope: !15092)
!15095 = !DILocation(line: 128, column: 6, scope: !15054)
!15096 = !DILocation(line: 130, column: 49, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15092, file: !14890, line: 128, column: 40)
!15098 = !DILocation(line: 130, column: 20, scope: !15097)
!15099 = !DILocation(line: 131, column: 22, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !15097, file: !14890, line: 131, column: 7)
!15101 = !DILocation(line: 131, column: 7, scope: !15097)
!15102 = !DILocation(line: 135, column: 38, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15100, file: !14890, line: 131, column: 31)
!15104 = !DILocation(line: 136, column: 17, scope: !15103)
!15105 = !DILocation(line: 135, column: 10, scope: !15103)
!15106 = !DILocalVariable(name: "thread", arg: 1, scope: !15107, file: !14245, line: 65, type: !3237)
!15107 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14245, file: !14245, line: 65, type: !15108, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15110)
!15108 = !DISubroutineType(types: !15109)
!15109 = !{null, !3237, !32}
!15110 = !{!15106, !15111}
!15111 = !DILocalVariable(name: "value", arg: 2, scope: !15107, file: !14245, line: 65, type: !32)
!15112 = !DILocation(line: 0, scope: !15107, inlinedAt: !15113)
!15113 = distinct !DILocation(line: 138, column: 4, scope: !15103)
!15114 = !DILocation(line: 67, column: 15, scope: !15107, inlinedAt: !15113)
!15115 = !DILocation(line: 67, column: 33, scope: !15107, inlinedAt: !15113)
!15116 = !DILocation(line: 139, column: 4, scope: !15103)
!15117 = !DILocation(line: 140, column: 4, scope: !15103)
!15118 = !DILocation(line: 141, column: 4, scope: !15103)
!15119 = !DILocation(line: 144, column: 23, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !15100, file: !14890, line: 142, column: 10)
!15121 = !DILocation(line: 144, column: 46, scope: !15120)
!15122 = !DILocation(line: 144, column: 10, scope: !15120)
!15123 = !DILocation(line: 145, column: 29, scope: !15120)
!15124 = !DILocation(line: 145, column: 20, scope: !15120)
!15125 = !DILocation(line: 146, column: 33, scope: !15126)
!15126 = distinct !DILexicalBlock(scope: !15120, file: !14890, line: 146, column: 8)
!15127 = !DILocation(line: 146, column: 24, scope: !15126)
!15128 = !DILocation(line: 146, column: 8, scope: !15120)
!15129 = !DILocation(line: 147, column: 29, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15126, file: !14890, line: 146, column: 45)
!15131 = !DILocation(line: 147, column: 21, scope: !15130)
!15132 = !DILocation(line: 148, column: 4, scope: !15130)
!15133 = !DILocation(line: 149, column: 19, scope: !15120)
!15134 = !DILocation(line: 155, column: 2, scope: !15097)
!15135 = !DILocation(line: 155, column: 13, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !15092, file: !14890, line: 155, column: 13)
!15137 = !DILocation(line: 155, column: 13, scope: !15092)
!15138 = !DILocation(line: 162, column: 3, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15136, file: !14890, line: 158, column: 9)
!15140 = !DILocation(line: 162, column: 18, scope: !15139)
!15141 = !DILocation(line: 162, column: 28, scope: !15139)
!15142 = !DILocation(line: 164, column: 49, scope: !15139)
!15143 = !DILocation(line: 164, column: 12, scope: !15139)
!15144 = !DILocation(line: 166, column: 3, scope: !15139)
!15145 = !DILocation(line: 0, scope: !15092)
!15146 = !DILocalVariable(name: "key", arg: 2, scope: !15147, file: !255, line: 190, type: !15067)
!15147 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !15148, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15150)
!15148 = !DISubroutineType(types: !15149)
!15149 = !{null, !15078, !15067}
!15150 = !{!15151, !15146}
!15151 = !DILocalVariable(name: "l", arg: 1, scope: !15147, file: !255, line: 189, type: !15078)
!15152 = !DILocation(line: 0, scope: !15147, inlinedAt: !15153)
!15153 = distinct !DILocation(line: 171, column: 2, scope: !15054)
!15154 = !DILocalVariable(name: "key", arg: 1, scope: !15155, file: !7053, line: 84, type: !32)
!15155 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7053, file: !7053, line: 84, type: !7064, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15156)
!15156 = !{!15154}
!15157 = !DILocation(line: 0, scope: !15155, inlinedAt: !15158)
!15158 = distinct !DILocation(line: 215, column: 2, scope: !15147, inlinedAt: !15153)
!15159 = !DILocation(line: 95, column: 2, scope: !15155, inlinedAt: !15158)
!15160 = !{i64 2230603}
!15161 = !DILocation(line: 173, column: 2, scope: !15054)
!15162 = !DILocation(line: 174, column: 1, scope: !15054)
!15163 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !14890, file: !14890, line: 188, type: !15164, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15172)
!15164 = !DISubroutineType(types: !15165)
!15165 = !{null, !14893, !15166}
!15166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15167, size: 32)
!15167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !142, line: 4259, size: 96, elements: !15168)
!15168 = !{!15169, !15170, !15171}
!15169 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15167, file: !142, line: 4261, baseType: !137, size: 32)
!15170 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15167, file: !142, line: 4263, baseType: !108, size: 32, offset: 32)
!15171 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15167, file: !142, line: 4265, baseType: !108, size: 32, offset: 64)
!15172 = !{!15173, !15174}
!15173 = !DILocalVariable(name: "msgq", arg: 1, scope: !15163, file: !14890, line: 188, type: !14893)
!15174 = !DILocalVariable(name: "attrs", arg: 2, scope: !15163, file: !14890, line: 188, type: !15166)
!15175 = !DILocation(line: 0, scope: !15163)
!15176 = !DILocation(line: 190, column: 26, scope: !15163)
!15177 = !DILocation(line: 190, column: 9, scope: !15163)
!15178 = !DILocation(line: 190, column: 18, scope: !15163)
!15179 = !DILocation(line: 191, column: 26, scope: !15163)
!15180 = !DILocation(line: 191, column: 9, scope: !15163)
!15181 = !DILocation(line: 191, column: 18, scope: !15163)
!15182 = !DILocation(line: 192, column: 27, scope: !15163)
!15183 = !DILocation(line: 192, column: 9, scope: !15163)
!15184 = !DILocation(line: 192, column: 19, scope: !15163)
!15185 = !DILocation(line: 193, column: 1, scope: !15163)
!15186 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !14890, file: !14890, line: 206, type: !15187, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15189)
!15187 = !DISubroutineType(types: !15188)
!15188 = !{!107, !14893, !106, !15057}
!15189 = !{!15190, !15191, !15192, !15193, !15194, !15195}
!15190 = !DILocalVariable(name: "msgq", arg: 1, scope: !15186, file: !14890, line: 206, type: !14893)
!15191 = !DILocalVariable(name: "data", arg: 2, scope: !15186, file: !14890, line: 206, type: !106)
!15192 = !DILocalVariable(name: "timeout", arg: 3, scope: !15186, file: !14890, line: 206, type: !15057)
!15193 = !DILocalVariable(name: "key", scope: !15186, file: !14890, line: 210, type: !15067)
!15194 = !DILocalVariable(name: "pending_thread", scope: !15186, file: !14890, line: 211, type: !3237)
!15195 = !DILocalVariable(name: "result", scope: !15186, file: !14890, line: 212, type: !107)
!15196 = !DILocation(line: 0, scope: !15186)
!15197 = !DILocation(line: 214, column: 27, scope: !15186)
!15198 = !DILocation(line: 0, scope: !15075, inlinedAt: !15199)
!15199 = distinct !DILocation(line: 214, column: 8, scope: !15186)
!15200 = !DILocation(line: 55, column: 2, scope: !15084, inlinedAt: !15201)
!15201 = distinct !DILocation(line: 145, column: 10, scope: !15075, inlinedAt: !15199)
!15202 = !DILocation(line: 0, scope: !15084, inlinedAt: !15201)
!15203 = !DILocation(line: 218, column: 12, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15186, file: !14890, line: 218, column: 6)
!15205 = !DILocation(line: 218, column: 22, scope: !15204)
!15206 = !DILocation(line: 218, column: 6, scope: !15186)
!15207 = !DILocation(line: 220, column: 28, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15204, file: !14890, line: 218, column: 28)
!15209 = !DILocation(line: 220, column: 44, scope: !15208)
!15210 = !DILocation(line: 220, column: 9, scope: !15208)
!15211 = !DILocation(line: 221, column: 27, scope: !15208)
!15212 = !DILocation(line: 221, column: 18, scope: !15208)
!15213 = !DILocation(line: 222, column: 31, scope: !15214)
!15214 = distinct !DILexicalBlock(scope: !15208, file: !14890, line: 222, column: 7)
!15215 = !DILocation(line: 222, column: 22, scope: !15214)
!15216 = !DILocation(line: 222, column: 7, scope: !15208)
!15217 = !DILocation(line: 223, column: 27, scope: !15218)
!15218 = distinct !DILexicalBlock(scope: !15214, file: !14890, line: 222, column: 43)
!15219 = !DILocation(line: 223, column: 19, scope: !15218)
!15220 = !DILocation(line: 224, column: 3, scope: !15218)
!15221 = !DILocation(line: 225, column: 18, scope: !15208)
!15222 = !DILocation(line: 228, column: 49, scope: !15208)
!15223 = !DILocation(line: 228, column: 20, scope: !15208)
!15224 = !DILocation(line: 229, column: 22, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15208, file: !14890, line: 229, column: 7)
!15226 = !DILocation(line: 229, column: 7, scope: !15208)
!15227 = !DILocation(line: 233, column: 23, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15225, file: !14890, line: 229, column: 31)
!15229 = !DILocation(line: 233, column: 55, scope: !15228)
!15230 = !DILocation(line: 234, column: 17, scope: !15228)
!15231 = !DILocation(line: 233, column: 10, scope: !15228)
!15232 = !DILocation(line: 235, column: 29, scope: !15228)
!15233 = !DILocation(line: 235, column: 20, scope: !15228)
!15234 = !DILocation(line: 236, column: 33, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15228, file: !14890, line: 236, column: 8)
!15236 = !DILocation(line: 236, column: 24, scope: !15235)
!15237 = !DILocation(line: 236, column: 8, scope: !15228)
!15238 = !DILocation(line: 237, column: 29, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15235, file: !14890, line: 236, column: 45)
!15240 = !DILocation(line: 237, column: 21, scope: !15239)
!15241 = !DILocation(line: 238, column: 4, scope: !15239)
!15242 = !DILocation(line: 239, column: 19, scope: !15228)
!15243 = !DILocation(line: 0, scope: !15107, inlinedAt: !15244)
!15244 = distinct !DILocation(line: 242, column: 4, scope: !15228)
!15245 = !DILocation(line: 67, column: 15, scope: !15107, inlinedAt: !15244)
!15246 = !DILocation(line: 67, column: 33, scope: !15107, inlinedAt: !15244)
!15247 = !DILocation(line: 243, column: 4, scope: !15228)
!15248 = !DILocation(line: 244, column: 4, scope: !15228)
!15249 = !DILocation(line: 248, column: 4, scope: !15228)
!15250 = !DILocation(line: 251, column: 13, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15204, file: !14890, line: 251, column: 13)
!15252 = !DILocation(line: 251, column: 13, scope: !15204)
!15253 = !DILocation(line: 258, column: 3, scope: !15254)
!15254 = distinct !DILexicalBlock(scope: !15251, file: !14890, line: 254, column: 9)
!15255 = !DILocation(line: 258, column: 18, scope: !15254)
!15256 = !DILocation(line: 258, column: 28, scope: !15254)
!15257 = !DILocation(line: 260, column: 49, scope: !15254)
!15258 = !DILocation(line: 260, column: 12, scope: !15254)
!15259 = !DILocation(line: 262, column: 3, scope: !15254)
!15260 = !DILocation(line: 0, scope: !15204)
!15261 = !DILocation(line: 0, scope: !15147, inlinedAt: !15262)
!15262 = distinct !DILocation(line: 267, column: 2, scope: !15186)
!15263 = !DILocation(line: 0, scope: !15155, inlinedAt: !15264)
!15264 = distinct !DILocation(line: 215, column: 2, scope: !15147, inlinedAt: !15262)
!15265 = !DILocation(line: 95, column: 2, scope: !15155, inlinedAt: !15264)
!15266 = !DILocation(line: 269, column: 2, scope: !15186)
!15267 = !DILocation(line: 270, column: 1, scope: !15186)
!15268 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !14890, file: !14890, line: 284, type: !15269, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15271)
!15269 = !DISubroutineType(types: !15270)
!15270 = !{!107, !14893, !106}
!15271 = !{!15272, !15273, !15274, !15275}
!15272 = !DILocalVariable(name: "msgq", arg: 1, scope: !15268, file: !14890, line: 284, type: !14893)
!15273 = !DILocalVariable(name: "data", arg: 2, scope: !15268, file: !14890, line: 284, type: !106)
!15274 = !DILocalVariable(name: "key", scope: !15268, file: !14890, line: 286, type: !15067)
!15275 = !DILocalVariable(name: "result", scope: !15268, file: !14890, line: 287, type: !107)
!15276 = !DILocation(line: 0, scope: !15268)
!15277 = !DILocation(line: 0, scope: !15075, inlinedAt: !15278)
!15278 = distinct !DILocation(line: 289, column: 8, scope: !15268)
!15279 = !DILocation(line: 55, column: 2, scope: !15084, inlinedAt: !15280)
!15280 = distinct !DILocation(line: 145, column: 10, scope: !15075, inlinedAt: !15278)
!15281 = !DILocation(line: 0, scope: !15084, inlinedAt: !15280)
!15282 = !DILocation(line: 291, column: 12, scope: !15283)
!15283 = distinct !DILexicalBlock(scope: !15268, file: !14890, line: 291, column: 6)
!15284 = !DILocation(line: 291, column: 22, scope: !15283)
!15285 = !DILocation(line: 291, column: 6, scope: !15268)
!15286 = !DILocation(line: 293, column: 28, scope: !15287)
!15287 = distinct !DILexicalBlock(scope: !15283, file: !14890, line: 291, column: 28)
!15288 = !DILocation(line: 293, column: 44, scope: !15287)
!15289 = !DILocation(line: 293, column: 9, scope: !15287)
!15290 = !DILocation(line: 295, column: 2, scope: !15287)
!15291 = !DILocation(line: 0, scope: !15283)
!15292 = !DILocation(line: 0, scope: !15147, inlinedAt: !15293)
!15293 = distinct !DILocation(line: 302, column: 2, scope: !15268)
!15294 = !DILocation(line: 0, scope: !15155, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 215, column: 2, scope: !15147, inlinedAt: !15293)
!15296 = !DILocation(line: 95, column: 2, scope: !15155, inlinedAt: !15295)
!15297 = !DILocation(line: 304, column: 2, scope: !15268)
!15298 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !14890, file: !14890, line: 318, type: !15299, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !15301)
!15299 = !DISubroutineType(types: !15300)
!15300 = !{null, !14893}
!15301 = !{!15302, !15303, !15304}
!15302 = !DILocalVariable(name: "msgq", arg: 1, scope: !15298, file: !14890, line: 318, type: !14893)
!15303 = !DILocalVariable(name: "key", scope: !15298, file: !14890, line: 320, type: !15067)
!15304 = !DILocalVariable(name: "pending_thread", scope: !15298, file: !14890, line: 321, type: !3237)
!15305 = !DILocation(line: 0, scope: !15298)
!15306 = !DILocation(line: 0, scope: !15075, inlinedAt: !15307)
!15307 = distinct !DILocation(line: 323, column: 8, scope: !15298)
!15308 = !DILocation(line: 55, column: 2, scope: !15084, inlinedAt: !15309)
!15309 = distinct !DILocation(line: 145, column: 10, scope: !15075, inlinedAt: !15307)
!15310 = !DILocation(line: 0, scope: !15084, inlinedAt: !15309)
!15311 = !DILocation(line: 328, column: 27, scope: !15298)
!15312 = !DILocation(line: 328, column: 65, scope: !15298)
!15313 = !DILocation(line: 328, column: 2, scope: !15298)
!15314 = !DILocation(line: 0, scope: !15107, inlinedAt: !15315)
!15315 = distinct !DILocation(line: 329, column: 3, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15298, file: !14890, line: 328, column: 74)
!15317 = !DILocation(line: 67, column: 15, scope: !15107, inlinedAt: !15315)
!15318 = !DILocation(line: 67, column: 33, scope: !15107, inlinedAt: !15315)
!15319 = !DILocation(line: 330, column: 3, scope: !15316)
!15320 = distinct !{!15320, !15313, !15321}
!15321 = !DILocation(line: 331, column: 2, scope: !15298)
!15322 = !DILocation(line: 323, column: 27, scope: !15298)
!15323 = !DILocation(line: 333, column: 8, scope: !15298)
!15324 = !DILocation(line: 333, column: 18, scope: !15298)
!15325 = !DILocation(line: 334, column: 25, scope: !15298)
!15326 = !DILocation(line: 334, column: 8, scope: !15298)
!15327 = !DILocation(line: 334, column: 17, scope: !15298)
!15328 = !DILocation(line: 336, column: 2, scope: !15298)
!15329 = !DILocation(line: 337, column: 1, scope: !15298)
!15330 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2437, file: !2437, line: 49, type: !15331, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15340)
!15331 = !DISubroutineType(types: !15332)
!15332 = !{!107, !15333}
!15333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15334, size: 32)
!15334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !142, line: 2720, size: 160, elements: !15335)
!15335 = !{!15336, !15337, !15338, !15339}
!15336 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15334, file: !142, line: 2722, baseType: !2368, size: 64)
!15337 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !15334, file: !142, line: 2724, baseType: !2350, size: 32, offset: 64)
!15338 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !15334, file: !142, line: 2727, baseType: !108, size: 32, offset: 96)
!15339 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !15334, file: !142, line: 2730, baseType: !107, size: 32, offset: 128)
!15340 = !{!15341}
!15341 = !DILocalVariable(name: "mutex", arg: 1, scope: !15330, file: !2437, line: 49, type: !15333)
!15342 = !DILocation(line: 0, scope: !15330)
!15343 = !DILocation(line: 51, column: 9, scope: !15330)
!15344 = !DILocation(line: 51, column: 15, scope: !15330)
!15345 = !DILocation(line: 52, column: 9, scope: !15330)
!15346 = !DILocation(line: 52, column: 20, scope: !15330)
!15347 = !DILocation(line: 54, column: 23, scope: !15330)
!15348 = !DILocation(line: 54, column: 2, scope: !15330)
!15349 = !DILocation(line: 60, column: 2, scope: !15330)
!15350 = distinct !DISubprogram(name: "z_waitq_init", scope: !14551, file: !14551, line: 47, type: !15351, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15353)
!15351 = !DISubroutineType(types: !15352)
!15352 = !{null, !2367}
!15353 = !{!15354}
!15354 = !DILocalVariable(name: "w", arg: 1, scope: !15350, file: !14551, line: 47, type: !2367)
!15355 = !DILocation(line: 0, scope: !15350)
!15356 = !DILocation(line: 49, column: 21, scope: !15350)
!15357 = !DILocation(line: 49, column: 2, scope: !15350)
!15358 = !DILocation(line: 50, column: 1, scope: !15350)
!15359 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !15360, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15363)
!15360 = !DISubroutineType(types: !15361)
!15361 = !{null, !15362}
!15362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 32)
!15363 = !{!15364}
!15364 = !DILocalVariable(name: "list", arg: 1, scope: !15359, file: !151, line: 197, type: !15362)
!15365 = !DILocation(line: 0, scope: !15359)
!15366 = !DILocation(line: 199, column: 8, scope: !15359)
!15367 = !DILocation(line: 199, column: 13, scope: !15359)
!15368 = !DILocation(line: 200, column: 8, scope: !15359)
!15369 = !DILocation(line: 200, column: 13, scope: !15359)
!15370 = !DILocation(line: 201, column: 1, scope: !15359)
!15371 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2437, file: !2437, line: 95, type: !15372, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15378)
!15372 = !DISubroutineType(types: !15373)
!15373 = !{!107, !15333, !15374}
!15374 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !15375)
!15375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !15376)
!15376 = !{!15377}
!15377 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15375, file: !103, line: 66, baseType: !102, size: 64)
!15378 = !{!15379, !15380, !15381, !15382, !15387, !15388, !15389}
!15379 = !DILocalVariable(name: "mutex", arg: 1, scope: !15371, file: !2437, line: 95, type: !15333)
!15380 = !DILocalVariable(name: "timeout", arg: 2, scope: !15371, file: !2437, line: 95, type: !15374)
!15381 = !DILocalVariable(name: "new_prio", scope: !15371, file: !2437, line: 97, type: !107)
!15382 = !DILocalVariable(name: "key", scope: !15371, file: !2437, line: 98, type: !15383)
!15383 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !15384)
!15384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !15385)
!15385 = !{!15386}
!15386 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15384, file: !255, line: 33, baseType: !107, size: 32)
!15387 = !DILocalVariable(name: "resched", scope: !15371, file: !2437, line: 99, type: !136)
!15388 = !DILocalVariable(name: "got_mutex", scope: !15371, file: !2437, line: 146, type: !107)
!15389 = !DILocalVariable(name: "waiter", scope: !15390, file: !2437, line: 169, type: !2350)
!15390 = distinct !DILexicalBlock(scope: !15391, file: !2437, line: 168, column: 36)
!15391 = distinct !DILexicalBlock(scope: !15371, file: !2437, line: 168, column: 6)
!15392 = !DILocation(line: 0, scope: !15371)
!15393 = !DILocalVariable(name: "l", arg: 1, scope: !15394, file: !255, line: 136, type: !15397)
!15394 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !15395, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15398)
!15395 = !DISubroutineType(types: !15396)
!15396 = !{!15383, !15397}
!15397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 32)
!15398 = !{!15393, !15399}
!15399 = !DILocalVariable(name: "k", scope: !15394, file: !255, line: 139, type: !15383)
!15400 = !DILocation(line: 0, scope: !15394, inlinedAt: !15401)
!15401 = distinct !DILocation(line: 105, column: 8, scope: !15371)
!15402 = !DILocation(line: 55, column: 2, scope: !15403, inlinedAt: !15407)
!15403 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7053, file: !7053, line: 42, type: !7054, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15404)
!15404 = !{!15405, !15406}
!15405 = !DILocalVariable(name: "key", scope: !15403, file: !7053, line: 44, type: !32)
!15406 = !DILocalVariable(name: "tmp", scope: !15403, file: !7053, line: 53, type: !32)
!15407 = distinct !DILocation(line: 145, column: 10, scope: !15394, inlinedAt: !15401)
!15408 = !{i64 2228057}
!15409 = !DILocation(line: 0, scope: !15403, inlinedAt: !15407)
!15410 = !DILocation(line: 107, column: 6, scope: !15411)
!15411 = distinct !DILexicalBlock(scope: !15371, file: !2437, line: 107, column: 6)
!15412 = !DILocation(line: 107, column: 6, scope: !15371)
!15413 = !{!"branch_weights", i32 2000, i32 1}
!15414 = !DILocation(line: 110, column: 6, scope: !15415)
!15415 = distinct !DILexicalBlock(scope: !15411, file: !2437, line: 107, column: 71)
!15416 = !DILocation(line: 110, column: 21, scope: !15415)
!15417 = !DILocation(line: 109, column: 28, scope: !15415)
!15418 = !DILocation(line: 111, column: 13, scope: !15415)
!15419 = !DILocation(line: 114, column: 18, scope: !15415)
!15420 = !DILocation(line: 109, column: 10, scope: !15415)
!15421 = !DILocation(line: 109, column: 26, scope: !15415)
!15422 = !DILocation(line: 113, column: 20, scope: !15415)
!15423 = !DILocation(line: 114, column: 10, scope: !15415)
!15424 = !DILocation(line: 114, column: 16, scope: !15415)
!15425 = !DILocalVariable(name: "key", arg: 2, scope: !15426, file: !255, line: 190, type: !15383)
!15426 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !15427, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15429)
!15427 = !DISubroutineType(types: !15428)
!15428 = !{null, !15397, !15383}
!15429 = !{!15430, !15425}
!15430 = !DILocalVariable(name: "l", arg: 1, scope: !15426, file: !255, line: 189, type: !15397)
!15431 = !DILocation(line: 0, scope: !15426, inlinedAt: !15432)
!15432 = distinct !DILocation(line: 120, column: 3, scope: !15415)
!15433 = !DILocalVariable(name: "key", arg: 1, scope: !15434, file: !7053, line: 84, type: !32)
!15434 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7053, file: !7053, line: 84, type: !7064, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15435)
!15435 = !{!15433}
!15436 = !DILocation(line: 0, scope: !15434, inlinedAt: !15437)
!15437 = distinct !DILocation(line: 215, column: 2, scope: !15426, inlinedAt: !15432)
!15438 = !DILocation(line: 95, column: 2, scope: !15434, inlinedAt: !15437)
!15439 = !{i64 2228874}
!15440 = !DILocation(line: 124, column: 3, scope: !15415)
!15441 = !DILocation(line: 127, column: 6, scope: !15442)
!15442 = distinct !DILexicalBlock(scope: !15371, file: !2437, line: 127, column: 6)
!15443 = !DILocation(line: 127, column: 6, scope: !15371)
!15444 = !{!"branch_weights", i32 1, i32 2000}
!15445 = !DILocation(line: 0, scope: !15426, inlinedAt: !15446)
!15446 = distinct !DILocation(line: 128, column: 3, scope: !15447)
!15447 = distinct !DILexicalBlock(scope: !15442, file: !2437, line: 127, column: 50)
!15448 = !DILocation(line: 0, scope: !15434, inlinedAt: !15449)
!15449 = distinct !DILocation(line: 215, column: 2, scope: !15426, inlinedAt: !15446)
!15450 = !DILocation(line: 95, column: 2, scope: !15434, inlinedAt: !15449)
!15451 = !DILocation(line: 132, column: 3, scope: !15447)
!15452 = !DILocation(line: 137, column: 53, scope: !15371)
!15453 = !DILocation(line: 137, column: 38, scope: !15371)
!15454 = !DILocation(line: 138, column: 29, scope: !15371)
!15455 = !DILocation(line: 138, column: 10, scope: !15371)
!15456 = !DILocation(line: 137, column: 13, scope: !15371)
!15457 = !DILocation(line: 142, column: 6, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15371, file: !2437, line: 142, column: 6)
!15459 = !DILocation(line: 142, column: 6, scope: !15371)
!15460 = !DILocation(line: 143, column: 13, scope: !15461)
!15461 = distinct !DILexicalBlock(scope: !15458, file: !2437, line: 142, column: 59)
!15462 = !DILocation(line: 144, column: 2, scope: !15461)
!15463 = !DILocation(line: 146, column: 50, scope: !15371)
!15464 = !DILocation(line: 146, column: 18, scope: !15371)
!15465 = !DILocation(line: 153, column: 16, scope: !15466)
!15466 = distinct !DILexicalBlock(scope: !15371, file: !2437, line: 153, column: 6)
!15467 = !DILocation(line: 153, column: 6, scope: !15371)
!15468 = !DILocation(line: 0, scope: !15394, inlinedAt: !15469)
!15469 = distinct !DILocation(line: 162, column: 8, scope: !15371)
!15470 = !DILocation(line: 55, column: 2, scope: !15403, inlinedAt: !15471)
!15471 = distinct !DILocation(line: 145, column: 10, scope: !15394, inlinedAt: !15469)
!15472 = !DILocation(line: 0, scope: !15403, inlinedAt: !15471)
!15473 = !DILocation(line: 168, column: 6, scope: !15391)
!15474 = !DILocation(line: 168, column: 6, scope: !15371)
!15475 = !DILocation(line: 169, column: 29, scope: !15390)
!15476 = !DILocation(line: 0, scope: !15390)
!15477 = !DILocation(line: 171, column: 22, scope: !15390)
!15478 = !DILocation(line: 171, column: 14, scope: !15390)
!15479 = !DILocation(line: 172, column: 42, scope: !15390)
!15480 = !DILocation(line: 172, column: 29, scope: !15390)
!15481 = !DILocation(line: 172, column: 55, scope: !15390)
!15482 = !DILocation(line: 172, column: 4, scope: !15390)
!15483 = !DILocation(line: 173, column: 11, scope: !15390)
!15484 = !DILocation(line: 177, column: 13, scope: !15390)
!15485 = !DILocation(line: 177, column: 48, scope: !15390)
!15486 = !DILocation(line: 180, column: 6, scope: !15371)
!15487 = !DILocation(line: 181, column: 3, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !15489, file: !2437, line: 180, column: 15)
!15489 = distinct !DILexicalBlock(scope: !15371, file: !2437, line: 180, column: 6)
!15490 = !DILocation(line: 182, column: 2, scope: !15488)
!15491 = !DILocation(line: 0, scope: !15426, inlinedAt: !15492)
!15492 = distinct !DILocation(line: 183, column: 3, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15489, file: !2437, line: 182, column: 9)
!15494 = !DILocation(line: 0, scope: !15434, inlinedAt: !15495)
!15495 = distinct !DILocation(line: 215, column: 2, scope: !15426, inlinedAt: !15492)
!15496 = !DILocation(line: 95, column: 2, scope: !15434, inlinedAt: !15495)
!15497 = !DILocation(line: 189, column: 1, scope: !15371)
!15498 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2437, file: !2437, line: 72, type: !15499, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15501)
!15499 = !DISubroutineType(types: !15500)
!15500 = !{!334, !334, !334}
!15501 = !{!15502, !15503, !15504}
!15502 = !DILocalVariable(name: "target", arg: 1, scope: !15498, file: !2437, line: 72, type: !334)
!15503 = !DILocalVariable(name: "limit", arg: 2, scope: !15498, file: !2437, line: 72, type: !334)
!15504 = !DILocalVariable(name: "new_prio", scope: !15498, file: !2437, line: 74, type: !107)
!15505 = !DILocation(line: 0, scope: !15498)
!15506 = !DILocation(line: 74, column: 17, scope: !15498)
!15507 = !DILocation(line: 76, column: 13, scope: !15498)
!15508 = !DILocation(line: 78, column: 2, scope: !15498)
!15509 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14225, file: !14225, line: 211, type: !15510, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15512)
!15510 = !DISubroutineType(types: !15511)
!15511 = !{!136, !107, !107}
!15512 = !{!15513, !15514}
!15513 = !DILocalVariable(name: "prio", arg: 1, scope: !15509, file: !14225, line: 211, type: !107)
!15514 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15509, file: !14225, line: 211, type: !107)
!15515 = !DILocation(line: 0, scope: !15509)
!15516 = !DILocation(line: 213, column: 9, scope: !15509)
!15517 = !DILocation(line: 213, column: 2, scope: !15509)
!15518 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2437, file: !2437, line: 81, type: !15519, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15521)
!15519 = !DISubroutineType(types: !15520)
!15520 = !{!136, !15333, !334}
!15521 = !{!15522, !15523}
!15522 = !DILocalVariable(name: "mutex", arg: 1, scope: !15518, file: !2437, line: 81, type: !15333)
!15523 = !DILocalVariable(name: "new_prio", arg: 2, scope: !15518, file: !2437, line: 81, type: !334)
!15524 = !DILocation(line: 0, scope: !15518)
!15525 = !DILocation(line: 83, column: 13, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15518, file: !2437, line: 83, column: 6)
!15527 = !DILocation(line: 83, column: 25, scope: !15526)
!15528 = !DILocation(line: 83, column: 6, scope: !15526)
!15529 = !DILocation(line: 83, column: 30, scope: !15526)
!15530 = !DILocation(line: 83, column: 6, scope: !15518)
!15531 = !DILocation(line: 90, column: 10, scope: !15532)
!15532 = distinct !DILexicalBlock(scope: !15526, file: !2437, line: 83, column: 43)
!15533 = !DILocation(line: 90, column: 3, scope: !15532)
!15534 = !DILocation(line: 93, column: 1, scope: !15518)
!15535 = distinct !DISubprogram(name: "z_waitq_head", scope: !14551, file: !14551, line: 52, type: !15536, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15538)
!15536 = !DISubroutineType(types: !15537)
!15537 = !{!2350, !2367}
!15538 = !{!15539}
!15539 = !DILocalVariable(name: "w", arg: 1, scope: !15535, file: !14551, line: 52, type: !2367)
!15540 = !DILocation(line: 0, scope: !15535)
!15541 = !DILocation(line: 54, column: 52, scope: !15535)
!15542 = !DILocation(line: 54, column: 28, scope: !15535)
!15543 = !DILocation(line: 54, column: 9, scope: !15535)
!15544 = !DILocation(line: 54, column: 2, scope: !15535)
!15545 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !151, file: !151, line: 294, type: !15546, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15548)
!15546 = !DISubroutineType(types: !15547)
!15547 = !{!2335, !15362}
!15548 = !{!15549}
!15549 = !DILocalVariable(name: "list", arg: 1, scope: !15545, file: !151, line: 294, type: !15362)
!15550 = !DILocation(line: 0, scope: !15545)
!15551 = !DILocation(line: 296, column: 9, scope: !15545)
!15552 = !DILocation(line: 296, column: 49, scope: !15545)
!15553 = !DILocation(line: 296, column: 2, scope: !15545)
!15554 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !151, file: !151, line: 266, type: !15555, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15557)
!15555 = !DISubroutineType(types: !15556)
!15556 = !{!136, !15362}
!15557 = !{!15558}
!15558 = !DILocalVariable(name: "list", arg: 1, scope: !15554, file: !151, line: 266, type: !15362)
!15559 = !DILocation(line: 0, scope: !15554)
!15560 = !DILocation(line: 268, column: 15, scope: !15554)
!15561 = !DILocation(line: 268, column: 20, scope: !15554)
!15562 = !DILocation(line: 268, column: 2, scope: !15554)
!15563 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14225, file: !14225, line: 206, type: !15510, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15564)
!15564 = !{!15565, !15566}
!15565 = !DILocalVariable(name: "prio1", arg: 1, scope: !15563, file: !14225, line: 206, type: !107)
!15566 = !DILocalVariable(name: "prio2", arg: 2, scope: !15563, file: !14225, line: 206, type: !107)
!15567 = !DILocation(line: 0, scope: !15563)
!15568 = !DILocation(line: 208, column: 15, scope: !15563)
!15569 = !DILocation(line: 208, column: 2, scope: !15563)
!15570 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !14225, file: !14225, line: 186, type: !418, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15571)
!15571 = !{!15572}
!15572 = !DILocalVariable(name: "prio", arg: 1, scope: !15570, file: !14225, line: 186, type: !107)
!15573 = !DILocation(line: 0, scope: !15570)
!15574 = !DILocation(line: 188, column: 9, scope: !15570)
!15575 = !DILocation(line: 188, column: 2, scope: !15570)
!15576 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !14225, file: !14225, line: 181, type: !15577, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15579)
!15577 = !DISubroutineType(types: !15578)
!15578 = !{!136, !107}
!15579 = !{!15580}
!15580 = !DILocalVariable(name: "prio", arg: 1, scope: !15576, file: !14225, line: 181, type: !107)
!15581 = !DILocation(line: 0, scope: !15576)
!15582 = !DILocation(line: 183, column: 14, scope: !15576)
!15583 = !DILocation(line: 183, column: 2, scope: !15576)
!15584 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2437, file: !2437, line: 201, type: !15331, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15585)
!15585 = !{!15586, !15587, !15588, !15589}
!15586 = !DILocalVariable(name: "mutex", arg: 1, scope: !15584, file: !2437, line: 201, type: !15333)
!15587 = !DILocalVariable(name: "new_owner", scope: !15584, file: !2437, line: 203, type: !2350)
!15588 = !DILocalVariable(name: "key", scope: !15584, file: !2437, line: 242, type: !15383)
!15589 = !DILabel(scope: !15584, name: "k_mutex_unlock_return", file: !2437, line: 270)
!15590 = !DILocation(line: 0, scope: !15584)
!15591 = !DILocation(line: 209, column: 2, scope: !15592)
!15592 = distinct !DILexicalBlock(scope: !15584, file: !2437, line: 209, column: 2)
!15593 = !DILocation(line: 209, column: 2, scope: !15584)
!15594 = !DILocation(line: 217, column: 2, scope: !15595)
!15595 = distinct !DILexicalBlock(scope: !15584, file: !2437, line: 217, column: 2)
!15596 = !DILocation(line: 217, column: 2, scope: !15584)
!15597 = !DILocation(line: 237, column: 13, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15584, file: !2437, line: 237, column: 6)
!15599 = !DILocation(line: 237, column: 24, scope: !15598)
!15600 = !DILocation(line: 237, column: 6, scope: !15584)
!15601 = !DILocation(line: 238, column: 20, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15598, file: !2437, line: 237, column: 30)
!15603 = !DILocation(line: 239, column: 3, scope: !15602)
!15604 = !DILocation(line: 0, scope: !15394, inlinedAt: !15605)
!15605 = distinct !DILocation(line: 242, column: 25, scope: !15584)
!15606 = !DILocation(line: 55, column: 2, scope: !15403, inlinedAt: !15607)
!15607 = distinct !DILocation(line: 145, column: 10, scope: !15394, inlinedAt: !15605)
!15608 = !DILocation(line: 0, scope: !15403, inlinedAt: !15607)
!15609 = !DILocation(line: 244, column: 34, scope: !15584)
!15610 = !DILocation(line: 244, column: 2, scope: !15584)
!15611 = !DILocation(line: 247, column: 44, scope: !15584)
!15612 = !DILocation(line: 247, column: 14, scope: !15584)
!15613 = !DILocation(line: 249, column: 15, scope: !15584)
!15614 = !DILocation(line: 254, column: 16, scope: !15615)
!15615 = distinct !DILexicalBlock(scope: !15584, file: !2437, line: 254, column: 6)
!15616 = !DILocation(line: 254, column: 6, scope: !15584)
!15617 = !DILocation(line: 260, column: 44, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15615, file: !2437, line: 254, column: 25)
!15619 = !DILocation(line: 260, column: 28, scope: !15618)
!15620 = !DILocation(line: 260, column: 26, scope: !15618)
!15621 = !DILocalVariable(name: "thread", arg: 1, scope: !15622, file: !14245, line: 65, type: !2350)
!15622 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14245, file: !14245, line: 65, type: !15623, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15625)
!15623 = !DISubroutineType(types: !15624)
!15624 = !{null, !2350, !32}
!15625 = !{!15621, !15626}
!15626 = !DILocalVariable(name: "value", arg: 2, scope: !15622, file: !14245, line: 65, type: !32)
!15627 = !DILocation(line: 0, scope: !15622, inlinedAt: !15628)
!15628 = distinct !DILocation(line: 261, column: 3, scope: !15618)
!15629 = !DILocation(line: 67, column: 15, scope: !15622, inlinedAt: !15628)
!15630 = !DILocation(line: 67, column: 33, scope: !15622, inlinedAt: !15628)
!15631 = !DILocation(line: 262, column: 3, scope: !15618)
!15632 = !DILocation(line: 263, column: 3, scope: !15618)
!15633 = !DILocation(line: 264, column: 2, scope: !15618)
!15634 = !DILocation(line: 265, column: 21, scope: !15635)
!15635 = distinct !DILexicalBlock(scope: !15615, file: !2437, line: 264, column: 9)
!15636 = !DILocation(line: 0, scope: !15426, inlinedAt: !15637)
!15637 = distinct !DILocation(line: 266, column: 3, scope: !15635)
!15638 = !DILocation(line: 0, scope: !15434, inlinedAt: !15639)
!15639 = distinct !DILocation(line: 215, column: 2, scope: !15426, inlinedAt: !15637)
!15640 = !DILocation(line: 95, column: 2, scope: !15434, inlinedAt: !15639)
!15641 = !DILocation(line: 274, column: 1, scope: !15584)
!15642 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2548, file: !2548, line: 93, type: !15643, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15645)
!15643 = !DISubroutineType(types: !15644)
!15644 = !{!334, !2443, !2443}
!15645 = !{!15646, !15647, !15648, !15649}
!15646 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15642, file: !2548, line: 93, type: !2443)
!15647 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15642, file: !2548, line: 94, type: !2443)
!15648 = !DILocalVariable(name: "b1", scope: !15642, file: !2548, line: 97, type: !334)
!15649 = !DILocalVariable(name: "b2", scope: !15642, file: !2548, line: 98, type: !334)
!15650 = !DILocation(line: 0, scope: !15642)
!15651 = !DILocation(line: 97, column: 30, scope: !15642)
!15652 = !DILocation(line: 98, column: 30, scope: !15642)
!15653 = !DILocation(line: 100, column: 9, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15642, file: !2548, line: 100, column: 6)
!15655 = !DILocation(line: 100, column: 6, scope: !15642)
!15656 = !DILocation(line: 125, column: 1, scope: !15642)
!15657 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2548, file: !2548, line: 428, type: !15658, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15660)
!15658 = !DISubroutineType(types: !15659)
!15659 = !{null, !2443}
!15660 = !{!15661}
!15661 = !DILocalVariable(name: "curr", arg: 1, scope: !15657, file: !2548, line: 428, type: !2443)
!15662 = !DILocation(line: 0, scope: !15657)
!15663 = !DILocation(line: 434, column: 6, scope: !15664)
!15664 = distinct !DILexicalBlock(scope: !15657, file: !2548, line: 434, column: 6)
!15665 = !DILocation(line: 434, column: 23, scope: !15664)
!15666 = !DILocation(line: 434, column: 6, scope: !15657)
!15667 = !DILocation(line: 435, column: 50, scope: !15668)
!15668 = distinct !DILexicalBlock(scope: !15664, file: !2548, line: 434, column: 29)
!15669 = !DILocation(line: 435, column: 48, scope: !15668)
!15670 = !DILocation(line: 435, column: 29, scope: !15668)
!15671 = !DILocation(line: 436, column: 24, scope: !15668)
!15672 = !DILocation(line: 436, column: 3, scope: !15668)
!15673 = !DILocation(line: 437, column: 2, scope: !15668)
!15674 = !DILocation(line: 438, column: 1, scope: !15657)
!15675 = distinct !DISubprogram(name: "slice_time", scope: !2548, file: !2548, line: 407, type: !15676, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15678)
!15676 = !DISubroutineType(types: !15677)
!15677 = !{!107, !2443}
!15678 = !{!15679, !15680}
!15679 = !DILocalVariable(name: "curr", arg: 1, scope: !15675, file: !2548, line: 407, type: !2443)
!15680 = !DILocalVariable(name: "ret", scope: !15675, file: !2548, line: 409, type: !107)
!15681 = !DILocation(line: 0, scope: !15675)
!15682 = !DILocation(line: 409, column: 12, scope: !15675)
!15683 = !DILocation(line: 416, column: 2, scope: !15675)
!15684 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2548, file: !2548, line: 440, type: !15685, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15687)
!15685 = !DISubroutineType(types: !15686)
!15686 = !{null, !334, !107}
!15687 = !{!15688, !15689, !15690, !15696}
!15688 = !DILocalVariable(name: "slice", arg: 1, scope: !15684, file: !2548, line: 440, type: !334)
!15689 = !DILocalVariable(name: "prio", arg: 2, scope: !15684, file: !2548, line: 440, type: !107)
!15690 = !DILocalVariable(name: "__i", scope: !15691, file: !2548, line: 442, type: !15692)
!15691 = distinct !DILexicalBlock(scope: !15684, file: !2548, line: 442, column: 2)
!15692 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !15693)
!15693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !15694)
!15694 = !{!15695}
!15695 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15693, file: !255, line: 33, baseType: !107, size: 32)
!15696 = !DILocalVariable(name: "__key", scope: !15691, file: !2548, line: 442, type: !15692)
!15697 = !DILocation(line: 0, scope: !15684)
!15698 = !DILocation(line: 0, scope: !15691)
!15699 = !DILocalVariable(name: "l", arg: 1, scope: !15700, file: !255, line: 136, type: !15703)
!15700 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !15701, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15704)
!15701 = !DISubroutineType(types: !15702)
!15702 = !{!15692, !15703}
!15703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 32)
!15704 = !{!15699, !15705}
!15705 = !DILocalVariable(name: "k", scope: !15700, file: !255, line: 139, type: !15692)
!15706 = !DILocation(line: 0, scope: !15700, inlinedAt: !15707)
!15707 = distinct !DILocation(line: 442, column: 2, scope: !15691)
!15708 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !15713)
!15709 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7053, file: !7053, line: 42, type: !7054, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15710)
!15710 = !{!15711, !15712}
!15711 = !DILocalVariable(name: "key", scope: !15709, file: !7053, line: 44, type: !32)
!15712 = !DILocalVariable(name: "tmp", scope: !15709, file: !7053, line: 53, type: !32)
!15713 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !15707)
!15714 = !{i64 2267620}
!15715 = !DILocation(line: 0, scope: !15709, inlinedAt: !15713)
!15716 = !DILocation(line: 443, column: 29, scope: !15717)
!15717 = distinct !DILexicalBlock(scope: !15718, file: !2548, line: 442, column: 26)
!15718 = distinct !DILexicalBlock(scope: !15691, file: !2548, line: 442, column: 2)
!15719 = !DILocation(line: 444, column: 17, scope: !15717)
!15720 = !DILocation(line: 445, column: 51, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15717, file: !2548, line: 445, column: 7)
!15722 = !DILocation(line: 445, column: 7, scope: !15717)
!15723 = !DILocation(line: 0, scope: !15717)
!15724 = !DILocation(line: 451, column: 18, scope: !15717)
!15725 = !DILocation(line: 452, column: 3, scope: !15717)
!15726 = !DILocalVariable(name: "key", arg: 2, scope: !15727, file: !255, line: 190, type: !15692)
!15727 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !15728, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15730)
!15728 = !DISubroutineType(types: !15729)
!15729 = !{null, !15703, !15692}
!15730 = !{!15731, !15726}
!15731 = !DILocalVariable(name: "l", arg: 1, scope: !15727, file: !255, line: 189, type: !15703)
!15732 = !DILocation(line: 0, scope: !15727, inlinedAt: !15733)
!15733 = distinct !DILocation(line: 442, column: 2, scope: !15718)
!15734 = !DILocalVariable(name: "key", arg: 1, scope: !15735, file: !7053, line: 84, type: !32)
!15735 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7053, file: !7053, line: 84, type: !7064, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15736)
!15736 = !{!15734}
!15737 = !DILocation(line: 0, scope: !15735, inlinedAt: !15738)
!15738 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !15733)
!15739 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !15738)
!15740 = !{i64 2268437}
!15741 = !DILocation(line: 454, column: 1, scope: !15684)
!15742 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3512, file: !3512, line: 389, type: !8619, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15743)
!15743 = !{!15744}
!15744 = !DILocalVariable(name: "t", arg: 1, scope: !15742, file: !3512, line: 389, type: !108)
!15745 = !DILocation(line: 0, scope: !15742)
!15746 = !DILocalVariable(name: "t", arg: 1, scope: !15747, file: !3512, line: 102, type: !109)
!15747 = distinct !DISubprogram(name: "z_tmcvt", scope: !3512, file: !3512, line: 102, type: !3520, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15748)
!15748 = !{!15746, !15749, !15750, !15751, !15752, !15753, !15754, !15755, !15756, !15757, !15758}
!15749 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15747, file: !3512, line: 102, type: !108)
!15750 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15747, file: !3512, line: 103, type: !108)
!15751 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15747, file: !3512, line: 103, type: !136)
!15752 = !DILocalVariable(name: "result32", arg: 5, scope: !15747, file: !3512, line: 104, type: !136)
!15753 = !DILocalVariable(name: "round_up", arg: 6, scope: !15747, file: !3512, line: 104, type: !136)
!15754 = !DILocalVariable(name: "round_off", arg: 7, scope: !15747, file: !3512, line: 105, type: !136)
!15755 = !DILocalVariable(name: "mul_ratio", scope: !15747, file: !3512, line: 107, type: !136)
!15756 = !DILocalVariable(name: "div_ratio", scope: !15747, file: !3512, line: 109, type: !136)
!15757 = !DILocalVariable(name: "off", scope: !15747, file: !3512, line: 116, type: !109)
!15758 = !DILocalVariable(name: "rdivisor", scope: !15759, file: !3512, line: 119, type: !108)
!15759 = distinct !DILexicalBlock(scope: !15760, file: !3512, line: 118, column: 18)
!15760 = distinct !DILexicalBlock(scope: !15747, file: !3512, line: 118, column: 6)
!15761 = !DILocation(line: 0, scope: !15747, inlinedAt: !15762)
!15762 = distinct !DILocation(line: 392, column: 9, scope: !15742)
!15763 = !DILocation(line: 143, column: 25, scope: !15764, inlinedAt: !15762)
!15764 = distinct !DILexicalBlock(scope: !15765, file: !3512, line: 142, column: 17)
!15765 = distinct !DILexicalBlock(scope: !15766, file: !3512, line: 142, column: 7)
!15766 = distinct !DILexicalBlock(scope: !15767, file: !3512, line: 141, column: 24)
!15767 = distinct !DILexicalBlock(scope: !15768, file: !3512, line: 141, column: 13)
!15768 = distinct !DILexicalBlock(scope: !15747, file: !3512, line: 134, column: 6)
!15769 = !DILocation(line: 392, column: 2, scope: !15742)
!15770 = distinct !DISubprogram(name: "z_time_slice", scope: !2548, file: !2548, line: 502, type: !9834, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15771)
!15771 = !{!15772, !15773}
!15772 = !DILocalVariable(name: "ticks", arg: 1, scope: !15770, file: !2548, line: 502, type: !107)
!15773 = !DILocalVariable(name: "key", scope: !15770, file: !2548, line: 511, type: !15692)
!15774 = !DILocation(line: 0, scope: !15770)
!15775 = !DILocation(line: 0, scope: !15700, inlinedAt: !15776)
!15776 = distinct !DILocation(line: 511, column: 25, scope: !15770)
!15777 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !15778)
!15778 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !15776)
!15779 = !DILocation(line: 0, scope: !15709, inlinedAt: !15778)
!15780 = !DILocation(line: 514, column: 6, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15770, file: !2548, line: 514, column: 6)
!15782 = !DILocation(line: 514, column: 25, scope: !15781)
!15783 = !DILocation(line: 514, column: 22, scope: !15781)
!15784 = !DILocation(line: 514, column: 6, scope: !15770)
!15785 = !DILocation(line: 515, column: 3, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15781, file: !2548, line: 514, column: 35)
!15787 = !DILocation(line: 0, scope: !15727, inlinedAt: !15788)
!15788 = distinct !DILocation(line: 516, column: 3, scope: !15786)
!15789 = !DILocation(line: 0, scope: !15735, inlinedAt: !15790)
!15790 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !15788)
!15791 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !15790)
!15792 = !DILocation(line: 517, column: 3, scope: !15786)
!15793 = !DILocation(line: 519, column: 18, scope: !15770)
!15794 = !DILocation(line: 522, column: 6, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15770, file: !2548, line: 522, column: 6)
!15796 = !DILocation(line: 522, column: 27, scope: !15795)
!15797 = !DILocation(line: 522, column: 30, scope: !15795)
!15798 = !DILocation(line: 522, column: 6, scope: !15770)
!15799 = !DILocation(line: 523, column: 30, scope: !15800)
!15800 = distinct !DILexicalBlock(scope: !15801, file: !2548, line: 523, column: 7)
!15801 = distinct !DILexicalBlock(scope: !15795, file: !2548, line: 522, column: 51)
!15802 = !DILocation(line: 523, column: 13, scope: !15800)
!15803 = !DILocation(line: 523, column: 7, scope: !15801)
!15804 = !DILocation(line: 530, column: 10, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15800, file: !2548, line: 523, column: 43)
!15806 = !DILocation(line: 531, column: 3, scope: !15805)
!15807 = !DILocation(line: 532, column: 30, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15800, file: !2548, line: 531, column: 10)
!15809 = !DILocation(line: 535, column: 29, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15795, file: !2548, line: 534, column: 9)
!15811 = !DILocation(line: 0, scope: !15727, inlinedAt: !15812)
!15812 = distinct !DILocation(line: 537, column: 2, scope: !15770)
!15813 = !DILocation(line: 0, scope: !15735, inlinedAt: !15814)
!15814 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !15812)
!15815 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !15814)
!15816 = !DILocation(line: 538, column: 1, scope: !15770)
!15817 = distinct !DISubprogram(name: "sliceable", scope: !2548, file: !2548, line: 468, type: !15818, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15820)
!15818 = !DISubroutineType(types: !15819)
!15819 = !{!136, !2443}
!15820 = !{!15821, !15822}
!15821 = !DILocalVariable(name: "thread", arg: 1, scope: !15817, file: !2548, line: 468, type: !2443)
!15822 = !DILocalVariable(name: "ret", scope: !15817, file: !2548, line: 470, type: !136)
!15823 = !DILocation(line: 0, scope: !15817)
!15824 = !DILocation(line: 470, column: 13, scope: !15817)
!15825 = !DILocation(line: 471, column: 3, scope: !15817)
!15826 = !DILocation(line: 471, column: 7, scope: !15817)
!15827 = !DILocation(line: 472, column: 3, scope: !15817)
!15828 = !DILocation(line: 472, column: 37, scope: !15817)
!15829 = !DILocation(line: 472, column: 24, scope: !15817)
!15830 = !DILocation(line: 472, column: 43, scope: !15817)
!15831 = !DILocation(line: 472, column: 7, scope: !15817)
!15832 = !DILocation(line: 473, column: 3, scope: !15817)
!15833 = !DILocation(line: 473, column: 7, scope: !15817)
!15834 = !DILocation(line: 473, column: 6, scope: !15817)
!15835 = !DILocation(line: 479, column: 2, scope: !15817)
!15836 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2548, file: !2548, line: 482, type: !15837, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15839)
!15837 = !DISubroutineType(types: !15838)
!15838 = !{!15692, !15692}
!15839 = !{!15840, !15841}
!15840 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15836, file: !2548, line: 482, type: !15692)
!15841 = !DILocalVariable(name: "curr", scope: !15836, file: !2548, line: 484, type: !2443)
!15842 = !DILocation(line: 0, scope: !15836)
!15843 = !DILocation(line: 484, column: 26, scope: !15836)
!15844 = !DILocation(line: 493, column: 7, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15836, file: !2548, line: 493, column: 6)
!15846 = !DILocation(line: 493, column: 6, scope: !15836)
!15847 = !DILocation(line: 494, column: 3, scope: !15848)
!15848 = distinct !DILexicalBlock(scope: !15845, file: !2548, line: 493, column: 49)
!15849 = !DILocation(line: 495, column: 2, scope: !15848)
!15850 = !DILocation(line: 496, column: 2, scope: !15836)
!15851 = !DILocation(line: 499, column: 1, scope: !15836)
!15852 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14225, file: !14225, line: 106, type: !15818, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15853)
!15853 = !{!15854, !15855}
!15854 = !DILocalVariable(name: "thread", arg: 1, scope: !15852, file: !14225, line: 106, type: !2443)
!15855 = !DILocalVariable(name: "state", scope: !15852, file: !14225, line: 108, type: !190)
!15856 = !DILocation(line: 0, scope: !15852)
!15857 = !DILocation(line: 108, column: 31, scope: !15852)
!15858 = !DILocation(line: 110, column: 16, scope: !15852)
!15859 = !DILocation(line: 111, column: 41, scope: !15852)
!15860 = !DILocation(line: 110, column: 2, scope: !15852)
!15861 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2548, file: !2548, line: 393, type: !15658, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15862)
!15862 = !{!15863}
!15863 = !DILocalVariable(name: "thread", arg: 1, scope: !15861, file: !2548, line: 393, type: !2443)
!15864 = !DILocation(line: 0, scope: !15861)
!15865 = !DILocation(line: 395, column: 6, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15861, file: !2548, line: 395, column: 6)
!15867 = !DILocation(line: 395, column: 6, scope: !15861)
!15868 = !DILocalVariable(name: "thread", arg: 1, scope: !15869, file: !2548, line: 264, type: !2443)
!15869 = distinct !DISubprogram(name: "dequeue_thread", scope: !2548, file: !2548, line: 264, type: !15658, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15870)
!15870 = !{!15868}
!15871 = !DILocation(line: 0, scope: !15869, inlinedAt: !15872)
!15872 = distinct !DILocation(line: 396, column: 3, scope: !15873)
!15873 = distinct !DILexicalBlock(scope: !15866, file: !2548, line: 395, column: 34)
!15874 = !DILocation(line: 266, column: 15, scope: !15869, inlinedAt: !15872)
!15875 = !DILocation(line: 266, column: 28, scope: !15869, inlinedAt: !15872)
!15876 = !DILocalVariable(name: "thread", arg: 1, scope: !15877, file: !2548, line: 232, type: !2443)
!15877 = distinct !DISubprogram(name: "runq_remove", scope: !2548, file: !2548, line: 232, type: !15658, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15878)
!15878 = !{!15876}
!15879 = !DILocation(line: 0, scope: !15877, inlinedAt: !15880)
!15880 = distinct !DILocation(line: 268, column: 3, scope: !15881, inlinedAt: !15872)
!15881 = distinct !DILexicalBlock(scope: !15882, file: !2548, line: 267, column: 35)
!15882 = distinct !DILexicalBlock(scope: !15869, file: !2548, line: 267, column: 6)
!15883 = !DILocation(line: 234, column: 2, scope: !15877, inlinedAt: !15880)
!15884 = !DILocation(line: 397, column: 2, scope: !15873)
!15885 = !DILocalVariable(name: "thread", arg: 1, scope: !15886, file: !2548, line: 250, type: !2443)
!15886 = distinct !DISubprogram(name: "queue_thread", scope: !2548, file: !2548, line: 250, type: !15658, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15887)
!15887 = !{!15885}
!15888 = !DILocation(line: 0, scope: !15886, inlinedAt: !15889)
!15889 = distinct !DILocation(line: 398, column: 2, scope: !15861)
!15890 = !DILocation(line: 252, column: 15, scope: !15886, inlinedAt: !15889)
!15891 = !DILocation(line: 252, column: 28, scope: !15886, inlinedAt: !15889)
!15892 = !DILocalVariable(name: "thread", arg: 1, scope: !15893, file: !2548, line: 227, type: !2443)
!15893 = distinct !DISubprogram(name: "runq_add", scope: !2548, file: !2548, line: 227, type: !15658, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15894)
!15894 = !{!15892}
!15895 = !DILocation(line: 0, scope: !15893, inlinedAt: !15896)
!15896 = distinct !DILocation(line: 254, column: 3, scope: !15897, inlinedAt: !15889)
!15897 = distinct !DILexicalBlock(scope: !15898, file: !2548, line: 253, column: 35)
!15898 = distinct !DILexicalBlock(scope: !15886, file: !2548, line: 253, column: 6)
!15899 = !DILocalVariable(name: "pq", arg: 1, scope: !15900, file: !2548, line: 181, type: !15903)
!15900 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2548, file: !2548, line: 181, type: !15901, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15904)
!15901 = !DISubroutineType(types: !15902)
!15902 = !{null, !15903, !2443}
!15903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!15904 = !{!15899, !15905, !15906}
!15905 = !DILocalVariable(name: "thread", arg: 2, scope: !15900, file: !2548, line: 182, type: !2443)
!15906 = !DILocalVariable(name: "t", scope: !15900, file: !2548, line: 184, type: !2443)
!15907 = !DILocation(line: 0, scope: !15900, inlinedAt: !15908)
!15908 = distinct !DILocation(line: 229, column: 2, scope: !15893, inlinedAt: !15896)
!15909 = !DILocation(line: 188, column: 2, scope: !15910, inlinedAt: !15908)
!15910 = distinct !DILexicalBlock(scope: !15900, file: !2548, line: 188, column: 2)
!15911 = !DILocation(line: 188, column: 2, scope: !15912, inlinedAt: !15908)
!15912 = distinct !DILexicalBlock(scope: !15910, file: !2548, line: 188, column: 2)
!15913 = !DILocation(line: 0, scope: !15910, inlinedAt: !15908)
!15914 = !DILocation(line: 189, column: 7, scope: !15915, inlinedAt: !15908)
!15915 = distinct !DILexicalBlock(scope: !15916, file: !2548, line: 189, column: 7)
!15916 = distinct !DILexicalBlock(scope: !15912, file: !2548, line: 188, column: 56)
!15917 = !DILocation(line: 189, column: 35, scope: !15915, inlinedAt: !15908)
!15918 = !DILocation(line: 189, column: 7, scope: !15916, inlinedAt: !15908)
!15919 = !DILocation(line: 191, column: 21, scope: !15920, inlinedAt: !15908)
!15920 = distinct !DILexicalBlock(scope: !15915, file: !2548, line: 189, column: 40)
!15921 = !DILocation(line: 190, column: 4, scope: !15920, inlinedAt: !15908)
!15922 = !DILocation(line: 192, column: 4, scope: !15920, inlinedAt: !15908)
!15923 = distinct !{!15923, !15909, !15924}
!15924 = !DILocation(line: 194, column: 2, scope: !15910, inlinedAt: !15908)
!15925 = !DILocation(line: 196, column: 37, scope: !15900, inlinedAt: !15908)
!15926 = !DILocation(line: 196, column: 2, scope: !15900, inlinedAt: !15908)
!15927 = !DILocation(line: 197, column: 1, scope: !15900, inlinedAt: !15908)
!15928 = !DILocation(line: 399, column: 25, scope: !15861)
!15929 = !DILocation(line: 399, column: 22, scope: !15861)
!15930 = !DILocation(line: 399, column: 2, scope: !15861)
!15931 = !DILocation(line: 400, column: 1, scope: !15861)
!15932 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14225, file: !14225, line: 136, type: !15818, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15933)
!15933 = !{!15934}
!15934 = !DILocalVariable(name: "thread", arg: 1, scope: !15932, file: !14225, line: 136, type: !2443)
!15935 = !DILocation(line: 0, scope: !15932)
!15936 = !DILocation(line: 138, column: 9, scope: !15932)
!15937 = !DILocation(line: 138, column: 2, scope: !15932)
!15938 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2548, file: !2548, line: 1137, type: !15901, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15939)
!15939 = !{!15940, !15941}
!15940 = !DILocalVariable(name: "pq", arg: 1, scope: !15938, file: !2548, line: 1137, type: !15903)
!15941 = !DILocalVariable(name: "thread", arg: 2, scope: !15938, file: !2548, line: 1137, type: !2443)
!15942 = !DILocation(line: 0, scope: !15938)
!15943 = !DILocation(line: 1141, column: 33, scope: !15938)
!15944 = !DILocation(line: 1141, column: 2, scope: !15938)
!15945 = !DILocation(line: 1142, column: 1, scope: !15938)
!15946 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !151, file: !151, line: 294, type: !15947, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15949)
!15947 = !DISubroutineType(types: !15948)
!15948 = !{!2544, !15903}
!15949 = !{!15950}
!15950 = !DILocalVariable(name: "list", arg: 1, scope: !15946, file: !151, line: 294, type: !15903)
!15951 = !DILocation(line: 0, scope: !15946)
!15952 = !DILocation(line: 296, column: 9, scope: !15946)
!15953 = !DILocation(line: 296, column: 49, scope: !15946)
!15954 = !DILocation(line: 296, column: 2, scope: !15946)
!15955 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !151, file: !151, line: 443, type: !15956, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15958)
!15956 = !DISubroutineType(types: !15957)
!15957 = !{null, !2544, !2544}
!15958 = !{!15959, !15960, !15961}
!15959 = !DILocalVariable(name: "successor", arg: 1, scope: !15955, file: !151, line: 443, type: !2544)
!15960 = !DILocalVariable(name: "node", arg: 2, scope: !15955, file: !151, line: 443, type: !2544)
!15961 = !DILocalVariable(name: "prev", scope: !15955, file: !151, line: 445, type: !15962)
!15962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2544)
!15963 = !DILocation(line: 0, scope: !15955)
!15964 = !DILocation(line: 445, column: 39, scope: !15955)
!15965 = !DILocation(line: 447, column: 8, scope: !15955)
!15966 = !DILocation(line: 447, column: 13, scope: !15955)
!15967 = !DILocation(line: 448, column: 8, scope: !15955)
!15968 = !DILocation(line: 448, column: 13, scope: !15955)
!15969 = !DILocation(line: 449, column: 8, scope: !15955)
!15970 = !DILocation(line: 449, column: 13, scope: !15955)
!15971 = !DILocation(line: 450, column: 18, scope: !15955)
!15972 = !DILocation(line: 451, column: 1, scope: !15955)
!15973 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !151, file: !151, line: 341, type: !15974, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15976)
!15974 = !DISubroutineType(types: !15975)
!15975 = !{!2544, !15903, !2544}
!15976 = !{!15977, !15978}
!15977 = !DILocalVariable(name: "list", arg: 1, scope: !15973, file: !151, line: 341, type: !15903)
!15978 = !DILocalVariable(name: "node", arg: 2, scope: !15973, file: !151, line: 342, type: !2544)
!15979 = !DILocation(line: 0, scope: !15973)
!15980 = !DILocation(line: 344, column: 15, scope: !15973)
!15981 = !DILocation(line: 344, column: 9, scope: !15973)
!15982 = !DILocation(line: 344, column: 26, scope: !15973)
!15983 = !DILocation(line: 344, column: 2, scope: !15973)
!15984 = distinct !DISubprogram(name: "sys_dlist_append", scope: !151, file: !151, line: 404, type: !15985, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15987)
!15985 = !DISubroutineType(types: !15986)
!15986 = !{null, !15903, !2544}
!15987 = !{!15988, !15989, !15990}
!15988 = !DILocalVariable(name: "list", arg: 1, scope: !15984, file: !151, line: 404, type: !15903)
!15989 = !DILocalVariable(name: "node", arg: 2, scope: !15984, file: !151, line: 404, type: !2544)
!15990 = !DILocalVariable(name: "tail", scope: !15984, file: !151, line: 406, type: !15962)
!15991 = !DILocation(line: 0, scope: !15984)
!15992 = !DILocation(line: 406, column: 34, scope: !15984)
!15993 = !DILocation(line: 408, column: 8, scope: !15984)
!15994 = !DILocation(line: 408, column: 13, scope: !15984)
!15995 = !DILocation(line: 409, column: 8, scope: !15984)
!15996 = !DILocation(line: 409, column: 13, scope: !15984)
!15997 = !DILocation(line: 411, column: 8, scope: !15984)
!15998 = !DILocation(line: 411, column: 13, scope: !15984)
!15999 = !DILocation(line: 412, column: 13, scope: !15984)
!16000 = !DILocation(line: 413, column: 1, scope: !15984)
!16001 = distinct !DISubprogram(name: "update_cache", scope: !2548, file: !2548, line: 559, type: !9834, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16002)
!16002 = !{!16003, !16004}
!16003 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16001, file: !2548, line: 559, type: !107)
!16004 = !DILocalVariable(name: "thread", scope: !16001, file: !2548, line: 562, type: !2443)
!16005 = !DILocation(line: 0, scope: !16001)
!16006 = !DILocation(line: 239, column: 9, scope: !16007, inlinedAt: !16010)
!16007 = distinct !DISubprogram(name: "runq_best", scope: !2548, file: !2548, line: 237, type: !16008, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !256)
!16008 = !DISubroutineType(types: !16009)
!16009 = !{!2443}
!16010 = distinct !DILocation(line: 314, column: 28, scope: !16011, inlinedAt: !16014)
!16011 = distinct !DISubprogram(name: "next_up", scope: !2548, file: !2548, line: 312, type: !16008, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16012)
!16012 = !{!16013}
!16013 = !DILocalVariable(name: "thread", scope: !16011, file: !2548, line: 314, type: !2443)
!16014 = distinct !DILocation(line: 562, column: 28, scope: !16001)
!16015 = !DILocation(line: 0, scope: !16011, inlinedAt: !16014)
!16016 = !DILocation(line: 340, column: 17, scope: !16011, inlinedAt: !16014)
!16017 = !DILocation(line: 340, column: 9, scope: !16011, inlinedAt: !16014)
!16018 = !DILocalVariable(name: "thread", arg: 1, scope: !16019, file: !2548, line: 127, type: !2443)
!16019 = distinct !DISubprogram(name: "should_preempt", scope: !2548, file: !2548, line: 127, type: !16020, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16022)
!16020 = !DISubroutineType(types: !16021)
!16021 = !{!136, !2443, !107}
!16022 = !{!16018, !16023}
!16023 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16019, file: !2548, line: 128, type: !107)
!16024 = !DILocation(line: 0, scope: !16019, inlinedAt: !16025)
!16025 = distinct !DILocation(line: 564, column: 6, scope: !16026)
!16026 = distinct !DILexicalBlock(scope: !16001, file: !2548, line: 564, column: 6)
!16027 = !DILocation(line: 133, column: 17, scope: !16028, inlinedAt: !16025)
!16028 = distinct !DILexicalBlock(scope: !16019, file: !2548, line: 133, column: 6)
!16029 = !DILocation(line: 0, scope: !16026)
!16030 = !DILocation(line: 133, column: 6, scope: !16019, inlinedAt: !16025)
!16031 = !DILocation(line: 140, column: 6, scope: !16032, inlinedAt: !16025)
!16032 = distinct !DILexicalBlock(scope: !16019, file: !2548, line: 140, column: 6)
!16033 = !DILocation(line: 140, column: 6, scope: !16019, inlinedAt: !16025)
!16034 = !DILocation(line: 150, column: 9, scope: !16035, inlinedAt: !16025)
!16035 = distinct !DILexicalBlock(scope: !16019, file: !2548, line: 149, column: 6)
!16036 = !DILocation(line: 149, column: 6, scope: !16019, inlinedAt: !16025)
!16037 = !DILocation(line: 157, column: 6, scope: !16038, inlinedAt: !16025)
!16038 = distinct !DILexicalBlock(scope: !16019, file: !2548, line: 157, column: 6)
!16039 = !DILocation(line: 564, column: 6, scope: !16001)
!16040 = !DILocation(line: 566, column: 14, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16042, file: !2548, line: 566, column: 7)
!16042 = distinct !DILexicalBlock(scope: !16026, file: !2548, line: 564, column: 42)
!16043 = !DILocation(line: 566, column: 7, scope: !16042)
!16044 = !DILocation(line: 567, column: 4, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !16041, file: !2548, line: 566, column: 27)
!16046 = !DILocation(line: 568, column: 3, scope: !16045)
!16047 = !DILocation(line: 585, column: 1, scope: !16001)
!16048 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2548, file: !2548, line: 1144, type: !16049, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16051)
!16049 = !DISubroutineType(types: !16050)
!16050 = !{!2443, !15903}
!16051 = !{!16052, !16053, !16054}
!16052 = !DILocalVariable(name: "pq", arg: 1, scope: !16048, file: !2548, line: 1144, type: !15903)
!16053 = !DILocalVariable(name: "thread", scope: !16048, file: !2548, line: 1146, type: !2443)
!16054 = !DILocalVariable(name: "n", scope: !16048, file: !2548, line: 1147, type: !2544)
!16055 = !DILocation(line: 0, scope: !16048)
!16056 = !DILocation(line: 1147, column: 19, scope: !16048)
!16057 = !DILocation(line: 1152, column: 2, scope: !16048)
!16058 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14225, file: !14225, line: 115, type: !15818, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16059)
!16059 = !{!16060}
!16060 = !DILocalVariable(name: "thread", arg: 1, scope: !16058, file: !14225, line: 115, type: !2443)
!16061 = !DILocation(line: 0, scope: !16058)
!16062 = !DILocation(line: 117, column: 46, scope: !16058)
!16063 = !DILocation(line: 117, column: 10, scope: !16058)
!16064 = !DILocation(line: 117, column: 9, scope: !16058)
!16065 = !DILocation(line: 117, column: 2, scope: !16058)
!16066 = distinct !DISubprogram(name: "is_preempt", scope: !2548, file: !2548, line: 62, type: !15676, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16067)
!16067 = !{!16068}
!16068 = !DILocalVariable(name: "thread", arg: 1, scope: !16066, file: !2548, line: 62, type: !2443)
!16069 = !DILocation(line: 0, scope: !16066)
!16070 = !DILocation(line: 65, column: 22, scope: !16066)
!16071 = !DILocation(line: 65, column: 30, scope: !16066)
!16072 = !DILocation(line: 65, column: 2, scope: !16066)
!16073 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14619, file: !14619, line: 35, type: !16074, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16078)
!16074 = !DISubroutineType(types: !16075)
!16075 = !{!136, !16076}
!16076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16077, size: 32)
!16077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2494)
!16078 = !{!16079}
!16079 = !DILocalVariable(name: "to", arg: 1, scope: !16073, file: !14619, line: 35, type: !16076)
!16080 = !DILocation(line: 0, scope: !16073)
!16081 = !DILocation(line: 37, column: 35, scope: !16073)
!16082 = !DILocation(line: 37, column: 10, scope: !16073)
!16083 = !DILocation(line: 37, column: 9, scope: !16073)
!16084 = !DILocation(line: 37, column: 2, scope: !16073)
!16085 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !151, file: !151, line: 225, type: !16086, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16090)
!16086 = !DISubroutineType(types: !16087)
!16087 = !{!136, !16088}
!16088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16089, size: 32)
!16089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2453)
!16090 = !{!16091}
!16091 = !DILocalVariable(name: "node", arg: 1, scope: !16085, file: !151, line: 225, type: !16088)
!16092 = !DILocation(line: 0, scope: !16085)
!16093 = !DILocation(line: 227, column: 15, scope: !16085)
!16094 = !DILocation(line: 227, column: 20, scope: !16085)
!16095 = !DILocation(line: 227, column: 2, scope: !16085)
!16096 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !151, file: !151, line: 325, type: !15974, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16097)
!16097 = !{!16098, !16099}
!16098 = !DILocalVariable(name: "list", arg: 1, scope: !16096, file: !151, line: 325, type: !15903)
!16099 = !DILocalVariable(name: "node", arg: 2, scope: !16096, file: !151, line: 326, type: !2544)
!16100 = !DILocation(line: 0, scope: !16096)
!16101 = !DILocation(line: 328, column: 24, scope: !16096)
!16102 = !DILocation(line: 328, column: 15, scope: !16096)
!16103 = !DILocation(line: 328, column: 9, scope: !16096)
!16104 = !DILocation(line: 328, column: 45, scope: !16096)
!16105 = !DILocation(line: 328, column: 2, scope: !16096)
!16106 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !151, file: !151, line: 266, type: !16107, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16109)
!16107 = !DISubroutineType(types: !16108)
!16108 = !{!136, !15903}
!16109 = !{!16110}
!16110 = !DILocalVariable(name: "list", arg: 1, scope: !16106, file: !151, line: 266, type: !15903)
!16111 = !DILocation(line: 0, scope: !16106)
!16112 = !DILocation(line: 268, column: 15, scope: !16106)
!16113 = !DILocation(line: 268, column: 20, scope: !16106)
!16114 = !DILocation(line: 268, column: 2, scope: !16106)
!16115 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !151, file: !151, line: 496, type: !16116, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16118)
!16116 = !DISubroutineType(types: !16117)
!16117 = !{null, !2544}
!16118 = !{!16119, !16120, !16121}
!16119 = !DILocalVariable(name: "node", arg: 1, scope: !16115, file: !151, line: 496, type: !2544)
!16120 = !DILocalVariable(name: "prev", scope: !16115, file: !151, line: 498, type: !15962)
!16121 = !DILocalVariable(name: "next", scope: !16115, file: !151, line: 499, type: !15962)
!16122 = !DILocation(line: 0, scope: !16115)
!16123 = !DILocation(line: 498, column: 34, scope: !16115)
!16124 = !DILocation(line: 499, column: 34, scope: !16115)
!16125 = !DILocation(line: 501, column: 8, scope: !16115)
!16126 = !DILocation(line: 501, column: 13, scope: !16115)
!16127 = !DILocation(line: 502, column: 8, scope: !16115)
!16128 = !DILocation(line: 502, column: 13, scope: !16115)
!16129 = !DILocation(line: 503, column: 2, scope: !16115)
!16130 = !DILocation(line: 504, column: 1, scope: !16115)
!16131 = distinct !DISubprogram(name: "sys_dnode_init", scope: !151, file: !151, line: 211, type: !16116, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16132)
!16132 = !{!16133}
!16133 = !DILocalVariable(name: "node", arg: 1, scope: !16131, file: !151, line: 211, type: !2544)
!16134 = !DILocation(line: 0, scope: !16131)
!16135 = !DILocation(line: 213, column: 8, scope: !16131)
!16136 = !DILocation(line: 213, column: 13, scope: !16131)
!16137 = !DILocation(line: 214, column: 8, scope: !16131)
!16138 = !DILocation(line: 214, column: 13, scope: !16131)
!16139 = !DILocation(line: 215, column: 1, scope: !16131)
!16140 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14225, file: !14225, line: 131, type: !16141, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16143)
!16141 = !DISubroutineType(types: !16142)
!16142 = !{!136, !2443, !108}
!16143 = !{!16144, !16145}
!16144 = !DILocalVariable(name: "thread", arg: 1, scope: !16140, file: !14225, line: 131, type: !2443)
!16145 = !DILocalVariable(name: "state", arg: 2, scope: !16140, file: !14225, line: 131, type: !108)
!16146 = !DILocation(line: 0, scope: !16140)
!16147 = !DILocation(line: 133, column: 23, scope: !16140)
!16148 = !DILocation(line: 133, column: 45, scope: !16140)
!16149 = !DILocation(line: 133, column: 2, scope: !16140)
!16150 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14225, file: !14225, line: 211, type: !15510, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16151)
!16151 = !{!16152, !16153}
!16152 = !DILocalVariable(name: "prio", arg: 1, scope: !16150, file: !14225, line: 211, type: !107)
!16153 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16150, file: !14225, line: 211, type: !107)
!16154 = !DILocation(line: 0, scope: !16150)
!16155 = !DILocation(line: 213, column: 9, scope: !16150)
!16156 = !DILocation(line: 213, column: 2, scope: !16150)
!16157 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14225, file: !14225, line: 83, type: !15818, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16158)
!16158 = !{!16159}
!16159 = !DILocalVariable(name: "thread", arg: 1, scope: !16157, file: !14225, line: 83, type: !2443)
!16160 = !DILocation(line: 0, scope: !16157)
!16161 = !DILocation(line: 89, column: 16, scope: !16157)
!16162 = !DILocation(line: 89, column: 2, scope: !16157)
!16163 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14225, file: !14225, line: 206, type: !15510, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16164)
!16164 = !{!16165, !16166}
!16165 = !DILocalVariable(name: "prio1", arg: 1, scope: !16163, file: !14225, line: 206, type: !107)
!16166 = !DILocalVariable(name: "prio2", arg: 2, scope: !16163, file: !14225, line: 206, type: !107)
!16167 = !DILocation(line: 0, scope: !16163)
!16168 = !DILocation(line: 208, column: 15, scope: !16163)
!16169 = !DILocation(line: 208, column: 2, scope: !16163)
!16170 = distinct !DISubprogram(name: "z_ready_thread", scope: !2548, file: !2548, line: 635, type: !15658, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16171)
!16171 = !{!16172, !16173, !16175}
!16172 = !DILocalVariable(name: "thread", arg: 1, scope: !16170, file: !2548, line: 635, type: !2443)
!16173 = !DILocalVariable(name: "__i", scope: !16174, file: !2548, line: 637, type: !15692)
!16174 = distinct !DILexicalBlock(scope: !16170, file: !2548, line: 637, column: 2)
!16175 = !DILocalVariable(name: "__key", scope: !16174, file: !2548, line: 637, type: !15692)
!16176 = !DILocation(line: 0, scope: !16170)
!16177 = !DILocation(line: 0, scope: !16174)
!16178 = !DILocation(line: 0, scope: !15700, inlinedAt: !16179)
!16179 = distinct !DILocation(line: 637, column: 2, scope: !16174)
!16180 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16181)
!16181 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16179)
!16182 = !DILocation(line: 0, scope: !15709, inlinedAt: !16181)
!16183 = !DILocation(line: 639, column: 4, scope: !16184)
!16184 = distinct !DILexicalBlock(scope: !16185, file: !2548, line: 638, column: 41)
!16185 = distinct !DILexicalBlock(scope: !16186, file: !2548, line: 638, column: 7)
!16186 = distinct !DILexicalBlock(scope: !16187, file: !2548, line: 637, column: 26)
!16187 = distinct !DILexicalBlock(scope: !16174, file: !2548, line: 637, column: 2)
!16188 = !DILocation(line: 0, scope: !15727, inlinedAt: !16189)
!16189 = distinct !DILocation(line: 637, column: 2, scope: !16187)
!16190 = !DILocation(line: 0, scope: !15735, inlinedAt: !16191)
!16191 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16189)
!16192 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16191)
!16193 = !DILocation(line: 642, column: 1, scope: !16170)
!16194 = distinct !DISubprogram(name: "ready_thread", scope: !2548, file: !2548, line: 617, type: !15658, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16195)
!16195 = !{!16196}
!16196 = !DILocalVariable(name: "thread", arg: 1, scope: !16194, file: !2548, line: 617, type: !2443)
!16197 = !DILocation(line: 0, scope: !16194)
!16198 = !DILocation(line: 626, column: 7, scope: !16199)
!16199 = distinct !DILexicalBlock(scope: !16194, file: !2548, line: 626, column: 6)
!16200 = !DILocation(line: 626, column: 34, scope: !16199)
!16201 = !DILocation(line: 626, column: 37, scope: !16199)
!16202 = !DILocation(line: 626, column: 6, scope: !16194)
!16203 = !DILocation(line: 0, scope: !15886, inlinedAt: !16204)
!16204 = distinct !DILocation(line: 629, column: 3, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16199, file: !2548, line: 626, column: 64)
!16206 = !DILocation(line: 252, column: 15, scope: !15886, inlinedAt: !16204)
!16207 = !DILocation(line: 252, column: 28, scope: !15886, inlinedAt: !16204)
!16208 = !DILocation(line: 0, scope: !15893, inlinedAt: !16209)
!16209 = distinct !DILocation(line: 254, column: 3, scope: !15897, inlinedAt: !16204)
!16210 = !DILocation(line: 0, scope: !15900, inlinedAt: !16211)
!16211 = distinct !DILocation(line: 229, column: 2, scope: !15893, inlinedAt: !16209)
!16212 = !DILocation(line: 188, column: 2, scope: !15910, inlinedAt: !16211)
!16213 = !DILocation(line: 188, column: 2, scope: !15912, inlinedAt: !16211)
!16214 = !DILocation(line: 0, scope: !15910, inlinedAt: !16211)
!16215 = !DILocation(line: 189, column: 7, scope: !15915, inlinedAt: !16211)
!16216 = !DILocation(line: 189, column: 35, scope: !15915, inlinedAt: !16211)
!16217 = !DILocation(line: 189, column: 7, scope: !15916, inlinedAt: !16211)
!16218 = !DILocation(line: 191, column: 21, scope: !15920, inlinedAt: !16211)
!16219 = !DILocation(line: 190, column: 4, scope: !15920, inlinedAt: !16211)
!16220 = !DILocation(line: 192, column: 4, scope: !15920, inlinedAt: !16211)
!16221 = distinct !{!16221, !16212, !16222}
!16222 = !DILocation(line: 194, column: 2, scope: !15910, inlinedAt: !16211)
!16223 = !DILocation(line: 196, column: 37, scope: !15900, inlinedAt: !16211)
!16224 = !DILocation(line: 196, column: 2, scope: !15900, inlinedAt: !16211)
!16225 = !DILocation(line: 197, column: 1, scope: !15900, inlinedAt: !16211)
!16226 = !DILocation(line: 630, column: 3, scope: !16205)
!16227 = !DILocation(line: 632, column: 2, scope: !16205)
!16228 = !DILocation(line: 633, column: 1, scope: !16194)
!16229 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14225, file: !14225, line: 120, type: !15818, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16230)
!16230 = !{!16231}
!16231 = !DILocalVariable(name: "thread", arg: 1, scope: !16229, file: !14225, line: 120, type: !2443)
!16232 = !DILocation(line: 0, scope: !16229)
!16233 = !DILocation(line: 122, column: 12, scope: !16229)
!16234 = !DILocation(line: 122, column: 62, scope: !16229)
!16235 = !DILocation(line: 123, column: 4, scope: !16229)
!16236 = !DILocation(line: 122, column: 2, scope: !16229)
!16237 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2548, file: !2548, line: 644, type: !15658, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16238)
!16238 = !{!16239, !16240, !16242}
!16239 = !DILocalVariable(name: "thread", arg: 1, scope: !16237, file: !2548, line: 644, type: !2443)
!16240 = !DILocalVariable(name: "__i", scope: !16241, file: !2548, line: 646, type: !15692)
!16241 = distinct !DILexicalBlock(scope: !16237, file: !2548, line: 646, column: 2)
!16242 = !DILocalVariable(name: "__key", scope: !16241, file: !2548, line: 646, type: !15692)
!16243 = !DILocation(line: 0, scope: !16237)
!16244 = !DILocation(line: 0, scope: !16241)
!16245 = !DILocation(line: 0, scope: !15700, inlinedAt: !16246)
!16246 = distinct !DILocation(line: 646, column: 2, scope: !16241)
!16247 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16248)
!16248 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16246)
!16249 = !DILocation(line: 0, scope: !15709, inlinedAt: !16248)
!16250 = !DILocation(line: 647, column: 3, scope: !16251)
!16251 = distinct !DILexicalBlock(scope: !16252, file: !2548, line: 646, column: 26)
!16252 = distinct !DILexicalBlock(scope: !16241, file: !2548, line: 646, column: 2)
!16253 = !DILocation(line: 0, scope: !15727, inlinedAt: !16254)
!16254 = distinct !DILocation(line: 646, column: 2, scope: !16252)
!16255 = !DILocation(line: 0, scope: !15735, inlinedAt: !16256)
!16256 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16254)
!16257 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16256)
!16258 = !DILocation(line: 649, column: 1, scope: !16237)
!16259 = distinct !DISubprogram(name: "z_sched_start", scope: !2548, file: !2548, line: 651, type: !15658, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16260)
!16260 = !{!16261, !16262}
!16261 = !DILocalVariable(name: "thread", arg: 1, scope: !16259, file: !2548, line: 651, type: !2443)
!16262 = !DILocalVariable(name: "key", scope: !16259, file: !2548, line: 653, type: !15692)
!16263 = !DILocation(line: 0, scope: !16259)
!16264 = !DILocation(line: 0, scope: !15700, inlinedAt: !16265)
!16265 = distinct !DILocation(line: 653, column: 25, scope: !16259)
!16266 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16267)
!16267 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16265)
!16268 = !DILocation(line: 0, scope: !15709, inlinedAt: !16267)
!16269 = !DILocation(line: 655, column: 6, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16259, file: !2548, line: 655, column: 6)
!16271 = !DILocation(line: 655, column: 6, scope: !16259)
!16272 = !DILocation(line: 0, scope: !15727, inlinedAt: !16273)
!16273 = distinct !DILocation(line: 656, column: 3, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16270, file: !2548, line: 655, column: 36)
!16275 = !DILocation(line: 0, scope: !15735, inlinedAt: !16276)
!16276 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16273)
!16277 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16276)
!16278 = !DILocation(line: 657, column: 3, scope: !16274)
!16279 = !DILocation(line: 660, column: 2, scope: !16259)
!16280 = !DILocation(line: 661, column: 2, scope: !16259)
!16281 = !DILocation(line: 662, column: 2, scope: !16259)
!16282 = !DILocation(line: 663, column: 1, scope: !16259)
!16283 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14225, file: !14225, line: 126, type: !15818, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16284)
!16284 = !{!16285}
!16285 = !DILocalVariable(name: "thread", arg: 1, scope: !16283, file: !14225, line: 126, type: !2443)
!16286 = !DILocation(line: 0, scope: !16283)
!16287 = !DILocation(line: 128, column: 23, scope: !16283)
!16288 = !DILocation(line: 128, column: 36, scope: !16283)
!16289 = !DILocation(line: 128, column: 56, scope: !16283)
!16290 = !DILocation(line: 128, column: 2, scope: !16283)
!16291 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14225, file: !14225, line: 155, type: !15658, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16292)
!16292 = !{!16293}
!16293 = !DILocalVariable(name: "thread", arg: 1, scope: !16291, file: !14225, line: 155, type: !2443)
!16294 = !DILocation(line: 0, scope: !16291)
!16295 = !DILocation(line: 157, column: 15, scope: !16291)
!16296 = !DILocation(line: 157, column: 28, scope: !16291)
!16297 = !DILocation(line: 158, column: 1, scope: !16291)
!16298 = distinct !DISubprogram(name: "z_reschedule", scope: !2548, file: !2548, line: 967, type: !15728, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16299)
!16299 = !{!16300, !16301}
!16300 = !DILocalVariable(name: "lock", arg: 1, scope: !16298, file: !2548, line: 967, type: !15703)
!16301 = !DILocalVariable(name: "key", arg: 2, scope: !16298, file: !2548, line: 967, type: !15692)
!16302 = !DILocation(line: 0, scope: !16298)
!16303 = !DILocation(line: 969, column: 6, scope: !16304)
!16304 = distinct !DILexicalBlock(scope: !16298, file: !2548, line: 969, column: 6)
!16305 = !DILocation(line: 969, column: 23, scope: !16304)
!16306 = !DILocation(line: 969, column: 26, scope: !16304)
!16307 = !DILocation(line: 969, column: 6, scope: !16298)
!16308 = !DILocalVariable(name: "key", arg: 2, scope: !16309, file: !14329, line: 193, type: !15692)
!16309 = distinct !DISubprogram(name: "z_swap", scope: !14329, file: !14329, line: 193, type: !16310, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16312)
!16310 = !DISubroutineType(types: !16311)
!16311 = !{!107, !15703, !15692}
!16312 = !{!16313, !16308}
!16313 = !DILocalVariable(name: "lock", arg: 1, scope: !16309, file: !14329, line: 193, type: !15703)
!16314 = !DILocation(line: 0, scope: !16309, inlinedAt: !16315)
!16315 = distinct !DILocation(line: 970, column: 3, scope: !16316)
!16316 = distinct !DILexicalBlock(scope: !16304, file: !2548, line: 969, column: 39)
!16317 = !DILocation(line: 196, column: 9, scope: !16309, inlinedAt: !16315)
!16318 = !DILocation(line: 971, column: 2, scope: !16316)
!16319 = !DILocation(line: 0, scope: !15727, inlinedAt: !16320)
!16320 = distinct !DILocation(line: 972, column: 3, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16304, file: !2548, line: 971, column: 9)
!16322 = !DILocation(line: 0, scope: !15735, inlinedAt: !16323)
!16323 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16320)
!16324 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16323)
!16325 = !DILocation(line: 975, column: 1, scope: !16298)
!16326 = distinct !DISubprogram(name: "resched", scope: !2548, file: !2548, line: 940, type: !16327, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16329)
!16327 = !DISubroutineType(types: !16328)
!16328 = !{!136, !108}
!16329 = !{!16330}
!16330 = !DILocalVariable(name: "key", arg: 1, scope: !16326, file: !2548, line: 940, type: !108)
!16331 = !DILocation(line: 0, scope: !16326)
!16332 = !DILocalVariable(name: "key", arg: 1, scope: !16333, file: !7053, line: 112, type: !32)
!16333 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7053, file: !7053, line: 112, type: !16334, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16336)
!16334 = !DISubroutineType(types: !16335)
!16335 = !{!136, !32}
!16336 = !{!16332}
!16337 = !DILocation(line: 0, scope: !16333, inlinedAt: !16338)
!16338 = distinct !DILocation(line: 946, column: 9, scope: !16326)
!16339 = !DILocation(line: 115, column: 13, scope: !16333, inlinedAt: !16338)
!16340 = !DILocation(line: 946, column: 32, scope: !16326)
!16341 = !DILocation(line: 1031, column: 3, scope: !16342, inlinedAt: !16345)
!16342 = distinct !DISubprogram(name: "__get_IPSR", scope: !7374, file: !7374, line: 1027, type: !7455, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16343)
!16343 = !{!16344}
!16344 = !DILocalVariable(name: "result", scope: !16342, file: !7374, line: 1029, type: !108)
!16345 = distinct !DILocation(line: 48, column: 10, scope: !16346, inlinedAt: !16347)
!16346 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8392, file: !8392, line: 46, type: !8393, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !256)
!16347 = distinct !DILocation(line: 946, column: 36, scope: !16326)
!16348 = !{i64 3585233}
!16349 = !DILocation(line: 0, scope: !16342, inlinedAt: !16345)
!16350 = !DILocation(line: 48, column: 9, scope: !16346, inlinedAt: !16347)
!16351 = !DILocation(line: 946, column: 2, scope: !16326)
!16352 = distinct !DISubprogram(name: "need_swap", scope: !2548, file: !2548, line: 953, type: !8393, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16353)
!16353 = !{!16354}
!16354 = !DILocalVariable(name: "new_thread", scope: !16352, file: !2548, line: 959, type: !2443)
!16355 = !DILocation(line: 962, column: 31, scope: !16352)
!16356 = !DILocation(line: 0, scope: !16352)
!16357 = !DILocation(line: 963, column: 23, scope: !16352)
!16358 = !DILocation(line: 963, column: 20, scope: !16352)
!16359 = !DILocation(line: 963, column: 2, scope: !16352)
!16360 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14329, file: !14329, line: 181, type: !7384, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16361)
!16361 = !{!16362, !16363}
!16362 = !DILocalVariable(name: "key", arg: 1, scope: !16360, file: !14329, line: 181, type: !32)
!16363 = !DILocalVariable(name: "ret", scope: !16360, file: !14329, line: 183, type: !107)
!16364 = !DILocation(line: 0, scope: !16360)
!16365 = !DILocation(line: 185, column: 8, scope: !16360)
!16366 = !DILocation(line: 186, column: 2, scope: !16360)
!16367 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2548, file: !2548, line: 665, type: !15658, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16368)
!16368 = !{!16369, !16370, !16372}
!16369 = !DILocalVariable(name: "thread", arg: 1, scope: !16367, file: !2548, line: 665, type: !2443)
!16370 = !DILocalVariable(name: "__i", scope: !16371, file: !2548, line: 671, type: !15692)
!16371 = distinct !DILexicalBlock(scope: !16367, file: !2548, line: 671, column: 2)
!16372 = !DILocalVariable(name: "__key", scope: !16371, file: !2548, line: 671, type: !15692)
!16373 = !DILocation(line: 0, scope: !16367)
!16374 = !DILocation(line: 669, column: 8, scope: !16367)
!16375 = !DILocation(line: 0, scope: !16371)
!16376 = !DILocation(line: 0, scope: !15700, inlinedAt: !16377)
!16377 = distinct !DILocation(line: 671, column: 2, scope: !16371)
!16378 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16379)
!16379 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16377)
!16380 = !DILocation(line: 0, scope: !15709, inlinedAt: !16379)
!16381 = !DILocation(line: 672, column: 7, scope: !16382)
!16382 = distinct !DILexicalBlock(scope: !16383, file: !2548, line: 672, column: 7)
!16383 = distinct !DILexicalBlock(scope: !16384, file: !2548, line: 671, column: 26)
!16384 = distinct !DILexicalBlock(scope: !16371, file: !2548, line: 671, column: 2)
!16385 = !DILocation(line: 672, column: 7, scope: !16383)
!16386 = !DILocation(line: 0, scope: !15869, inlinedAt: !16387)
!16387 = distinct !DILocation(line: 673, column: 4, scope: !16388)
!16388 = distinct !DILexicalBlock(scope: !16382, file: !2548, line: 672, column: 35)
!16389 = !DILocation(line: 266, column: 15, scope: !15869, inlinedAt: !16387)
!16390 = !DILocation(line: 266, column: 28, scope: !15869, inlinedAt: !16387)
!16391 = !DILocation(line: 0, scope: !15877, inlinedAt: !16392)
!16392 = distinct !DILocation(line: 268, column: 3, scope: !15881, inlinedAt: !16387)
!16393 = !DILocation(line: 234, column: 2, scope: !15877, inlinedAt: !16392)
!16394 = !DILocation(line: 674, column: 3, scope: !16388)
!16395 = !DILocation(line: 675, column: 3, scope: !16383)
!16396 = !DILocation(line: 676, column: 26, scope: !16383)
!16397 = !DILocation(line: 676, column: 23, scope: !16383)
!16398 = !DILocation(line: 676, column: 3, scope: !16383)
!16399 = !DILocation(line: 0, scope: !15727, inlinedAt: !16400)
!16400 = distinct !DILocation(line: 671, column: 2, scope: !16384)
!16401 = !DILocation(line: 0, scope: !15735, inlinedAt: !16402)
!16402 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16400)
!16403 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16402)
!16404 = !DILocation(line: 679, column: 16, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !16367, file: !2548, line: 679, column: 6)
!16406 = !DILocation(line: 679, column: 13, scope: !16405)
!16407 = !DILocation(line: 679, column: 6, scope: !16367)
!16408 = !DILocation(line: 680, column: 3, scope: !16409)
!16409 = distinct !DILexicalBlock(scope: !16405, file: !2548, line: 679, column: 26)
!16410 = !DILocation(line: 681, column: 2, scope: !16409)
!16411 = !DILocation(line: 684, column: 1, scope: !16367)
!16412 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14619, file: !14619, line: 52, type: !15676, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16413)
!16413 = !{!16414}
!16414 = !DILocalVariable(name: "thread", arg: 1, scope: !16412, file: !14619, line: 52, type: !2443)
!16415 = !DILocation(line: 0, scope: !16412)
!16416 = !DILocation(line: 54, column: 39, scope: !16412)
!16417 = !DILocation(line: 54, column: 9, scope: !16412)
!16418 = !DILocation(line: 54, column: 2, scope: !16412)
!16419 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14225, file: !14225, line: 141, type: !15658, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16420)
!16420 = !{!16421}
!16421 = !DILocalVariable(name: "thread", arg: 1, scope: !16419, file: !14225, line: 141, type: !2443)
!16422 = !DILocation(line: 0, scope: !16419)
!16423 = !DILocation(line: 143, column: 15, scope: !16419)
!16424 = !DILocation(line: 143, column: 28, scope: !16419)
!16425 = !DILocation(line: 146, column: 1, scope: !16419)
!16426 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14225, file: !14225, line: 73, type: !337, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !256)
!16427 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16428)
!16428 = distinct !DILocation(line: 75, column: 30, scope: !16426)
!16429 = !DILocation(line: 0, scope: !15709, inlinedAt: !16428)
!16430 = !DILocation(line: 75, column: 9, scope: !16426)
!16431 = !DILocation(line: 76, column: 1, scope: !16426)
!16432 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2548, file: !2548, line: 977, type: !7465, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16433)
!16433 = !{!16434}
!16434 = !DILocalVariable(name: "key", arg: 1, scope: !16432, file: !2548, line: 977, type: !108)
!16435 = !DILocation(line: 0, scope: !16432)
!16436 = !DILocation(line: 979, column: 6, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16432, file: !2548, line: 979, column: 6)
!16438 = !DILocation(line: 979, column: 6, scope: !16432)
!16439 = !DILocation(line: 980, column: 3, scope: !16440)
!16440 = distinct !DILexicalBlock(scope: !16437, file: !2548, line: 979, column: 20)
!16441 = !DILocation(line: 981, column: 2, scope: !16440)
!16442 = !DILocation(line: 0, scope: !15735, inlinedAt: !16443)
!16443 = distinct !DILocation(line: 982, column: 3, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16437, file: !2548, line: 981, column: 9)
!16445 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16443)
!16446 = !DILocation(line: 985, column: 1, scope: !16432)
!16447 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2548, file: !2548, line: 695, type: !15658, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16448)
!16448 = !{!16449, !16450}
!16449 = !DILocalVariable(name: "thread", arg: 1, scope: !16447, file: !2548, line: 695, type: !2443)
!16450 = !DILocalVariable(name: "key", scope: !16447, file: !2548, line: 699, type: !15692)
!16451 = !DILocation(line: 0, scope: !16447)
!16452 = !DILocation(line: 0, scope: !15700, inlinedAt: !16453)
!16453 = distinct !DILocation(line: 699, column: 25, scope: !16447)
!16454 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16455)
!16455 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16453)
!16456 = !DILocation(line: 0, scope: !15709, inlinedAt: !16455)
!16457 = !DILocation(line: 702, column: 7, scope: !16458)
!16458 = distinct !DILexicalBlock(scope: !16447, file: !2548, line: 702, column: 6)
!16459 = !DILocation(line: 702, column: 6, scope: !16447)
!16460 = !DILocation(line: 0, scope: !15727, inlinedAt: !16461)
!16461 = distinct !DILocation(line: 703, column: 3, scope: !16462)
!16462 = distinct !DILexicalBlock(scope: !16458, file: !2548, line: 702, column: 38)
!16463 = !DILocation(line: 0, scope: !15735, inlinedAt: !16464)
!16464 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16461)
!16465 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16464)
!16466 = !DILocation(line: 704, column: 3, scope: !16462)
!16467 = !DILocation(line: 707, column: 2, scope: !16447)
!16468 = !DILocation(line: 708, column: 2, scope: !16447)
!16469 = !DILocation(line: 710, column: 2, scope: !16447)
!16470 = !DILocation(line: 713, column: 1, scope: !16447)
!16471 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14225, file: !14225, line: 96, type: !15818, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16472)
!16472 = !{!16473}
!16473 = !DILocalVariable(name: "thread", arg: 1, scope: !16471, file: !14225, line: 96, type: !2443)
!16474 = !DILocation(line: 0, scope: !16471)
!16475 = !DILocation(line: 98, column: 23, scope: !16471)
!16476 = !DILocation(line: 98, column: 36, scope: !16471)
!16477 = !DILocation(line: 98, column: 57, scope: !16471)
!16478 = !DILocation(line: 98, column: 2, scope: !16471)
!16479 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14225, file: !14225, line: 148, type: !15658, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16480)
!16480 = !{!16481}
!16481 = !DILocalVariable(name: "thread", arg: 1, scope: !16479, file: !14225, line: 148, type: !2443)
!16482 = !DILocation(line: 0, scope: !16479)
!16483 = !DILocation(line: 150, column: 15, scope: !16479)
!16484 = !DILocation(line: 150, column: 28, scope: !16479)
!16485 = !DILocation(line: 153, column: 1, scope: !16479)
!16486 = distinct !DISubprogram(name: "z_pend_thread", scope: !2548, file: !2548, line: 770, type: !16487, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16493)
!16487 = !DISubroutineType(types: !16488)
!16488 = !{null, !2443, !2474, !16489}
!16489 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !16490)
!16490 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !16491)
!16491 = !{!16492}
!16492 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16490, file: !103, line: 66, baseType: !102, size: 64)
!16493 = !{!16494, !16495, !16496, !16497, !16499}
!16494 = !DILocalVariable(name: "thread", arg: 1, scope: !16486, file: !2548, line: 770, type: !2443)
!16495 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16486, file: !2548, line: 770, type: !2474)
!16496 = !DILocalVariable(name: "timeout", arg: 3, scope: !16486, file: !2548, line: 771, type: !16489)
!16497 = !DILocalVariable(name: "__i", scope: !16498, file: !2548, line: 774, type: !15692)
!16498 = distinct !DILexicalBlock(scope: !16486, file: !2548, line: 774, column: 2)
!16499 = !DILocalVariable(name: "__key", scope: !16498, file: !2548, line: 774, type: !15692)
!16500 = !DILocation(line: 0, scope: !16486)
!16501 = !DILocation(line: 0, scope: !16498)
!16502 = !DILocation(line: 0, scope: !15700, inlinedAt: !16503)
!16503 = distinct !DILocation(line: 774, column: 2, scope: !16498)
!16504 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16505)
!16505 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16503)
!16506 = !DILocation(line: 0, scope: !15709, inlinedAt: !16505)
!16507 = !DILocation(line: 775, column: 3, scope: !16508)
!16508 = distinct !DILexicalBlock(scope: !16509, file: !2548, line: 774, column: 26)
!16509 = distinct !DILexicalBlock(scope: !16498, file: !2548, line: 774, column: 2)
!16510 = !DILocation(line: 0, scope: !15727, inlinedAt: !16511)
!16511 = distinct !DILocation(line: 774, column: 2, scope: !16509)
!16512 = !DILocation(line: 0, scope: !15735, inlinedAt: !16513)
!16513 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16511)
!16514 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16513)
!16515 = !DILocation(line: 777, column: 1, scope: !16486)
!16516 = distinct !DISubprogram(name: "pend_locked", scope: !2548, file: !2548, line: 760, type: !16487, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16517)
!16517 = !{!16518, !16519, !16520}
!16518 = !DILocalVariable(name: "thread", arg: 1, scope: !16516, file: !2548, line: 760, type: !2443)
!16519 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16516, file: !2548, line: 760, type: !2474)
!16520 = !DILocalVariable(name: "timeout", arg: 3, scope: !16516, file: !2548, line: 761, type: !16489)
!16521 = !DILocation(line: 0, scope: !16516)
!16522 = !DILocation(line: 766, column: 2, scope: !16516)
!16523 = !DILocation(line: 767, column: 2, scope: !16516)
!16524 = !DILocation(line: 768, column: 1, scope: !16516)
!16525 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2548, file: !2548, line: 740, type: !16526, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16528)
!16526 = !DISubroutineType(types: !16527)
!16527 = !{null, !2443, !2474}
!16528 = !{!16529, !16530}
!16529 = !DILocalVariable(name: "thread", arg: 1, scope: !16525, file: !2548, line: 740, type: !2443)
!16530 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16525, file: !2548, line: 740, type: !2474)
!16531 = !DILocation(line: 0, scope: !16525)
!16532 = !DILocation(line: 742, column: 2, scope: !16525)
!16533 = !DILocation(line: 743, column: 2, scope: !16525)
!16534 = !DILocation(line: 747, column: 13, scope: !16535)
!16535 = distinct !DILexicalBlock(scope: !16525, file: !2548, line: 747, column: 6)
!16536 = !DILocation(line: 747, column: 6, scope: !16525)
!16537 = !DILocation(line: 748, column: 16, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16535, file: !2548, line: 747, column: 22)
!16539 = !DILocation(line: 748, column: 26, scope: !16538)
!16540 = !DILocation(line: 749, column: 28, scope: !16538)
!16541 = !DILocation(line: 0, scope: !15900, inlinedAt: !16542)
!16542 = distinct !DILocation(line: 749, column: 3, scope: !16538)
!16543 = !DILocation(line: 188, column: 2, scope: !15910, inlinedAt: !16542)
!16544 = !DILocation(line: 188, column: 2, scope: !15912, inlinedAt: !16542)
!16545 = !DILocation(line: 0, scope: !15910, inlinedAt: !16542)
!16546 = !DILocation(line: 189, column: 7, scope: !15915, inlinedAt: !16542)
!16547 = !DILocation(line: 189, column: 35, scope: !15915, inlinedAt: !16542)
!16548 = !DILocation(line: 189, column: 7, scope: !15916, inlinedAt: !16542)
!16549 = !DILocation(line: 191, column: 21, scope: !15920, inlinedAt: !16542)
!16550 = !DILocation(line: 190, column: 4, scope: !15920, inlinedAt: !16542)
!16551 = !DILocation(line: 192, column: 4, scope: !15920, inlinedAt: !16542)
!16552 = distinct !{!16552, !16543, !16553}
!16553 = !DILocation(line: 194, column: 2, scope: !15910, inlinedAt: !16542)
!16554 = !DILocation(line: 196, column: 37, scope: !15900, inlinedAt: !16542)
!16555 = !DILocation(line: 196, column: 2, scope: !15900, inlinedAt: !16542)
!16556 = !DILocation(line: 197, column: 1, scope: !15900, inlinedAt: !16542)
!16557 = !DILocation(line: 751, column: 1, scope: !16525)
!16558 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2548, file: !2548, line: 753, type: !16559, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16561)
!16559 = !DISubroutineType(types: !16560)
!16560 = !{null, !2443, !16489}
!16561 = !{!16562, !16563}
!16562 = !DILocalVariable(name: "thread", arg: 1, scope: !16558, file: !2548, line: 753, type: !2443)
!16563 = !DILocalVariable(name: "timeout", arg: 2, scope: !16558, file: !2548, line: 753, type: !16489)
!16564 = !DILocation(line: 0, scope: !16558)
!16565 = !DILocation(line: 755, column: 7, scope: !16566)
!16566 = distinct !DILexicalBlock(scope: !16558, file: !2548, line: 755, column: 6)
!16567 = !DILocation(line: 755, column: 6, scope: !16558)
!16568 = !DILocation(line: 756, column: 3, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16566, file: !2548, line: 755, column: 41)
!16570 = !DILocation(line: 757, column: 2, scope: !16569)
!16571 = !DILocation(line: 758, column: 1, scope: !16558)
!16572 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14619, file: !14619, line: 47, type: !16559, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16573)
!16573 = !{!16574, !16575}
!16574 = !DILocalVariable(name: "thread", arg: 1, scope: !16572, file: !14619, line: 47, type: !2443)
!16575 = !DILocalVariable(name: "ticks", arg: 2, scope: !16572, file: !14619, line: 47, type: !16489)
!16576 = !DILocation(line: 0, scope: !16572)
!16577 = !DILocation(line: 49, column: 30, scope: !16572)
!16578 = !DILocation(line: 49, column: 2, scope: !16572)
!16579 = !DILocation(line: 50, column: 1, scope: !16572)
!16580 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2548, file: !2548, line: 795, type: !2500, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16581)
!16581 = !{!16582, !16583, !16584, !16586, !16587}
!16582 = !DILocalVariable(name: "timeout", arg: 1, scope: !16580, file: !2548, line: 795, type: !2502)
!16583 = !DILocalVariable(name: "thread", scope: !16580, file: !2548, line: 797, type: !2443)
!16584 = !DILocalVariable(name: "__i", scope: !16585, file: !2548, line: 800, type: !15692)
!16585 = distinct !DILexicalBlock(scope: !16580, file: !2548, line: 800, column: 2)
!16586 = !DILocalVariable(name: "__key", scope: !16585, file: !2548, line: 800, type: !15692)
!16587 = !DILocalVariable(name: "killed", scope: !16588, file: !2548, line: 801, type: !136)
!16588 = distinct !DILexicalBlock(scope: !16589, file: !2548, line: 800, column: 26)
!16589 = distinct !DILexicalBlock(scope: !16585, file: !2548, line: 800, column: 2)
!16590 = !DILocation(line: 0, scope: !16580)
!16591 = !DILocation(line: 797, column: 28, scope: !16580)
!16592 = !DILocation(line: 0, scope: !16585)
!16593 = !DILocation(line: 0, scope: !15700, inlinedAt: !16594)
!16594 = distinct !DILocation(line: 800, column: 2, scope: !16585)
!16595 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16596)
!16596 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16594)
!16597 = !DILocation(line: 0, scope: !15709, inlinedAt: !16596)
!16598 = !DILocation(line: 801, column: 27, scope: !16588)
!16599 = !DILocation(line: 801, column: 32, scope: !16588)
!16600 = !DILocation(line: 801, column: 61, scope: !16588)
!16601 = !DILocation(line: 0, scope: !16588)
!16602 = !DILocation(line: 804, column: 7, scope: !16588)
!16603 = !DILocation(line: 805, column: 21, scope: !16604)
!16604 = distinct !DILexicalBlock(scope: !16605, file: !2548, line: 805, column: 8)
!16605 = distinct !DILexicalBlock(scope: !16606, file: !2548, line: 804, column: 16)
!16606 = distinct !DILexicalBlock(scope: !16588, file: !2548, line: 804, column: 7)
!16607 = !DILocation(line: 805, column: 31, scope: !16604)
!16608 = !DILocation(line: 805, column: 8, scope: !16605)
!16609 = !DILocation(line: 806, column: 5, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16604, file: !2548, line: 805, column: 40)
!16611 = !DILocation(line: 807, column: 4, scope: !16610)
!16612 = !DILocation(line: 808, column: 4, scope: !16605)
!16613 = !DILocation(line: 809, column: 4, scope: !16605)
!16614 = !DILocation(line: 810, column: 4, scope: !16605)
!16615 = !DILocation(line: 811, column: 3, scope: !16605)
!16616 = !DILocation(line: 0, scope: !15727, inlinedAt: !16617)
!16617 = distinct !DILocation(line: 800, column: 2, scope: !16589)
!16618 = !DILocation(line: 0, scope: !15735, inlinedAt: !16619)
!16619 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16617)
!16620 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16619)
!16621 = !DILocation(line: 813, column: 1, scope: !16580)
!16622 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2548, file: !2548, line: 779, type: !15658, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16623)
!16623 = !{!16624}
!16624 = !DILocalVariable(name: "thread", arg: 1, scope: !16622, file: !2548, line: 779, type: !2443)
!16625 = !DILocation(line: 0, scope: !16622)
!16626 = !DILocation(line: 781, column: 2, scope: !16622)
!16627 = !DILocation(line: 782, column: 2, scope: !16622)
!16628 = !DILocation(line: 783, column: 15, scope: !16622)
!16629 = !DILocation(line: 783, column: 25, scope: !16622)
!16630 = !DILocation(line: 784, column: 1, scope: !16622)
!16631 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14225, file: !14225, line: 165, type: !15658, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16632)
!16632 = !{!16633}
!16633 = !DILocalVariable(name: "thread", arg: 1, scope: !16631, file: !14225, line: 165, type: !2443)
!16634 = !DILocation(line: 0, scope: !16631)
!16635 = !DILocation(line: 167, column: 15, scope: !16631)
!16636 = !DILocation(line: 167, column: 28, scope: !16631)
!16637 = !DILocation(line: 168, column: 1, scope: !16631)
!16638 = distinct !DISubprogram(name: "unready_thread", scope: !2548, file: !2548, line: 731, type: !15658, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16639)
!16639 = !{!16640}
!16640 = !DILocalVariable(name: "thread", arg: 1, scope: !16638, file: !2548, line: 731, type: !2443)
!16641 = !DILocation(line: 0, scope: !16638)
!16642 = !DILocation(line: 733, column: 6, scope: !16643)
!16643 = distinct !DILexicalBlock(scope: !16638, file: !2548, line: 733, column: 6)
!16644 = !DILocation(line: 733, column: 6, scope: !16638)
!16645 = !DILocation(line: 0, scope: !15869, inlinedAt: !16646)
!16646 = distinct !DILocation(line: 734, column: 3, scope: !16647)
!16647 = distinct !DILexicalBlock(scope: !16643, file: !2548, line: 733, column: 34)
!16648 = !DILocation(line: 266, column: 15, scope: !15869, inlinedAt: !16646)
!16649 = !DILocation(line: 266, column: 28, scope: !15869, inlinedAt: !16646)
!16650 = !DILocation(line: 0, scope: !15877, inlinedAt: !16651)
!16651 = distinct !DILocation(line: 268, column: 3, scope: !15881, inlinedAt: !16646)
!16652 = !DILocation(line: 234, column: 2, scope: !15877, inlinedAt: !16651)
!16653 = !DILocation(line: 735, column: 2, scope: !16647)
!16654 = !DILocation(line: 736, column: 25, scope: !16638)
!16655 = !DILocation(line: 736, column: 22, scope: !16638)
!16656 = !DILocation(line: 736, column: 2, scope: !16638)
!16657 = !DILocation(line: 737, column: 1, scope: !16638)
!16658 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14225, file: !14225, line: 160, type: !15658, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16659)
!16659 = !{!16660}
!16660 = !DILocalVariable(name: "thread", arg: 1, scope: !16658, file: !14225, line: 160, type: !2443)
!16661 = !DILocation(line: 0, scope: !16658)
!16662 = !DILocation(line: 162, column: 15, scope: !16658)
!16663 = !DILocation(line: 162, column: 28, scope: !16658)
!16664 = !DILocation(line: 163, column: 1, scope: !16658)
!16665 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2548, file: !2548, line: 786, type: !15658, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16666)
!16666 = !{!16667, !16668, !16670}
!16667 = !DILocalVariable(name: "thread", arg: 1, scope: !16665, file: !2548, line: 786, type: !2443)
!16668 = !DILocalVariable(name: "__i", scope: !16669, file: !2548, line: 788, type: !15692)
!16669 = distinct !DILexicalBlock(scope: !16665, file: !2548, line: 788, column: 2)
!16670 = !DILocalVariable(name: "__key", scope: !16669, file: !2548, line: 788, type: !15692)
!16671 = !DILocation(line: 0, scope: !16665)
!16672 = !DILocation(line: 0, scope: !16669)
!16673 = !DILocation(line: 0, scope: !15700, inlinedAt: !16674)
!16674 = distinct !DILocation(line: 788, column: 2, scope: !16669)
!16675 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16676)
!16676 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16674)
!16677 = !DILocation(line: 0, scope: !15709, inlinedAt: !16676)
!16678 = !DILocation(line: 789, column: 3, scope: !16679)
!16679 = distinct !DILexicalBlock(scope: !16680, file: !2548, line: 788, column: 26)
!16680 = distinct !DILexicalBlock(scope: !16669, file: !2548, line: 788, column: 2)
!16681 = !DILocation(line: 0, scope: !15727, inlinedAt: !16682)
!16682 = distinct !DILocation(line: 788, column: 2, scope: !16680)
!16683 = !DILocation(line: 0, scope: !15735, inlinedAt: !16684)
!16684 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16682)
!16685 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16684)
!16686 = !DILocation(line: 791, column: 1, scope: !16665)
!16687 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2548, file: !2548, line: 816, type: !16688, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16690)
!16688 = !DISubroutineType(types: !16689)
!16689 = !{!107, !108, !2474, !16489}
!16690 = !{!16691, !16692, !16693, !16694, !16695, !16697}
!16691 = !DILocalVariable(name: "key", arg: 1, scope: !16687, file: !2548, line: 816, type: !108)
!16692 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16687, file: !2548, line: 816, type: !2474)
!16693 = !DILocalVariable(name: "timeout", arg: 3, scope: !16687, file: !2548, line: 816, type: !16489)
!16694 = !DILocalVariable(name: "ret", scope: !16687, file: !2548, line: 828, type: !107)
!16695 = !DILocalVariable(name: "__i", scope: !16696, file: !2548, line: 829, type: !15692)
!16696 = distinct !DILexicalBlock(scope: !16687, file: !2548, line: 829, column: 2)
!16697 = !DILocalVariable(name: "__key", scope: !16696, file: !2548, line: 829, type: !15692)
!16698 = !DILocation(line: 0, scope: !16687)
!16699 = !DILocation(line: 823, column: 14, scope: !16687)
!16700 = !DILocation(line: 823, column: 2, scope: !16687)
!16701 = !DILocation(line: 826, column: 20, scope: !16687)
!16702 = !DILocation(line: 826, column: 18, scope: !16687)
!16703 = !DILocation(line: 828, column: 12, scope: !16687)
!16704 = !DILocation(line: 0, scope: !16696)
!16705 = !DILocation(line: 0, scope: !15700, inlinedAt: !16706)
!16706 = distinct !DILocation(line: 829, column: 2, scope: !16696)
!16707 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16708)
!16708 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16706)
!16709 = !DILocation(line: 0, scope: !15709, inlinedAt: !16708)
!16710 = !DILocation(line: 830, column: 7, scope: !16711)
!16711 = distinct !DILexicalBlock(scope: !16712, file: !2548, line: 830, column: 7)
!16712 = distinct !DILexicalBlock(scope: !16713, file: !2548, line: 829, column: 26)
!16713 = distinct !DILexicalBlock(scope: !16696, file: !2548, line: 829, column: 2)
!16714 = !DILocation(line: 830, column: 26, scope: !16711)
!16715 = !DILocation(line: 830, column: 23, scope: !16711)
!16716 = !DILocation(line: 830, column: 7, scope: !16712)
!16717 = !DILocation(line: 831, column: 20, scope: !16718)
!16718 = distinct !DILexicalBlock(scope: !16711, file: !2548, line: 830, column: 36)
!16719 = !DILocation(line: 832, column: 3, scope: !16718)
!16720 = !DILocation(line: 0, scope: !15727, inlinedAt: !16721)
!16721 = distinct !DILocation(line: 829, column: 2, scope: !16713)
!16722 = !DILocation(line: 0, scope: !15735, inlinedAt: !16723)
!16723 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16721)
!16724 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16723)
!16725 = !DILocation(line: 834, column: 2, scope: !16687)
!16726 = distinct !DISubprogram(name: "z_pend_curr", scope: !2548, file: !2548, line: 840, type: !16727, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16729)
!16727 = !DISubroutineType(types: !16728)
!16728 = !{!107, !15703, !15692, !2474, !16489}
!16729 = !{!16730, !16731, !16732, !16733}
!16730 = !DILocalVariable(name: "lock", arg: 1, scope: !16726, file: !2548, line: 840, type: !15703)
!16731 = !DILocalVariable(name: "key", arg: 2, scope: !16726, file: !2548, line: 840, type: !15692)
!16732 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16726, file: !2548, line: 841, type: !2474)
!16733 = !DILocalVariable(name: "timeout", arg: 4, scope: !16726, file: !2548, line: 841, type: !16489)
!16734 = !DILocation(line: 0, scope: !16726)
!16735 = !DILocation(line: 844, column: 20, scope: !16726)
!16736 = !DILocation(line: 844, column: 18, scope: !16726)
!16737 = !DILocation(line: 0, scope: !15700, inlinedAt: !16738)
!16738 = distinct !DILocation(line: 856, column: 9, scope: !16726)
!16739 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16740)
!16740 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16738)
!16741 = !DILocation(line: 0, scope: !15709, inlinedAt: !16740)
!16742 = !DILocation(line: 857, column: 14, scope: !16726)
!16743 = !DILocation(line: 857, column: 2, scope: !16726)
!16744 = !DILocation(line: 0, scope: !16309, inlinedAt: !16745)
!16745 = distinct !DILocation(line: 859, column: 9, scope: !16726)
!16746 = !DILocation(line: 196, column: 9, scope: !16309, inlinedAt: !16745)
!16747 = !DILocation(line: 859, column: 2, scope: !16726)
!16748 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2548, file: !2548, line: 862, type: !16749, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16751)
!16749 = !DISubroutineType(types: !16750)
!16750 = !{!2443, !2474}
!16751 = !{!16752, !16753, !16754, !16756}
!16752 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16748, file: !2548, line: 862, type: !2474)
!16753 = !DILocalVariable(name: "thread", scope: !16748, file: !2548, line: 864, type: !2443)
!16754 = !DILocalVariable(name: "__i", scope: !16755, file: !2548, line: 866, type: !15692)
!16755 = distinct !DILexicalBlock(scope: !16748, file: !2548, line: 866, column: 2)
!16756 = !DILocalVariable(name: "__key", scope: !16755, file: !2548, line: 866, type: !15692)
!16757 = !DILocation(line: 0, scope: !16748)
!16758 = !DILocation(line: 0, scope: !16755)
!16759 = !DILocation(line: 0, scope: !15700, inlinedAt: !16760)
!16760 = distinct !DILocation(line: 866, column: 2, scope: !16755)
!16761 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16762)
!16762 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16760)
!16763 = !DILocation(line: 0, scope: !15709, inlinedAt: !16762)
!16764 = !DILocation(line: 867, column: 12, scope: !16765)
!16765 = distinct !DILexicalBlock(scope: !16766, file: !2548, line: 866, column: 26)
!16766 = distinct !DILexicalBlock(scope: !16755, file: !2548, line: 866, column: 2)
!16767 = !DILocation(line: 869, column: 14, scope: !16768)
!16768 = distinct !DILexicalBlock(scope: !16765, file: !2548, line: 869, column: 7)
!16769 = !DILocation(line: 869, column: 7, scope: !16765)
!16770 = !DILocation(line: 870, column: 4, scope: !16771)
!16771 = distinct !DILexicalBlock(scope: !16768, file: !2548, line: 869, column: 23)
!16772 = !DILocation(line: 871, column: 3, scope: !16771)
!16773 = !DILocation(line: 0, scope: !15727, inlinedAt: !16774)
!16774 = distinct !DILocation(line: 866, column: 2, scope: !16766)
!16775 = !DILocation(line: 0, scope: !15735, inlinedAt: !16776)
!16776 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16774)
!16777 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16776)
!16778 = !DILocation(line: 874, column: 2, scope: !16748)
!16779 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2548, file: !2548, line: 877, type: !16749, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16780)
!16780 = !{!16781, !16782, !16783, !16785}
!16781 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16779, file: !2548, line: 877, type: !2474)
!16782 = !DILocalVariable(name: "thread", scope: !16779, file: !2548, line: 879, type: !2443)
!16783 = !DILocalVariable(name: "__i", scope: !16784, file: !2548, line: 881, type: !15692)
!16784 = distinct !DILexicalBlock(scope: !16779, file: !2548, line: 881, column: 2)
!16785 = !DILocalVariable(name: "__key", scope: !16784, file: !2548, line: 881, type: !15692)
!16786 = !DILocation(line: 0, scope: !16779)
!16787 = !DILocation(line: 0, scope: !16784)
!16788 = !DILocation(line: 0, scope: !15700, inlinedAt: !16789)
!16789 = distinct !DILocation(line: 881, column: 2, scope: !16784)
!16790 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16791)
!16791 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16789)
!16792 = !DILocation(line: 0, scope: !15709, inlinedAt: !16791)
!16793 = !DILocation(line: 882, column: 12, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16795, file: !2548, line: 881, column: 26)
!16795 = distinct !DILexicalBlock(scope: !16784, file: !2548, line: 881, column: 2)
!16796 = !DILocation(line: 884, column: 14, scope: !16797)
!16797 = distinct !DILexicalBlock(scope: !16794, file: !2548, line: 884, column: 7)
!16798 = !DILocation(line: 884, column: 7, scope: !16794)
!16799 = !DILocation(line: 885, column: 4, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16797, file: !2548, line: 884, column: 23)
!16801 = !DILocation(line: 886, column: 10, scope: !16800)
!16802 = !DILocation(line: 887, column: 3, scope: !16800)
!16803 = !DILocation(line: 0, scope: !15727, inlinedAt: !16804)
!16804 = distinct !DILocation(line: 881, column: 2, scope: !16795)
!16805 = !DILocation(line: 0, scope: !15735, inlinedAt: !16806)
!16806 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16804)
!16807 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16806)
!16808 = !DILocation(line: 890, column: 2, scope: !16779)
!16809 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2548, file: !2548, line: 893, type: !15658, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16810)
!16810 = !{!16811}
!16811 = !DILocalVariable(name: "thread", arg: 1, scope: !16809, file: !2548, line: 893, type: !2443)
!16812 = !DILocation(line: 0, scope: !16809)
!16813 = !DILocation(line: 0, scope: !16665, inlinedAt: !16814)
!16814 = distinct !DILocation(line: 895, column: 2, scope: !16809)
!16815 = !DILocation(line: 0, scope: !16669, inlinedAt: !16814)
!16816 = !DILocation(line: 0, scope: !15700, inlinedAt: !16817)
!16817 = distinct !DILocation(line: 788, column: 2, scope: !16669, inlinedAt: !16814)
!16818 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16819)
!16819 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16817)
!16820 = !DILocation(line: 0, scope: !15709, inlinedAt: !16819)
!16821 = !DILocation(line: 789, column: 3, scope: !16679, inlinedAt: !16814)
!16822 = !DILocation(line: 0, scope: !15727, inlinedAt: !16823)
!16823 = distinct !DILocation(line: 788, column: 2, scope: !16680, inlinedAt: !16814)
!16824 = !DILocation(line: 0, scope: !15735, inlinedAt: !16825)
!16825 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16823)
!16826 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16825)
!16827 = !DILocation(line: 896, column: 8, scope: !16809)
!16828 = !DILocation(line: 897, column: 1, scope: !16809)
!16829 = distinct !DISubprogram(name: "z_set_prio", scope: !2548, file: !2548, line: 902, type: !16020, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16830)
!16830 = !{!16831, !16832, !16833, !16834, !16836}
!16831 = !DILocalVariable(name: "thread", arg: 1, scope: !16829, file: !2548, line: 902, type: !2443)
!16832 = !DILocalVariable(name: "prio", arg: 2, scope: !16829, file: !2548, line: 902, type: !107)
!16833 = !DILocalVariable(name: "need_sched", scope: !16829, file: !2548, line: 904, type: !136)
!16834 = !DILocalVariable(name: "__i", scope: !16835, file: !2548, line: 906, type: !15692)
!16835 = distinct !DILexicalBlock(scope: !16829, file: !2548, line: 906, column: 2)
!16836 = !DILocalVariable(name: "__key", scope: !16835, file: !2548, line: 906, type: !15692)
!16837 = !DILocation(line: 0, scope: !16829)
!16838 = !DILocation(line: 0, scope: !16835)
!16839 = !DILocation(line: 0, scope: !15700, inlinedAt: !16840)
!16840 = distinct !DILocation(line: 906, column: 2, scope: !16835)
!16841 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16842)
!16842 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16840)
!16843 = !DILocation(line: 0, scope: !15709, inlinedAt: !16842)
!16844 = !DILocation(line: 907, column: 16, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16846, file: !2548, line: 906, column: 26)
!16846 = distinct !DILexicalBlock(scope: !16835, file: !2548, line: 906, column: 2)
!16847 = !DILocation(line: 909, column: 7, scope: !16845)
!16848 = !DILocation(line: 0, scope: !15869, inlinedAt: !16849)
!16849 = distinct !DILocation(line: 912, column: 5, scope: !16850)
!16850 = distinct !DILexicalBlock(scope: !16851, file: !2548, line: 911, column: 63)
!16851 = distinct !DILexicalBlock(scope: !16852, file: !2548, line: 911, column: 8)
!16852 = distinct !DILexicalBlock(scope: !16853, file: !2548, line: 909, column: 19)
!16853 = distinct !DILexicalBlock(scope: !16845, file: !2548, line: 909, column: 7)
!16854 = !DILocation(line: 266, column: 28, scope: !15869, inlinedAt: !16849)
!16855 = !DILocation(line: 0, scope: !15877, inlinedAt: !16856)
!16856 = distinct !DILocation(line: 268, column: 3, scope: !15881, inlinedAt: !16849)
!16857 = !DILocation(line: 234, column: 2, scope: !15877, inlinedAt: !16856)
!16858 = !DILocation(line: 913, column: 23, scope: !16850)
!16859 = !DILocation(line: 0, scope: !15886, inlinedAt: !16860)
!16860 = distinct !DILocation(line: 914, column: 5, scope: !16850)
!16861 = !DILocation(line: 252, column: 28, scope: !15886, inlinedAt: !16860)
!16862 = !DILocation(line: 0, scope: !15893, inlinedAt: !16863)
!16863 = distinct !DILocation(line: 254, column: 3, scope: !15897, inlinedAt: !16860)
!16864 = !DILocation(line: 0, scope: !15900, inlinedAt: !16865)
!16865 = distinct !DILocation(line: 229, column: 2, scope: !15893, inlinedAt: !16863)
!16866 = !DILocation(line: 188, column: 2, scope: !15910, inlinedAt: !16865)
!16867 = !DILocation(line: 188, column: 2, scope: !15912, inlinedAt: !16865)
!16868 = !DILocation(line: 0, scope: !15910, inlinedAt: !16865)
!16869 = !DILocation(line: 189, column: 7, scope: !15915, inlinedAt: !16865)
!16870 = !DILocation(line: 189, column: 35, scope: !15915, inlinedAt: !16865)
!16871 = !DILocation(line: 189, column: 7, scope: !15916, inlinedAt: !16865)
!16872 = !DILocation(line: 190, column: 4, scope: !15920, inlinedAt: !16865)
!16873 = !DILocation(line: 192, column: 4, scope: !15920, inlinedAt: !16865)
!16874 = distinct !{!16874, !16866, !16875}
!16875 = !DILocation(line: 194, column: 2, scope: !15910, inlinedAt: !16865)
!16876 = !DILocation(line: 196, column: 2, scope: !15900, inlinedAt: !16865)
!16877 = !DILocation(line: 197, column: 1, scope: !15900, inlinedAt: !16865)
!16878 = !DILocation(line: 918, column: 4, scope: !16852)
!16879 = !DILocation(line: 919, column: 3, scope: !16852)
!16880 = !DILocation(line: 920, column: 22, scope: !16881)
!16881 = distinct !DILexicalBlock(scope: !16853, file: !2548, line: 919, column: 10)
!16882 = !DILocation(line: 0, scope: !15727, inlinedAt: !16883)
!16883 = distinct !DILocation(line: 906, column: 2, scope: !16846)
!16884 = !DILocation(line: 0, scope: !15735, inlinedAt: !16885)
!16885 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16883)
!16886 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16885)
!16887 = !DILocation(line: 926, column: 2, scope: !16829)
!16888 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2548, file: !2548, line: 929, type: !16889, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16891)
!16889 = !DISubroutineType(types: !16890)
!16890 = !{null, !2443, !107}
!16891 = !{!16892, !16893, !16894}
!16892 = !DILocalVariable(name: "thread", arg: 1, scope: !16888, file: !2548, line: 929, type: !2443)
!16893 = !DILocalVariable(name: "prio", arg: 2, scope: !16888, file: !2548, line: 929, type: !107)
!16894 = !DILocalVariable(name: "need_sched", scope: !16888, file: !2548, line: 931, type: !136)
!16895 = !DILocation(line: 0, scope: !16888)
!16896 = !DILocation(line: 931, column: 20, scope: !16888)
!16897 = !DILocation(line: 935, column: 17, scope: !16898)
!16898 = distinct !DILexicalBlock(scope: !16888, file: !2548, line: 935, column: 6)
!16899 = !DILocation(line: 935, column: 20, scope: !16898)
!16900 = !DILocation(line: 935, column: 35, scope: !16898)
!16901 = !DILocation(line: 935, column: 48, scope: !16898)
!16902 = !DILocation(line: 935, column: 6, scope: !16888)
!16903 = !DILocation(line: 936, column: 3, scope: !16904)
!16904 = distinct !DILexicalBlock(scope: !16898, file: !2548, line: 935, column: 55)
!16905 = !DILocation(line: 937, column: 2, scope: !16904)
!16906 = !DILocation(line: 938, column: 1, scope: !16888)
!16907 = distinct !DISubprogram(name: "k_sched_lock", scope: !2548, file: !2548, line: 987, type: !337, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16908)
!16908 = !{!16909, !16911}
!16909 = !DILocalVariable(name: "__i", scope: !16910, file: !2548, line: 989, type: !15692)
!16910 = distinct !DILexicalBlock(scope: !16907, file: !2548, line: 989, column: 2)
!16911 = !DILocalVariable(name: "__key", scope: !16910, file: !2548, line: 989, type: !15692)
!16912 = !DILocation(line: 0, scope: !16910)
!16913 = !DILocation(line: 0, scope: !15700, inlinedAt: !16914)
!16914 = distinct !DILocation(line: 989, column: 2, scope: !16910)
!16915 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16916)
!16916 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16914)
!16917 = !DILocation(line: 0, scope: !15709, inlinedAt: !16916)
!16918 = !DILocation(line: 992, column: 3, scope: !16919)
!16919 = distinct !DILexicalBlock(scope: !16920, file: !2548, line: 989, column: 26)
!16920 = distinct !DILexicalBlock(scope: !16910, file: !2548, line: 989, column: 2)
!16921 = !DILocation(line: 0, scope: !15727, inlinedAt: !16922)
!16922 = distinct !DILocation(line: 989, column: 2, scope: !16920)
!16923 = !DILocation(line: 0, scope: !15735, inlinedAt: !16924)
!16924 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16922)
!16925 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16924)
!16926 = !DILocation(line: 994, column: 1, scope: !16907)
!16927 = distinct !DISubprogram(name: "z_sched_lock", scope: !14225, file: !14225, line: 251, type: !337, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !256)
!16928 = !DILocation(line: 256, column: 4, scope: !16927)
!16929 = !DILocation(line: 256, column: 19, scope: !16927)
!16930 = !DILocation(line: 256, column: 2, scope: !16927)
!16931 = !DILocation(line: 258, column: 2, scope: !16932)
!16932 = distinct !DILexicalBlock(scope: !16927, file: !14225, line: 258, column: 2)
!16933 = !{i64 2154967469}
!16934 = !DILocation(line: 259, column: 1, scope: !16927)
!16935 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2548, file: !2548, line: 996, type: !337, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16936)
!16936 = !{!16937, !16939}
!16937 = !DILocalVariable(name: "__i", scope: !16938, file: !2548, line: 998, type: !15692)
!16938 = distinct !DILexicalBlock(scope: !16935, file: !2548, line: 998, column: 2)
!16939 = !DILocalVariable(name: "__key", scope: !16938, file: !2548, line: 998, type: !15692)
!16940 = !DILocation(line: 0, scope: !16938)
!16941 = !DILocation(line: 0, scope: !15700, inlinedAt: !16942)
!16942 = distinct !DILocation(line: 998, column: 2, scope: !16938)
!16943 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !16944)
!16944 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !16942)
!16945 = !DILocation(line: 0, scope: !15709, inlinedAt: !16944)
!16946 = !DILocation(line: 1002, column: 5, scope: !16947)
!16947 = distinct !DILexicalBlock(scope: !16948, file: !2548, line: 998, column: 26)
!16948 = distinct !DILexicalBlock(scope: !16938, file: !2548, line: 998, column: 2)
!16949 = !DILocation(line: 1002, column: 20, scope: !16947)
!16950 = !DILocation(line: 1002, column: 3, scope: !16947)
!16951 = !DILocation(line: 1003, column: 3, scope: !16947)
!16952 = !DILocation(line: 0, scope: !15727, inlinedAt: !16953)
!16953 = distinct !DILocation(line: 998, column: 2, scope: !16948)
!16954 = !DILocation(line: 0, scope: !15735, inlinedAt: !16955)
!16955 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !16953)
!16956 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !16955)
!16957 = !DILocation(line: 1011, column: 2, scope: !16935)
!16958 = !DILocation(line: 1012, column: 1, scope: !16935)
!16959 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2548, file: !2548, line: 1014, type: !16008, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !256)
!16960 = !DILocation(line: 1028, column: 25, scope: !16959)
!16961 = !DILocation(line: 1028, column: 2, scope: !16959)
!16962 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2548, file: !2548, line: 1155, type: !16963, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16965)
!16963 = !DISubroutineType(types: !16964)
!16964 = !{!136, !2472, !2472}
!16965 = !{!16966, !16967, !16968, !16969, !16970}
!16966 = !DILocalVariable(name: "a", arg: 1, scope: !16962, file: !2548, line: 1155, type: !2472)
!16967 = !DILocalVariable(name: "b", arg: 2, scope: !16962, file: !2548, line: 1155, type: !2472)
!16968 = !DILocalVariable(name: "thread_a", scope: !16962, file: !2548, line: 1157, type: !2443)
!16969 = !DILocalVariable(name: "thread_b", scope: !16962, file: !2548, line: 1157, type: !2443)
!16970 = !DILocalVariable(name: "cmp", scope: !16962, file: !2548, line: 1158, type: !334)
!16971 = !DILocation(line: 0, scope: !16962)
!16972 = !DILocation(line: 1160, column: 13, scope: !16962)
!16973 = !DILocation(line: 1161, column: 13, scope: !16962)
!16974 = !DILocation(line: 1163, column: 8, scope: !16962)
!16975 = !DILocation(line: 1165, column: 10, scope: !16976)
!16976 = distinct !DILexicalBlock(scope: !16962, file: !2548, line: 1165, column: 6)
!16977 = !DILocation(line: 1165, column: 6, scope: !16962)
!16978 = !DILocation(line: 1167, column: 17, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16976, file: !2548, line: 1167, column: 13)
!16980 = !DILocation(line: 1167, column: 13, scope: !16976)
!16981 = !DILocation(line: 1170, column: 25, scope: !16982)
!16982 = distinct !DILexicalBlock(scope: !16979, file: !2548, line: 1169, column: 9)
!16983 = !DILocation(line: 1170, column: 52, scope: !16982)
!16984 = !DILocation(line: 1170, column: 35, scope: !16982)
!16985 = !DILocation(line: 1170, column: 3, scope: !16982)
!16986 = !DILocation(line: 0, scope: !16976)
!16987 = !DILocation(line: 1173, column: 1, scope: !16962)
!16988 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2548, file: !2548, line: 1175, type: !16989, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17004)
!16989 = !DISubroutineType(types: !16990)
!16990 = !{null, !16991, !2443}
!16991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16992, size: 32)
!16992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16993, line: 37, size: 128, elements: !16994)
!16993 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16994 = !{!16995, !17003}
!16995 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16992, file: !16993, line: 38, baseType: !16996, size: 96)
!16996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !180, line: 83, size: 96, elements: !16997)
!16997 = !{!16998, !16999, !17002}
!16998 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16996, file: !180, line: 84, baseType: !2472, size: 32)
!16999 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16996, file: !180, line: 85, baseType: !17000, size: 32, offset: 32)
!17000 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !180, line: 81, baseType: !17001)
!17001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16963, size: 32)
!17002 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16996, file: !180, line: 86, baseType: !107, size: 32, offset: 64)
!17003 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16992, file: !16993, line: 39, baseType: !107, size: 32, offset: 96)
!17004 = !{!17005, !17006, !17007, !17008, !17017}
!17005 = !DILocalVariable(name: "pq", arg: 1, scope: !16988, file: !2548, line: 1175, type: !16991)
!17006 = !DILocalVariable(name: "thread", arg: 2, scope: !16988, file: !2548, line: 1175, type: !2443)
!17007 = !DILocalVariable(name: "t", scope: !16988, file: !2548, line: 1177, type: !2443)
!17008 = !DILocalVariable(name: "__f", scope: !17009, file: !2548, line: 1190, type: !17012)
!17009 = distinct !DILexicalBlock(scope: !17010, file: !2548, line: 1190, column: 3)
!17010 = distinct !DILexicalBlock(scope: !17011, file: !2548, line: 1189, column: 27)
!17011 = distinct !DILexicalBlock(scope: !16988, file: !2548, line: 1189, column: 6)
!17012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !180, line: 155, size: 96, elements: !17013)
!17013 = !{!17014, !17015, !17016}
!17014 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17012, file: !180, line: 156, baseType: !2543, size: 32)
!17015 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17012, file: !180, line: 157, baseType: !401, size: 32, offset: 32)
!17016 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17012, file: !180, line: 158, baseType: !334, size: 32, offset: 64)
!17017 = !DILocalVariable(name: "n", scope: !17018, file: !2548, line: 1190, type: !2472)
!17018 = distinct !DILexicalBlock(scope: !17019, file: !2548, line: 1190, column: 3)
!17019 = distinct !DILexicalBlock(scope: !17009, file: !2548, line: 1190, column: 3)
!17020 = !DILocation(line: 0, scope: !16988)
!17021 = !DILocation(line: 1181, column: 31, scope: !16988)
!17022 = !DILocation(line: 1181, column: 45, scope: !16988)
!17023 = !DILocation(line: 1181, column: 15, scope: !16988)
!17024 = !DILocation(line: 1181, column: 25, scope: !16988)
!17025 = !DILocation(line: 1189, column: 11, scope: !17011)
!17026 = !DILocation(line: 1189, column: 7, scope: !17011)
!17027 = !DILocation(line: 1189, column: 6, scope: !16988)
!17028 = !DILocation(line: 1190, column: 3, scope: !17009)
!17029 = !DILocation(line: 1190, column: 3, scope: !17018)
!17030 = !DILocation(line: 0, scope: !17018)
!17031 = !DILocation(line: 1190, column: 3, scope: !17019)
!17032 = !DILocation(line: 1193, column: 2, scope: !17010)
!17033 = !DILocation(line: 1191, column: 42, scope: !17034)
!17034 = distinct !DILexicalBlock(scope: !17019, file: !2548, line: 1190, column: 54)
!17035 = !DILocation(line: 1191, column: 12, scope: !17034)
!17036 = !DILocation(line: 1191, column: 22, scope: !17034)
!17037 = distinct !{!17037, !17028, !17038}
!17038 = !DILocation(line: 1192, column: 3, scope: !17009)
!17039 = !DILocation(line: 1195, column: 17, scope: !16988)
!17040 = !DILocation(line: 1195, column: 37, scope: !16988)
!17041 = !DILocation(line: 1195, column: 2, scope: !16988)
!17042 = !DILocation(line: 1196, column: 1, scope: !16988)
!17043 = !DISubprogram(name: "z_rb_foreach_next", scope: !180, file: !180, line: 176, type: !17044, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!17044 = !DISubroutineType(types: !17045)
!17045 = !{!2472, !17046, !17047}
!17046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16996, size: 32)
!17047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17012, size: 32)
!17048 = !DISubprogram(name: "rb_insert", scope: !180, file: !180, line: 105, type: !17049, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!17049 = !DISubroutineType(types: !17050)
!17050 = !{null, !17046, !2472}
!17051 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2548, file: !2548, line: 1198, type: !16989, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17052)
!17052 = !{!17053, !17054}
!17053 = !DILocalVariable(name: "pq", arg: 1, scope: !17051, file: !2548, line: 1198, type: !16991)
!17054 = !DILocalVariable(name: "thread", arg: 2, scope: !17051, file: !2548, line: 1198, type: !2443)
!17055 = !DILocation(line: 0, scope: !17051)
!17056 = !DILocation(line: 1202, column: 17, scope: !17051)
!17057 = !DILocation(line: 1202, column: 37, scope: !17051)
!17058 = !DILocation(line: 1202, column: 2, scope: !17051)
!17059 = !DILocation(line: 1204, column: 16, scope: !17060)
!17060 = distinct !DILexicalBlock(scope: !17051, file: !2548, line: 1204, column: 6)
!17061 = !DILocation(line: 1204, column: 7, scope: !17060)
!17062 = !DILocation(line: 1204, column: 6, scope: !17051)
!17063 = !DILocation(line: 1205, column: 7, scope: !17064)
!17064 = distinct !DILexicalBlock(scope: !17060, file: !2548, line: 1204, column: 22)
!17065 = !DILocation(line: 1205, column: 22, scope: !17064)
!17066 = !DILocation(line: 1206, column: 2, scope: !17064)
!17067 = !DILocation(line: 1207, column: 1, scope: !17051)
!17068 = !DISubprogram(name: "rb_remove", scope: !180, file: !180, line: 110, type: !17049, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!17069 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2548, file: !2548, line: 1209, type: !17070, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17072)
!17070 = !DISubroutineType(types: !17071)
!17071 = !{!2443, !16991}
!17072 = !{!17073, !17074, !17075}
!17073 = !DILocalVariable(name: "pq", arg: 1, scope: !17069, file: !2548, line: 1209, type: !16991)
!17074 = !DILocalVariable(name: "thread", scope: !17069, file: !2548, line: 1211, type: !2443)
!17075 = !DILocalVariable(name: "n", scope: !17069, file: !2548, line: 1212, type: !2472)
!17076 = !DILocation(line: 0, scope: !17069)
!17077 = !DILocation(line: 1212, column: 37, scope: !17069)
!17078 = !DILocation(line: 1212, column: 21, scope: !17069)
!17079 = !DILocation(line: 1217, column: 2, scope: !17069)
!17080 = distinct !DISubprogram(name: "rb_get_min", scope: !180, file: !180, line: 115, type: !17081, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17083)
!17081 = !DISubroutineType(types: !17082)
!17082 = !{!2472, !17046}
!17083 = !{!17084}
!17084 = !DILocalVariable(name: "tree", arg: 1, scope: !17080, file: !180, line: 115, type: !17046)
!17085 = !DILocation(line: 0, scope: !17080)
!17086 = !DILocation(line: 117, column: 9, scope: !17080)
!17087 = !DILocation(line: 117, column: 2, scope: !17080)
!17088 = !DISubprogram(name: "z_rb_get_minmax", scope: !180, file: !180, line: 100, type: !17089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!17089 = !DISubroutineType(types: !17090)
!17090 = !{!2472, !17046, !190}
!17091 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2548, file: !2548, line: 1246, type: !17092, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17102)
!17092 = !DISubroutineType(types: !17093)
!17093 = !{!2443, !17094}
!17094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17095, size: 32)
!17095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16993, line: 53, size: 2080, elements: !17096)
!17096 = !{!17097, !17101}
!17097 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17095, file: !16993, line: 54, baseType: !17098, size: 2048)
!17098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2479, size: 2048, elements: !17099)
!17099 = !{!17100}
!17100 = !DISubrange(count: 32)
!17101 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17095, file: !16993, line: 55, baseType: !32, size: 32, offset: 2048)
!17102 = !{!17103, !17104, !17105, !17106}
!17103 = !DILocalVariable(name: "pq", arg: 1, scope: !17091, file: !2548, line: 1246, type: !17094)
!17104 = !DILocalVariable(name: "thread", scope: !17091, file: !2548, line: 1252, type: !2443)
!17105 = !DILocalVariable(name: "l", scope: !17091, file: !2548, line: 1253, type: !15903)
!17106 = !DILocalVariable(name: "n", scope: !17091, file: !2548, line: 1254, type: !2544)
!17107 = !DILocation(line: 0, scope: !17091)
!17108 = !DILocation(line: 1248, column: 11, scope: !17109)
!17109 = distinct !DILexicalBlock(scope: !17091, file: !2548, line: 1248, column: 6)
!17110 = !DILocation(line: 1248, column: 7, scope: !17109)
!17111 = !DILocation(line: 1248, column: 6, scope: !17091)
!17112 = !DILocation(line: 1253, column: 31, scope: !17091)
!17113 = !DILocation(line: 1253, column: 20, scope: !17091)
!17114 = !DILocation(line: 1254, column: 19, scope: !17091)
!17115 = !DILocation(line: 1260, column: 1, scope: !17091)
!17116 = distinct !DISubprogram(name: "z_unpend_all", scope: !2548, file: !2548, line: 1262, type: !17117, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17119)
!17117 = !DISubroutineType(types: !17118)
!17118 = !{!107, !2474}
!17119 = !{!17120, !17121, !17122}
!17120 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17116, file: !2548, line: 1262, type: !2474)
!17121 = !DILocalVariable(name: "need_sched", scope: !17116, file: !2548, line: 1264, type: !107)
!17122 = !DILocalVariable(name: "thread", scope: !17116, file: !2548, line: 1265, type: !2443)
!17123 = !DILocation(line: 0, scope: !17116)
!17124 = !DILocation(line: 1267, column: 19, scope: !17116)
!17125 = !DILocation(line: 1267, column: 41, scope: !17116)
!17126 = !DILocation(line: 1267, column: 2, scope: !17116)
!17127 = !DILocation(line: 1268, column: 3, scope: !17128)
!17128 = distinct !DILexicalBlock(scope: !17116, file: !2548, line: 1267, column: 50)
!17129 = !DILocation(line: 1269, column: 3, scope: !17128)
!17130 = distinct !{!17130, !17126, !17131}
!17131 = !DILocation(line: 1271, column: 2, scope: !17116)
!17132 = !DILocation(line: 1273, column: 2, scope: !17116)
!17133 = distinct !DISubprogram(name: "z_waitq_head", scope: !14551, file: !14551, line: 52, type: !16749, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17134)
!17134 = !{!17135}
!17135 = !DILocalVariable(name: "w", arg: 1, scope: !17133, file: !14551, line: 52, type: !2474)
!17136 = !DILocation(line: 0, scope: !17133)
!17137 = !DILocation(line: 54, column: 52, scope: !17133)
!17138 = !DILocation(line: 54, column: 28, scope: !17133)
!17139 = !DILocation(line: 54, column: 9, scope: !17133)
!17140 = !DILocation(line: 54, column: 2, scope: !17133)
!17141 = distinct !DISubprogram(name: "init_ready_q", scope: !2548, file: !2548, line: 1276, type: !17142, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17149)
!17142 = !DISubroutineType(types: !17143)
!17143 = !{null, !17144}
!17144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17145, size: 32)
!17145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !146, line: 83, size: 96, elements: !17146)
!17146 = !{!17147, !17148}
!17147 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17145, file: !146, line: 86, baseType: !2443, size: 32)
!17148 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17145, file: !146, line: 90, baseType: !2479, size: 64, offset: 32)
!17149 = !{!17150}
!17150 = !DILocalVariable(name: "rq", arg: 1, scope: !17141, file: !2548, line: 1276, type: !17144)
!17151 = !DILocation(line: 0, scope: !17141)
!17152 = !DILocation(line: 1289, column: 22, scope: !17141)
!17153 = !DILocation(line: 1289, column: 2, scope: !17141)
!17154 = !DILocation(line: 1291, column: 1, scope: !17141)
!17155 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !17156, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17158)
!17156 = !DISubroutineType(types: !17157)
!17157 = !{null, !15903}
!17158 = !{!17159}
!17159 = !DILocalVariable(name: "list", arg: 1, scope: !17155, file: !151, line: 197, type: !15903)
!17160 = !DILocation(line: 0, scope: !17155)
!17161 = !DILocation(line: 199, column: 8, scope: !17155)
!17162 = !DILocation(line: 199, column: 13, scope: !17155)
!17163 = !DILocation(line: 200, column: 8, scope: !17155)
!17164 = !DILocation(line: 200, column: 13, scope: !17155)
!17165 = !DILocation(line: 201, column: 1, scope: !17155)
!17166 = distinct !DISubprogram(name: "z_sched_init", scope: !2548, file: !2548, line: 1293, type: !337, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !256)
!17167 = !DILocation(line: 1302, column: 2, scope: !17166)
!17168 = !DILocation(line: 1306, column: 2, scope: !17166)
!17169 = !DILocation(line: 1309, column: 1, scope: !17166)
!17170 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2548, file: !2548, line: 1311, type: !17171, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17174)
!17171 = !DISubroutineType(types: !17172)
!17172 = !{!107, !17173}
!17173 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !2443)
!17174 = !{!17175}
!17175 = !DILocalVariable(name: "thread", arg: 1, scope: !17170, file: !2548, line: 1311, type: !17173)
!17176 = !DILocation(line: 0, scope: !17170)
!17177 = !DILocation(line: 1313, column: 22, scope: !17170)
!17178 = !DILocation(line: 1313, column: 9, scope: !17170)
!17179 = !DILocation(line: 1313, column: 2, scope: !17170)
!17180 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2548, file: !2548, line: 1325, type: !17181, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17183)
!17181 = !DISubroutineType(types: !17182)
!17182 = !{null, !17173, !107}
!17183 = !{!17184, !17185, !17186}
!17184 = !DILocalVariable(name: "thread", arg: 1, scope: !17180, file: !2548, line: 1325, type: !17173)
!17185 = !DILocalVariable(name: "prio", arg: 2, scope: !17180, file: !2548, line: 1325, type: !107)
!17186 = !DILocalVariable(name: "th", scope: !17180, file: !2548, line: 1334, type: !2443)
!17187 = !DILocation(line: 0, scope: !17180)
!17188 = !DILocation(line: 1336, column: 2, scope: !17180)
!17189 = !DILocation(line: 1337, column: 1, scope: !17180)
!17190 = distinct !DISubprogram(name: "k_can_yield", scope: !2548, file: !2548, line: 1384, type: !8393, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !256)
!17191 = !DILocation(line: 1386, column: 11, scope: !17190)
!17192 = !DILocation(line: 1386, column: 29, scope: !17190)
!17193 = !DILocation(line: 1386, column: 32, scope: !17190)
!17194 = !DILocation(line: 1386, column: 46, scope: !17190)
!17195 = !DILocation(line: 1387, column: 28, scope: !17190)
!17196 = !DILocation(line: 1387, column: 4, scope: !17190)
!17197 = !DILocation(line: 1386, column: 2, scope: !17190)
!17198 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !142, file: !142, line: 989, type: !8393, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !256)
!17199 = !DILocation(line: 993, column: 10, scope: !17198)
!17200 = !DILocation(line: 993, column: 2, scope: !17198)
!17201 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2548, file: !2548, line: 1390, type: !337, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17202)
!17202 = !{!17203}
!17203 = !DILocalVariable(name: "key", scope: !17201, file: !2548, line: 1396, type: !15692)
!17204 = !DILocation(line: 0, scope: !15700, inlinedAt: !17205)
!17205 = distinct !DILocation(line: 1396, column: 25, scope: !17201)
!17206 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !17207)
!17207 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !17205)
!17208 = !DILocation(line: 0, scope: !15709, inlinedAt: !17207)
!17209 = !DILocation(line: 0, scope: !17201)
!17210 = !DILocation(line: 1400, column: 18, scope: !17211)
!17211 = distinct !DILexicalBlock(scope: !17212, file: !2548, line: 1399, column: 36)
!17212 = distinct !DILexicalBlock(scope: !17201, file: !2548, line: 1398, column: 6)
!17213 = !DILocation(line: 0, scope: !15869, inlinedAt: !17214)
!17214 = distinct !DILocation(line: 1400, column: 3, scope: !17211)
!17215 = !DILocation(line: 266, column: 15, scope: !15869, inlinedAt: !17214)
!17216 = !DILocation(line: 266, column: 28, scope: !15869, inlinedAt: !17214)
!17217 = !DILocation(line: 0, scope: !15877, inlinedAt: !17218)
!17218 = distinct !DILocation(line: 268, column: 3, scope: !15881, inlinedAt: !17214)
!17219 = !DILocation(line: 234, column: 2, scope: !15877, inlinedAt: !17218)
!17220 = !DILocation(line: 1402, column: 15, scope: !17201)
!17221 = !DILocation(line: 0, scope: !15886, inlinedAt: !17222)
!17222 = distinct !DILocation(line: 1402, column: 2, scope: !17201)
!17223 = !DILocation(line: 252, column: 15, scope: !15886, inlinedAt: !17222)
!17224 = !DILocation(line: 252, column: 28, scope: !15886, inlinedAt: !17222)
!17225 = !DILocation(line: 0, scope: !15893, inlinedAt: !17226)
!17226 = distinct !DILocation(line: 254, column: 3, scope: !15897, inlinedAt: !17222)
!17227 = !DILocation(line: 0, scope: !15900, inlinedAt: !17228)
!17228 = distinct !DILocation(line: 229, column: 2, scope: !15893, inlinedAt: !17226)
!17229 = !DILocation(line: 188, column: 2, scope: !15910, inlinedAt: !17228)
!17230 = !DILocation(line: 188, column: 2, scope: !15912, inlinedAt: !17228)
!17231 = !DILocation(line: 0, scope: !15910, inlinedAt: !17228)
!17232 = !DILocation(line: 189, column: 7, scope: !15915, inlinedAt: !17228)
!17233 = !DILocation(line: 189, column: 35, scope: !15915, inlinedAt: !17228)
!17234 = !DILocation(line: 189, column: 7, scope: !15916, inlinedAt: !17228)
!17235 = !DILocation(line: 191, column: 21, scope: !15920, inlinedAt: !17228)
!17236 = !DILocation(line: 190, column: 4, scope: !15920, inlinedAt: !17228)
!17237 = !DILocation(line: 192, column: 4, scope: !15920, inlinedAt: !17228)
!17238 = distinct !{!17238, !17229, !17239}
!17239 = !DILocation(line: 194, column: 2, scope: !15910, inlinedAt: !17228)
!17240 = !DILocation(line: 196, column: 37, scope: !15900, inlinedAt: !17228)
!17241 = !DILocation(line: 196, column: 2, scope: !15900, inlinedAt: !17228)
!17242 = !DILocation(line: 197, column: 1, scope: !15900, inlinedAt: !17228)
!17243 = !DILocation(line: 1403, column: 2, scope: !17201)
!17244 = !DILocation(line: 0, scope: !16309, inlinedAt: !17245)
!17245 = distinct !DILocation(line: 1404, column: 2, scope: !17201)
!17246 = !DILocation(line: 196, column: 9, scope: !16309, inlinedAt: !17245)
!17247 = !DILocation(line: 1405, column: 1, scope: !17201)
!17248 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2548, file: !2548, line: 1459, type: !17249, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17251)
!17249 = !DISubroutineType(types: !17250)
!17250 = !{!334, !16489}
!17251 = !{!17252, !17253, !17254}
!17252 = !DILocalVariable(name: "timeout", arg: 1, scope: !17248, file: !2548, line: 1459, type: !16489)
!17253 = !DILocalVariable(name: "ticks", scope: !17248, file: !2548, line: 1461, type: !102)
!17254 = !DILocalVariable(name: "ret", scope: !17248, file: !2548, line: 1480, type: !334)
!17255 = !DILocation(line: 0, scope: !17248)
!17256 = !DILocation(line: 1468, column: 6, scope: !17257)
!17257 = distinct !DILexicalBlock(scope: !17248, file: !2548, line: 1468, column: 6)
!17258 = !DILocation(line: 1468, column: 6, scope: !17248)
!17259 = !DILocation(line: 1469, column: 20, scope: !17260)
!17260 = distinct !DILexicalBlock(scope: !17257, file: !2548, line: 1468, column: 40)
!17261 = !DILocation(line: 1469, column: 3, scope: !17260)
!17262 = !DILocation(line: 1473, column: 3, scope: !17260)
!17263 = !DILocation(line: 1478, column: 10, scope: !17248)
!17264 = !DILocation(line: 1480, column: 16, scope: !17248)
!17265 = !DILocation(line: 1485, column: 1, scope: !17248)
!17266 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3675, file: !3675, line: 310, type: !17267, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17269)
!17267 = !DISubroutineType(types: !17268)
!17268 = !{null, !17173}
!17269 = !{!17270}
!17270 = !DILocalVariable(name: "thread", arg: 1, scope: !17266, file: !3675, line: 310, type: !17173)
!17271 = !DILocation(line: 0, scope: !17266)
!17272 = !DILocation(line: 319, column: 2, scope: !17273)
!17273 = distinct !DILexicalBlock(scope: !17266, file: !3675, line: 319, column: 2)
!17274 = !{i64 2154885858}
!17275 = !DILocation(line: 320, column: 2, scope: !17266)
!17276 = !DILocation(line: 321, column: 1, scope: !17266)
!17277 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2548, file: !2548, line: 1415, type: !17278, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17280)
!17278 = !DISubroutineType(types: !17279)
!17279 = !{!334, !102}
!17280 = !{!17281, !17282, !17283, !17284}
!17281 = !DILocalVariable(name: "ticks", arg: 1, scope: !17277, file: !2548, line: 1415, type: !102)
!17282 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17277, file: !2548, line: 1418, type: !108)
!17283 = !DILocalVariable(name: "timeout", scope: !17277, file: !2548, line: 1430, type: !16489)
!17284 = !DILocalVariable(name: "key", scope: !17277, file: !2548, line: 1437, type: !15692)
!17285 = !DILocation(line: 0, scope: !17277)
!17286 = !DILocation(line: 1425, column: 12, scope: !17287)
!17287 = distinct !DILexicalBlock(scope: !17277, file: !2548, line: 1425, column: 6)
!17288 = !DILocation(line: 1425, column: 6, scope: !17277)
!17289 = !DILocation(line: 1426, column: 3, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17287, file: !2548, line: 1425, column: 18)
!17291 = !DILocation(line: 1427, column: 3, scope: !17290)
!17292 = !DILocation(line: 1431, column: 24, scope: !17293)
!17293 = distinct !DILexicalBlock(scope: !17277, file: !2548, line: 1431, column: 6)
!17294 = !DILocation(line: 1431, column: 6, scope: !17277)
!17295 = !DILocation(line: 1432, column: 35, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17293, file: !2548, line: 1431, column: 30)
!17297 = !DILocation(line: 1432, column: 27, scope: !17296)
!17298 = !DILocation(line: 1433, column: 2, scope: !17296)
!17299 = !DILocation(line: 1434, column: 27, scope: !17300)
!17300 = distinct !DILexicalBlock(scope: !17293, file: !2548, line: 1433, column: 9)
!17301 = !DILocation(line: 0, scope: !17293)
!17302 = !DILocation(line: 0, scope: !15700, inlinedAt: !17303)
!17303 = distinct !DILocation(line: 1437, column: 25, scope: !17277)
!17304 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !17305)
!17305 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !17303)
!17306 = !DILocation(line: 0, scope: !15709, inlinedAt: !17305)
!17307 = !DILocation(line: 1440, column: 20, scope: !17277)
!17308 = !DILocation(line: 1440, column: 18, scope: !17277)
!17309 = !DILocation(line: 1442, column: 2, scope: !17277)
!17310 = !DILocation(line: 1443, column: 23, scope: !17277)
!17311 = !DILocation(line: 1443, column: 2, scope: !17277)
!17312 = !DILocation(line: 1444, column: 29, scope: !17277)
!17313 = !DILocation(line: 1444, column: 2, scope: !17277)
!17314 = !DILocation(line: 0, scope: !16309, inlinedAt: !17315)
!17315 = distinct !DILocation(line: 1446, column: 8, scope: !17277)
!17316 = !DILocation(line: 196, column: 9, scope: !16309, inlinedAt: !17315)
!17317 = !DILocation(line: 1450, column: 10, scope: !17277)
!17318 = !DILocation(line: 1450, column: 45, scope: !17277)
!17319 = !DILocation(line: 1450, column: 43, scope: !17277)
!17320 = !DILocation(line: 1451, column: 6, scope: !17277)
!17321 = !DILocation(line: 1457, column: 1, scope: !17277)
!17322 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3512, file: !3512, line: 1103, type: !3513, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17323)
!17323 = !{!17324}
!17324 = !DILocalVariable(name: "t", arg: 1, scope: !17322, file: !3512, line: 1103, type: !109)
!17325 = !DILocation(line: 0, scope: !17322)
!17326 = !DILocation(line: 0, scope: !15747, inlinedAt: !17327)
!17327 = distinct !DILocation(line: 1106, column: 9, scope: !17322)
!17328 = !DILocation(line: 139, column: 13, scope: !17329, inlinedAt: !17327)
!17329 = distinct !DILexicalBlock(scope: !17330, file: !3512, line: 138, column: 10)
!17330 = distinct !DILexicalBlock(scope: !17331, file: !3512, line: 136, column: 7)
!17331 = distinct !DILexicalBlock(scope: !15768, file: !3512, line: 134, column: 17)
!17332 = !DILocation(line: 1106, column: 2, scope: !17322)
!17333 = distinct !DISubprogram(name: "k_yield", scope: !3675, file: !3675, line: 140, type: !337, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !256)
!17334 = !DILocation(line: 148, column: 2, scope: !17335)
!17335 = distinct !DILexicalBlock(scope: !17333, file: !3675, line: 148, column: 2)
!17336 = !{i64 2154885178}
!17337 = !DILocation(line: 149, column: 2, scope: !17333)
!17338 = !DILocation(line: 150, column: 1, scope: !17333)
!17339 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2548, file: !2548, line: 1495, type: !17340, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17342)
!17340 = !DISubroutineType(types: !17341)
!17341 = !{!334, !107}
!17342 = !{!17343, !17344}
!17343 = !DILocalVariable(name: "us", arg: 1, scope: !17339, file: !2548, line: 1495, type: !107)
!17344 = !DILocalVariable(name: "ticks", scope: !17339, file: !2548, line: 1497, type: !334)
!17345 = !DILocation(line: 0, scope: !17339)
!17346 = !DILocation(line: 1501, column: 31, scope: !17339)
!17347 = !DILocation(line: 1501, column: 10, scope: !17339)
!17348 = !DILocation(line: 1502, column: 23, scope: !17339)
!17349 = !DILocation(line: 1502, column: 10, scope: !17339)
!17350 = !DILocation(line: 1506, column: 31, scope: !17339)
!17351 = !DILocation(line: 1506, column: 9, scope: !17339)
!17352 = !DILocation(line: 1506, column: 2, scope: !17339)
!17353 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3512, file: !3512, line: 571, type: !3513, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17354)
!17354 = !{!17355}
!17355 = !DILocalVariable(name: "t", arg: 1, scope: !17353, file: !3512, line: 571, type: !109)
!17356 = !DILocation(line: 0, scope: !17353)
!17357 = !DILocation(line: 0, scope: !15747, inlinedAt: !17358)
!17358 = distinct !DILocation(line: 574, column: 9, scope: !17353)
!17359 = !DILocation(line: 135, column: 5, scope: !17331, inlinedAt: !17358)
!17360 = !DILocation(line: 139, column: 13, scope: !17329, inlinedAt: !17358)
!17361 = !DILocation(line: 574, column: 2, scope: !17353)
!17362 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3512, file: !3512, line: 1187, type: !3513, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17363)
!17363 = !{!17364}
!17364 = !DILocalVariable(name: "t", arg: 1, scope: !17362, file: !3512, line: 1187, type: !109)
!17365 = !DILocation(line: 0, scope: !17362)
!17366 = !DILocation(line: 0, scope: !15747, inlinedAt: !17367)
!17367 = distinct !DILocation(line: 1190, column: 9, scope: !17362)
!17368 = !DILocation(line: 145, column: 13, scope: !17369, inlinedAt: !17367)
!17369 = distinct !DILexicalBlock(scope: !15765, file: !3512, line: 144, column: 10)
!17370 = !DILocation(line: 1190, column: 2, scope: !17362)
!17371 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2548, file: !2548, line: 1517, type: !17267, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17372)
!17372 = !{!17373}
!17373 = !DILocalVariable(name: "thread", arg: 1, scope: !17371, file: !2548, line: 1517, type: !17173)
!17374 = !DILocation(line: 0, scope: !17371)
!17375 = !DILocation(line: 1521, column: 6, scope: !17376)
!17376 = distinct !DILexicalBlock(scope: !17371, file: !2548, line: 1521, column: 6)
!17377 = !DILocation(line: 1521, column: 6, scope: !17371)
!17378 = !DILocation(line: 1525, column: 6, scope: !17379)
!17379 = distinct !DILexicalBlock(scope: !17371, file: !2548, line: 1525, column: 6)
!17380 = !DILocation(line: 1525, column: 37, scope: !17379)
!17381 = !DILocation(line: 1525, column: 6, scope: !17371)
!17382 = !DILocation(line: 1527, column: 20, scope: !17383)
!17383 = distinct !DILexicalBlock(scope: !17384, file: !2548, line: 1527, column: 7)
!17384 = distinct !DILexicalBlock(scope: !17379, file: !2548, line: 1525, column: 42)
!17385 = !DILocation(line: 1527, column: 33, scope: !17383)
!17386 = !DILocation(line: 1527, column: 7, scope: !17384)
!17387 = !DILocation(line: 1532, column: 2, scope: !17371)
!17388 = !DILocation(line: 1533, column: 2, scope: !17371)
!17389 = !DILocation(line: 1031, column: 3, scope: !16342, inlinedAt: !17390)
!17390 = distinct !DILocation(line: 48, column: 10, scope: !16346, inlinedAt: !17391)
!17391 = distinct !DILocation(line: 1537, column: 7, scope: !17392)
!17392 = distinct !DILexicalBlock(scope: !17371, file: !2548, line: 1537, column: 6)
!17393 = !DILocation(line: 0, scope: !16342, inlinedAt: !17390)
!17394 = !DILocation(line: 48, column: 9, scope: !16346, inlinedAt: !17391)
!17395 = !DILocation(line: 1537, column: 6, scope: !17371)
!17396 = !DILocation(line: 1538, column: 3, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17392, file: !2548, line: 1537, column: 25)
!17398 = !DILocation(line: 1539, column: 2, scope: !17397)
!17399 = !DILocation(line: 1540, column: 1, scope: !17371)
!17400 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14225, file: !14225, line: 101, type: !15818, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17401)
!17401 = !{!17402}
!17402 = !DILocalVariable(name: "thread", arg: 1, scope: !17400, file: !14225, line: 101, type: !2443)
!17403 = !DILocation(line: 0, scope: !17400)
!17404 = !DILocation(line: 103, column: 23, scope: !17400)
!17405 = !DILocation(line: 103, column: 36, scope: !17400)
!17406 = !DILocation(line: 103, column: 55, scope: !17400)
!17407 = !DILocation(line: 103, column: 2, scope: !17400)
!17408 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2548, file: !2548, line: 1567, type: !17409, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17411)
!17409 = !DISubroutineType(types: !17410)
!17410 = !{!17173}
!17411 = !{!17412}
!17412 = !DILocalVariable(name: "ret", scope: !17408, file: !2548, line: 1577, type: !17173)
!17413 = !DILocation(line: 1577, column: 30, scope: !17408)
!17414 = !DILocation(line: 0, scope: !17408)
!17415 = !DILocation(line: 1582, column: 2, scope: !17408)
!17416 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2548, file: !2548, line: 1593, type: !8681, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !256)
!17417 = !DILocation(line: 1031, column: 3, scope: !16342, inlinedAt: !17418)
!17418 = distinct !DILocation(line: 48, column: 10, scope: !16346, inlinedAt: !17419)
!17419 = distinct !DILocation(line: 1595, column: 10, scope: !17416)
!17420 = !DILocation(line: 0, scope: !16342, inlinedAt: !17418)
!17421 = !DILocation(line: 48, column: 9, scope: !16346, inlinedAt: !17419)
!17422 = !DILocation(line: 1595, column: 27, scope: !17416)
!17423 = !DILocation(line: 1595, column: 41, scope: !17416)
!17424 = !DILocation(line: 1595, column: 30, scope: !17416)
!17425 = !DILocation(line: 1595, column: 2, scope: !17416)
!17426 = distinct !DISubprogram(name: "z_thread_abort", scope: !2548, file: !2548, line: 1725, type: !15658, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17427)
!17427 = !{!17428, !17429}
!17428 = !DILocalVariable(name: "thread", arg: 1, scope: !17426, file: !2548, line: 1725, type: !2443)
!17429 = !DILocalVariable(name: "key", scope: !17426, file: !2548, line: 1727, type: !15692)
!17430 = !DILocation(line: 0, scope: !17426)
!17431 = !DILocation(line: 0, scope: !15700, inlinedAt: !17432)
!17432 = distinct !DILocation(line: 1727, column: 25, scope: !17426)
!17433 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !17434)
!17434 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !17432)
!17435 = !DILocation(line: 0, scope: !15709, inlinedAt: !17434)
!17436 = !DILocation(line: 1729, column: 20, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17426, file: !2548, line: 1729, column: 6)
!17438 = !DILocation(line: 1729, column: 33, scope: !17437)
!17439 = !DILocation(line: 1729, column: 48, scope: !17437)
!17440 = !DILocation(line: 1729, column: 6, scope: !17426)
!17441 = !DILocation(line: 0, scope: !15727, inlinedAt: !17442)
!17442 = distinct !DILocation(line: 1730, column: 3, scope: !17443)
!17443 = distinct !DILexicalBlock(scope: !17437, file: !2548, line: 1729, column: 54)
!17444 = !DILocation(line: 0, scope: !15735, inlinedAt: !17445)
!17445 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !17442)
!17446 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !17445)
!17447 = !DILocation(line: 1732, column: 3, scope: !17448)
!17448 = distinct !DILexicalBlock(scope: !17443, file: !2548, line: 1732, column: 3)
!17449 = !{i64 2155621183, i64 2155621199, i64 2155621225, i64 2155621253, i64 2155621273}
!17450 = !DILocation(line: 1733, column: 3, scope: !17443)
!17451 = !DILocation(line: 1736, column: 20, scope: !17452)
!17452 = distinct !DILexicalBlock(scope: !17426, file: !2548, line: 1736, column: 6)
!17453 = !DILocation(line: 1736, column: 33, scope: !17452)
!17454 = !DILocation(line: 1736, column: 49, scope: !17452)
!17455 = !DILocation(line: 1736, column: 6, scope: !17426)
!17456 = !DILocation(line: 0, scope: !15727, inlinedAt: !17457)
!17457 = distinct !DILocation(line: 1737, column: 3, scope: !17458)
!17458 = distinct !DILexicalBlock(scope: !17452, file: !2548, line: 1736, column: 56)
!17459 = !DILocation(line: 0, scope: !15735, inlinedAt: !17460)
!17460 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !17457)
!17461 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !17460)
!17462 = !DILocation(line: 1738, column: 3, scope: !17458)
!17463 = !DILocation(line: 1775, column: 2, scope: !17426)
!17464 = !DILocation(line: 1776, column: 16, scope: !17465)
!17465 = distinct !DILexicalBlock(scope: !17426, file: !2548, line: 1776, column: 6)
!17466 = !DILocation(line: 1776, column: 13, scope: !17465)
!17467 = !DILocation(line: 1776, column: 25, scope: !17465)
!17468 = !DILocation(line: 1031, column: 3, scope: !16342, inlinedAt: !17469)
!17469 = distinct !DILocation(line: 48, column: 10, scope: !16346, inlinedAt: !17470)
!17470 = distinct !DILocation(line: 1776, column: 29, scope: !17465)
!17471 = !DILocation(line: 0, scope: !16342, inlinedAt: !17469)
!17472 = !DILocation(line: 48, column: 9, scope: !16346, inlinedAt: !17470)
!17473 = !DILocation(line: 1776, column: 6, scope: !17426)
!17474 = !DILocation(line: 0, scope: !16309, inlinedAt: !17475)
!17475 = distinct !DILocation(line: 1777, column: 3, scope: !17476)
!17476 = distinct !DILexicalBlock(scope: !17465, file: !2548, line: 1776, column: 47)
!17477 = !DILocation(line: 196, column: 9, scope: !16309, inlinedAt: !17475)
!17478 = !DILocation(line: 1779, column: 2, scope: !17476)
!17479 = !DILocation(line: 0, scope: !15727, inlinedAt: !17480)
!17480 = distinct !DILocation(line: 1780, column: 2, scope: !17426)
!17481 = !DILocation(line: 0, scope: !15735, inlinedAt: !17482)
!17482 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !17480)
!17483 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !17482)
!17484 = !DILocation(line: 1781, column: 1, scope: !17426)
!17485 = distinct !DISubprogram(name: "end_thread", scope: !2548, file: !2548, line: 1690, type: !15658, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17486)
!17486 = !{!17487}
!17487 = !DILocalVariable(name: "thread", arg: 1, scope: !17485, file: !2548, line: 1690, type: !2443)
!17488 = !DILocation(line: 0, scope: !17485)
!17489 = !DILocation(line: 1695, column: 20, scope: !17490)
!17490 = distinct !DILexicalBlock(scope: !17485, file: !2548, line: 1695, column: 6)
!17491 = !DILocation(line: 1695, column: 33, scope: !17490)
!17492 = !DILocation(line: 1695, column: 49, scope: !17490)
!17493 = !DILocation(line: 1695, column: 6, scope: !17485)
!17494 = !DILocation(line: 1697, column: 29, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17490, file: !2548, line: 1695, column: 56)
!17496 = !DILocation(line: 1698, column: 7, scope: !17497)
!17497 = distinct !DILexicalBlock(scope: !17495, file: !2548, line: 1698, column: 7)
!17498 = !DILocation(line: 1698, column: 7, scope: !17495)
!17499 = !DILocation(line: 0, scope: !15869, inlinedAt: !17500)
!17500 = distinct !DILocation(line: 1699, column: 4, scope: !17501)
!17501 = distinct !DILexicalBlock(scope: !17497, file: !2548, line: 1698, column: 35)
!17502 = !DILocation(line: 266, column: 28, scope: !15869, inlinedAt: !17500)
!17503 = !DILocation(line: 0, scope: !15877, inlinedAt: !17504)
!17504 = distinct !DILocation(line: 268, column: 3, scope: !15881, inlinedAt: !17500)
!17505 = !DILocation(line: 234, column: 2, scope: !15877, inlinedAt: !17504)
!17506 = !DILocation(line: 1700, column: 3, scope: !17501)
!17507 = !DILocation(line: 1701, column: 20, scope: !17508)
!17508 = distinct !DILexicalBlock(scope: !17495, file: !2548, line: 1701, column: 7)
!17509 = !DILocation(line: 1701, column: 30, scope: !17508)
!17510 = !DILocation(line: 1701, column: 7, scope: !17495)
!17511 = !DILocation(line: 1702, column: 4, scope: !17512)
!17512 = distinct !DILexicalBlock(scope: !17508, file: !2548, line: 1701, column: 39)
!17513 = !DILocation(line: 1703, column: 3, scope: !17512)
!17514 = !DILocation(line: 1704, column: 9, scope: !17495)
!17515 = !DILocation(line: 1705, column: 23, scope: !17495)
!17516 = !DILocation(line: 1705, column: 3, scope: !17495)
!17517 = !DILocation(line: 1706, column: 3, scope: !17495)
!17518 = !DILocation(line: 1722, column: 2, scope: !17495)
!17519 = !DILocation(line: 1723, column: 1, scope: !17485)
!17520 = distinct !DISubprogram(name: "unpend_all", scope: !2548, file: !2548, line: 1674, type: !17521, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17523)
!17521 = !DISubroutineType(types: !17522)
!17522 = !{null, !2474}
!17523 = !{!17524, !17525}
!17524 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17520, file: !2548, line: 1674, type: !2474)
!17525 = !DILocalVariable(name: "thread", scope: !17520, file: !2548, line: 1676, type: !2443)
!17526 = !DILocation(line: 0, scope: !17520)
!17527 = !DILocation(line: 1678, column: 19, scope: !17520)
!17528 = !DILocation(line: 1678, column: 41, scope: !17520)
!17529 = !DILocation(line: 1678, column: 2, scope: !17520)
!17530 = !DILocation(line: 1679, column: 3, scope: !17531)
!17531 = distinct !DILexicalBlock(scope: !17520, file: !2548, line: 1678, column: 50)
!17532 = !DILocation(line: 1680, column: 9, scope: !17531)
!17533 = !DILocalVariable(name: "thread", arg: 1, scope: !17534, file: !14245, line: 65, type: !2443)
!17534 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14245, file: !14245, line: 65, type: !17535, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17537)
!17535 = !DISubroutineType(types: !17536)
!17536 = !{null, !2443, !32}
!17537 = !{!17533, !17538}
!17538 = !DILocalVariable(name: "value", arg: 2, scope: !17534, file: !14245, line: 65, type: !32)
!17539 = !DILocation(line: 0, scope: !17534, inlinedAt: !17540)
!17540 = distinct !DILocation(line: 1681, column: 3, scope: !17531)
!17541 = !DILocation(line: 67, column: 15, scope: !17534, inlinedAt: !17540)
!17542 = !DILocation(line: 67, column: 33, scope: !17534, inlinedAt: !17540)
!17543 = !DILocation(line: 1682, column: 3, scope: !17531)
!17544 = distinct !{!17544, !17529, !17545}
!17545 = !DILocation(line: 1683, column: 2, scope: !17520)
!17546 = !DILocation(line: 1684, column: 1, scope: !17520)
!17547 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2548, file: !2548, line: 1794, type: !17548, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17550)
!17548 = !DISubroutineType(types: !17549)
!17549 = !{!107, !2443, !16489}
!17550 = !{!17551, !17552, !17553, !17554}
!17551 = !DILocalVariable(name: "thread", arg: 1, scope: !17547, file: !2548, line: 1794, type: !2443)
!17552 = !DILocalVariable(name: "timeout", arg: 2, scope: !17547, file: !2548, line: 1794, type: !16489)
!17553 = !DILocalVariable(name: "key", scope: !17547, file: !2548, line: 1796, type: !15692)
!17554 = !DILocalVariable(name: "ret", scope: !17547, file: !2548, line: 1797, type: !107)
!17555 = !DILocation(line: 0, scope: !17547)
!17556 = !DILocation(line: 0, scope: !15700, inlinedAt: !17557)
!17557 = distinct !DILocation(line: 1796, column: 25, scope: !17547)
!17558 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !17559)
!17559 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !17557)
!17560 = !DILocation(line: 0, scope: !15709, inlinedAt: !17559)
!17561 = !DILocation(line: 1801, column: 20, scope: !17562)
!17562 = distinct !DILexicalBlock(scope: !17547, file: !2548, line: 1801, column: 6)
!17563 = !DILocation(line: 1801, column: 33, scope: !17562)
!17564 = !DILocation(line: 1801, column: 49, scope: !17562)
!17565 = !DILocation(line: 1801, column: 6, scope: !17547)
!17566 = !DILocation(line: 1803, column: 13, scope: !17567)
!17567 = distinct !DILexicalBlock(scope: !17562, file: !2548, line: 1803, column: 13)
!17568 = !DILocation(line: 1803, column: 13, scope: !17562)
!17569 = !DILocation(line: 1805, column: 24, scope: !17570)
!17570 = distinct !DILexicalBlock(scope: !17567, file: !2548, line: 1805, column: 13)
!17571 = !DILocation(line: 1805, column: 21, scope: !17570)
!17572 = !DILocation(line: 1805, column: 34, scope: !17570)
!17573 = !DILocation(line: 1806, column: 20, scope: !17570)
!17574 = !DILocation(line: 1806, column: 44, scope: !17570)
!17575 = !DILocation(line: 1806, column: 30, scope: !17570)
!17576 = !DILocation(line: 1805, column: 13, scope: !17567)
!17577 = !DILocation(line: 1810, column: 42, scope: !17578)
!17578 = distinct !DILexicalBlock(scope: !17570, file: !2548, line: 1808, column: 9)
!17579 = !DILocation(line: 1810, column: 3, scope: !17578)
!17580 = !DILocation(line: 1811, column: 22, scope: !17578)
!17581 = !DILocation(line: 1811, column: 3, scope: !17578)
!17582 = !DILocation(line: 0, scope: !16309, inlinedAt: !17583)
!17583 = distinct !DILocation(line: 1814, column: 9, scope: !17578)
!17584 = !DILocation(line: 196, column: 9, scope: !16309, inlinedAt: !17583)
!17585 = !DILocation(line: 1817, column: 3, scope: !17578)
!17586 = !DILocation(line: 0, scope: !17562)
!17587 = !DILocation(line: 0, scope: !15727, inlinedAt: !17588)
!17588 = distinct !DILocation(line: 1822, column: 2, scope: !17547)
!17589 = !DILocation(line: 0, scope: !15735, inlinedAt: !17590)
!17590 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !17588)
!17591 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !17590)
!17592 = !DILocation(line: 1823, column: 2, scope: !17547)
!17593 = !DILocation(line: 1824, column: 1, scope: !17547)
!17594 = distinct !DISubprogram(name: "z_sched_wake", scope: !2548, file: !2548, line: 1882, type: !17595, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17597)
!17595 = !DISubroutineType(types: !17596)
!17596 = !{!136, !2474, !107, !106}
!17597 = !{!17598, !17599, !17600, !17601, !17602, !17603, !17605}
!17598 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17594, file: !2548, line: 1882, type: !2474)
!17599 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17594, file: !2548, line: 1882, type: !107)
!17600 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17594, file: !2548, line: 1882, type: !106)
!17601 = !DILocalVariable(name: "thread", scope: !17594, file: !2548, line: 1884, type: !2443)
!17602 = !DILocalVariable(name: "ret", scope: !17594, file: !2548, line: 1885, type: !136)
!17603 = !DILocalVariable(name: "__i", scope: !17604, file: !2548, line: 1887, type: !15692)
!17604 = distinct !DILexicalBlock(scope: !17594, file: !2548, line: 1887, column: 2)
!17605 = !DILocalVariable(name: "__key", scope: !17604, file: !2548, line: 1887, type: !15692)
!17606 = !DILocation(line: 0, scope: !17594)
!17607 = !DILocation(line: 0, scope: !17604)
!17608 = !DILocation(line: 0, scope: !15700, inlinedAt: !17609)
!17609 = distinct !DILocation(line: 1887, column: 2, scope: !17604)
!17610 = !DILocation(line: 55, column: 2, scope: !15709, inlinedAt: !17611)
!17611 = distinct !DILocation(line: 145, column: 10, scope: !15700, inlinedAt: !17609)
!17612 = !DILocation(line: 0, scope: !15709, inlinedAt: !17611)
!17613 = !DILocation(line: 1888, column: 12, scope: !17614)
!17614 = distinct !DILexicalBlock(scope: !17615, file: !2548, line: 1887, column: 26)
!17615 = distinct !DILexicalBlock(scope: !17604, file: !2548, line: 1887, column: 2)
!17616 = !DILocation(line: 1890, column: 14, scope: !17617)
!17617 = distinct !DILexicalBlock(scope: !17614, file: !2548, line: 1890, column: 7)
!17618 = !DILocation(line: 1890, column: 7, scope: !17614)
!17619 = !DILocalVariable(name: "thread", arg: 1, scope: !17620, file: !14995, line: 134, type: !2443)
!17620 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14995, file: !14995, line: 134, type: !17621, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17623)
!17621 = !DISubroutineType(types: !17622)
!17622 = !{null, !2443, !32, !106}
!17623 = !{!17619, !17624, !17625}
!17624 = !DILocalVariable(name: "value", arg: 2, scope: !17620, file: !14995, line: 135, type: !32)
!17625 = !DILocalVariable(name: "data", arg: 3, scope: !17620, file: !14995, line: 136, type: !106)
!17626 = !DILocation(line: 0, scope: !17620, inlinedAt: !17627)
!17627 = distinct !DILocation(line: 1891, column: 4, scope: !17628)
!17628 = distinct !DILexicalBlock(scope: !17617, file: !2548, line: 1890, column: 23)
!17629 = !DILocation(line: 0, scope: !17534, inlinedAt: !17630)
!17630 = distinct !DILocation(line: 138, column: 2, scope: !17620, inlinedAt: !17627)
!17631 = !DILocation(line: 67, column: 15, scope: !17534, inlinedAt: !17630)
!17632 = !DILocation(line: 67, column: 33, scope: !17534, inlinedAt: !17630)
!17633 = !DILocation(line: 139, column: 15, scope: !17620, inlinedAt: !17627)
!17634 = !DILocation(line: 139, column: 25, scope: !17620, inlinedAt: !17627)
!17635 = !DILocation(line: 1894, column: 4, scope: !17628)
!17636 = !DILocation(line: 1895, column: 10, scope: !17628)
!17637 = !DILocation(line: 1896, column: 4, scope: !17628)
!17638 = !DILocation(line: 1898, column: 3, scope: !17628)
!17639 = !DILocation(line: 0, scope: !15727, inlinedAt: !17640)
!17640 = distinct !DILocation(line: 1887, column: 2, scope: !17615)
!17641 = !DILocation(line: 0, scope: !15735, inlinedAt: !17642)
!17642 = distinct !DILocation(line: 215, column: 2, scope: !15727, inlinedAt: !17640)
!17643 = !DILocation(line: 95, column: 2, scope: !15735, inlinedAt: !17642)
!17644 = !DILocation(line: 1901, column: 2, scope: !17594)
!17645 = distinct !DISubprogram(name: "z_sched_wait", scope: !2548, file: !2548, line: 1904, type: !17646, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17649)
!17646 = !DISubroutineType(types: !17647)
!17647 = !{!107, !15703, !15692, !2474, !16489, !17648}
!17648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!17649 = !{!17650, !17651, !17652, !17653, !17654, !17655}
!17650 = !DILocalVariable(name: "lock", arg: 1, scope: !17645, file: !2548, line: 1904, type: !15703)
!17651 = !DILocalVariable(name: "key", arg: 2, scope: !17645, file: !2548, line: 1904, type: !15692)
!17652 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17645, file: !2548, line: 1905, type: !2474)
!17653 = !DILocalVariable(name: "timeout", arg: 4, scope: !17645, file: !2548, line: 1905, type: !16489)
!17654 = !DILocalVariable(name: "data", arg: 5, scope: !17645, file: !2548, line: 1905, type: !17648)
!17655 = !DILocalVariable(name: "ret", scope: !17645, file: !2548, line: 1907, type: !107)
!17656 = !DILocation(line: 0, scope: !17645)
!17657 = !DILocation(line: 1907, column: 12, scope: !17645)
!17658 = !DILocation(line: 1909, column: 11, scope: !17659)
!17659 = distinct !DILexicalBlock(scope: !17645, file: !2548, line: 1909, column: 6)
!17660 = !DILocation(line: 1909, column: 6, scope: !17645)
!17661 = !DILocation(line: 1910, column: 11, scope: !17662)
!17662 = distinct !DILexicalBlock(scope: !17659, file: !2548, line: 1909, column: 20)
!17663 = !DILocation(line: 1910, column: 26, scope: !17662)
!17664 = !DILocation(line: 1910, column: 9, scope: !17662)
!17665 = !DILocation(line: 1911, column: 2, scope: !17662)
!17666 = !DILocation(line: 1912, column: 2, scope: !17645)
!17667 = distinct !DISubprogram(name: "z_data_copy", scope: !17668, file: !17668, line: 22, type: !337, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !256)
!17668 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17669 = !DILocation(line: 24, column: 2, scope: !17667)
!17670 = !DILocation(line: 27, column: 2, scope: !17667)
!17671 = !DILocation(line: 31, column: 2, scope: !17667)
!17672 = !DILocation(line: 71, column: 1, scope: !17667)
!17673 = distinct !DISubprogram(name: "z_add_timeout", scope: !2585, file: !2585, line: 88, type: !17674, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17680)
!17674 = !DISubroutineType(types: !17675)
!17675 = !{null, !2558, !2577, !17676}
!17676 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !17677)
!17677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !17678)
!17678 = !{!17679}
!17679 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17677, file: !103, line: 66, baseType: !102, size: 64)
!17680 = !{!17681, !17682, !17683, !17684, !17690, !17691, !17694, !17697}
!17681 = !DILocalVariable(name: "to", arg: 1, scope: !17673, file: !2585, line: 88, type: !2558)
!17682 = !DILocalVariable(name: "fn", arg: 2, scope: !17673, file: !2585, line: 88, type: !2577)
!17683 = !DILocalVariable(name: "timeout", arg: 3, scope: !17673, file: !2585, line: 89, type: !17676)
!17684 = !DILocalVariable(name: "__i", scope: !17685, file: !2585, line: 102, type: !17686)
!17685 = distinct !DILexicalBlock(scope: !17673, file: !2585, line: 102, column: 2)
!17686 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !17687)
!17687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !17688)
!17688 = !{!17689}
!17689 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17687, file: !255, line: 33, baseType: !107, size: 32)
!17690 = !DILocalVariable(name: "__key", scope: !17685, file: !2585, line: 102, type: !17686)
!17691 = !DILocalVariable(name: "t", scope: !17692, file: !2585, line: 103, type: !2558)
!17692 = distinct !DILexicalBlock(scope: !17693, file: !2585, line: 102, column: 24)
!17693 = distinct !DILexicalBlock(scope: !17685, file: !2585, line: 102, column: 2)
!17694 = !DILocalVariable(name: "ticks", scope: !17695, file: !2585, line: 107, type: !102)
!17695 = distinct !DILexicalBlock(scope: !17696, file: !2585, line: 106, column: 39)
!17696 = distinct !DILexicalBlock(scope: !17692, file: !2585, line: 105, column: 7)
!17697 = !DILocalVariable(name: "next_time", scope: !17698, file: !2585, line: 137, type: !334)
!17698 = distinct !DILexicalBlock(scope: !17699, file: !2585, line: 127, column: 22)
!17699 = distinct !DILexicalBlock(scope: !17692, file: !2585, line: 127, column: 7)
!17700 = !DILocation(line: 0, scope: !17673)
!17701 = !DILocation(line: 91, column: 6, scope: !17702)
!17702 = distinct !DILexicalBlock(scope: !17673, file: !2585, line: 91, column: 6)
!17703 = !DILocation(line: 91, column: 6, scope: !17673)
!17704 = !DILocation(line: 100, column: 6, scope: !17673)
!17705 = !DILocation(line: 100, column: 9, scope: !17673)
!17706 = !DILocation(line: 0, scope: !17685)
!17707 = !DILocalVariable(name: "l", arg: 1, scope: !17708, file: !255, line: 136, type: !17711)
!17708 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !17709, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17712)
!17709 = !DISubroutineType(types: !17710)
!17710 = !{!17686, !17711}
!17711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 32)
!17712 = !{!17707, !17713}
!17713 = !DILocalVariable(name: "k", scope: !17708, file: !255, line: 139, type: !17686)
!17714 = !DILocation(line: 0, scope: !17708, inlinedAt: !17715)
!17715 = distinct !DILocation(line: 102, column: 2, scope: !17685)
!17716 = !DILocation(line: 55, column: 2, scope: !17717, inlinedAt: !17721)
!17717 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7053, file: !7053, line: 42, type: !7054, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17718)
!17718 = !{!17719, !17720}
!17719 = !DILocalVariable(name: "key", scope: !17717, file: !7053, line: 44, type: !32)
!17720 = !DILocalVariable(name: "tmp", scope: !17717, file: !7053, line: 53, type: !32)
!17721 = distinct !DILocation(line: 145, column: 10, scope: !17708, inlinedAt: !17715)
!17722 = !{i64 2229162}
!17723 = !DILocation(line: 0, scope: !17717, inlinedAt: !17721)
!17724 = !DILocation(line: 106, column: 33, scope: !17696)
!17725 = !DILocation(line: 105, column: 7, scope: !17692)
!17726 = !DILocation(line: 107, column: 50, scope: !17695)
!17727 = !DILocation(line: 107, column: 48, scope: !17695)
!17728 = !DILocation(line: 0, scope: !17695)
!17729 = !DILocation(line: 109, column: 17, scope: !17695)
!17730 = !DILocation(line: 110, column: 3, scope: !17695)
!17731 = !DILocation(line: 111, column: 31, scope: !17732)
!17732 = distinct !DILexicalBlock(scope: !17696, file: !2585, line: 110, column: 10)
!17733 = !DILocation(line: 111, column: 37, scope: !17732)
!17734 = !DILocation(line: 111, column: 35, scope: !17732)
!17735 = !DILocation(line: 0, scope: !17696)
!17736 = !DILocation(line: 109, column: 8, scope: !17695)
!17737 = !DILocation(line: 109, column: 15, scope: !17695)
!17738 = !DILocation(line: 114, column: 12, scope: !17739)
!17739 = distinct !DILexicalBlock(scope: !17692, file: !2585, line: 114, column: 3)
!17740 = !DILocation(line: 0, scope: !17692)
!17741 = !DILocation(line: 114, column: 3, scope: !17739)
!17742 = !DILocation(line: 115, column: 24, scope: !17743)
!17743 = distinct !DILexicalBlock(scope: !17744, file: !2585, line: 115, column: 8)
!17744 = distinct !DILexicalBlock(scope: !17745, file: !2585, line: 114, column: 45)
!17745 = distinct !DILexicalBlock(scope: !17739, file: !2585, line: 114, column: 3)
!17746 = !DILocation(line: 115, column: 11, scope: !17743)
!17747 = !DILocation(line: 115, column: 18, scope: !17743)
!17748 = !DILocation(line: 115, column: 8, scope: !17744)
!17749 = !DILocation(line: 116, column: 15, scope: !17750)
!17750 = distinct !DILexicalBlock(scope: !17743, file: !2585, line: 115, column: 32)
!17751 = !DILocation(line: 117, column: 26, scope: !17750)
!17752 = !DILocation(line: 117, column: 37, scope: !17750)
!17753 = !DILocation(line: 117, column: 5, scope: !17750)
!17754 = !DILocation(line: 123, column: 7, scope: !17692)
!17755 = !DILocation(line: 120, column: 15, scope: !17744)
!17756 = !DILocation(line: 114, column: 36, scope: !17745)
!17757 = distinct !{!17757, !17741, !17758}
!17758 = !DILocation(line: 121, column: 3, scope: !17739)
!17759 = !DILocation(line: 124, column: 41, scope: !17760)
!17760 = distinct !DILexicalBlock(scope: !17761, file: !2585, line: 123, column: 18)
!17761 = distinct !DILexicalBlock(scope: !17692, file: !2585, line: 123, column: 7)
!17762 = !DILocation(line: 124, column: 4, scope: !17760)
!17763 = !DILocation(line: 125, column: 3, scope: !17760)
!17764 = !DILocation(line: 127, column: 13, scope: !17699)
!17765 = !DILocation(line: 127, column: 10, scope: !17699)
!17766 = !DILocation(line: 127, column: 7, scope: !17692)
!17767 = !DILocation(line: 137, column: 24, scope: !17698)
!17768 = !DILocation(line: 0, scope: !17698)
!17769 = !DILocation(line: 139, column: 18, scope: !17770)
!17770 = distinct !DILexicalBlock(scope: !17698, file: !2585, line: 139, column: 8)
!17771 = !DILocation(line: 139, column: 23, scope: !17770)
!17772 = !DILocation(line: 141, column: 5, scope: !17773)
!17773 = distinct !DILexicalBlock(scope: !17770, file: !2585, line: 140, column: 48)
!17774 = !DILocation(line: 142, column: 4, scope: !17773)
!17775 = !DILocalVariable(name: "key", arg: 2, scope: !17776, file: !255, line: 190, type: !17686)
!17776 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !17777, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17779)
!17777 = !DISubroutineType(types: !17778)
!17778 = !{null, !17711, !17686}
!17779 = !{!17780, !17775}
!17780 = !DILocalVariable(name: "l", arg: 1, scope: !17776, file: !255, line: 189, type: !17711)
!17781 = !DILocation(line: 0, scope: !17776, inlinedAt: !17782)
!17782 = distinct !DILocation(line: 102, column: 2, scope: !17693)
!17783 = !DILocalVariable(name: "key", arg: 1, scope: !17784, file: !7053, line: 84, type: !32)
!17784 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7053, file: !7053, line: 84, type: !7064, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17785)
!17785 = !{!17783}
!17786 = !DILocation(line: 0, scope: !17784, inlinedAt: !17787)
!17787 = distinct !DILocation(line: 215, column: 2, scope: !17776, inlinedAt: !17782)
!17788 = !DILocation(line: 95, column: 2, scope: !17784, inlinedAt: !17787)
!17789 = !{i64 2229979}
!17790 = !DILocation(line: 148, column: 1, scope: !17673)
!17791 = distinct !DISubprogram(name: "elapsed", scope: !2585, file: !2585, line: 62, type: !17792, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !256)
!17792 = !DISubroutineType(types: !17793)
!17793 = !{!334}
!17794 = !DILocation(line: 64, column: 9, scope: !17791)
!17795 = !DILocation(line: 64, column: 28, scope: !17791)
!17796 = !DILocation(line: 64, column: 35, scope: !17791)
!17797 = !DILocation(line: 64, column: 2, scope: !17791)
!17798 = distinct !DISubprogram(name: "first", scope: !2585, file: !2585, line: 39, type: !17799, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17801)
!17799 = !DISubroutineType(types: !17800)
!17800 = !{!2558}
!17801 = !{!17802}
!17802 = !DILocalVariable(name: "t", scope: !17798, file: !2585, line: 41, type: !17803)
!17803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!17804 = !DILocation(line: 41, column: 19, scope: !17798)
!17805 = !DILocation(line: 0, scope: !17798)
!17806 = !DILocation(line: 43, column: 9, scope: !17798)
!17807 = !DILocation(line: 43, column: 2, scope: !17798)
!17808 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !151, file: !151, line: 443, type: !17809, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17811)
!17809 = !DISubroutineType(types: !17810)
!17810 = !{null, !17803, !17803}
!17811 = !{!17812, !17813, !17814}
!17812 = !DILocalVariable(name: "successor", arg: 1, scope: !17808, file: !151, line: 443, type: !17803)
!17813 = !DILocalVariable(name: "node", arg: 2, scope: !17808, file: !151, line: 443, type: !17803)
!17814 = !DILocalVariable(name: "prev", scope: !17808, file: !151, line: 445, type: !17815)
!17815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17803)
!17816 = !DILocation(line: 0, scope: !17808)
!17817 = !DILocation(line: 445, column: 39, scope: !17808)
!17818 = !DILocation(line: 447, column: 8, scope: !17808)
!17819 = !DILocation(line: 447, column: 13, scope: !17808)
!17820 = !DILocation(line: 448, column: 8, scope: !17808)
!17821 = !DILocation(line: 448, column: 13, scope: !17808)
!17822 = !DILocation(line: 449, column: 8, scope: !17808)
!17823 = !DILocation(line: 449, column: 13, scope: !17808)
!17824 = !DILocation(line: 450, column: 18, scope: !17808)
!17825 = !DILocation(line: 451, column: 1, scope: !17808)
!17826 = distinct !DISubprogram(name: "next", scope: !2585, file: !2585, line: 46, type: !17827, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17829)
!17827 = !DISubroutineType(types: !17828)
!17828 = !{!2558, !2558}
!17829 = !{!17830, !17831}
!17830 = !DILocalVariable(name: "t", arg: 1, scope: !17826, file: !2585, line: 46, type: !2558)
!17831 = !DILocalVariable(name: "n", scope: !17826, file: !2585, line: 48, type: !17803)
!17832 = !DILocation(line: 0, scope: !17826)
!17833 = !DILocation(line: 48, column: 58, scope: !17826)
!17834 = !DILocation(line: 48, column: 19, scope: !17826)
!17835 = !DILocation(line: 50, column: 9, scope: !17826)
!17836 = !DILocation(line: 50, column: 2, scope: !17826)
!17837 = distinct !DISubprogram(name: "sys_dlist_append", scope: !151, file: !151, line: 404, type: !17838, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17841)
!17838 = !DISubroutineType(types: !17839)
!17839 = !{null, !17840, !17803}
!17840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!17841 = !{!17842, !17843, !17844}
!17842 = !DILocalVariable(name: "list", arg: 1, scope: !17837, file: !151, line: 404, type: !17840)
!17843 = !DILocalVariable(name: "node", arg: 2, scope: !17837, file: !151, line: 404, type: !17803)
!17844 = !DILocalVariable(name: "tail", scope: !17837, file: !151, line: 406, type: !17815)
!17845 = !DILocation(line: 0, scope: !17837)
!17846 = !DILocation(line: 406, column: 34, scope: !17837)
!17847 = !DILocation(line: 408, column: 8, scope: !17837)
!17848 = !DILocation(line: 408, column: 13, scope: !17837)
!17849 = !DILocation(line: 409, column: 8, scope: !17837)
!17850 = !DILocation(line: 409, column: 13, scope: !17837)
!17851 = !DILocation(line: 411, column: 8, scope: !17837)
!17852 = !DILocation(line: 411, column: 13, scope: !17837)
!17853 = !DILocation(line: 412, column: 13, scope: !17837)
!17854 = !DILocation(line: 413, column: 1, scope: !17837)
!17855 = distinct !DISubprogram(name: "next_timeout", scope: !2585, file: !2585, line: 67, type: !17792, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17856)
!17856 = !{!17857, !17858, !17859}
!17857 = !DILocalVariable(name: "to", scope: !17855, file: !2585, line: 69, type: !2558)
!17858 = !DILocalVariable(name: "ticks_elapsed", scope: !17855, file: !2585, line: 70, type: !334)
!17859 = !DILocalVariable(name: "ret", scope: !17855, file: !2585, line: 71, type: !334)
!17860 = !DILocation(line: 69, column: 24, scope: !17855)
!17861 = !DILocation(line: 0, scope: !17855)
!17862 = !DILocation(line: 70, column: 26, scope: !17855)
!17863 = !DILocation(line: 73, column: 10, scope: !17864)
!17864 = distinct !DILexicalBlock(scope: !17855, file: !2585, line: 73, column: 6)
!17865 = !DILocation(line: 73, column: 19, scope: !17864)
!17866 = !DILocation(line: 74, column: 21, scope: !17864)
!17867 = !DILocation(line: 74, column: 30, scope: !17864)
!17868 = !DILocation(line: 74, column: 28, scope: !17864)
!17869 = !DILocation(line: 74, column: 45, scope: !17864)
!17870 = !DILocation(line: 73, column: 6, scope: !17855)
!17871 = !DILocation(line: 77, column: 9, scope: !17872)
!17872 = distinct !DILexicalBlock(scope: !17864, file: !2585, line: 76, column: 9)
!17873 = !DILocation(line: 0, scope: !17864)
!17874 = !DILocation(line: 81, column: 20, scope: !17875)
!17875 = distinct !DILexicalBlock(scope: !17855, file: !2585, line: 81, column: 6)
!17876 = !DILocation(line: 81, column: 6, scope: !17875)
!17877 = !DILocation(line: 81, column: 32, scope: !17875)
!17878 = !DILocation(line: 85, column: 2, scope: !17855)
!17879 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !151, file: !151, line: 341, type: !17880, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17882)
!17880 = !DISubroutineType(types: !17881)
!17881 = !{!17803, !17840, !17803}
!17882 = !{!17883, !17884}
!17883 = !DILocalVariable(name: "list", arg: 1, scope: !17879, file: !151, line: 341, type: !17840)
!17884 = !DILocalVariable(name: "node", arg: 2, scope: !17879, file: !151, line: 342, type: !17803)
!17885 = !DILocation(line: 0, scope: !17879)
!17886 = !DILocation(line: 344, column: 15, scope: !17879)
!17887 = !DILocation(line: 344, column: 9, scope: !17879)
!17888 = !DILocation(line: 344, column: 26, scope: !17879)
!17889 = !DILocation(line: 344, column: 2, scope: !17879)
!17890 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !151, file: !151, line: 325, type: !17880, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17891)
!17891 = !{!17892, !17893}
!17892 = !DILocalVariable(name: "list", arg: 1, scope: !17890, file: !151, line: 325, type: !17840)
!17893 = !DILocalVariable(name: "node", arg: 2, scope: !17890, file: !151, line: 326, type: !17803)
!17894 = !DILocation(line: 0, scope: !17890)
!17895 = !DILocation(line: 328, column: 24, scope: !17890)
!17896 = !DILocation(line: 328, column: 15, scope: !17890)
!17897 = !DILocation(line: 328, column: 9, scope: !17890)
!17898 = !DILocation(line: 328, column: 45, scope: !17890)
!17899 = !DILocation(line: 328, column: 2, scope: !17890)
!17900 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !151, file: !151, line: 294, type: !17901, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17903)
!17901 = !DISubroutineType(types: !17902)
!17902 = !{!17803, !17840}
!17903 = !{!17904}
!17904 = !DILocalVariable(name: "list", arg: 1, scope: !17900, file: !151, line: 294, type: !17840)
!17905 = !DILocation(line: 0, scope: !17900)
!17906 = !DILocation(line: 296, column: 9, scope: !17900)
!17907 = !DILocation(line: 296, column: 2, scope: !17900)
!17908 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !151, file: !151, line: 266, type: !17909, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17911)
!17909 = !DISubroutineType(types: !17910)
!17910 = !{!136, !17840}
!17911 = !{!17912}
!17912 = !DILocalVariable(name: "list", arg: 1, scope: !17908, file: !151, line: 266, type: !17840)
!17913 = !DILocation(line: 0, scope: !17908)
!17914 = !DILocation(line: 268, column: 15, scope: !17908)
!17915 = !DILocation(line: 268, column: 20, scope: !17908)
!17916 = !DILocation(line: 268, column: 2, scope: !17908)
!17917 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2585, file: !2585, line: 150, type: !17918, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17920)
!17918 = !DISubroutineType(types: !17919)
!17919 = !{!107, !2558}
!17920 = !{!17921, !17922, !17923, !17925}
!17921 = !DILocalVariable(name: "to", arg: 1, scope: !17917, file: !2585, line: 150, type: !2558)
!17922 = !DILocalVariable(name: "ret", scope: !17917, file: !2585, line: 152, type: !107)
!17923 = !DILocalVariable(name: "__i", scope: !17924, file: !2585, line: 154, type: !17686)
!17924 = distinct !DILexicalBlock(scope: !17917, file: !2585, line: 154, column: 2)
!17925 = !DILocalVariable(name: "__key", scope: !17924, file: !2585, line: 154, type: !17686)
!17926 = !DILocation(line: 0, scope: !17917)
!17927 = !DILocation(line: 0, scope: !17924)
!17928 = !DILocation(line: 0, scope: !17708, inlinedAt: !17929)
!17929 = distinct !DILocation(line: 154, column: 2, scope: !17924)
!17930 = !DILocation(line: 55, column: 2, scope: !17717, inlinedAt: !17931)
!17931 = distinct !DILocation(line: 145, column: 10, scope: !17708, inlinedAt: !17929)
!17932 = !DILocation(line: 0, scope: !17717, inlinedAt: !17931)
!17933 = !DILocation(line: 155, column: 7, scope: !17934)
!17934 = distinct !DILexicalBlock(scope: !17935, file: !2585, line: 155, column: 7)
!17935 = distinct !DILexicalBlock(scope: !17936, file: !2585, line: 154, column: 24)
!17936 = distinct !DILexicalBlock(scope: !17924, file: !2585, line: 154, column: 2)
!17937 = !DILocation(line: 155, column: 7, scope: !17935)
!17938 = !DILocation(line: 156, column: 4, scope: !17939)
!17939 = distinct !DILexicalBlock(scope: !17934, file: !2585, line: 155, column: 39)
!17940 = !DILocation(line: 158, column: 3, scope: !17939)
!17941 = !DILocation(line: 0, scope: !17776, inlinedAt: !17942)
!17942 = distinct !DILocation(line: 154, column: 2, scope: !17936)
!17943 = !DILocation(line: 0, scope: !17784, inlinedAt: !17944)
!17944 = distinct !DILocation(line: 215, column: 2, scope: !17776, inlinedAt: !17942)
!17945 = !DILocation(line: 95, column: 2, scope: !17784, inlinedAt: !17944)
!17946 = !DILocation(line: 161, column: 2, scope: !17917)
!17947 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !151, file: !151, line: 225, type: !17948, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17952)
!17948 = !DISubroutineType(types: !17949)
!17949 = !{!136, !17950}
!17950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17951, size: 32)
!17951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2562)
!17952 = !{!17953}
!17953 = !DILocalVariable(name: "node", arg: 1, scope: !17947, file: !151, line: 225, type: !17950)
!17954 = !DILocation(line: 0, scope: !17947)
!17955 = !DILocation(line: 227, column: 15, scope: !17947)
!17956 = !DILocation(line: 227, column: 20, scope: !17947)
!17957 = !DILocation(line: 227, column: 2, scope: !17947)
!17958 = distinct !DISubprogram(name: "remove_timeout", scope: !2585, file: !2585, line: 53, type: !2579, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17959)
!17959 = !{!17960}
!17960 = !DILocalVariable(name: "t", arg: 1, scope: !17958, file: !2585, line: 53, type: !2558)
!17961 = !DILocation(line: 0, scope: !17958)
!17962 = !DILocation(line: 55, column: 6, scope: !17963)
!17963 = distinct !DILexicalBlock(scope: !17958, file: !2585, line: 55, column: 6)
!17964 = !DILocation(line: 55, column: 14, scope: !17963)
!17965 = !DILocation(line: 55, column: 6, scope: !17958)
!17966 = !DILocation(line: 56, column: 25, scope: !17967)
!17967 = distinct !DILexicalBlock(scope: !17963, file: !2585, line: 55, column: 23)
!17968 = !DILocation(line: 56, column: 12, scope: !17967)
!17969 = !DILocation(line: 56, column: 19, scope: !17967)
!17970 = !DILocation(line: 57, column: 2, scope: !17967)
!17971 = !DILocation(line: 59, column: 23, scope: !17958)
!17972 = !DILocation(line: 59, column: 2, scope: !17958)
!17973 = !DILocation(line: 60, column: 1, scope: !17958)
!17974 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !151, file: !151, line: 496, type: !17975, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17977)
!17975 = !DISubroutineType(types: !17976)
!17976 = !{null, !17803}
!17977 = !{!17978, !17979, !17980}
!17978 = !DILocalVariable(name: "node", arg: 1, scope: !17974, file: !151, line: 496, type: !17803)
!17979 = !DILocalVariable(name: "prev", scope: !17974, file: !151, line: 498, type: !17815)
!17980 = !DILocalVariable(name: "next", scope: !17974, file: !151, line: 499, type: !17815)
!17981 = !DILocation(line: 0, scope: !17974)
!17982 = !DILocation(line: 498, column: 34, scope: !17974)
!17983 = !DILocation(line: 499, column: 34, scope: !17974)
!17984 = !DILocation(line: 501, column: 8, scope: !17974)
!17985 = !DILocation(line: 501, column: 13, scope: !17974)
!17986 = !DILocation(line: 502, column: 8, scope: !17974)
!17987 = !DILocation(line: 502, column: 13, scope: !17974)
!17988 = !DILocation(line: 503, column: 2, scope: !17974)
!17989 = !DILocation(line: 504, column: 1, scope: !17974)
!17990 = distinct !DISubprogram(name: "sys_dnode_init", scope: !151, file: !151, line: 211, type: !17975, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !17991)
!17991 = !{!17992}
!17992 = !DILocalVariable(name: "node", arg: 1, scope: !17990, file: !151, line: 211, type: !17803)
!17993 = !DILocation(line: 0, scope: !17990)
!17994 = !DILocation(line: 213, column: 8, scope: !17990)
!17995 = !DILocation(line: 213, column: 13, scope: !17990)
!17996 = !DILocation(line: 214, column: 8, scope: !17990)
!17997 = !DILocation(line: 214, column: 13, scope: !17990)
!17998 = !DILocation(line: 215, column: 1, scope: !17990)
!17999 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2585, file: !2585, line: 183, type: !18000, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !18004)
!18000 = !DISubroutineType(types: !18001)
!18001 = !{!102, !18002}
!18002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18003, size: 32)
!18003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2559)
!18004 = !{!18005, !18006, !18007, !18009}
!18005 = !DILocalVariable(name: "timeout", arg: 1, scope: !17999, file: !2585, line: 183, type: !18002)
!18006 = !DILocalVariable(name: "ticks", scope: !17999, file: !2585, line: 185, type: !102)
!18007 = !DILocalVariable(name: "__i", scope: !18008, file: !2585, line: 187, type: !17686)
!18008 = distinct !DILexicalBlock(scope: !17999, file: !2585, line: 187, column: 2)
!18009 = !DILocalVariable(name: "__key", scope: !18008, file: !2585, line: 187, type: !17686)
!18010 = !DILocation(line: 0, scope: !17999)
!18011 = !DILocation(line: 0, scope: !18008)
!18012 = !DILocation(line: 0, scope: !17708, inlinedAt: !18013)
!18013 = distinct !DILocation(line: 187, column: 2, scope: !18008)
!18014 = !DILocation(line: 55, column: 2, scope: !17717, inlinedAt: !18015)
!18015 = distinct !DILocation(line: 145, column: 10, scope: !17708, inlinedAt: !18013)
!18016 = !DILocation(line: 0, scope: !17717, inlinedAt: !18015)
!18017 = !DILocation(line: 188, column: 11, scope: !18018)
!18018 = distinct !DILexicalBlock(scope: !18019, file: !2585, line: 187, column: 24)
!18019 = distinct !DILexicalBlock(scope: !18008, file: !2585, line: 187, column: 2)
!18020 = !DILocation(line: 0, scope: !17776, inlinedAt: !18021)
!18021 = distinct !DILocation(line: 187, column: 2, scope: !18019)
!18022 = !DILocation(line: 0, scope: !17784, inlinedAt: !18023)
!18023 = distinct !DILocation(line: 215, column: 2, scope: !17776, inlinedAt: !18021)
!18024 = !DILocation(line: 95, column: 2, scope: !17784, inlinedAt: !18023)
!18025 = !DILocation(line: 191, column: 2, scope: !17999)
!18026 = distinct !DISubprogram(name: "timeout_rem", scope: !2585, file: !2585, line: 165, type: !18000, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !18027)
!18027 = !{!18028, !18029, !18030}
!18028 = !DILocalVariable(name: "timeout", arg: 1, scope: !18026, file: !2585, line: 165, type: !18002)
!18029 = !DILocalVariable(name: "ticks", scope: !18026, file: !2585, line: 167, type: !102)
!18030 = !DILocalVariable(name: "t", scope: !18031, file: !2585, line: 173, type: !2558)
!18031 = distinct !DILexicalBlock(scope: !18026, file: !2585, line: 173, column: 2)
!18032 = !DILocation(line: 0, scope: !18026)
!18033 = !DILocation(line: 169, column: 6, scope: !18034)
!18034 = distinct !DILexicalBlock(scope: !18026, file: !2585, line: 169, column: 6)
!18035 = !DILocation(line: 169, column: 6, scope: !18026)
!18036 = !DILocation(line: 173, column: 28, scope: !18031)
!18037 = !DILocation(line: 0, scope: !18031)
!18038 = !DILocation(line: 173, column: 39, scope: !18039)
!18039 = distinct !DILexicalBlock(scope: !18031, file: !2585, line: 173, column: 2)
!18040 = !DILocation(line: 173, column: 2, scope: !18031)
!18041 = !DILocation(line: 174, column: 15, scope: !18042)
!18042 = distinct !DILexicalBlock(scope: !18039, file: !2585, line: 173, column: 61)
!18043 = !DILocation(line: 174, column: 9, scope: !18042)
!18044 = !DILocation(line: 175, column: 15, scope: !18045)
!18045 = distinct !DILexicalBlock(scope: !18042, file: !2585, line: 175, column: 7)
!18046 = !DILocation(line: 175, column: 7, scope: !18042)
!18047 = !DILocation(line: 173, column: 52, scope: !18039)
!18048 = distinct !{!18048, !18040, !18049}
!18049 = !DILocation(line: 178, column: 2, scope: !18031)
!18050 = !DILocation(line: 180, column: 17, scope: !18026)
!18051 = !DILocation(line: 180, column: 15, scope: !18026)
!18052 = !DILocation(line: 180, column: 2, scope: !18026)
!18053 = !DILocation(line: 181, column: 1, scope: !18026)
!18054 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14619, file: !14619, line: 35, type: !18055, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !18057)
!18055 = !DISubroutineType(types: !18056)
!18056 = !{!136, !18002}
!18057 = !{!18058}
!18058 = !DILocalVariable(name: "to", arg: 1, scope: !18054, file: !14619, line: 35, type: !18002)
!18059 = !DILocation(line: 0, scope: !18054)
!18060 = !DILocation(line: 37, column: 35, scope: !18054)
!18061 = !DILocation(line: 37, column: 10, scope: !18054)
!18062 = !DILocation(line: 37, column: 9, scope: !18054)
!18063 = !DILocation(line: 37, column: 2, scope: !18054)
!18064 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2585, file: !2585, line: 194, type: !18000, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !18065)
!18065 = !{!18066, !18067, !18068, !18070}
!18066 = !DILocalVariable(name: "timeout", arg: 1, scope: !18064, file: !2585, line: 194, type: !18002)
!18067 = !DILocalVariable(name: "ticks", scope: !18064, file: !2585, line: 196, type: !102)
!18068 = !DILocalVariable(name: "__i", scope: !18069, file: !2585, line: 198, type: !17686)
!18069 = distinct !DILexicalBlock(scope: !18064, file: !2585, line: 198, column: 2)
!18070 = !DILocalVariable(name: "__key", scope: !18069, file: !2585, line: 198, type: !17686)
!18071 = !DILocation(line: 0, scope: !18064)
!18072 = !DILocation(line: 0, scope: !18069)
!18073 = !DILocation(line: 0, scope: !17708, inlinedAt: !18074)
!18074 = distinct !DILocation(line: 198, column: 2, scope: !18069)
!18075 = !DILocation(line: 55, column: 2, scope: !17717, inlinedAt: !18076)
!18076 = distinct !DILocation(line: 145, column: 10, scope: !17708, inlinedAt: !18074)
!18077 = !DILocation(line: 0, scope: !17717, inlinedAt: !18076)
!18078 = !DILocation(line: 199, column: 11, scope: !18079)
!18079 = distinct !DILexicalBlock(scope: !18080, file: !2585, line: 198, column: 24)
!18080 = distinct !DILexicalBlock(scope: !18069, file: !2585, line: 198, column: 2)
!18081 = !DILocation(line: 199, column: 23, scope: !18079)
!18082 = !DILocation(line: 0, scope: !17776, inlinedAt: !18083)
!18083 = distinct !DILocation(line: 198, column: 2, scope: !18080)
!18084 = !DILocation(line: 0, scope: !17784, inlinedAt: !18085)
!18085 = distinct !DILocation(line: 215, column: 2, scope: !17776, inlinedAt: !18083)
!18086 = !DILocation(line: 95, column: 2, scope: !17784, inlinedAt: !18085)
!18087 = !DILocation(line: 199, column: 21, scope: !18079)
!18088 = !DILocation(line: 202, column: 2, scope: !18064)
!18089 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2585, file: !2585, line: 205, type: !17792, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !18090)
!18090 = !{!18091, !18092, !18094}
!18091 = !DILocalVariable(name: "ret", scope: !18089, file: !2585, line: 207, type: !334)
!18092 = !DILocalVariable(name: "__i", scope: !18093, file: !2585, line: 209, type: !17686)
!18093 = distinct !DILexicalBlock(scope: !18089, file: !2585, line: 209, column: 2)
!18094 = !DILocalVariable(name: "__key", scope: !18093, file: !2585, line: 209, type: !17686)
!18095 = !DILocation(line: 0, scope: !18089)
!18096 = !DILocation(line: 0, scope: !18093)
!18097 = !DILocation(line: 0, scope: !17708, inlinedAt: !18098)
!18098 = distinct !DILocation(line: 209, column: 2, scope: !18093)
!18099 = !DILocation(line: 55, column: 2, scope: !17717, inlinedAt: !18100)
!18100 = distinct !DILocation(line: 145, column: 10, scope: !17708, inlinedAt: !18098)
!18101 = !DILocation(line: 0, scope: !17717, inlinedAt: !18100)
!18102 = !DILocation(line: 210, column: 9, scope: !18103)
!18103 = distinct !DILexicalBlock(scope: !18104, file: !2585, line: 209, column: 24)
!18104 = distinct !DILexicalBlock(scope: !18093, file: !2585, line: 209, column: 2)
!18105 = !DILocation(line: 0, scope: !17776, inlinedAt: !18106)
!18106 = distinct !DILocation(line: 209, column: 2, scope: !18104)
!18107 = !DILocation(line: 0, scope: !17784, inlinedAt: !18108)
!18108 = distinct !DILocation(line: 215, column: 2, scope: !17776, inlinedAt: !18106)
!18109 = !DILocation(line: 95, column: 2, scope: !17784, inlinedAt: !18108)
!18110 = !DILocation(line: 212, column: 2, scope: !18089)
!18111 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2585, file: !2585, line: 215, type: !12175, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !18112)
!18112 = !{!18113, !18114, !18115, !18117, !18118, !18121, !18122}
!18113 = !DILocalVariable(name: "ticks", arg: 1, scope: !18111, file: !2585, line: 215, type: !334)
!18114 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18111, file: !2585, line: 215, type: !136)
!18115 = !DILocalVariable(name: "__i", scope: !18116, file: !2585, line: 217, type: !17686)
!18116 = distinct !DILexicalBlock(scope: !18111, file: !2585, line: 217, column: 2)
!18117 = !DILocalVariable(name: "__key", scope: !18116, file: !2585, line: 217, type: !17686)
!18118 = !DILocalVariable(name: "next_to", scope: !18119, file: !2585, line: 218, type: !107)
!18119 = distinct !DILexicalBlock(scope: !18120, file: !2585, line: 217, column: 24)
!18120 = distinct !DILexicalBlock(scope: !18116, file: !2585, line: 217, column: 2)
!18121 = !DILocalVariable(name: "sooner", scope: !18119, file: !2585, line: 219, type: !136)
!18122 = !DILocalVariable(name: "imminent", scope: !18119, file: !2585, line: 221, type: !136)
!18123 = !DILocation(line: 0, scope: !18111)
!18124 = !DILocation(line: 0, scope: !18116)
!18125 = !DILocation(line: 0, scope: !17708, inlinedAt: !18126)
!18126 = distinct !DILocation(line: 217, column: 2, scope: !18116)
!18127 = !DILocation(line: 55, column: 2, scope: !17717, inlinedAt: !18128)
!18128 = distinct !DILocation(line: 145, column: 10, scope: !17708, inlinedAt: !18126)
!18129 = !DILocation(line: 0, scope: !17717, inlinedAt: !18128)
!18130 = !DILocation(line: 218, column: 17, scope: !18119)
!18131 = !DILocation(line: 0, scope: !18119)
!18132 = !DILocation(line: 221, column: 27, scope: !18119)
!18133 = !DILocation(line: 233, column: 17, scope: !18134)
!18134 = distinct !DILexicalBlock(scope: !18119, file: !2585, line: 233, column: 7)
!18135 = !DILocation(line: 234, column: 26, scope: !18136)
!18136 = distinct !DILexicalBlock(scope: !18134, file: !2585, line: 233, column: 56)
!18137 = !DILocation(line: 234, column: 4, scope: !18136)
!18138 = !DILocation(line: 235, column: 3, scope: !18136)
!18139 = !DILocation(line: 0, scope: !17776, inlinedAt: !18140)
!18140 = distinct !DILocation(line: 217, column: 2, scope: !18120)
!18141 = !DILocation(line: 0, scope: !17784, inlinedAt: !18142)
!18142 = distinct !DILocation(line: 215, column: 2, scope: !17776, inlinedAt: !18140)
!18143 = !DILocation(line: 95, column: 2, scope: !17784, inlinedAt: !18142)
!18144 = !DILocation(line: 237, column: 1, scope: !18111)
!18145 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2585, file: !2585, line: 239, type: !18146, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !18148)
!18146 = !DISubroutineType(types: !18147)
!18147 = !{null, !334}
!18148 = !{!18149, !18150, !18151, !18153}
!18149 = !DILocalVariable(name: "ticks", arg: 1, scope: !18145, file: !2585, line: 239, type: !334)
!18150 = !DILocalVariable(name: "key", scope: !18145, file: !2585, line: 245, type: !17686)
!18151 = !DILocalVariable(name: "t", scope: !18152, file: !2585, line: 262, type: !2558)
!18152 = distinct !DILexicalBlock(scope: !18145, file: !2585, line: 261, column: 67)
!18153 = !DILocalVariable(name: "dt", scope: !18152, file: !2585, line: 263, type: !107)
!18154 = !DILocation(line: 0, scope: !18145)
!18155 = !DILocation(line: 242, column: 2, scope: !18145)
!18156 = !DILocation(line: 0, scope: !17708, inlinedAt: !18157)
!18157 = distinct !DILocation(line: 245, column: 25, scope: !18145)
!18158 = !DILocation(line: 55, column: 2, scope: !17717, inlinedAt: !18159)
!18159 = distinct !DILocation(line: 145, column: 10, scope: !17708, inlinedAt: !18157)
!18160 = !DILocation(line: 0, scope: !17717, inlinedAt: !18159)
!18161 = !DILocation(line: 261, column: 9, scope: !18145)
!18162 = !DILocation(line: 261, column: 17, scope: !18145)
!18163 = !DILocation(line: 261, column: 25, scope: !18145)
!18164 = !DILocation(line: 261, column: 37, scope: !18145)
!18165 = !DILocation(line: 261, column: 47, scope: !18145)
!18166 = !DILocation(line: 261, column: 44, scope: !18145)
!18167 = !DILocation(line: 261, column: 2, scope: !18145)
!18168 = !DILocation(line: 0, scope: !18152)
!18169 = !DILocation(line: 263, column: 12, scope: !18152)
!18170 = !DILocation(line: 265, column: 16, scope: !18152)
!18171 = !DILocation(line: 265, column: 13, scope: !18152)
!18172 = !DILocation(line: 266, column: 13, scope: !18152)
!18173 = !DILocation(line: 267, column: 3, scope: !18152)
!18174 = !DILocation(line: 0, scope: !17776, inlinedAt: !18175)
!18175 = distinct !DILocation(line: 269, column: 3, scope: !18152)
!18176 = !DILocation(line: 0, scope: !17784, inlinedAt: !18177)
!18177 = distinct !DILocation(line: 215, column: 2, scope: !17776, inlinedAt: !18175)
!18178 = !DILocation(line: 95, column: 2, scope: !17784, inlinedAt: !18177)
!18179 = !DILocation(line: 270, column: 6, scope: !18152)
!18180 = !DILocation(line: 270, column: 3, scope: !18152)
!18181 = !DILocation(line: 0, scope: !17708, inlinedAt: !18182)
!18182 = distinct !DILocation(line: 271, column: 9, scope: !18152)
!18183 = !DILocation(line: 55, column: 2, scope: !17717, inlinedAt: !18184)
!18184 = distinct !DILocation(line: 145, column: 10, scope: !17708, inlinedAt: !18182)
!18185 = !DILocation(line: 0, scope: !17717, inlinedAt: !18184)
!18186 = !DILocation(line: 272, column: 22, scope: !18152)
!18187 = distinct !{!18187, !18167, !18188}
!18188 = !DILocation(line: 273, column: 2, scope: !18145)
!18189 = !DILocation(line: 276, column: 19, scope: !18190)
!18190 = distinct !DILexicalBlock(scope: !18191, file: !2585, line: 275, column: 23)
!18191 = distinct !DILexicalBlock(scope: !18145, file: !2585, line: 275, column: 6)
!18192 = !DILocation(line: 277, column: 2, scope: !18190)
!18193 = !DILocation(line: 279, column: 15, scope: !18145)
!18194 = !DILocation(line: 279, column: 12, scope: !18145)
!18195 = !DILocation(line: 280, column: 21, scope: !18145)
!18196 = !DILocation(line: 282, column: 24, scope: !18145)
!18197 = !DILocation(line: 282, column: 2, scope: !18145)
!18198 = !DILocation(line: 0, scope: !17776, inlinedAt: !18199)
!18199 = distinct !DILocation(line: 284, column: 2, scope: !18145)
!18200 = !DILocation(line: 0, scope: !17784, inlinedAt: !18201)
!18201 = distinct !DILocation(line: 215, column: 2, scope: !17776, inlinedAt: !18199)
!18202 = !DILocation(line: 95, column: 2, scope: !17784, inlinedAt: !18201)
!18203 = !DILocation(line: 285, column: 1, scope: !18145)
!18204 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2585, file: !2585, line: 287, type: !18205, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !18207)
!18205 = !DISubroutineType(types: !18206)
!18206 = !{!104}
!18207 = !{!18208, !18209, !18211}
!18208 = !DILocalVariable(name: "t", scope: !18204, file: !2585, line: 289, type: !109)
!18209 = !DILocalVariable(name: "__i", scope: !18210, file: !2585, line: 291, type: !17686)
!18210 = distinct !DILexicalBlock(scope: !18204, file: !2585, line: 291, column: 2)
!18211 = !DILocalVariable(name: "__key", scope: !18210, file: !2585, line: 291, type: !17686)
!18212 = !DILocation(line: 0, scope: !18204)
!18213 = !DILocation(line: 0, scope: !18210)
!18214 = !DILocation(line: 0, scope: !17708, inlinedAt: !18215)
!18215 = distinct !DILocation(line: 291, column: 2, scope: !18210)
!18216 = !DILocation(line: 55, column: 2, scope: !17717, inlinedAt: !18217)
!18217 = distinct !DILocation(line: 145, column: 10, scope: !17708, inlinedAt: !18215)
!18218 = !DILocation(line: 0, scope: !17717, inlinedAt: !18217)
!18219 = !DILocation(line: 292, column: 7, scope: !18220)
!18220 = distinct !DILexicalBlock(scope: !18221, file: !2585, line: 291, column: 24)
!18221 = distinct !DILexicalBlock(scope: !18210, file: !2585, line: 291, column: 2)
!18222 = !DILocation(line: 292, column: 19, scope: !18220)
!18223 = !DILocation(line: 0, scope: !17776, inlinedAt: !18224)
!18224 = distinct !DILocation(line: 291, column: 2, scope: !18221)
!18225 = !DILocation(line: 0, scope: !17784, inlinedAt: !18226)
!18226 = distinct !DILocation(line: 215, column: 2, scope: !17776, inlinedAt: !18224)
!18227 = !DILocation(line: 95, column: 2, scope: !17784, inlinedAt: !18226)
!18228 = !DILocation(line: 292, column: 17, scope: !18220)
!18229 = !DILocation(line: 294, column: 2, scope: !18204)
!18230 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2585, file: !2585, line: 297, type: !7455, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !256)
!18231 = !DILocation(line: 300, column: 19, scope: !18230)
!18232 = !DILocation(line: 300, column: 9, scope: !18230)
!18233 = !DILocation(line: 300, column: 2, scope: !18230)
!18234 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2585, file: !2585, line: 306, type: !18205, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !256)
!18235 = !DILocation(line: 308, column: 9, scope: !18234)
!18236 = !DILocation(line: 308, column: 2, scope: !18234)
!18237 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2585, file: !2585, line: 319, type: !7465, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !18238)
!18238 = !{!18239, !18240, !18241, !18242}
!18239 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18237, file: !2585, line: 319, type: !108)
!18240 = !DILocalVariable(name: "start_cycles", scope: !18237, file: !2585, line: 328, type: !108)
!18241 = !DILocalVariable(name: "cycles_to_wait", scope: !18237, file: !2585, line: 331, type: !108)
!18242 = !DILocalVariable(name: "current_cycles", scope: !18243, file: !2585, line: 338, type: !108)
!18243 = distinct !DILexicalBlock(scope: !18244, file: !2585, line: 337, column: 11)
!18244 = distinct !DILexicalBlock(scope: !18245, file: !2585, line: 337, column: 2)
!18245 = distinct !DILexicalBlock(scope: !18237, file: !2585, line: 337, column: 2)
!18246 = !DILocation(line: 0, scope: !18237)
!18247 = !DILocation(line: 322, column: 19, scope: !18248)
!18248 = distinct !DILexicalBlock(scope: !18237, file: !2585, line: 322, column: 6)
!18249 = !DILocation(line: 322, column: 6, scope: !18237)
!18250 = !DILocation(line: 328, column: 26, scope: !18237)
!18251 = !DILocation(line: 333, column: 43, scope: !18237)
!18252 = !DILocation(line: 337, column: 2, scope: !18237)
!18253 = !DILocation(line: 338, column: 29, scope: !18243)
!18254 = !DILocation(line: 0, scope: !18243)
!18255 = !DILocation(line: 341, column: 23, scope: !18256)
!18256 = distinct !DILexicalBlock(scope: !18243, file: !2585, line: 341, column: 7)
!18257 = !DILocation(line: 341, column: 39, scope: !18256)
!18258 = !DILocation(line: 349, column: 1, scope: !18237)
!18259 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !142, file: !142, line: 1675, type: !7455, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !256)
!18260 = !DILocation(line: 1677, column: 9, scope: !18259)
!18261 = !DILocation(line: 1677, column: 2, scope: !18259)
!18262 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18263, file: !18263, line: 24, type: !7455, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !256)
!18263 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18264 = !DILocation(line: 26, column: 9, scope: !18262)
!18265 = !DILocation(line: 26, column: 2, scope: !18262)
!18266 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2585, file: !2585, line: 364, type: !18267, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !18269)
!18267 = !DISubroutineType(types: !18268)
!18268 = !{!109, !17676}
!18269 = !{!18270, !18271}
!18270 = !DILocalVariable(name: "timeout", arg: 1, scope: !18266, file: !2585, line: 364, type: !17676)
!18271 = !DILocalVariable(name: "dt", scope: !18266, file: !2585, line: 366, type: !102)
!18272 = !DILocation(line: 0, scope: !18266)
!18273 = !DILocation(line: 368, column: 6, scope: !18266)
!18274 = !DILocation(line: 371, column: 10, scope: !18275)
!18275 = distinct !DILexicalBlock(scope: !18276, file: !2585, line: 370, column: 47)
!18276 = distinct !DILexicalBlock(scope: !18277, file: !2585, line: 370, column: 13)
!18277 = distinct !DILexicalBlock(scope: !18266, file: !2585, line: 368, column: 6)
!18278 = !DILocation(line: 371, column: 3, scope: !18275)
!18279 = !DILocation(line: 376, column: 58, scope: !18280)
!18280 = distinct !DILexicalBlock(scope: !18281, file: !2585, line: 376, column: 7)
!18281 = distinct !DILexicalBlock(scope: !18276, file: !2585, line: 372, column: 9)
!18282 = !DILocation(line: 376, column: 7, scope: !18281)
!18283 = !DILocation(line: 376, column: 43, scope: !18280)
!18284 = !DILocation(line: 377, column: 4, scope: !18285)
!18285 = distinct !DILexicalBlock(scope: !18280, file: !2585, line: 376, column: 64)
!18286 = !DILocation(line: 379, column: 10, scope: !18281)
!18287 = !DILocation(line: 379, column: 33, scope: !18281)
!18288 = !DILocation(line: 379, column: 31, scope: !18281)
!18289 = !DILocation(line: 379, column: 3, scope: !18281)
!18290 = !DILocation(line: 0, scope: !18277)
!18291 = !DILocation(line: 381, column: 1, scope: !18266)
!18292 = distinct !DISubprogram(name: "boot_banner", scope: !18293, file: !18293, line: 26, type: !337, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !256)
!18293 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18294 = !DILocation(line: 36, column: 1, scope: !18292)
!18295 = distinct !DISubprogram(name: "statics_init", scope: !2613, file: !2613, line: 21, type: !2619, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2594, retainedNodes: !18296)
!18296 = !{!18297, !18298}
!18297 = !DILocalVariable(name: "unused", arg: 1, scope: !18295, file: !2613, line: 21, type: !2621)
!18298 = !DILocalVariable(name: "h", scope: !18299, file: !2613, line: 24, type: !18300)
!18299 = distinct !DILexicalBlock(scope: !18295, file: !2613, line: 24, column: 2)
!18300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18301, size: 32)
!18301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !18302)
!18302 = !{!18303, !18309, !18315}
!18303 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18301, file: !142, line: 5074, baseType: !18304, size: 96)
!18304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !18305)
!18305 = !{!18306, !18307, !18308}
!18306 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18304, file: !245, line: 57, baseType: !248, size: 32)
!18307 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18304, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!18308 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18304, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!18309 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18301, file: !142, line: 5075, baseType: !18310, size: 64, offset: 96)
!18310 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !18311)
!18311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !18312)
!18312 = !{!18313}
!18313 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18311, file: !146, line: 232, baseType: !18314, size: 64)
!18314 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2599)
!18315 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18301, file: !142, line: 5076, baseType: !18316, offset: 160)
!18316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!18317 = !DILocation(line: 0, scope: !18295)
!18318 = !DILocation(line: 0, scope: !18299)
!18319 = !DILocation(line: 24, column: 2, scope: !18299)
!18320 = !DILocation(line: 52, column: 2, scope: !18295)
!18321 = !DILocation(line: 49, column: 27, scope: !18322)
!18322 = distinct !DILexicalBlock(scope: !18323, file: !2613, line: 48, column: 3)
!18323 = distinct !DILexicalBlock(scope: !18324, file: !2613, line: 24, column: 36)
!18324 = distinct !DILexicalBlock(scope: !18299, file: !2613, line: 24, column: 2)
!18325 = !DILocation(line: 49, column: 45, scope: !18322)
!18326 = !DILocation(line: 49, column: 4, scope: !18322)
!18327 = !DILocation(line: 24, column: 2, scope: !18324)
!18328 = !DILocation(line: 24, column: 2, scope: !18329)
!18329 = distinct !DILexicalBlock(scope: !18324, file: !2613, line: 24, column: 2)
!18330 = distinct !{!18330, !18319, !18331}
!18331 = !DILocation(line: 51, column: 2, scope: !18299)
!18332 = distinct !DISubprogram(name: "k_heap_init", scope: !2613, file: !2613, line: 13, type: !18333, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2594, retainedNodes: !18335)
!18333 = !DISubroutineType(types: !18334)
!18334 = !{null, !18300, !106, !137}
!18335 = !{!18336, !18337, !18338}
!18336 = !DILocalVariable(name: "h", arg: 1, scope: !18332, file: !2613, line: 13, type: !18300)
!18337 = !DILocalVariable(name: "mem", arg: 2, scope: !18332, file: !2613, line: 13, type: !106)
!18338 = !DILocalVariable(name: "bytes", arg: 3, scope: !18332, file: !2613, line: 13, type: !137)
!18339 = !DILocation(line: 0, scope: !18332)
!18340 = !DILocation(line: 15, column: 19, scope: !18332)
!18341 = !DILocation(line: 15, column: 2, scope: !18332)
!18342 = !DILocation(line: 16, column: 20, scope: !18332)
!18343 = !DILocation(line: 16, column: 2, scope: !18332)
!18344 = !DILocation(line: 19, column: 1, scope: !18332)
!18345 = distinct !DISubprogram(name: "z_waitq_init", scope: !14551, file: !14551, line: 47, type: !18346, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2594, retainedNodes: !18349)
!18346 = !DISubroutineType(types: !18347)
!18347 = !{null, !18348}
!18348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18310, size: 32)
!18349 = !{!18350}
!18350 = !DILocalVariable(name: "w", arg: 1, scope: !18345, file: !14551, line: 47, type: !18348)
!18351 = !DILocation(line: 0, scope: !18345)
!18352 = !DILocation(line: 49, column: 21, scope: !18345)
!18353 = !DILocation(line: 49, column: 2, scope: !18345)
!18354 = !DILocation(line: 50, column: 1, scope: !18345)
!18355 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !18356, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2594, retainedNodes: !18359)
!18356 = !DISubroutineType(types: !18357)
!18357 = !{null, !18358}
!18358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18314, size: 32)
!18359 = !{!18360}
!18360 = !DILocalVariable(name: "list", arg: 1, scope: !18355, file: !151, line: 197, type: !18358)
!18361 = !DILocation(line: 0, scope: !18355)
!18362 = !DILocation(line: 199, column: 8, scope: !18355)
!18363 = !DILocation(line: 199, column: 13, scope: !18355)
!18364 = !DILocation(line: 200, column: 8, scope: !18355)
!18365 = !DILocation(line: 200, column: 13, scope: !18355)
!18366 = !DILocation(line: 201, column: 1, scope: !18355)
!18367 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2613, file: !2613, line: 64, type: !18368, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2594, retainedNodes: !18374)
!18368 = !DISubroutineType(types: !18369)
!18369 = !{!106, !18300, !137, !137, !18370}
!18370 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !18371)
!18371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !18372)
!18372 = !{!18373}
!18373 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18371, file: !103, line: 66, baseType: !102, size: 64)
!18374 = !{!18375, !18376, !18377, !18378, !18379, !18380, !18381, !18382, !18387}
!18375 = !DILocalVariable(name: "h", arg: 1, scope: !18367, file: !2613, line: 64, type: !18300)
!18376 = !DILocalVariable(name: "align", arg: 2, scope: !18367, file: !2613, line: 64, type: !137)
!18377 = !DILocalVariable(name: "bytes", arg: 3, scope: !18367, file: !2613, line: 64, type: !137)
!18378 = !DILocalVariable(name: "timeout", arg: 4, scope: !18367, file: !2613, line: 65, type: !18370)
!18379 = !DILocalVariable(name: "now", scope: !18367, file: !2613, line: 67, type: !104)
!18380 = !DILocalVariable(name: "end", scope: !18367, file: !2613, line: 67, type: !104)
!18381 = !DILocalVariable(name: "ret", scope: !18367, file: !2613, line: 68, type: !106)
!18382 = !DILocalVariable(name: "key", scope: !18367, file: !2613, line: 72, type: !18383)
!18383 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !18384)
!18384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !18385)
!18385 = !{!18386}
!18386 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18384, file: !255, line: 33, baseType: !107, size: 32)
!18387 = !DILocalVariable(name: "blocked_alloc", scope: !18367, file: !2613, line: 78, type: !136)
!18388 = !DILocation(line: 0, scope: !18367)
!18389 = !DILocation(line: 67, column: 21, scope: !18367)
!18390 = !DILocation(line: 70, column: 8, scope: !18367)
!18391 = !DILocation(line: 72, column: 41, scope: !18367)
!18392 = !DILocalVariable(name: "l", arg: 1, scope: !18393, file: !255, line: 136, type: !18396)
!18393 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !18394, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2594, retainedNodes: !18397)
!18394 = !DISubroutineType(types: !18395)
!18395 = !{!18383, !18396}
!18396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18316, size: 32)
!18397 = !{!18392, !18398}
!18398 = !DILocalVariable(name: "k", scope: !18393, file: !255, line: 139, type: !18383)
!18399 = !DILocation(line: 0, scope: !18393, inlinedAt: !18400)
!18400 = distinct !DILocation(line: 72, column: 25, scope: !18367)
!18401 = !DILocation(line: 55, column: 2, scope: !18402, inlinedAt: !18406)
!18402 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7053, file: !7053, line: 42, type: !7054, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2594, retainedNodes: !18403)
!18403 = !{!18404, !18405}
!18404 = !DILocalVariable(name: "key", scope: !18402, file: !7053, line: 44, type: !32)
!18405 = !DILocalVariable(name: "tmp", scope: !18402, file: !7053, line: 53, type: !32)
!18406 = distinct !DILocation(line: 145, column: 10, scope: !18393, inlinedAt: !18400)
!18407 = !{i64 2224216}
!18408 = !DILocation(line: 0, scope: !18402, inlinedAt: !18406)
!18409 = !DILocation(line: 81, column: 9, scope: !18410)
!18410 = distinct !DILexicalBlock(scope: !18367, file: !2613, line: 80, column: 22)
!18411 = !DILocation(line: 83, column: 9, scope: !18410)
!18412 = !DILocation(line: 85, column: 12, scope: !18413)
!18413 = distinct !DILexicalBlock(scope: !18410, file: !2613, line: 84, column: 7)
!18414 = !DILocation(line: 85, column: 21, scope: !18413)
!18415 = !DILocation(line: 85, column: 30, scope: !18413)
!18416 = !DILocation(line: 85, column: 37, scope: !18413)
!18417 = !DILocation(line: 84, column: 7, scope: !18410)
!18418 = !DILocation(line: 99, column: 10, scope: !18410)
!18419 = !DILocation(line: 0, scope: !18393, inlinedAt: !18420)
!18420 = distinct !DILocation(line: 101, column: 9, scope: !18410)
!18421 = !DILocation(line: 55, column: 2, scope: !18402, inlinedAt: !18422)
!18422 = distinct !DILocation(line: 145, column: 10, scope: !18393, inlinedAt: !18420)
!18423 = !DILocation(line: 0, scope: !18402, inlinedAt: !18422)
!18424 = distinct !{!18424, !18425, !18426}
!18425 = !DILocation(line: 80, column: 2, scope: !18367)
!18426 = !DILocation(line: 102, column: 2, scope: !18367)
!18427 = !DILocalVariable(name: "key", arg: 2, scope: !18428, file: !255, line: 190, type: !18383)
!18428 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !18429, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2594, retainedNodes: !18431)
!18429 = !DISubroutineType(types: !18430)
!18430 = !{null, !18396, !18383}
!18431 = !{!18432, !18427}
!18432 = !DILocalVariable(name: "l", arg: 1, scope: !18428, file: !255, line: 189, type: !18396)
!18433 = !DILocation(line: 0, scope: !18428, inlinedAt: !18434)
!18434 = distinct !DILocation(line: 106, column: 2, scope: !18367)
!18435 = !DILocalVariable(name: "key", arg: 1, scope: !18436, file: !7053, line: 84, type: !32)
!18436 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7053, file: !7053, line: 84, type: !7064, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2594, retainedNodes: !18437)
!18437 = !{!18435}
!18438 = !DILocation(line: 0, scope: !18436, inlinedAt: !18439)
!18439 = distinct !DILocation(line: 215, column: 2, scope: !18428, inlinedAt: !18434)
!18440 = !DILocation(line: 95, column: 2, scope: !18436, inlinedAt: !18439)
!18441 = !{i64 2225033}
!18442 = !DILocation(line: 107, column: 2, scope: !18367)
!18443 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2613, file: !2613, line: 110, type: !18444, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2594, retainedNodes: !18446)
!18444 = !DISubroutineType(types: !18445)
!18445 = !{!106, !18300, !137, !18370}
!18446 = !{!18447, !18448, !18449, !18450}
!18447 = !DILocalVariable(name: "h", arg: 1, scope: !18443, file: !2613, line: 110, type: !18300)
!18448 = !DILocalVariable(name: "bytes", arg: 2, scope: !18443, file: !2613, line: 110, type: !137)
!18449 = !DILocalVariable(name: "timeout", arg: 3, scope: !18443, file: !2613, line: 110, type: !18370)
!18450 = !DILocalVariable(name: "ret", scope: !18443, file: !2613, line: 114, type: !106)
!18451 = !DILocation(line: 0, scope: !18443)
!18452 = !DILocation(line: 114, column: 14, scope: !18443)
!18453 = !DILocation(line: 118, column: 2, scope: !18443)
!18454 = distinct !DISubprogram(name: "k_heap_free", scope: !2613, file: !2613, line: 121, type: !18455, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2594, retainedNodes: !18457)
!18455 = !DISubroutineType(types: !18456)
!18456 = !{null, !18300, !106}
!18457 = !{!18458, !18459, !18460}
!18458 = !DILocalVariable(name: "h", arg: 1, scope: !18454, file: !2613, line: 121, type: !18300)
!18459 = !DILocalVariable(name: "mem", arg: 2, scope: !18454, file: !2613, line: 121, type: !106)
!18460 = !DILocalVariable(name: "key", scope: !18454, file: !2613, line: 123, type: !18383)
!18461 = !DILocation(line: 0, scope: !18454)
!18462 = !DILocation(line: 0, scope: !18393, inlinedAt: !18463)
!18463 = distinct !DILocation(line: 123, column: 25, scope: !18454)
!18464 = !DILocation(line: 55, column: 2, scope: !18402, inlinedAt: !18465)
!18465 = distinct !DILocation(line: 145, column: 10, scope: !18393, inlinedAt: !18463)
!18466 = !DILocation(line: 0, scope: !18402, inlinedAt: !18465)
!18467 = !DILocation(line: 125, column: 20, scope: !18454)
!18468 = !DILocation(line: 125, column: 2, scope: !18454)
!18469 = !DILocation(line: 128, column: 60, scope: !18470)
!18470 = distinct !DILexicalBlock(scope: !18454, file: !2613, line: 128, column: 6)
!18471 = !DILocation(line: 128, column: 43, scope: !18470)
!18472 = !DILocation(line: 128, column: 68, scope: !18470)
!18473 = !DILocation(line: 128, column: 6, scope: !18454)
!18474 = !DILocation(line: 123, column: 41, scope: !18454)
!18475 = !DILocation(line: 129, column: 3, scope: !18476)
!18476 = distinct !DILexicalBlock(scope: !18470, file: !2613, line: 128, column: 74)
!18477 = !DILocation(line: 130, column: 2, scope: !18476)
!18478 = !DILocation(line: 0, scope: !18428, inlinedAt: !18479)
!18479 = distinct !DILocation(line: 131, column: 3, scope: !18480)
!18480 = distinct !DILexicalBlock(scope: !18470, file: !2613, line: 130, column: 9)
!18481 = !DILocation(line: 0, scope: !18436, inlinedAt: !18482)
!18482 = distinct !DILocation(line: 215, column: 2, scope: !18428, inlinedAt: !18479)
!18483 = !DILocation(line: 95, column: 2, scope: !18436, inlinedAt: !18482)
!18484 = !DILocation(line: 133, column: 1, scope: !18454)
