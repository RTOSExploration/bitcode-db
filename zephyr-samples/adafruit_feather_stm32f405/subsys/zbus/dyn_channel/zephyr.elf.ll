; ModuleID = 'build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type { i32 }
%struct.zbus_channel = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct._thread_arch = type { i32, i32 }
%struct.zbus_observer = type { i8, %struct.k_msgq*, {}* }
%struct.zbus_observer.17 = type { i8, %struct.k_msgq*, void (%struct.zbus_channel.16*)* }
%struct.zbus_channel.16 = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer.17** }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.external_data_msg = type { i8*, i32 }
%struct.version_msg = type { i8, i8, i16 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.zbus_channel.155 = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer.154** }
%struct.zbus_observer.154 = type { i8, %struct.k_msgq*, void (%struct.zbus_channel.155*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134239896 to i8*), void (i8*)* inttoptr (i32 134238393 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239896 to i8*), void (i8*)* inttoptr (i32 134238373 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239896 to i8*), void (i8*)* inttoptr (i32 134238363 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134239896 to i8*), void (i8*)* inttoptr (i32 134238463 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239896 to i8*), void (i8*)* inttoptr (i32 134238453 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239896 to i8*), void (i8*)* inttoptr (i32 134238443 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239896 to i8*), void (i8*)* inttoptr (i32 134238433 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239896 to i8*), void (i8*)* inttoptr (i32 134238423 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134239896 to i8*), void (i8*)* inttoptr (i32 134238413 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134239896 to i8*), void (i8*)* inttoptr (i32 134238403 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134239896 to i8*), void (i8*)* inttoptr (i32 134238383 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [61 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_consumer_thread_id to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_consumer_sub to i8*), i8* getelementptr inbounds ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }, { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub, i32 0, i32 0), i8* bitcast (%struct.k_mutex* @_zbus_mutex_ack to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_data_ready_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_pkt_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_version_chan to i8*), i8* bitcast (%struct.zbus_channel.16* @ack to i8*), i8* bitcast (%struct.zbus_channel.16* @data_ready_chan to i8*), i8* getelementptr inbounds (%struct.zbus_observer.17, %struct.zbus_observer.17* @filter_lis, i32 0, i32 0), i8* bitcast (%struct.zbus_channel.16* @pkt_chan to i8*), i8* bitcast (%struct.zbus_channel.16* @version_chan to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_producer_thread_id to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_producer_sub to i8*), i8* getelementptr inbounds ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }, { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @producer_sub, i32 0, i32 0), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_observer_queue_consumer_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_consumer_sub", align 4, !dbg !25
@_k_fifo_buf__zbus_observer_queue_consumer_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.0", align 4, !dbg !330
@_k_thread_obj_consumer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !340
@_k_thread_stack_consumer_thread_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.1", align 64, !dbg !335
@.str = private unnamed_addr constant [19 x i8] c"consumer_thread_id\00", align 1
@_k_thread_data_consumer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_consumer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_consumer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @consumer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 4, i32 0, i32 1000, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_consumer_thread_id", align 4, !dbg !295
@consumer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_consumer_thread_id, align 4, !dbg !326
@.str.1 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"chan == &data_ready_chan\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"CMAKE_SOURCE_DIR/src/consumer.c\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"%c: size=%02d\0A\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"Content\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@_zbus_mutex_pkt_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_pkt_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_pkt_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_pkt_chan", align 4, !dbg !342
@.str.7 = private unnamed_addr constant [9 x i8] c"pkt_chan\00", align 1
@_zbus_message_pkt_chan = internal global %struct.external_data_msg zeroinitializer, align 4, !dbg !512
@_zbus_observers_pkt_chan = internal constant [2 x %struct.zbus_observer.17*] [%struct.zbus_observer.17* @filter_lis, %struct.zbus_observer.17* null], align 4, !dbg !519
@_zbus_mutex_version_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_version_chan", align 4, !dbg !498
@.str.1.15 = private unnamed_addr constant [13 x i8] c"version_chan\00", align 1
@_zbus_message_version_chan = internal global %struct.version_msg { i8 0, i8 1, i16 1 }, align 2, !dbg !522
@_zbus_observers_version_chan = internal constant [1 x %struct.zbus_observer.17*] zeroinitializer, align 4, !dbg !529
@version_chan = dso_local constant %struct.zbus_channel.16 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.15, i32 0, i32 0), i16 4, i8* null, i8* getelementptr inbounds (%struct.version_msg, %struct.version_msg* @_zbus_message_version_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_version_chan, %struct.zbus_observer.17** getelementptr inbounds ([1 x %struct.zbus_observer.17*], [1 x %struct.zbus_observer.17*]* @_zbus_observers_version_chan, i32 0, i32 0) }, section "._zbus_channel.static.version_chan", align 4, !dbg !500
@_zbus_mutex_data_ready_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_data_ready_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_data_ready_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_data_ready_chan", align 4, !dbg !502
@.str.2.13 = private unnamed_addr constant [16 x i8] c"data_ready_chan\00", align 1
@_zbus_message_data_ready_chan = internal global %struct.z_thread_stack_element zeroinitializer, align 1, !dbg !534
@_zbus_observers_data_ready_chan = internal constant [2 x %struct.zbus_observer.17*] [%struct.zbus_observer.17* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer.17*), %struct.zbus_observer.17* null], align 4, !dbg !539
@data_ready_chan = dso_local constant %struct.zbus_channel.16 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.13, i32 0, i32 0), i16 1, i8* null, i8* getelementptr inbounds (%struct.z_thread_stack_element, %struct.z_thread_stack_element* @_zbus_message_data_ready_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_data_ready_chan, %struct.zbus_observer.17** getelementptr inbounds ([2 x %struct.zbus_observer.17*], [2 x %struct.zbus_observer.17*]* @_zbus_observers_data_ready_chan, i32 0, i32 0) }, section "._zbus_channel.static.data_ready_chan", align 4, !dbg !504
@_zbus_mutex_ack = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_ack, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_ack, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_ack", align 4, !dbg !506
@.str.3.18 = private unnamed_addr constant [4 x i8] c"ack\00", align 1
@_zbus_message_ack = internal global %struct.z_thread_stack_element zeroinitializer, align 1, !dbg !541
@_zbus_observers_ack = internal constant [2 x %struct.zbus_observer.17*] [%struct.zbus_observer.17* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @producer_sub to %struct.zbus_observer.17*), %struct.zbus_observer.17* null], align 4, !dbg !543
@ack = dso_local constant %struct.zbus_channel.16 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.18, i32 0, i32 0), i16 1, i8* null, i8* getelementptr inbounds (%struct.z_thread_stack_element, %struct.z_thread_stack_element* @_zbus_message_ack, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_ack, %struct.zbus_observer.17** getelementptr inbounds ([2 x %struct.zbus_observer.17*], [2 x %struct.zbus_observer.17*]* @_zbus_observers_ack, i32 0, i32 0) }, section "._zbus_channel.static.ack", align 4, !dbg !508
@filter_lis = dso_local global %struct.zbus_observer.17 { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel.16*)* @filter_cb }, section "._zbus_observer.static.filter_lis", align 4, !dbg !510
@consumer_sub = dso_local global { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* } { i8 1, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.consumer_sub", align 4, !dbg !115
@.str.4.8 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.9 = private unnamed_addr constant [18 x i8] c"chan == &pkt_chan\00", align 1
@.str.6.10 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@.str.7.14 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/include/zephyr/zbus/zbus.h\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@_zbus_observer_queue_producer_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_producer_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_producer_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_producer_sub", align 4, !dbg !545
@_k_fifo_buf__zbus_observer_queue_producer_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/producer.c\22.0", align 4, !dbg !727
@producer_sub = dso_local global { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* } { i8 1, %struct.k_msgq* @_zbus_observer_queue_producer_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.producer_sub", align 4, !dbg !552
@_k_thread_obj_producer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !732
@_k_thread_stack_producer_thread_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/producer.c\22.1", align 64, !dbg !729
@.str.22 = private unnamed_addr constant [19 x i8] c"producer_thread_id\00", align 1
@_k_thread_data_producer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_producer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_producer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 5, i32 0, i32 1000, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_producer_thread_id", align 4, !dbg !702
@producer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_producer_thread_id, align 4, !dbg !723
@.str.1.23 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.24 = private unnamed_addr constant [19 x i8] c"msg != ((void *)0)\00", align 1
@.str.3.25 = private unnamed_addr constant [32 x i8] c"CMAKE_SOURCE_DIR/src/producer.c\00", align 1
@pkt_chan = dso_local constant %struct.zbus_channel.16 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), i16 8, i8* null, i8* bitcast (%struct.external_data_msg* @_zbus_message_pkt_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_pkt_chan, %struct.zbus_observer.17** getelementptr inbounds ([2 x %struct.zbus_observer.17*], [2 x %struct.zbus_observer.17*]* @_zbus_observers_pkt_chan, i32 0, i32 0) }, section "._zbus_channel.static.pkt_chan", align 4, !dbg !348
@.str.4.26 = private unnamed_addr constant [23 x i8] c"%c: Ack not received!\0A\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !734
@.str.1.30 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.32 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.33 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.34 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.35 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.36 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.37 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.38 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !757
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.41 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.42 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.44 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.45 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.46 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.47 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.48 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.49 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.50 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.51 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !766
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !816
@.str.65 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.67 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.68 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.66 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.70 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.71 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.69 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.72 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.73 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.74 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.75 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.76 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.78 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.79 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.83 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.84 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.85 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.97 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.89 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.90 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.91 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.92 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.93 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.94 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.95 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.96 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.88 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.87 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28.86 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !845
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !976
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !851
@.str.109 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.110 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.111 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.112 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.117 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.118 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !985
@.str.6.119 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.120 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.113 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.114 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !1021
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.132, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !1031
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !1036
@.str.131 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.132 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.133 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i32 0, i32 0), i8 2 }, section ".log_const_zbus", align 4, !dbg !1056
@.str.1.137 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.138 = private unnamed_addr constant [15 x i8] c"!k_is_in_isr()\00", align 1
@.str.3.139 = private unnamed_addr constant [31 x i8] c"ZEPHYR_BASE/subsys/zbus/zbus.c\00", align 1
@.str.4.140 = private unnamed_addr constant [34 x i8] c"\09zbus cannot be used inside ISRs\0A\00", align 1
@.str.5.141 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.6.142 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@.str.7.143 = private unnamed_addr constant [19 x i8] c"msg != ((void *)0)\00", align 1
@.str.8.144 = private unnamed_addr constant [18 x i8] c"\09msg is required\0A\00", align 1
@.str.9.154 = private unnamed_addr constant [19 x i8] c"sub != ((void *)0)\00", align 1
@.str.10.155 = private unnamed_addr constant [18 x i8] c"\09sub is required\0A\00", align 1
@.str.11.145 = private unnamed_addr constant [9 x i8] c"err == 0\00", align 1
@.str.12.146 = private unnamed_addr constant [49 x i8] c"\09could not deliver notification to observer %s.\0A\00", align 1
@.str.13.147 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.158 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.159 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.160 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !1068
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1261
@.str.4.156 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1223
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !1206
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.156, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1179
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1195
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !1225
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !1238
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !1240
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !1242
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !1244
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !1246
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !1248
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !1250
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !1252
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !1254
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !1256
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1266
@.str.161 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1295
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1389
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1378
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_POST_KERNEL60_", align 4, !dbg !1430
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1288
@.str.170 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1496
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1782
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1748
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1734
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1673
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1286
@.str.1.178 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1784
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1752
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1750
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1690
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1284
@.str.2.179 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1797
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1756
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1754
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1696
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1282
@.str.3.180 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1799
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1760
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1758
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1702
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1280
@.str.4.181 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1801
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1764
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1762
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1708
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1278
@.str.5.182 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1803
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1768
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1766
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1714
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1276
@.str.6.183 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1805
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1772
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1770
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1720
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1274
@.str.7.184 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1807
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1776
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1774
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1726
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1272
@.str.8.185 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1809
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1780
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1778
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1732
@.str.9.171 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.32.177 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.33.173 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.34.176 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.35.172 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.36.174 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.37.175 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.189 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.189, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1811
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1290
@.str.1.192 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1967
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !2022
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1965
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2024
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.192, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1956
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1958
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !2011
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !2014
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2016
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !2019
@.str.2.194 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.195 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.196 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.197 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.198 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.201 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.203 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.204 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.161, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1362
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !2035
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2146
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2148
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2144
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2139
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2113
@.str.208 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.209 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.210 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.211 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.212 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.213 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !2150
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.170, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1671
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.178, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1688
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.179, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1694
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.180, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1700
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.181, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1706
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.182, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1712
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.183, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1718
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.184, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1724
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.185, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1730
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2240
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2280
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2283
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2288
@.str.245 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.249 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.250 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.251 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.252 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.253 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.254 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.255 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.259 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.260 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.261 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.262 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.263 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.258 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.257 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.259, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.260, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.261, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.262, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.263, i32 0, i32 0)], align 4
@.str.265 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.265, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2295
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2518
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2507
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2513
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2525
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2530
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.274 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.282, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.283, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.284, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.285, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.286, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.280, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.287, i32 0, i32 0)], align 4, !dbg !2558
@.str.281 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.282 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.283 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.284 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.285 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.286 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.280 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.287 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2672
@.str.8.279 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.290 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.291 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.292 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.293 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.295 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.296 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.299 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.300 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.310 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.311 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.312 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.317 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.318 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.319 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.320 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.321 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.322 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.323 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.324 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.325 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.332 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.333 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.334 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.335 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.336 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2685
@.str.4.347 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.337 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.338 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.339 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.340 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.341 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2795
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2905
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2908
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2910
@.str.348 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.370 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.355 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.377 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.389 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.358 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.384 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.354 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.394 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.395 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.401 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.402 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.403 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.404 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.349 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.350 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.351 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.352 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.353 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.357 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.374 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.385 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.386 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2515
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2523
@.str.23.396 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@.str.410 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.411 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.412 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.413 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2912
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2942
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2947
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2945
@.str.4.414 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.415 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.416 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.420 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.421 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@kheap__system_heap = dso_local global [1024 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2953
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @kheap__system_heap, i32 0, i32 0), i32 1024 }, %struct._wait_q_t zeroinitializer, %struct.k_spinlock zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2959
@.str.444 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.445 = private unnamed_addr constant [61 x i8] c"align / sizeof(void *) >= 1 && (align % sizeof(void *)) == 0\00", align 1
@.str.2.446 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/mempool.c\00", align 1
@.str.3.447 = private unnamed_addr constant [45 x i8] c"\09align must be a multiple of sizeof(void *)\0A\00", align 1
@.str.4.448 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.5.449 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2382
@.str.6.450 = private unnamed_addr constant [50 x i8] c"align == 0 || ((uintptr_t)mem & (align - 1)) == 0\00", align 1
@.str.7.451 = private unnamed_addr constant [40 x i8] c"\09misaligned memory at %p (align = %zu)\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2996
@.str.462 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.473 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.464 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.474 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.463 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.465 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.470 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.471 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.472 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.475 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.476 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3744 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3746, !srcloc !3747
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3748, !srcloc !3749
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3750, !srcloc !3751
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3752, !srcloc !3753
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3754, !srcloc !3755
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3756, !srcloc !3757
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3758, !srcloc !3759
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3760, !srcloc !3761
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3762, !srcloc !3763
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3764, !srcloc !3765
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3766, !srcloc !3767
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3768, !srcloc !3769
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3770, !srcloc !3771
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3772, !srcloc !3773
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3774, !srcloc !3775
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3776, !srcloc !3777
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3778, !srcloc !3779
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3780, !srcloc !3781
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3782, !srcloc !3783
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3784, !srcloc !3785
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3786, !srcloc !3787
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3788, !srcloc !3789
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3790, !srcloc !3791
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3792, !srcloc !3793
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3794, !srcloc !3795
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3796, !srcloc !3797
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3798, !srcloc !3799
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3800, !srcloc !3803
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3804, !srcloc !3805
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3806, !srcloc !3807
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3808, !srcloc !3809
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3810, !srcloc !3811
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3812, !srcloc !3813
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3814, !srcloc !3815
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3816, !srcloc !3817
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3818, !srcloc !3819
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3820, !srcloc !3821
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3822, !srcloc !3823
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3824, !srcloc !3825
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3826, !srcloc !3827
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3828, !srcloc !3829
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3830, !srcloc !3831
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3832, !srcloc !3833
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3834, !srcloc !3835
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3836, !srcloc !3837
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3838, !srcloc !3839
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3840, !srcloc !3841
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3842, !srcloc !3843
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3844, !srcloc !3845
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3846, !srcloc !3847
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3848, !srcloc !3849
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3850, !srcloc !3851
  ret void, !dbg !3852
}

; Function Attrs: noinline nounwind optsize
define internal void @consumer_thread() #1 !dbg !3855 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca i8, align 1
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3875
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3875
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3863, metadata !DIExpression(DW_OP_deref)), !dbg !3876
  %4 = call i32 bitcast (i32 (%struct.zbus_observer.154*, %struct.zbus_channel.155**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !3877
  %5 = icmp eq i32 %4, 0, !dbg !3878
  br i1 %5, label %6, label %31, !dbg !3879

6:                                                ; preds = %0, %25
  %7 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3880
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %7, metadata !3863, metadata !DIExpression()), !dbg !3876
  %8 = icmp eq %struct.zbus_channel* %7, bitcast (%struct.zbus_channel.16* @data_ready_chan to %struct.zbus_channel*), !dbg !3880
  br i1 %8, label %10, label %9, !dbg !3883

9:                                                ; preds = %6
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i32 0, i32 0), i32 noundef 23) #26, !dbg !3884
  call void @assert_post_action(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i32 0, i32 0), i32 noundef 23) #26, !dbg !3884
  unreachable, !dbg !3884

10:                                               ; preds = %6
  %11 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 100) #27, !dbg !3886
  %12 = insertvalue [1 x i64] poison, i64 %11, 0, !dbg !3887
  %13 = call i32 bitcast (i32 (%struct.zbus_channel.155*, [1 x i64])* @zbus_chan_claim to i32 (%struct.zbus_channel*, [1 x i64])*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*), [1 x i64] %12) #26, !dbg !3887
  %14 = icmp eq i32 %13, 0, !dbg !3887
  br i1 %14, label %15, label %25, !dbg !3888

15:                                               ; preds = %10
  %16 = tail call fastcc i8* @zbus_chan_msg() #27, !dbg !3889
  call void @llvm.dbg.value(metadata i8* %16, metadata !3857, metadata !DIExpression()), !dbg !3876
  %17 = getelementptr inbounds i8, i8* %16, i32 4, !dbg !3890
  %18 = bitcast i8* %17 to i32*, !dbg !3890
  %19 = load i32, i32* %18, align 4, !dbg !3890
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i32 noundef 87, i32 noundef %19) #26, !dbg !3890
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), metadata !3864, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.value(metadata i1 false, metadata !3869, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3895
  call void @llvm.dbg.value(metadata i32 0, metadata !3870, metadata !DIExpression()), !dbg !3895
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i32 noundef 87, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0)) #26, !dbg !3896
  %20 = bitcast i8* %16 to i8**, !dbg !3900
  %21 = load i8*, i8** %20, align 4, !dbg !3900
  %22 = load i32, i32* %18, align 4, !dbg !3900
  call void @z_log_minimal_hexdump_print(i32 noundef 2, i8* noundef %21, i32 noundef %22) #26, !dbg !3900
  %23 = load i8*, i8** %20, align 4, !dbg !3901
  call void @k_free(i8* noundef %23) #26, !dbg !3902
  store i8* null, i8** %20, align 4, !dbg !3903
  store i32 0, i32* %18, align 4, !dbg !3904
  %24 = call i32 bitcast (i32 (%struct.zbus_channel.155*)* @zbus_chan_finish to i32 (%struct.zbus_channel*)*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*)) #26, !dbg !3905
  br label %25, !dbg !3906

25:                                               ; preds = %15, %10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #25, !dbg !3907
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element* undef, metadata !3871, metadata !DIExpression()), !dbg !3908
  store i8 1, i8* %2, align 1, !dbg !3908
  %26 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 250) #27, !dbg !3909
  %27 = insertvalue [1 x i64] poison, i64 %26, 0, !dbg !3910
  %28 = call i32 bitcast (i32 (%struct.zbus_channel.155*, i8*, [1 x i64])* @zbus_chan_pub to i32 (%struct.zbus_channel*, i8*, [1 x i64])*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.16* @ack to %struct.zbus_channel*), i8* noundef nonnull %2, [1 x i64] %27) #26, !dbg !3910
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #25, !dbg !3911
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3863, metadata !DIExpression(DW_OP_deref)), !dbg !3876
  %29 = call i32 bitcast (i32 (%struct.zbus_observer.154*, %struct.zbus_channel.155**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !3877
  %30 = icmp eq i32 %29, 0, !dbg !3878
  br i1 %30, label %6, label %31, !dbg !3879, !llvm.loop !3912

31:                                               ; preds = %25, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3913
  ret void, !dbg !3913
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3914 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3919, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i64 %0, metadata !3921, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.value(metadata i32 1000, metadata !3926, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.value(metadata i32 10000, metadata !3927, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.value(metadata i8 1, metadata !3928, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.value(metadata i8 0, metadata !3929, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.value(metadata i8 1, metadata !3930, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.value(metadata i8 0, metadata !3931, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.value(metadata i8 1, metadata !3932, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.value(metadata i8 0, metadata !3933, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.value(metadata i64 0, metadata !3934, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.value(metadata i64 0, metadata !3934, metadata !DIExpression()), !dbg !3938
  %2 = mul i64 %0, 10, !dbg !3940
  ret i64 %2, !dbg !3946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @zbus_chan_msg() unnamed_addr #4 !dbg !3947 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*), metadata !3951, metadata !DIExpression()), !dbg !3952
  %1 = load i8*, i8** getelementptr inbounds (%struct.zbus_channel, %struct.zbus_channel* bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*), i32 0, i32 3), align 4, !dbg !3953
  ret i8* %1, !dbg !3954
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind optsize
define internal void @filter_cb(%struct.zbus_channel.16* noundef readnone %0) #1 !dbg !3955 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.zbus_channel.16* %0, metadata !3957, metadata !DIExpression()), !dbg !3962
  %3 = icmp eq %struct.zbus_channel.16* %0, @pkt_chan, !dbg !3963
  br i1 %3, label %5, label %4, !dbg !3966

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.10, i32 0, i32 0), i32 noundef 60) #26, !dbg !3967
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.10, i32 0, i32 0), i32 noundef 60) #26, !dbg !3967
  unreachable, !dbg !3967

5:                                                ; preds = %1
  %6 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.16* noundef nonnull @pkt_chan) #27, !dbg !3969
  call void @llvm.dbg.value(metadata i8* %6, metadata !3958, metadata !DIExpression()), !dbg !3962
  %7 = getelementptr inbounds i8, i8* %6, i32 4, !dbg !3970
  %8 = bitcast i8* %7 to i32*, !dbg !3970
  %9 = load i32, i32* %8, align 4, !dbg !3970
  %10 = and i32 %9, 1, !dbg !3972
  %11 = icmp eq i32 %10, 0, !dbg !3972
  br i1 %11, label %16, label %12, !dbg !3973

12:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* %6, metadata !3958, metadata !DIExpression()), !dbg !3962
  %13 = bitcast i8* %6 to i8**, !dbg !3974
  %14 = load i8*, i8** %13, align 4, !dbg !3974
  %15 = tail call i8* @memset(i8* noundef %14, i32 noundef 0, i32 noundef %9) #26, !dbg !3976
  br label %16, !dbg !3977

16:                                               ; preds = %12, %5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #25, !dbg !3978
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element* undef, metadata !3961, metadata !DIExpression()), !dbg !3979
  store i8 1, i8* %2, align 1, !dbg !3979
  %17 = call i32 bitcast (i32 (%struct.zbus_channel.155*, i8*, [1 x i64])* @zbus_chan_pub to i32 (%struct.zbus_channel.16*, i8*, [1 x i64])*)(%struct.zbus_channel.16* noundef nonnull @data_ready_chan, i8* noundef nonnull %2, [1 x i64] zeroinitializer) #26, !dbg !3980
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #25, !dbg !3981
  ret void, !dbg !3981
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.16* noundef readonly %0) unnamed_addr #1 !dbg !3982 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.16* %0, metadata !3986, metadata !DIExpression()), !dbg !3987
  %2 = icmp eq %struct.zbus_channel.16* %0, null, !dbg !3988
  br i1 %2, label %3, label %4, !dbg !3991

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #26, !dbg !3992
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i32 0, i32 0)) #26, !dbg !3992
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #26, !dbg !3992
  unreachable, !dbg !3992

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.zbus_channel.16, %struct.zbus_channel.16* %0, i32 0, i32 3, !dbg !3994
  %6 = load i8*, i8** %5, align 4, !dbg !3994
  ret i8* %6, !dbg !3995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3996 {
  %1 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.16* noundef nonnull @version_chan) #27, !dbg !4001
  call void @llvm.dbg.value(metadata i8* %1, metadata !3998, metadata !DIExpression()), !dbg !4002
  ret void, !dbg !4003
}

; Function Attrs: noinline nounwind optsize
define internal void @producer_thread() #1 !dbg !4004 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca %struct.external_data_msg, align 4
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !4019
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4019
  call void @llvm.dbg.value(metadata i8 0, metadata !4008, metadata !DIExpression()), !dbg !4020
  %4 = bitcast %struct.external_data_msg* %2 to i8*
  %5 = getelementptr inbounds %struct.external_data_msg, %struct.external_data_msg* %2, i32 0, i32 0
  %6 = getelementptr inbounds %struct.external_data_msg, %struct.external_data_msg* %2, i32 0, i32 1
  br label %8, !dbg !4021

7:                                                ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4022
  ret void, !dbg !4022

8:                                                ; preds = %0, %30
  %9 = phi i32 [ 0, %0 ], [ %10, %30 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4008, metadata !DIExpression()), !dbg !4020
  %10 = add nuw nsw i32 %9, 1, !dbg !4023
  %11 = call i8* @k_malloc(i32 noundef %10) #26, !dbg !4024
  call void @llvm.dbg.value(metadata i8* %11, metadata !4007, metadata !DIExpression()), !dbg !4025
  %12 = icmp eq i8* %11, null, !dbg !4026
  br i1 %12, label %13, label %14, !dbg !4029

13:                                               ; preds = %8
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3.25, i32 0, i32 0), i32 noundef 23) #26, !dbg !4030
  call void @assert_post_action(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3.25, i32 0, i32 0), i32 noundef 23) #26, !dbg !4030
  unreachable, !dbg !4030

14:                                               ; preds = %8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !4032
  call void @llvm.dbg.declare(metadata %struct.external_data_msg* %2, metadata !4010, metadata !DIExpression()), !dbg !4033
  store i8* %11, i8** %5, align 4, !dbg !4034
  store i32 %10, i32* %6, align 4, !dbg !4034
  call void @llvm.dbg.value(metadata i32 0, metadata !4017, metadata !DIExpression()), !dbg !4035
  %15 = trunc i32 %9 to i8
  call void @llvm.dbg.value(metadata i32 0, metadata !4017, metadata !DIExpression()), !dbg !4035
  store i8 %15, i8* %11, align 1, !dbg !4036
  call void @llvm.dbg.value(metadata i32 1, metadata !4017, metadata !DIExpression()), !dbg !4035
  %16 = load i32, i32* %6, align 4, !dbg !4039
  %17 = icmp ugt i32 %16, 1, !dbg !4040
  br i1 %17, label %22, label %18, !dbg !4041, !llvm.loop !4042

18:                                               ; preds = %22, %14
  %19 = call i32 bitcast (i32 (%struct.zbus_channel.155*, i8*, [1 x i64])* @zbus_chan_pub to i32 (%struct.zbus_channel*, i8*, [1 x i64])*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*), i8* noundef nonnull %4, [1 x i64] [i64 2500]) #26, !dbg !4044
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !4006, metadata !DIExpression(DW_OP_deref)), !dbg !4025
  %20 = call i32 bitcast (i32 (%struct.zbus_observer.154*, %struct.zbus_channel.155**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @producer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !4045
  %21 = icmp eq i32 %20, 0, !dbg !4045
  br i1 %21, label %30, label %29, !dbg !4047

22:                                               ; preds = %14, %22
  %23 = phi i32 [ %26, %22 ], [ 1, %14 ]
  %24 = load i8*, i8** %5, align 4, !dbg !4048
  call void @llvm.dbg.value(metadata i32 %23, metadata !4017, metadata !DIExpression()), !dbg !4035
  %25 = getelementptr inbounds i8, i8* %24, i32 %23, !dbg !4049
  store i8 %15, i8* %25, align 1, !dbg !4036
  %26 = add nuw nsw i32 %23, 1, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %26, metadata !4017, metadata !DIExpression()), !dbg !4035
  %27 = load i32, i32* %6, align 4, !dbg !4039
  %28 = icmp ult i32 %26, %27, !dbg !4040
  br i1 %28, label %22, label %18, !dbg !4041, !llvm.loop !4042

29:                                               ; preds = %18
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.26, i32 0, i32 0), i32 noundef 69) #26, !dbg !4051
  br label %30, !dbg !4057

30:                                               ; preds = %29, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !4058
  call void @llvm.dbg.value(metadata i32 %10, metadata !4008, metadata !DIExpression()), !dbg !4020
  %31 = icmp eq i32 %10, 16, !dbg !4059
  br i1 %31, label %7, label %8, !dbg !4021, !llvm.loop !4060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4062 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4077, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %0, metadata !4073, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %1, metadata !4074, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %2, metadata !4075, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %3, metadata !4076, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %0, metadata !4078, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %0, metadata !4079, metadata !DIExpression()), !dbg !4140
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4141
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4141
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4082, metadata !DIExpression()), !dbg !4142
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4143
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4143
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4084, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.value(metadata i32 0, metadata !4085, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 0, metadata !4086, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 0, metadata !4087, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 -1, metadata !4088, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8 0, metadata !4091, metadata !DIExpression()), !dbg !4140
  %12 = and i32 %2, 4, !dbg !4145
  %13 = icmp eq i32 %12, 0, !dbg !4146
  call void @llvm.dbg.value(metadata i1 %13, metadata !4092, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4140
  %14 = lshr i32 %2, 3, !dbg !4147
  %15 = and i32 %14, 7, !dbg !4147
  %16 = add nuw nsw i32 %15, 1, !dbg !4148
  call void @llvm.dbg.value(metadata i32 %16, metadata !4093, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8 0, metadata !4094, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %0, metadata !4095, metadata !DIExpression()), !dbg !4140
  %17 = ptrtoint i8* %0 to i32, !dbg !4149
  %18 = and i32 %17, 3, !dbg !4151
  %19 = icmp eq i32 %18, 0, !dbg !4151
  br i1 %19, label %20, label %320, !dbg !4152

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4153
  call void @llvm.dbg.value(metadata i8* %21, metadata !4079, metadata !DIExpression()), !dbg !4140
  %22 = icmp eq i8* %0, null, !dbg !4154
  %23 = and i32 %1, 7, !dbg !4156
  %24 = sub nuw nsw i32 8, %23, !dbg !4156
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4156
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4156
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4156
  call void @llvm.dbg.value(metadata i32 %27, metadata !4074, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %26, metadata !4079, metadata !DIExpression()), !dbg !4140
  br i1 %22, label %33, label %28, !dbg !4157

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4159
  %30 = sub i32 4, %17, !dbg !4159
  %31 = add i32 %30, %29, !dbg !4160
  %32 = icmp ugt i32 %31, %27, !dbg !4161
  br i1 %32, label %320, label %33, !dbg !4162

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4163
  call void @llvm.dbg.value(metadata i8* %34, metadata !4076, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %3, metadata !4090, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 4, metadata !4081, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 4, metadata !4080, metadata !DIExpression()), !dbg !4140
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4164

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4077, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %42, metadata !4076, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %43, metadata !4079, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %44, metadata !4080, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %45, metadata !4081, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %72, metadata !4088, metadata !DIExpression()), !dbg !4140
  br i1 %46, label %73, label %47, !dbg !4165

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4166
  %49 = zext i1 %48 to i32, !dbg !4170
  %50 = add nsw i32 %72, %49, !dbg !4170
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4170
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %52, metadata !4080, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %51, metadata !4081, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8 poison, metadata !4091, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %50, metadata !4088, metadata !DIExpression()), !dbg !4140
  br label %53, !dbg !4171

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4077, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %40, metadata !4076, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %58, metadata !4079, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %57, metadata !4080, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %56, metadata !4081, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8 poison, metadata !4091, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %54, metadata !4088, metadata !DIExpression()), !dbg !4140
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4172
  call void @llvm.dbg.value(metadata i8* %60, metadata !4076, metadata !DIExpression()), !dbg !4140
  %61 = load i8, i8* %60, align 1, !dbg !4174
  %62 = icmp eq i8 %61, 0, !dbg !4175
  br i1 %62, label %226, label %63, !dbg !4176, !llvm.loop !4177

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !4165

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4180

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4091, metadata !DIExpression()), !dbg !4140
  %75 = add nsw i32 %72, -1, !dbg !4181
  call void @llvm.dbg.value(metadata i32 %75, metadata !4088, metadata !DIExpression()), !dbg !4140
  br label %53, !dbg !4182

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4183

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4081, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 4, metadata !4080, metadata !DIExpression()), !dbg !4140
  br label %53, !dbg !4184

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4081, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 4, metadata !4080, metadata !DIExpression()), !dbg !4140
  br label %53, !dbg !4185

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4186
  %81 = icmp eq i8 %80, 108, !dbg !4188
  br i1 %81, label %82, label %109, !dbg !4189

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4190
  %84 = load i8, i8* %83, align 1, !dbg !4190
  %85 = icmp eq i8 %84, 108, !dbg !4193
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4194
  %89 = add i32 %88, 7, !dbg !4194
  %90 = and i32 %89, -8, !dbg !4194
  %91 = inttoptr i32 %90 to i8*, !dbg !4194
  %92 = inttoptr i32 %90 to double*, !dbg !4194
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4194
  %94 = load double, double* %92, align 8, !dbg !4194
  call void @llvm.dbg.value(metadata i8* %93, metadata !4077, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 8, metadata !4080, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 8, metadata !4081, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata double %94, metadata !4108, metadata !DIExpression()), !dbg !4196
  %95 = ptrtoint i8* %43 to i32, !dbg !4197
  %96 = add i32 %95, 7, !dbg !4197
  %97 = and i32 %96, -8, !dbg !4197
  %98 = inttoptr i32 %97 to i8*, !dbg !4198
  call void @llvm.dbg.value(metadata i8* %98, metadata !4079, metadata !DIExpression()), !dbg !4140
  br i1 %22, label %104, label %99, !dbg !4199

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4200
  %101 = icmp ugt i32 %100, %196, !dbg !4204
  br i1 %101, label %320, label %102, !dbg !4205

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4206
  store double %94, double* %103, align 8, !dbg !4206
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4209
  call void @llvm.dbg.value(metadata i8* %105, metadata !4079, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8 poison, metadata !4091, metadata !DIExpression()), !dbg !4140
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4091, metadata !DIExpression()), !dbg !4140
  br label %53, !dbg !4210

107:                                              ; preds = %73, %73
  br label %109, !dbg !4211

108:                                              ; preds = %73
  br label %109, !dbg !4211

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4140
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4140
  call void @llvm.dbg.value(metadata i32 %113, metadata !4080, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %112, metadata !4081, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8 poison, metadata !4094, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8 poison, metadata !4091, metadata !DIExpression()), !dbg !4140
  %114 = ptrtoint i8* %43 to i32, !dbg !4211
  %115 = add i32 %114, -1, !dbg !4211
  %116 = add i32 %115, %112, !dbg !4211
  %117 = sub i32 0, %112, !dbg !4211
  %118 = and i32 %116, %117, !dbg !4211
  %119 = inttoptr i32 %118 to i8*, !dbg !4212
  call void @llvm.dbg.value(metadata i8* %119, metadata !4079, metadata !DIExpression()), !dbg !4140
  br i1 %22, label %124, label %120, !dbg !4213

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4215
  %122 = add i32 %121, %118, !dbg !4216
  %123 = icmp ugt i32 %122, %196, !dbg !4217
  br i1 %123, label %320, label %124, !dbg !4218

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4219

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4212
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4220
  call void @llvm.dbg.value(metadata i8* %127, metadata !4077, metadata !DIExpression()), !dbg !4140
  %128 = bitcast i8* %41 to i8**, !dbg !4220
  %129 = load i8*, i8** %128, align 4, !dbg !4220
  call void @llvm.dbg.value(metadata i8* %129, metadata !4090, metadata !DIExpression()), !dbg !4140
  br label %130, !dbg !4221

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4140
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4222
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4140
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4223
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4140
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !4140
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4140
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4140
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4140
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4140
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4224
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4077, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %142, metadata !4074, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %141, metadata !4076, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %140, metadata !4079, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %139, metadata !4080, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %138, metadata !4081, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %137, metadata !4085, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %136, metadata !4093, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %135, metadata !4086, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8 poison, metadata !4091, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %133, metadata !4090, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %132, metadata !4088, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %131, metadata !4087, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.label(metadata !4139), !dbg !4226
  br i1 %22, label %146, label %144, !dbg !4227

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4228
  store i8* %133, i8** %145, align 4, !dbg !4231
  br label %146, !dbg !4232

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4233
  call void @llvm.dbg.value(metadata i32 %147, metadata !4093, metadata !DIExpression()), !dbg !4140
  %148 = icmp sgt i32 %136, 0, !dbg !4234
  br i1 %148, label %152, label %149, !dbg !4235

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #27, !dbg !4236
  %151 = zext i1 %150 to i32, !dbg !4236
  br label %152, !dbg !4235

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4235
  %154 = icmp eq i32 %153, 0, !dbg !4235
  call void @llvm.dbg.value(metadata i1 %154, metadata !4117, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4237
  call void @llvm.dbg.value(metadata i1 %36, metadata !4120, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4237
  %155 = or i1 %36, %154, !dbg !4238
  br i1 %155, label %156, label %192, !dbg !4238

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4239
  %158 = sub i32 %157, %17, !dbg !4239
  %159 = lshr i32 %158, 2, !dbg !4240
  call void @llvm.dbg.value(metadata i32 %159, metadata !4121, metadata !DIExpression()), !dbg !4241
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4242
  br i1 %161, label %162, label %163, !dbg !4242

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 635) #26, !dbg !4244
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.33, i32 0, i32 0)) #26, !dbg !4244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 635) #26, !dbg !4244
  unreachable, !dbg !4244

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4249
  br i1 %164, label %165, label %166, !dbg !4251

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 640) #26, !dbg !4252
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.34, i32 0, i32 0)) #26, !dbg !4252
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 640) #26, !dbg !4252
  unreachable, !dbg !4252

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4257

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4258
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4261
  store i8 %168, i8* %169, align 1, !dbg !4262
  %170 = trunc i32 %132 to i8, !dbg !4263
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4264
  store i8 %170, i8* %171, align 1, !dbg !4265
  br i1 %154, label %175, label %172, !dbg !4266

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4267
  store i8 %173, i8* %169, align 1, !dbg !4267
  %174 = add i32 %131, 1, !dbg !4270
  call void @llvm.dbg.value(metadata i32 %174, metadata !4087, metadata !DIExpression()), !dbg !4140
  br label %187, !dbg !4271

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %176, metadata !4086, metadata !DIExpression()), !dbg !4140
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4274

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4275
  call void @llvm.dbg.value(metadata i32 %179, metadata !4074, metadata !DIExpression()), !dbg !4140
  br label %187, !dbg !4278

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4279

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4280
  call void @llvm.dbg.value(metadata i32 %182, metadata !4074, metadata !DIExpression()), !dbg !4140
  br label %187, !dbg !4283

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #26, !dbg !4284
  %185 = add i32 %142, 2, !dbg !4286
  %186 = add i32 %185, %184, !dbg !4287
  call void @llvm.dbg.value(metadata i32 %186, metadata !4074, metadata !DIExpression()), !dbg !4140
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !4140
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !4140
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !4140
  call void @llvm.dbg.value(metadata i32 %190, metadata !4074, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %189, metadata !4086, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %188, metadata !4087, metadata !DIExpression()), !dbg !4140
  %191 = add nuw nsw i32 %137, 1, !dbg !4288
  call void @llvm.dbg.value(metadata i32 %191, metadata !4085, metadata !DIExpression()), !dbg !4140
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !4140
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4223
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !4140
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4224
  call void @llvm.dbg.value(metadata i32 %196, metadata !4074, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %195, metadata !4085, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %194, metadata !4086, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %193, metadata !4087, metadata !DIExpression()), !dbg !4140
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4289
  call void @llvm.dbg.value(metadata i8* %197, metadata !4079, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %143, metadata !4077, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %141, metadata !4076, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %139, metadata !4080, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %138, metadata !4081, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8 poison, metadata !4094, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8 poison, metadata !4091, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %132, metadata !4088, metadata !DIExpression()), !dbg !4140
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4172
  call void @llvm.dbg.value(metadata i8* %198, metadata !4076, metadata !DIExpression()), !dbg !4140
  %199 = load i8, i8* %198, align 1, !dbg !4174
  %200 = icmp eq i8 %199, 0, !dbg !4175
  br i1 %200, label %226, label %63, !dbg !4176

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4290

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4291
  call void @llvm.dbg.value(metadata i8* %203, metadata !4077, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 undef, metadata !4124, metadata !DIExpression()), !dbg !4292
  br i1 %22, label %219, label %204, !dbg !4293

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4291
  %206 = load i32, i32* %205, align 4, !dbg !4291
  call void @llvm.dbg.value(metadata i32 %206, metadata !4124, metadata !DIExpression()), !dbg !4292
  %207 = inttoptr i32 %118 to i32*, !dbg !4294
  store i32 %206, i32* %207, align 4, !dbg !4297
  br label %219, !dbg !4298

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4299
  %210 = add i32 %209, 7, !dbg !4299
  %211 = and i32 %210, -8, !dbg !4299
  %212 = inttoptr i32 %211 to i8*, !dbg !4299
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4299
  call void @llvm.dbg.value(metadata i8* %213, metadata !4077, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i64 undef, metadata !4130, metadata !DIExpression()), !dbg !4300
  br i1 %22, label %219, label %214, !dbg !4301

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4299
  %216 = load i64, i64* %215, align 8, !dbg !4299
  call void @llvm.dbg.value(metadata i64 %216, metadata !4130, metadata !DIExpression()), !dbg !4300
  %217 = inttoptr i32 %118 to i64*, !dbg !4302
  store i64 %216, i64* %217, align 8, !dbg !4307
  br label %219, !dbg !4308

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 709) #26, !dbg !4309
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.35, i32 0, i32 0), i32 noundef %113) #26, !dbg !4309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 709) #26, !dbg !4309
  unreachable, !dbg !4309

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4314
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4314
  call void @llvm.dbg.value(metadata i8* %221, metadata !4077, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %40, metadata !4076, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %222, metadata !4079, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %113, metadata !4080, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %112, metadata !4081, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8 poison, metadata !4094, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8 poison, metadata !4091, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %72, metadata !4088, metadata !DIExpression()), !dbg !4140
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4172
  call void @llvm.dbg.value(metadata i8* %223, metadata !4076, metadata !DIExpression()), !dbg !4140
  %224 = load i8, i8* %223, align 1, !dbg !4174
  %225 = icmp eq i8 %224, 0, !dbg !4175
  br i1 %225, label %226, label %38, !dbg !4176

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4315
  %228 = ptrtoint i8* %227 to i32, !dbg !4316
  %229 = sub i32 %228, %17, !dbg !4316
  %230 = lshr i32 %229, 2, !dbg !4318
  %231 = icmp ugt i32 %229, 1023, !dbg !4319
  br i1 %231, label %232, label %233, !dbg !4320

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 721) #26, !dbg !4321
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.36, i32 0, i32 0)) #26, !dbg !4321
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 721) #26, !dbg !4321
  unreachable, !dbg !4321

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4326

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4327
  %236 = add i32 %235, %229, !dbg !4330
  br label %320, !dbg !4331

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4332
  store i8 %238, i8* %0, align 1, !dbg !4333
  %239 = trunc i32 %194 to i8, !dbg !4334
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4336
  store i8 %240, i8* %242, align 1, !dbg !4338
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4339
  store i8 %241, i8* %243, align 1, !dbg !4340
  %244 = trunc i32 %193 to i8, !dbg !4341
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4342
  store i8 %244, i8* %245, align 1, !dbg !4343
  %246 = icmp eq i32 %193, 0, !dbg !4344
  %247 = xor i1 %246, true, !dbg !4345
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4345
  call void @llvm.dbg.value(metadata i8* %227, metadata !4079, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 0, metadata !4089, metadata !DIExpression()), !dbg !4140
  br i1 %249, label %250, label %269, !dbg !4345

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4346

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !4079, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %254, metadata !4089, metadata !DIExpression()), !dbg !4140
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4347
  %256 = load i8, i8* %255, align 1, !dbg !4347
  %257 = icmp sgt i8 %256, -1, !dbg !4349
  br i1 %257, label %265, label %258, !dbg !4350

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !4133, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4351
  %259 = ptrtoint i8* %253 to i32, !dbg !4352
  %260 = add i32 %251, %259, !dbg !4354
  %261 = icmp ugt i32 %260, %196, !dbg !4355
  br i1 %261, label %320, label %262, !dbg !4356

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4357
  call void @llvm.dbg.value(metadata i8 %263, metadata !4133, metadata !DIExpression()), !dbg !4351
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4358
  call void @llvm.dbg.value(metadata i8* %264, metadata !4079, metadata !DIExpression()), !dbg !4140
  store i8 %263, i8* %253, align 1, !dbg !4359
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4289
  call void @llvm.dbg.value(metadata i8* %266, metadata !4079, metadata !DIExpression()), !dbg !4140
  %267 = add nuw i32 %254, 1, !dbg !4360
  call void @llvm.dbg.value(metadata i32 %267, metadata !4089, metadata !DIExpression()), !dbg !4140
  %268 = icmp eq i32 %267, %195, !dbg !4361
  br i1 %268, label %269, label %252, !dbg !4346, !llvm.loop !4362

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4289
  call void @llvm.dbg.value(metadata i8* %270, metadata !4079, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 0, metadata !4089, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %133, metadata !4090, metadata !DIExpression()), !dbg !4140
  %271 = icmp eq i32 %195, 0, !dbg !4364
  br i1 %271, label %316, label %272, !dbg !4367

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4367

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !4079, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %276, metadata !4090, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %277, metadata !4089, metadata !DIExpression()), !dbg !4140
  br i1 %246, label %282, label %278, !dbg !4368

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4371
  %280 = load i8, i8* %279, align 1, !dbg !4371
  %281 = icmp sgt i8 %280, -1, !dbg !4372
  br i1 %281, label %282, label %311, !dbg !4373

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4374

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !4080, metadata !DIExpression()), !dbg !4140
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4375
  %285 = load i8, i8* %284, align 1, !dbg !4375
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4378
  call void @llvm.dbg.value(metadata i8* %286, metadata !4079, metadata !DIExpression()), !dbg !4140
  store i8 %285, i8* %275, align 1, !dbg !4379
  br label %297, !dbg !4380

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4381
  %289 = load i8, i8* %288, align 1, !dbg !4381
  %290 = zext i8 %289 to i32, !dbg !4381
  %291 = shl nuw nsw i32 %290, 2, !dbg !4383
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4384
  %293 = bitcast i8* %292 to i8**, !dbg !4385
  %294 = load i8*, i8** %293, align 4, !dbg !4385
  call void @llvm.dbg.value(metadata i8* %294, metadata !4090, metadata !DIExpression()), !dbg !4140
  store i8* null, i8** %293, align 4, !dbg !4386
  %295 = tail call i32 @strlen(i8* noundef %294) #26, !dbg !4387
  %296 = add i32 %295, 1, !dbg !4388
  call void @llvm.dbg.value(metadata i32 %296, metadata !4080, metadata !DIExpression()), !dbg !4140
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !4140
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4389
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !4140
  call void @llvm.dbg.value(metadata i8* %300, metadata !4079, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %299, metadata !4080, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %298, metadata !4090, metadata !DIExpression()), !dbg !4140
  %301 = ptrtoint i8* %300 to i32, !dbg !4390
  %302 = add i32 %273, %299, !dbg !4392
  %303 = add i32 %302, %301, !dbg !4393
  %304 = icmp ugt i32 %303, %196, !dbg !4394
  br i1 %304, label %320, label %305, !dbg !4395

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4396
  %307 = load i8, i8* %306, align 1, !dbg !4396
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4397
  call void @llvm.dbg.value(metadata i8* %308, metadata !4079, metadata !DIExpression()), !dbg !4140
  store i8 %307, i8* %300, align 1, !dbg !4398
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #26, !dbg !4399
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4400
  call void @llvm.dbg.value(metadata i8* %310, metadata !4079, metadata !DIExpression()), !dbg !4140
  br label %311, !dbg !4401

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4402
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !4140
  call void @llvm.dbg.value(metadata i8* %313, metadata !4079, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i8* %312, metadata !4090, metadata !DIExpression()), !dbg !4140
  %314 = add nuw i32 %277, 1, !dbg !4403
  call void @llvm.dbg.value(metadata i32 %314, metadata !4089, metadata !DIExpression()), !dbg !4140
  %315 = icmp eq i32 %314, %195, !dbg !4364
  br i1 %315, label %316, label %274, !dbg !4367, !llvm.loop !4404

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4289
  %318 = ptrtoint i8* %317 to i32, !dbg !4406
  %319 = sub i32 %318, %17, !dbg !4406
  br label %320, !dbg !4407

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4408
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4408
  ret i32 %321, !dbg !4408
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4409 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4413, metadata !DIExpression()), !dbg !4414
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #27, !dbg !4415
  ret i1 %2, !dbg !4416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4417 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4422, metadata !DIExpression()), !dbg !4423
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4424
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4425
  %4 = and i1 %2, %3, !dbg !4425
  ret i1 %4, !dbg !4426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4427 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4431, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.value(metadata i32 %1, metadata !4432, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.value(metadata i32 %2, metadata !4433, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.value(metadata i8* %3, metadata !4434, metadata !DIExpression()), !dbg !4437
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4438
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4438
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4435, metadata !DIExpression()), !dbg !4439
  call void @llvm.va_start(i8* nonnull %6), !dbg !4440
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4441
  %8 = load i32, i32* %7, align 4, !dbg !4441
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4441
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #27, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %10, metadata !4436, metadata !DIExpression()), !dbg !4437
  call void @llvm.va_end(i8* nonnull %6), !dbg !4442
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4443
  ret i32 %10, !dbg !4444
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4445 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4457, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4458, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata i8* %2, metadata !4459, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata i8* %3, metadata !4460, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata i8* %3, metadata !4461, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata i8* %3, metadata !4462, metadata !DIExpression()), !dbg !4476
  %5 = icmp eq i8* %3, null, !dbg !4477
  br i1 %5, label %45, label %6, !dbg !4479

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4471, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4476
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4480
  %8 = load i8, i8* %7, align 1, !dbg !4480
  %9 = zext i8 %8 to i32, !dbg !4481
  call void @llvm.dbg.value(metadata i32 %9, metadata !4472, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata i8 undef, metadata !4473, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4476
  call void @llvm.dbg.value(metadata i8 undef, metadata !4474, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4476
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4476
  call void @llvm.dbg.value(metadata i32 0, metadata !4470, metadata !DIExpression()), !dbg !4476
  %10 = icmp eq i8 %8, 0, !dbg !4482
  br i1 %10, label %39, label %11, !dbg !4485

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4486
  call void @llvm.dbg.value(metadata i8 %12, metadata !4471, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4476
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4476
  %13 = zext i8 %12 to i32, !dbg !4487
  call void @llvm.dbg.value(metadata i32 %13, metadata !4471, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4476
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4476
  %14 = shl nuw nsw i32 %13, 2, !dbg !4488
  call void @llvm.dbg.value(metadata i32 %14, metadata !4471, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4476
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4489
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4476
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4490
  %17 = load i8, i8* %16, align 1, !dbg !4490
  call void @llvm.dbg.value(metadata i8 %17, metadata !4473, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4476
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4476
  %18 = zext i8 %17 to i32, !dbg !4491
  call void @llvm.dbg.value(metadata i32 %18, metadata !4473, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4476
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4492
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4476
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4493
  %21 = load i8, i8* %20, align 1, !dbg !4493
  call void @llvm.dbg.value(metadata i8 %21, metadata !4474, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4476
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4476
  %22 = zext i8 %21 to i32, !dbg !4494
  call void @llvm.dbg.value(metadata i32 %22, metadata !4474, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4476
  %23 = shl nuw nsw i32 %22, 1, !dbg !4495
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4476
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4496
  call void @llvm.dbg.value(metadata i8* %24, metadata !4468, metadata !DIExpression()), !dbg !4476
  br label %25, !dbg !4485

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4468, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata i32 %27, metadata !4470, metadata !DIExpression()), !dbg !4476
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4497
  call void @llvm.dbg.value(metadata i8* %28, metadata !4468, metadata !DIExpression()), !dbg !4476
  %29 = load i8, i8* %26, align 1, !dbg !4499
  %30 = zext i8 %29 to i32, !dbg !4499
  call void @llvm.dbg.value(metadata i32 %30, metadata !4475, metadata !DIExpression()), !dbg !4476
  %31 = shl nuw nsw i32 %30, 2, !dbg !4500
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4501
  %33 = bitcast i8* %32 to i8**, !dbg !4502
  call void @llvm.dbg.value(metadata i8** %33, metadata !4469, metadata !DIExpression()), !dbg !4476
  store i8* %28, i8** %33, align 4, !dbg !4503
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #26, !dbg !4504
  %35 = add i32 %34, 1, !dbg !4505
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4506
  call void @llvm.dbg.value(metadata i8* %36, metadata !4468, metadata !DIExpression()), !dbg !4476
  %37 = add nuw nsw i32 %27, 1, !dbg !4507
  call void @llvm.dbg.value(metadata i32 %37, metadata !4470, metadata !DIExpression()), !dbg !4476
  %38 = icmp eq i32 %37, %9, !dbg !4482
  br i1 %38, label %39, label %25, !dbg !4485, !llvm.loop !4508

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4510
  call void @llvm.dbg.value(metadata i8* %40, metadata !4461, metadata !DIExpression()), !dbg !4476
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4511
  %42 = bitcast i8* %41 to i8**, !dbg !4511
  %43 = load i8*, i8** %42, align 1, !dbg !4511
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #27, !dbg !4512
  br label %45, !dbg !4513

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4476
  ret i32 %46, !dbg !4514
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4515 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4519, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4520, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i8* %2, metadata !4521, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i8* %3, metadata !4522, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i8* %4, metadata !4523, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i8* %4, metadata !4524, metadata !DIExpression()), !dbg !4529
  %6 = ptrtoint i8* %4 to i32, !dbg !4530
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4530
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #26, !dbg !4530
  ret i32 %8, !dbg !4531
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !4532 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4536, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i32 %1, metadata !4537, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i8 0, metadata !4539, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i32 0, metadata !4540, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i8 poison, metadata !4539, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i8* %0, metadata !4536, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4541
  %3 = load i8, i8* %0, align 1, !dbg !4542
  call void @llvm.dbg.value(metadata i8 %3, metadata !4538, metadata !DIExpression()), !dbg !4541
  %4 = icmp eq i8 %3, 0, !dbg !4543
  br i1 %4, label %29, label %5, !dbg !4544

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4545
  call void @llvm.dbg.value(metadata i32 %8, metadata !4540, metadata !DIExpression()), !dbg !4541
  br i1 %9, label %11, label %22, !dbg !4546

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4548
  br i1 %12, label %13, label %17, !dbg !4552

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4553
  br i1 %14, label %29, label %15, !dbg !4556

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4557
  br i1 %16, label %29, label %22, !dbg !4559

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4560
  %19 = xor i1 %18, true, !dbg !4562
  %20 = zext i1 %18 to i32, !dbg !4562
  %21 = add nsw i32 %8, %20, !dbg !4562
  br label %22, !dbg !4562

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4541
  call void @llvm.dbg.value(metadata i32 %24, metadata !4540, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i8 poison, metadata !4539, metadata !DIExpression()), !dbg !4541
  %25 = icmp eq i8 %6, 37, !dbg !4563
  %26 = xor i1 %25, %23, !dbg !4565
  call void @llvm.dbg.value(metadata i8* %10, metadata !4536, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i8* %10, metadata !4536, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4541
  %27 = load i8, i8* %10, align 1, !dbg !4542
  call void @llvm.dbg.value(metadata i8 %27, metadata !4538, metadata !DIExpression()), !dbg !4541
  %28 = icmp eq i8 %27, 0, !dbg !4543
  br i1 %28, label %29, label %5, !dbg !4544, !llvm.loop !4566

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4541
  ret i1 %30, !dbg !4568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4569 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4573, metadata !DIExpression()), !dbg !4574
  %2 = add i8 %0, -64, !dbg !4575
  %3 = icmp ult i8 %2, 59, !dbg !4575
  ret i1 %3, !dbg !4576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4577 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4585, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 %1, metadata !4586, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4587, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i8* %3, metadata !4588, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 %4, metadata !4589, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i16* %5, metadata !4590, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 %6, metadata !4591, metadata !DIExpression()), !dbg !4654
  %11 = icmp eq i8* %0, null, !dbg !4655
  br i1 %11, label %12, label %13, !dbg !4658

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 916) #26, !dbg !4659
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 916) #26, !dbg !4659
  unreachable, !dbg !4659

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4592, metadata !DIExpression()), !dbg !4654
  %14 = bitcast i8* %0 to i32*, !dbg !4661
  call void @llvm.dbg.value(metadata i32* %14, metadata !4593, metadata !DIExpression()), !dbg !4654
  %15 = and i32 %4, 8, !dbg !4662
  %16 = icmp eq i32 %15, 0, !dbg !4663
  call void @llvm.dbg.value(metadata i1 %16, metadata !4597, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4654
  call void @llvm.dbg.value(metadata i8* %0, metadata !4600, metadata !DIExpression()), !dbg !4654
  %17 = icmp eq i32 %1, 0, !dbg !4664
  br i1 %17, label %18, label %20, !dbg !4665

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #27, !dbg !4666
  br label %20, !dbg !4665

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4665
  call void @llvm.dbg.value(metadata i32 %21, metadata !4586, metadata !DIExpression()), !dbg !4654
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4667
  %23 = load i8, i8* %22, align 1, !dbg !4667
  %24 = zext i8 %23 to i32, !dbg !4668
  call void @llvm.dbg.value(metadata i32 %24, metadata !4595, metadata !DIExpression()), !dbg !4654
  %25 = icmp ne i8 %23, 0, !dbg !4669
  %26 = and i32 %4, 1, !dbg !4670
  %27 = icmp ne i32 %26, 0, !dbg !4670
  %28 = and i1 %27, %25, !dbg !4670
  call void @llvm.dbg.value(metadata i1 %28, metadata !4599, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4654
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4671
  %30 = load i8, i8* %29, align 1, !dbg !4671
  %31 = zext i8 %30 to i32, !dbg !4672
  call void @llvm.dbg.value(metadata i32 %31, metadata !4596, metadata !DIExpression()), !dbg !4654
  %32 = icmp ne i8 %30, 0, !dbg !4673
  %33 = and i32 %4, 2, !dbg !4674
  %34 = icmp ne i32 %33, 0, !dbg !4674
  %35 = and i1 %34, %32, !dbg !4674
  call void @llvm.dbg.value(metadata i1 %35, metadata !4598, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4654
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4675
  br i1 %36, label %41, label %37, !dbg !4675

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4677
  br i1 %38, label %287, label %39, !dbg !4680

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #26, !dbg !4681
  br label %287, !dbg !4683

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4684
  %43 = zext i8 %42 to i32, !dbg !4685
  %44 = shl nuw nsw i32 %43, 2, !dbg !4686
  call void @llvm.dbg.value(metadata i32 %44, metadata !4594, metadata !DIExpression()), !dbg !4654
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4687
  %46 = bitcast i8* %45 to i8**, !dbg !4688
  %47 = load i8*, i8** %46, align 4, !dbg !4688
  call void @llvm.dbg.value(metadata i8* %47, metadata !4603, metadata !DIExpression()), !dbg !4654
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4689
  call void @llvm.dbg.value(metadata i8* %48, metadata !4604, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 0, metadata !4605, metadata !DIExpression()), !dbg !4654
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4690
  br i1 %49, label %50, label %135, !dbg !4691

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4602, metadata !DIExpression()), !dbg !4654
  br i1 %28, label %51, label %76, !dbg !4692

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4602, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i8* %48, metadata !4604, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 0, metadata !4605, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 0, metadata !4606, metadata !DIExpression()), !dbg !4693
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4694

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4602, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i8* %55, metadata !4604, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 %56, metadata !4605, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 %57, metadata !4606, metadata !DIExpression()), !dbg !4693
  %58 = load i8, i8* %55, align 1, !dbg !4695
  %59 = zext i8 %58 to i32, !dbg !4696
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4696
  %61 = bitcast i32* %60 to i8**, !dbg !4697
  %62 = load i8*, i8** %61, align 4, !dbg !4697
  call void @llvm.dbg.value(metadata i8* %62, metadata !4612, metadata !DIExpression()), !dbg !4698
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #27, !dbg !4699
  call void @llvm.dbg.value(metadata i32 %63, metadata !4615, metadata !DIExpression()), !dbg !4698
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4700
  br i1 %65, label %66, label %70, !dbg !4700

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4702
  %68 = add nuw i32 %56, 1, !dbg !4704
  call void @llvm.dbg.value(metadata i32 %68, metadata !4605, metadata !DIExpression()), !dbg !4654
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4705
  store i16 %67, i16* %69, align 2, !dbg !4706
  br label %70, !dbg !4707

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4654
  call void @llvm.dbg.value(metadata i32 %71, metadata !4605, metadata !DIExpression()), !dbg !4654
  %72 = add nsw i32 %63, %54, !dbg !4708
  call void @llvm.dbg.value(metadata i32 %72, metadata !4602, metadata !DIExpression()), !dbg !4654
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4709
  call void @llvm.dbg.value(metadata i8* %73, metadata !4604, metadata !DIExpression()), !dbg !4654
  %74 = add nuw nsw i32 %57, 1, !dbg !4710
  call void @llvm.dbg.value(metadata i32 %74, metadata !4606, metadata !DIExpression()), !dbg !4693
  %75 = icmp eq i32 %74, %24, !dbg !4711
  br i1 %75, label %82, label %53, !dbg !4694, !llvm.loop !4712

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4714
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4714
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4714
  br label %82, !dbg !4714

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4717
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4654
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4718
  call void @llvm.dbg.value(metadata i1 undef, metadata !4616, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4719
  call void @llvm.dbg.value(metadata i32 0, metadata !4617, metadata !DIExpression()), !dbg !4720
  call void @llvm.dbg.value(metadata i32 %85, metadata !4602, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i8* %84, metadata !4604, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 %83, metadata !4605, metadata !DIExpression()), !dbg !4654
  %86 = icmp eq i8 %30, 0, !dbg !4721
  br i1 %86, label %287, label %87, !dbg !4722

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4723
  %89 = icmp eq i32 %88, 0, !dbg !4724
  call void @llvm.dbg.value(metadata i1 %89, metadata !4616, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4719
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4722

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4602, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i8* %96, metadata !4604, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 %97, metadata !4605, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 %98, metadata !4617, metadata !DIExpression()), !dbg !4720
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4725
  call void @llvm.dbg.value(metadata i8* %99, metadata !4604, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i8 undef, metadata !4619, metadata !DIExpression()), !dbg !4726
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4727
  call void @llvm.dbg.value(metadata i8* %100, metadata !4604, metadata !DIExpression()), !dbg !4654
  %101 = load i8, i8* %99, align 1, !dbg !4728
  call void @llvm.dbg.value(metadata i8 %101, metadata !4622, metadata !DIExpression()), !dbg !4726
  %102 = zext i8 %101 to i32, !dbg !4729
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4729
  %104 = bitcast i32* %103 to i8**, !dbg !4730
  %105 = load i8*, i8** %104, align 4, !dbg !4730
  call void @llvm.dbg.value(metadata i8* %105, metadata !4623, metadata !DIExpression()), !dbg !4726
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #27, !dbg !4731
  call void @llvm.dbg.value(metadata i1 %106, metadata !4624, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4726
  br i1 %16, label %113, label %107, !dbg !4732

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4734
  call void @llvm.dbg.value(metadata i8 %108, metadata !4619, metadata !DIExpression()), !dbg !4726
  %109 = zext i8 %108 to i32, !dbg !4735
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #27, !dbg !4736
  br i1 %110, label %111, label %113, !dbg !4737

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.38, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #26, !dbg !4738
  %112 = add nsw i32 %95, -2, !dbg !4744
  call void @llvm.dbg.value(metadata i32 %112, metadata !4602, metadata !DIExpression()), !dbg !4654
  br label %130, !dbg !4745

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4746

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4747

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %116, metadata !4602, metadata !DIExpression()), !dbg !4654
  br label %130, !dbg !4752

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4753

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4650), !dbg !4754
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #27, !dbg !4755
  call void @llvm.dbg.value(metadata i32 %119, metadata !4625, metadata !DIExpression()), !dbg !4726
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4756
  br i1 %121, label %122, label %126, !dbg !4756

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4758
  %124 = add nuw i32 %97, 1, !dbg !4760
  call void @llvm.dbg.value(metadata i32 %124, metadata !4605, metadata !DIExpression()), !dbg !4654
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4761
  store i16 %123, i16* %125, align 2, !dbg !4762
  br label %126, !dbg !4763

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4654
  call void @llvm.dbg.value(metadata i32 %127, metadata !4605, metadata !DIExpression()), !dbg !4654
  %128 = add i32 %95, -1, !dbg !4764
  %129 = add i32 %128, %119, !dbg !4765
  call void @llvm.dbg.value(metadata i32 %129, metadata !4602, metadata !DIExpression()), !dbg !4654
  br label %130, !dbg !4766

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4654
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4726
  call void @llvm.dbg.value(metadata i32 %132, metadata !4602, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 %131, metadata !4605, metadata !DIExpression()), !dbg !4654
  %133 = add nuw nsw i32 %98, 1, !dbg !4767
  call void @llvm.dbg.value(metadata i8* %100, metadata !4604, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 %133, metadata !4617, metadata !DIExpression()), !dbg !4720
  %134 = icmp eq i32 %133, %31, !dbg !4721
  br i1 %134, label %287, label %94, !dbg !4722, !llvm.loop !4768

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4627, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4628, metadata !DIExpression()), !dbg !4771
  br i1 %28, label %136, label %138, !dbg !4772

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4629, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i8 0, metadata !4630, metadata !DIExpression()), !dbg !4654
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4773
  call void @llvm.dbg.value(metadata i8* %137, metadata !4631, metadata !DIExpression()), !dbg !4654
  br label %143, !dbg !4776

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4777
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4777

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4631, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i8 undef, metadata !4630, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i8 0, metadata !4629, metadata !DIExpression()), !dbg !4654
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #26, !dbg !4779
  br label %148, !dbg !4782

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4783
  call void @llvm.dbg.value(metadata i8* %151, metadata !4604, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 0, metadata !4633, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i8 %149, metadata !4630, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i8 %150, metadata !4629, metadata !DIExpression()), !dbg !4654
  %152 = icmp eq i8 %30, 0, !dbg !4785
  br i1 %152, label %153, label %155, !dbg !4786

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4787
  br label %160, !dbg !4786

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4786

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4787
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4788
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4789
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4654
  call void @llvm.dbg.value(metadata i8 undef, metadata !4626, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4654
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4790
  %166 = load i8, i8* %165, align 1, !dbg !4790
  %167 = zext i8 %162 to i32, !dbg !4791
  %168 = add i8 %166, %162, !dbg !4792
  call void @llvm.dbg.value(metadata i8 %168, metadata !4626, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4654
  %169 = icmp eq i32 %33, 0, !dbg !4793
  %170 = lshr i8 %163, 1, !dbg !4794
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4794
  call void @llvm.dbg.value(metadata i8 %171, metadata !4626, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4654
  %172 = icmp eq i32 %26, 0, !dbg !4795
  %173 = icmp eq i32 %161, 0, !dbg !4787
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4787
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4787
  call void @llvm.dbg.value(metadata i8 %175, metadata !4626, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4654
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4641, metadata !DIExpression()), !dbg !4796
  %176 = load i32, i32* %14, align 1, !dbg !4797
  store i8 %168, i8* %165, align 1, !dbg !4798
  store i8 %175, i8* %22, align 1, !dbg !4798
  store i8 %171, i8* %29, align 1, !dbg !4798
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #26, !dbg !4799
  call void @llvm.dbg.value(metadata i32 %177, metadata !4632, metadata !DIExpression()), !dbg !4654
  %178 = icmp slt i32 %177, 0, !dbg !4800
  br i1 %178, label %287, label %240, !dbg !4802

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4604, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 %181, metadata !4633, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i8 %182, metadata !4630, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i8 %183, metadata !4629, metadata !DIExpression()), !dbg !4654
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4803
  call void @llvm.dbg.value(metadata i8* %184, metadata !4604, metadata !DIExpression()), !dbg !4654
  %185 = load i8, i8* %180, align 1, !dbg !4804
  call void @llvm.dbg.value(metadata i8 %185, metadata !4635, metadata !DIExpression()), !dbg !4805
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4806
  call void @llvm.dbg.value(metadata i8* %186, metadata !4604, metadata !DIExpression()), !dbg !4654
  %187 = load i8, i8* %184, align 1, !dbg !4807
  call void @llvm.dbg.value(metadata i8 %187, metadata !4638, metadata !DIExpression()), !dbg !4805
  %188 = zext i8 %187 to i32, !dbg !4808
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4808
  %190 = bitcast i32* %189 to i8**, !dbg !4809
  %191 = load i8*, i8** %190, align 4, !dbg !4809
  call void @llvm.dbg.value(metadata i8* %191, metadata !4639, metadata !DIExpression()), !dbg !4805
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #27, !dbg !4810
  call void @llvm.dbg.value(metadata i1 %192, metadata !4640, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4805
  br i1 %16, label %196, label %193, !dbg !4811

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4813
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #27, !dbg !4814
  br i1 %195, label %235, label %196, !dbg !4815

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4816

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4817

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4820
  br i1 %199, label %201, label %200, !dbg !4825

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1086) #26, !dbg !4826
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1086) #26, !dbg !4826
  unreachable, !dbg !4826

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4820
  %203 = add nuw nsw i8 %183, 1, !dbg !4828
  call void @llvm.dbg.value(metadata i8 %203, metadata !4629, metadata !DIExpression()), !dbg !4654
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4829
  br label %231, !dbg !4830

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4831

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4832
  br i1 %207, label %209, label %208, !dbg !4837

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1089) #26, !dbg !4838
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1089) #26, !dbg !4838
  unreachable, !dbg !4838

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4832
  %211 = add nuw nsw i8 %182, 1, !dbg !4840
  call void @llvm.dbg.value(metadata i8 %211, metadata !4630, metadata !DIExpression()), !dbg !4654
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4841
  br label %231, !dbg !4842

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4843

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4845
  br i1 %215, label %217, label %216, !dbg !4850

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1096) #26, !dbg !4851
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1096) #26, !dbg !4851
  unreachable, !dbg !4851

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4845
  %219 = add nuw nsw i8 %183, 1, !dbg !4853
  call void @llvm.dbg.value(metadata i8 %219, metadata !4629, metadata !DIExpression()), !dbg !4654
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4854
  br label %231, !dbg !4855

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4856
  br i1 %222, label %224, label %223, !dbg !4860

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1099) #26, !dbg !4861
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1099) #26, !dbg !4861
  unreachable, !dbg !4861

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4856
  %226 = add nuw nsw i8 %182, 1, !dbg !4863
  call void @llvm.dbg.value(metadata i8 %226, metadata !4630, metadata !DIExpression()), !dbg !4654
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4864
  store i8 %185, i8* %227, align 1, !dbg !4865
  %228 = add nuw nsw i8 %182, 2, !dbg !4866
  call void @llvm.dbg.value(metadata i8 %228, metadata !4630, metadata !DIExpression()), !dbg !4654
  %229 = zext i8 %226 to i32, !dbg !4867
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4867
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4868
  br label %235, !dbg !4869

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4654
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4789
  call void @llvm.dbg.value(metadata i8 %237, metadata !4630, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i8 %236, metadata !4629, metadata !DIExpression()), !dbg !4654
  %238 = add nuw nsw i32 %181, 1, !dbg !4869
  call void @llvm.dbg.value(metadata i8* %186, metadata !4604, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 %238, metadata !4633, metadata !DIExpression()), !dbg !4784
  %239 = icmp eq i32 %238, %31, !dbg !4785
  br i1 %239, label %160, label %179, !dbg !4786, !llvm.loop !4870

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4794
  call void @llvm.dbg.value(metadata i32 %177, metadata !4602, metadata !DIExpression()), !dbg !4654
  store i32 %176, i32* %14, align 1, !dbg !4872
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4873
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #26, !dbg !4874
  call void @llvm.dbg.value(metadata i32 %243, metadata !4632, metadata !DIExpression()), !dbg !4654
  %244 = icmp slt i32 %243, 0, !dbg !4875
  br i1 %244, label %287, label %245, !dbg !4877

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4654
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4878
  %248 = add nuw nsw i32 %44, %24, !dbg !4878
  %249 = sub i32 %247, %248, !dbg !4878
  call void @llvm.dbg.value(metadata i32 %249, metadata !4642, metadata !DIExpression()), !dbg !4654
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #26, !dbg !4879
  call void @llvm.dbg.value(metadata i32 %250, metadata !4632, metadata !DIExpression()), !dbg !4654
  %251 = icmp slt i32 %250, 0, !dbg !4880
  br i1 %251, label %287, label %252, !dbg !4882

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4883
  call void @llvm.dbg.value(metadata i32 %253, metadata !4602, metadata !DIExpression()), !dbg !4654
  %254 = add nuw nsw i32 %253, %250, !dbg !4884
  call void @llvm.dbg.value(metadata i32 %254, metadata !4602, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32 0, metadata !4643, metadata !DIExpression()), !dbg !4885
  %255 = icmp eq i8 %162, 0, !dbg !4886
  br i1 %255, label %284, label %256, !dbg !4887

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4887

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4643, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata i32 %260, metadata !4602, metadata !DIExpression()), !dbg !4654
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4888
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4889
  %262 = load i8, i8* %261, align 1, !dbg !4889
  call void @llvm.dbg.value(metadata i8 %262, metadata !4645, metadata !DIExpression()), !dbg !4890
  store i8 %262, i8* %10, align 1, !dbg !4891
  %263 = zext i8 %262 to i32, !dbg !4892
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4892
  %265 = bitcast i32* %264 to i8**, !dbg !4893
  %266 = load i8*, i8** %265, align 4, !dbg !4893
  call void @llvm.dbg.value(metadata i8* %266, metadata !4648, metadata !DIExpression()), !dbg !4890
  br i1 %257, label %270, label %267, !dbg !4894

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4895
  %269 = load i16, i16* %268, align 2, !dbg !4895
  br label %270, !dbg !4894

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4894
  call void @llvm.dbg.value(metadata i32 undef, metadata !4649, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4890
  call void @llvm.dbg.value(metadata i8* %10, metadata !4645, metadata !DIExpression(DW_OP_deref)), !dbg !4890
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #26, !dbg !4896
  call void @llvm.dbg.value(metadata i32 %272, metadata !4632, metadata !DIExpression()), !dbg !4654
  %273 = icmp slt i32 %272, 0, !dbg !4897
  br i1 %273, label %277, label %274, !dbg !4899

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4649, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4654
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #27, !dbg !4900
  call void @llvm.dbg.value(metadata i32 %275, metadata !4632, metadata !DIExpression()), !dbg !4654
  %276 = icmp slt i32 %275, 0, !dbg !4901
  br i1 %276, label %277, label %279, !dbg !4903

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4602, metadata !DIExpression()), !dbg !4654
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4904
  call void @llvm.dbg.value(metadata i32 undef, metadata !4602, metadata !DIExpression()), !dbg !4654
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4905
  call void @llvm.dbg.value(metadata i32 %280, metadata !4602, metadata !DIExpression()), !dbg !4654
  %281 = add nsw i32 %280, %275, !dbg !4906
  call void @llvm.dbg.value(metadata i32 %281, metadata !4602, metadata !DIExpression()), !dbg !4654
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4904
  %282 = add nuw nsw i32 %259, 1, !dbg !4907
  call void @llvm.dbg.value(metadata i32 %282, metadata !4643, metadata !DIExpression()), !dbg !4885
  %283 = icmp eq i32 %282, %167, !dbg !4886
  br i1 %283, label %284, label %258, !dbg !4887, !llvm.loop !4908

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4884
  call void @llvm.dbg.value(metadata i32 %285, metadata !4602, metadata !DIExpression()), !dbg !4654
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #26, !dbg !4910
  br label %287, !dbg !4911

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4654
  ret i32 %288, !dbg !4912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4913 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4917, metadata !DIExpression()), !dbg !4925
  %2 = icmp eq i8* %0, null, !dbg !4926
  br i1 %2, label %3, label %4, !dbg !4929

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 198) #26, !dbg !4930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 198) #26, !dbg !4930
  unreachable, !dbg !4930

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4918, metadata !DIExpression()), !dbg !4925
  call void @llvm.dbg.value(metadata i8* %0, metadata !4919, metadata !DIExpression()), !dbg !4925
  %5 = load i8, i8* %0, align 1, !dbg !4932
  %6 = zext i8 %5 to i32, !dbg !4932
  %7 = shl nuw nsw i32 %6, 2, !dbg !4933
  call void @llvm.dbg.value(metadata i32 %7, metadata !4920, metadata !DIExpression()), !dbg !4925
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4934
  %9 = load i8, i8* %8, align 1, !dbg !4934
  %10 = zext i8 %9 to i32, !dbg !4934
  call void @llvm.dbg.value(metadata i32 %10, metadata !4921, metadata !DIExpression()), !dbg !4925
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4935
  %12 = load i8, i8* %11, align 1, !dbg !4935
  %13 = zext i8 %12 to i32, !dbg !4935
  call void @llvm.dbg.value(metadata i32 %13, metadata !4922, metadata !DIExpression()), !dbg !4925
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4936
  call void @llvm.dbg.value(metadata i8* %14, metadata !4918, metadata !DIExpression()), !dbg !4925
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4937
  call void @llvm.dbg.value(metadata i8* %15, metadata !4918, metadata !DIExpression()), !dbg !4925
  call void @llvm.dbg.value(metadata i32 0, metadata !4923, metadata !DIExpression()), !dbg !4938
  %16 = icmp eq i8 %9, 0, !dbg !4939
  br i1 %16, label %17, label %22, !dbg !4941

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4925
  %19 = ptrtoint i8* %18 to i32, !dbg !4942
  %20 = ptrtoint i8* %0 to i32, !dbg !4942
  %21 = sub i32 %19, %20, !dbg !4942
  ret i32 %21, !dbg !4943

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4923, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i8* %24, metadata !4918, metadata !DIExpression()), !dbg !4925
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4944
  call void @llvm.dbg.value(metadata i8* %25, metadata !4918, metadata !DIExpression()), !dbg !4925
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #26, !dbg !4946
  %27 = add i32 %26, 1, !dbg !4947
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4948
  call void @llvm.dbg.value(metadata i8* %28, metadata !4918, metadata !DIExpression()), !dbg !4925
  %29 = add nuw nsw i32 %23, 1, !dbg !4949
  call void @llvm.dbg.value(metadata i32 %29, metadata !4923, metadata !DIExpression()), !dbg !4938
  %30 = icmp eq i32 %29, %10, !dbg !4939
  br i1 %30, label %17, label %22, !dbg !4941, !llvm.loop !4950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4952 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4956, metadata !DIExpression()), !dbg !4960
  call void @llvm.dbg.value(metadata i8* %1, metadata !4957, metadata !DIExpression()), !dbg !4960
  call void @llvm.dbg.value(metadata i8* %2, metadata !4958, metadata !DIExpression()), !dbg !4960
  call void @llvm.dbg.value(metadata i16 %3, metadata !4959, metadata !DIExpression()), !dbg !4960
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4961
  br i1 %5, label %6, label %9, !dbg !4963

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !4964
  %8 = add i32 %7, 1, !dbg !4966
  br label %20, !dbg !4967

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4968
  br i1 %10, label %13, label %11, !dbg !4969

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4969
  br label %16, !dbg !4969

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !4970
  %15 = add i32 %14, 1, !dbg !4971
  br label %16, !dbg !4969

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4969
  %18 = and i32 %17, 65535, !dbg !4972
  call void @llvm.dbg.value(metadata i32 %17, metadata !4959, metadata !DIExpression()), !dbg !4960
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #26, !dbg !4973
  br label %20, !dbg !4974

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4960
  ret i32 %21, !dbg !4975
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4978, metadata !DIExpression()), !dbg !4979
  ret i32 0, !dbg !4980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4981 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4985, metadata !DIExpression()), !dbg !4986
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4987
  ret void, !dbg !4988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4989 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4992
  ret i8* %1, !dbg !4993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4994 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5005, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i8* %0, metadata !5004, metadata !DIExpression()), !dbg !5014
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !5015
  ret void, !dbg !5017
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5022, metadata !DIExpression()), !dbg !5024
  call void @llvm.dbg.value(metadata i8* %1, metadata !5023, metadata !DIExpression()), !dbg !5024
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5025
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !5025
  ret i32 %4, !dbg !5026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5027 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5034, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5031, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i8* %1, metadata !5032, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i8* %2, metadata !5033, metadata !DIExpression()), !dbg !5035
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !5036
  ret void, !dbg !5037
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5038 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5042, metadata !DIExpression()), !dbg !5045
  call void @llvm.dbg.value(metadata i32 %1, metadata !5043, metadata !DIExpression()), !dbg !5045
  call void @llvm.dbg.value(metadata i32 0, metadata !5044, metadata !DIExpression()), !dbg !5045
  %3 = icmp eq i32 %1, 0, !dbg !5046
  br i1 %3, label %13, label %4, !dbg !5049

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5044, metadata !DIExpression()), !dbg !5045
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5050
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5052
  %8 = load i8, i8* %7, align 1, !dbg !5052
  %9 = zext i8 %8 to i32, !dbg !5052
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !5050
  %11 = add nuw i32 %5, 1, !dbg !5053
  call void @llvm.dbg.value(metadata i32 %11, metadata !5044, metadata !DIExpression()), !dbg !5045
  %12 = icmp eq i32 %11, %1, !dbg !5046
  br i1 %12, label %13, label %4, !dbg !5049, !llvm.loop !5054

13:                                               ; preds = %4, %2
  ret void, !dbg !5056
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5057 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5061, metadata !DIExpression()), !dbg !5063
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5064
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5064
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5062, metadata !DIExpression()), !dbg !5065
  call void @llvm.va_start(i8* nonnull %3), !dbg !5066
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5067
  %5 = load i32, i32* %4, align 4, !dbg !5067
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5067
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !5067
  call void @llvm.va_end(i8* nonnull %3), !dbg !5068
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5069
  ret void, !dbg !5069
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5070 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5074, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata i32 %1, metadata !5075, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata i8* %2, metadata !5076, metadata !DIExpression()), !dbg !5079
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5080
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5080
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5077, metadata !DIExpression()), !dbg !5081
  call void @llvm.va_start(i8* nonnull %5), !dbg !5082
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5083
  %7 = load i32, i32* %6, align 4, !dbg !5083
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5083
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !5083
  call void @llvm.dbg.value(metadata i32 %9, metadata !5078, metadata !DIExpression()), !dbg !5079
  call void @llvm.va_end(i8* nonnull %5), !dbg !5084
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5085
  ret i32 %9, !dbg !5086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5087 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5094, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i8* %0, metadata !5091, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i32 %1, metadata !5092, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i8* %2, metadata !5093, metadata !DIExpression()), !dbg !5101
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5102
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5102
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5095, metadata !DIExpression()), !dbg !5103
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5104
  store i8* %0, i8** %7, align 4, !dbg !5104
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5104
  store i32 %1, i32* %8, align 4, !dbg !5104
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5104
  store i32 0, i32* %9, align 4, !dbg !5104
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !5105
  %10 = load i32, i32* %9, align 4, !dbg !5106
  %11 = load i32, i32* %8, align 4, !dbg !5108
  %12 = icmp slt i32 %10, %11, !dbg !5109
  br i1 %12, label %13, label %15, !dbg !5110

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5111
  store i8 0, i8* %14, align 1, !dbg !5113
  br label %15, !dbg !5114

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5115
  ret i32 %10, !dbg !5116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !5117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5122, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5123, metadata !DIExpression()), !dbg !5124
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5125
  %4 = load i8*, i8** %3, align 4, !dbg !5125
  %5 = icmp eq i8* %4, null, !dbg !5127
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5128
  br i1 %5, label %12, label %8, !dbg !5129

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5130
  %10 = load i32, i32* %9, align 4, !dbg !5130
  %11 = icmp slt i32 %7, %10, !dbg !5131
  br i1 %11, label %15, label %12, !dbg !5132

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5133
  %14 = add nsw i32 %7, 1, !dbg !5135
  store i32 %14, i32* %13, align 4, !dbg !5135
  br label %25, !dbg !5136

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5137
  %17 = icmp eq i32 %7, %16, !dbg !5139
  br i1 %17, label %18, label %21, !dbg !5140

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5141
  store i32 %19, i32* %6, align 4, !dbg !5141
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5143
  store i8 0, i8* %20, align 1, !dbg !5144
  br label %25, !dbg !5145

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5146
  %23 = add nsw i32 %7, 1, !dbg !5148
  store i32 %23, i32* %6, align 4, !dbg !5148
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5149
  store i8 %22, i8* %24, align 1, !dbg !5150
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5151
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !5152 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5157, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.value(metadata i8* %1, metadata !5158, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.value(metadata i8* %2, metadata !5159, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.value(metadata i8* %3, metadata !5160, metadata !DIExpression()), !dbg !5161
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !5162
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !5163
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !5164
  unreachable, !dbg !5165
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !5166 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !5272
  ret %struct.k_thread* %1, !dbg !5273
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5274 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5279, metadata !DIExpression()), !dbg !5280
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5281, !srcloc !5283
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !5284
  ret void, !dbg !5285
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !5286 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5287, !srcloc !5289
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !5290
  ret %struct.k_thread* %1, !dbg !5291
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5292 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5303, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i8* %1, metadata !5304, metadata !DIExpression()), !dbg !5307
  %3 = icmp eq i8* %1, null, !dbg !5308
  br i1 %3, label %16, label %4, !dbg !5310

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5311
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5311
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5305, metadata !DIExpression()), !dbg !5307
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !5312, !range !5313
  call void @llvm.dbg.value(metadata i32 %7, metadata !5306, metadata !DIExpression()), !dbg !5307
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5314
  br i1 %8, label %10, label %9, !dbg !5317

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 176) #26, !dbg !5318
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.42, i32 0, i32 0), i8* noundef nonnull %1) #26, !dbg !5318
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 176) #26, !dbg !5318
  unreachable, !dbg !5318

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5320
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #27, !dbg !5320
  %13 = icmp eq i32 %12, %7, !dbg !5320
  br i1 %13, label %15, label %14, !dbg !5323

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 185) #26, !dbg !5324
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.44, i32 0, i32 0), i8* noundef nonnull %1) #26, !dbg !5324
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 185) #26, !dbg !5324
  unreachable, !dbg !5324

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !5326
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5327
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #4 !dbg !5329 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5333, metadata !DIExpression()), !dbg !5337
  call void @llvm.dbg.value(metadata i8* %1, metadata !5334, metadata !DIExpression()), !dbg !5337
  call void @llvm.dbg.value(metadata i8* %1, metadata !5335, metadata !DIExpression()), !dbg !5337
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5338
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5336, metadata !DIExpression()), !dbg !5337
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5339
  %5 = ptrtoint i8* %4 to i32, !dbg !5340
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5340
  %7 = sub i32 %5, %6, !dbg !5340
  %8 = lshr i32 %7, 3, !dbg !5341
  ret i32 %8, !dbg !5342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5343 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5347, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i32 %1, metadata !5348, metadata !DIExpression()), !dbg !5349
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5350
  %4 = and i32 %3, 1, !dbg !5351
  %5 = icmp ne i32 %4, 0, !dbg !5350
  ret i1 %5, !dbg !5352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5353 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5357, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata i32 %1, metadata !5358, metadata !DIExpression()), !dbg !5359
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5360
  %4 = add i32 %3, %1, !dbg !5361
  ret i32 %4, !dbg !5362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5363 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5365, metadata !DIExpression()), !dbg !5367
  call void @llvm.dbg.value(metadata i32 %1, metadata !5366, metadata !DIExpression()), !dbg !5367
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !5368
  %4 = sub i32 %1, %3, !dbg !5369
  ret i32 %4, !dbg !5370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !5371 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5375, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.value(metadata i32 %1, metadata !5376, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.value(metadata i1 %2, metadata !5377, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5380
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5381
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5378, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5379, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5380
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5382
  %6 = bitcast i8* %5 to i16*, !dbg !5382
  %7 = load i16, i16* %6, align 2, !dbg !5382
  %8 = and i16 %7, -2, !dbg !5386
  %9 = zext i1 %2 to i16, !dbg !5386
  %10 = or i16 %8, %9, !dbg !5386
  store i16 %10, i16* %6, align 2, !dbg !5382
  ret void, !dbg !5387
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5388 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5392, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata i32 %1, metadata !5393, metadata !DIExpression()), !dbg !5394
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5395
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5397
  br i1 %4, label %7, label %5, !dbg !5398

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5399
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5401
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5402
  br label %7, !dbg !5403

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5404
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !5406
  br i1 %9, label %13, label %10, !dbg !5407

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !5408
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5410
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !5411
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5412
  call void @llvm.dbg.value(metadata i32 %12, metadata !5393, metadata !DIExpression()), !dbg !5394
  br label %13, !dbg !5413

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5393, metadata !DIExpression()), !dbg !5394
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !5414
  ret void, !dbg !5415
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5416 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5418, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata i32 %1, metadata !5419, metadata !DIExpression()), !dbg !5423
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5424, !range !5425
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5426
  call void @llvm.dbg.value(metadata i32 %4, metadata !5420, metadata !DIExpression()), !dbg !5427
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5428
  ret void, !dbg !5429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5430 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5434, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.value(metadata i32 %1, metadata !5435, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.value(metadata i32 %2, metadata !5436, metadata !DIExpression()), !dbg !5439
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5440
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5441
  %6 = add i32 %5, %4, !dbg !5442
  call void @llvm.dbg.value(metadata i32 %6, metadata !5437, metadata !DIExpression()), !dbg !5439
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5443
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5444
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5445
  ret void, !dbg !5446
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5447 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5449, metadata !DIExpression()), !dbg !5454
  call void @llvm.dbg.value(metadata i32 %1, metadata !5450, metadata !DIExpression()), !dbg !5454
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5455, !range !5425
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5456
  call void @llvm.dbg.value(metadata i32 %4, metadata !5451, metadata !DIExpression()), !dbg !5457
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5458
  ret void, !dbg !5459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5460 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5464, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.value(metadata i32 %1, metadata !5465, metadata !DIExpression()), !dbg !5466
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5467
  %4 = lshr i32 %3, 1, !dbg !5468
  ret i32 %4, !dbg !5469
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !5470 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5474, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.value(metadata i32 %1, metadata !5475, metadata !DIExpression()), !dbg !5477
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !5478
  %4 = add i32 %1, 1, !dbg !5479
  %5 = sub i32 %4, %3, !dbg !5480
  call void @llvm.dbg.value(metadata i32 %5, metadata !5476, metadata !DIExpression()), !dbg !5477
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5481, !range !5482
  %7 = sub nsw i32 31, %6, !dbg !5483
  ret i32 %7, !dbg !5484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5485 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5489, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.value(metadata i32 %1, metadata !5490, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.value(metadata i32 %2, metadata !5491, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5492, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5498
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5499
  %5 = load i32, i32* %4, align 4, !dbg !5499
  %6 = icmp eq i32 %5, 0, !dbg !5500
  br i1 %6, label %7, label %12, !dbg !5501

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5502
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5504
  %10 = load i32, i32* %9, align 4, !dbg !5505
  %11 = or i32 %10, %8, !dbg !5505
  store i32 %11, i32* %9, align 4, !dbg !5505
  store i32 %1, i32* %4, align 4, !dbg !5506
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5507
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5508
  br label %14, !dbg !5509

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5494, metadata !DIExpression()), !dbg !5510
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !5511, !range !5512
  call void @llvm.dbg.value(metadata i32 %13, metadata !5497, metadata !DIExpression()), !dbg !5510
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !5513
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5514
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !5515
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !5516
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5518 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5520, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.value(metadata i32 %1, metadata !5521, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.value(metadata i32 %2, metadata !5522, metadata !DIExpression()), !dbg !5523
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !5524
  ret void, !dbg !5525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5526 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5528, metadata !DIExpression()), !dbg !5531
  call void @llvm.dbg.value(metadata i32 %1, metadata !5529, metadata !DIExpression()), !dbg !5531
  call void @llvm.dbg.value(metadata i32 %2, metadata !5530, metadata !DIExpression()), !dbg !5531
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !5532
  ret void, !dbg !5533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !5534 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5536, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.value(metadata i32 %1, metadata !5537, metadata !DIExpression()), !dbg !5538
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !5539
  ret i32 %3, !dbg !5540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5541 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5545, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata i32 %1, metadata !5546, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata i32 %2, metadata !5547, metadata !DIExpression()), !dbg !5550
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5551
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5548, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5549, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5550
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5549, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5550
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5552
  call void @llvm.dbg.value(metadata i8* %5, metadata !5549, metadata !DIExpression()), !dbg !5550
  %6 = bitcast i8* %5 to i16*, !dbg !5553
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5556
  %8 = load i16, i16* %7, align 2, !dbg !5556
  %9 = zext i16 %8 to i32, !dbg !5556
  ret i32 %9, !dbg !5557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #4 !dbg !5558 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5562, metadata !DIExpression()), !dbg !5563
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5564
  ret %struct.chunk_unit_t* %2, !dbg !5565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #7 !dbg !5566 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5570, metadata !DIExpression()), !dbg !5576
  call void @llvm.dbg.value(metadata i32 %1, metadata !5571, metadata !DIExpression()), !dbg !5576
  call void @llvm.dbg.value(metadata i32 %2, metadata !5572, metadata !DIExpression()), !dbg !5576
  call void @llvm.dbg.value(metadata i32 %3, metadata !5573, metadata !DIExpression()), !dbg !5576
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5577
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5574, metadata !DIExpression()), !dbg !5576
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5575, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5576
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5578
  call void @llvm.dbg.value(metadata i8* %6, metadata !5575, metadata !DIExpression()), !dbg !5576
  %7 = trunc i32 %3 to i16, !dbg !5579
  %8 = bitcast i8* %6 to i16*, !dbg !5582
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5583
  store i16 %7, i16* %9, align 2, !dbg !5584
  ret void, !dbg !5585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #4 !dbg !5586 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5590, metadata !DIExpression()), !dbg !5591
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !5592
  ret i32 %2, !dbg !5593
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !5594 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5598, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata i32 %1, metadata !5599, metadata !DIExpression()), !dbg !5600
  %3 = add i32 %1, 4, !dbg !5601
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !5602
  ret i32 %4, !dbg !5603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #4 !dbg !5604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5608, metadata !DIExpression()), !dbg !5609
  %2 = add i32 %0, 7, !dbg !5610
  %3 = lshr i32 %2, 3, !dbg !5611
  ret i32 %3, !dbg !5612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5613 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5617, metadata !DIExpression()), !dbg !5620
  call void @llvm.dbg.value(metadata i32 %1, metadata !5618, metadata !DIExpression()), !dbg !5620
  call void @llvm.dbg.value(metadata i32 %2, metadata !5619, metadata !DIExpression()), !dbg !5620
  %4 = shl i32 %2, 1, !dbg !5621
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !5622
  ret void, !dbg !5623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5624 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5626, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.value(metadata i32 %1, metadata !5627, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.value(metadata i32 %2, metadata !5628, metadata !DIExpression()), !dbg !5629
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !5630
  ret void, !dbg !5631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5632 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5634, metadata !DIExpression()), !dbg !5642
  call void @llvm.dbg.value(metadata i32 %1, metadata !5635, metadata !DIExpression()), !dbg !5642
  call void @llvm.dbg.value(metadata i32 %2, metadata !5636, metadata !DIExpression()), !dbg !5642
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5637, metadata !DIExpression()), !dbg !5642
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5644
  %6 = icmp eq i32 %5, %1, !dbg !5645
  br i1 %6, label %7, label %14, !dbg !5646

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5647
  %9 = xor i32 %8, -1, !dbg !5649
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5650
  %11 = load i32, i32* %10, align 4, !dbg !5651
  %12 = and i32 %11, %9, !dbg !5651
  store i32 %12, i32* %10, align 4, !dbg !5651
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5652
  store i32 0, i32* %13, align 4, !dbg !5653
  br label %17, !dbg !5654

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5655
  call void @llvm.dbg.value(metadata i32 %15, metadata !5638, metadata !DIExpression()), !dbg !5656
  call void @llvm.dbg.value(metadata i32 %5, metadata !5641, metadata !DIExpression()), !dbg !5656
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5657
  store i32 %5, i32* %16, align 4, !dbg !5658
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !5659
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !5660
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !5662 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5664, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %1, metadata !5665, metadata !DIExpression()), !dbg !5666
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !5667
  ret i32 %3, !dbg !5668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #8 !dbg !5669 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5673, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i8* %1, metadata !5674, metadata !DIExpression()), !dbg !5680
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5681
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5681
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5675, metadata !DIExpression()), !dbg !5680
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !5682
  call void @llvm.dbg.value(metadata i32 %5, metadata !5676, metadata !DIExpression()), !dbg !5680
  %6 = ptrtoint i8* %1 to i32, !dbg !5683
  call void @llvm.dbg.value(metadata i32 %6, metadata !5677, metadata !DIExpression()), !dbg !5680
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !5684
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5684
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5685
  call void @llvm.dbg.value(metadata i32 %9, metadata !5678, metadata !DIExpression()), !dbg !5680
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !5686
  %11 = shl i32 %10, 3, !dbg !5687
  call void @llvm.dbg.value(metadata i32 %11, metadata !5679, metadata !DIExpression()), !dbg !5680
  %12 = sub i32 %9, %6, !dbg !5688
  %13 = add i32 %12, %11, !dbg !5689
  ret i32 %13, !dbg !5690
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !5691 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5695, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32 %1, metadata !5696, metadata !DIExpression()), !dbg !5701
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5702
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5702
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5697, metadata !DIExpression()), !dbg !5701
  %5 = icmp eq i32 %1, 0, !dbg !5703
  br i1 %5, label %19, label %6, !dbg !5705

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !5706
  br i1 %7, label %19, label %8, !dbg !5707

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !5708, !range !5313
  call void @llvm.dbg.value(metadata i32 %9, metadata !5699, metadata !DIExpression()), !dbg !5701
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !5709
  call void @llvm.dbg.value(metadata i32 %10, metadata !5700, metadata !DIExpression()), !dbg !5701
  %11 = icmp eq i32 %10, 0, !dbg !5710
  br i1 %11, label %19, label %12, !dbg !5712

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !5713
  %14 = icmp ugt i32 %13, %9, !dbg !5715
  br i1 %14, label %15, label %17, !dbg !5716

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5717
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !5719
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !5720
  br label %17, !dbg !5721

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !5722
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !5723
  call void @llvm.dbg.value(metadata i8* %18, metadata !5698, metadata !DIExpression()), !dbg !5701
  br label %19, !dbg !5724

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5701
  ret i8* %20, !dbg !5725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !5726 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5730, metadata !DIExpression()), !dbg !5732
  call void @llvm.dbg.value(metadata i32 %1, metadata !5731, metadata !DIExpression()), !dbg !5732
  %3 = lshr i32 %1, 3, !dbg !5733
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5734
  %5 = load i32, i32* %4, align 4, !dbg !5734
  %6 = icmp uge i32 %3, %5, !dbg !5735
  ret i1 %6, !dbg !5736
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5737 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5741, metadata !DIExpression()), !dbg !5756
  call void @llvm.dbg.value(metadata i32 %1, metadata !5742, metadata !DIExpression()), !dbg !5756
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5757
  call void @llvm.dbg.value(metadata i32 %3, metadata !5743, metadata !DIExpression()), !dbg !5756
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5744, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5756
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5758
  %5 = load i32, i32* %4, align 4, !dbg !5758
  %6 = icmp eq i32 %5, 0, !dbg !5759
  br i1 %6, label %19, label %7, !dbg !5760

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5761
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5762
  call void @llvm.dbg.value(metadata i32 %9, metadata !5748, metadata !DIExpression()), !dbg !5762
  call void @llvm.dbg.value(metadata i32 %8, metadata !5749, metadata !DIExpression()), !dbg !5763
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !5764
  %11 = icmp ult i32 %10, %1, !dbg !5766
  br i1 %11, label %13, label %12, !dbg !5767

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !5768
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !5770
  store i32 %14, i32* %4, align 4, !dbg !5771
  %15 = add nsw i32 %9, -1, !dbg !5772
  call void @llvm.dbg.value(metadata i32 %15, metadata !5748, metadata !DIExpression()), !dbg !5762
  %16 = icmp eq i32 %15, 0, !dbg !5772
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5773
  br i1 %18, label %19, label %7, !dbg !5773, !llvm.loop !5774

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5777
  %21 = load i32, i32* %20, align 4, !dbg !5777
  %22 = add nsw i32 %3, 1, !dbg !5778
  %23 = shl nsw i32 -1, %22, !dbg !5778
  %24 = and i32 %21, %23, !dbg !5779
  call void @llvm.dbg.value(metadata i32 %24, metadata !5751, metadata !DIExpression()), !dbg !5756
  %25 = icmp eq i32 %24, 0, !dbg !5780
  br i1 %25, label %30, label %26, !dbg !5781

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5782, !range !5482
  call void @llvm.dbg.value(metadata i32 %27, metadata !5752, metadata !DIExpression()), !dbg !5783
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5784
  %29 = load i32, i32* %28, align 4, !dbg !5784
  call void @llvm.dbg.value(metadata i32 %29, metadata !5755, metadata !DIExpression()), !dbg !5783
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !5785
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5756
  ret i32 %31, !dbg !5786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5787 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5789, metadata !DIExpression()), !dbg !5795
  call void @llvm.dbg.value(metadata i32 %1, metadata !5790, metadata !DIExpression()), !dbg !5795
  call void @llvm.dbg.value(metadata i32 %2, metadata !5791, metadata !DIExpression()), !dbg !5795
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5796
  call void @llvm.dbg.value(metadata i32 %4, metadata !5792, metadata !DIExpression()), !dbg !5795
  %5 = sub i32 %2, %1, !dbg !5797
  call void @llvm.dbg.value(metadata i32 %5, metadata !5793, metadata !DIExpression()), !dbg !5795
  %6 = sub i32 %4, %5, !dbg !5798
  call void @llvm.dbg.value(metadata i32 %6, metadata !5794, metadata !DIExpression()), !dbg !5795
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5799
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !5800
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !5801
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5802
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5803
  ret void, !dbg !5804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !5805 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5809, metadata !DIExpression()), !dbg !5813
  call void @llvm.dbg.value(metadata i32 %1, metadata !5810, metadata !DIExpression()), !dbg !5813
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5814
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5811, metadata !DIExpression()), !dbg !5813
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5815
  call void @llvm.dbg.value(metadata i8* %4, metadata !5812, metadata !DIExpression()), !dbg !5813
  ret i8* %4, !dbg !5816
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5817 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5821, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata i32 %1, metadata !5822, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata i32 %2, metadata !5823, metadata !DIExpression()), !dbg !5833
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5834
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5834
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5824, metadata !DIExpression()), !dbg !5833
  %6 = sub i32 0, %1, !dbg !5835
  %7 = and i32 %6, %1, !dbg !5836
  call void @llvm.dbg.value(metadata i32 %7, metadata !5826, metadata !DIExpression()), !dbg !5833
  %8 = icmp eq i32 %7, %1, !dbg !5837
  br i1 %8, label %13, label %9, !dbg !5839

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5840
  call void @llvm.dbg.value(metadata i32 %10, metadata !5822, metadata !DIExpression()), !dbg !5833
  %11 = icmp ult i32 %7, 4, !dbg !5842
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5842
  br label %17, !dbg !5842

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5843
  br i1 %14, label %15, label %17, !dbg !5846

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !5847
  br label %61, !dbg !5849

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5833
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5850
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5822, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata i32 %19, metadata !5825, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata i32 %18, metadata !5826, metadata !DIExpression()), !dbg !5833
  %21 = add i32 %20, -1, !dbg !5851
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5851, !range !5482
  %23 = icmp ult i32 %22, 2, !dbg !5851
  br i1 %23, label %25, label %24, !dbg !5854

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.45, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 324) #26, !dbg !5855
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.46, i32 0, i32 0)) #26, !dbg !5855
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 324) #26, !dbg !5855
  unreachable, !dbg !5855

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !5857
  br i1 %26, label %61, label %27, !dbg !5859

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !5860
  br i1 %28, label %61, label %29, !dbg !5861

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !5862
  %31 = add i32 %30, %20, !dbg !5863
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #27, !dbg !5864, !range !5313
  call void @llvm.dbg.value(metadata i32 %32, metadata !5827, metadata !DIExpression()), !dbg !5833
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #27, !dbg !5865
  call void @llvm.dbg.value(metadata i32 %33, metadata !5828, metadata !DIExpression()), !dbg !5833
  %34 = icmp eq i32 %33, 0, !dbg !5866
  br i1 %34, label %61, label %35, !dbg !5868

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #27, !dbg !5869
  call void @llvm.dbg.value(metadata i8* %36, metadata !5829, metadata !DIExpression()), !dbg !5833
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !5870
  %38 = ptrtoint i8* %37 to i32, !dbg !5870
  %39 = add i32 %21, %38, !dbg !5870
  %40 = sub i32 0, %20, !dbg !5870
  %41 = and i32 %39, %40, !dbg !5870
  %42 = inttoptr i32 %41 to i8*, !dbg !5871
  %43 = sub i32 0, %18, !dbg !5872
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !5872
  call void @llvm.dbg.value(metadata i8* %44, metadata !5829, metadata !DIExpression()), !dbg !5833
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !5873
  %46 = ptrtoint i8* %45 to i32, !dbg !5873
  %47 = add i32 %46, 7, !dbg !5873
  %48 = and i32 %47, -8, !dbg !5873
  call void @llvm.dbg.value(metadata i32 %48, metadata !5830, metadata !DIExpression()), !dbg !5833
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #27, !dbg !5874
  call void @llvm.dbg.value(metadata i32 %49, metadata !5831, metadata !DIExpression()), !dbg !5833
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !5875
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !5876
  %52 = sub i32 %48, %51, !dbg !5876
  %53 = ashr exact i32 %52, 3, !dbg !5876
  call void @llvm.dbg.value(metadata i32 %53, metadata !5832, metadata !DIExpression()), !dbg !5833
  %54 = icmp ugt i32 %49, %33, !dbg !5877
  br i1 %54, label %55, label %56, !dbg !5879

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #27, !dbg !5880
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #27, !dbg !5882
  br label %56, !dbg !5883

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !5884
  %58 = icmp ugt i32 %57, %53, !dbg !5886
  br i1 %58, label %59, label %60, !dbg !5887

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #27, !dbg !5888
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #27, !dbg !5890
  br label %60, !dbg !5891

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #27, !dbg !5892
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5833
  ret i8* %62, !dbg !5893
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5894 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5898, metadata !DIExpression()), !dbg !5917
  call void @llvm.dbg.value(metadata i8* %1, metadata !5899, metadata !DIExpression()), !dbg !5917
  call void @llvm.dbg.value(metadata i32 %2, metadata !5900, metadata !DIExpression()), !dbg !5917
  call void @llvm.dbg.value(metadata i32 %3, metadata !5901, metadata !DIExpression()), !dbg !5917
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5918
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5918
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5902, metadata !DIExpression()), !dbg !5917
  %7 = icmp eq i8* %1, null, !dbg !5919
  br i1 %7, label %8, label %10, !dbg !5921

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !5922
  br label %63, !dbg !5924

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5925
  br i1 %11, label %12, label %13, !dbg !5927

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !5928
  br label %63, !dbg !5930

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !5931
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !5931, !range !5482
  %16 = icmp ult i32 %15, 2, !dbg !5931
  br i1 %16, label %18, label %17, !dbg !5934

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.45, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 393) #26, !dbg !5935
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.46, i32 0, i32 0)) #26, !dbg !5935
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 393) #26, !dbg !5935
  unreachable, !dbg !5935

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !5937
  br i1 %19, label %63, label %20, !dbg !5939

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !5940, !range !5313
  call void @llvm.dbg.value(metadata i32 %21, metadata !5903, metadata !DIExpression()), !dbg !5917
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !5941
  call void @llvm.dbg.value(metadata i32 %22, metadata !5904, metadata !DIExpression()), !dbg !5917
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !5942
  %24 = ptrtoint i8* %1 to i32, !dbg !5943
  %25 = ptrtoint i8* %23 to i32, !dbg !5943
  %26 = sub i32 %24, %25, !dbg !5943
  call void @llvm.dbg.value(metadata i32 %26, metadata !5905, metadata !DIExpression()), !dbg !5917
  %27 = add i32 %26, %3, !dbg !5944
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #27, !dbg !5945
  call void @llvm.dbg.value(metadata i32 %28, metadata !5906, metadata !DIExpression()), !dbg !5917
  %29 = icmp eq i32 %2, 0, !dbg !5946
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !5947
  br i1 %32, label %33, label %53, !dbg !5947

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !5948
  %35 = icmp eq i32 %28, %34, !dbg !5949
  br i1 %35, label %63, label %36, !dbg !5950

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !5951
  br i1 %37, label %38, label %40, !dbg !5952

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !5953
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #27, !dbg !5955
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #27, !dbg !5956
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #27, !dbg !5957
  br label %63, !dbg !5958

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !5959
  br i1 %41, label %53, label %42, !dbg !5960

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !5961
  %44 = add i32 %43, %34, !dbg !5962
  %45 = icmp ult i32 %44, %28, !dbg !5963
  br i1 %45, label %53, label %46, !dbg !5964

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !5965
  call void @llvm.dbg.value(metadata i32 %47, metadata !5907, metadata !DIExpression()), !dbg !5966
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !5967
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !5968
  %49 = icmp ult i32 %47, %48, !dbg !5970
  br i1 %49, label %50, label %52, !dbg !5971

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !5972
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #27, !dbg !5974
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #27, !dbg !5975
  br label %52, !dbg !5976

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #27, !dbg !5977
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #27, !dbg !5978
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !5979
  call void @llvm.dbg.value(metadata i8* %54, metadata !5913, metadata !DIExpression()), !dbg !5917
  %55 = icmp eq i8* %54, null, !dbg !5980
  br i1 %55, label %63, label %56, !dbg !5981

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !5982, !range !5425
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #27, !dbg !5983
  %59 = sub i32 %58, %26, !dbg !5984
  call void @llvm.dbg.value(metadata i32 %59, metadata !5914, metadata !DIExpression()), !dbg !5985
  %60 = icmp ult i32 %59, %3, !dbg !5986
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !5986
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #26, !dbg !5987
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !5988
  br label %63, !dbg !5989

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !5917
  ret i8* %64, !dbg !5990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !5991 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5995, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 %1, metadata !5996, metadata !DIExpression()), !dbg !5997
  %3 = shl i32 %1, 3, !dbg !5998
  %4 = add i32 %3, -4, !dbg !5999
  ret i32 %4, !dbg !6000
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6001 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6005, metadata !DIExpression()), !dbg !6016
  call void @llvm.dbg.value(metadata i8* %1, metadata !6006, metadata !DIExpression()), !dbg !6016
  call void @llvm.dbg.value(metadata i32 %2, metadata !6007, metadata !DIExpression()), !dbg !6016
  %4 = icmp ult i32 %2, 262144, !dbg !6017
  br i1 %4, label %6, label %5, !dbg !6022

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 491) #26, !dbg !6023
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.48, i32 0, i32 0)) #26, !dbg !6023
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 491) #26, !dbg !6023
  unreachable, !dbg !6023

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !6025
  br i1 %7, label %9, label %8, !dbg !6028

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 498) #26, !dbg !6029
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.50, i32 0, i32 0)) #26, !dbg !6029
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 498) #26, !dbg !6029
  unreachable, !dbg !6029

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !6031
  call void @llvm.dbg.value(metadata i32 %10, metadata !6007, metadata !DIExpression()), !dbg !6016
  %11 = ptrtoint i8* %1 to i32, !dbg !6032
  %12 = add i32 %11, 7, !dbg !6032
  %13 = and i32 %12, -8, !dbg !6032
  call void @llvm.dbg.value(metadata i32 %13, metadata !6008, metadata !DIExpression()), !dbg !6016
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !6033
  %15 = ptrtoint i8* %14 to i32, !dbg !6033
  %16 = and i32 %15, -8, !dbg !6033
  call void @llvm.dbg.value(metadata i32 %16, metadata !6009, metadata !DIExpression()), !dbg !6016
  %17 = sub i32 %16, %13, !dbg !6034
  %18 = lshr exact i32 %17, 3, !dbg !6035
  call void @llvm.dbg.value(metadata i32 %18, metadata !6010, metadata !DIExpression()), !dbg !6016
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #27, !dbg !6036
  %20 = icmp ugt i32 %18, %19, !dbg !6036
  br i1 %20, label %22, label %21, !dbg !6039

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.51, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 507) #26, !dbg !6040
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.50, i32 0, i32 0)) #26, !dbg !6040
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 507) #26, !dbg !6040
  unreachable, !dbg !6040

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !6042
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !6011, metadata !DIExpression()), !dbg !6016
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6043
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !6044
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !6045
  store i32 %18, i32* %25, align 8, !dbg !6046
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !6047
  store i32 0, i32* %26, align 4, !dbg !6048
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #27, !dbg !6049
  call void @llvm.dbg.value(metadata i32 %27, metadata !6012, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6016
  %28 = shl i32 %27, 2, !dbg !6050
  %29 = add i32 %28, 20, !dbg !6051
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #27, !dbg !6052
  call void @llvm.dbg.value(metadata i32 %30, metadata !6013, metadata !DIExpression()), !dbg !6016
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #27, !dbg !6053
  %32 = add i32 %31, %30, !dbg !6053
  %33 = icmp ugt i32 %32, %18, !dbg !6053
  br i1 %33, label %36, label %34, !dbg !6056

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !6014, metadata !DIExpression()), !dbg !6057
  %35 = icmp slt i32 %27, 0, !dbg !6058
  br i1 %35, label %37, label %39, !dbg !6060

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 524) #26, !dbg !6061
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.50, i32 0, i32 0)) #26, !dbg !6061
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 524) #26, !dbg !6061
  unreachable, !dbg !6061

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #27, !dbg !6063
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #27, !dbg !6064
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !6065
  %38 = sub i32 %18, %30, !dbg !6066
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #27, !dbg !6067
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #27, !dbg !6068
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #27, !dbg !6069
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #27, !dbg !6070
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #27, !dbg !6071
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #27, !dbg !6072
  ret void, !dbg !6073

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !6014, metadata !DIExpression()), !dbg !6057
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !6074
  store i32 0, i32* %41, align 4, !dbg !6076
  %42 = add nuw i32 %40, 1, !dbg !6077
  call void @llvm.dbg.value(metadata i32 %42, metadata !6014, metadata !DIExpression()), !dbg !6057
  %43 = icmp eq i32 %40, %27, !dbg !6058
  br i1 %43, label %37, label %39, !dbg !6060, !llvm.loop !6078
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !6080 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !6093, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6090, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i8* %1, metadata !6091, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i8* %2, metadata !6092, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i32 %4, metadata !6094, metadata !DIExpression()), !dbg !6219
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6220
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !6220
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !6095, metadata !DIExpression()), !dbg !6221
  call void @llvm.dbg.value(metadata i32 0, metadata !6099, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i1 undef, metadata !6101, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6219
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6222

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6222

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6223
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !6093, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i8* %30, metadata !6092, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i32 %29, metadata !6099, metadata !DIExpression()), !dbg !6219
  %31 = load i8, i8* %30, align 1, !dbg !6224
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6222

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6224
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6225
  call void @llvm.dbg.value(metadata i8* %34, metadata !6092, metadata !DIExpression()), !dbg !6219
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !6225
  call void @llvm.dbg.value(metadata i32 %35, metadata !6103, metadata !DIExpression()), !dbg !6226
  %36 = icmp slt i32 %35, 0, !dbg !6227
  %37 = add i32 %29, 1, !dbg !6225
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()), !dbg !6219
  br i1 %36, label %365, label %28, !llvm.loop !6229

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6231
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6108, metadata !DIExpression()), !dbg !6232
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6232
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6151, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6154, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8* %30, metadata !6157, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32 -1, metadata !6158, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32 -1, metadata !6159, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8* null, metadata !6160, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8* %14, metadata !6161, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 0, metadata !6162, metadata !DIExpression()), !dbg !6233
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !6234
  call void @llvm.dbg.value(metadata i8* %39, metadata !6092, metadata !DIExpression()), !dbg !6219
  %40 = load i24, i24* %15, align 8, !dbg !6235
  %41 = and i24 %40, 256, !dbg !6235
  %42 = icmp eq i24 %41, 0, !dbg !6235
  br i1 %42, label %51, label %43, !dbg !6237

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6238
  call void @llvm.dbg.value(metadata i8* %44, metadata !6093, metadata !DIExpression()), !dbg !6219
  %45 = bitcast i8* %27 to i32*, !dbg !6238
  %46 = load i32, i32* %45, align 4, !dbg !6238
  call void @llvm.dbg.value(metadata i32 %46, metadata !6158, metadata !DIExpression()), !dbg !6233
  %47 = icmp slt i32 %46, 0, !dbg !6240
  br i1 %47, label %48, label %56, !dbg !6242

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6243
  store i24 %49, i24* %15, align 8, !dbg !6243
  %50 = sub nsw i32 0, %46, !dbg !6245
  call void @llvm.dbg.value(metadata i32 %50, metadata !6158, metadata !DIExpression()), !dbg !6233
  br label %56, !dbg !6246

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6247
  %53 = icmp eq i24 %52, 0, !dbg !6247
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6249
  br label %56, !dbg !6249

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6250
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6233
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !6093, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i32 %58, metadata !6158, metadata !DIExpression()), !dbg !6233
  %60 = and i24 %57, 1024, !dbg !6250
  %61 = icmp eq i24 %60, 0, !dbg !6250
  br i1 %61, label %69, label %62, !dbg !6251

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6252
  call void @llvm.dbg.value(metadata i8* %63, metadata !6093, metadata !DIExpression()), !dbg !6219
  %64 = bitcast i8* %59 to i32*, !dbg !6252
  %65 = load i32, i32* %64, align 4, !dbg !6252
  call void @llvm.dbg.value(metadata i32 %65, metadata !6163, metadata !DIExpression()), !dbg !6253
  %66 = icmp slt i32 %65, 0, !dbg !6254
  br i1 %66, label %67, label %74, !dbg !6256

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6257
  store i24 %68, i24* %15, align 8, !dbg !6257
  br label %74, !dbg !6259

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6260
  %71 = icmp eq i24 %70, 0, !dbg !6260
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6262
  br label %74, !dbg !6262

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6263
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6233
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6233
  call void @llvm.dbg.value(metadata i8* %77, metadata !6093, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i32 %76, metadata !6159, metadata !DIExpression()), !dbg !6233
  store i32 0, i32* %16, align 4, !dbg !6264
  store i32 0, i32* %17, align 8, !dbg !6265
  %78 = lshr i24 %75, 16, !dbg !6263
  call void @llvm.dbg.value(metadata i24 %78, metadata !6166, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6233
  %79 = lshr i24 %75, 11, !dbg !6266
  %80 = and i24 %79, 15, !dbg !6266
  %81 = zext i24 %80 to i32, !dbg !6266
  call void @llvm.dbg.value(metadata i32 %81, metadata !6167, metadata !DIExpression()), !dbg !6233
  %82 = trunc i24 %78 to i3, !dbg !6267
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6267

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6268

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6271
  call void @llvm.dbg.value(metadata i8* %85, metadata !6093, metadata !DIExpression()), !dbg !6219
  %86 = bitcast i8* %77 to i32*, !dbg !6271
  %87 = load i32, i32* %86, align 4, !dbg !6271
  %88 = sext i32 %87 to i64, !dbg !6271
  store i64 %88, i64* %20, align 8, !dbg !6273
  br label %115, !dbg !6274

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6275
  call void @llvm.dbg.value(metadata i8* %90, metadata !6093, metadata !DIExpression()), !dbg !6219
  %91 = bitcast i8* %77 to i32*, !dbg !6275
  %92 = load i32, i32* %91, align 4, !dbg !6275
  %93 = sext i32 %92 to i64, !dbg !6275
  store i64 %93, i64* %20, align 8, !dbg !6278
  br label %115, !dbg !6279

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6280
  %96 = add i32 %95, 7, !dbg !6280
  %97 = and i32 %96, -8, !dbg !6280
  %98 = inttoptr i32 %97 to i8*, !dbg !6280
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6280
  call void @llvm.dbg.value(metadata i8* %99, metadata !6093, metadata !DIExpression()), !dbg !6219
  %100 = inttoptr i32 %97 to i64*, !dbg !6280
  %101 = load i64, i64* %100, align 8, !dbg !6280
  store i64 %101, i64* %20, align 8, !dbg !6281
  br label %115, !dbg !6282

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6283
  %104 = add i32 %103, 7, !dbg !6283
  %105 = and i32 %104, -8, !dbg !6283
  %106 = inttoptr i32 %105 to i8*, !dbg !6283
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6283
  call void @llvm.dbg.value(metadata i8* %107, metadata !6093, metadata !DIExpression()), !dbg !6219
  %108 = inttoptr i32 %105 to i64*, !dbg !6283
  %109 = load i64, i64* %108, align 8, !dbg !6283
  store i64 %109, i64* %20, align 8, !dbg !6284
  br label %115, !dbg !6285

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6286
  call void @llvm.dbg.value(metadata i8* %111, metadata !6093, metadata !DIExpression()), !dbg !6219
  %112 = bitcast i8* %77 to i32*, !dbg !6286
  %113 = load i32, i32* %112, align 4, !dbg !6286
  %114 = sext i32 %113 to i64, !dbg !6287
  store i64 %114, i64* %20, align 8, !dbg !6288
  br label %115, !dbg !6289

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6290
  call void @llvm.dbg.value(metadata i8* %117, metadata !6093, metadata !DIExpression()), !dbg !6219
  %118 = trunc i24 %79 to i4, !dbg !6291
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6291

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6292
  %121 = ashr exact i64 %120, 56, !dbg !6292
  store i64 %121, i64* %20, align 8, !dbg !6295
  br label %177, !dbg !6296

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6297
  %124 = ashr exact i64 %123, 48, !dbg !6297
  store i64 %124, i64* %20, align 8, !dbg !6300
  br label %177, !dbg !6301

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6302

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6305
  call void @llvm.dbg.value(metadata i8* %127, metadata !6093, metadata !DIExpression()), !dbg !6219
  %128 = bitcast i8* %77 to i32*, !dbg !6305
  %129 = load i32, i32* %128, align 4, !dbg !6305
  %130 = zext i32 %129 to i64, !dbg !6305
  store i64 %130, i64* %20, align 8, !dbg !6307
  br label %157, !dbg !6308

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6309
  call void @llvm.dbg.value(metadata i8* %132, metadata !6093, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i8* %132, metadata !6093, metadata !DIExpression()), !dbg !6219
  %133 = bitcast i8* %77 to i32*, !dbg !6309
  %134 = load i32, i32* %133, align 4, !dbg !6309
  %135 = zext i32 %134 to i64, !dbg !6309
  store i64 %135, i64* %20, align 8, !dbg !6309
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6311
  %138 = add i32 %137, 7, !dbg !6311
  %139 = and i32 %138, -8, !dbg !6311
  %140 = inttoptr i32 %139 to i8*, !dbg !6311
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6311
  call void @llvm.dbg.value(metadata i8* %141, metadata !6093, metadata !DIExpression()), !dbg !6219
  %142 = inttoptr i32 %139 to i64*, !dbg !6311
  %143 = load i64, i64* %142, align 8, !dbg !6311
  store i64 %143, i64* %20, align 8, !dbg !6312
  br label %157, !dbg !6313

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6314
  %146 = add i32 %145, 7, !dbg !6314
  %147 = and i32 %146, -8, !dbg !6314
  %148 = inttoptr i32 %147 to i8*, !dbg !6314
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6314
  call void @llvm.dbg.value(metadata i8* %149, metadata !6093, metadata !DIExpression()), !dbg !6219
  %150 = inttoptr i32 %147 to i64*, !dbg !6314
  %151 = load i64, i64* %150, align 8, !dbg !6314
  store i64 %151, i64* %20, align 8, !dbg !6315
  br label %157, !dbg !6316

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6317
  call void @llvm.dbg.value(metadata i8* %153, metadata !6093, metadata !DIExpression()), !dbg !6219
  %154 = bitcast i8* %77 to i32*, !dbg !6317
  %155 = load i32, i32* %154, align 4, !dbg !6317
  %156 = zext i32 %155 to i64, !dbg !6318
  store i64 %156, i64* %20, align 8, !dbg !6319
  br label %157, !dbg !6320

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6321
  call void @llvm.dbg.value(metadata i8* %159, metadata !6093, metadata !DIExpression()), !dbg !6219
  %160 = trunc i24 %79 to i4, !dbg !6322
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6322

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6323
  store i64 %162, i64* %20, align 8, !dbg !6326
  br label %177, !dbg !6327

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6328
  store i64 %164, i64* %20, align 8, !dbg !6331
  br label %177, !dbg !6332

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6333
  %167 = add i32 %166, 7, !dbg !6333
  %168 = and i32 %167, -8, !dbg !6333
  %169 = inttoptr i32 %168 to i8*, !dbg !6333
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6333
  call void @llvm.dbg.value(metadata i8* %170, metadata !6093, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i8* %170, metadata !6093, metadata !DIExpression()), !dbg !6219
  %171 = inttoptr i32 %168 to double*, !dbg !6333
  %172 = load double, double* %171, align 8, !dbg !6333
  store double %172, double* %19, align 8, !dbg !6333
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6337
  call void @llvm.dbg.value(metadata i8* %174, metadata !6093, metadata !DIExpression()), !dbg !6219
  %175 = bitcast i8* %77 to i8**, !dbg !6337
  %176 = load i8*, i8** %175, align 4, !dbg !6337
  store i8* %176, i8** %18, align 8, !dbg !6340
  br label %177, !dbg !6341

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6233
  call void @llvm.dbg.value(metadata i8* %178, metadata !6093, metadata !DIExpression()), !dbg !6219
  %179 = and i24 %75, 3, !dbg !6342
  %180 = icmp eq i24 %179, 0, !dbg !6342
  br i1 %180, label %185, label %181, !dbg !6342

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !6343
  call void @llvm.dbg.value(metadata i32 %182, metadata !6168, metadata !DIExpression()), !dbg !6344
  %183 = icmp slt i32 %182, 0, !dbg !6345
  %184 = add i32 %182, %29, !dbg !6343
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()), !dbg !6219
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6347
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6348

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !6349
  call void @llvm.dbg.value(metadata i32 %188, metadata !6172, metadata !DIExpression()), !dbg !6350
  %189 = icmp slt i32 %188, 0, !dbg !6351
  %190 = add i32 %29, 1, !dbg !6349
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()), !dbg !6219
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6353
  call void @llvm.dbg.value(metadata i8* %192, metadata !6160, metadata !DIExpression()), !dbg !6233
  %193 = icmp sgt i32 %76, -1, !dbg !6354
  br i1 %193, label %194, label %196, !dbg !6356

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !6357
  call void @llvm.dbg.value(metadata i32 %195, metadata !6175, metadata !DIExpression()), !dbg !6359
  br label %241, !dbg !6360

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !6361
  call void @llvm.dbg.value(metadata i32 %197, metadata !6175, metadata !DIExpression()), !dbg !6359
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6160, metadata !DIExpression()), !dbg !6233
  %199 = load i64, i64* %20, align 8, !dbg !6363
  %200 = trunc i64 %199 to i8, !dbg !6364
  store i8 %200, i8* %10, align 1, !dbg !6365
  call void @llvm.dbg.value(metadata i8* %23, metadata !6161, metadata !DIExpression()), !dbg !6233
  br label %245, !dbg !6366

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6367
  %203 = icmp eq i24 %202, 0, !dbg !6367
  %204 = trunc i24 %75 to i8, !dbg !6369
  %205 = shl i8 %204, 1, !dbg !6369
  %206 = and i8 %205, 32, !dbg !6369
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6369
  call void @llvm.dbg.value(metadata i8 %207, metadata !6162, metadata !DIExpression()), !dbg !6233
  %208 = load i64, i64* %20, align 8, !dbg !6370
  call void @llvm.dbg.value(metadata i64 %208, metadata !6100, metadata !DIExpression()), !dbg !6219
  %209 = icmp slt i64 %208, 0, !dbg !6371
  br i1 %209, label %210, label %212, !dbg !6373

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6162, metadata !DIExpression()), !dbg !6233
  %211 = sub nsw i64 0, %208, !dbg !6374
  store i64 %211, i64* %20, align 8, !dbg !6376
  br label %212, !dbg !6377

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6233
  call void @llvm.dbg.value(metadata i8 %213, metadata !6162, metadata !DIExpression()), !dbg !6233
  %214 = load i64, i64* %20, align 8, !dbg !6378
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !6379
  call void @llvm.dbg.value(metadata i8* %215, metadata !6160, metadata !DIExpression()), !dbg !6233
  br label %216, !dbg !6380

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6381
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6382
  call void @llvm.dbg.value(metadata i8* %218, metadata !6160, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 %217, metadata !6162, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.label(metadata !6218), !dbg !6383
  %219 = icmp sgt i32 %76, -1, !dbg !6384
  br i1 %219, label %222, label %220, !dbg !6385

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6386
  br label %245, !dbg !6385

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6388
  %224 = sub i32 %22, %223, !dbg !6388
  call void @llvm.dbg.value(metadata i32 %224, metadata !6177, metadata !DIExpression()), !dbg !6389
  %225 = load i24, i24* %15, align 8, !dbg !6390
  %226 = and i24 %225, -65, !dbg !6390
  store i24 %226, i24* %15, align 8, !dbg !6390
  %227 = icmp ugt i32 %76, %224, !dbg !6391
  br i1 %227, label %228, label %245, !dbg !6393

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6394
  store i32 %229, i32* %16, align 4, !dbg !6396
  br label %245, !dbg !6397

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6398
  %232 = icmp eq i8* %231, null, !dbg !6400
  br i1 %232, label %245, label %233, !dbg !6401

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6402
  %235 = zext i32 %234 to i64, !dbg !6402
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !6404
  call void @llvm.dbg.value(metadata i8* %236, metadata !6160, metadata !DIExpression()), !dbg !6233
  %237 = load i24, i24* %15, align 8, !dbg !6405
  %238 = or i24 %237, 1048576, !dbg !6405
  store i24 %238, i24* %15, align 8, !dbg !6405
  store i8 120, i8* %21, align 1, !dbg !6406
  br label %216, !dbg !6407

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6408
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !6411
  br label %363, !dbg !6412

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6413
  call void @llvm.dbg.value(metadata i32 %242, metadata !6175, metadata !DIExpression()), !dbg !6359
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6414
  call void @llvm.dbg.value(metadata i32 -1, metadata !6159, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32 %29, metadata !6099, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i8* %192, metadata !6160, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8* %243, metadata !6161, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 0, metadata !6162, metadata !DIExpression()), !dbg !6233
  %244 = icmp eq i8* %192, null, !dbg !6415
  br i1 %244, label %363, label %245, !dbg !6417, !llvm.loop !6229

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6386
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6180, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6233
  call void @llvm.dbg.value(metadata i32 0, metadata !6181, metadata !DIExpression()), !dbg !6233
  %250 = zext i8 %249 to i32, !dbg !6418
  %251 = icmp eq i8 %249, 0, !dbg !6420
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6180, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6233
  call void @llvm.dbg.value(metadata i32 undef, metadata !6180, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6180, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6233
  call void @llvm.dbg.value(metadata i32 undef, metadata !6180, metadata !DIExpression()), !dbg !6233
  %252 = icmp sgt i32 %58, 0, !dbg !6421
  br i1 %252, label %253, label %302, !dbg !6422

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6386
  %255 = icmp eq i24 %254, 0, !dbg !6386
  %256 = ptrtoint i8* %248 to i32, !dbg !6423
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6180, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6233
  %257 = ptrtoint i8* %247 to i32, !dbg !6423
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6180, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6233
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6180, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6233
  %258 = xor i1 %251, true, !dbg !6424
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6180, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6233
  %259 = sext i1 %258 to i32, !dbg !6424
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6180, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6233
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6180, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6233
  %260 = lshr i24 %246, 19, !dbg !6425
  %261 = and i24 %260, 1, !dbg !6425
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6425
  %263 = zext i24 %262 to i32, !dbg !6425
  %264 = add i32 %257, %259, !dbg !6425
  %265 = add i32 %256, %263, !dbg !6425
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6180, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6233
  %266 = and i24 %246, 4194304, !dbg !6426
  %267 = icmp eq i24 %266, 0, !dbg !6426
  %268 = load i32, i32* %16, align 4, !dbg !6428
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6180, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6233
  call void @llvm.dbg.value(metadata i32 undef, metadata !6180, metadata !DIExpression()), !dbg !6233
  %269 = load i32, i32* %17, align 8, !dbg !6429
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6429
  call void @llvm.dbg.value(metadata i32 undef, metadata !6180, metadata !DIExpression()), !dbg !6233
  %271 = add i32 %264, %58, !dbg !6429
  %272 = add i32 %265, %268, !dbg !6429
  %273 = add i32 %272, %270, !dbg !6430
  %274 = sub i32 %271, %273, !dbg !6430
  call void @llvm.dbg.value(metadata i32 %274, metadata !6158, metadata !DIExpression()), !dbg !6233
  %275 = and i24 %246, 4, !dbg !6431
  %276 = icmp eq i24 %275, 0, !dbg !6431
  br i1 %276, label %277, label %302, !dbg !6432

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6182, metadata !DIExpression()), !dbg !6433
  %278 = and i24 %246, 64, !dbg !6434
  %279 = icmp eq i24 %278, 0, !dbg !6434
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6435
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6435
  %282 = select i1 %279, i32 32, i32 48, !dbg !6435
  br i1 %280, label %287, label %283, !dbg !6435

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !6436
  call void @llvm.dbg.value(metadata i32 %284, metadata !6187, metadata !DIExpression()), !dbg !6437
  %285 = icmp slt i32 %284, 0, !dbg !6438
  %286 = add i32 %29, 1, !dbg !6436
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()), !dbg !6219
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6233
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6223
  call void @llvm.dbg.value(metadata i32 %290, metadata !6099, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i8 undef, metadata !6182, metadata !DIExpression()), !dbg !6433
  call void @llvm.dbg.value(metadata i8 %288, metadata !6162, metadata !DIExpression()), !dbg !6233
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6440
  %292 = add i32 %291, -1, !dbg !6440
  br label %293, !dbg !6440

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6441
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6223
  call void @llvm.dbg.value(metadata i32 %295, metadata !6099, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i32 %294, metadata !6158, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32 %294, metadata !6158, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6233
  %296 = icmp sgt i32 %294, 0, !dbg !6442
  br i1 %296, label %297, label %302, !dbg !6440

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6443
  call void @llvm.dbg.value(metadata i32 %298, metadata !6158, metadata !DIExpression()), !dbg !6233
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !6444
  call void @llvm.dbg.value(metadata i32 %299, metadata !6193, metadata !DIExpression()), !dbg !6445
  %300 = icmp slt i32 %299, 0, !dbg !6446
  %301 = add i32 %295, 1, !dbg !6444
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()), !dbg !6219
  br i1 %300, label %361, label %293, !llvm.loop !6448

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6233
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6233
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6223
  call void @llvm.dbg.value(metadata i32 %305, metadata !6099, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i32 %304, metadata !6158, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 %303, metadata !6162, metadata !DIExpression()), !dbg !6233
  %306 = icmp eq i8 %303, 0, !dbg !6450
  br i1 %306, label %312, label %307, !dbg !6451

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6452
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !6453
  call void @llvm.dbg.value(metadata i32 %309, metadata !6196, metadata !DIExpression()), !dbg !6454
  %310 = icmp slt i32 %309, 0, !dbg !6455
  %311 = add i32 %305, 1, !dbg !6453
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()), !dbg !6219
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6223
  call void @llvm.dbg.value(metadata i32 %313, metadata !6099, metadata !DIExpression()), !dbg !6219
  %314 = lshr i24 %246, 20, !dbg !6457
  %315 = lshr i24 %246, 19, !dbg !6458
  %316 = or i24 %314, %315, !dbg !6459
  %317 = and i24 %316, 1, !dbg !6459
  %318 = icmp eq i24 %317, 0, !dbg !6459
  br i1 %318, label %323, label %319, !dbg !6460

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !6461
  call void @llvm.dbg.value(metadata i32 %320, metadata !6200, metadata !DIExpression()), !dbg !6462
  %321 = icmp slt i32 %320, 0, !dbg !6463
  %322 = add i32 %313, 1, !dbg !6461
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()), !dbg !6219
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6223
  call void @llvm.dbg.value(metadata i32 %324, metadata !6099, metadata !DIExpression()), !dbg !6219
  %325 = and i24 %246, 1048576, !dbg !6465
  %326 = icmp eq i24 %325, 0, !dbg !6465
  br i1 %326, label %333, label %327, !dbg !6466

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6467
  %329 = zext i8 %328 to i32, !dbg !6467
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !6467
  call void @llvm.dbg.value(metadata i32 %330, metadata !6206, metadata !DIExpression()), !dbg !6468
  %331 = icmp slt i32 %330, 0, !dbg !6469
  %332 = add i32 %324, 1, !dbg !6467
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()), !dbg !6219
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6223
  call void @llvm.dbg.value(metadata i32 %334, metadata !6099, metadata !DIExpression()), !dbg !6219
  %335 = load i32, i32* %16, align 4, !dbg !6471
  call void @llvm.dbg.value(metadata i32 %335, metadata !6181, metadata !DIExpression()), !dbg !6233
  br label %336, !dbg !6472

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6473
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6223
  call void @llvm.dbg.value(metadata i32 %338, metadata !6099, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i32 %337, metadata !6181, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6233
  %339 = icmp sgt i32 %337, 0, !dbg !6474
  br i1 %339, label %340, label %345, !dbg !6472

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6475
  call void @llvm.dbg.value(metadata i32 %341, metadata !6181, metadata !DIExpression()), !dbg !6233
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !6476
  call void @llvm.dbg.value(metadata i32 %342, metadata !6210, metadata !DIExpression()), !dbg !6477
  %343 = icmp slt i32 %342, 0, !dbg !6478
  %344 = add i32 %338, 1, !dbg !6476
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()), !dbg !6219
  br i1 %343, label %361, label %336, !llvm.loop !6480

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !6482
  call void @llvm.dbg.value(metadata i32 %346, metadata !6213, metadata !DIExpression()), !dbg !6483
  %347 = icmp slt i32 %346, 0, !dbg !6484
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()), !dbg !6219
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6482
  call void @llvm.dbg.value(metadata i32 %349, metadata !6099, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i32 %304, metadata !6158, metadata !DIExpression()), !dbg !6233
  %350 = icmp sgt i32 %304, 0, !dbg !6486
  br i1 %350, label %351, label %363, !dbg !6487

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6487
  %353 = add i32 %352, %338, !dbg !6487
  br label %354, !dbg !6487

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i32 %355, metadata !6158, metadata !DIExpression()), !dbg !6233
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !6488
  call void @llvm.dbg.value(metadata i32 %356, metadata !6215, metadata !DIExpression()), !dbg !6489
  %357 = icmp slt i32 %356, 0, !dbg !6490
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6492
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6219
  call void @llvm.dbg.value(metadata i32 %359, metadata !6158, metadata !DIExpression()), !dbg !6233
  %360 = icmp sgt i32 %355, 1, !dbg !6486
  br i1 %360, label %354, label %363, !dbg !6487, !llvm.loop !6493

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !6099, metadata !DIExpression()), !dbg !6219
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6230
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6223
  call void @llvm.dbg.value(metadata i32 %364, metadata !6099, metadata !DIExpression()), !dbg !6219
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6230
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6219
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !6495
  ret i32 %366, !dbg !6495
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6496 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6500, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata i8* %1, metadata !6501, metadata !DIExpression()), !dbg !6502
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6503
  store i24 0, i24* %3, align 4, !dbg !6503
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6503
  store i8 0, i8* %4, align 1, !dbg !6503
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6503
  store i32 0, i32* %5, align 4, !dbg !6503
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6503
  store i32 0, i32* %6, align 4, !dbg !6503
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6504
  call void @llvm.dbg.value(metadata i8* %7, metadata !6501, metadata !DIExpression()), !dbg !6502
  %8 = load i8, i8* %7, align 1, !dbg !6505
  %9 = icmp eq i8 %8, 37, !dbg !6507
  br i1 %9, label %10, label %12, !dbg !6508

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6509
  call void @llvm.dbg.value(metadata i8* %11, metadata !6501, metadata !DIExpression()), !dbg !6502
  store i8 37, i8* %4, align 1, !dbg !6511
  br label %18, !dbg !6512

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !6513
  call void @llvm.dbg.value(metadata i8* %13, metadata !6501, metadata !DIExpression()), !dbg !6502
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !6514
  call void @llvm.dbg.value(metadata i8* %14, metadata !6501, metadata !DIExpression()), !dbg !6502
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !6515
  call void @llvm.dbg.value(metadata i8* %15, metadata !6501, metadata !DIExpression()), !dbg !6502
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !6516
  call void @llvm.dbg.value(metadata i8* %16, metadata !6501, metadata !DIExpression()), !dbg !6502
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !6517
  call void @llvm.dbg.value(metadata i8* %17, metadata !6501, metadata !DIExpression()), !dbg !6502
  br label %18, !dbg !6518

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6502
  ret i8* %19, !dbg !6519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6520 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6524, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i8* %1, metadata !6525, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i8* %2, metadata !6526, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i8* %3, metadata !6527, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i32 0, metadata !6528, metadata !DIExpression()), !dbg !6531
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6532

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6533
  call void @llvm.dbg.value(metadata i32 %9, metadata !6528, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i8* %8, metadata !6526, metadata !DIExpression()), !dbg !6531
  %10 = icmp ult i8* %8, %3, !dbg !6534
  br i1 %10, label %11, label %13, !dbg !6535

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6536
  br label %17, !dbg !6535

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6537

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6538
  %16 = icmp eq i8 %15, 0, !dbg !6537
  br i1 %16, label %24, label %17, !dbg !6532

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6536
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6539
  call void @llvm.dbg.value(metadata i8* %19, metadata !6526, metadata !DIExpression()), !dbg !6531
  %20 = zext i8 %18 to i32, !dbg !6540
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !6541
  call void @llvm.dbg.value(metadata i32 %21, metadata !6529, metadata !DIExpression()), !dbg !6542
  %22 = icmp slt i32 %21, 0, !dbg !6543
  %23 = add i32 %9, 1, !dbg !6545
  call void @llvm.dbg.value(metadata i32 undef, metadata !6528, metadata !DIExpression()), !dbg !6531
  br i1 %22, label %24, label %7, !llvm.loop !6546

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6531
  ret i32 %25, !dbg !6548
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6549 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6553, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6554, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i8* %2, metadata !6555, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i8* %3, metadata !6556, metadata !DIExpression()), !dbg !6563
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6564
  %6 = load i8, i8* %5, align 1, !dbg !6564
  %7 = zext i8 %6 to i32, !dbg !6565
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !6566
  %9 = icmp eq i32 %8, 0, !dbg !6566
  call void @llvm.dbg.value(metadata i1 %9, metadata !6557, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6563
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !6567
  call void @llvm.dbg.value(metadata i32 %10, metadata !6558, metadata !DIExpression()), !dbg !6563
  %11 = ptrtoint i8* %3 to i32, !dbg !6568
  %12 = ptrtoint i8* %2 to i32, !dbg !6568
  %13 = sub i32 %11, %12, !dbg !6568
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6569
  call void @llvm.dbg.value(metadata i8* %14, metadata !6560, metadata !DIExpression()), !dbg !6563
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6570

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6563
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6553, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i8* %18, metadata !6560, metadata !DIExpression()), !dbg !6563
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6571
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6572
  call void @llvm.dbg.value(metadata i32 %25, metadata !6561, metadata !DIExpression()), !dbg !6573
  %26 = icmp ult i32 %25, 10, !dbg !6574
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6575
  %28 = add i32 %27, %25, !dbg !6573
  %29 = trunc i32 %28 to i8, !dbg !6575
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6576
  call void @llvm.dbg.value(metadata i8* %30, metadata !6560, metadata !DIExpression()), !dbg !6563
  store i8 %29, i8* %30, align 1, !dbg !6577
  call void @llvm.dbg.value(metadata i64 %22, metadata !6553, metadata !DIExpression()), !dbg !6563
  %31 = icmp uge i64 %19, %15, !dbg !6578
  %32 = icmp ugt i8* %30, %2, !dbg !6579
  %33 = and i1 %31, %32, !dbg !6579
  br i1 %33, label %17, label %34, !dbg !6580, !llvm.loop !6581

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6583
  %36 = load i24, i24* %35, align 4, !dbg !6583
  %37 = and i24 %36, 32, !dbg !6583
  %38 = icmp eq i24 %37, 0, !dbg !6583
  br i1 %38, label %44, label %39, !dbg !6585

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6586

40:                                               ; preds = %39
  br label %41, !dbg !6588

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6592
  store i24 %43, i24* %35, align 4, !dbg !6592
  br label %44, !dbg !6593

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !6594 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6600, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.value(metadata i8* %1, metadata !6601, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.value(metadata i32 %2, metadata !6602, metadata !DIExpression()), !dbg !6603
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6604
  %5 = load i24, i24* %4, align 4, !dbg !6604
  %6 = lshr i24 %5, 11, !dbg !6604
  %7 = and i24 %6, 15, !dbg !6604
  %8 = zext i24 %7 to i32, !dbg !6604
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6605

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6606
  store i32 %2, i32* %10, align 4, !dbg !6608
  br label %28, !dbg !6609

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6610
  store i8 %12, i8* %1, align 1, !dbg !6611
  br label %28, !dbg !6612

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6613
  %15 = bitcast i8* %1 to i16*, !dbg !6614
  store i16 %14, i16* %15, align 2, !dbg !6615
  br label %28, !dbg !6616

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6617
  store i32 %2, i32* %17, align 4, !dbg !6618
  br label %28, !dbg !6619

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6620
  %20 = bitcast i8* %1 to i64*, !dbg !6621
  store i64 %19, i64* %20, align 8, !dbg !6622
  br label %28, !dbg !6623

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6624
  %23 = bitcast i8* %1 to i64*, !dbg !6625
  store i64 %22, i64* %23, align 8, !dbg !6626
  br label %28, !dbg !6627

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6628
  store i32 %2, i32* %25, align 4, !dbg !6629
  br label %28, !dbg !6630

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6631
  store i32 %2, i32* %27, align 4, !dbg !6632
  br label %28, !dbg !6633

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6634
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !6635 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6638, metadata !DIExpression()), !dbg !6639
  %2 = add i32 %0, -65, !dbg !6640
  %3 = icmp ult i32 %2, 26, !dbg !6641
  %4 = zext i1 %3 to i32, !dbg !6641
  ret i32 %4, !dbg !6642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !6643 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6647, metadata !DIExpression()), !dbg !6648
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6649

2:                                                ; preds = %1
  br label %4, !dbg !6650

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6652

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6653
  ret i32 %5, !dbg !6654
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !6655 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6657, metadata !DIExpression()), !dbg !6660
  call void @llvm.dbg.value(metadata i8* %1, metadata !6658, metadata !DIExpression()), !dbg !6660
  call void @llvm.dbg.value(metadata i8 1, metadata !6659, metadata !DIExpression()), !dbg !6660
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6661

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6659, metadata !DIExpression()), !dbg !6660
  call void @llvm.dbg.value(metadata i8* %5, metadata !6658, metadata !DIExpression()), !dbg !6660
  %6 = load i8, i8* %5, align 1, !dbg !6662
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6664

7:                                                ; preds = %4
  br label %11, !dbg !6665

8:                                                ; preds = %4
  br label %11, !dbg !6667

9:                                                ; preds = %4
  br label %11, !dbg !6668

10:                                               ; preds = %4
  br label %11, !dbg !6669

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6670
  %14 = or i24 %13, %12, !dbg !6670
  store i24 %14, i24* %3, align 4, !dbg !6670
  call void @llvm.dbg.value(metadata i8 poison, metadata !6659, metadata !DIExpression()), !dbg !6660
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6658, metadata !DIExpression()), !dbg !6660
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6659, metadata !DIExpression()), !dbg !6660
  call void @llvm.dbg.value(metadata i8* %15, metadata !6658, metadata !DIExpression()), !dbg !6660
  %17 = load i24, i24* %3, align 4, !dbg !6671
  %18 = and i24 %17, 68, !dbg !6673
  %19 = icmp eq i24 %18, 68, !dbg !6673
  br i1 %19, label %20, label %22, !dbg !6673

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6674
  store i24 %21, i24* %3, align 4, !dbg !6674
  br label %22, !dbg !6676

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6677
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6678 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6680, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i8* %1, metadata !6681, metadata !DIExpression()), !dbg !6684
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6685
  %5 = load i24, i24* %4, align 4, !dbg !6686
  %6 = or i24 %5, 128, !dbg !6686
  store i24 %6, i24* %4, align 4, !dbg !6686
  call void @llvm.dbg.value(metadata i8* %1, metadata !6681, metadata !DIExpression()), !dbg !6684
  %7 = load i8, i8* %1, align 1, !dbg !6687
  %8 = icmp eq i8 %7, 42, !dbg !6689
  br i1 %8, label %9, label %12, !dbg !6690

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6691
  store i24 %10, i24* %4, align 4, !dbg !6691
  call void @llvm.dbg.value(metadata i8* %1, metadata !6681, metadata !DIExpression()), !dbg !6684
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6693
  call void @llvm.dbg.value(metadata i8* %11, metadata !6681, metadata !DIExpression()), !dbg !6684
  store i8* %11, i8** %3, align 4, !dbg !6693
  br label %29, !dbg !6694

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i8** %3, metadata !6681, metadata !DIExpression(DW_OP_deref)), !dbg !6684
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !6695
  call void @llvm.dbg.value(metadata i32 %13, metadata !6683, metadata !DIExpression()), !dbg !6684
  %14 = load i8*, i8** %3, align 4, !dbg !6696
  call void @llvm.dbg.value(metadata i8* %14, metadata !6681, metadata !DIExpression()), !dbg !6684
  %15 = icmp eq i8* %14, %1, !dbg !6698
  br i1 %15, label %29, label %16, !dbg !6699

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6700
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6702
  store i32 %13, i32* %18, align 4, !dbg !6703
  %19 = lshr i32 %13, 31, !dbg !6704
  %20 = lshr i24 %17, 1, !dbg !6705
  %21 = and i24 %20, 1, !dbg !6705
  %22 = zext i24 %21 to i32, !dbg !6705
  %23 = or i32 %19, %22, !dbg !6705
  %24 = trunc i32 %23 to i24, !dbg !6705
  %25 = shl nuw nsw i24 %24, 1, !dbg !6705
  %26 = and i24 %17, -131, !dbg !6705
  %27 = or i24 %26, 128, !dbg !6705
  %28 = or i24 %25, %27, !dbg !6705
  store i24 %28, i24* %4, align 4, !dbg !6705
  br label %29, !dbg !6706

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6684
  ret i8* %30, !dbg !6707
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6708 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6710, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.value(metadata i8* %1, metadata !6711, metadata !DIExpression()), !dbg !6713
  %4 = load i8, i8* %1, align 1, !dbg !6714
  %5 = icmp eq i8 %4, 46, !dbg !6715
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6716
  %7 = load i24, i24* %6, align 4, !dbg !6717
  %8 = select i1 %5, i24 512, i24 0, !dbg !6717
  %9 = and i24 %7, -513, !dbg !6717
  %10 = or i24 %9, %8, !dbg !6717
  store i24 %10, i24* %6, align 4, !dbg !6717
  br i1 %5, label %11, label %32, !dbg !6718

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6711, metadata !DIExpression()), !dbg !6713
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6719
  call void @llvm.dbg.value(metadata i8* %12, metadata !6711, metadata !DIExpression()), !dbg !6713
  store i8* %12, i8** %3, align 4, !dbg !6719
  %13 = load i8, i8* %12, align 1, !dbg !6720
  %14 = icmp eq i8 %13, 42, !dbg !6722
  br i1 %14, label %15, label %18, !dbg !6723

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6724
  store i24 %16, i24* %6, align 4, !dbg !6724
  call void @llvm.dbg.value(metadata i8* %12, metadata !6711, metadata !DIExpression()), !dbg !6713
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6726
  call void @llvm.dbg.value(metadata i8* %17, metadata !6711, metadata !DIExpression()), !dbg !6713
  store i8* %17, i8** %3, align 4, !dbg !6726
  br label %32, !dbg !6727

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6711, metadata !DIExpression(DW_OP_deref)), !dbg !6713
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !6728
  call void @llvm.dbg.value(metadata i32 %19, metadata !6712, metadata !DIExpression()), !dbg !6713
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6729
  store i32 %19, i32* %20, align 4, !dbg !6730
  %21 = lshr i32 %19, 31, !dbg !6731
  %22 = load i24, i24* %6, align 4, !dbg !6732
  %23 = lshr i24 %22, 1, !dbg !6732
  %24 = and i24 %23, 1, !dbg !6732
  %25 = zext i24 %24 to i32, !dbg !6732
  %26 = or i32 %21, %25, !dbg !6732
  %27 = trunc i32 %26 to i24, !dbg !6732
  %28 = shl nuw nsw i24 %27, 1, !dbg !6732
  %29 = and i24 %22, -3, !dbg !6732
  %30 = or i24 %28, %29, !dbg !6732
  store i24 %30, i24* %6, align 4, !dbg !6732
  %31 = load i8*, i8** %3, align 4, !dbg !6733
  call void @llvm.dbg.value(metadata i8* %31, metadata !6711, metadata !DIExpression()), !dbg !6713
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6713
  ret i8* %33, !dbg !6734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6735 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6737, metadata !DIExpression()), !dbg !6739
  call void @llvm.dbg.value(metadata i8* %1, metadata !6738, metadata !DIExpression()), !dbg !6739
  %3 = load i8, i8* %1, align 1, !dbg !6740
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6741

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6742
  call void @llvm.dbg.value(metadata i8* %5, metadata !6738, metadata !DIExpression()), !dbg !6739
  %6 = load i8, i8* %5, align 1, !dbg !6745
  %7 = icmp eq i8 %6, 104, !dbg !6746
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6747
  %9 = load i24, i24* %8, align 4, !dbg !6747
  %10 = and i24 %9, -30721, !dbg !6747
  br i1 %7, label %11, label %14, !dbg !6748

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6749
  store i24 %12, i24* %8, align 4, !dbg !6749
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6751
  call void @llvm.dbg.value(metadata i8* %13, metadata !6738, metadata !DIExpression()), !dbg !6739
  br label %56, !dbg !6752

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6753
  store i24 %15, i24* %8, align 4, !dbg !6753
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6755
  call void @llvm.dbg.value(metadata i8* %17, metadata !6738, metadata !DIExpression()), !dbg !6739
  %18 = load i8, i8* %17, align 1, !dbg !6757
  %19 = icmp eq i8 %18, 108, !dbg !6758
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6759
  %21 = load i24, i24* %20, align 4, !dbg !6759
  %22 = and i24 %21, -30721, !dbg !6759
  br i1 %19, label %23, label %26, !dbg !6760

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6761
  store i24 %24, i24* %20, align 4, !dbg !6761
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6763
  call void @llvm.dbg.value(metadata i8* %25, metadata !6738, metadata !DIExpression()), !dbg !6739
  br label %56, !dbg !6764

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6765
  store i24 %27, i24* %20, align 4, !dbg !6765
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6767
  %30 = load i24, i24* %29, align 4, !dbg !6768
  %31 = and i24 %30, -30721, !dbg !6768
  %32 = or i24 %31, 10240, !dbg !6768
  store i24 %32, i24* %29, align 4, !dbg !6768
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6769
  call void @llvm.dbg.value(metadata i8* %33, metadata !6738, metadata !DIExpression()), !dbg !6739
  br label %56, !dbg !6770

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6771
  %36 = load i24, i24* %35, align 4, !dbg !6772
  %37 = and i24 %36, -30721, !dbg !6772
  %38 = or i24 %37, 12288, !dbg !6772
  store i24 %38, i24* %35, align 4, !dbg !6772
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6773
  call void @llvm.dbg.value(metadata i8* %39, metadata !6738, metadata !DIExpression()), !dbg !6739
  br label %56, !dbg !6774

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6775
  %42 = load i24, i24* %41, align 4, !dbg !6776
  %43 = and i24 %42, -30721, !dbg !6776
  %44 = or i24 %43, 14336, !dbg !6776
  store i24 %44, i24* %41, align 4, !dbg !6776
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6777
  call void @llvm.dbg.value(metadata i8* %45, metadata !6738, metadata !DIExpression()), !dbg !6739
  br label %56, !dbg !6778

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6779
  %48 = load i24, i24* %47, align 4, !dbg !6780
  %49 = and i24 %48, -30723, !dbg !6780
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6781
  call void @llvm.dbg.value(metadata i8* %50, metadata !6738, metadata !DIExpression()), !dbg !6739
  %51 = or i24 %49, 16386, !dbg !6782
  store i24 %51, i24* %47, align 4, !dbg !6782
  br label %56, !dbg !6783

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6784
  %54 = load i24, i24* %53, align 4, !dbg !6785
  %55 = and i24 %54, -30721, !dbg !6785
  store i24 %55, i24* %53, align 4, !dbg !6785
  br label %56, !dbg !6786

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6738, metadata !DIExpression()), !dbg !6739
  ret i8* %57, !dbg !6787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6788 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6790, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.value(metadata i8* %1, metadata !6791, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.value(metadata i8 0, metadata !6792, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.value(metadata i8* %1, metadata !6791, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6795
  %3 = load i8, i8* %1, align 1, !dbg !6796
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6797
  store i8 %3, i8* %4, align 1, !dbg !6798
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6799

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6800

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6801
  %9 = load i24, i24* %8, align 4, !dbg !6801
  %10 = and i24 %9, -458753, !dbg !6801
  %11 = or i24 %10, %7, !dbg !6801
  call void @llvm.dbg.label(metadata !6793), !dbg !6802
  %12 = and i24 %9, 30720, !dbg !6803
  %13 = icmp eq i24 %12, 16384, !dbg !6803
  %14 = zext i1 %13 to i24, !dbg !6805
  %15 = or i24 %11, %14, !dbg !6805
  %16 = icmp eq i8 %3, 99, !dbg !6806
  br i1 %16, label %17, label %43, !dbg !6808

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6809
  %19 = icmp ne i24 %18, 0, !dbg !6809
  call void @llvm.dbg.value(metadata i1 %19, metadata !6792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6795
  br label %43, !dbg !6811

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6812
  %22 = load i24, i24* %21, align 4, !dbg !6813
  %23 = and i24 %22, -458753, !dbg !6813
  %24 = or i24 %23, 262144, !dbg !6813
  call void @llvm.dbg.value(metadata i8 1, metadata !6792, metadata !DIExpression()), !dbg !6795
  br label %43, !dbg !6814

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6817
  %27 = load i24, i24* %26, align 4, !dbg !6818
  %28 = and i24 %27, -458753, !dbg !6818
  %29 = or i24 %28, 196608, !dbg !6818
  %30 = and i24 %27, 30720, !dbg !6819
  %31 = icmp eq i24 %30, 16384, !dbg !6819
  br label %43, !dbg !6821

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6822
  %34 = load i24, i24* %33, align 4, !dbg !6823
  %35 = and i24 %34, -458753, !dbg !6823
  %36 = or i24 %35, 196608, !dbg !6823
  %37 = and i24 %34, 30720, !dbg !6824
  %38 = icmp ne i24 %37, 0, !dbg !6824
  br label %43, !dbg !6826

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6827
  %41 = load i24, i24* %40, align 4, !dbg !6828
  %42 = or i24 %41, 1, !dbg !6828
  br label %43, !dbg !6829

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6830
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6831
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6832
  call void @llvm.dbg.value(metadata i8* %48, metadata !6791, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.value(metadata i8 poison, metadata !6792, metadata !DIExpression()), !dbg !6795
  %49 = lshr i24 %44, 1, !dbg !6830
  %50 = and i24 %49, 1, !dbg !6830
  %51 = zext i24 %50 to i32, !dbg !6830
  %52 = or i32 %51, %47, !dbg !6830
  %53 = trunc i32 %52 to i24, !dbg !6830
  %54 = shl nuw nsw i24 %53, 1, !dbg !6830
  %55 = and i24 %44, -3, !dbg !6830
  %56 = or i24 %54, %55, !dbg !6830
  store i24 %56, i24* %46, align 4, !dbg !6830
  ret i8* %48, !dbg !6833
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6834 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6838, metadata !DIExpression()), !dbg !6841
  %2 = load i8*, i8** %0, align 4, !dbg !6842
  call void @llvm.dbg.value(metadata i8* %2, metadata !6839, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata i32 0, metadata !6840, metadata !DIExpression()), !dbg !6841
  %3 = load i8, i8* %2, align 1, !dbg !6843
  %4 = zext i8 %3 to i32, !dbg !6844
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !6845
  %6 = icmp eq i32 %5, 0, !dbg !6846
  br i1 %6, label %19, label %7, !dbg !6846

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6840, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata i8* %10, metadata !6839, metadata !DIExpression()), !dbg !6841
  %11 = mul i32 %9, 10, !dbg !6847
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6849
  call void @llvm.dbg.value(metadata i8* %12, metadata !6839, metadata !DIExpression()), !dbg !6841
  %13 = add i32 %11, -48, !dbg !6850
  %14 = add i32 %13, %8, !dbg !6851
  call void @llvm.dbg.value(metadata i32 %14, metadata !6840, metadata !DIExpression()), !dbg !6841
  %15 = load i8, i8* %12, align 1, !dbg !6843
  %16 = zext i8 %15 to i32, !dbg !6844
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !6845
  %18 = icmp eq i32 %17, 0, !dbg !6846
  br i1 %18, label %19, label %7, !dbg !6846, !llvm.loop !6852

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6841
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6841
  store i8* %20, i8** %0, align 4, !dbg !6854
  ret i32 %21, !dbg !6855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !6856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6858, metadata !DIExpression()), !dbg !6859
  %2 = add i32 %0, -48, !dbg !6860
  %3 = icmp ult i32 %2, 10, !dbg !6861
  %4 = zext i1 %3 to i32, !dbg !6861
  ret i32 %4, !dbg !6862
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6863 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6868, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata i32 %1, metadata !6869, metadata !DIExpression()), !dbg !6870
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !6871, !srcloc !6873
  ret void, !dbg !6874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6875 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6877, metadata !DIExpression()), !dbg !6885
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6886
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6886
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6878, metadata !DIExpression()), !dbg !6887
  call void @llvm.va_start(i8* nonnull %3), !dbg !6888
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6889
  %5 = load i32, i32* %4, align 4, !dbg !6889
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6889
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !6889
  call void @llvm.va_end(i8* nonnull %3), !dbg !6890
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6891
  ret void, !dbg !6891
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6892 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,1024\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6936, !srcloc !6937
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6938, !srcloc !6939
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6942, !srcloc !6943
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6944, !srcloc !6945
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #25, !dbg !6946, !srcloc !6947
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6948, !srcloc !6949
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !6950, !srcloc !6951
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6952, !srcloc !6953
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6954, !srcloc !6955
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6956, !srcloc !6957
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #25, !dbg !6958, !srcloc !6959
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6960, !srcloc !6961
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6962, !srcloc !6963
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #25, !dbg !6964, !srcloc !6965
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6966, !srcloc !6967
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6968, !srcloc !6969
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6970, !srcloc !6971
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !6972, !srcloc !6973
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6974, !srcloc !6975
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6976, !srcloc !6977
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #25, !dbg !6978, !srcloc !6979
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6980, !srcloc !6981
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6982, !srcloc !6983
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6984, !srcloc !6985
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6986, !srcloc !6987
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6988, !srcloc !6989
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6990, !srcloc !6991
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6992, !srcloc !6993
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6994, !srcloc !6995
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !6996, !srcloc !6997
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #25, !dbg !6998, !srcloc !6999
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !7000, !srcloc !7001
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !7002, !srcloc !7003
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !7004, !srcloc !7005
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !7006, !srcloc !7007
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !7008, !srcloc !7009
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !7010, !srcloc !7011
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !7012, !srcloc !7013
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !7014, !srcloc !7015
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !7016, !srcloc !7017
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !7018, !srcloc !7019
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !7020, !srcloc !7021
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !7022, !srcloc !7023
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !7024, !srcloc !7025
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !7026, !srcloc !7027
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !7028, !srcloc !7029
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !7030, !srcloc !7031
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !7032, !srcloc !7033
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !7034, !srcloc !7035
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !7036, !srcloc !7037
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !7038, !srcloc !7039
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !7040, !srcloc !7041
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !7042, !srcloc !7043
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !7044, !srcloc !7045
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !7046, !srcloc !7047
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !7048, !srcloc !7049
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !7050, !srcloc !7051
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !7052, !srcloc !7053
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !7054, !srcloc !7055
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !7056, !srcloc !7057
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !7058, !srcloc !7059
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !7060, !srcloc !7061
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !7062, !srcloc !7063
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !7064, !srcloc !7065
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !7066, !srcloc !7067
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !7068, !srcloc !7069
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #25, !dbg !7070, !srcloc !7071
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !7072, !srcloc !7073
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !7074, !srcloc !7075
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !7076, !srcloc !7077
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !7078, !srcloc !7079
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !7080, !srcloc !7081
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #25, !dbg !7082, !srcloc !7083
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #25, !dbg !7084, !srcloc !7085
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7086, !srcloc !7087
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !7088, !srcloc !7089
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !7090, !srcloc !7091
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !7092, !srcloc !7093
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !7094, !srcloc !7095
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !7096, !srcloc !7097
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !7098, !srcloc !7099
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !7100, !srcloc !7101
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !7102, !srcloc !7103
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !7104, !srcloc !7105
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !7106, !srcloc !7107
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !7108, !srcloc !7109
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !7110, !srcloc !7111
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !7112, !srcloc !7113
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !7114, !srcloc !7115
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !7116, !srcloc !7117
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !7118, !srcloc !7119
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !7120, !srcloc !7121
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !7122, !srcloc !7123
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !7124, !srcloc !7125
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !7126, !srcloc !7127
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !7128, !srcloc !7129
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !7130, !srcloc !7131
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !7132, !srcloc !7133
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !7134, !srcloc !7135
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !7136, !srcloc !7137
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !7138, !srcloc !7139
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !7140, !srcloc !7141
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !7142, !srcloc !7143
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !7144, !srcloc !7145
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !7146, !srcloc !7147
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !7148, !srcloc !7149
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !7150, !srcloc !7151
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !7152, !srcloc !7153
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !7154, !srcloc !7155
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !7156, !srcloc !7157
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !7158, !srcloc !7159
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !7160, !srcloc !7161
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !7162, !srcloc !7163
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !7164, !srcloc !7165
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !7166, !srcloc !7167
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !7168, !srcloc !7169
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !7170, !srcloc !7171
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !7172, !srcloc !7173
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !7174, !srcloc !7175
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !7176, !srcloc !7177
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !7178, !srcloc !7179
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !7180, !srcloc !7181
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !7182, !srcloc !7183
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !7184, !srcloc !7185
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !7186, !srcloc !7187
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !7188, !srcloc !7189
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !7190, !srcloc !7191
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !7192, !srcloc !7193
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !7194, !srcloc !7195
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !7196, !srcloc !7197
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7198, !srcloc !7199
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !7200, !srcloc !7201
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !7202, !srcloc !7203
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !7204, !srcloc !7205
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !7206, !srcloc !7207
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !7208, !srcloc !7209
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !7210, !srcloc !7211
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !7212, !srcloc !7213
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !7214, !srcloc !7215
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !7216, !srcloc !7217
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !7218, !srcloc !7219
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !7220, !srcloc !7221
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7222, !srcloc !7223
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !7224, !srcloc !7225
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !7226, !srcloc !7227
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !7228, !srcloc !7229
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !7230, !srcloc !7231
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !7232, !srcloc !7233
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !7234, !srcloc !7235
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !7236, !srcloc !7237
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !7238, !srcloc !7239
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !7240, !srcloc !7241
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !7242, !srcloc !7243
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !7244, !srcloc !7245
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !7246, !srcloc !7247
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !7248, !srcloc !7249
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !7250, !srcloc !7251
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !7252, !srcloc !7253
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !7254, !srcloc !7255
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !7256, !srcloc !7257
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !7258, !srcloc !7259
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !7260, !srcloc !7261
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !7262, !srcloc !7263
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !7264, !srcloc !7265
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !7266, !srcloc !7267
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !7268, !srcloc !7269
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !7270, !srcloc !7271
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !7272, !srcloc !7273
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !7274, !srcloc !7275
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !7276, !srcloc !7277
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !7278, !srcloc !7279
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !7280, !srcloc !7281
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !7282, !srcloc !7283
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !7284, !srcloc !7285
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !7286, !srcloc !7287
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !7288, !srcloc !7289
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !7290, !srcloc !7291
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !7292, !srcloc !7293
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !7294, !srcloc !7295
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7296, !srcloc !7297
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !7298, !srcloc !7299
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !7300, !srcloc !7301
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !7302, !srcloc !7303
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !7304, !srcloc !7305
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !7306, !srcloc !7307
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !7308, !srcloc !7309
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !7310, !srcloc !7311
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !7312, !srcloc !7313
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !7314, !srcloc !7315
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !7316, !srcloc !7317
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !7318, !srcloc !7319
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !7320, !srcloc !7321
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !7322, !srcloc !7323
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !7324, !srcloc !7325
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !7326, !srcloc !7327
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !7328, !srcloc !7329
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7330, !srcloc !7331
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !7332, !srcloc !7333
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !7334, !srcloc !7335
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !7336, !srcloc !7337
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !7338, !srcloc !7339
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !7340, !srcloc !7341
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !7342, !srcloc !7343
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !7344, !srcloc !7345
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !7346, !srcloc !7347
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !7348, !srcloc !7349
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !7350, !srcloc !7351
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !7352, !srcloc !7353
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !7354, !srcloc !7355
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !7356, !srcloc !7357
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !7358, !srcloc !7359
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !7360, !srcloc !7361
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !7362, !srcloc !7363
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !7364, !srcloc !7365
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !7366, !srcloc !7367
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !7368, !srcloc !7369
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !7370, !srcloc !7371
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !7372, !srcloc !7373
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !7374, !srcloc !7375
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7376, !srcloc !7377
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !7378, !srcloc !7379
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !7380, !srcloc !7381
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !7382, !srcloc !7383
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !7384, !srcloc !7385
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7386, !srcloc !7387
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !7388, !srcloc !7389
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !7390, !srcloc !7391
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !7392, !srcloc !7393
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7394, !srcloc !7395
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !7396, !srcloc !7397
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !7398, !srcloc !7399
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !7400, !srcloc !7401
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !7402, !srcloc !7403
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !7404, !srcloc !7405
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !7406, !srcloc !7407
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !7408, !srcloc !7409
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !7410, !srcloc !7411
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !7412, !srcloc !7413
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !7414, !srcloc !7415
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !7416, !srcloc !7417
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !7418, !srcloc !7419
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !7420, !srcloc !7421
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !7422, !srcloc !7423
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !7424, !srcloc !7425
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !7426, !srcloc !7427
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !7428, !srcloc !7429
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !7430, !srcloc !7431
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !7432, !srcloc !7433
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !7434, !srcloc !7435
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !7436, !srcloc !7437
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !7438, !srcloc !7439
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !7440, !srcloc !7441
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !7442, !srcloc !7443
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !7444, !srcloc !7445
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #25, !dbg !7446, !srcloc !7447
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #25, !dbg !7448, !srcloc !7449
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #25, !dbg !7450, !srcloc !7451
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !7452, !srcloc !7453
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !7454, !srcloc !7455
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !7456, !srcloc !7457
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !7458, !srcloc !7459
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !7460, !srcloc !7461
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !7462, !srcloc !7463
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !7464, !srcloc !7465
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !7466, !srcloc !7467
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #25, !dbg !7468, !srcloc !7469
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #25, !dbg !7470, !srcloc !7471
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_CHANNEL_NAME\0A\09.equ\09CONFIG_ZBUS_CHANNEL_NAME,1\0A\09.type\09CONFIG_ZBUS_CHANNEL_NAME,%object", ""() #25, !dbg !7472, !srcloc !7473
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #25, !dbg !7474, !srcloc !7475
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_WRN\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_WRN,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_WRN,%object", ""() #25, !dbg !7476, !srcloc !7477
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,2\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #25, !dbg !7478, !srcloc !7479
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !7480, !srcloc !7481
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7482, !srcloc !7483
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !7484, !srcloc !7485
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !7486, !srcloc !7487
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !7488, !srcloc !7489
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !7490, !srcloc !7491
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !7492, !srcloc !7493
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !7494, !srcloc !7495
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !7496, !srcloc !7497
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !7498, !srcloc !7499
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !7500, !srcloc !7501
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !7502, !srcloc !7503
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !7504, !srcloc !7505
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !7506, !srcloc !7507
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !7508, !srcloc !7509
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !7510, !srcloc !7511
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !7512, !srcloc !7513
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !7514, !srcloc !7515
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !7516, !srcloc !7517
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !7518, !srcloc !7519
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !7520, !srcloc !7521
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !7522, !srcloc !7523
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !7524, !srcloc !7525
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !7526, !srcloc !7527
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !7528, !srcloc !7529
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !7530, !srcloc !7531
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !7532, !srcloc !7533
  ret void, !dbg !7534
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7535 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7537, metadata !DIExpression()), !dbg !7539
  tail call fastcc void @LL_FLASH_EnableInstCache() #27, !dbg !7540
  tail call fastcc void @LL_FLASH_EnableDataCache() #27, !dbg !7541
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !7542, !srcloc !7551
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7542
  call void @llvm.dbg.value(metadata i32 %3, metadata !7548, metadata !DIExpression()) #25, !dbg !7552
  call void @llvm.dbg.value(metadata i32 undef, metadata !7549, metadata !DIExpression()) #25, !dbg !7552
  call void @llvm.dbg.value(metadata i32 %3, metadata !7538, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.value(metadata i32 %3, metadata !7553, metadata !DIExpression()) #25, !dbg !7558
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !7560, !srcloc !7561
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7562
  ret i32 0, !dbg !7563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #16 !dbg !7564 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7566
  %2 = or i32 %1, 512, !dbg !7566
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7566
  ret void, !dbg !7567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #16 !dbg !7568 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7569
  %2 = or i32 %1, 1024, !dbg !7569
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7569
  ret void, !dbg !7570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !7571 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7573, metadata !DIExpression()), !dbg !7574
  ret i32 0, !dbg !7575
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7576 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7579, metadata !DIExpression()), !dbg !7587
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7588
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7588
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7580, metadata !DIExpression()), !dbg !7589
  call void @llvm.va_start(i8* nonnull %3), !dbg !7590
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7591
  %5 = load i32, i32* %4, align 4, !dbg !7591
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7591
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !7591
  call void @llvm.va_end(i8* nonnull %3), !dbg !7592
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7593
  ret void, !dbg !7593
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7594 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7599, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i8* %0, metadata !7598, metadata !DIExpression()), !dbg !7600
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #26, !dbg !7601
  ret void, !dbg !7602
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7607, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.value(metadata i8* %1, metadata !7608, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.value(metadata i32 %2, metadata !7609, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.value(metadata i8* %1, metadata !7610, metadata !DIExpression()), !dbg !7611
  %4 = icmp eq i32 %2, 0, !dbg !7612
  br i1 %4, label %14, label %5, !dbg !7613

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #27, !dbg !7611
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7613

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7610, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.value(metadata i32 %10, metadata !7609, metadata !DIExpression()), !dbg !7611
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), i32 noundef %7) #26, !dbg !7614
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #27, !dbg !7616
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7617
  call void @llvm.dbg.value(metadata i32 %11, metadata !7609, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.value(metadata i8* %12, metadata !7610, metadata !DIExpression()), !dbg !7611
  br i1 %13, label %14, label %8, !dbg !7617, !llvm.loop !7618

14:                                               ; preds = %8, %3
  ret void, !dbg !7620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !7621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7626, metadata !DIExpression()), !dbg !7627
  %2 = add i32 %0, -1, !dbg !7628
  %3 = icmp ult i32 %2, 4, !dbg !7628
  %4 = shl i32 %2, 3, !dbg !7628
  %5 = lshr i32 1145657157, %4, !dbg !7628
  %6 = trunc i32 %5 to i8, !dbg !7628
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7628
  ret i8 %7, !dbg !7629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7630 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7634, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 %1, metadata !7635, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 0, metadata !7636, metadata !DIExpression()), !dbg !7646
  br label %4, !dbg !7647

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.66, i32 0, i32 0)) #26, !dbg !7648
  call void @llvm.dbg.value(metadata i32 0, metadata !7638, metadata !DIExpression()), !dbg !7649
  br label %16, !dbg !7650

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7636, metadata !DIExpression()), !dbg !7646
  %6 = icmp ult i32 %5, %1, !dbg !7651
  br i1 %6, label %7, label %11, !dbg !7655

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7656
  %9 = load i8, i8* %8, align 1, !dbg !7656
  %10 = zext i8 %9 to i32, !dbg !7658
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.67, i32 0, i32 0), i32 noundef %10) #26, !dbg !7659
  br label %12, !dbg !7660

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.68, i32 0, i32 0)) #26, !dbg !7661
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7663
  call void @llvm.dbg.value(metadata i32 %13, metadata !7636, metadata !DIExpression()), !dbg !7646
  %14 = icmp eq i32 %13, 8, !dbg !7664
  br i1 %14, label %3, label %4, !dbg !7647, !llvm.loop !7665

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.69, i32 0, i32 0)) #26, !dbg !7667
  ret void, !dbg !7668

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7638, metadata !DIExpression()), !dbg !7649
  %18 = icmp ult i32 %17, %1, !dbg !7669
  br i1 %18, label %19, label %26, !dbg !7670

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7671
  %21 = load i8, i8* %20, align 1, !dbg !7671
  call void @llvm.dbg.value(metadata i8 %21, metadata !7640, metadata !DIExpression()), !dbg !7672
  %22 = zext i8 %21 to i32, !dbg !7673
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #27, !dbg !7674
  %24 = icmp eq i32 %23, 0, !dbg !7675
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7674
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.70, i32 0, i32 0), i32 noundef %25) #26, !dbg !7676
  br label %27, !dbg !7677

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.71, i32 0, i32 0)) #26, !dbg !7678
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7680
  call void @llvm.dbg.value(metadata i32 %28, metadata !7638, metadata !DIExpression()), !dbg !7649
  %29 = icmp eq i32 %28, 8, !dbg !7681
  br i1 %29, label %15, label %16, !dbg !7650, !llvm.loop !7682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !7684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7686, metadata !DIExpression()), !dbg !7687
  %2 = add i32 %0, -32, !dbg !7688
  %3 = icmp ult i32 %2, 95, !dbg !7688
  %4 = zext i1 %3 to i32, !dbg !7688
  ret i32 %4, !dbg !7689
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7739, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7740, metadata !DIExpression()), !dbg !7741
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7742
  br i1 %3, label %5, label %4, !dbg !7744

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #27, !dbg !7745
  br label %5, !dbg !7747

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !7748
  ret void, !dbg !7749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7750 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7754, metadata !DIExpression()), !dbg !7755
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7756
  %3 = load i32, i32* %2, align 4, !dbg !7756
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7756
  %5 = load i32, i32* %4, align 4, !dbg !7756
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7756
  %7 = load i32, i32* %6, align 4, !dbg !7756
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #26, !dbg !7756
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7761
  %9 = load i32, i32* %8, align 4, !dbg !7761
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7761
  %11 = load i32, i32* %10, align 4, !dbg !7761
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7761
  %13 = load i32, i32* %12, align 4, !dbg !7761
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #26, !dbg !7761
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7766
  %15 = load i32, i32* %14, align 4, !dbg !7766
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.74, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #26, !dbg !7766
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7771
  %17 = load i32, i32* %16, align 4, !dbg !7771
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.75, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #26, !dbg !7771
  ret void, !dbg !7776
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7777 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7794, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7795, metadata !DIExpression()), !dbg !7797
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7798
  %4 = load i32, i32* %3, align 4, !dbg !7798
  call void @llvm.dbg.value(metadata i32 %4, metadata !7796, metadata !DIExpression()), !dbg !7797
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !7799
  ret void, !dbg !7800
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !7801 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7805, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i8* %0, metadata !7806, metadata !DIExpression()), !dbg !7808
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7809
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !7809
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7807, metadata !DIExpression()), !dbg !7810
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7810
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7811
  %5 = bitcast i8* %4 to i32*, !dbg !7811
  %6 = load i32, i32* %5, align 4, !dbg !7811
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7812
  store i32 %6, i32* %7, align 4, !dbg !7813
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !7814
  unreachable, !dbg !7815
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7819, metadata !DIExpression()), !dbg !7820
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !7821
  ret void, !dbg !7822
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7827, metadata !DIExpression()), !dbg !7828
  %2 = icmp sgt i32 %0, -1, !dbg !7829
  br i1 %2, label %3, label %8, !dbg !7831

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7832, !srcloc !7834
  %4 = and i32 %0, 31, !dbg !7835
  %5 = shl nuw i32 1, %4, !dbg !7836
  %6 = lshr i32 %0, 5, !dbg !7837
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7838
  store volatile i32 %5, i32* %7, align 4, !dbg !7839
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7840, !srcloc !7841
  br label %8, !dbg !7842

8:                                                ; preds = %3, %1
  ret void, !dbg !7843
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7844 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7846, metadata !DIExpression()), !dbg !7847
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !7848
  ret void, !dbg !7849
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7852, metadata !DIExpression()), !dbg !7853
  %2 = icmp sgt i32 %0, -1, !dbg !7854
  br i1 %2, label %3, label %8, !dbg !7856

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7857
  %5 = shl nuw i32 1, %4, !dbg !7859
  %6 = lshr i32 %0, 5, !dbg !7860
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7861
  store volatile i32 %5, i32* %7, align 4, !dbg !7862
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7863, !srcloc !7867
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7868, !srcloc !7871
  br label %8, !dbg !7872

8:                                                ; preds = %3, %1
  ret void, !dbg !7873
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !7874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7878, metadata !DIExpression()), !dbg !7879
  %2 = lshr i32 %0, 5, !dbg !7880
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7881
  %4 = load volatile i32, i32* %3, align 4, !dbg !7881
  %5 = and i32 %0, 31, !dbg !7882
  %6 = shl nuw i32 1, %5, !dbg !7882
  %7 = and i32 %4, %6, !dbg !7883
  ret i32 %7, !dbg !7884
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7889, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i32 %1, metadata !7890, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i32 %2, metadata !7891, metadata !DIExpression()), !dbg !7892
  %4 = add i32 %1, 1, !dbg !7893
  call void @llvm.dbg.value(metadata i32 %4, metadata !7890, metadata !DIExpression()), !dbg !7892
  %5 = icmp ult i32 %4, 16, !dbg !7896
  br i1 %5, label %7, label %6, !dbg !7899

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 94) #26, !dbg !7900
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.79, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #26, !dbg !7900
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 94) #26, !dbg !7900
  unreachable, !dbg !7900

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !7902
  ret void, !dbg !7903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7908, metadata !DIExpression()), !dbg !7910
  call void @llvm.dbg.value(metadata i32 %1, metadata !7909, metadata !DIExpression()), !dbg !7910
  %3 = trunc i32 %1 to i8, !dbg !7911
  %4 = shl i8 %3, 4, !dbg !7911
  %5 = and i32 %0, 15, !dbg !7913
  %6 = add nsw i32 %5, -4, !dbg !7913
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7913
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7913
  %9 = icmp slt i32 %0, 0, !dbg !7913
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7913
  store volatile i8 %4, i8* %10, align 1, !dbg !7911
  ret void, !dbg !7914
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7915 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7917, metadata !DIExpression()), !dbg !7918
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !7919
  ret void, !dbg !7920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7921 {
  tail call void @z_SysNmiOnReset() #26, !dbg !7923
  tail call void @z_arm_int_exit() #26, !dbg !7924
  ret void, !dbg !7925
}

; Function Attrs: optsize
declare !dbg !7926 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7927 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !7929 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !7931
  tail call fastcc void @z_arm_floating_point_init() #27, !dbg !7932
  tail call void @z_bss_zero() #26, !dbg !7933
  tail call void @z_data_copy() #26, !dbg !7934
  tail call void @z_arm_interrupt_init() #26, !dbg !7935
  tail call void @z_cstart() #29, !dbg !7936
  unreachable, !dbg !7936
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7937 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7938
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7939, !srcloc !7942
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7943, !srcloc !7946
  ret void, !dbg !7947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7948 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7949
  %2 = and i32 %1, -15728641, !dbg !7949
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7949
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !7950, !srcloc !7957
  call void @llvm.dbg.value(metadata i32 %3, metadata !7955, metadata !DIExpression()) #25, !dbg !7958
  %4 = and i32 %3, -5, !dbg !7959
  call void @llvm.dbg.value(metadata i32 %4, metadata !7960, metadata !DIExpression()) #25, !dbg !7965
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !7967, !srcloc !7968
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7969, !srcloc !7946
  ret void, !dbg !7971
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7972 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7975, metadata !DIExpression()), !dbg !7976
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7977
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7978
  store i32 %0, i32* %3, align 4, !dbg !7979
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7980
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7981
  store i32 %4, i32* %5, align 4, !dbg !7982
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7983
  %7 = or i32 %6, 268435456, !dbg !7983
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7983
  call void @llvm.dbg.value(metadata i32 0, metadata !7984, metadata !DIExpression()) #25, !dbg !7987
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7989, !srcloc !7990
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7991
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7992
  %10 = load i32, i32* %9, align 4, !dbg !7992
  ret i32 %10, !dbg !7993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !7994 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8106, metadata !DIExpression()), !dbg !8114
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8107, metadata !DIExpression()), !dbg !8114
  call void @llvm.dbg.value(metadata i8* %2, metadata !8108, metadata !DIExpression()), !dbg !8114
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8109, metadata !DIExpression()), !dbg !8114
  call void @llvm.dbg.value(metadata i8* %4, metadata !8110, metadata !DIExpression()), !dbg !8114
  call void @llvm.dbg.value(metadata i8* %5, metadata !8111, metadata !DIExpression()), !dbg !8114
  call void @llvm.dbg.value(metadata i8* %6, metadata !8112, metadata !DIExpression()), !dbg !8114
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8115
  call void @llvm.dbg.value(metadata i8* %8, metadata !8113, metadata !DIExpression()), !dbg !8114
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8116
  %10 = bitcast i8* %9 to i32*, !dbg !8116
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8117
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8118
  %12 = bitcast i8* %8 to i32*, !dbg !8119
  store i32 %11, i32* %12, align 4, !dbg !8120
  %13 = ptrtoint i8* %4 to i32, !dbg !8121
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8122
  %15 = bitcast i8* %14 to i32*, !dbg !8122
  store i32 %13, i32* %15, align 4, !dbg !8123
  %16 = ptrtoint i8* %5 to i32, !dbg !8124
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8125
  %18 = bitcast i8* %17 to i32*, !dbg !8125
  store i32 %16, i32* %18, align 4, !dbg !8126
  %19 = ptrtoint i8* %6 to i32, !dbg !8127
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8128
  %21 = bitcast i8* %20 to i32*, !dbg !8128
  store i32 %19, i32* %21, align 4, !dbg !8129
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8130
  %23 = bitcast i8* %22 to i32*, !dbg !8130
  store i32 16777216, i32* %23, align 4, !dbg !8131
  %24 = ptrtoint i8* %8 to i32, !dbg !8132
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8133
  store i32 %24, i32* %25, align 8, !dbg !8134
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8135
  store i32 0, i32* %26, align 4, !dbg !8136
  ret void, !dbg !8137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8143, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata i32 %1, metadata !8144, metadata !DIExpression()), !dbg !8149
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8150
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8145, metadata !DIExpression()), !dbg !8149
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8151
  br i1 %4, label %19, label %5, !dbg !8153

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8148, metadata !DIExpression()), !dbg !8149
  %6 = icmp eq i32 %0, -22, !dbg !8154
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8154
  %8 = load i32, i32* %7, align 4, !dbg !8154
  br i1 %6, label %16, label %9, !dbg !8156

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8154
  %11 = icmp ule i32 %10, %0, !dbg !8154
  %12 = icmp ugt i32 %8, %0, !dbg !8154
  %13 = and i1 %12, %11, !dbg !8154
  %14 = icmp ugt i32 %8, %1, !dbg !8154
  %15 = and i1 %14, %13, !dbg !8154
  br i1 %15, label %18, label %19, !dbg !8154

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8154
  br i1 %17, label %18, label %19, !dbg !8156

18:                                               ; preds = %9, %16
  br label %19, !dbg !8157

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8149
  ret i32 %20, !dbg !8159
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !8160 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8164, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.value(metadata i8* %1, metadata !8165, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8166, metadata !DIExpression()), !dbg !8167
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8168
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !8169
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !8170, !srcloc !8171
  unreachable, !dbg !8172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8173 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8191, metadata !DIExpression()), !dbg !8201
  call void @llvm.dbg.value(metadata i32 %1, metadata !8192, metadata !DIExpression()), !dbg !8201
  call void @llvm.dbg.value(metadata i32 %2, metadata !8193, metadata !DIExpression()), !dbg !8201
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8194, metadata !DIExpression()), !dbg !8201
  call void @llvm.dbg.value(metadata i32 0, metadata !8195, metadata !DIExpression()), !dbg !8201
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8202
  call void @llvm.dbg.value(metadata i32 %8, metadata !8196, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !8201
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8203
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8203
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !8204
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !8204
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8200, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 0, metadata !8206, metadata !DIExpression()) #25, !dbg !8209
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8211, !srcloc !8212
  call void @llvm.dbg.value(metadata i8* %6, metadata !8198, metadata !DIExpression(DW_OP_deref)), !dbg !8201
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !8213
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !8199, metadata !DIExpression()), !dbg !8201
  %11 = icmp eq %struct.__esf* %10, null, !dbg !8214
  br i1 %11, label %12, label %13, !dbg !8217

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.83, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 1057) #26, !dbg !8218
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.85, i32 0, i32 0)) #26, !dbg !8218
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 1057) #26, !dbg !8218
  unreachable, !dbg !8218

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !8220
  call void @llvm.dbg.value(metadata i32 %14, metadata !8196, metadata !DIExpression()), !dbg !8201
  call void @llvm.dbg.value(metadata i8* %5, metadata !8197, metadata !DIExpression(DW_OP_deref)), !dbg !8201
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #27, !dbg !8221
  call void @llvm.dbg.value(metadata i32 %15, metadata !8195, metadata !DIExpression()), !dbg !8201
  %16 = load i8, i8* %5, align 1, !dbg !8222, !range !8224
  call void @llvm.dbg.value(metadata i8 %16, metadata !8197, metadata !DIExpression()), !dbg !8201
  %17 = icmp eq i8 %16, 0, !dbg !8222
  br i1 %17, label %18, label %35, !dbg !8225

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !8226
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #26, !dbg !8227
  %21 = load i8, i8* %6, align 1, !dbg !8228, !range !8224
  call void @llvm.dbg.value(metadata i8 %21, metadata !8198, metadata !DIExpression()), !dbg !8201
  %22 = icmp eq i8 %21, 0, !dbg !8228
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8230
  %24 = load i32, i32* %23, align 4, !dbg !8230
  br i1 %22, label %30, label %25, !dbg !8231

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !8232
  %27 = icmp eq i32 %26, 0, !dbg !8235
  br i1 %27, label %28, label %34, !dbg !8236

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !8237
  br label %32, !dbg !8239

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !8240
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !8230
  br label %34, !dbg !8242

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #26, !dbg !8242
  br label %35, !dbg !8243

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !8243
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8243
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8243
  ret void, !dbg !8243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8244 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8249, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.value(metadata i32 %1, metadata !8250, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.value(metadata i32 %2, metadata !8251, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.value(metadata i8* %3, metadata !8252, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.value(metadata i8 0, metadata !8253, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8254, metadata !DIExpression()), !dbg !8255
  store i8 0, i8* %3, align 1, !dbg !8256
  %5 = icmp ugt i32 %2, -16777217, !dbg !8257
  br i1 %5, label %6, label %17, !dbg !8259

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8260
  %8 = icmp eq i32 %7, 8, !dbg !8260
  br i1 %8, label %9, label %10, !dbg !8260

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.97, i32 0, i32 0), i32 noundef 69) #26, !dbg !8262
  br label %17, !dbg !8268

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8269
  %12 = icmp eq i32 %11, 0, !dbg !8269
  br i1 %12, label %13, label %14, !dbg !8270

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8254, metadata !DIExpression()), !dbg !8255
  store i8 1, i8* %3, align 1, !dbg !8273
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8255
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8254, metadata !DIExpression()), !dbg !8255
  br label %17, !dbg !8276

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8255
  ret %struct.__esf* %18, !dbg !8277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8278 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8282, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.value(metadata i32 %1, metadata !8283, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.value(metadata i8* %2, metadata !8284, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.value(metadata i32 0, metadata !8285, metadata !DIExpression()), !dbg !8286
  store i8 0, i8* %2, align 1, !dbg !8287
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8288

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !8289
  call void @llvm.dbg.value(metadata i32 %5, metadata !8285, metadata !DIExpression()), !dbg !8286
  br label %12, !dbg !8291

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !8292
  call void @llvm.dbg.value(metadata i32 %7, metadata !8285, metadata !DIExpression()), !dbg !8286
  br label %12, !dbg !8293

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !8294
  call void @llvm.dbg.value(metadata i32 0, metadata !8285, metadata !DIExpression()), !dbg !8286
  br label %12, !dbg !8295

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !8296
  call void @llvm.dbg.value(metadata i32 0, metadata !8285, metadata !DIExpression()), !dbg !8286
  br label %12, !dbg !8297

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !8298
  br label %12, !dbg !8299

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #27, !dbg !8300
  br label %12, !dbg !8301

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8286
  call void @llvm.dbg.value(metadata i32 %13, metadata !8285, metadata !DIExpression()), !dbg !8286
  ret i32 %13, !dbg !8302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8303 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8307, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.value(metadata i8* %1, metadata !8308, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.value(metadata i32 0, metadata !8309, metadata !DIExpression()), !dbg !8310
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.89, i32 0, i32 0), i32 noundef 69) #26, !dbg !8311
  store i8 0, i8* %1, align 1, !dbg !8316
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8317
  %4 = and i32 %3, 2, !dbg !8319
  %5 = icmp eq i32 %4, 0, !dbg !8320
  br i1 %5, label %7, label %6, !dbg !8321

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.90, i32 0, i32 0), i32 noundef 69) #26, !dbg !8322
  br label %38, !dbg !8328

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8329
  %9 = icmp sgt i32 %8, -1, !dbg !8331
  br i1 %9, label %11, label %10, !dbg !8332

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.91, i32 0, i32 0), i32 noundef 69) #26, !dbg !8333
  br label %38, !dbg !8339

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8340
  %13 = and i32 %12, 1073741824, !dbg !8342
  %14 = icmp eq i32 %13, 0, !dbg !8343
  br i1 %14, label %37, label %15, !dbg !8344

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.92, i32 0, i32 0), i32 noundef 69) #26, !dbg !8345
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !8351
  br i1 %16, label %17, label %21, !dbg !8353

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8354
  %19 = load i32, i32* %18, align 4, !dbg !8354
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.93, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #26, !dbg !8354
  %20 = load i32, i32* %18, align 4, !dbg !8360
  call void @llvm.dbg.value(metadata i32 %20, metadata !8309, metadata !DIExpression()), !dbg !8310
  br label %38, !dbg !8361

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8362
  %23 = and i32 %22, 255, !dbg !8364
  %24 = icmp eq i32 %23, 0, !dbg !8365
  br i1 %24, label %27, label %25, !dbg !8366

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !8367
  call void @llvm.dbg.value(metadata i32 %26, metadata !8309, metadata !DIExpression()), !dbg !8310
  br label %38, !dbg !8369

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8370
  %29 = and i32 %28, 65280, !dbg !8372
  %30 = icmp eq i32 %29, 0, !dbg !8373
  br i1 %30, label %32, label %31, !dbg !8374

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !8375
  call void @llvm.dbg.value(metadata i32 0, metadata !8309, metadata !DIExpression()), !dbg !8310
  br label %38, !dbg !8377

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8378
  %34 = icmp ult i32 %33, 65536, !dbg !8380
  br i1 %34, label %36, label %35, !dbg !8381

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #27, !dbg !8382
  call void @llvm.dbg.value(metadata i32 0, metadata !8309, metadata !DIExpression()), !dbg !8310
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 755) #26, !dbg !8384
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.95, i32 0, i32 0)) #26, !dbg !8384
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 755) #26, !dbg !8384
  unreachable, !dbg !8384

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 760) #26, !dbg !8389
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.96, i32 0, i32 0)) #26, !dbg !8389
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 760) #26, !dbg !8389
  unreachable, !dbg !8389

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !8310
  call void @llvm.dbg.value(metadata i32 %39, metadata !8309, metadata !DIExpression()), !dbg !8310
  ret i32 %39, !dbg !8394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8395 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8397, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.value(metadata i32 %1, metadata !8398, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.value(metadata i8* %2, metadata !8399, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.value(metadata i32 0, metadata !8400, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.value(metadata i32 -22, metadata !8401, metadata !DIExpression()), !dbg !8410
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.88, i32 0, i32 0), i32 noundef 69) #26, !dbg !8411
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8416
  %5 = and i32 %4, 16, !dbg !8418
  %6 = icmp eq i32 %5, 0, !dbg !8419
  br i1 %6, label %8, label %7, !dbg !8420

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #26, !dbg !8421
  br label %8, !dbg !8427

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8428
  %10 = and i32 %9, 8, !dbg !8430
  %11 = icmp eq i32 %10, 0, !dbg !8431
  br i1 %11, label %13, label %12, !dbg !8432

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #26, !dbg !8433
  br label %13, !dbg !8439

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8440
  %15 = and i32 %14, 2, !dbg !8441
  %16 = icmp eq i32 %15, 0, !dbg !8442
  br i1 %16, label %27, label %17, !dbg !8443

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #26, !dbg !8444
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8449
  call void @llvm.dbg.value(metadata i32 %18, metadata !8402, metadata !DIExpression()), !dbg !8450
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8451
  %20 = and i32 %19, 128, !dbg !8453
  %21 = icmp eq i32 %20, 0, !dbg !8454
  br i1 %21, label %27, label %22, !dbg !8455

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8401, metadata !DIExpression()), !dbg !8410
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #26, !dbg !8456
  %23 = icmp eq i32 %1, 0, !dbg !8462
  br i1 %23, label %27, label %24, !dbg !8464

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8465
  %26 = and i32 %25, -129, !dbg !8465
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8465
  br label %27, !dbg !8467

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8410
  call void @llvm.dbg.value(metadata i32 %28, metadata !8401, metadata !DIExpression()), !dbg !8410
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8468
  %30 = and i32 %29, 1, !dbg !8470
  %31 = icmp eq i32 %30, 0, !dbg !8471
  br i1 %31, label %33, label %32, !dbg !8472

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #26, !dbg !8473
  br label %33, !dbg !8479

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8480
  %35 = and i32 %34, 32, !dbg !8482
  %36 = icmp eq i32 %35, 0, !dbg !8483
  br i1 %36, label %38, label %37, !dbg !8484

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #26, !dbg !8485
  br label %38, !dbg !8491

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8492
  %40 = and i32 %39, 16, !dbg !8493
  %41 = icmp eq i32 %40, 0, !dbg !8493
  br i1 %41, label %42, label %46, !dbg !8494

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8495
  %44 = and i32 %43, 2, !dbg !8496
  %45 = icmp eq i32 %44, 0, !dbg !8496
  br i1 %45, label %60, label %46, !dbg !8497

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8498
  %48 = and i32 %47, 2048, !dbg !8499
  %49 = icmp eq i32 %48, 0, !dbg !8499
  br i1 %49, label %60, label %50, !dbg !8500

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8501
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #26, !dbg !8502
  call void @llvm.dbg.value(metadata i32 %52, metadata !8405, metadata !DIExpression()), !dbg !8503
  %53 = icmp eq i32 %52, 0, !dbg !8504
  br i1 %53, label %55, label %54, !dbg !8506

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8507, metadata !DIExpression()) #25, !dbg !8510
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !8513, !srcloc !8514
  call void @llvm.dbg.value(metadata i32 2, metadata !8400, metadata !DIExpression()), !dbg !8410
  br label %60, !dbg !8515

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8516
  %57 = and i32 %56, 16, !dbg !8516
  %58 = icmp eq i32 %57, 0, !dbg !8516
  br i1 %58, label %60, label %59, !dbg !8520

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 343) #26, !dbg !8521
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #26, !dbg !8521
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 343) #26, !dbg !8521
  unreachable, !dbg !8521

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !8410
  call void @llvm.dbg.value(metadata i32 %61, metadata !8400, metadata !DIExpression()), !dbg !8410
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8523
  %63 = and i32 %62, 32, !dbg !8525
  %64 = icmp eq i32 %63, 0, !dbg !8526
  br i1 %64, label %68, label %65, !dbg !8527

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8528
  %67 = and i32 %66, -8193, !dbg !8528
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8528
  br label %68, !dbg !8530

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8531
  %70 = or i32 %69, 255, !dbg !8531
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8531
  store i8 0, i8* %2, align 1, !dbg !8532
  ret i32 %61, !dbg !8533
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8534 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8538, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i32 %0, metadata !8539, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i8* %1, metadata !8540, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i32 0, metadata !8541, metadata !DIExpression()), !dbg !8545
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.87, i32 0, i32 0), i32 noundef 69) #26, !dbg !8546
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8551
  %4 = and i32 %3, 4096, !dbg !8553
  %5 = icmp eq i32 %4, 0, !dbg !8553
  br i1 %5, label %7, label %6, !dbg !8554

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #26, !dbg !8555
  br label %7, !dbg !8561

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8562
  %9 = and i32 %8, 2048, !dbg !8564
  %10 = icmp eq i32 %9, 0, !dbg !8564
  br i1 %10, label %12, label %11, !dbg !8565

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #26, !dbg !8566
  br label %12, !dbg !8572

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8573
  %14 = and i32 %13, 512, !dbg !8574
  %15 = icmp eq i32 %14, 0, !dbg !8574
  br i1 %15, label %26, label %16, !dbg !8575

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #26, !dbg !8576
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8581
  call void @llvm.dbg.value(metadata i32 %17, metadata !8542, metadata !DIExpression()), !dbg !8582
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8583
  %19 = and i32 %18, 32768, !dbg !8585
  %20 = icmp eq i32 %19, 0, !dbg !8586
  br i1 %20, label %26, label %21, !dbg !8587

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #26, !dbg !8588
  %22 = icmp eq i32 %0, 0, !dbg !8594
  br i1 %22, label %26, label %23, !dbg !8596

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8597
  %25 = and i32 %24, -32769, !dbg !8597
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8597
  br label %26, !dbg !8599

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8600
  %28 = and i32 %27, 1024, !dbg !8602
  %29 = icmp eq i32 %28, 0, !dbg !8602
  br i1 %29, label %31, label %30, !dbg !8603

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #26, !dbg !8604
  br label %31, !dbg !8610

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8611
  %33 = and i32 %32, 256, !dbg !8613
  %34 = icmp eq i32 %33, 0, !dbg !8614
  br i1 %34, label %35, label %39, !dbg !8615

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8616
  %37 = and i32 %36, 8192, !dbg !8618
  %38 = icmp eq i32 %37, 0, !dbg !8618
  br i1 %38, label %41, label %39, !dbg !8619

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #26, !dbg !8620
  br label %41, !dbg !8621

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8621
  %43 = or i32 %42, 65280, !dbg !8621
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8621
  store i8 0, i8* %1, align 1, !dbg !8622
  ret void, !dbg !8623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8624 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8630, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata i32 0, metadata !8631, metadata !DIExpression()), !dbg !8632
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28.86, i32 0, i32 0), i32 noundef 69) #26, !dbg !8633
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8638
  %2 = and i32 %1, 33554432, !dbg !8640
  %3 = icmp eq i32 %2, 0, !dbg !8641
  br i1 %3, label %5, label %4, !dbg !8642

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #26, !dbg !8643
  br label %5, !dbg !8649

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8650
  %7 = and i32 %6, 16777216, !dbg !8652
  %8 = icmp eq i32 %7, 0, !dbg !8653
  br i1 %8, label %10, label %9, !dbg !8654

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #26, !dbg !8655
  br label %10, !dbg !8661

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8662
  %12 = and i32 %11, 524288, !dbg !8664
  %13 = icmp eq i32 %12, 0, !dbg !8665
  br i1 %13, label %15, label %14, !dbg !8666

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #26, !dbg !8667
  br label %15, !dbg !8673

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8674
  %17 = and i32 %16, 262144, !dbg !8676
  %18 = icmp eq i32 %17, 0, !dbg !8677
  br i1 %18, label %20, label %19, !dbg !8678

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #26, !dbg !8679
  br label %20, !dbg !8685

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8686
  %22 = and i32 %21, 131072, !dbg !8688
  %23 = icmp eq i32 %22, 0, !dbg !8689
  br i1 %23, label %25, label %24, !dbg !8690

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #26, !dbg !8691
  br label %25, !dbg !8697

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8698
  %27 = and i32 %26, 65536, !dbg !8700
  %28 = icmp eq i32 %27, 0, !dbg !8701
  br i1 %28, label %30, label %29, !dbg !8702

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #26, !dbg !8703
  br label %30, !dbg !8709

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8710
  %32 = or i32 %31, -65536, !dbg !8710
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8710
  ret void, !dbg !8711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8712 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8716, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata i8* %0, metadata !8717, metadata !DIExpression()), !dbg !8718
  store i8 0, i8* %0, align 1, !dbg !8719
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #26, !dbg !8720
  ret void, !dbg !8725
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8726 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8730, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i32 %0, metadata !8731, metadata !DIExpression()), !dbg !8732
  %2 = icmp slt i32 %0, 16, !dbg !8733
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !8733
  %4 = add nsw i32 %0, -16, !dbg !8733
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #26, !dbg !8733
  ret void, !dbg !8738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8739 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8743, metadata !DIExpression()), !dbg !8746
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8747
  %3 = load i32, i32* %2, align 4, !dbg !8747
  %4 = inttoptr i32 %3 to i16*, !dbg !8748
  call void @llvm.dbg.value(metadata i16* %4, metadata !8744, metadata !DIExpression()), !dbg !8746
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8749
  %6 = or i32 %5, 256, !dbg !8749
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8749
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8750, !srcloc !8753
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8754, !srcloc !8757
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8758
  %8 = load i16, i16* %7, align 2, !dbg !8759
  call void @llvm.dbg.value(metadata i16 %8, metadata !8745, metadata !DIExpression()), !dbg !8746
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8760
  %10 = and i32 %9, -257, !dbg !8760
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8760
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8761, !srcloc !8753
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8763, !srcloc !8757
  %11 = icmp eq i16 %8, -8446, !dbg !8765
  ret i1 %11, !dbg !8767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !8768 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8769
  %2 = or i32 %1, 16, !dbg !8769
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8769
  ret void, !dbg !8770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !8771 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8774, metadata !DIExpression()), !dbg !8775
  br label %1, !dbg !8776

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8774, metadata !DIExpression()), !dbg !8775
  tail call fastcc void @__NVIC_SetPriority.100(i32 noundef %2) #27, !dbg !8778
  %3 = add nuw nsw i32 %2, 1, !dbg !8781
  call void @llvm.dbg.value(metadata i32 %3, metadata !8774, metadata !DIExpression()), !dbg !8775
  %4 = icmp eq i32 %3, 82, !dbg !8782
  br i1 %4, label %5, label %1, !dbg !8776, !llvm.loop !8783

5:                                                ; preds = %1
  ret void, !dbg !8785
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.100(i32 noundef %0) unnamed_addr #16 !dbg !8786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8788, metadata !DIExpression()), !dbg !8790
  call void @llvm.dbg.value(metadata i32 1, metadata !8789, metadata !DIExpression()), !dbg !8790
  %2 = and i32 %0, 15, !dbg !8791
  %3 = add nsw i32 %2, -4, !dbg !8791
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8791
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8791
  %6 = icmp slt i32 %0, 0, !dbg !8791
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8791
  store volatile i8 16, i8* %7, align 1, !dbg !8792
  ret void, !dbg !8794
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8795 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8903, metadata !DIExpression()), !dbg !8904
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8905
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8907
  br i1 %3, label %4, label %12, !dbg !8908

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !8909, !srcloc !8921
  call void @llvm.dbg.value(metadata i32 %5, metadata !8912, metadata !DIExpression()) #25, !dbg !8922
  %6 = icmp eq i32 %5, 0, !dbg !8923
  br i1 %6, label %12, label %7, !dbg !8924

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8925
  %9 = or i32 %8, 268435456, !dbg !8925
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8925
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8927
  %11 = and i32 %10, -32769, !dbg !8927
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8927
  br label %12, !dbg !8928

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !8929
  ret void, !dbg !8930
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8931 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !8932
  ret void, !dbg !8933
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !853 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !960, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i8 0, metadata !961, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i32 64, metadata !963, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i32 undef, metadata !962, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8934
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8935
  %3 = load i32, i32* %2, align 4, !dbg !8935
  call void @llvm.dbg.value(metadata i32 %3, metadata !962, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8934
  %4 = add i32 %3, -64, !dbg !8937
  call void @llvm.dbg.value(metadata i32 %4, metadata !962, metadata !DIExpression()), !dbg !8934
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8938
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8939
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8940
  call void @llvm.dbg.value(metadata i8 1, metadata !961, metadata !DIExpression()), !dbg !8934
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !8941
  ret void, !dbg !8942
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8943 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8944
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8945, !srcloc !8948
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8949, !srcloc !8952
  ret void, !dbg !8953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8954 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !8955, !srcloc !8958
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8959
  ret void, !dbg !8960
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8961 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8976, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i8 %1, metadata !8977, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i32 %2, metadata !8978, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i32 %3, metadata !8979, metadata !DIExpression()), !dbg !8980
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !8981
  %6 = icmp eq i32 %5, -22, !dbg !8983
  br i1 %6, label %7, label %9, !dbg !8984

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.110, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 283) #26, !dbg !8985
  %8 = zext i8 %1 to i32, !dbg !8985
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.112, i32 0, i32 0), i32 noundef %8) #26, !dbg !8985
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 283) #26, !dbg !8985
  unreachable, !dbg !8985

9:                                                ; preds = %4
  ret void, !dbg !8990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8991 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8996, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.value(metadata i8 %1, metadata !8997, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.value(metadata i32 undef, metadata !8998, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.value(metadata i32 undef, metadata !8999, metadata !DIExpression()), !dbg !9001
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9002
  call void @llvm.dbg.value(metadata i8 %3, metadata !9000, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9001
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !9003
  call void @llvm.dbg.value(metadata i32 %4, metadata !9000, metadata !DIExpression()), !dbg !9001
  %5 = trunc i32 %4 to i8, !dbg !9004
  store i8 %5, i8* @static_regions_num, align 1, !dbg !9005
  ret i32 %4, !dbg !9006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !9007 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9011, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i8 %1, metadata !9012, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i8 %2, metadata !9013, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i1 %3, metadata !9014, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9017
  %5 = zext i8 %2 to i32, !dbg !9018
  call void @llvm.dbg.value(metadata i32 %5, metadata !9016, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i32 0, metadata !9015, metadata !DIExpression()), !dbg !9017
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !9016, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i32 0, metadata !9015, metadata !DIExpression()), !dbg !9017
  %7 = icmp eq i8 %1, 0, !dbg !9019
  br i1 %7, label %30, label %8, !dbg !9022

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9016, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i32 %10, metadata !9015, metadata !DIExpression()), !dbg !9017
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !9023
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !9026
  %13 = load i32, i32* %12, align 4, !dbg !9026
  %14 = icmp eq i32 %13, 0, !dbg !9027
  br i1 %14, label %26, label %15, !dbg !9028

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !9029

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !9031
  %18 = icmp eq i32 %17, 0, !dbg !9031
  br i1 %18, label %19, label %20, !dbg !9032

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.113, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #26, !dbg !9033
  br label %30, !dbg !9039

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !9040
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !9041
  call void @llvm.dbg.value(metadata i32 %22, metadata !9016, metadata !DIExpression()), !dbg !9017
  %23 = icmp eq i32 %22, -22, !dbg !9042
  br i1 %23, label %30, label %24, !dbg !9044

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !9045
  call void @llvm.dbg.value(metadata i32 %25, metadata !9016, metadata !DIExpression()), !dbg !9017
  br label %26, !dbg !9046

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !9017
  call void @llvm.dbg.value(metadata i32 %27, metadata !9016, metadata !DIExpression()), !dbg !9017
  %28 = add nuw nsw i32 %10, 1, !dbg !9047
  call void @llvm.dbg.value(metadata i32 %28, metadata !9015, metadata !DIExpression()), !dbg !9017
  %29 = icmp eq i32 %28, %6, !dbg !9019
  br i1 %29, label %30, label %8, !dbg !9022, !llvm.loop !9048

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !9017
  ret i32 %31, !dbg !9050
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !9051 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9055, metadata !DIExpression()), !dbg !9057
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !9058
  %3 = load i32, i32* %2, align 4, !dbg !9058
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !9059, !range !5482
  %5 = icmp ult i32 %4, 2, !dbg !9059
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !9060
  br i1 %7, label %8, label %15, !dbg !9060

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !9061
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !9062
  %11 = load i32, i32* %10, align 4, !dbg !9062
  %12 = and i32 %11, %9, !dbg !9063
  %13 = icmp eq i32 %12, 0, !dbg !9064
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9056, metadata !DIExpression()), !dbg !9057
  ret i32 %16, !dbg !9065
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9066 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9070, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !9071, metadata !DIExpression()), !dbg !9073
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9074
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9074
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9072, metadata !DIExpression()), !dbg !9075
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9076
  %6 = load i32, i32* %5, align 4, !dbg !9076
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9077
  store i32 %6, i32* %7, align 4, !dbg !9078
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9079
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9080
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9081
  %11 = load i32, i32* %10, align 4, !dbg !9081
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #27, !dbg !9082
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !9083
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9084
  ret i32 %12, !dbg !9085
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #12 !dbg !9086 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !9093, metadata !DIExpression()), !dbg !9097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !9094, metadata !DIExpression()), !dbg !9097
  call void @llvm.dbg.value(metadata i32 undef, metadata !9095, metadata !DIExpression()), !dbg !9097
  call void @llvm.dbg.value(metadata i32 %2, metadata !9096, metadata !DIExpression()), !dbg !9097
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !9098
  %5 = load i32, i32* %4, align 4, !dbg !9098
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !9099
  %7 = or i32 %6, %5, !dbg !9100
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !9101
  store i32 %7, i32* %8, align 4, !dbg !9102
  ret void, !dbg !9103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9104 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9108, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9109, metadata !DIExpression()), !dbg !9110
  %3 = zext i8 %0 to i32, !dbg !9111
  %4 = icmp ugt i8 %0, 7, !dbg !9113
  br i1 %4, label %5, label %6, !dbg !9114

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.114, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #26, !dbg !9115
  br label %7, !dbg !9121

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !9122
  br label %7, !dbg !9123

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9110
  ret i32 %8, !dbg !9124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !9125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9129, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9130, metadata !DIExpression()), !dbg !9131
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !9132
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9133
  %4 = load i32, i32* %3, align 4, !dbg !9133
  %5 = and i32 %4, -32, !dbg !9134
  %6 = or i32 %5, %0, !dbg !9135
  %7 = or i32 %6, 16, !dbg !9135
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9136
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9137
  %9 = load i32, i32* %8, align 4, !dbg !9137
  %10 = or i32 %9, 1, !dbg !9138
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9139
  ret void, !dbg !9140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !9141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9144, metadata !DIExpression()), !dbg !9145
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9146
  ret void, !dbg !9147
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !9148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9152, metadata !DIExpression()), !dbg !9153
  %2 = icmp ult i32 %0, 33, !dbg !9154
  br i1 %2, label %11, label %3, !dbg !9156

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9157
  br i1 %4, label %11, label %5, !dbg !9159

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9160
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9161, !range !5482
  %8 = mul nsw i32 %7, -2, !dbg !9162
  %9 = add nsw i32 %8, 62, !dbg !9162
  %10 = and i32 %9, 62, !dbg !9163
  br label %11, !dbg !9164

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9153
  ret i32 %12, !dbg !9165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9166 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9170, metadata !DIExpression()), !dbg !9172
  call void @llvm.dbg.value(metadata i8 %1, metadata !9171, metadata !DIExpression()), !dbg !9172
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !9173
  %4 = icmp eq i32 %3, -22, !dbg !9175
  br i1 %4, label %5, label %7, !dbg !9176

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.110, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 314) #26, !dbg !9177
  %6 = zext i8 %1 to i32, !dbg !9177
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.117, i32 0, i32 0), i32 noundef %6) #26, !dbg !9177
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 314) #26, !dbg !9177
  unreachable, !dbg !9177

7:                                                ; preds = %2
  ret void, !dbg !9182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9183 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9187, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata i8 %1, metadata !9188, metadata !DIExpression()), !dbg !9194
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9195
  call void @llvm.dbg.value(metadata i8 %3, metadata !9189, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9194
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !9196
  call void @llvm.dbg.value(metadata i32 %4, metadata !9189, metadata !DIExpression()), !dbg !9194
  %5 = icmp ne i32 %4, -22, !dbg !9197
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9198
  call void @llvm.dbg.value(metadata i32 %4, metadata !9190, metadata !DIExpression()), !dbg !9199
  br i1 %7, label %8, label %12, !dbg !9198

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9190, metadata !DIExpression()), !dbg !9199
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !9200
  %10 = add i32 %9, 1, !dbg !9203
  call void @llvm.dbg.value(metadata i32 %10, metadata !9190, metadata !DIExpression()), !dbg !9199
  %11 = icmp eq i32 %10, 8, !dbg !9204
  br i1 %11, label %12, label %8, !dbg !9205, !llvm.loop !9206

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !9208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !9209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9212, metadata !DIExpression()), !dbg !9213
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9214
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9215
  ret void, !dbg !9216
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9217 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9222
  %2 = icmp ugt i32 %1, 8, !dbg !9224
  br i1 %2, label %3, label %4, !dbg !9225

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.110, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 341) #26, !dbg !9226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.118, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #26, !dbg !9226
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 341) #26, !dbg !9226
  unreachable, !dbg !9226

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !9231
  call void @llvm.dbg.value(metadata i32 0, metadata !9221, metadata !DIExpression()), !dbg !9232
  %5 = icmp eq i32 %1, 0, !dbg !9233
  br i1 %5, label %13, label %6, !dbg !9236

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !9236

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9221, metadata !DIExpression()), !dbg !9232
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !9237
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #27, !dbg !9239
  %11 = add nuw i32 %9, 1, !dbg !9240
  call void @llvm.dbg.value(metadata i32 %11, metadata !9221, metadata !DIExpression()), !dbg !9232
  %12 = icmp eq i32 %11, %1, !dbg !9233
  br i1 %12, label %13, label %8, !dbg !9236, !llvm.loop !9241

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !9243
  store i8 %14, i8* @static_regions_num, align 1, !dbg !9244
  tail call void @arm_core_mpu_enable() #27, !dbg !9245
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !9246
  %16 = and i32 %15, 65280, !dbg !9246
  %17 = icmp eq i32 %16, 2048, !dbg !9246
  br i1 %17, label %19, label %18, !dbg !9249

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 435) #26, !dbg !9250
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.120, i32 0, i32 0)) #26, !dbg !9250
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 435) #26, !dbg !9250
  unreachable, !dbg !9250

19:                                               ; preds = %13
  ret i32 0, !dbg !9252
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9253 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9260, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i8* %1, metadata !9261, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i8* %0, metadata !9262, metadata !DIExpression()), !dbg !9263
  %3 = load i8, i8* %1, align 1, !dbg !9264
  %4 = icmp eq i8 %3, 0, !dbg !9265
  br i1 %4, label %13, label %5, !dbg !9266

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9260, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i8* %8, metadata !9261, metadata !DIExpression()), !dbg !9263
  store i8 %6, i8* %7, align 1, !dbg !9267
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9269
  call void @llvm.dbg.value(metadata i8* %9, metadata !9260, metadata !DIExpression()), !dbg !9263
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9270
  call void @llvm.dbg.value(metadata i8* %10, metadata !9261, metadata !DIExpression()), !dbg !9263
  %11 = load i8, i8* %10, align 1, !dbg !9264
  %12 = icmp eq i8 %11, 0, !dbg !9265
  br i1 %12, label %13, label %5, !dbg !9266, !llvm.loop !9271

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9273
  ret i8* %0, !dbg !9274
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9275 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9279, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i8* %1, metadata !9280, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i32 %2, metadata !9281, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i8* %0, metadata !9282, metadata !DIExpression()), !dbg !9283
  %4 = icmp eq i32 %2, 0, !dbg !9284
  br i1 %4, label %22, label %5, !dbg !9285

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9279, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i32 %7, metadata !9281, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i8* %8, metadata !9280, metadata !DIExpression()), !dbg !9283
  %9 = load i8, i8* %8, align 1, !dbg !9286
  %10 = icmp eq i8 %9, 0, !dbg !9287
  br i1 %10, label %16, label %11, !dbg !9288

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9289
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9291
  call void @llvm.dbg.value(metadata i8* %12, metadata !9280, metadata !DIExpression()), !dbg !9283
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9292
  call void @llvm.dbg.value(metadata i8* %13, metadata !9279, metadata !DIExpression()), !dbg !9283
  %14 = add i32 %7, -1, !dbg !9293
  call void @llvm.dbg.value(metadata i32 %14, metadata !9281, metadata !DIExpression()), !dbg !9283
  %15 = icmp eq i32 %14, 0, !dbg !9284
  br i1 %15, label %22, label %5, !dbg !9285, !llvm.loop !9294

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9279, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i32 %18, metadata !9281, metadata !DIExpression()), !dbg !9283
  store i8 0, i8* %17, align 1, !dbg !9296
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9298
  call void @llvm.dbg.value(metadata i8* %19, metadata !9279, metadata !DIExpression()), !dbg !9283
  %20 = add i32 %18, -1, !dbg !9299
  call void @llvm.dbg.value(metadata i32 %20, metadata !9281, metadata !DIExpression()), !dbg !9283
  %21 = icmp eq i32 %20, 0, !dbg !9300
  br i1 %21, label %22, label %16, !dbg !9301, !llvm.loop !9302

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9304
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !9305 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9309, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %1, metadata !9310, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %1, metadata !9311, metadata !DIExpression()), !dbg !9312
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9313

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9309, metadata !DIExpression()), !dbg !9312
  %6 = load i8, i8* %5, align 1, !dbg !9314
  %7 = icmp eq i8 %6, %3, !dbg !9315
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9316
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9317
  call void @llvm.dbg.value(metadata i8* %10, metadata !9309, metadata !DIExpression()), !dbg !9312
  br i1 %9, label %11, label %4, !dbg !9316, !llvm.loop !9319

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9321
  ret i8* %12, !dbg !9322
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !9323 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9325, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata i32 %1, metadata !9326, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata i8* null, metadata !9327, metadata !DIExpression()), !dbg !9328
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9329

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9328
  call void @llvm.dbg.value(metadata i8* %6, metadata !9327, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata i8* %5, metadata !9325, metadata !DIExpression()), !dbg !9328
  %7 = load i8, i8* %5, align 1, !dbg !9330
  %8 = icmp eq i8 %7, %3, !dbg !9333
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9334
  call void @llvm.dbg.value(metadata i8* %9, metadata !9327, metadata !DIExpression()), !dbg !9328
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9335
  call void @llvm.dbg.value(metadata i8* %10, metadata !9325, metadata !DIExpression()), !dbg !9328
  %11 = icmp eq i8 %7, 0, !dbg !9336
  br i1 %11, label %12, label %4, !dbg !9336, !llvm.loop !9337

12:                                               ; preds = %4
  ret i8* %9, !dbg !9339
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !9340 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9344, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.value(metadata i32 0, metadata !9345, metadata !DIExpression()), !dbg !9346
  %2 = load i8, i8* %0, align 1, !dbg !9347
  %3 = icmp eq i8 %2, 0, !dbg !9348
  br i1 %3, label %11, label %4, !dbg !9349

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9345, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.value(metadata i8* %6, metadata !9344, metadata !DIExpression()), !dbg !9346
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9350
  call void @llvm.dbg.value(metadata i8* %7, metadata !9344, metadata !DIExpression()), !dbg !9346
  %8 = add i32 %5, 1, !dbg !9352
  call void @llvm.dbg.value(metadata i32 %8, metadata !9345, metadata !DIExpression()), !dbg !9346
  %9 = load i8, i8* %7, align 1, !dbg !9347
  %10 = icmp eq i8 %9, 0, !dbg !9348
  br i1 %10, label %11, label %4, !dbg !9349, !llvm.loop !9353

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9346
  ret i32 %12, !dbg !9355
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !9356 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9360, metadata !DIExpression()), !dbg !9363
  call void @llvm.dbg.value(metadata i32 %1, metadata !9361, metadata !DIExpression()), !dbg !9363
  call void @llvm.dbg.value(metadata i32 0, metadata !9362, metadata !DIExpression()), !dbg !9363
  %3 = load i8, i8* %0, align 1, !dbg !9364
  %4 = icmp ne i8 %3, 0, !dbg !9365
  %5 = icmp ne i32 %1, 0, !dbg !9366
  %6 = and i1 %4, %5, !dbg !9366
  br i1 %6, label %7, label %16, !dbg !9367

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9362, metadata !DIExpression()), !dbg !9363
  call void @llvm.dbg.value(metadata i8* %9, metadata !9360, metadata !DIExpression()), !dbg !9363
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9368
  call void @llvm.dbg.value(metadata i8* %10, metadata !9360, metadata !DIExpression()), !dbg !9363
  %11 = add nuw i32 %8, 1, !dbg !9370
  call void @llvm.dbg.value(metadata i32 %11, metadata !9362, metadata !DIExpression()), !dbg !9363
  %12 = load i8, i8* %10, align 1, !dbg !9364
  %13 = icmp ne i8 %12, 0, !dbg !9365
  %14 = icmp ult i32 %11, %1, !dbg !9366
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9366
  br i1 %15, label %7, label %16, !dbg !9367, !llvm.loop !9371

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9363
  ret i32 %17, !dbg !9373
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !9374 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9378, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i8* %1, metadata !9379, metadata !DIExpression()), !dbg !9380
  %3 = load i8, i8* %0, align 1, !dbg !9381
  %4 = load i8, i8* %1, align 1, !dbg !9382
  %5 = icmp ne i8 %3, %4, !dbg !9383
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9384
  br i1 %7, label %18, label %8, !dbg !9384

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9379, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i8* %10, metadata !9378, metadata !DIExpression()), !dbg !9380
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9385
  call void @llvm.dbg.value(metadata i8* %11, metadata !9378, metadata !DIExpression()), !dbg !9380
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9387
  call void @llvm.dbg.value(metadata i8* %12, metadata !9379, metadata !DIExpression()), !dbg !9380
  %13 = load i8, i8* %11, align 1, !dbg !9381
  %14 = load i8, i8* %12, align 1, !dbg !9382
  %15 = icmp ne i8 %13, %14, !dbg !9383
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9384
  br i1 %17, label %18, label %8, !dbg !9384, !llvm.loop !9388

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9381
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9382
  %21 = zext i8 %19 to i32, !dbg !9391
  %22 = zext i8 %20 to i32, !dbg !9392
  %23 = sub nsw i32 %21, %22, !dbg !9393
  ret i32 %23, !dbg !9394
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !9395 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9399, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i8* %1, metadata !9400, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i32 %2, metadata !9401, metadata !DIExpression()), !dbg !9402
  %4 = icmp eq i32 %2, 0, !dbg !9403
  br i1 %4, label %23, label %5, !dbg !9403

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9401, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i8* %7, metadata !9400, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i8* %8, metadata !9399, metadata !DIExpression()), !dbg !9402
  %9 = load i8, i8* %8, align 1, !dbg !9404
  %10 = load i8, i8* %7, align 1, !dbg !9405
  %11 = icmp ne i8 %9, %10, !dbg !9406
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9407
  br i1 %13, label %19, label %14, !dbg !9407

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9408
  call void @llvm.dbg.value(metadata i8* %15, metadata !9399, metadata !DIExpression()), !dbg !9402
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9410
  call void @llvm.dbg.value(metadata i8* %16, metadata !9400, metadata !DIExpression()), !dbg !9402
  %17 = add i32 %6, -1, !dbg !9411
  call void @llvm.dbg.value(metadata i32 %17, metadata !9401, metadata !DIExpression()), !dbg !9402
  %18 = icmp eq i32 %17, 0, !dbg !9403
  br i1 %18, label %23, label %5, !dbg !9403, !llvm.loop !9412

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9415
  %21 = zext i8 %10 to i32, !dbg !9416
  %22 = sub nsw i32 %20, %21, !dbg !9417
  br label %23, !dbg !9418

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9418
  ret i32 %24, !dbg !9419
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !9420 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9424, metadata !DIExpression()), !dbg !9429
  call void @llvm.dbg.value(metadata i8* %1, metadata !9425, metadata !DIExpression()), !dbg !9429
  call void @llvm.dbg.value(metadata i8** %2, metadata !9426, metadata !DIExpression()), !dbg !9429
  %4 = icmp eq i8* %0, null, !dbg !9430
  br i1 %4, label %5, label %7, !dbg !9430

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9431
  br label %7, !dbg !9430

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9430
  call void @llvm.dbg.value(metadata i8* %8, metadata !9427, metadata !DIExpression()), !dbg !9429
  %9 = load i8, i8* %8, align 1, !dbg !9432
  %10 = icmp eq i8 %9, 0, !dbg !9432
  br i1 %10, label %33, label %11, !dbg !9433

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9427, metadata !DIExpression()), !dbg !9429
  %14 = zext i8 %12 to i32, !dbg !9432
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !9434
  %16 = icmp eq i8* %15, null, !dbg !9433
  br i1 %16, label %21, label %17, !dbg !9435

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9436
  call void @llvm.dbg.value(metadata i8* %18, metadata !9427, metadata !DIExpression()), !dbg !9429
  %19 = load i8, i8* %18, align 1, !dbg !9432
  %20 = icmp eq i8 %19, 0, !dbg !9432
  br i1 %20, label %33, label %11, !dbg !9433, !llvm.loop !9438

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9428, metadata !DIExpression()), !dbg !9429
  %24 = zext i8 %22 to i32, !dbg !9440
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !9441
  %26 = icmp eq i8* %25, null, !dbg !9442
  br i1 %26, label %27, label %31, !dbg !9443

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9444
  call void @llvm.dbg.value(metadata i8* %28, metadata !9428, metadata !DIExpression()), !dbg !9429
  %29 = load i8, i8* %28, align 1, !dbg !9440
  %30 = icmp eq i8 %29, 0, !dbg !9440
  br i1 %30, label %33, label %21, !dbg !9446, !llvm.loop !9447

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9449
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9452
  br label %33, !dbg !9453

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9429
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9429
  store i8* %34, i8** %2, align 4, !dbg !9429
  ret i8* %35, !dbg !9454
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9455 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9457, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata i8* %1, metadata !9458, metadata !DIExpression()), !dbg !9459
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9460
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9461
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !9462
  ret i8* %0, !dbg !9463
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9464 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9466, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.value(metadata i8* %1, metadata !9467, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.value(metadata i32 %2, metadata !9468, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.value(metadata i8* %0, metadata !9469, metadata !DIExpression()), !dbg !9471
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9472
  call void @llvm.dbg.value(metadata i32 %4, metadata !9470, metadata !DIExpression()), !dbg !9471
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9473
  call void @llvm.dbg.value(metadata i8* %5, metadata !9466, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.value(metadata i8* %1, metadata !9467, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.value(metadata i32 %2, metadata !9468, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.value(metadata i32 %2, metadata !9468, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9471
  %6 = icmp eq i32 %2, 0, !dbg !9474
  br i1 %6, label %18, label %7, !dbg !9475

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9476
  call void @llvm.dbg.value(metadata i8* %9, metadata !9466, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.value(metadata i8* %10, metadata !9467, metadata !DIExpression()), !dbg !9471
  %12 = load i8, i8* %10, align 1, !dbg !9477
  %13 = icmp eq i8 %12, 0, !dbg !9478
  br i1 %13, label %18, label %14, !dbg !9479

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9480
  call void @llvm.dbg.value(metadata i8* %15, metadata !9467, metadata !DIExpression()), !dbg !9471
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9482
  call void @llvm.dbg.value(metadata i8* %16, metadata !9466, metadata !DIExpression()), !dbg !9471
  store i8 %12, i8* %9, align 1, !dbg !9483
  call void @llvm.dbg.value(metadata i32 %11, metadata !9468, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.value(metadata i32 %11, metadata !9468, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9471
  %17 = icmp eq i32 %11, 0, !dbg !9474
  br i1 %17, label %18, label %7, !dbg !9475, !llvm.loop !9484

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9471
  store i8 0, i8* %19, align 1, !dbg !9486
  ret i8* %0, !dbg !9487
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !9488 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9492, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i8* %1, metadata !9493, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i32 %2, metadata !9494, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i8* %0, metadata !9495, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i8* %1, metadata !9496, metadata !DIExpression()), !dbg !9497
  %4 = icmp eq i32 %2, 0, !dbg !9498
  br i1 %4, label %31, label %5, !dbg !9500

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9496, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i8* %0, metadata !9495, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i32 %2, metadata !9494, metadata !DIExpression()), !dbg !9497
  %6 = add i32 %2, -1, !dbg !9501
  call void @llvm.dbg.value(metadata i32 %6, metadata !9494, metadata !DIExpression()), !dbg !9497
  %7 = icmp eq i32 %6, 0, !dbg !9502
  br i1 %7, label %23, label %8, !dbg !9503

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9504
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9504
  br label %11, !dbg !9504

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9496, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i8* %14, metadata !9495, metadata !DIExpression()), !dbg !9497
  %15 = load i8, i8* %14, align 1, !dbg !9505
  %16 = load i8, i8* %13, align 1, !dbg !9506
  %17 = icmp eq i8 %15, %16, !dbg !9507
  br i1 %17, label %18, label %23, !dbg !9504

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9508
  call void @llvm.dbg.value(metadata i8* %19, metadata !9495, metadata !DIExpression()), !dbg !9497
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9510
  call void @llvm.dbg.value(metadata i8* %20, metadata !9496, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i32 %12, metadata !9494, metadata !DIExpression()), !dbg !9497
  %21 = add i32 %12, -1, !dbg !9501
  call void @llvm.dbg.value(metadata i32 %21, metadata !9494, metadata !DIExpression()), !dbg !9497
  %22 = icmp eq i32 %21, 0, !dbg !9502
  br i1 %22, label %23, label %11, !dbg !9503, !llvm.loop !9511

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9497
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9497
  %26 = load i8, i8* %24, align 1, !dbg !9513
  %27 = zext i8 %26 to i32, !dbg !9513
  %28 = load i8, i8* %25, align 1, !dbg !9514
  %29 = zext i8 %28 to i32, !dbg !9514
  %30 = sub nsw i32 %27, %29, !dbg !9515
  br label %31, !dbg !9516

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9497
  ret i32 %32, !dbg !9517
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9518 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9522, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata i8* %1, metadata !9523, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata i32 %2, metadata !9524, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata i8* %0, metadata !9525, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata i8* %1, metadata !9526, metadata !DIExpression()), !dbg !9527
  %4 = ptrtoint i8* %0 to i32, !dbg !9528
  %5 = ptrtoint i8* %1 to i32, !dbg !9528
  %6 = sub i32 %4, %5, !dbg !9528
  %7 = icmp ult i32 %6, %2, !dbg !9530
  br i1 %7, label %10, label %8, !dbg !9531

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9526, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata i8* %0, metadata !9525, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata i32 %2, metadata !9524, metadata !DIExpression()), !dbg !9527
  %9 = icmp eq i32 %2, 0, !dbg !9532
  br i1 %9, label %26, label %17, !dbg !9534

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9524, metadata !DIExpression()), !dbg !9527
  %12 = add i32 %11, -1, !dbg !9535
  call void @llvm.dbg.value(metadata i32 %12, metadata !9524, metadata !DIExpression()), !dbg !9527
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9538
  %14 = load i8, i8* %13, align 1, !dbg !9538
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9539
  store i8 %14, i8* %15, align 1, !dbg !9540
  %16 = icmp eq i32 %12, 0, !dbg !9541
  br i1 %16, label %26, label %10, !dbg !9542, !llvm.loop !9543

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9526, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata i8* %19, metadata !9525, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata i32 %20, metadata !9524, metadata !DIExpression()), !dbg !9527
  %21 = load i8, i8* %18, align 1, !dbg !9545
  store i8 %21, i8* %19, align 1, !dbg !9547
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9548
  call void @llvm.dbg.value(metadata i8* %22, metadata !9525, metadata !DIExpression()), !dbg !9527
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9549
  call void @llvm.dbg.value(metadata i8* %23, metadata !9526, metadata !DIExpression()), !dbg !9527
  %24 = add i32 %20, -1, !dbg !9550
  call void @llvm.dbg.value(metadata i32 %24, metadata !9524, metadata !DIExpression()), !dbg !9527
  %25 = icmp eq i32 %24, 0, !dbg !9532
  br i1 %25, label %26, label %17, !dbg !9534, !llvm.loop !9551

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9553
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9554 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9560, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata i8* %1, metadata !9561, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata i32 %2, metadata !9562, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata i8* %0, metadata !9563, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata i8* %1, metadata !9564, metadata !DIExpression()), !dbg !9565
  %4 = icmp eq i32 %2, 0, !dbg !9566
  br i1 %4, label %14, label %5, !dbg !9567

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9564, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata i8* %7, metadata !9563, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata i32 %8, metadata !9562, metadata !DIExpression()), !dbg !9565
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9568
  call void @llvm.dbg.value(metadata i8* %9, metadata !9564, metadata !DIExpression()), !dbg !9565
  %10 = load i8, i8* %6, align 1, !dbg !9570
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9571
  call void @llvm.dbg.value(metadata i8* %11, metadata !9563, metadata !DIExpression()), !dbg !9565
  store i8 %10, i8* %7, align 1, !dbg !9572
  %12 = add i32 %8, -1, !dbg !9573
  call void @llvm.dbg.value(metadata i32 %12, metadata !9562, metadata !DIExpression()), !dbg !9565
  %13 = icmp eq i32 %12, 0, !dbg !9566
  br i1 %13, label %14, label %5, !dbg !9567, !llvm.loop !9574

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9576
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !9577 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9581, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i32 %1, metadata !9582, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i32 %2, metadata !9583, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i8* %0, metadata !9584, metadata !DIExpression()), !dbg !9586
  %4 = trunc i32 %1 to i8, !dbg !9587
  call void @llvm.dbg.value(metadata i8 %4, metadata !9585, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i32 %2, metadata !9583, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i8* %0, metadata !9584, metadata !DIExpression()), !dbg !9586
  %5 = icmp eq i32 %2, 0, !dbg !9588
  br i1 %5, label %12, label %6, !dbg !9589

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9583, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i8* %8, metadata !9584, metadata !DIExpression()), !dbg !9586
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9590
  call void @llvm.dbg.value(metadata i8* %9, metadata !9584, metadata !DIExpression()), !dbg !9586
  store i8 %4, i8* %8, align 1, !dbg !9592
  %10 = add i32 %7, -1, !dbg !9593
  call void @llvm.dbg.value(metadata i32 %10, metadata !9583, metadata !DIExpression()), !dbg !9586
  %11 = icmp eq i32 %10, 0, !dbg !9588
  br i1 %11, label %12, label %6, !dbg !9589, !llvm.loop !9594

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9596
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !9597 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9601, metadata !DIExpression()), !dbg !9607
  call void @llvm.dbg.value(metadata i32 %1, metadata !9602, metadata !DIExpression()), !dbg !9607
  call void @llvm.dbg.value(metadata i32 %2, metadata !9603, metadata !DIExpression()), !dbg !9607
  %4 = icmp eq i32 %2, 0, !dbg !9608
  br i1 %4, label %17, label %5, !dbg !9609

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9610

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9611
  call void @llvm.dbg.value(metadata i8* %9, metadata !9604, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i32 %8, metadata !9603, metadata !DIExpression()), !dbg !9607
  call void @llvm.dbg.value(metadata i8* %9, metadata !9604, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9611
  %10 = load i8, i8* %9, align 1, !dbg !9612
  %11 = icmp eq i8 %10, %6, !dbg !9615
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9616
  call void @llvm.dbg.value(metadata i8* %12, metadata !9604, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i32 %13, metadata !9603, metadata !DIExpression()), !dbg !9607
  br i1 %15, label %16, label %7, !dbg !9616, !llvm.loop !9617

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9619

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9607
  ret i8* %19, !dbg !9620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !9621 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9623, metadata !DIExpression()), !dbg !9624
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9625
  ret void, !dbg !9626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !9627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9629, metadata !DIExpression()), !dbg !9630
  ret i32 -1, !dbg !9631
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9636, metadata !DIExpression()), !dbg !9638
  call void @llvm.dbg.value(metadata i32* %1, metadata !9637, metadata !DIExpression()), !dbg !9638
  %3 = ptrtoint i32* %1 to i32, !dbg !9639
  %4 = and i32 %3, -2, !dbg !9639
  %5 = icmp eq i32 %4, 2, !dbg !9639
  br i1 %5, label %6, label %9, !dbg !9639

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9640
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !9640
  br label %9, !dbg !9641

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9641
  ret i32 %10, !dbg !9642
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9645, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i32* %1, metadata !9646, metadata !DIExpression()), !dbg !9647
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9648
  ret i32 %3, !dbg !9649
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9653, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32* %1, metadata !9654, metadata !DIExpression()), !dbg !9655
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9656, !srcloc !9658
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9659
  ret i32 %3, !dbg !9660
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9661 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9666, metadata !DIExpression()), !dbg !9670
  call void @llvm.dbg.value(metadata i32* %1, metadata !9667, metadata !DIExpression()), !dbg !9670
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9671
  call void @llvm.dbg.value(metadata i32 %3, metadata !9668, metadata !DIExpression()), !dbg !9670
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !9672
  call void @llvm.dbg.value(metadata i32 %4, metadata !9669, metadata !DIExpression()), !dbg !9670
  %5 = icmp ne i32 %3, %4, !dbg !9673
  %6 = sext i1 %5 to i32, !dbg !9674
  ret i32 %6, !dbg !9675
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9676 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9680, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata i32 %1, metadata !9681, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata i32 %2, metadata !9682, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata i32* %3, metadata !9683, metadata !DIExpression()), !dbg !9684
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !9685
  ret i32 %5, !dbg !9686
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9687 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9689, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.value(metadata i32 %1, metadata !9690, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.value(metadata i32 %2, metadata !9691, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.value(metadata i32* %3, metadata !9692, metadata !DIExpression()), !dbg !9693
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9694, !srcloc !9696
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !9697
  ret i32 %5, !dbg !9698
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9699 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9701, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.value(metadata i32 %1, metadata !9702, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.value(metadata i32 %2, metadata !9703, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.value(metadata i32* %3, metadata !9704, metadata !DIExpression()), !dbg !9709
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9710
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9712
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9712
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9712
  br i1 %11, label %33, label %12, !dbg !9712

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9709
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9709
  call void @llvm.dbg.value(metadata i8* %14, metadata !9707, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.value(metadata i32 %13, metadata !9705, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.value(metadata i32 %1, metadata !9706, metadata !DIExpression()), !dbg !9709
  br label %15, !dbg !9713

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9715
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9709
  call void @llvm.dbg.value(metadata i8* %17, metadata !9707, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.value(metadata i32 %16, metadata !9706, metadata !DIExpression()), !dbg !9709
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9716
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9719
  call void @llvm.dbg.value(metadata i8* %19, metadata !9707, metadata !DIExpression()), !dbg !9709
  %20 = load i8, i8* %17, align 1, !dbg !9720
  %21 = zext i8 %20 to i32, !dbg !9721
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !9716
  %23 = icmp eq i32 %22, -1, !dbg !9722
  br i1 %23, label %30, label %24, !dbg !9723

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %25, metadata !9706, metadata !DIExpression()), !dbg !9709
  %26 = icmp eq i32 %25, 0, !dbg !9725
  br i1 %26, label %27, label %15, !dbg !9726, !llvm.loop !9727

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9729
  call void @llvm.dbg.value(metadata i32 %28, metadata !9705, metadata !DIExpression()), !dbg !9709
  %29 = icmp eq i32 %28, 0, !dbg !9730
  br i1 %29, label %30, label %12, !dbg !9731, !llvm.loop !9732

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9709
  call void @llvm.dbg.value(metadata i32 %31, metadata !9705, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.label(metadata !9708), !dbg !9735
  %32 = sub i32 %2, %31, !dbg !9736
  br label %33, !dbg !9737

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9709
  ret i32 %34, !dbg !9738
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9739 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9743, metadata !DIExpression()), !dbg !9744
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !9745
  %3 = icmp eq i32 %2, -1, !dbg !9747
  br i1 %3, label %8, label %4, !dbg !9748

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !9749
  %6 = icmp eq i32 %5, -1, !dbg !9750
  %7 = sext i1 %6 to i32, !dbg !9749
  br label %8, !dbg !9751

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9744
  ret i32 %9, !dbg !9752
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9753 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9761, metadata !DIExpression()), !dbg !9763
  %3 = tail call i64 @sys_clock_tick_get() #26, !dbg !9764
  call void @llvm.dbg.value(metadata i64 %3, metadata !9762, metadata !DIExpression()), !dbg !9763
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9765
  %5 = sub i64 %1, %3, !dbg !9765
  store i64 %5, i64* %4, align 8, !dbg !9765
  ret void, !dbg !9766
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel.155* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9767 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9920, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !9918, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i8* %1, metadata !9919, metadata !DIExpression()), !dbg !9923
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #26, !dbg !9924
  call void @llvm.dbg.value(metadata i64 %4, metadata !9922, metadata !DIExpression()), !dbg !9923
  %5 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !9925
  br i1 %5, label %6, label %7, !dbg !9928

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 108) #26, !dbg !9929
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.140, i32 0, i32 0)) #26, !dbg !9929
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 108) #26, !dbg !9929
  unreachable, !dbg !9929

7:                                                ; preds = %3
  %8 = icmp eq %struct.zbus_channel.155* %0, null, !dbg !9931
  br i1 %8, label %9, label %10, !dbg !9934

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 109) #26, !dbg !9935
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.142, i32 0, i32 0)) #26, !dbg !9935
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 109) #26, !dbg !9935
  unreachable, !dbg !9935

10:                                               ; preds = %7
  %11 = icmp eq i8* %1, null, !dbg !9937
  br i1 %11, label %12, label %13, !dbg !9940

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 110) #26, !dbg !9941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.144, i32 0, i32 0)) #26, !dbg !9941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 110) #26, !dbg !9941
  unreachable, !dbg !9941

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 4, !dbg !9943
  %15 = load i1 (i8*, i32)*, i1 (i8*, i32)** %14, align 4, !dbg !9943
  %16 = icmp eq i1 (i8*, i32)* %15, null, !dbg !9945
  br i1 %16, label %22, label %17, !dbg !9946

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 1, !dbg !9947
  %19 = load i16, i16* %18, align 4, !dbg !9947
  %20 = zext i16 %19 to i32, !dbg !9948
  %21 = tail call zeroext i1 %15(i8* noundef nonnull %1, i32 noundef %20) #26, !dbg !9949
  br i1 %21, label %22, label %36, !dbg !9950

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 5, !dbg !9951
  %24 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !9951
  %25 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %24, [1 x i64] %2) #27, !dbg !9952
  call void @llvm.dbg.value(metadata i32 %25, metadata !9921, metadata !DIExpression()), !dbg !9923
  %26 = icmp eq i32 %25, 0, !dbg !9953
  br i1 %26, label %27, label %36, !dbg !9955

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 3, !dbg !9956
  %29 = load i8*, i8** %28, align 4, !dbg !9956
  %30 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 1, !dbg !9957
  %31 = load i16, i16* %30, align 4, !dbg !9957
  %32 = zext i16 %31 to i32, !dbg !9958
  %33 = tail call i8* @memcpy(i8* noundef %29, i8* noundef nonnull %1, i32 noundef %32) #26, !dbg !9959
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.155* noundef nonnull %0, i64 noundef %4) #27, !dbg !9960
  call void @llvm.dbg.value(metadata i32 0, metadata !9921, metadata !DIExpression()), !dbg !9923
  %34 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !9961
  %35 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %34) #27, !dbg !9962
  br label %36, !dbg !9963

36:                                               ; preds = %22, %17, %27
  %37 = phi i32 [ 0, %27 ], [ -35, %17 ], [ %25, %22 ], !dbg !9923
  ret i32 %37, !dbg !9964
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9965 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9970, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9969, metadata !DIExpression()), !dbg !9971
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9972, !srcloc !9974
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #26, !dbg !9975
  ret i32 %3, !dbg !9976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_observers(%struct.zbus_channel.155* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9977 {
  %3 = alloca %struct.zbus_channel.155*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !9981, metadata !DIExpression()), !dbg !9989
  store %struct.zbus_channel.155* %0, %struct.zbus_channel.155** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9982, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata i32 0, metadata !9983, metadata !DIExpression()), !dbg !9989
  %5 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 6, !dbg !9990
  %6 = load %struct.zbus_observer.154**, %struct.zbus_observer.154*** %5, align 4, !dbg !9990
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154** %6, metadata !9985, metadata !DIExpression()), !dbg !9991
  %7 = load %struct.zbus_observer.154*, %struct.zbus_observer.154** %6, align 4, !dbg !9992
  %8 = icmp eq %struct.zbus_observer.154* %7, null, !dbg !9994
  br i1 %8, label %31, label %16, !dbg !9995

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer.154**, %struct.zbus_observer.154*** %5, align 4, !dbg !9996
  %11 = load %struct.zbus_observer.154*, %struct.zbus_observer.154** %10, align 4, !dbg !9997
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !9981, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154** %10, metadata !9987, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.value(metadata i32 0, metadata !9983, metadata !DIExpression()), !dbg !9989
  %12 = icmp eq %struct.zbus_observer.154* %11, null, !dbg !10000
  br i1 %12, label %31, label %13, !dbg !10001

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel.155** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %32, !dbg !10001

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer.154* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer.154** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154** %18, metadata !9985, metadata !DIExpression()), !dbg !9991
  %19 = getelementptr inbounds %struct.zbus_observer.154, %struct.zbus_observer.154* %17, i32 0, i32 0, !dbg !10002
  %20 = load i8, i8* %19, align 4, !dbg !10002, !range !8224
  %21 = icmp eq i8 %20, 0, !dbg !10002
  br i1 %21, label %27, label %22, !dbg !10005

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer.154, %struct.zbus_observer.154* %17, i32 0, i32 2, !dbg !10006
  %24 = load void (%struct.zbus_channel.155*)*, void (%struct.zbus_channel.155*)** %23, align 4, !dbg !10006
  %25 = icmp eq void (%struct.zbus_channel.155*)* %24, null, !dbg !10007
  br i1 %25, label %27, label %26, !dbg !10008

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !9981, metadata !DIExpression()), !dbg !9989
  tail call void %24(%struct.zbus_channel.155* noundef %0) #26, !dbg !10009
  br label %27, !dbg !10011

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer.154*, %struct.zbus_observer.154** %18, i32 1, !dbg !10012
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154** %28, metadata !9985, metadata !DIExpression()), !dbg !9991
  %29 = load %struct.zbus_observer.154*, %struct.zbus_observer.154** %28, align 4, !dbg !9992
  %30 = icmp eq %struct.zbus_observer.154* %29, null, !dbg !9994
  br i1 %30, label %9, label %16, !dbg !9995, !llvm.loop !10013

31:                                               ; preds = %48, %2, %9
  ret void, !dbg !10015

32:                                               ; preds = %13, %48
  %33 = phi %struct.zbus_observer.154* [ %11, %13 ], [ %50, %48 ]
  %34 = phi %struct.zbus_observer.154** [ %10, %13 ], [ %49, %48 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154** %34, metadata !9987, metadata !DIExpression()), !dbg !9999
  %35 = getelementptr inbounds %struct.zbus_observer.154, %struct.zbus_observer.154* %33, i32 0, i32 0, !dbg !10016
  %36 = load i8, i8* %35, align 4, !dbg !10016, !range !8224
  %37 = icmp eq i8 %36, 0, !dbg !10016
  br i1 %37, label %48, label %38, !dbg !10019

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.zbus_observer.154, %struct.zbus_observer.154* %33, i32 0, i32 1, !dbg !10020
  %40 = load %struct.k_msgq*, %struct.k_msgq** %39, align 4, !dbg !10020
  %41 = icmp eq %struct.k_msgq* %40, null, !dbg !10021
  br i1 %41, label %48, label %42, !dbg !10022

42:                                               ; preds = %38
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #27, !dbg !10023
  %43 = load i64, i64* %15, align 8, !dbg !10025
  %44 = insertvalue [1 x i64] poison, i64 %43, 0, !dbg !10025
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155** %3, metadata !9981, metadata !DIExpression(DW_OP_deref)), !dbg !9989
  %45 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %40, i8* noundef nonnull %14, [1 x i64] %44) #27, !dbg !10025
  call void @llvm.dbg.value(metadata i32 %45, metadata !9984, metadata !DIExpression()), !dbg !9989
  %46 = icmp eq i32 %45, 0, !dbg !10026
  br i1 %46, label %48, label %47, !dbg !10029

47:                                               ; preds = %42
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 85) #26, !dbg !10030
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.147, i32 0, i32 0)) #26, !dbg !10030
  call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 85) #26, !dbg !10030
  unreachable, !dbg !10030

48:                                               ; preds = %42, %32, %38
  call void @llvm.dbg.value(metadata i32 0, metadata !9983, metadata !DIExpression()), !dbg !9989
  %49 = getelementptr inbounds %struct.zbus_observer.154*, %struct.zbus_observer.154** %34, i32 1, !dbg !10032
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154** %49, metadata !9987, metadata !DIExpression()), !dbg !9999
  %50 = load %struct.zbus_observer.154*, %struct.zbus_observer.154** %49, align 4, !dbg !9997
  %51 = icmp eq %struct.zbus_observer.154* %50, null, !dbg !10000
  br i1 %51, label %31, label %32, !dbg !10001, !llvm.loop !10033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !10035 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10039, metadata !DIExpression()), !dbg !10040
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10041, !srcloc !10043
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #26, !dbg !10044
  ret i32 %2, !dbg !10045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !10046 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10052, metadata !DIExpression()), !dbg !10053
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !10050, metadata !DIExpression()), !dbg !10053
  call void @llvm.dbg.value(metadata i8* %1, metadata !10051, metadata !DIExpression()), !dbg !10053
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10054, !srcloc !10056
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #26, !dbg !10057
  ret i32 %4, !dbg !10058
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel.155* noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10059 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10065, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !10063, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.value(metadata i8* %1, metadata !10064, metadata !DIExpression()), !dbg !10067
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10068
  br i1 %4, label %5, label %6, !dbg !10071

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 134) #26, !dbg !10072
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.140, i32 0, i32 0)) #26, !dbg !10072
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 134) #26, !dbg !10072
  unreachable, !dbg !10072

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_channel.155* %0, null, !dbg !10074
  br i1 %7, label %8, label %9, !dbg !10077

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 135) #26, !dbg !10078
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.142, i32 0, i32 0)) #26, !dbg !10078
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 135) #26, !dbg !10078
  unreachable, !dbg !10078

9:                                                ; preds = %6
  %10 = icmp eq i8* %1, null, !dbg !10080
  br i1 %10, label %11, label %12, !dbg !10083

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 136) #26, !dbg !10084
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.144, i32 0, i32 0)) #26, !dbg !10084
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 136) #26, !dbg !10084
  unreachable, !dbg !10084

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 5, !dbg !10086
  %14 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !10086
  %15 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %14, [1 x i64] %2) #27, !dbg !10087
  call void @llvm.dbg.value(metadata i32 %15, metadata !10066, metadata !DIExpression()), !dbg !10067
  %16 = icmp eq i32 %15, 0, !dbg !10088
  br i1 %16, label %17, label %26, !dbg !10090

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 3, !dbg !10091
  %19 = load i8*, i8** %18, align 4, !dbg !10091
  %20 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 1, !dbg !10092
  %21 = load i16, i16* %20, align 4, !dbg !10092
  %22 = zext i16 %21 to i32, !dbg !10093
  %23 = tail call i8* @memcpy(i8* noundef nonnull %1, i8* noundef %19, i32 noundef %22) #26, !dbg !10094
  %24 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !10095
  %25 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %24) #27, !dbg !10096
  br label %26, !dbg !10097

26:                                               ; preds = %12, %17
  %27 = phi i32 [ %25, %17 ], [ %15, %12 ], !dbg !10067
  ret i32 %27, !dbg !10098
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel.155* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !10099 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10104, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !10103, metadata !DIExpression()), !dbg !10107
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #26, !dbg !10108
  call void @llvm.dbg.value(metadata i64 %3, metadata !10106, metadata !DIExpression()), !dbg !10107
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10109
  br i1 %4, label %5, label %6, !dbg !10112

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 153) #26, !dbg !10113
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.140, i32 0, i32 0)) #26, !dbg !10113
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 153) #26, !dbg !10113
  unreachable, !dbg !10113

6:                                                ; preds = %2
  %7 = icmp eq %struct.zbus_channel.155* %0, null, !dbg !10115
  br i1 %7, label %8, label %9, !dbg !10118

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 154) #26, !dbg !10119
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.142, i32 0, i32 0)) #26, !dbg !10119
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 154) #26, !dbg !10119
  unreachable, !dbg !10119

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 5, !dbg !10121
  %11 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !10121
  %12 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %11, [1 x i64] %1) #27, !dbg !10122
  call void @llvm.dbg.value(metadata i32 %12, metadata !10105, metadata !DIExpression()), !dbg !10107
  %13 = icmp eq i32 %12, 0, !dbg !10123
  br i1 %13, label %14, label %17, !dbg !10125

14:                                               ; preds = %9
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.155* noundef nonnull %0, i64 noundef %3) #27, !dbg !10126
  call void @llvm.dbg.value(metadata i32 0, metadata !10105, metadata !DIExpression()), !dbg !10107
  %15 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !10127
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #27, !dbg !10128
  br label %17, !dbg !10129

17:                                               ; preds = %9, %14
  ret i32 %12, !dbg !10130
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel.155* noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !10131 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10134, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !10133, metadata !DIExpression()), !dbg !10136
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10137
  br i1 %3, label %4, label %5, !dbg !10140

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 170) #26, !dbg !10141
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.140, i32 0, i32 0)) #26, !dbg !10141
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 170) #26, !dbg !10141
  unreachable, !dbg !10141

5:                                                ; preds = %2
  %6 = icmp eq %struct.zbus_channel.155* %0, null, !dbg !10143
  br i1 %6, label %7, label %8, !dbg !10146

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 171) #26, !dbg !10147
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.142, i32 0, i32 0)) #26, !dbg !10147
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 171) #26, !dbg !10147
  unreachable, !dbg !10147

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 5, !dbg !10149
  %10 = load %struct.k_mutex*, %struct.k_mutex** %9, align 4, !dbg !10149
  %11 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %10, [1 x i64] %1) #27, !dbg !10150
  call void @llvm.dbg.value(metadata i32 %11, metadata !10135, metadata !DIExpression()), !dbg !10136
  ret i32 %11, !dbg !10151
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel.155* noundef readonly %0) local_unnamed_addr #1 !dbg !10152 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !10156, metadata !DIExpression()), !dbg !10158
  %2 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10159
  br i1 %2, label %3, label %4, !dbg !10162

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 184) #26, !dbg !10163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.140, i32 0, i32 0)) #26, !dbg !10163
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 184) #26, !dbg !10163
  unreachable, !dbg !10163

4:                                                ; preds = %1
  %5 = icmp eq %struct.zbus_channel.155* %0, null, !dbg !10165
  br i1 %5, label %6, label %7, !dbg !10168

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 185) #26, !dbg !10169
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.142, i32 0, i32 0)) #26, !dbg !10169
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 185) #26, !dbg !10169
  unreachable, !dbg !10169

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 5, !dbg !10171
  %9 = load %struct.k_mutex*, %struct.k_mutex** %8, align 4, !dbg !10171
  %10 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %9) #27, !dbg !10172
  call void @llvm.dbg.value(metadata i32 %10, metadata !10157, metadata !DIExpression()), !dbg !10158
  ret i32 %10, !dbg !10173
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer.154* noundef readonly %0, %struct.zbus_channel.155** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10174 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10181, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154* %0, metadata !10179, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155** %1, metadata !10180, metadata !DIExpression()), !dbg !10182
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10183
  br i1 %4, label %5, label %6, !dbg !10186

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 195) #26, !dbg !10187
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.140, i32 0, i32 0)) #26, !dbg !10187
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 195) #26, !dbg !10187
  unreachable, !dbg !10187

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_observer.154* %0, null, !dbg !10189
  br i1 %7, label %8, label %9, !dbg !10192

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 196) #26, !dbg !10193
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10.155, i32 0, i32 0)) #26, !dbg !10193
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 196) #26, !dbg !10193
  unreachable, !dbg !10193

9:                                                ; preds = %6
  %10 = icmp eq %struct.zbus_channel.155** %1, null, !dbg !10195
  br i1 %10, label %11, label %12, !dbg !10198

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 197) #26, !dbg !10199
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.142, i32 0, i32 0)) #26, !dbg !10199
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 197) #26, !dbg !10199
  unreachable, !dbg !10199

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_observer.154, %struct.zbus_observer.154* %0, i32 0, i32 1, !dbg !10201
  %14 = load %struct.k_msgq*, %struct.k_msgq** %13, align 4, !dbg !10201
  %15 = icmp eq %struct.k_msgq* %14, null, !dbg !10203
  br i1 %15, label %19, label %16, !dbg !10204

16:                                               ; preds = %12
  %17 = bitcast %struct.zbus_channel.155** %1 to i8*, !dbg !10205
  %18 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %14, i8* noundef nonnull %17, [1 x i64] %2) #27, !dbg !10206
  br label %19, !dbg !10207

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %18, %16 ], [ -22, %12 ], !dbg !10182
  ret i32 %20, !dbg !10208
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !10209 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10215, metadata !DIExpression()), !dbg !10216
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !10213, metadata !DIExpression()), !dbg !10216
  call void @llvm.dbg.value(metadata i8* %1, metadata !10214, metadata !DIExpression()), !dbg !10216
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10217, !srcloc !10219
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #26, !dbg !10220
  ret i32 %4, !dbg !10221
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !10222 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10224, metadata !DIExpression()), !dbg !10225
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !10226
  ret void, !dbg !10227
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !10228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10232, metadata !DIExpression()), !dbg !10238
  call void @llvm.dbg.value(metadata i32 %1, metadata !10233, metadata !DIExpression()), !dbg !10238
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !10234, metadata !DIExpression()), !dbg !10238
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10239
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !10239
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !10239
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !10235, metadata !DIExpression()), !dbg !10238
  call void @llvm.dbg.value(metadata i32 %0, metadata !10237, metadata !DIExpression()), !dbg !10238
  %7 = icmp slt i32 %0, %1, !dbg !10240
  br i1 %7, label %8, label %22, !dbg !10243

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10237, metadata !DIExpression()), !dbg !10238
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !10244
  %11 = icmp eq i32 %10, 0, !dbg !10244
  br i1 %11, label %19, label %12, !dbg !10247

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !10248
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !10250
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !10250
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !10252
  br i1 %15, label %19, label %16, !dbg !10253

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !10254
  %18 = load i8*, i8** %17, align 4, !dbg !10254
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !10255
  br label %19, !dbg !10256

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !10257
  call void @llvm.dbg.value(metadata i32 %20, metadata !10237, metadata !DIExpression()), !dbg !10238
  %21 = icmp eq i32 %20, %1, !dbg !10240
  br i1 %21, label %22, label %8, !dbg !10243, !llvm.loop !10258

22:                                               ; preds = %19, %3
  ret void, !dbg !10260
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !10261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10263, metadata !DIExpression()), !dbg !10264
  %2 = shl nuw i32 1, %0, !dbg !10265
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !10268
  ret i32 %3, !dbg !10269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !10270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10274, metadata !DIExpression()), !dbg !10275
  %2 = shl nuw i32 1, %0, !dbg !10276
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !10279
  ret void, !dbg !10280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10284, metadata !DIExpression()), !dbg !10285
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10286
  ret void, !dbg !10287
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10290, metadata !DIExpression()), !dbg !10291
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10292
  %3 = and i32 %2, %0, !dbg !10292
  %4 = icmp eq i32 %3, %0, !dbg !10293
  %5 = zext i1 %4 to i32, !dbg !10293
  ret i32 %5, !dbg !10294
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !10295 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10297, metadata !DIExpression()), !dbg !10298
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !10299
  ret void, !dbg !10300
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !10301 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10303, metadata !DIExpression()), !dbg !10304
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !10305
  ret void, !dbg !10306
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !10307 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10309, metadata !DIExpression()), !dbg !10310
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !10311
  ret void, !dbg !10312
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !10313 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10315, metadata !DIExpression()), !dbg !10316
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #27, !dbg !10317
  ret void, !dbg !10318
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !10319 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10321, metadata !DIExpression()), !dbg !10322
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #27, !dbg !10323
  ret void, !dbg !10324
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !10325 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10327, metadata !DIExpression()), !dbg !10328
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !10329
  ret void, !dbg !10330
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !10331 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10333, metadata !DIExpression()), !dbg !10334
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #27, !dbg !10335
  ret void, !dbg !10336
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !10337 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10339, metadata !DIExpression()), !dbg !10340
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #27, !dbg !10341
  ret void, !dbg !10342
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !10343 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10345, metadata !DIExpression()), !dbg !10346
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !10347
  ret void, !dbg !10348
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !10349 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10351, metadata !DIExpression()), !dbg !10352
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !10353
  ret void, !dbg !10354
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10355 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10357, metadata !DIExpression()), !dbg !10358
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !10359
  ret i32 0, !dbg !10360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !1227 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !1231, metadata !DIExpression()), !dbg !10361
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !10362
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !10364
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !10366
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !10368
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !10370
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !10372
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !10374
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #26, !dbg !10376
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #26, !dbg !10378
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #26, !dbg !10380
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #26, !dbg !10382
  ret void, !dbg !10384
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !10385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10387, metadata !DIExpression()), !dbg !10389
  call void @llvm.dbg.value(metadata i32 0, metadata !10388, metadata !DIExpression()), !dbg !10389
  call void @llvm.dbg.value(metadata i32 undef, metadata !10388, metadata !DIExpression()), !dbg !10389
  %2 = lshr i32 6684671, %0, !dbg !10390
  %3 = and i32 %2, 1, !dbg !10390
  %4 = or i32 %3, %0, !dbg !10392
  %5 = icmp eq i32 %4, 0, !dbg !10392
  br i1 %5, label %6, label %7, !dbg !10392

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.158, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.160, i32 0, i32 0), i32 noundef 123) #26, !dbg !10393
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.160, i32 0, i32 0), i32 noundef 123) #26, !dbg !10393
  unreachable, !dbg !10393

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !10398
  %9 = load i32, i32* %8, align 4, !dbg !10398
  call void @llvm.dbg.value(metadata i32 %9, metadata !10388, metadata !DIExpression()), !dbg !10389
  %10 = shl nuw i32 1, %0, !dbg !10399
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #27, !dbg !10400
  tail call void @arch_irq_enable(i32 noundef %9) #26, !dbg !10401
  ret void, !dbg !10402
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10405, metadata !DIExpression()), !dbg !10406
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10407
  %3 = or i32 %2, %0, !dbg !10407
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10407
  ret void, !dbg !10408
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !10409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10411, metadata !DIExpression()), !dbg !10412
  %2 = icmp slt i32 %0, 32, !dbg !10413
  br i1 %2, label %3, label %5, !dbg !10415

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !10416
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !10418
  br label %5, !dbg !10419

5:                                                ; preds = %1, %3
  ret void, !dbg !10420
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10423, metadata !DIExpression()), !dbg !10424
  %2 = xor i32 %0, -1, !dbg !10425
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10425
  %4 = and i32 %3, %2, !dbg !10425
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10425
  ret void, !dbg !10426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !10427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10431, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32 %1, metadata !10432, metadata !DIExpression()), !dbg !10433
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !10434

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !10435
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !10437
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !10438
  br label %11, !dbg !10439

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !10440
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !10441
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !10442
  br label %11, !dbg !10443

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !10444
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !10445
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !10446
  br label %11, !dbg !10447

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !10448
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !10449
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !10450
  br label %11, !dbg !10451

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !10452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10455, metadata !DIExpression()), !dbg !10456
  %2 = xor i32 %0, -1, !dbg !10457
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10457
  %4 = and i32 %3, %2, !dbg !10457
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10457
  ret void, !dbg !10458
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10461, metadata !DIExpression()), !dbg !10462
  %2 = xor i32 %0, -1, !dbg !10463
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10463
  %4 = and i32 %3, %2, !dbg !10463
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10463
  ret void, !dbg !10464
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10467, metadata !DIExpression()), !dbg !10468
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10469
  %3 = or i32 %2, %0, !dbg !10469
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10469
  ret void, !dbg !10470
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10473, metadata !DIExpression()), !dbg !10474
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10475
  %3 = or i32 %2, %0, !dbg !10475
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10475
  ret void, !dbg !10476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !10477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10481, metadata !DIExpression()), !dbg !10487
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !10482, metadata !DIExpression()), !dbg !10487
  call void @llvm.dbg.value(metadata i8* %2, metadata !10483, metadata !DIExpression()), !dbg !10487
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !10484, metadata !DIExpression()), !dbg !10487
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10486, metadata !DIExpression()), !dbg !10487
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10488
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10488
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10490
  br i1 %6, label %7, label %9, !dbg !10491

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10492
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10493
  store i8* %2, i8** %8, align 4, !dbg !10494
  br label %9, !dbg !10495

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10487
  ret i32 %10, !dbg !10496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !10497 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10499, metadata !DIExpression()), !dbg !10502
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !10500, metadata !DIExpression()), !dbg !10502
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10501, metadata !DIExpression()), !dbg !10502
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10503
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10504
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10505
  store i8* null, i8** %3, align 4, !dbg !10506
  ret void, !dbg !10507
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !10508 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10510, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i8* %1, metadata !10511, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i8* %1, metadata !10512, metadata !DIExpression()), !dbg !10515
  %3 = bitcast i8* %1 to i32*, !dbg !10516
  %4 = load i32, i32* %3, align 4, !dbg !10516
  %5 = add i32 %4, -169, !dbg !10516
  %6 = icmp ult i32 %5, -121, !dbg !10516
  br i1 %6, label %15, label %7, !dbg !10518

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10519
  %9 = inttoptr i32 %8 to i32*, !dbg !10520
  call void @llvm.dbg.value(metadata i32* %9, metadata !10513, metadata !DIExpression()), !dbg !10515
  %10 = load volatile i32, i32* %9, align 4, !dbg !10521
  call void @llvm.dbg.value(metadata i32 %10, metadata !10514, metadata !DIExpression()), !dbg !10515
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10522
  %12 = bitcast i8* %11 to i32*, !dbg !10522
  %13 = load i32, i32* %12, align 4, !dbg !10522
  %14 = or i32 %13, %10, !dbg !10523
  call void @llvm.dbg.value(metadata i32 %14, metadata !10514, metadata !DIExpression()), !dbg !10515
  store volatile i32 %14, i32* %9, align 4, !dbg !10524
  br label %15, !dbg !10525

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10515
  ret i32 %16, !dbg !10526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !10527 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10529, metadata !DIExpression()), !dbg !10534
  call void @llvm.dbg.value(metadata i8* %1, metadata !10530, metadata !DIExpression()), !dbg !10534
  call void @llvm.dbg.value(metadata i8* %1, metadata !10531, metadata !DIExpression()), !dbg !10534
  %3 = bitcast i8* %1 to i32*, !dbg !10535
  %4 = load i32, i32* %3, align 4, !dbg !10535
  %5 = add i32 %4, -169, !dbg !10535
  %6 = icmp ult i32 %5, -121, !dbg !10535
  br i1 %6, label %16, label %7, !dbg !10537

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10538
  %9 = inttoptr i32 %8 to i32*, !dbg !10539
  call void @llvm.dbg.value(metadata i32* %9, metadata !10532, metadata !DIExpression()), !dbg !10534
  %10 = load volatile i32, i32* %9, align 4, !dbg !10540
  call void @llvm.dbg.value(metadata i32 %10, metadata !10533, metadata !DIExpression()), !dbg !10534
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10541
  %12 = bitcast i8* %11 to i32*, !dbg !10541
  %13 = load i32, i32* %12, align 4, !dbg !10541
  %14 = xor i32 %13, -1, !dbg !10542
  %15 = and i32 %10, %14, !dbg !10543
  call void @llvm.dbg.value(metadata i32 %15, metadata !10533, metadata !DIExpression()), !dbg !10534
  store volatile i32 %15, i32* %9, align 4, !dbg !10544
  br label %16, !dbg !10545

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10534
  ret i32 %17, !dbg !10546
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10547 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10549, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i8* %1, metadata !10550, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i32* %2, metadata !10551, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i8* %1, metadata !10552, metadata !DIExpression()), !dbg !10557
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10558
  call void @llvm.dbg.value(metadata i32 %4, metadata !10553, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i32 undef, metadata !10554, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i32 undef, metadata !10555, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i32 %4, metadata !10556, metadata !DIExpression()), !dbg !10557
  %5 = bitcast i8* %1 to i32*, !dbg !10559
  %6 = load i32, i32* %5, align 4, !dbg !10559
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !10560

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #27, !dbg !10561
  call void @llvm.dbg.value(metadata i32 %8, metadata !10554, metadata !DIExpression()), !dbg !10557
  br label %19, !dbg !10562

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #27, !dbg !10564
  call void @llvm.dbg.value(metadata i32 %10, metadata !10555, metadata !DIExpression()), !dbg !10557
  br label %19, !dbg !10565

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #26, !dbg !10566
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #27, !dbg !10567
  br label %19, !dbg !10568

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #26, !dbg !10569
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #27, !dbg !10570
  br label %19, !dbg !10571

17:                                               ; preds = %3
  br label %19, !dbg !10572

18:                                               ; preds = %3
  br label %19, !dbg !10573

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !10574
  br label %21, !dbg !10575

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !10557
  ret i32 %22, !dbg !10575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !10576 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10578, metadata !DIExpression()), !dbg !10586
  call void @llvm.dbg.value(metadata i8* %1, metadata !10579, metadata !DIExpression()), !dbg !10586
  call void @llvm.dbg.value(metadata i8* %2, metadata !10580, metadata !DIExpression()), !dbg !10586
  call void @llvm.dbg.value(metadata i8* %1, metadata !10581, metadata !DIExpression()), !dbg !10586
  %4 = bitcast i8* %1 to i32*, !dbg !10587
  %5 = load i32, i32* %4, align 4, !dbg !10587
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !10588
  call void @llvm.dbg.value(metadata i32 %6, metadata !10585, metadata !DIExpression()), !dbg !10586
  %7 = icmp slt i32 %6, 0, !dbg !10589
  br i1 %7, label %22, label %8, !dbg !10591

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10581, metadata !DIExpression()), !dbg !10586
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10592
  %10 = bitcast i8* %9 to i32*, !dbg !10592
  %11 = load i32, i32* %10, align 4, !dbg !10592
  %12 = lshr i32 %11, 16, !dbg !10592
  %13 = and i32 %12, 7, !dbg !10592
  %14 = lshr i32 %11, 8, !dbg !10593
  %15 = and i32 %14, 31, !dbg !10593
  %16 = shl i32 %13, %15, !dbg !10594
  call void @llvm.dbg.value(metadata i32 %16, metadata !10584, metadata !DIExpression()), !dbg !10586
  %17 = and i32 %11, 255, !dbg !10595
  %18 = or i32 %17, 1073887232, !dbg !10596
  %19 = inttoptr i32 %18 to i32*, !dbg !10597
  call void @llvm.dbg.value(metadata i32* %19, metadata !10582, metadata !DIExpression()), !dbg !10586
  %20 = load volatile i32, i32* %19, align 4, !dbg !10598
  call void @llvm.dbg.value(metadata i32 %20, metadata !10583, metadata !DIExpression()), !dbg !10586
  %21 = or i32 %16, %20, !dbg !10599
  call void @llvm.dbg.value(metadata i32 %21, metadata !10583, metadata !DIExpression()), !dbg !10586
  store volatile i32 %21, i32* %19, align 4, !dbg !10600
  br label %22, !dbg !10601

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10586
  ret i32 %23, !dbg !10602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !10603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10607, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.value(metadata i32 0, metadata !10608, metadata !DIExpression()), !dbg !10609
  %2 = add i32 %0, -1, !dbg !10610
  %3 = icmp ult i32 %2, 6, !dbg !10610
  br i1 %3, label %4, label %7, !dbg !10610

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10610
  %6 = load i32, i32* %5, align 4, !dbg !10610
  call void @llvm.dbg.value(metadata i32 %6, metadata !10608, metadata !DIExpression()), !dbg !10609
  br label %7, !dbg !10611

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10609
  ret i32 %8, !dbg !10612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10617, metadata !DIExpression()), !dbg !10619
  call void @llvm.dbg.value(metadata i32 %1, metadata !10618, metadata !DIExpression()), !dbg !10619
  %3 = udiv i32 %0, %1, !dbg !10620
  ret i32 %3, !dbg !10621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10626, metadata !DIExpression()), !dbg !10630
  call void @llvm.dbg.value(metadata i32 12, metadata !10627, metadata !DIExpression()), !dbg !10630
  call void @llvm.dbg.value(metadata i32 336, metadata !10628, metadata !DIExpression()), !dbg !10630
  call void @llvm.dbg.value(metadata i32 %1, metadata !10629, metadata !DIExpression()), !dbg !10630
  %3 = mul i32 %0, 336, !dbg !10631
  %4 = mul nsw i32 %1, 12, !dbg !10632
  %5 = udiv i32 %3, %4, !dbg !10633
  ret i32 %5, !dbg !10634
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10635 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10637, metadata !DIExpression()), !dbg !10640
  tail call void @config_enable_default_clocks() #26, !dbg !10641
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !10642
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !10642
  %4 = lshr i32 %3, 4, !dbg !10642
  %5 = and i32 %4, 15, !dbg !10642
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10642
  %7 = load i8, i8* %6, align 1, !dbg !10642
  %8 = zext i8 %7 to i32, !dbg !10642
  %9 = lshr i32 %2, %8, !dbg !10642
  call void @llvm.dbg.value(metadata i32 %9, metadata !10638, metadata !DIExpression()), !dbg !10640
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !10639, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10640
  %10 = icmp ult i32 %9, 168000000, !dbg !10643
  br i1 %10, label %11, label %13, !dbg !10645

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #26, !dbg !10646
  br label %13, !dbg !10648

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !10649
  tail call fastcc void @set_up_plls() #27, !dbg !10650
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !10651
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #27, !dbg !10654
  br label %14, !dbg !10655

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10656
  %16 = icmp eq i32 %15, 8, !dbg !10657
  br i1 %16, label %17, label %14, !dbg !10655, !llvm.loop !10658

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !10660
  br i1 %18, label %19, label %21, !dbg !10662

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #26, !dbg !10663
  br label %21, !dbg !10665

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !10666
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !10667
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !10668
  ret i32 0, !dbg !10669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !10670 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10672
  %2 = and i32 %1, 240, !dbg !10672
  ret i32 %2, !dbg !10673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !10674 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !10675
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !10680
  br label %1, !dbg !10681

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !10682
  %3 = icmp eq i32 %2, 1, !dbg !10683
  br i1 %3, label %4, label %1, !dbg !10681, !llvm.loop !10684

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !10686
  br label %5, !dbg !10689

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !10690
  %7 = icmp eq i32 %6, 1, !dbg !10691
  br i1 %7, label %8, label %5, !dbg !10689, !llvm.loop !10692

8:                                                ; preds = %5
  ret void, !dbg !10694
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10695 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10696
  %2 = icmp eq i32 %1, 8, !dbg !10698
  br i1 %2, label %3, label %4, !dbg !10699

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !10700
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !10702
  br label %4, !dbg !10703

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !10704
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10705
  %6 = and i32 %5, -196609, !dbg !10705
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10705
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10706
  %8 = and i32 %7, -251658241, !dbg !10706
  %9 = or i32 %8, 117440512, !dbg !10706
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10706
  tail call void @config_pll_sysclock() #26, !dbg !10707
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !10708
  br label %10, !dbg !10709

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !10710
  %12 = icmp eq i32 %11, 1, !dbg !10711
  br i1 %12, label %13, label %10, !dbg !10709, !llvm.loop !10712

13:                                               ; preds = %10
  ret void, !dbg !10714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !10715 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10717, metadata !DIExpression()), !dbg !10718
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10719
  %2 = and i32 %1, -241, !dbg !10719
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10719
  ret void, !dbg !10720
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !10721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10723, metadata !DIExpression()), !dbg !10724
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10725
  %3 = and i32 %2, -4, !dbg !10725
  %4 = or i32 %3, %0, !dbg !10725
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10725
  ret void, !dbg !10726
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !10727 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10728
  %2 = and i32 %1, 12, !dbg !10728
  ret i32 %2, !dbg !10729
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !10730 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !10732, metadata !DIExpression()), !dbg !10733
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10734
  %2 = and i32 %1, -7169, !dbg !10734
  %3 = or i32 %2, 5120, !dbg !10734
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10734
  ret void, !dbg !10735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !10736 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !10738, metadata !DIExpression()), !dbg !10739
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10740
  %2 = and i32 %1, -57345, !dbg !10740
  %3 = or i32 %2, 32768, !dbg !10740
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10740
  ret void, !dbg !10741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !10742 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10743
  %2 = icmp eq i32 %1, 1, !dbg !10745
  br i1 %2, label %7, label %3, !dbg !10746

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !10747
  br label %4, !dbg !10749

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10750
  %6 = icmp eq i32 %5, 1, !dbg !10751
  br i1 %6, label %7, label %4, !dbg !10749, !llvm.loop !10752

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #27, !dbg !10754
  br label %8, !dbg !10755

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10756
  %10 = icmp eq i32 %9, 0, !dbg !10757
  br i1 %10, label %11, label %8, !dbg !10755, !llvm.loop !10758

11:                                               ; preds = %8
  ret void, !dbg !10760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !10761 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10762
  %2 = and i32 %1, -16777217, !dbg !10762
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10762
  ret void, !dbg !10763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !10764 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10765
  %2 = or i32 %1, 16777216, !dbg !10765
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10765
  ret void, !dbg !10766
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !10767 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10768
  %2 = lshr i32 %1, 25, !dbg !10769
  %3 = and i32 %2, 1, !dbg !10769
  ret i32 %3, !dbg !10770
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !10771 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10772
  %2 = lshr i32 %1, 1, !dbg !10773
  %3 = and i32 %2, 1, !dbg !10773
  ret i32 %3, !dbg !10774
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !10775 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10776
  %2 = or i32 %1, 1, !dbg !10776
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10776
  ret void, !dbg !10777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !10778 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10779
  %2 = and i32 %1, -262145, !dbg !10779
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10779
  ret void, !dbg !10780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !10781 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10782
  %2 = or i32 %1, 65536, !dbg !10782
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10782
  ret void, !dbg !10783
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !10784 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10785
  %2 = lshr i32 %1, 17, !dbg !10786
  %3 = and i32 %2, 1, !dbg !10786
  ret i32 %3, !dbg !10787
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !10788 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10789
  %2 = or i32 %1, 1, !dbg !10789
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10789
  ret void, !dbg !10790
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !10791 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10792
  %2 = lshr i32 %1, 1, !dbg !10793
  %3 = and i32 %2, 1, !dbg !10793
  ret i32 %3, !dbg !10794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !10795 {
  ret i32 12000000, !dbg !10797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !10801 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !10802
  ret void, !dbg !10803
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !10804 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10808, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.value(metadata i32 12, metadata !10809, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.value(metadata i32 336, metadata !10810, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.value(metadata i32 0, metadata !10811, metadata !DIExpression()), !dbg !10812
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10813
  %2 = and i32 %1, -4227072, !dbg !10813
  %3 = or i32 %2, 4215820, !dbg !10813
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10813
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10814
  %5 = and i32 %4, -196609, !dbg !10814
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10814
  ret void, !dbg !10815
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #20 !dbg !10816 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !10817
  ret void, !dbg !10818
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #20 !dbg !10819 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10822, metadata !DIExpression()), !dbg !10824
  %2 = bitcast i32* %1 to i8*, !dbg !10825
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10825
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10823, metadata !DIExpression()), !dbg !10826
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10827
  %4 = or i32 %3, 268435456, !dbg !10827
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10827
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10828
  %6 = and i32 %5, 268435456, !dbg !10828
  store volatile i32 %6, i32* %1, align 4, !dbg !10829
  %7 = load volatile i32, i32* %1, align 4, !dbg !10830
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10831
  ret void, !dbg !10831
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10834, metadata !DIExpression()), !dbg !10835
  %2 = tail call fastcc zeroext i1 @device_is_ready() #27, !dbg !10836
  br i1 %2, label %3, label %4, !dbg !10838

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !10839
  br label %4, !dbg !10840

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10835
  ret i32 %5, !dbg !10841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10842 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10847, metadata !DIExpression()), !dbg !10848
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10849, !srcloc !10851
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #27, !dbg !10852
  ret i1 %1, !dbg !10853
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10854 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !10855
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !10856
  ret void, !dbg !10857
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10860, metadata !DIExpression()), !dbg !10861
  %2 = icmp eq i32 %0, 10, !dbg !10862
  br i1 %2, label %3, label %4, !dbg !10864

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !10865
  br label %4, !dbg !10867

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10868
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !10869
  ret i32 %0, !dbg !10870
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10871 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10874, metadata !DIExpression()), !dbg !10876
  call void @llvm.dbg.value(metadata i8 %0, metadata !10875, metadata !DIExpression()), !dbg !10876
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10877, !srcloc !10879
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !10880
  ret void, !dbg !10881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10882 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10884, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.value(metadata i8 %0, metadata !10885, metadata !DIExpression()), !dbg !10887
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10888
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10886, metadata !DIExpression()), !dbg !10887
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10889
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10889
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #26, !dbg !10890
  ret void, !dbg !10891
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10892 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10894, metadata !DIExpression()), !dbg !10895
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !10896
  ret i1 %1, !dbg !10897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !10898 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10947, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10948, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10949, metadata !DIExpression()), !dbg !10950
  ret void, !dbg !10951
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10952 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10954, metadata !DIExpression()), !dbg !10959
  call void @llvm.dbg.value(metadata i8 %1, metadata !10955, metadata !DIExpression()), !dbg !10959
  call void @llvm.dbg.value(metadata i32 %2, metadata !10956, metadata !DIExpression()), !dbg !10959
  %5 = bitcast i32* %4 to i8*, !dbg !10960
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10960
  call void @llvm.dbg.value(metadata i32* %4, metadata !10958, metadata !DIExpression(DW_OP_deref)), !dbg !10959
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !10961
  call void @llvm.dbg.value(metadata i32 %6, metadata !10957, metadata !DIExpression()), !dbg !10959
  %7 = icmp eq i32 %6, 0, !dbg !10962
  br i1 %7, label %8, label %31, !dbg !10964

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10957, metadata !DIExpression()), !dbg !10959
  %9 = and i32 %2, 131072, !dbg !10965
  %10 = icmp eq i32 %9, 0, !dbg !10967
  br i1 %10, label %28, label %11, !dbg !10968

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10969
  %13 = icmp eq i32 %12, 0, !dbg !10972
  br i1 %13, label %18, label %14, !dbg !10973

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10974
  %16 = shl nuw i32 1, %15, !dbg !10974
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !10976
  br label %25, !dbg !10977

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10978
  %20 = icmp eq i32 %19, 0, !dbg !10980
  %21 = zext i8 %1 to i32, !dbg !10959
  br i1 %20, label %25, label %22, !dbg !10981

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10982
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !10984
  br label %25, !dbg !10985

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10986
  %27 = load i32, i32* %4, align 4, !dbg !10987
  call void @llvm.dbg.value(metadata i32 %30, metadata !10958, metadata !DIExpression()), !dbg !10959
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !10988
  br label %31, !dbg !10989

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10986
  %30 = load i32, i32* %4, align 4, !dbg !10987
  call void @llvm.dbg.value(metadata i32 %30, metadata !10958, metadata !DIExpression()), !dbg !10959
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !10988
  call void @llvm.dbg.value(metadata i32 0, metadata !10957, metadata !DIExpression()), !dbg !10959
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10990
  ret i32 %6, !dbg !10990
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !10991 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10995, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.value(metadata i32* %1, metadata !10996, metadata !DIExpression()), !dbg !11000
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11001
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11001
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11001
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10997, metadata !DIExpression()), !dbg !11000
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11002
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11002
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11002
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10999, metadata !DIExpression()), !dbg !11000
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !11003
  store i32 %9, i32* %1, align 4, !dbg !11004
  ret i32 0, !dbg !11005
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !11006 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11008, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata i32 %1, metadata !11009, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata i32 %2, metadata !11010, metadata !DIExpression()), !dbg !11014
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11015
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !11015
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !11015
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !11011, metadata !DIExpression()), !dbg !11014
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !11016
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !11016
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !11016
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !11012, metadata !DIExpression()), !dbg !11014
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !11017
  call void @llvm.dbg.value(metadata i32 %10, metadata !11013, metadata !DIExpression()), !dbg !11014
  %11 = xor i32 %1, -1, !dbg !11018
  %12 = and i32 %10, %11, !dbg !11019
  %13 = and i32 %2, %1, !dbg !11020
  %14 = or i32 %12, %13, !dbg !11021
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !11022
  ret i32 0, !dbg !11023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !11024 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11026, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.value(metadata i32 %1, metadata !11027, metadata !DIExpression()), !dbg !11030
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11031
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11031
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11031
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11028, metadata !DIExpression()), !dbg !11030
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11032
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11032
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11032
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11029, metadata !DIExpression()), !dbg !11030
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !11033
  store volatile i32 %1, i32* %9, align 4, !dbg !11033
  ret i32 0, !dbg !11034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !11035 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11037, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.value(metadata i32 %1, metadata !11038, metadata !DIExpression()), !dbg !11041
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11042
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11042
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11042
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11039, metadata !DIExpression()), !dbg !11041
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11043
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11043
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11043
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11040, metadata !DIExpression()), !dbg !11041
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !11044
  ret i32 0, !dbg !11045
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !11046 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11048, metadata !DIExpression()), !dbg !11052
  call void @llvm.dbg.value(metadata i32 %1, metadata !11049, metadata !DIExpression()), !dbg !11052
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11053
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11053
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11053
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11050, metadata !DIExpression()), !dbg !11052
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11054
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11054
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11054
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11051, metadata !DIExpression()), !dbg !11052
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !11055
  %10 = load volatile i32, i32* %9, align 4, !dbg !11055
  %11 = xor i32 %10, %1, !dbg !11055
  store volatile i32 %11, i32* %9, align 4, !dbg !11055
  ret i32 0, !dbg !11056
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11057 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11059, metadata !DIExpression()), !dbg !11069
  call void @llvm.dbg.value(metadata i8 %1, metadata !11060, metadata !DIExpression()), !dbg !11069
  call void @llvm.dbg.value(metadata i32 %2, metadata !11061, metadata !DIExpression()), !dbg !11069
  call void @llvm.dbg.value(metadata i32 %3, metadata !11062, metadata !DIExpression()), !dbg !11069
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11070
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11070
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11070
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11063, metadata !DIExpression()), !dbg !11069
  call void @llvm.dbg.value(metadata i8* undef, metadata !11064, metadata !DIExpression()), !dbg !11069
  call void @llvm.dbg.value(metadata i32 0, metadata !11066, metadata !DIExpression()), !dbg !11069
  call void @llvm.dbg.value(metadata i32 0, metadata !11067, metadata !DIExpression()), !dbg !11069
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !11071

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !11072
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !11076
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11077
  %12 = load i32, i32* %11, align 4, !dbg !11077
  %13 = icmp eq i32 %10, %12, !dbg !11078
  br i1 %13, label %14, label %29, !dbg !11079

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !11080
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !11082
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !11083
  br label %29, !dbg !11084

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11085
  %17 = load i8*, i8** %16, align 4, !dbg !11085
  call void @llvm.dbg.value(metadata i8* %17, metadata !11064, metadata !DIExpression()), !dbg !11069
  %18 = zext i8 %1 to i32, !dbg !11086
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !11088
  %20 = icmp eq i32 %19, 0, !dbg !11089
  br i1 %20, label %21, label %29, !dbg !11090

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11091
  %23 = load i32, i32* %22, align 4, !dbg !11091
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !11092
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !11093

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !11066, metadata !DIExpression()), !dbg !11069
  br label %27, !dbg !11094

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !11066, metadata !DIExpression()), !dbg !11069
  br label %27, !dbg !11096

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !11066, metadata !DIExpression()), !dbg !11069
  br label %27, !dbg !11097

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !11069
  call void @llvm.dbg.value(metadata i32 %28, metadata !11066, metadata !DIExpression()), !dbg !11069
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !11098
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !11099
  br label %29, !dbg !11099

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !11069
  call void @llvm.dbg.value(metadata i32 %30, metadata !11067, metadata !DIExpression()), !dbg !11069
  call void @llvm.dbg.label(metadata !11068), !dbg !11100
  ret i32 %30, !dbg !11101
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !11102 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11104, metadata !DIExpression()), !dbg !11108
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11105, metadata !DIExpression()), !dbg !11108
  call void @llvm.dbg.value(metadata i1 %2, metadata !11106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11108
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11109
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !11109
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !11109
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !11107, metadata !DIExpression()), !dbg !11108
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !11110
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !11111
  ret i32 %8, !dbg !11112
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !11113 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11119, metadata !DIExpression()), !dbg !11122
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11120, metadata !DIExpression()), !dbg !11122
  call void @llvm.dbg.value(metadata i1 %2, metadata !11121, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11122
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !11123
  br i1 %4, label %5, label %6, !dbg !11126

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35.172, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.173, i32 0, i32 0), i32 noundef 42) #26, !dbg !11127
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36.174, i32 0, i32 0)) #26, !dbg !11127
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.173, i32 0, i32 0), i32 noundef 42) #26, !dbg !11127
  unreachable, !dbg !11127

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !11129
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !11129
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !11129
  br i1 %9, label %10, label %11, !dbg !11132

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.173, i32 0, i32 0), i32 noundef 43) #26, !dbg !11133
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.176, i32 0, i32 0)) #26, !dbg !11133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.173, i32 0, i32 0), i32 noundef 43) #26, !dbg !11133
  unreachable, !dbg !11133

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !11135
  br i1 %12, label %18, label %13, !dbg !11137

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11138
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #27, !dbg !11141
  %16 = or i1 %15, %2, !dbg !11142
  %17 = select i1 %16, i32 0, i32 -22, !dbg !11142
  br i1 %2, label %19, label %21, !dbg !11142

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !11143

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11144
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #27, !dbg !11147
  br label %21, !dbg !11148

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !11122
  ret i32 %22, !dbg !11149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11150 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11154, metadata !DIExpression()), !dbg !11155
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11156
  %3 = icmp eq %struct._snode* %2, null, !dbg !11156
  ret i1 %3, !dbg !11156
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !11157 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11161, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11162, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11163, metadata !DIExpression()), !dbg !11165
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11166
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11164, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11163, metadata !DIExpression()), !dbg !11165
  %4 = icmp eq %struct._snode* %3, null, !dbg !11168
  br i1 %4, label %15, label %5, !dbg !11166

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11164, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11163, metadata !DIExpression()), !dbg !11165
  %6 = icmp eq %struct._snode* %3, %1, !dbg !11170
  br i1 %6, label %9, label %11, !dbg !11173

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11164, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11163, metadata !DIExpression()), !dbg !11165
  %8 = icmp eq %struct._snode* %13, %1, !dbg !11170
  br i1 %8, label %9, label %11, !dbg !11173, !llvm.loop !11174

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !11175
  br label %15, !dbg !11175

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11164, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11163, metadata !DIExpression()), !dbg !11165
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #27, !dbg !11168
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11164, metadata !DIExpression()), !dbg !11165
  %14 = icmp eq %struct._snode* %13, null, !dbg !11168
  br i1 %14, label %15, label %7, !dbg !11166, !llvm.loop !11174

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11178 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11182, metadata !DIExpression()), !dbg !11184
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11183, metadata !DIExpression()), !dbg !11184
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11185
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !11185
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !11185
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !11186
  %5 = icmp eq %struct._snode* %4, null, !dbg !11186
  br i1 %5, label %6, label %8, !dbg !11185

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11188
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !11188
  br label %8, !dbg !11188

8:                                                ; preds = %6, %2
  ret void, !dbg !11185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11190 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11194, metadata !DIExpression()), !dbg !11195
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11196
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11196
  ret %struct._snode* %3, !dbg !11197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !11198 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11202, metadata !DIExpression()), !dbg !11204
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11203, metadata !DIExpression()), !dbg !11204
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11205
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11206
  ret void, !dbg !11207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !11208 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11210, metadata !DIExpression()), !dbg !11212
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11211, metadata !DIExpression()), !dbg !11212
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11213
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11214
  ret void, !dbg !11215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11216 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11218, metadata !DIExpression()), !dbg !11219
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11220
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11220
  ret %struct._snode* %3, !dbg !11221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !11222 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11224, metadata !DIExpression()), !dbg !11226
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11225, metadata !DIExpression()), !dbg !11226
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11227
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11228
  ret void, !dbg !11229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !11230 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11234, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11235, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !11236, metadata !DIExpression()), !dbg !11237
  %4 = icmp eq %struct._snode* %1, null, !dbg !11238
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #27, !dbg !11240
  br i1 %4, label %6, label %11, !dbg !11241

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !11242
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !11244
  %8 = icmp eq %struct._snode* %7, %2, !dbg !11244
  br i1 %8, label %9, label %15, !dbg !11242

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11246
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !11246
  br label %15, !dbg !11246

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !11248
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !11250
  %13 = icmp eq %struct._snode* %12, %2, !dbg !11250
  br i1 %13, label %14, label %15, !dbg !11248

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !11252
  br label %15, !dbg !11252

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !11241
  ret void, !dbg !11241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !11254 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11258, metadata !DIExpression()), !dbg !11259
  %2 = icmp eq %struct._snode* %0, null, !dbg !11260
  br i1 %2, label %5, label %3, !dbg !11260

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !11260
  br label %5, !dbg !11260

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !11260
  ret %struct._snode* %6, !dbg !11260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11261 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11263, metadata !DIExpression()), !dbg !11264
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !11265
  ret %struct._snode* %2, !dbg !11265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11266 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11268, metadata !DIExpression()), !dbg !11269
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11270
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11270
  ret %struct._snode* %3, !dbg !11271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !11272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11274, metadata !DIExpression()), !dbg !11277
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !11278, !range !11279
  call void @llvm.dbg.value(metadata i32 %2, metadata !11275, metadata !DIExpression()), !dbg !11277
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !11280
  call void @llvm.dbg.value(metadata i32 %3, metadata !11276, metadata !DIExpression()), !dbg !11277
  ret i32 %3, !dbg !11281
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !11282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11284, metadata !DIExpression()), !dbg !11287
  call void @llvm.dbg.value(metadata i8* %1, metadata !11285, metadata !DIExpression()), !dbg !11287
  call void @llvm.dbg.value(metadata i8* %1, metadata !11286, metadata !DIExpression()), !dbg !11287
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !11288
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !11288
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11289
  %6 = bitcast i8* %5 to %struct.device**, !dbg !11289
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !11289
  %8 = shl nuw i32 1, %0, !dbg !11290
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !11291
  ret void, !dbg !11292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11293 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !11297, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata i32 %1, metadata !11298, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11299, metadata !DIExpression()), !dbg !11303
  %4 = bitcast i64* %3 to i8*, !dbg !11304
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11304
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !11301, metadata !DIExpression()), !dbg !11303
  store i64 70368744177732, i64* %3, align 8, !dbg !11305
  call void @llvm.dbg.value(metadata i64* %3, metadata !11301, metadata !DIExpression(DW_OP_deref)), !dbg !11303
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !11306
  call void @llvm.dbg.value(metadata i32 %5, metadata !11302, metadata !DIExpression()), !dbg !11303
  %6 = icmp eq i32 %5, 0, !dbg !11307
  br i1 %6, label %7, label %8, !dbg !11309

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !11310
  br label %8, !dbg !11311

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11312
  ret void, !dbg !11312
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !11313 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11315, metadata !DIExpression()), !dbg !11318
  call void @llvm.dbg.value(metadata i8* %0, metadata !11316, metadata !DIExpression()), !dbg !11318
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !11319
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !11317, metadata !DIExpression()), !dbg !11318
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !11320
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !11320
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #26, !dbg !11321
  ret i32 %5, !dbg !11322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11325, metadata !DIExpression()), !dbg !11328
  call void @llvm.dbg.value(metadata i32 %1, metadata !11326, metadata !DIExpression()), !dbg !11328
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !11329
  call void @llvm.dbg.value(metadata i32 %3, metadata !11327, metadata !DIExpression()), !dbg !11328
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !11330
  ret void, !dbg !11331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !11332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11336, metadata !DIExpression()), !dbg !11337
  %2 = sdiv i32 %0, 4, !dbg !11338
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !11339
  %6 = add nsw i32 %5, 16, !dbg !11340
  %7 = shl i32 15, %6, !dbg !11341
  %8 = or i32 %7, %2, !dbg !11342
  ret i32 %8, !dbg !11343
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11348, metadata !DIExpression()), !dbg !11350
  call void @llvm.dbg.value(metadata i32 %1, metadata !11349, metadata !DIExpression()), !dbg !11350
  %3 = and i32 %1, 255, !dbg !11351
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !11351
  %5 = load volatile i32, i32* %4, align 4, !dbg !11351
  %6 = lshr i32 %1, 16, !dbg !11351
  %7 = xor i32 %6, -1, !dbg !11351
  %8 = and i32 %5, %7, !dbg !11351
  call void @llvm.dbg.value(metadata i32 %6, metadata !11352, metadata !DIExpression()) #25, !dbg !11356
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11358, !srcloc !11359
  call void @llvm.dbg.value(metadata i32 %9, metadata !11355, metadata !DIExpression()) #25, !dbg !11356
  call void @llvm.dbg.value(metadata i32 %9, metadata !11360, metadata !DIExpression()) #25, !dbg !11365
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !11367, !range !5482
  %11 = shl i32 %0, %10, !dbg !11351
  %12 = or i32 %11, %8, !dbg !11351
  store volatile i32 %12, i32* %4, align 4, !dbg !11351
  ret void, !dbg !11368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11369 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11373, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !11374, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i32 %2, metadata !11375, metadata !DIExpression()), !dbg !11378
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11379
  %5 = icmp eq %struct._snode* %4, null, !dbg !11379
  br i1 %5, label %24, label %6, !dbg !11379

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #27, !dbg !11381
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11377, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !11376, metadata !DIExpression()), !dbg !11378
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !11382
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !11382
  %12 = load i32, i32* %11, align 4, !dbg !11382
  %13 = and i32 %12, %2, !dbg !11386
  %14 = icmp eq i32 %13, 0, !dbg !11386
  br i1 %14, label %22, label %15, !dbg !11387

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !11388
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !11388
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !11388
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !11388
  br i1 %19, label %20, label %21, !dbg !11392

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.173, i32 0, i32 0), i32 noundef 77) #26, !dbg !11393
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.176, i32 0, i32 0)) #26, !dbg !11393
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.173, i32 0, i32 0), i32 noundef 77) #26, !dbg !11393
  unreachable, !dbg !11393

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #26, !dbg !11395
  br label %22, !dbg !11396

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11376, metadata !DIExpression()), !dbg !11378
  %23 = icmp eq %struct._snode* %8, null, !dbg !11397
  br i1 %23, label %24, label %6, !dbg !11397

24:                                               ; preds = %22, %3
  ret void, !dbg !11398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !11399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11401, metadata !DIExpression()), !dbg !11402
  %2 = and i32 %0, 255, !dbg !11403
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !11403
  %4 = load volatile i32, i32* %3, align 4, !dbg !11403
  %5 = lshr i32 %0, 16, !dbg !11403
  %6 = and i32 %4, %5, !dbg !11403
  call void @llvm.dbg.value(metadata i32 %5, metadata !11352, metadata !DIExpression()) #25, !dbg !11404
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !11406, !srcloc !11359
  call void @llvm.dbg.value(metadata i32 %7, metadata !11355, metadata !DIExpression()) #25, !dbg !11404
  call void @llvm.dbg.value(metadata i32 %7, metadata !11360, metadata !DIExpression()) #25, !dbg !11407
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11409, !range !5482
  %9 = lshr i32 %6, %8, !dbg !11410
  ret i32 %9, !dbg !11411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11412 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11417, metadata !DIExpression()), !dbg !11419
  call void @llvm.dbg.value(metadata i32 %1, metadata !11418, metadata !DIExpression()), !dbg !11419
  %3 = shl i32 %1, 16, !dbg !11420
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !11420
  store volatile i32 %3, i32* %4, align 4, !dbg !11420
  ret void, !dbg !11421
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11422 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11426, metadata !DIExpression()), !dbg !11427
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11428
  %3 = load volatile i32, i32* %2, align 4, !dbg !11428
  ret i32 %3, !dbg !11429
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11430 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11432, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.value(metadata i32 %1, metadata !11433, metadata !DIExpression()), !dbg !11434
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11435
  store volatile i32 %1, i32* %3, align 4, !dbg !11435
  ret void, !dbg !11436
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11437 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11439, metadata !DIExpression()), !dbg !11440
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !11441
  %3 = load volatile i32, i32* %2, align 4, !dbg !11441
  ret i32 %3, !dbg !11442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !11443 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11447, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata i32* %1, metadata !11448, metadata !DIExpression()), !dbg !11449
  %3 = and i32 %0, 131072, !dbg !11450
  %4 = icmp eq i32 %3, 0, !dbg !11452
  br i1 %4, label %22, label %5, !dbg !11453

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !11454
  %6 = and i32 %0, 2, !dbg !11456
  %7 = icmp eq i32 %6, 0, !dbg !11458
  br i1 %7, label %11, label %8, !dbg !11459

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !11460
  %10 = icmp eq i32 %9, 0, !dbg !11460
  br i1 %10, label %33, label %11, !dbg !11463

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !11464
  store i32 %12, i32* %1, align 4, !dbg !11464
  %13 = and i32 %0, 16, !dbg !11465
  %14 = icmp eq i32 %13, 0, !dbg !11467
  br i1 %14, label %17, label %15, !dbg !11468

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !11469
  br label %31, !dbg !11471

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !11472
  %19 = icmp eq i32 %18, 0, !dbg !11474
  br i1 %19, label %33, label %20, !dbg !11475

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !11476
  br label %31, !dbg !11478

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !11479
  %24 = icmp eq i32 %23, 0, !dbg !11481
  br i1 %24, label %31, label %25, !dbg !11482

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !11483
  %27 = icmp eq i32 %26, 0, !dbg !11486
  br i1 %27, label %28, label %31, !dbg !11487

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11488
  br label %33, !dbg !11489

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !11449
  ret i32 %34, !dbg !11489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11490 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11494, metadata !DIExpression()), !dbg !11505
  call void @llvm.dbg.value(metadata i32 %1, metadata !11495, metadata !DIExpression()), !dbg !11505
  call void @llvm.dbg.value(metadata i32 %2, metadata !11496, metadata !DIExpression()), !dbg !11505
  call void @llvm.dbg.value(metadata i32 %3, metadata !11497, metadata !DIExpression()), !dbg !11505
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11506
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11506
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11506
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11498, metadata !DIExpression()), !dbg !11505
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11507
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11507
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11507
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11499, metadata !DIExpression()), !dbg !11505
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !11508
  call void @llvm.dbg.value(metadata i32 %11, metadata !11500, metadata !DIExpression()), !dbg !11505
  %12 = and i32 %2, 48, !dbg !11509
  call void @llvm.dbg.value(metadata i32 %12, metadata !11501, metadata !DIExpression()), !dbg !11505
  call void @llvm.dbg.value(metadata i32 %2, metadata !11502, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11505
  call void @llvm.dbg.value(metadata i32 %2, metadata !11503, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11505
  call void @llvm.dbg.value(metadata i32 %2, metadata !11504, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11505
  %13 = lshr i32 %2, 6, !dbg !11510
  %14 = and i32 %13, 1, !dbg !11510
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !11511
  %15 = lshr i32 %2, 7, !dbg !11512
  %16 = and i32 %15, 3, !dbg !11512
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !11513
  %17 = lshr i32 %2, 9, !dbg !11514
  %18 = and i32 %17, 3, !dbg !11514
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !11515
  %19 = icmp eq i32 %12, 32, !dbg !11516
  br i1 %19, label %20, label %24, !dbg !11518

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11519
  br i1 %21, label %22, label %23, !dbg !11522

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !11523
  br label %24, !dbg !11525

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !11526
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11528
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !11529
  ret void, !dbg !11530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !11531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11533, metadata !DIExpression()), !dbg !11535
  %2 = shl nuw i32 1, %0, !dbg !11536
  call void @llvm.dbg.value(metadata i32 %2, metadata !11534, metadata !DIExpression()), !dbg !11535
  ret i32 %2, !dbg !11537
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11538 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11542, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 %1, metadata !11543, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 %2, metadata !11544, metadata !DIExpression()), !dbg !11545
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11546
  %5 = load volatile i32, i32* %4, align 4, !dbg !11546
  %6 = xor i32 %1, -1, !dbg !11546
  %7 = and i32 %5, %6, !dbg !11546
  %8 = mul i32 %2, %1, !dbg !11546
  %9 = or i32 %7, %8, !dbg !11546
  store volatile i32 %9, i32* %4, align 4, !dbg !11546
  ret void, !dbg !11547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11548 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11550, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata i32 %1, metadata !11551, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata i32 %2, metadata !11552, metadata !DIExpression()), !dbg !11553
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11554
  %5 = load volatile i32, i32* %4, align 4, !dbg !11554
  call void @llvm.dbg.value(metadata i32 %1, metadata !11352, metadata !DIExpression()) #25, !dbg !11555
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11557, !srcloc !11359
  call void @llvm.dbg.value(metadata i32 %6, metadata !11355, metadata !DIExpression()) #25, !dbg !11555
  call void @llvm.dbg.value(metadata i32 %6, metadata !11360, metadata !DIExpression()) #25, !dbg !11558
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11560, !range !5482
  %8 = shl nuw nsw i32 %7, 1, !dbg !11554
  %9 = shl i32 3, %8, !dbg !11554
  %10 = xor i32 %9, -1, !dbg !11554
  %11 = and i32 %5, %10, !dbg !11554
  call void @llvm.dbg.value(metadata i32 %1, metadata !11352, metadata !DIExpression()) #25, !dbg !11561
  call void @llvm.dbg.value(metadata i32 %6, metadata !11355, metadata !DIExpression()) #25, !dbg !11561
  call void @llvm.dbg.value(metadata i32 %6, metadata !11360, metadata !DIExpression()) #25, !dbg !11563
  %12 = shl i32 %2, %8, !dbg !11554
  %13 = or i32 %11, %12, !dbg !11554
  store volatile i32 %13, i32* %4, align 4, !dbg !11554
  ret void, !dbg !11565
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11566 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11568, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i32 %1, metadata !11569, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i32 %2, metadata !11570, metadata !DIExpression()), !dbg !11571
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11572
  %5 = load volatile i32, i32* %4, align 4, !dbg !11572
  call void @llvm.dbg.value(metadata i32 %1, metadata !11352, metadata !DIExpression()) #25, !dbg !11573
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11575, !srcloc !11359
  call void @llvm.dbg.value(metadata i32 %6, metadata !11355, metadata !DIExpression()) #25, !dbg !11573
  call void @llvm.dbg.value(metadata i32 %6, metadata !11360, metadata !DIExpression()) #25, !dbg !11576
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11578, !range !5482
  %8 = shl nuw nsw i32 %7, 1, !dbg !11572
  %9 = shl i32 3, %8, !dbg !11572
  %10 = xor i32 %9, -1, !dbg !11572
  %11 = and i32 %5, %10, !dbg !11572
  call void @llvm.dbg.value(metadata i32 %1, metadata !11352, metadata !DIExpression()) #25, !dbg !11579
  call void @llvm.dbg.value(metadata i32 %6, metadata !11355, metadata !DIExpression()) #25, !dbg !11579
  call void @llvm.dbg.value(metadata i32 %6, metadata !11360, metadata !DIExpression()) #25, !dbg !11581
  %12 = shl i32 %2, %8, !dbg !11572
  %13 = or i32 %11, %12, !dbg !11572
  store volatile i32 %13, i32* %4, align 4, !dbg !11572
  ret void, !dbg !11583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11584 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11586, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.value(metadata i32 %1, metadata !11587, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.value(metadata i32 %2, metadata !11588, metadata !DIExpression()), !dbg !11589
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11590
  %5 = load volatile i32, i32* %4, align 4, !dbg !11590
  call void @llvm.dbg.value(metadata i32 %1, metadata !11352, metadata !DIExpression()) #25, !dbg !11591
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11593, !srcloc !11359
  call void @llvm.dbg.value(metadata i32 %6, metadata !11355, metadata !DIExpression()) #25, !dbg !11591
  call void @llvm.dbg.value(metadata i32 %6, metadata !11360, metadata !DIExpression()) #25, !dbg !11594
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11596, !range !5482
  %8 = shl nuw nsw i32 %7, 2, !dbg !11590
  %9 = shl i32 15, %8, !dbg !11590
  %10 = xor i32 %9, -1, !dbg !11590
  %11 = and i32 %5, %10, !dbg !11590
  call void @llvm.dbg.value(metadata i32 %1, metadata !11352, metadata !DIExpression()) #25, !dbg !11597
  call void @llvm.dbg.value(metadata i32 %6, metadata !11355, metadata !DIExpression()) #25, !dbg !11597
  call void @llvm.dbg.value(metadata i32 %6, metadata !11360, metadata !DIExpression()) #25, !dbg !11599
  %12 = shl i32 %2, %8, !dbg !11590
  %13 = or i32 %11, %12, !dbg !11590
  store volatile i32 %13, i32* %4, align 4, !dbg !11590
  ret void, !dbg !11601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11602 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11604, metadata !DIExpression()), !dbg !11607
  call void @llvm.dbg.value(metadata i32 %1, metadata !11605, metadata !DIExpression()), !dbg !11607
  call void @llvm.dbg.value(metadata i32 %2, metadata !11606, metadata !DIExpression()), !dbg !11607
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11608
  %5 = load volatile i32, i32* %4, align 4, !dbg !11608
  %6 = lshr i32 %1, 8, !dbg !11608
  call void @llvm.dbg.value(metadata i32 %6, metadata !11352, metadata !DIExpression()) #25, !dbg !11609
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11611, !srcloc !11359
  call void @llvm.dbg.value(metadata i32 %7, metadata !11355, metadata !DIExpression()) #25, !dbg !11609
  call void @llvm.dbg.value(metadata i32 %7, metadata !11360, metadata !DIExpression()) #25, !dbg !11612
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11614, !range !5482
  %9 = shl nuw nsw i32 %8, 2, !dbg !11608
  %10 = shl i32 15, %9, !dbg !11608
  %11 = xor i32 %10, -1, !dbg !11608
  %12 = and i32 %5, %11, !dbg !11608
  call void @llvm.dbg.value(metadata i32 %6, metadata !11352, metadata !DIExpression()) #25, !dbg !11615
  call void @llvm.dbg.value(metadata i32 %7, metadata !11355, metadata !DIExpression()) #25, !dbg !11615
  call void @llvm.dbg.value(metadata i32 %7, metadata !11360, metadata !DIExpression()) #25, !dbg !11617
  %13 = shl i32 %2, %9, !dbg !11608
  %14 = or i32 %12, %13, !dbg !11608
  store volatile i32 %14, i32* %4, align 4, !dbg !11608
  ret void, !dbg !11619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11620 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11622, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i32 %1, metadata !11623, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i32 %2, metadata !11624, metadata !DIExpression()), !dbg !11625
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11626
  %5 = load volatile i32, i32* %4, align 4, !dbg !11626
  call void @llvm.dbg.value(metadata i32 %1, metadata !11352, metadata !DIExpression()) #25, !dbg !11627
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11629, !srcloc !11359
  call void @llvm.dbg.value(metadata i32 %6, metadata !11355, metadata !DIExpression()) #25, !dbg !11627
  call void @llvm.dbg.value(metadata i32 %6, metadata !11360, metadata !DIExpression()) #25, !dbg !11630
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11632, !range !5482
  %8 = shl nuw nsw i32 %7, 1, !dbg !11626
  %9 = shl i32 3, %8, !dbg !11626
  %10 = xor i32 %9, -1, !dbg !11626
  %11 = and i32 %5, %10, !dbg !11626
  call void @llvm.dbg.value(metadata i32 %1, metadata !11352, metadata !DIExpression()) #25, !dbg !11633
  call void @llvm.dbg.value(metadata i32 %6, metadata !11355, metadata !DIExpression()) #25, !dbg !11633
  call void @llvm.dbg.value(metadata i32 %6, metadata !11360, metadata !DIExpression()) #25, !dbg !11635
  %12 = shl i32 %2, %8, !dbg !11626
  %13 = or i32 %11, %12, !dbg !11626
  store volatile i32 %13, i32* %4, align 4, !dbg !11626
  ret void, !dbg !11637
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11638 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11640, metadata !DIExpression()), !dbg !11643
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11644
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11644
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11644
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11641, metadata !DIExpression()), !dbg !11643
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11645
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11646
  %6 = tail call fastcc zeroext i1 @device_is_ready.187() #27, !dbg !11647
  br i1 %6, label %7, label %11, !dbg !11649

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !11650
  call void @llvm.dbg.value(metadata i32 %8, metadata !11642, metadata !DIExpression()), !dbg !11643
  %9 = icmp slt i32 %8, 0, !dbg !11651
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11653
  br label %11, !dbg !11653

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11643
  ret i32 %12, !dbg !11654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.187() unnamed_addr #1 !dbg !11655 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11659, metadata !DIExpression()), !dbg !11660
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11661, !srcloc !11663
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.188() #27, !dbg !11664
  ret i1 %1, !dbg !11665
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !11666 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11670, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.value(metadata i8 1, metadata !11671, metadata !DIExpression()), !dbg !11675
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11676
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11676
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11676
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11672, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.value(metadata i32 0, metadata !11673, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11674, metadata !DIExpression()), !dbg !11675
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11677
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11680
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !11681
  call void @llvm.dbg.value(metadata i32 %7, metadata !11673, metadata !DIExpression()), !dbg !11675
  ret i32 %7, !dbg !11682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.188() unnamed_addr #1 !dbg !11683 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11685, metadata !DIExpression()), !dbg !11686
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #26, !dbg !11687
  ret i1 %1, !dbg !11688
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11689 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11693, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %1, metadata !11694, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %2, metadata !11695, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %3, metadata !11696, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 0, metadata !11697, metadata !DIExpression()), !dbg !11701
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !11702
  %5 = icmp eq i32 %3, 17, !dbg !11703
  br i1 %5, label %6, label %14, !dbg !11704

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11705
  call void @llvm.dbg.value(metadata i32 %7, metadata !11698, metadata !DIExpression()), !dbg !11706
  %8 = icmp eq i32 %7, 0, !dbg !11707
  %9 = shl nuw i32 1, %1, !dbg !11709
  br i1 %8, label %12, label %10, !dbg !11710

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !11711
  br label %14, !dbg !11713

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !11714
  br label %14, !dbg !11717

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11718
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #20 !dbg !11719 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11721, metadata !DIExpression()), !dbg !11725
  call void @llvm.dbg.value(metadata i8* %1, metadata !11722, metadata !DIExpression()), !dbg !11725
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11726
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11726
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11726
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11723, metadata !DIExpression()), !dbg !11725
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11727
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11727
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !11729
  %9 = icmp eq i32 %8, 0, !dbg !11729
  br i1 %9, label %12, label %10, !dbg !11730

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11731
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !11733
  br label %12, !dbg !11734

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11735
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !11737
  %15 = icmp eq i32 %14, 0, !dbg !11737
  br i1 %15, label %19, label %16, !dbg !11738

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11739
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !11740
  store i8 %18, i8* %1, align 1, !dbg !11741
  br label %19, !dbg !11742

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11725
  ret i32 %20, !dbg !11743
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11744 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11746, metadata !DIExpression()), !dbg !11750
  call void @llvm.dbg.value(metadata i8 %1, metadata !11747, metadata !DIExpression()), !dbg !11750
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11751
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11751
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11751
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11748, metadata !DIExpression()), !dbg !11750
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11752

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11753
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !11756
  %10 = icmp eq i32 %9, 0, !dbg !11756
  br i1 %10, label %18, label %11, !dbg !11757

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11758, !srcloc !11765
  call void @llvm.dbg.value(metadata i32 undef, metadata !11761, metadata !DIExpression()) #25, !dbg !11766
  call void @llvm.dbg.value(metadata i32 undef, metadata !11762, metadata !DIExpression()) #25, !dbg !11766
  call void @llvm.dbg.value(metadata i32 undef, metadata !11749, metadata !DIExpression()), !dbg !11750
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11767
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !11769
  %15 = icmp eq i32 %14, 0, !dbg !11769
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11758
  br i1 %15, label %17, label %19, !dbg !11770

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11761, metadata !DIExpression()) #25, !dbg !11766
  call void @llvm.dbg.value(metadata i32 %16, metadata !11749, metadata !DIExpression()), !dbg !11750
  call void @llvm.dbg.value(metadata i32 undef, metadata !11771, metadata !DIExpression()) #25, !dbg !11774
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !11776, !srcloc !11777
  br label %18, !dbg !11778

18:                                               ; preds = %17, %7
  br label %7, !dbg !11753, !llvm.loop !11779

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11758
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11781
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !11782
  call void @llvm.dbg.value(metadata i32 %20, metadata !11771, metadata !DIExpression()) #25, !dbg !11783
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !11785, !srcloc !11777
  ret void, !dbg !11786
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #20 !dbg !11787 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11789, metadata !DIExpression()), !dbg !11792
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11793
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11793
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11793
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11790, metadata !DIExpression()), !dbg !11792
  call void @llvm.dbg.value(metadata i32 0, metadata !11791, metadata !DIExpression()), !dbg !11792
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11794
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11794
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !11796
  %8 = icmp ne i32 %7, 0, !dbg !11796
  %9 = zext i1 %8 to i32, !dbg !11797
  call void @llvm.dbg.value(metadata i32 %9, metadata !11791, metadata !DIExpression()), !dbg !11792
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11798
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !11800
  %12 = icmp eq i32 %11, 0, !dbg !11800
  %13 = or i32 %9, 2, !dbg !11801
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11801
  call void @llvm.dbg.value(metadata i32 %14, metadata !11791, metadata !DIExpression()), !dbg !11792
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11802
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !11804
  %17 = icmp eq i32 %16, 0, !dbg !11804
  %18 = or i32 %14, 4, !dbg !11805
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11805
  call void @llvm.dbg.value(metadata i32 %19, metadata !11791, metadata !DIExpression()), !dbg !11792
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11806
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !11808
  %22 = icmp eq i32 %21, 0, !dbg !11808
  %23 = or i32 %19, 8, !dbg !11809
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11809
  call void @llvm.dbg.value(metadata i32 %24, metadata !11791, metadata !DIExpression()), !dbg !11792
  %25 = and i32 %24, 8, !dbg !11810
  %26 = icmp eq i32 %25, 0, !dbg !11810
  br i1 %26, label %29, label %27, !dbg !11812

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11813
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !11815
  br label %29, !dbg !11816

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11817
  %31 = icmp eq i32 %30, 0, !dbg !11817
  br i1 %31, label %34, label %32, !dbg !11819

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11820
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !11822
  br label %34, !dbg !11823

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11824
  %36 = icmp eq i32 %35, 0, !dbg !11824
  br i1 %36, label %39, label %37, !dbg !11826

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11827
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !11829
  br label %39, !dbg !11830

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11831
  %41 = icmp eq i32 %40, 0, !dbg !11831
  br i1 %41, label %44, label %42, !dbg !11833

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11834
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !11836
  br label %44, !dbg !11837

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11838
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !11839
  ret i32 %24, !dbg !11840
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11841 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11843, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11844, metadata !DIExpression()), !dbg !11852
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11853
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11853
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11853
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11845, metadata !DIExpression()), !dbg !11852
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11854
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11854
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11854
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11846, metadata !DIExpression()), !dbg !11852
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11855
  %10 = load i8, i8* %9, align 4, !dbg !11855
  %11 = zext i8 %10 to i32, !dbg !11856
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !11857
  call void @llvm.dbg.value(metadata i32 %12, metadata !11848, metadata !DIExpression()), !dbg !11852
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11858
  %14 = load i8, i8* %13, align 1, !dbg !11858
  %15 = zext i8 %14 to i32, !dbg !11859
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !11860
  call void @llvm.dbg.value(metadata i32 %16, metadata !11849, metadata !DIExpression()), !dbg !11852
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11861
  %18 = load i8, i8* %17, align 2, !dbg !11861
  %19 = zext i8 %18 to i32, !dbg !11862
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !11863
  call void @llvm.dbg.value(metadata i32 %20, metadata !11850, metadata !DIExpression()), !dbg !11852
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11864
  %22 = load i8, i8* %21, align 1, !dbg !11864
  %23 = zext i8 %22 to i32, !dbg !11865
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !11866
  call void @llvm.dbg.value(metadata i32 %24, metadata !11851, metadata !DIExpression()), !dbg !11852
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11867

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11869
  br i1 %26, label %69, label %27, !dbg !11871

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11872

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11873
  br i1 %29, label %65, label %30, !dbg !11873

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11875
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11852
  br i1 %31, label %38, label %34, !dbg !11877

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11878
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !11878

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11881
  br i1 %37, label %38, label %69, !dbg !11882

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11883
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !11884
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !11885
  %41 = icmp eq i32 %12, %40, !dbg !11887
  br i1 %41, label %43, label %42, !dbg !11888

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !11889
  br label %43, !dbg !11891

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !11892
  %45 = icmp eq i32 %16, %44, !dbg !11894
  br i1 %45, label %47, label %46, !dbg !11895

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !11896
  br label %47, !dbg !11898

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !11899
  %49 = icmp eq i32 %20, %48, !dbg !11901
  br i1 %49, label %51, label %50, !dbg !11902

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !11903
  br label %51, !dbg !11905

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !11906
  %53 = icmp eq i32 %24, %52, !dbg !11908
  br i1 %53, label %55, label %54, !dbg !11909

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !11910
  br label %55, !dbg !11912

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11913
  %57 = load i32, i32* %56, align 4, !dbg !11913
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11915
  %59 = load i32, i32* %58, align 4, !dbg !11915
  %60 = icmp eq i32 %57, %59, !dbg !11916
  br i1 %60, label %63, label %61, !dbg !11917

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !11918
  %62 = load i32, i32* %56, align 4, !dbg !11920
  store i32 %62, i32* %58, align 4, !dbg !11921
  br label %63, !dbg !11922

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11923
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !11924
  br label %69, !dbg !11925

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11873
  %67 = and i8 %66, 1, !dbg !11873
  %68 = icmp eq i8 %67, 0, !dbg !11873
  br i1 %68, label %30, label %69, !dbg !11873

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11852
  ret i32 %70, !dbg !11926
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !11927 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11929, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11930, metadata !DIExpression()), !dbg !11932
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11933
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11933
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11933
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11931, metadata !DIExpression()), !dbg !11932
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11934
  %7 = load i32, i32* %6, align 4, !dbg !11934
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11935
  store i32 %7, i32* %8, align 4, !dbg !11936
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !11937, !range !11938
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !11939
  %11 = trunc i32 %10 to i8, !dbg !11939
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11940
  store i8 %11, i8* %12, align 4, !dbg !11941
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !11942, !range !11943
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !11944
  %15 = trunc i32 %14 to i8, !dbg !11944
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11945
  store i8 %15, i8* %16, align 1, !dbg !11946
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !11947
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !11948, !range !11938
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !11949
  %20 = trunc i32 %19 to i8, !dbg !11949
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11950
  store i8 %20, i8* %21, align 2, !dbg !11951
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !11952, !range !11953
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !11954
  %24 = trunc i32 %23 to i8, !dbg !11954
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11955
  store i8 %24, i8* %25, align 1, !dbg !11956
  ret i32 0, !dbg !11957
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11958 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11962, metadata !DIExpression()), !dbg !11964
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11965
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11965
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11965
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11963, metadata !DIExpression()), !dbg !11964
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11966
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11966
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !11967
  ret i32 %7, !dbg !11968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !11969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11973, metadata !DIExpression()), !dbg !11974
  %2 = icmp eq i32 %0, 1024, !dbg !11975
  %3 = select i1 %2, i32 2, i32 0, !dbg !11975
  %4 = icmp eq i32 %0, 1536, !dbg !11975
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11975
  ret i32 %5, !dbg !11976
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11977 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11979, metadata !DIExpression()), !dbg !11981
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11982
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11982
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11982
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11980, metadata !DIExpression()), !dbg !11981
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11983
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11983
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !11984
  ret i32 %7, !dbg !11985
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11990, metadata !DIExpression()), !dbg !11991
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11992
  %3 = icmp ult i32 %2, 4, !dbg !11992
  br i1 %3, label %4, label %7, !dbg !11992

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11992
  %6 = load i32, i32* %5, align 4, !dbg !11992
  br label %7, !dbg !11992

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11993
  ret i32 %8, !dbg !11995
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11996 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11998, metadata !DIExpression()), !dbg !12000
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12001
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12001
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12001
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11999, metadata !DIExpression()), !dbg !12000
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12002
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12002
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !12003
  ret i32 %7, !dbg !12004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !12005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12009, metadata !DIExpression()), !dbg !12011
  call void @llvm.dbg.value(metadata i32 %1, metadata !12010, metadata !DIExpression()), !dbg !12011
  %3 = icmp eq i32 %0, 4096, !dbg !12012
  %4 = icmp eq i32 %1, 0, !dbg !12012
  %5 = select i1 %4, i32 4, i32 3, !dbg !12012
  %6 = select i1 %4, i32 3, i32 2, !dbg !12012
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !12012
  ret i32 %7, !dbg !12013
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12014 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12016, metadata !DIExpression()), !dbg !12018
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12019
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12019
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12019
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12017, metadata !DIExpression()), !dbg !12018
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12020
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12020
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !12021
  ret i32 %7, !dbg !12022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !12023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12027, metadata !DIExpression()), !dbg !12028
  %2 = icmp eq i32 %0, 768, !dbg !12029
  %3 = zext i1 %2 to i32, !dbg !12028
  ret i32 %3, !dbg !12031
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12032 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12037, metadata !DIExpression()), !dbg !12038
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12039
  %3 = load volatile i32, i32* %2, align 4, !dbg !12039
  %4 = and i32 %3, 768, !dbg !12039
  ret i32 %4, !dbg !12040
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12041 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12043, metadata !DIExpression()), !dbg !12044
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12045
  %3 = load volatile i32, i32* %2, align 4, !dbg !12045
  %4 = and i32 %3, 4096, !dbg !12045
  ret i32 %4, !dbg !12046
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12047 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12049, metadata !DIExpression()), !dbg !12050
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12051
  %3 = load volatile i32, i32* %2, align 4, !dbg !12051
  %4 = and i32 %3, 12288, !dbg !12051
  ret i32 %4, !dbg !12052
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12053 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12055, metadata !DIExpression()), !dbg !12056
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12057
  %3 = load volatile i32, i32* %2, align 4, !dbg !12057
  %4 = and i32 %3, 1536, !dbg !12057
  ret i32 %4, !dbg !12058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !12059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12063, metadata !DIExpression()), !dbg !12064
  %2 = icmp eq i32 %0, 2, !dbg !12065
  %3 = select i1 %2, i32 1024, i32 0, !dbg !12065
  %4 = icmp eq i32 %0, 1, !dbg !12065
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !12065
  ret i32 %5, !dbg !12066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !12067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12071, metadata !DIExpression()), !dbg !12072
  %2 = icmp ult i32 %0, 3, !dbg !12073
  br i1 %2, label %3, label %6, !dbg !12073

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !12073
  %5 = load i32, i32* %4, align 4, !dbg !12073
  br label %6, !dbg !12073

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !12074
  ret i32 %7, !dbg !12076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !12077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12081, metadata !DIExpression()), !dbg !12083
  call void @llvm.dbg.value(metadata i32 %1, metadata !12082, metadata !DIExpression()), !dbg !12083
  %3 = icmp eq i32 %0, 4, !dbg !12084
  %4 = icmp eq i32 %1, 0, !dbg !12084
  %5 = select i1 %4, i32 0, i32 4096, !dbg !12084
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !12084
  ret i32 %6, !dbg !12085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !12086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12090, metadata !DIExpression()), !dbg !12091
  %2 = icmp eq i32 %0, 1, !dbg !12092
  %3 = select i1 %2, i32 768, i32 0, !dbg !12091
  ret i32 %3, !dbg !12094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12095 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12099, metadata !DIExpression()), !dbg !12100
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12101
  %3 = load volatile i32, i32* %2, align 4, !dbg !12101
  %4 = and i32 %3, -8193, !dbg !12101
  store volatile i32 %4, i32* %2, align 4, !dbg !12101
  ret void, !dbg !12102
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12103 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12107, metadata !DIExpression()), !dbg !12110
  call void @llvm.dbg.value(metadata i32 %1, metadata !12108, metadata !DIExpression()), !dbg !12110
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12111
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12111
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12111
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12109, metadata !DIExpression()), !dbg !12110
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12112
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12112
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12113
  ret void, !dbg !12114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12115 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12117, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata i32 %1, metadata !12118, metadata !DIExpression()), !dbg !12120
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12121
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12121
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12121
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12119, metadata !DIExpression()), !dbg !12120
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12122
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12122
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12123
  ret void, !dbg !12124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12125 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12127, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.value(metadata i32 %1, metadata !12128, metadata !DIExpression()), !dbg !12130
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12131
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12131
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12131
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12129, metadata !DIExpression()), !dbg !12130
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12132
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12132
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12133
  ret void, !dbg !12134
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12135 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12137, metadata !DIExpression()), !dbg !12140
  call void @llvm.dbg.value(metadata i32 %1, metadata !12138, metadata !DIExpression()), !dbg !12140
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12141
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12141
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12141
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12139, metadata !DIExpression()), !dbg !12140
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12142
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12142
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12143
  ret void, !dbg !12144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !12145 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12147, metadata !DIExpression()), !dbg !12152
  call void @llvm.dbg.value(metadata i32 %1, metadata !12148, metadata !DIExpression()), !dbg !12152
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12153
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !12153
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !12153
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !12149, metadata !DIExpression()), !dbg !12152
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12154
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !12154
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !12154
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !12150, metadata !DIExpression()), !dbg !12152
  %10 = bitcast i32* %3 to i8*, !dbg !12155
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12155
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !12156
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !12156
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !12160
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !12160
  %15 = load i8*, i8** %14, align 4, !dbg !12160
  call void @llvm.dbg.value(metadata i32* %3, metadata !12151, metadata !DIExpression(DW_OP_deref)), !dbg !12152
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !12161
  %17 = icmp slt i32 %16, 0, !dbg !12162
  br i1 %17, label %18, label %21, !dbg !12163

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.193(i32 noundef 1) #27, !dbg !12164
  %20 = zext i8 %19 to i32, !dbg !12164
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef %20) #26, !dbg !12164
  br label %31, !dbg !12170

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !12171
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12171
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #27, !dbg !12172
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12173
  %25 = load i32, i32* %3, align 4, !dbg !12174
  call void @llvm.dbg.value(metadata i32 %25, metadata !12151, metadata !DIExpression()), !dbg !12152
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #27, !dbg !12175
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12176
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !12176
  %28 = load volatile i32, i32* %27, align 4, !dbg !12176
  %29 = icmp ugt i32 %28, 16, !dbg !12176
  br i1 %29, label %31, label %30, !dbg !12179

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.195, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.196, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.197, i32 0, i32 0), i32 noundef 190) #26, !dbg !12180
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.198, i32 0, i32 0)) #26, !dbg !12180
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.197, i32 0, i32 0), i32 noundef 190) #26, !dbg !12180
  unreachable, !dbg !12180

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12182
  ret void, !dbg !12182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12183 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12185, metadata !DIExpression()), !dbg !12186
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12187
  %3 = load volatile i32, i32* %2, align 4, !dbg !12187
  %4 = or i32 %3, 8192, !dbg !12187
  store volatile i32 %4, i32* %2, align 4, !dbg !12187
  ret void, !dbg !12188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !12189 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12191, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i8* %1, metadata !12192, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32* %2, metadata !12193, metadata !DIExpression()), !dbg !12195
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12196
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !12196
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !12196
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !12194, metadata !DIExpression()), !dbg !12195
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !12197
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !12197
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !12199
  br i1 %9, label %12, label %10, !dbg !12200

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !12201
  br label %12, !dbg !12202

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !12195
  ret i32 %13, !dbg !12203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.193(i32 noundef %0) unnamed_addr #4 !dbg !12204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12206, metadata !DIExpression()), !dbg !12207
  %2 = icmp eq i32 %0, 2, !dbg !12208
  %3 = select i1 %2, i8 87, i8 63, !dbg !12208
  %4 = icmp eq i32 %0, 1, !dbg !12208
  %5 = select i1 %4, i8 69, i8 %3, !dbg !12208
  ret i8 %5, !dbg !12209
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12210 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12214, metadata !DIExpression()), !dbg !12216
  call void @llvm.dbg.value(metadata i32 0, metadata !12215, metadata !DIExpression()), !dbg !12216
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12217
  %3 = load volatile i32, i32* %2, align 4, !dbg !12217
  %4 = and i32 %3, -32769, !dbg !12217
  store volatile i32 %4, i32* %2, align 4, !dbg !12217
  ret void, !dbg !12218
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !12219 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12223, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.value(metadata i32 %1, metadata !12224, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.value(metadata i32 0, metadata !12225, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.value(metadata i32 %2, metadata !12226, metadata !DIExpression()), !dbg !12227
  %4 = zext i32 %1 to i64, !dbg !12228
  %5 = mul nuw nsw i64 %4, 25, !dbg !12228
  %6 = zext i32 %2 to i64, !dbg !12228
  %7 = shl nuw nsw i64 %6, 2, !dbg !12228
  %8 = udiv i64 %5, %7, !dbg !12228
  %9 = trunc i64 %8 to i32, !dbg !12228
  %10 = udiv i32 %9, 100, !dbg !12228
  %11 = shl nuw nsw i32 %10, 4, !dbg !12228
  %12 = mul i32 %10, -100, !dbg !12228
  %13 = add i32 %12, %9, !dbg !12228
  %14 = shl i32 %13, 4, !dbg !12228
  %15 = add i32 %14, 50, !dbg !12228
  %16 = udiv i32 %15, 100, !dbg !12228
  %17 = and i32 %16, 240, !dbg !12228
  %18 = add nuw nsw i32 %17, %11, !dbg !12228
  %19 = and i32 %16, 15, !dbg !12228
  %20 = and i32 %18, 65520, !dbg !12231
  %21 = or i32 %20, %19, !dbg !12231
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12232
  store volatile i32 %21, i32* %22, align 4, !dbg !12233
  ret void, !dbg !12234
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12235 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12237, metadata !DIExpression()), !dbg !12239
  call void @llvm.dbg.value(metadata i32 %1, metadata !12238, metadata !DIExpression()), !dbg !12239
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12240
  %4 = load volatile i32, i32* %3, align 4, !dbg !12240
  %5 = and i32 %4, -769, !dbg !12240
  %6 = or i32 %5, %1, !dbg !12240
  store volatile i32 %6, i32* %3, align 4, !dbg !12240
  ret void, !dbg !12241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12242 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12244, metadata !DIExpression()), !dbg !12246
  call void @llvm.dbg.value(metadata i32 %1, metadata !12245, metadata !DIExpression()), !dbg !12246
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12247
  %4 = load volatile i32, i32* %3, align 4, !dbg !12247
  %5 = and i32 %4, -4097, !dbg !12247
  %6 = or i32 %5, %1, !dbg !12247
  store volatile i32 %6, i32* %3, align 4, !dbg !12247
  ret void, !dbg !12248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12249 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12251, metadata !DIExpression()), !dbg !12253
  call void @llvm.dbg.value(metadata i32 %1, metadata !12252, metadata !DIExpression()), !dbg !12253
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12254
  %4 = load volatile i32, i32* %3, align 4, !dbg !12254
  %5 = and i32 %4, -12289, !dbg !12254
  %6 = or i32 %5, %1, !dbg !12254
  store volatile i32 %6, i32* %3, align 4, !dbg !12254
  ret void, !dbg !12255
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12256 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12258, metadata !DIExpression()), !dbg !12260
  call void @llvm.dbg.value(metadata i32 %1, metadata !12259, metadata !DIExpression()), !dbg !12260
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12261
  %4 = load volatile i32, i32* %3, align 4, !dbg !12261
  %5 = and i32 %4, -1537, !dbg !12261
  %6 = or i32 %5, %1, !dbg !12261
  store volatile i32 %6, i32* %3, align 4, !dbg !12261
  ret void, !dbg !12262
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12263 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12265, metadata !DIExpression()), !dbg !12266
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12267
  %3 = load volatile i32, i32* %2, align 4, !dbg !12267
  %4 = lshr i32 %3, 3, !dbg !12268
  %5 = and i32 %4, 1, !dbg !12268
  ret i32 %5, !dbg !12269
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12270 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12272, metadata !DIExpression()), !dbg !12273
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12274
  %3 = load volatile i32, i32* %2, align 4, !dbg !12274
  %4 = and i32 %3, 1, !dbg !12274
  ret i32 %4, !dbg !12275
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12276 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12278, metadata !DIExpression()), !dbg !12279
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12280
  %3 = load volatile i32, i32* %2, align 4, !dbg !12280
  %4 = lshr i32 %3, 1, !dbg !12281
  %5 = and i32 %4, 1, !dbg !12281
  ret i32 %5, !dbg !12282
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12283 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12285, metadata !DIExpression()), !dbg !12286
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12287
  %3 = load volatile i32, i32* %2, align 4, !dbg !12287
  %4 = lshr i32 %3, 8, !dbg !12288
  %5 = and i32 %4, 1, !dbg !12288
  ret i32 %5, !dbg !12289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12290 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12292, metadata !DIExpression()), !dbg !12293
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12294
  store volatile i32 -257, i32* %2, align 4, !dbg !12294
  ret void, !dbg !12295
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !12296 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12298, metadata !DIExpression()), !dbg !12300
  %3 = bitcast i32* %2 to i8*, !dbg !12301
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12301
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12299, metadata !DIExpression()), !dbg !12302
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12303
  %5 = load volatile i32, i32* %4, align 4, !dbg !12303
  store volatile i32 %5, i32* %2, align 4, !dbg !12304
  %6 = load volatile i32, i32* %2, align 4, !dbg !12305
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12306
  %8 = load volatile i32, i32* %7, align 4, !dbg !12306
  store volatile i32 %8, i32* %2, align 4, !dbg !12307
  %9 = load volatile i32, i32* %2, align 4, !dbg !12308
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12309
  ret void, !dbg !12309
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !12310 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12312, metadata !DIExpression()), !dbg !12314
  %3 = bitcast i32* %2 to i8*, !dbg !12315
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12315
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12313, metadata !DIExpression()), !dbg !12316
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12317
  %5 = load volatile i32, i32* %4, align 4, !dbg !12317
  store volatile i32 %5, i32* %2, align 4, !dbg !12318
  %6 = load volatile i32, i32* %2, align 4, !dbg !12319
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12320
  %8 = load volatile i32, i32* %7, align 4, !dbg !12320
  store volatile i32 %8, i32* %2, align 4, !dbg !12321
  %9 = load volatile i32, i32* %2, align 4, !dbg !12322
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12323
  ret void, !dbg !12323
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !12324 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12326, metadata !DIExpression()), !dbg !12328
  %3 = bitcast i32* %2 to i8*, !dbg !12329
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12329
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12327, metadata !DIExpression()), !dbg !12330
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12331
  %5 = load volatile i32, i32* %4, align 4, !dbg !12331
  store volatile i32 %5, i32* %2, align 4, !dbg !12332
  %6 = load volatile i32, i32* %2, align 4, !dbg !12333
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12334
  %8 = load volatile i32, i32* %7, align 4, !dbg !12334
  store volatile i32 %8, i32* %2, align 4, !dbg !12335
  %9 = load volatile i32, i32* %2, align 4, !dbg !12336
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12337
  ret void, !dbg !12337
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !12338 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12340, metadata !DIExpression()), !dbg !12342
  %3 = bitcast i32* %2 to i8*, !dbg !12343
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12343
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12341, metadata !DIExpression()), !dbg !12344
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12345
  %5 = load volatile i32, i32* %4, align 4, !dbg !12345
  store volatile i32 %5, i32* %2, align 4, !dbg !12346
  %6 = load volatile i32, i32* %2, align 4, !dbg !12347
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12348
  %8 = load volatile i32, i32* %7, align 4, !dbg !12348
  store volatile i32 %8, i32* %2, align 4, !dbg !12349
  %9 = load volatile i32, i32* %2, align 4, !dbg !12350
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12351
  ret void, !dbg !12351
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12352 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12354, metadata !DIExpression()), !dbg !12355
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12356
  %3 = load volatile i32, i32* %2, align 4, !dbg !12356
  %4 = lshr i32 %3, 7, !dbg !12357
  %5 = and i32 %4, 1, !dbg !12357
  ret i32 %5, !dbg !12358
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !12359 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12363, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.value(metadata i8 %1, metadata !12364, metadata !DIExpression()), !dbg !12365
  %3 = zext i8 %1 to i32, !dbg !12366
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12367
  store volatile i32 %3, i32* %4, align 4, !dbg !12368
  ret void, !dbg !12369
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12370 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12372, metadata !DIExpression()), !dbg !12373
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12374
  %3 = load volatile i32, i32* %2, align 4, !dbg !12374
  %4 = lshr i32 %3, 5, !dbg !12375
  %5 = and i32 %4, 1, !dbg !12375
  ret i32 %5, !dbg !12376
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12377 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12381, metadata !DIExpression()), !dbg !12382
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12383
  %3 = load volatile i32, i32* %2, align 4, !dbg !12383
  %4 = trunc i32 %3 to i8, !dbg !12384
  ret i8 %4, !dbg !12385
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !12386 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12388, metadata !DIExpression()), !dbg !12394
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12395
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12395
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12395
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12389, metadata !DIExpression()), !dbg !12394
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12396
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !12396
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !12396
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !12390, metadata !DIExpression()), !dbg !12394
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !12397
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !12398
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !12398
  %10 = tail call fastcc zeroext i1 @device_is_ready.200(%struct.device* noundef %9) #27, !dbg !12400
  br i1 %10, label %14, label %11, !dbg !12401

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.193(i32 noundef 1) #27, !dbg !12402
  %13 = zext i8 %12 to i32, !dbg !12402
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.201, i32 0, i32 0), i32 noundef %13) #26, !dbg !12402
  br label %62, !dbg !12408

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !12409
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !12410
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !12410
  %18 = load i8*, i8** %17, align 4, !dbg !12410
  %19 = tail call fastcc i32 @clock_control_on.202(%struct.device* noundef %15, i8* noundef %18) #27, !dbg !12411
  call void @llvm.dbg.value(metadata i32 %19, metadata !12393, metadata !DIExpression()), !dbg !12394
  %20 = icmp eq i32 %19, 0, !dbg !12412
  br i1 %20, label %24, label %21, !dbg !12414

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.193(i32 noundef 1) #27, !dbg !12415
  %23 = zext i8 %22 to i32, !dbg !12415
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.203, i32 0, i32 0), i32 noundef %23) #26, !dbg !12415
  br label %62, !dbg !12421

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !12422
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !12422
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #27, !dbg !12423
  call void @llvm.dbg.value(metadata i32 %27, metadata !12393, metadata !DIExpression()), !dbg !12394
  %28 = icmp slt i32 %27, 0, !dbg !12424
  br i1 %28, label %62, label %29, !dbg !12426

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12427
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12427
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #27, !dbg !12428
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12429
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #27, !dbg !12430
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !12431
  %34 = load i32, i32* %33, align 4, !dbg !12431
  %35 = icmp ult i32 %34, 3, !dbg !12433
  br i1 %35, label %39, label %36, !dbg !12433

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.193(i32 noundef 2) #27, !dbg !12434
  %38 = zext i8 %37 to i32, !dbg !12434
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.204, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #26, !dbg !12434
  call void @llvm.dbg.value(metadata i32 0, metadata !12391, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.value(metadata i32 0, metadata !12392, metadata !DIExpression()), !dbg !12394
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !12433
  %41 = load i32, i32* %40, align 4, !dbg !12433
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !12433
  %43 = load i32, i32* %42, align 4, !dbg !12433
  br label %44, !dbg !12433

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !12443
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !12443
  call void @llvm.dbg.value(metadata i32 %46, metadata !12392, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.value(metadata i32 %45, metadata !12391, metadata !DIExpression()), !dbg !12394
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12444
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #27, !dbg !12445
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !12446
  %49 = load i8, i8* %48, align 4, !dbg !12446, !range !8224
  %50 = icmp eq i8 %49, 0, !dbg !12446
  br i1 %50, label %52, label %51, !dbg !12448

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !12449
  br label %52, !dbg !12451

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !12452
  %54 = load i32, i32* %53, align 4, !dbg !12452
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #27, !dbg !12453
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !12454
  %56 = load i8, i8* %55, align 4, !dbg !12454, !range !8224
  %57 = icmp eq i8 %56, 0, !dbg !12454
  br i1 %57, label %60, label %58, !dbg !12456

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12457
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #27, !dbg !12459
  br label %60, !dbg !12460

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12461
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #27, !dbg !12462
  br label %62, !dbg !12463

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !12394
  ret i32 %63, !dbg !12464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !12465 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12469, metadata !DIExpression()), !dbg !12473
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12474
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !12474
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !12474
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !12470, metadata !DIExpression()), !dbg !12473
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !12471, metadata !DIExpression()), !dbg !12473
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !12475
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !12476
  ret void, !dbg !12477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.200(%struct.device* noundef %0) unnamed_addr #1 !dbg !12478 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12482, metadata !DIExpression()), !dbg !12483
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12484, !srcloc !12486
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.205(%struct.device* noundef %0) #27, !dbg !12487
  ret i1 %2, !dbg !12488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.202(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12489 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12491, metadata !DIExpression()), !dbg !12494
  call void @llvm.dbg.value(metadata i8* %1, metadata !12492, metadata !DIExpression()), !dbg !12494
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12495
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12495
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12495
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12493, metadata !DIExpression()), !dbg !12494
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12496
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12496
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !12497
  ret i32 %8, !dbg !12498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12499 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12503, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata i8 0, metadata !12504, metadata !DIExpression()), !dbg !12507
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12508
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12508
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12506, metadata !DIExpression(DW_OP_deref)), !dbg !12507
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !12509
  call void @llvm.dbg.value(metadata i32 %4, metadata !12505, metadata !DIExpression()), !dbg !12507
  %5 = icmp slt i32 %4, 0, !dbg !12510
  br i1 %5, label %9, label %6, !dbg !12512

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12513
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12506, metadata !DIExpression()), !dbg !12507
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !12514
  br label %9, !dbg !12515

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12507
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12516
  ret i32 %10, !dbg !12516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !12517 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12519, metadata !DIExpression()), !dbg !12523
  call void @llvm.dbg.value(metadata i32 12, metadata !12520, metadata !DIExpression()), !dbg !12523
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !12524

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !12525, metadata !DIExpression()) #25, !dbg !12531
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !12534, !srcloc !12535
  call void @llvm.dbg.value(metadata i32 %4, metadata !12530, metadata !DIExpression()) #25, !dbg !12531
  %5 = or i32 %4, 12, !dbg !12536
  call void @llvm.dbg.value(metadata i32 %5, metadata !12521, metadata !DIExpression()), !dbg !12537
  call void @llvm.dbg.value(metadata i32 %5, metadata !12538, metadata !DIExpression()) #25, !dbg !12545
  call void @llvm.dbg.value(metadata i32* %2, metadata !12543, metadata !DIExpression()) #25, !dbg !12545
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !12547, !srcloc !12548
  call void @llvm.dbg.value(metadata i32 %6, metadata !12544, metadata !DIExpression()) #25, !dbg !12545
  %7 = icmp eq i32 %6, 0, !dbg !12524
  br i1 %7, label %8, label %3, !dbg !12536, !llvm.loop !12549

8:                                                ; preds = %3
  ret void, !dbg !12550
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !12551 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12553, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.value(metadata i32 %1, metadata !12554, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.value(metadata i32 %2, metadata !12555, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.value(metadata i32 0, metadata !12556, metadata !DIExpression()), !dbg !12557
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12558
  %5 = load volatile i32, i32* %4, align 4, !dbg !12558
  %6 = and i32 %5, -5633, !dbg !12558
  %7 = or i32 %2, %1, !dbg !12558
  %8 = or i32 %7, %6, !dbg !12558
  store volatile i32 %8, i32* %4, align 4, !dbg !12558
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12559
  %10 = load volatile i32, i32* %9, align 4, !dbg !12559
  %11 = and i32 %10, -12289, !dbg !12559
  store volatile i32 %11, i32* %9, align 4, !dbg !12559
  ret void, !dbg !12560
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12561 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12563, metadata !DIExpression()), !dbg !12564
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12565
  %3 = load volatile i32, i32* %2, align 4, !dbg !12565
  %4 = or i32 %3, 8, !dbg !12565
  store volatile i32 %4, i32* %2, align 4, !dbg !12565
  ret void, !dbg !12566
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12567 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12571, metadata !DIExpression()), !dbg !12574
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12572, metadata !DIExpression()), !dbg !12574
  call void @llvm.dbg.value(metadata i32 0, metadata !12573, metadata !DIExpression()), !dbg !12574
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12575
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12575
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12576
  %5 = load i8, i8* %4, align 4, !dbg !12576
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !12577
  ret i32 %6, !dbg !12578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.205(%struct.device* noundef %0) unnamed_addr #1 !dbg !12579 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12581, metadata !DIExpression()), !dbg !12582
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !12583
  ret i1 %2, !dbg !12584
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !12585 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12587, metadata !DIExpression()), !dbg !12588
  tail call fastcc void @__NVIC_SetPriority.207() #27, !dbg !12589
  store i32 16799, i32* @last_load, align 4, !dbg !12590
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12591
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12592
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12593
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12594
  %3 = or i32 %2, 7, !dbg !12594
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12594
  ret i32 0, !dbg !12595
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.207() unnamed_addr #16 !dbg !12596 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12598, metadata !DIExpression()), !dbg !12600
  call void @llvm.dbg.value(metadata i32 1, metadata !12599, metadata !DIExpression()), !dbg !12600
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12601
  ret void, !dbg !12604
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12605 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12607, metadata !DIExpression()), !dbg !12609
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !12610
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12611
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12612
  %5 = add i32 %4, %3, !dbg !12612
  store i32 %5, i32* @cycle_count, align 4, !dbg !12612
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12613
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12614
  %7 = sub i32 %5, %6, !dbg !12617
  %8 = udiv i32 %7, 16800, !dbg !12618
  call void @llvm.dbg.value(metadata i32 %8, metadata !12608, metadata !DIExpression()), !dbg !12609
  %9 = mul nuw i32 %8, 16800, !dbg !12619
  %10 = add i32 %9, %6, !dbg !12620
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12620
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !12621
  tail call void @z_arm_int_exit() #26, !dbg !12622
  ret void, !dbg !12623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !12624 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12629
  call void @llvm.dbg.value(metadata i32 %1, metadata !12626, metadata !DIExpression()), !dbg !12630
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12631
  call void @llvm.dbg.value(metadata i32 %2, metadata !12627, metadata !DIExpression()), !dbg !12630
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12632
  call void @llvm.dbg.value(metadata i32 %3, metadata !12628, metadata !DIExpression()), !dbg !12630
  %4 = and i32 %2, 65536, !dbg !12633
  %5 = icmp ne i32 %4, 0, !dbg !12633
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12635
  %8 = load i32, i32* @last_load, align 4, !dbg !12630
  br i1 %7, label %9, label %13, !dbg !12635

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12636
  %11 = add i32 %10, %8, !dbg !12636
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12636
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12638
  br label %13, !dbg !12639

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12640
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12641
  %16 = add i32 %14, %15, !dbg !12642
  ret i32 %16, !dbg !12643
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12648, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.value(metadata i1 %1, metadata !12649, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12661
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12662
  br i1 %4, label %5, label %8, !dbg !12662

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12664
  %7 = and i32 %6, -2, !dbg !12664
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12664
  store i32 -16777216, i32* @last_load, align 4, !dbg !12666
  br label %60, !dbg !12667

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12668
  call void @llvm.dbg.value(metadata i32 %9, metadata !12653, metadata !DIExpression()), !dbg !12661
  br i1 %3, label %18, label %10, !dbg !12669

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12669
  call void @llvm.dbg.value(metadata i32 undef, metadata !12648, metadata !DIExpression()), !dbg !12661
  %12 = icmp slt i32 %11, 1, !dbg !12670
  br i1 %12, label %18, label %13, !dbg !12670

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !12670
  %15 = select i1 %14, i32 %11, i32 997, !dbg !12670
  %16 = mul nuw nsw i32 %15, 16800, !dbg !12670
  %17 = add nuw nsw i32 %16, 16799, !dbg !12670
  br label %18, !dbg !12670

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12648, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12671, metadata !DIExpression()) #25, !dbg !12678
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12680, !srcloc !12686
  call void @llvm.dbg.value(metadata i32 undef, metadata !12683, metadata !DIExpression()) #25, !dbg !12687
  call void @llvm.dbg.value(metadata i32 undef, metadata !12684, metadata !DIExpression()) #25, !dbg !12687
  call void @llvm.dbg.value(metadata i32 undef, metadata !12677, metadata !DIExpression()) #25, !dbg !12678
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12688
  br i1 %21, label %23, label %22, !dbg !12691

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.208, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.209, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 148) #26, !dbg !12692
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.211, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12692
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 148) #26, !dbg !12692
  unreachable, !dbg !12692

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !12680
  call void @llvm.dbg.value(metadata i32 %24, metadata !12683, metadata !DIExpression()) #25, !dbg !12687
  call void @llvm.dbg.value(metadata i32 %24, metadata !12677, metadata !DIExpression()) #25, !dbg !12678
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12694
  call void @llvm.dbg.value(metadata i32 %24, metadata !12654, metadata !DIExpression()), !dbg !12661
  %25 = tail call fastcc i32 @elapsed() #27, !dbg !12695
  call void @llvm.dbg.value(metadata i32 %25, metadata !12659, metadata !DIExpression()), !dbg !12661
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12696
  call void @llvm.dbg.value(metadata i32 %26, metadata !12651, metadata !DIExpression()), !dbg !12661
  %27 = load i32, i32* @cycle_count, align 4, !dbg !12697
  %28 = add i32 %27, %25, !dbg !12697
  store i32 %28, i32* @cycle_count, align 4, !dbg !12697
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12698
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !12699
  %30 = sub i32 %28, %29, !dbg !12700
  call void @llvm.dbg.value(metadata i32 %30, metadata !12660, metadata !DIExpression()), !dbg !12661
  %31 = icmp slt i32 %30, 0, !dbg !12701
  br i1 %31, label %41, label %32, !dbg !12703

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !12650, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.value(metadata i32 undef, metadata !12650, metadata !DIExpression()), !dbg !12661
  %33 = add nuw i32 %19, %30, !dbg !12704
  %34 = urem i32 %33, 16800, !dbg !12706
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !12650, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12661
  %35 = sub nuw nsw i32 %19, %34, !dbg !12707
  call void @llvm.dbg.value(metadata i32 %35, metadata !12650, metadata !DIExpression()), !dbg !12661
  %36 = icmp ugt i32 %35, 1050, !dbg !12708
  br i1 %36, label %37, label %39, !dbg !12708

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !12650, metadata !DIExpression()), !dbg !12661
  %38 = icmp ugt i32 %35, 16749600, !dbg !12709
  br i1 %38, label %41, label %39, !dbg !12711

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1050, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1050, %23 ], [ 16749600, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !12712
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12713
  call void @llvm.dbg.value(metadata i32 %43, metadata !12652, metadata !DIExpression()), !dbg !12661
  %44 = add nsw i32 %42, -1, !dbg !12714
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12715
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12716
  %45 = icmp ult i32 %26, %43, !dbg !12717
  br i1 %45, label %46, label %51, !dbg !12719

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !12720
  %48 = add i32 %26, %9, !dbg !12722
  %49 = sub i32 %48, %43, !dbg !12723
  %50 = add i32 %49, %47, !dbg !12720
  br label %55, !dbg !12724

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !12725
  %53 = load i32, i32* @cycle_count, align 4, !dbg !12727
  %54 = add i32 %52, %53, !dbg !12727
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !12728
  store i32 %56, i32* @cycle_count, align 4, !dbg !12728
  call void @llvm.dbg.value(metadata i32 undef, metadata !12729, metadata !DIExpression()) #25, !dbg !12735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12734, metadata !DIExpression()) #25, !dbg !12735
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12737
  br i1 %57, label %59, label %58, !dbg !12740

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.208, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.212, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 194) #26, !dbg !12741
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.213, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12741
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 194) #26, !dbg !12741
  unreachable, !dbg !12741

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !12729, metadata !DIExpression()) #25, !dbg !12735
  call void @llvm.dbg.value(metadata i32 %24, metadata !12743, metadata !DIExpression()) #25, !dbg !12746
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !12748, !srcloc !12749
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !12750
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12751 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12671, metadata !DIExpression()) #25, !dbg !12755
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12757, !srcloc !12686
  call void @llvm.dbg.value(metadata i32 undef, metadata !12683, metadata !DIExpression()) #25, !dbg !12759
  call void @llvm.dbg.value(metadata i32 undef, metadata !12684, metadata !DIExpression()) #25, !dbg !12759
  call void @llvm.dbg.value(metadata i32 undef, metadata !12677, metadata !DIExpression()) #25, !dbg !12755
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12760
  br i1 %2, label %4, label %3, !dbg !12761

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.208, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.209, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 148) #26, !dbg !12762
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.211, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12762
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 148) #26, !dbg !12762
  unreachable, !dbg !12762

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12683, metadata !DIExpression()) #25, !dbg !12759
  call void @llvm.dbg.value(metadata i32 undef, metadata !12677, metadata !DIExpression()) #25, !dbg !12755
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12763
  call void @llvm.dbg.value(metadata i32 undef, metadata !12753, metadata !DIExpression()), !dbg !12764
  %5 = tail call fastcc i32 @elapsed() #27, !dbg !12765
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12766
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !12767
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !12754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12764
  call void @llvm.dbg.value(metadata i32 undef, metadata !12729, metadata !DIExpression()) #25, !dbg !12768
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12734, metadata !DIExpression()) #25, !dbg !12768
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12770
  br i1 %8, label %10, label %9, !dbg !12771

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.208, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.212, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 194) #26, !dbg !12772
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.213, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12772
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 194) #26, !dbg !12772
  unreachable, !dbg !12772

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !12773
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !12754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12764
  %12 = sub i32 %11, %7, !dbg !12774
  call void @llvm.dbg.value(metadata i32 %12, metadata !12754, metadata !DIExpression()), !dbg !12764
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !12757
  call void @llvm.dbg.value(metadata i32 %13, metadata !12683, metadata !DIExpression()) #25, !dbg !12759
  call void @llvm.dbg.value(metadata i32 %13, metadata !12677, metadata !DIExpression()) #25, !dbg !12755
  call void @llvm.dbg.value(metadata i32 %13, metadata !12753, metadata !DIExpression()), !dbg !12764
  call void @llvm.dbg.value(metadata i32 undef, metadata !12729, metadata !DIExpression()) #25, !dbg !12768
  call void @llvm.dbg.value(metadata i32 undef, metadata !12743, metadata !DIExpression()) #25, !dbg !12775
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !12777, !srcloc !12749
  %14 = udiv i32 %12, 16800, !dbg !12778
  ret i32 %14, !dbg !12779
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12780 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12671, metadata !DIExpression()) #25, !dbg !12784
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12786, !srcloc !12686
  call void @llvm.dbg.value(metadata i32 undef, metadata !12683, metadata !DIExpression()) #25, !dbg !12788
  call void @llvm.dbg.value(metadata i32 undef, metadata !12684, metadata !DIExpression()) #25, !dbg !12788
  call void @llvm.dbg.value(metadata i32 undef, metadata !12677, metadata !DIExpression()) #25, !dbg !12784
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12789
  br i1 %2, label %4, label %3, !dbg !12790

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.208, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.209, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 148) #26, !dbg !12791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.211, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 148) #26, !dbg !12791
  unreachable, !dbg !12791

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12683, metadata !DIExpression()) #25, !dbg !12788
  call void @llvm.dbg.value(metadata i32 undef, metadata !12677, metadata !DIExpression()) #25, !dbg !12784
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12792
  call void @llvm.dbg.value(metadata i32 undef, metadata !12782, metadata !DIExpression()), !dbg !12793
  %5 = tail call fastcc i32 @elapsed() #27, !dbg !12794
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12795
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !12783, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !12793
  call void @llvm.dbg.value(metadata i32 undef, metadata !12729, metadata !DIExpression()) #25, !dbg !12796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12734, metadata !DIExpression()) #25, !dbg !12796
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12798
  br i1 %7, label %9, label %8, !dbg !12799

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.208, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.212, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 194) #26, !dbg !12800
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.213, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12800
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 194) #26, !dbg !12800
  unreachable, !dbg !12800

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !12801
  call void @llvm.dbg.value(metadata i32 %10, metadata !12783, metadata !DIExpression()), !dbg !12793
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !12786
  call void @llvm.dbg.value(metadata i32 %11, metadata !12683, metadata !DIExpression()) #25, !dbg !12788
  call void @llvm.dbg.value(metadata i32 %11, metadata !12677, metadata !DIExpression()) #25, !dbg !12784
  call void @llvm.dbg.value(metadata i32 %11, metadata !12782, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata i32 undef, metadata !12729, metadata !DIExpression()) #25, !dbg !12796
  call void @llvm.dbg.value(metadata i32 undef, metadata !12743, metadata !DIExpression()) #25, !dbg !12802
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !12804, !srcloc !12749
  ret i32 %10, !dbg !12805
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !12806 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12807
  %2 = icmp eq i32 %1, -16777216, !dbg !12809
  br i1 %2, label %3, label %6, !dbg !12810

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12811
  %5 = or i32 %4, 1, !dbg !12811
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12811
  br label %6, !dbg !12813

6:                                                ; preds = %3, %0
  ret void, !dbg !12814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !12815 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12816
  %2 = and i32 %1, -2, !dbg !12816
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12816
  ret void, !dbg !12817
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !12818 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12844, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.value(metadata i8 %1, metadata !12845, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12846, metadata !DIExpression()), !dbg !12847
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12848
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12848
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12847
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12849
  %8 = load i8, i8* %6, align 4, !dbg !12850
  %9 = zext i8 %8 to i32, !dbg !12851
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12851
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12852
  br i1 %11, label %18, label %24, !dbg !12853

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12847
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12849
  %14 = load i8, i8* %6, align 4, !dbg !12850
  %15 = zext i8 %14 to i32, !dbg !12851
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12851
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12852
  br i1 %17, label %18, label %24, !dbg !12853, !llvm.loop !12854

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12856
  %21 = load i8, i8* %20, align 1, !dbg !12856
  %22 = icmp eq i8 %21, %1, !dbg !12859
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12860
  br i1 %22, label %24, label %12, !dbg !12861

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12847
  ret i32 %25, !dbg !12862
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12863 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12874, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i8 %1, metadata !12875, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 %2, metadata !12876, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 0, metadata !12879, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 0, metadata !12880, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i8 0, metadata !12881, metadata !DIExpression()), !dbg !12891
  %4 = icmp eq i8 %1, 0, !dbg !12892
  br i1 %4, label %35, label %5, !dbg !12893

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12892
  br label %9, !dbg !12893

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12881, metadata !DIExpression()), !dbg !12891
  call void @llvm.dbg.value(metadata i32 %29, metadata !12879, metadata !DIExpression()), !dbg !12890
  %8 = icmp eq i32 %34, %6, !dbg !12892
  br i1 %8, label %35, label %9, !dbg !12893, !llvm.loop !12894

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12881, metadata !DIExpression()), !dbg !12891
  call void @llvm.dbg.value(metadata i32 %11, metadata !12879, metadata !DIExpression()), !dbg !12890
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12896
  %13 = load i32, i32* %12, align 4, !dbg !12896
  call void @llvm.dbg.value(metadata i32 %13, metadata !12878, metadata !DIExpression()), !dbg !12890
  %14 = and i32 %13, 31, !dbg !12897
  %15 = icmp ult i32 %14, 16, !dbg !12898
  br i1 %15, label %16, label %20, !dbg !12899

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12900
  %18 = load i32, i32* %17, align 4, !dbg !12900
  %19 = or i32 %18, 32, !dbg !12902
  call void @llvm.dbg.value(metadata i32 %19, metadata !12879, metadata !DIExpression()), !dbg !12890
  br label %28, !dbg !12903

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12904

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12905
  %23 = load i32, i32* %22, align 4, !dbg !12905
  call void @llvm.dbg.value(metadata i32 %23, metadata !12883, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12906
  %24 = lshr i32 %23, 7, !dbg !12907
  %25 = and i32 %24, 16, !dbg !12907
  %26 = or i32 %25, %23, !dbg !12907
  call void @llvm.dbg.value(metadata i32 %26, metadata !12879, metadata !DIExpression()), !dbg !12890
  br label %28, !dbg !12908

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !12890
  call void @llvm.dbg.value(metadata i32 %29, metadata !12879, metadata !DIExpression()), !dbg !12890
  %30 = lshr i32 %13, 5, !dbg !12909
  %31 = and i32 %30, 255, !dbg !12909
  call void @llvm.dbg.value(metadata i32 %31, metadata !12877, metadata !DIExpression()), !dbg !12890
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !12910
  call void @llvm.dbg.value(metadata i32 %32, metadata !12880, metadata !DIExpression()), !dbg !12890
  %33 = icmp slt i32 %32, 0, !dbg !12911
  %34 = add nuw nsw i32 %10, 1, !dbg !12913
  call void @llvm.dbg.value(metadata i32 %34, metadata !12881, metadata !DIExpression()), !dbg !12891
  br i1 %33, label %35, label %7, !dbg !12914

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12920, metadata !DIExpression()), !dbg !12924
  call void @llvm.dbg.value(metadata i32 %1, metadata !12921, metadata !DIExpression()), !dbg !12924
  call void @llvm.dbg.value(metadata i32 %2, metadata !12922, metadata !DIExpression()), !dbg !12924
  %4 = icmp ugt i32 %0, 175, !dbg !12925
  br i1 %4, label %16, label %5, !dbg !12927

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12928
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12929
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12929
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12923, metadata !DIExpression()), !dbg !12924
  %9 = add nsw i32 %6, -9, !dbg !12930
  %10 = icmp ult i32 %9, 2, !dbg !12930
  br i1 %10, label %16, label %11, !dbg !12932

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.218(%struct.device* noundef %8) #27, !dbg !12933
  br i1 %12, label %13, label %16, !dbg !12934

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12935
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #26, !dbg !12936
  br label %16, !dbg !12937

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12924
  ret i32 %17, !dbg !12938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.218(%struct.device* noundef %0) unnamed_addr #1 !dbg !12939 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12943, metadata !DIExpression()), !dbg !12944
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12945, !srcloc !12947
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.219(%struct.device* noundef %0) #27, !dbg !12948
  ret i1 %2, !dbg !12949
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.219(%struct.device* noundef %0) unnamed_addr #1 !dbg !12950 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12952, metadata !DIExpression()), !dbg !12953
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !12954
  ret i1 %2, !dbg !12955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !12956 {
  ret void, !dbg !12957
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !12958 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12960, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.value(metadata i32 0, metadata !12961, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.value(metadata i32 2, metadata !12962, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.value(metadata i32 0, metadata !12963, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.value(metadata i32 2, metadata !12964, metadata !DIExpression()), !dbg !12965
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12966
  %2 = and i32 %1, 12, !dbg !12967
  call void @llvm.dbg.value(metadata i32 %2, metadata !12960, metadata !DIExpression()), !dbg !12965
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12968

3:                                                ; preds = %0
  br label %21, !dbg !12969

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12971
  call void @llvm.dbg.value(metadata i32 %5, metadata !12963, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12965
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12972
  %7 = and i32 %6, 63, !dbg !12973
  call void @llvm.dbg.value(metadata i32 %7, metadata !12964, metadata !DIExpression()), !dbg !12965
  %8 = and i32 %5, 4194304, !dbg !12974
  %9 = icmp eq i32 %8, 0, !dbg !12974
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !12976
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12976
  %13 = lshr i32 %12, 6, !dbg !12976
  %14 = and i32 %13, 511, !dbg !12976
  %15 = mul i32 %14, %11, !dbg !12976
  call void @llvm.dbg.value(metadata i32 %15, metadata !12961, metadata !DIExpression()), !dbg !12965
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12977
  %17 = lshr i32 %16, 15, !dbg !12978
  %18 = and i32 %17, 6, !dbg !12978
  %19 = add nuw nsw i32 %18, 2, !dbg !12978
  call void @llvm.dbg.value(metadata i32 %19, metadata !12962, metadata !DIExpression()), !dbg !12965
  %20 = udiv i32 %15, %19, !dbg !12979
  br label %21, !dbg !12980

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12981
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12982
  %24 = lshr i32 %23, 4, !dbg !12983
  %25 = and i32 %24, 15, !dbg !12983
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12984
  %27 = load i8, i8* %26, align 1, !dbg !12984
  %28 = zext i8 %27 to i32, !dbg !12984
  call void @llvm.dbg.value(metadata i32 %28, metadata !12960, metadata !DIExpression()), !dbg !12965
  %29 = lshr i32 %22, %28, !dbg !12985
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12985
  ret void, !dbg !12986
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12987 {
  ret i32 0, !dbg !12992
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12993 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13019, metadata !DIExpression()), !dbg !13030
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13031
  br i1 %3, label %311, label %4, !dbg !13033

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13034
  %6 = load i32, i32* %5, align 4, !dbg !13034
  %7 = and i32 %6, 1, !dbg !13036
  %8 = icmp eq i32 %7, 0, !dbg !13037
  br i1 %8, label %66, label %9, !dbg !13038

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13039
  %11 = and i32 %10, 12, !dbg !13039
  %12 = icmp eq i32 %11, 4, !dbg !13042
  br i1 %12, label %21, label %13, !dbg !13043

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13044
  %15 = and i32 %14, 12, !dbg !13044
  %16 = icmp eq i32 %15, 8, !dbg !13045
  br i1 %16, label %17, label %29, !dbg !13046

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13047
  %19 = and i32 %18, 4194304, !dbg !13048
  %20 = icmp eq i32 %19, 0, !dbg !13049
  br i1 %20, label %29, label %21, !dbg !13050

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13051
  %23 = and i32 %22, 131072, !dbg !13051
  %24 = icmp eq i32 %23, 0, !dbg !13051
  br i1 %24, label %66, label %25, !dbg !13054

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13055
  %27 = load i32, i32* %26, align 4, !dbg !13055
  %28 = icmp eq i32 %27, 0, !dbg !13056
  br i1 %28, label %311, label %66, !dbg !13057

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13058
  %31 = load i32, i32* %30, align 4, !dbg !13058
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !13062

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13063
  %34 = or i32 %33, 65536, !dbg !13063
  br label %45, !dbg !13063

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13065
  %37 = or i32 %36, 262144, !dbg !13065
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13065
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13065
  %39 = or i32 %38, 65536, !dbg !13065
  br label %45, !dbg !13065

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13068
  %42 = and i32 %41, -65537, !dbg !13068
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13068
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13068
  %44 = and i32 %43, -262145, !dbg !13068
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13070
  %47 = load i32, i32* %30, align 4, !dbg !13071
  %48 = icmp eq i32 %47, 0, !dbg !13073
  %49 = tail call i32 @HAL_GetTick() #26, !dbg !13074
  call void @llvm.dbg.value(metadata i32 %49, metadata !13020, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 %49, metadata !13020, metadata !DIExpression()), !dbg !13030
  br i1 %48, label %58, label %50, !dbg !13075

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13076
  %52 = and i32 %51, 131072, !dbg !13078
  %53 = icmp eq i32 %52, 0, !dbg !13078
  br i1 %53, label %54, label %66, !dbg !13079

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #26, !dbg !13080
  %56 = sub i32 %55, %49, !dbg !13083
  %57 = icmp ugt i32 %56, 100, !dbg !13084
  br i1 %57, label %311, label %50, !dbg !13085, !llvm.loop !13086

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13088
  %60 = and i32 %59, 131072, !dbg !13088
  %61 = icmp eq i32 %60, 0, !dbg !13088
  br i1 %61, label %66, label %62, !dbg !13090

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #26, !dbg !13091
  %64 = sub i32 %63, %49, !dbg !13094
  %65 = icmp ugt i32 %64, 100, !dbg !13095
  br i1 %65, label %311, label %58, !dbg !13096, !llvm.loop !13097

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !13099
  %68 = and i32 %67, 2, !dbg !13101
  %69 = icmp eq i32 %68, 0, !dbg !13102
  br i1 %69, label %121, label %70, !dbg !13103

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13104
  %72 = and i32 %71, 12, !dbg !13104
  %73 = icmp eq i32 %72, 0, !dbg !13107
  br i1 %73, label %82, label %74, !dbg !13108

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13109
  %76 = and i32 %75, 12, !dbg !13109
  %77 = icmp eq i32 %76, 8, !dbg !13110
  br i1 %77, label %78, label %90, !dbg !13111

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13112
  %80 = and i32 %79, 4194304, !dbg !13113
  %81 = icmp eq i32 %80, 0, !dbg !13114
  br i1 %81, label %82, label %90, !dbg !13115

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13116
  %84 = and i32 %83, 2, !dbg !13116
  %85 = icmp eq i32 %84, 0, !dbg !13116
  br i1 %85, label %114, label %86, !dbg !13119

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13120
  %88 = load i32, i32* %87, align 4, !dbg !13120
  %89 = icmp eq i32 %88, 1, !dbg !13121
  br i1 %89, label %114, label %311, !dbg !13122

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13123
  %92 = load i32, i32* %91, align 4, !dbg !13123
  %93 = icmp eq i32 %92, 0, !dbg !13126
  br i1 %93, label %104, label %94, !dbg !13127

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13128
  %95 = tail call i32 @HAL_GetTick() #26, !dbg !13130
  call void @llvm.dbg.value(metadata i32 %95, metadata !13020, metadata !DIExpression()), !dbg !13030
  br label %96, !dbg !13131

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13132
  %98 = and i32 %97, 2, !dbg !13133
  %99 = icmp eq i32 %98, 0, !dbg !13133
  br i1 %99, label %100, label %114, !dbg !13131

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #26, !dbg !13134
  %102 = sub i32 %101, %95, !dbg !13137
  %103 = icmp ugt i32 %102, 2, !dbg !13138
  br i1 %103, label %311, label %96, !dbg !13139, !llvm.loop !13140

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13142
  %105 = tail call i32 @HAL_GetTick() #26, !dbg !13144
  call void @llvm.dbg.value(metadata i32 %105, metadata !13020, metadata !DIExpression()), !dbg !13030
  br label %106, !dbg !13145

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13146
  %108 = and i32 %107, 2, !dbg !13146
  %109 = icmp eq i32 %108, 0, !dbg !13146
  br i1 %109, label %121, label %110, !dbg !13145

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #26, !dbg !13147
  %112 = sub i32 %111, %105, !dbg !13150
  %113 = icmp ugt i32 %112, 2, !dbg !13151
  br i1 %113, label %311, label %106, !dbg !13152, !llvm.loop !13153

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13155
  %116 = and i32 %115, -249, !dbg !13155
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13155
  %118 = load i32, i32* %117, align 4, !dbg !13155
  %119 = shl i32 %118, 3, !dbg !13155
  %120 = or i32 %119, %116, !dbg !13155
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13155
  br label %121, !dbg !13156

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !13156
  %123 = and i32 %122, 8, !dbg !13158
  %124 = icmp eq i32 %123, 0, !dbg !13159
  br i1 %124, label %149, label %125, !dbg !13160

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13161
  %127 = load i32, i32* %126, align 4, !dbg !13161
  %128 = icmp eq i32 %127, 0, !dbg !13164
  br i1 %128, label %139, label %129, !dbg !13165

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13166
  %130 = tail call i32 @HAL_GetTick() #26, !dbg !13168
  call void @llvm.dbg.value(metadata i32 %130, metadata !13020, metadata !DIExpression()), !dbg !13030
  br label %131, !dbg !13169

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13170
  %133 = and i32 %132, 2, !dbg !13171
  %134 = icmp eq i32 %133, 0, !dbg !13171
  br i1 %134, label %135, label %149, !dbg !13169

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #26, !dbg !13172
  %137 = sub i32 %136, %130, !dbg !13175
  %138 = icmp ugt i32 %137, 2, !dbg !13176
  br i1 %138, label %311, label %131, !dbg !13177, !llvm.loop !13178

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13180
  %140 = tail call i32 @HAL_GetTick() #26, !dbg !13182
  call void @llvm.dbg.value(metadata i32 %140, metadata !13020, metadata !DIExpression()), !dbg !13030
  br label %141, !dbg !13183

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13184
  %143 = and i32 %142, 2, !dbg !13184
  %144 = icmp eq i32 %143, 0, !dbg !13184
  br i1 %144, label %149, label %145, !dbg !13183

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #26, !dbg !13185
  %147 = sub i32 %146, %140, !dbg !13188
  %148 = icmp ugt i32 %147, 2, !dbg !13189
  br i1 %148, label %311, label %141, !dbg !13190, !llvm.loop !13191

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !13193
  %151 = and i32 %150, 4, !dbg !13194
  %152 = icmp eq i32 %151, 0, !dbg !13195
  br i1 %152, label %221, label %153, !dbg !13196

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !13022, metadata !DIExpression()), !dbg !13197
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13198
  %155 = and i32 %154, 268435456, !dbg !13198
  %156 = icmp eq i32 %155, 0, !dbg !13198
  br i1 %156, label %157, label %164, !dbg !13199

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !13200
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !13200
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13026, metadata !DIExpression()), !dbg !13200
  store volatile i32 0, i32* %2, align 4, !dbg !13200
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13200
  %160 = or i32 %159, 268435456, !dbg !13200
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13200
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13200
  %162 = and i32 %161, 268435456, !dbg !13200
  store volatile i32 %162, i32* %2, align 4, !dbg !13200
  %163 = load volatile i32, i32* %2, align 4, !dbg !13200
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !13201
  call void @llvm.dbg.value(metadata i32 1, metadata !13022, metadata !DIExpression()), !dbg !13197
  br label %164, !dbg !13202

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !13022, metadata !DIExpression()), !dbg !13197
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13203
  %166 = and i32 %165, 256, !dbg !13203
  %167 = icmp eq i32 %166, 0, !dbg !13203
  br i1 %167, label %168, label %180, !dbg !13205

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13206
  %170 = or i32 %169, 256, !dbg !13206
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13206
  %171 = tail call i32 @HAL_GetTick() #26, !dbg !13208
  call void @llvm.dbg.value(metadata i32 %171, metadata !13020, metadata !DIExpression()), !dbg !13030
  br label %172, !dbg !13209

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13210
  %174 = and i32 %173, 256, !dbg !13210
  %175 = icmp eq i32 %174, 0, !dbg !13210
  br i1 %175, label %176, label %180, !dbg !13209

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #26, !dbg !13211
  %178 = sub i32 %177, %171, !dbg !13214
  %179 = icmp ugt i32 %178, 2, !dbg !13215
  br i1 %179, label %311, label %172, !dbg !13216, !llvm.loop !13217

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13219
  %182 = load i32, i32* %181, align 4, !dbg !13219
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !13222

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13223
  %185 = or i32 %184, 1, !dbg !13223
  br label %196, !dbg !13223

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13225
  %188 = or i32 %187, 4, !dbg !13225
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13225
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13225
  %190 = or i32 %189, 1, !dbg !13225
  br label %196, !dbg !13225

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13228
  %193 = and i32 %192, -2, !dbg !13228
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13228
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13228
  %195 = and i32 %194, -5, !dbg !13228
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13230
  %198 = load i32, i32* %181, align 4, !dbg !13231
  %199 = icmp eq i32 %198, 0, !dbg !13233
  %200 = tail call i32 @HAL_GetTick() #26, !dbg !13234
  call void @llvm.dbg.value(metadata i32 %200, metadata !13020, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 %200, metadata !13020, metadata !DIExpression()), !dbg !13030
  br i1 %199, label %209, label %201, !dbg !13235

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13236
  %203 = and i32 %202, 2, !dbg !13238
  %204 = icmp eq i32 %203, 0, !dbg !13238
  br i1 %204, label %205, label %217, !dbg !13239

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #26, !dbg !13240
  %207 = sub i32 %206, %200, !dbg !13243
  %208 = icmp ugt i32 %207, 5000, !dbg !13244
  br i1 %208, label %311, label %201, !dbg !13245, !llvm.loop !13246

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13248
  %211 = and i32 %210, 2, !dbg !13248
  %212 = icmp eq i32 %211, 0, !dbg !13248
  br i1 %212, label %217, label %213, !dbg !13250

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #26, !dbg !13251
  %215 = sub i32 %214, %200, !dbg !13254
  %216 = icmp ugt i32 %215, 5000, !dbg !13255
  br i1 %216, label %311, label %209, !dbg !13256, !llvm.loop !13257

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !13259

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13260
  %220 = and i32 %219, -268435457, !dbg !13260
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13260
  br label %221, !dbg !13263

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13264
  %223 = load i32, i32* %222, align 4, !dbg !13264
  %224 = icmp eq i32 %223, 0, !dbg !13266
  br i1 %224, label %310, label %225, !dbg !13267

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13268
  %227 = and i32 %226, 12, !dbg !13268
  %228 = icmp eq i32 %227, 8, !dbg !13271
  br i1 %228, label %277, label %229, !dbg !13272

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !13273
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13276
  %231 = tail call i32 @HAL_GetTick() #26, !dbg !13276
  call void @llvm.dbg.value(metadata i32 %231, metadata !13020, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 %231, metadata !13020, metadata !DIExpression()), !dbg !13030
  br i1 %230, label %232, label %269, !dbg !13277

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13278
  %234 = and i32 %233, 33554432, !dbg !13278
  %235 = icmp eq i32 %234, 0, !dbg !13278
  br i1 %235, label %240, label %236, !dbg !13280

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #26, !dbg !13281
  %238 = sub i32 %237, %231, !dbg !13284
  %239 = icmp ugt i32 %238, 2, !dbg !13285
  br i1 %239, label %311, label %232, !dbg !13286, !llvm.loop !13287

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13289
  %242 = load i32, i32* %241, align 4, !dbg !13289
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13289
  %244 = load i32, i32* %243, align 4, !dbg !13289
  %245 = or i32 %244, %242, !dbg !13289
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13289
  %247 = load i32, i32* %246, align 4, !dbg !13289
  %248 = shl i32 %247, 6, !dbg !13289
  %249 = or i32 %245, %248, !dbg !13289
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13289
  %251 = load i32, i32* %250, align 4, !dbg !13289
  %252 = shl i32 %251, 15, !dbg !13289
  %253 = add i32 %252, -65536, !dbg !13289
  %254 = and i32 %253, -65536, !dbg !13289
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13289
  %256 = load i32, i32* %255, align 4, !dbg !13289
  %257 = shl i32 %256, 24, !dbg !13289
  %258 = or i32 %249, %257, !dbg !13289
  %259 = or i32 %258, %254, !dbg !13289
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13289
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13290
  %260 = tail call i32 @HAL_GetTick() #26, !dbg !13291
  call void @llvm.dbg.value(metadata i32 %260, metadata !13020, metadata !DIExpression()), !dbg !13030
  br label %261, !dbg !13292

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13293
  %263 = and i32 %262, 33554432, !dbg !13294
  %264 = icmp eq i32 %263, 0, !dbg !13294
  br i1 %264, label %265, label %310, !dbg !13292

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #26, !dbg !13295
  %267 = sub i32 %266, %260, !dbg !13298
  %268 = icmp ugt i32 %267, 2, !dbg !13299
  br i1 %268, label %311, label %261, !dbg !13300, !llvm.loop !13301

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13303
  %271 = and i32 %270, 33554432, !dbg !13303
  %272 = icmp eq i32 %271, 0, !dbg !13303
  br i1 %272, label %310, label %273, !dbg !13305

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #26, !dbg !13306
  %275 = sub i32 %274, %231, !dbg !13309
  %276 = icmp ugt i32 %275, 2, !dbg !13310
  br i1 %276, label %311, label %269, !dbg !13311, !llvm.loop !13312

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !13314
  br i1 %278, label %311, label %279, !dbg !13317

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13318
  call void @llvm.dbg.value(metadata i32 %280, metadata !13021, metadata !DIExpression()), !dbg !13030
  %281 = and i32 %280, 4194304, !dbg !13320
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13322
  %283 = load i32, i32* %282, align 4, !dbg !13322
  %284 = icmp eq i32 %281, %283, !dbg !13323
  br i1 %284, label %285, label %311, !dbg !13324

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !13325
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13326
  %288 = load i32, i32* %287, align 4, !dbg !13326
  %289 = icmp eq i32 %286, %288, !dbg !13327
  br i1 %289, label %290, label %311, !dbg !13328

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !13329
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13330
  %293 = load i32, i32* %292, align 4, !dbg !13330
  %294 = shl i32 %293, 6, !dbg !13331
  %295 = icmp eq i32 %291, %294, !dbg !13332
  br i1 %295, label %296, label %311, !dbg !13333

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !13334
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13335
  %299 = load i32, i32* %298, align 4, !dbg !13335
  %300 = shl i32 %299, 15, !dbg !13336
  %301 = add i32 %300, -65536, !dbg !13336
  %302 = and i32 %301, -65536, !dbg !13336
  %303 = icmp eq i32 %297, %302, !dbg !13337
  br i1 %303, label %304, label %311, !dbg !13338

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !13339
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13340
  %307 = load i32, i32* %306, align 4, !dbg !13340
  %308 = shl i32 %307, 24, !dbg !13341
  %309 = icmp eq i32 %305, %308, !dbg !13342
  br i1 %309, label %310, label %311, !dbg !13343

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !13344

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !13030
  ret i32 %312, !dbg !13345
}

; Function Attrs: optsize
declare !dbg !13346 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13348 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13361, metadata !DIExpression()), !dbg !13364
  call void @llvm.dbg.value(metadata i32 %1, metadata !13362, metadata !DIExpression()), !dbg !13364
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !13365
  br i1 %3, label %115, label %4, !dbg !13367

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13368
  %6 = and i32 %5, 7, !dbg !13368
  %7 = icmp ult i32 %6, %1, !dbg !13370
  br i1 %7, label %8, label %13, !dbg !13371

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !13372
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !13372
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13374
  %11 = and i32 %10, 7, !dbg !13374
  %12 = icmp eq i32 %11, %1, !dbg !13376
  br i1 %12, label %13, label %115, !dbg !13377

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13378
  %15 = load i32, i32* %14, align 4, !dbg !13378
  %16 = and i32 %15, 2, !dbg !13380
  %17 = icmp eq i32 %16, 0, !dbg !13381
  br i1 %17, label %39, label %18, !dbg !13382

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !13383
  %20 = icmp eq i32 %19, 0, !dbg !13386
  br i1 %20, label %25, label %21, !dbg !13387

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13388
  %23 = or i32 %22, 7168, !dbg !13388
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13388
  %24 = load i32, i32* %14, align 4, !dbg !13390
  br label %25, !dbg !13392

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !13390
  %27 = and i32 %26, 8, !dbg !13393
  %28 = icmp eq i32 %27, 0, !dbg !13394
  br i1 %28, label %32, label %29, !dbg !13395

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13396
  %31 = or i32 %30, 57344, !dbg !13396
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13396
  br label %32, !dbg !13398

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13399
  %34 = and i32 %33, -241, !dbg !13399
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13399
  %36 = load i32, i32* %35, align 4, !dbg !13399
  %37 = or i32 %34, %36, !dbg !13399
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13399
  %38 = load i32, i32* %14, align 4, !dbg !13400
  br label %39, !dbg !13402

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !13400
  %41 = and i32 %40, 1, !dbg !13403
  %42 = icmp eq i32 %41, 0, !dbg !13404
  br i1 %42, label %73, label %43, !dbg !13405

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13406
  %45 = load i32, i32* %44, align 4, !dbg !13406
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !13409

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13410
  %48 = and i32 %47, 131072, !dbg !13413
  %49 = icmp eq i32 %48, 0, !dbg !13413
  br i1 %49, label %115, label %58, !dbg !13414

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13415
  %52 = and i32 %51, 33554432, !dbg !13419
  %53 = icmp eq i32 %52, 0, !dbg !13419
  br i1 %53, label %115, label %58, !dbg !13420

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13421
  %56 = and i32 %55, 2, !dbg !13424
  %57 = icmp eq i32 %56, 0, !dbg !13424
  br i1 %57, label %115, label %58, !dbg !13425

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13426
  %60 = and i32 %59, -4, !dbg !13426
  %61 = or i32 %60, %45, !dbg !13426
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13426
  %62 = tail call i32 @HAL_GetTick() #26, !dbg !13427
  call void @llvm.dbg.value(metadata i32 %62, metadata !13363, metadata !DIExpression()), !dbg !13364
  br label %63, !dbg !13428

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13429
  %65 = and i32 %64, 12, !dbg !13429
  %66 = load i32, i32* %44, align 4, !dbg !13430
  %67 = shl i32 %66, 2, !dbg !13431
  %68 = icmp eq i32 %65, %67, !dbg !13432
  br i1 %68, label %73, label %69, !dbg !13428

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #26, !dbg !13433
  %71 = sub i32 %70, %62, !dbg !13436
  %72 = icmp ugt i32 %71, 5000, !dbg !13437
  br i1 %72, label %115, label %63, !dbg !13438, !llvm.loop !13439

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13441
  %75 = and i32 %74, 7, !dbg !13441
  %76 = icmp ugt i32 %75, %1, !dbg !13443
  br i1 %76, label %77, label %82, !dbg !13444

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !13445
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !13445
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13447
  %80 = and i32 %79, 7, !dbg !13447
  %81 = icmp eq i32 %80, %1, !dbg !13449
  br i1 %81, label %82, label %115, !dbg !13450

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !13451
  %84 = and i32 %83, 4, !dbg !13453
  %85 = icmp eq i32 %84, 0, !dbg !13454
  br i1 %85, label %93, label %86, !dbg !13455

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13456
  %88 = and i32 %87, -7169, !dbg !13456
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13456
  %90 = load i32, i32* %89, align 4, !dbg !13456
  %91 = or i32 %88, %90, !dbg !13456
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13456
  %92 = load i32, i32* %14, align 4, !dbg !13458
  br label %93, !dbg !13460

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !13458
  %95 = and i32 %94, 8, !dbg !13461
  %96 = icmp eq i32 %95, 0, !dbg !13462
  br i1 %96, label %104, label %97, !dbg !13463

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13464
  %99 = and i32 %98, -57345, !dbg !13464
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13464
  %101 = load i32, i32* %100, align 4, !dbg !13464
  %102 = shl i32 %101, 3, !dbg !13464
  %103 = or i32 %102, %99, !dbg !13464
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13464
  br label %104, !dbg !13466

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !13467
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13468
  %107 = lshr i32 %106, 4, !dbg !13469
  %108 = and i32 %107, 15, !dbg !13469
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !13470
  %110 = load i8, i8* %109, align 1, !dbg !13470
  %111 = zext i8 %110 to i32, !dbg !13470
  %112 = lshr i32 %105, %111, !dbg !13471
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !13472
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !13473
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #26, !dbg !13474
  br label %115, !dbg !13475

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !13364
  ret i32 %116, !dbg !13476
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !13477 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13479, metadata !DIExpression()), !dbg !13483
  call void @llvm.dbg.value(metadata i32 0, metadata !13480, metadata !DIExpression()), !dbg !13483
  call void @llvm.dbg.value(metadata i32 0, metadata !13481, metadata !DIExpression()), !dbg !13483
  call void @llvm.dbg.value(metadata i32 0, metadata !13482, metadata !DIExpression()), !dbg !13483
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13484
  %2 = and i32 %1, 12, !dbg !13485
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !13486

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !13482, metadata !DIExpression()), !dbg !13483
  br label %24, !dbg !13487

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13490
  %6 = and i32 %5, 63, !dbg !13492
  call void @llvm.dbg.value(metadata i32 %6, metadata !13479, metadata !DIExpression()), !dbg !13483
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13493
  %8 = and i32 %7, 4194304, !dbg !13493
  %9 = icmp eq i32 %8, 0, !dbg !13495
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13496
  %11 = lshr i32 %10, 6, !dbg !13496
  %12 = and i32 %11, 511, !dbg !13496
  %13 = zext i32 %12 to i64, !dbg !13496
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !13496
  %16 = zext i32 %6 to i64, !dbg !13496
  %17 = udiv i64 %15, %16, !dbg !13496
  %18 = trunc i64 %17 to i32, !dbg !13496
  call void @llvm.dbg.value(metadata i32 %18, metadata !13480, metadata !DIExpression()), !dbg !13483
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13497
  %20 = lshr i32 %19, 15, !dbg !13498
  %21 = and i32 %20, 6, !dbg !13498
  %22 = add nuw nsw i32 %21, 2, !dbg !13498
  call void @llvm.dbg.value(metadata i32 %22, metadata !13481, metadata !DIExpression()), !dbg !13483
  %23 = udiv i32 %18, %22, !dbg !13499
  call void @llvm.dbg.value(metadata i32 %23, metadata !13482, metadata !DIExpression()), !dbg !13483
  br label %24, !dbg !13500

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !13501
  call void @llvm.dbg.value(metadata i32 %25, metadata !13482, metadata !DIExpression()), !dbg !13483
  ret i32 %25, !dbg !13502
}

; Function Attrs: optsize
declare !dbg !13503 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13506 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13510, metadata !DIExpression()), !dbg !13530
  call void @llvm.dbg.value(metadata i32 %1, metadata !13511, metadata !DIExpression()), !dbg !13530
  call void @llvm.dbg.value(metadata i32 %2, metadata !13512, metadata !DIExpression()), !dbg !13530
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !13531
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !13531
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !13513, metadata !DIExpression()), !dbg !13532
  %8 = icmp eq i32 %0, 0, !dbg !13533
  br i1 %8, label %9, label %23, !dbg !13534

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !13535
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !13535
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13523, metadata !DIExpression()), !dbg !13535
  store volatile i32 0, i32* %5, align 4, !dbg !13535
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13535
  %12 = or i32 %11, 1, !dbg !13535
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13535
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13535
  %14 = and i32 %13, 1, !dbg !13535
  store volatile i32 %14, i32* %5, align 4, !dbg !13535
  %15 = load volatile i32, i32* %5, align 4, !dbg !13535
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !13536
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13537
  store i32 256, i32* %16, align 4, !dbg !13538
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13539
  store i32 2, i32* %17, align 4, !dbg !13540
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13541
  store i32 3, i32* %18, align 4, !dbg !13542
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13543
  store i32 0, i32* %19, align 4, !dbg !13544
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13545
  store i32 0, i32* %20, align 4, !dbg !13546
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !13547
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13548
  %22 = and i32 %21, -123731969, !dbg !13548
  br label %38, !dbg !13549

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !13550
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !13550
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13527, metadata !DIExpression()), !dbg !13550
  store volatile i32 0, i32* %6, align 4, !dbg !13550
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13550
  %26 = or i32 %25, 4, !dbg !13550
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13550
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13550
  %28 = and i32 %27, 4, !dbg !13550
  store volatile i32 %28, i32* %6, align 4, !dbg !13550
  %29 = load volatile i32, i32* %6, align 4, !dbg !13550
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !13551
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13552
  store i32 512, i32* %30, align 4, !dbg !13553
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13554
  store i32 2, i32* %31, align 4, !dbg !13555
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13556
  store i32 3, i32* %32, align 4, !dbg !13557
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13558
  store i32 0, i32* %33, align 4, !dbg !13559
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13560
  store i32 0, i32* %34, align 4, !dbg !13561
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !13562
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13563
  %36 = and i32 %35, 134217727, !dbg !13563
  %37 = shl i32 %2, 3, !dbg !13563
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !13564
  %42 = or i32 %41, %40, !dbg !13564
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13564
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !13565
  ret void, !dbg !13565
}

; Function Attrs: optsize
declare !dbg !13566 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #16 !dbg !13570 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13571
  ret void, !dbg !13572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #16 !dbg !13573 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13574
  ret void, !dbg !13575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !13576 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13577
  ret i32 %1, !dbg !13578
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !13579 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !13580
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13581
  %3 = lshr i32 %2, 10, !dbg !13582
  %4 = and i32 %3, 7, !dbg !13582
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13583
  %6 = load i8, i8* %5, align 1, !dbg !13583
  %7 = zext i8 %6 to i32, !dbg !13583
  %8 = lshr i32 %1, %7, !dbg !13584
  ret i32 %8, !dbg !13585
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !13586 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !13587
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13588
  %3 = lshr i32 %2, 13, !dbg !13589
  %4 = and i32 %3, 7, !dbg !13589
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13590
  %6 = load i8, i8* %5, align 1, !dbg !13590
  %7 = zext i8 %6 to i32, !dbg !13590
  %8 = lshr i32 %1, %7, !dbg !13591
  ret i32 %8, !dbg !13592
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13593 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13597, metadata !DIExpression()), !dbg !13598
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13599
  store i32 15, i32* %2, align 4, !dbg !13600
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13601
  %4 = and i32 %3, 262144, !dbg !13603
  %5 = icmp eq i32 %4, 0, !dbg !13604
  br i1 %5, label %8, label %6, !dbg !13605

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13606
  store i32 327680, i32* %7, align 4, !dbg !13608
  br label %15, !dbg !13609

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13610
  %10 = and i32 %9, 65536, !dbg !13612
  %11 = icmp eq i32 %10, 0, !dbg !13613
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13614
  br i1 %11, label %14, label %13, !dbg !13615

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13616
  br label %15, !dbg !13618

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13619
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13621
  %17 = and i32 %16, 1, !dbg !13623
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13624
  store i32 %17, i32* %18, align 4, !dbg !13626
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13627
  %20 = lshr i32 %19, 3, !dbg !13628
  %21 = and i32 %20, 31, !dbg !13628
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13629
  store i32 %21, i32* %22, align 4, !dbg !13630
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13631
  %24 = and i32 %23, 4, !dbg !13633
  %25 = icmp eq i32 %24, 0, !dbg !13634
  br i1 %25, label %28, label %26, !dbg !13635

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13636
  store i32 5, i32* %27, align 4, !dbg !13638
  br label %35, !dbg !13639

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13640
  %30 = and i32 %29, 1, !dbg !13642
  %31 = icmp eq i32 %30, 0, !dbg !13643
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13644
  br i1 %31, label %34, label %33, !dbg !13645

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13646
  br label %35, !dbg !13648

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13649
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13651
  %37 = and i32 %36, 1, !dbg !13653
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13654
  store i32 %37, i32* %38, align 4, !dbg !13656
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13657
  %40 = and i32 %39, 16777216, !dbg !13659
  %41 = icmp eq i32 %40, 0, !dbg !13660
  %42 = select i1 %41, i32 1, i32 2, !dbg !13661
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13662
  store i32 %42, i32* %43, align 4, !dbg !13664
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13665
  %45 = and i32 %44, 4194304, !dbg !13666
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13667
  store i32 %45, i32* %46, align 4, !dbg !13668
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13669
  %48 = and i32 %47, 63, !dbg !13670
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13671
  store i32 %48, i32* %49, align 4, !dbg !13672
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13673
  %51 = lshr i32 %50, 6, !dbg !13674
  %52 = and i32 %51, 511, !dbg !13674
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13675
  store i32 %52, i32* %53, align 4, !dbg !13676
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13677
  %55 = shl i32 %54, 1, !dbg !13678
  %56 = and i32 %55, 393216, !dbg !13678
  %57 = add nuw nsw i32 %56, 131072, !dbg !13678
  %58 = lshr exact i32 %57, 16, !dbg !13679
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13680
  store i32 %58, i32* %59, align 4, !dbg !13681
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13682
  %61 = lshr i32 %60, 24, !dbg !13683
  %62 = and i32 %61, 15, !dbg !13683
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13684
  store i32 %62, i32* %63, align 4, !dbg !13685
  ret void, !dbg !13686
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !13687 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13691, metadata !DIExpression()), !dbg !13693
  call void @llvm.dbg.value(metadata i32* %1, metadata !13692, metadata !DIExpression()), !dbg !13693
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13694
  store i32 15, i32* %3, align 4, !dbg !13695
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13696
  %5 = and i32 %4, 3, !dbg !13697
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13698
  store i32 %5, i32* %6, align 4, !dbg !13699
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13700
  %8 = and i32 %7, 240, !dbg !13701
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13702
  store i32 %8, i32* %9, align 4, !dbg !13703
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13704
  %11 = and i32 %10, 7168, !dbg !13705
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13706
  store i32 %11, i32* %12, align 4, !dbg !13707
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13708
  %14 = lshr i32 %13, 3, !dbg !13709
  %15 = and i32 %14, 7168, !dbg !13709
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13710
  store i32 %15, i32* %16, align 4, !dbg !13711
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13712
  %18 = and i32 %17, 7, !dbg !13713
  store i32 %18, i32* %1, align 4, !dbg !13714
  ret void, !dbg !13715
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13716 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13717
  %2 = and i32 %1, 128, !dbg !13717
  %3 = icmp eq i32 %2, 0, !dbg !13717
  br i1 %3, label %5, label %4, !dbg !13719

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #27, !dbg !13720
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13722
  br label %5, !dbg !13723

5:                                                ; preds = %4, %0
  ret void, !dbg !13724
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13725 {
  ret void, !dbg !13726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !13727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13730, metadata !DIExpression()), !dbg !13731
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !13732
  ret void, !dbg !13733
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !13734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13737, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.value(metadata i32 1000, metadata !13738, metadata !DIExpression()), !dbg !13739
  %2 = udiv i32 %0, 1000, !dbg !13740
  %3 = add nsw i32 %2, -1, !dbg !13741
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13742
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13743
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13744
  ret void, !dbg !13745
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #20 !dbg !13746 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13748, metadata !DIExpression()), !dbg !13750
  %3 = bitcast i32* %2 to i8*, !dbg !13751
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13751
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13749, metadata !DIExpression()), !dbg !13752
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13753
  store volatile i32 %4, i32* %2, align 4, !dbg !13752
  %5 = load volatile i32, i32* %2, align 4, !dbg !13754
  %6 = icmp eq i32 %0, -1, !dbg !13755
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13748, metadata !DIExpression()), !dbg !13750
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13750
  call void @llvm.dbg.value(metadata i32 %8, metadata !13748, metadata !DIExpression()), !dbg !13750
  br label %9, !dbg !13757

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13748, metadata !DIExpression()), !dbg !13750
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13758
  call void @llvm.dbg.value(metadata i32 undef, metadata !13748, metadata !DIExpression()), !dbg !13750
  %12 = shl i32 %11, 15, !dbg !13750
  %13 = ashr i32 %12, 31, !dbg !13750
  %14 = add i32 %13, %10, !dbg !13750
  call void @llvm.dbg.value(metadata i32 %14, metadata !13748, metadata !DIExpression()), !dbg !13750
  %15 = icmp eq i32 %14, 0, !dbg !13757
  br i1 %15, label %16, label %9, !dbg !13757

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13761
  ret void, !dbg !13761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !13762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13764, metadata !DIExpression()), !dbg !13765
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13766
  ret void, !dbg !13767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !13768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13773, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata i32 0, metadata !13776, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata i32 0, metadata !13777, metadata !DIExpression()), !dbg !13778
  %2 = icmp eq i32 %0, 0, !dbg !13779
  br i1 %2, label %52, label %3, !dbg !13781

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !13782
  %5 = icmp eq i32 %4, 16384, !dbg !13785
  br i1 %5, label %6, label %21, !dbg !13786

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13787
  %8 = select i1 %7, i32 0, i32 5, !dbg !13790
  call void @llvm.dbg.value(metadata i32 %8, metadata !13776, metadata !DIExpression()), !dbg !13778
  %9 = add i32 %0, -120000001, !dbg !13791
  %10 = icmp ult i32 %9, 30000000, !dbg !13791
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13791
  call void @llvm.dbg.value(metadata i32 %11, metadata !13776, metadata !DIExpression()), !dbg !13778
  %12 = icmp ult i32 %9, -30000000, !dbg !13793
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13793
  call void @llvm.dbg.value(metadata i32 %13, metadata !13776, metadata !DIExpression()), !dbg !13778
  %14 = icmp ugt i32 %0, 60000000, !dbg !13795
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13797
  br i1 %16, label %21, label %17, !dbg !13797

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13798
  %19 = and i1 %18, %15, !dbg !13801
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13801
  br label %21, !dbg !13801

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13778
  call void @llvm.dbg.value(metadata i32 %22, metadata !13776, metadata !DIExpression()), !dbg !13778
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !13802
  %24 = icmp eq i32 %23, 0, !dbg !13804
  br i1 %24, label %25, label %41, !dbg !13805

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !13806
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13809
  %29 = select i1 %28, i32 4, i32 %22, !dbg !13809
  call void @llvm.dbg.value(metadata i32 %29, metadata !13776, metadata !DIExpression()), !dbg !13778
  %30 = icmp ugt i32 %0, 90000000, !dbg !13810
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13812
  %33 = select i1 %32, i32 3, i32 %29, !dbg !13812
  call void @llvm.dbg.value(metadata i32 %33, metadata !13776, metadata !DIExpression()), !dbg !13778
  %34 = icmp ugt i32 %0, 60000000, !dbg !13813
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13815
  br i1 %36, label %41, label %37, !dbg !13815

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !13816
  %39 = and i1 %38, %35, !dbg !13819
  %40 = select i1 %39, i32 1, i32 %33, !dbg !13819
  br label %41, !dbg !13819

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !13820
  call void @llvm.dbg.value(metadata i32 %42, metadata !13776, metadata !DIExpression()), !dbg !13778
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #27, !dbg !13821
  call void @llvm.dbg.value(metadata i32 2, metadata !13774, metadata !DIExpression()), !dbg !13778
  br label %43, !dbg !13822

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !13820
  call void @llvm.dbg.value(metadata i32 %44, metadata !13774, metadata !DIExpression()), !dbg !13778
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !13823
  call void @llvm.dbg.value(metadata i32 %45, metadata !13775, metadata !DIExpression()), !dbg !13778
  %46 = add nsw i32 %44, -1, !dbg !13825
  call void @llvm.dbg.value(metadata i32 %46, metadata !13774, metadata !DIExpression()), !dbg !13778
  %47 = icmp ne i32 %45, %42, !dbg !13826
  %48 = icmp ne i32 %46, 0, !dbg !13827
  %49 = select i1 %47, i1 %48, i1 false, !dbg !13827
  br i1 %49, label %43, label %50, !dbg !13828, !llvm.loop !13829

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !13831
  call void @llvm.dbg.value(metadata i32 %53, metadata !13777, metadata !DIExpression()), !dbg !13778
  ret i32 %53, !dbg !13832
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !13833 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13835
  %2 = and i32 %1, 16384, !dbg !13835
  ret i32 %2, !dbg !13836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !13837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13839, metadata !DIExpression()), !dbg !13840
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13841
  %3 = and i32 %2, -8, !dbg !13841
  %4 = or i32 %3, %0, !dbg !13841
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13841
  ret void, !dbg !13842
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !13843 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13844
  %2 = and i32 %1, 7, !dbg !13844
  ret i32 %2, !dbg !13845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !13846 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13864, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13865, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.value(metadata i32 0, metadata !13866, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.value(metadata i32 0, metadata !13867, metadata !DIExpression()), !dbg !13868
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !13869
  %4 = icmp eq i32 %3, 0, !dbg !13871
  br i1 %4, label %5, label %21, !dbg !13872

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #27, !dbg !13873
  call void @llvm.dbg.value(metadata i32 %6, metadata !13867, metadata !DIExpression()), !dbg !13868
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.228() #27, !dbg !13875
  %8 = icmp eq i32 %7, 1, !dbg !13877
  br i1 %8, label %13, label %9, !dbg !13878

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.229() #27, !dbg !13879
  br label %10, !dbg !13881

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.228() #27, !dbg !13882
  %12 = icmp eq i32 %11, 1, !dbg !13883
  br i1 %12, label %13, label %10, !dbg !13881, !llvm.loop !13884

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13886
  %15 = load i32, i32* %14, align 4, !dbg !13886
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13887
  %17 = load i32, i32* %16, align 4, !dbg !13887
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13888
  %19 = load i32, i32* %18, align 4, !dbg !13888
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.230(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #27, !dbg !13889
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !13890
  call void @llvm.dbg.value(metadata i32 %20, metadata !13866, metadata !DIExpression()), !dbg !13868
  br label %21, !dbg !13891

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13892
  call void @llvm.dbg.value(metadata i32 %22, metadata !13866, metadata !DIExpression()), !dbg !13868
  ret i32 %22, !dbg !13893
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !13894 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13898, metadata !DIExpression()), !dbg !13899
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.232() #27, !dbg !13900
  %2 = icmp ne i32 %1, 0, !dbg !13902
  call void @llvm.dbg.value(metadata i1 %2, metadata !13898, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13899
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #27, !dbg !13903
  %4 = icmp ne i32 %3, 0, !dbg !13905
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13906
  %6 = zext i1 %5 to i32, !dbg !13906
  call void @llvm.dbg.value(metadata i32 %6, metadata !13898, metadata !DIExpression()), !dbg !13899
  ret i32 %6, !dbg !13907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !13908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13912, metadata !DIExpression()), !dbg !13915
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13913, metadata !DIExpression()), !dbg !13915
  call void @llvm.dbg.value(metadata i32 0, metadata !13914, metadata !DIExpression()), !dbg !13915
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13916
  %4 = load i32, i32* %3, align 4, !dbg !13916
  %5 = and i32 %4, 63, !dbg !13917
  %6 = udiv i32 %0, %5, !dbg !13918
  call void @llvm.dbg.value(metadata i32 %6, metadata !13914, metadata !DIExpression()), !dbg !13915
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13919
  %8 = load i32, i32* %7, align 4, !dbg !13919
  %9 = and i32 %8, 511, !dbg !13920
  %10 = mul i32 %9, %6, !dbg !13921
  call void @llvm.dbg.value(metadata i32 %10, metadata !13914, metadata !DIExpression()), !dbg !13915
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13922
  %12 = load i32, i32* %11, align 4, !dbg !13922
  %13 = lshr i32 %12, 15, !dbg !13923
  %14 = and i32 %13, 131070, !dbg !13923
  %15 = add nuw nsw i32 %14, 2, !dbg !13923
  %16 = udiv i32 %10, %15, !dbg !13924
  call void @llvm.dbg.value(metadata i32 %16, metadata !13914, metadata !DIExpression()), !dbg !13915
  ret i32 %16, !dbg !13925
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.228() unnamed_addr #17 !dbg !13926 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13927
  %2 = lshr i32 %1, 1, !dbg !13928
  %3 = and i32 %2, 1, !dbg !13928
  ret i32 %3, !dbg !13929
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.229() unnamed_addr #16 !dbg !13930 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13931
  %2 = or i32 %1, 1, !dbg !13931
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13931
  ret void, !dbg !13932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.230(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #16 !dbg !13933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13935, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i32 %1, metadata !13936, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i32 %2, metadata !13937, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i32 %3, metadata !13938, metadata !DIExpression()), !dbg !13939
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13940
  %6 = and i32 %5, -4227072, !dbg !13940
  %7 = or i32 %1, %0, !dbg !13940
  %8 = shl i32 %2, 6, !dbg !13940
  %9 = or i32 %7, %8, !dbg !13940
  %10 = or i32 %9, %6, !dbg !13940
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13940
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13941
  %12 = and i32 %11, -196609, !dbg !13941
  %13 = or i32 %12, %3, !dbg !13941
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13941
  ret void, !dbg !13942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !13943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13947, metadata !DIExpression()), !dbg !13951
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13948, metadata !DIExpression()), !dbg !13951
  call void @llvm.dbg.value(metadata i32 0, metadata !13949, metadata !DIExpression()), !dbg !13951
  call void @llvm.dbg.value(metadata i32 0, metadata !13950, metadata !DIExpression()), !dbg !13951
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13952
  %4 = load i32, i32* %3, align 4, !dbg !13952
  %5 = lshr i32 %4, 4, !dbg !13952
  %6 = and i32 %5, 15, !dbg !13952
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13952
  %8 = load i8, i8* %7, align 1, !dbg !13952
  %9 = zext i8 %8 to i32, !dbg !13952
  %10 = lshr i32 %0, %9, !dbg !13952
  call void @llvm.dbg.value(metadata i32 %10, metadata !13950, metadata !DIExpression()), !dbg !13951
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13953
  %12 = icmp ult i32 %11, %10, !dbg !13955
  br i1 %12, label %13, label %16, !dbg !13956

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !13957
  call void @llvm.dbg.value(metadata i32 %14, metadata !13949, metadata !DIExpression()), !dbg !13951
  %15 = icmp eq i32 %14, 0, !dbg !13959
  br i1 %15, label %16, label %30, !dbg !13961

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.231() #27, !dbg !13962
  br label %17, !dbg !13964

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.232() #27, !dbg !13965
  %19 = icmp eq i32 %18, 1, !dbg !13966
  br i1 %19, label %20, label %17, !dbg !13964, !llvm.loop !13967

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13969
  tail call fastcc void @LL_RCC_SetAHBPrescaler.233(i32 noundef %21) #27, !dbg !13970
  tail call fastcc void @LL_RCC_SetSysClkSource.234() #27, !dbg !13971
  br label %22, !dbg !13972

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.235() #27, !dbg !13973
  %24 = icmp eq i32 %23, 8, !dbg !13974
  br i1 %24, label %25, label %22, !dbg !13972, !llvm.loop !13975

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13977
  %27 = load i32, i32* %26, align 4, !dbg !13977
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.236(i32 noundef %27) #27, !dbg !13978
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13979
  %29 = load i32, i32* %28, align 4, !dbg !13979
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.237(i32 noundef %29) #27, !dbg !13980
  br label %30, !dbg !13981

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13982
  %33 = icmp ugt i32 %32, %10, !dbg !13984
  br i1 %33, label %34, label %36, !dbg !13985

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !13986
  call void @llvm.dbg.value(metadata i32 %35, metadata !13949, metadata !DIExpression()), !dbg !13951
  br label %36, !dbg !13988

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13951
  call void @llvm.dbg.value(metadata i32 %37, metadata !13949, metadata !DIExpression()), !dbg !13951
  %38 = icmp eq i32 %37, 0, !dbg !13989
  br i1 %38, label %39, label %40, !dbg !13991

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !13992
  br label %40, !dbg !13994

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.231() unnamed_addr #16 !dbg !13996 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13997
  %2 = or i32 %1, 16777216, !dbg !13997
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13997
  ret void, !dbg !13998
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.232() unnamed_addr #17 !dbg !13999 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14000
  %2 = lshr i32 %1, 25, !dbg !14001
  %3 = and i32 %2, 1, !dbg !14001
  ret i32 %3, !dbg !14002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.233(i32 noundef %0) unnamed_addr #16 !dbg !14003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14005, metadata !DIExpression()), !dbg !14006
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14007
  %3 = and i32 %2, -241, !dbg !14007
  %4 = or i32 %3, %0, !dbg !14007
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14007
  ret void, !dbg !14008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.234() unnamed_addr #16 !dbg !14009 {
  call void @llvm.dbg.value(metadata i32 2, metadata !14011, metadata !DIExpression()), !dbg !14012
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14013
  %2 = and i32 %1, -4, !dbg !14013
  %3 = or i32 %2, 2, !dbg !14013
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14013
  ret void, !dbg !14014
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.235() unnamed_addr #17 !dbg !14015 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14016
  %2 = and i32 %1, 12, !dbg !14016
  ret i32 %2, !dbg !14017
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.236(i32 noundef %0) unnamed_addr #16 !dbg !14018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14020, metadata !DIExpression()), !dbg !14021
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14022
  %3 = and i32 %2, -7169, !dbg !14022
  %4 = or i32 %3, %0, !dbg !14022
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14022
  ret void, !dbg !14023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.237(i32 noundef %0) unnamed_addr #16 !dbg !14024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14026, metadata !DIExpression()), !dbg !14027
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14028
  %3 = and i32 %2, -57345, !dbg !14028
  %4 = or i32 %3, %0, !dbg !14028
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14028
  ret void, !dbg !14029
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !14030 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14031
  %2 = lshr i32 %1, 27, !dbg !14032
  %3 = and i32 %2, 1, !dbg !14032
  ret i32 %3, !dbg !14033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !14034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14038, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.value(metadata i32 %1, metadata !14039, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !14040, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14041, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.value(metadata i32 0, metadata !14042, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.value(metadata i32 0, metadata !14043, metadata !DIExpression()), !dbg !14044
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !14045
  %6 = icmp eq i32 %5, 0, !dbg !14047
  br i1 %6, label %7, label %27, !dbg !14048

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #27, !dbg !14049
  call void @llvm.dbg.value(metadata i32 %8, metadata !14043, metadata !DIExpression()), !dbg !14044
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.238() #27, !dbg !14051
  %10 = icmp eq i32 %9, 1, !dbg !14053
  br i1 %10, label %19, label %11, !dbg !14054

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !14055
  br i1 %12, label %13, label %14, !dbg !14058

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !14059
  br label %15, !dbg !14061

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.239() #27, !dbg !14062
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.240() #27, !dbg !14064
  br label %16, !dbg !14065

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.238() #27, !dbg !14066
  %18 = icmp eq i32 %17, 1, !dbg !14067
  br i1 %18, label %19, label %16, !dbg !14065, !llvm.loop !14068

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !14070
  %21 = load i32, i32* %20, align 4, !dbg !14070
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !14071
  %23 = load i32, i32* %22, align 4, !dbg !14071
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !14072
  %25 = load i32, i32* %24, align 4, !dbg !14072
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.230(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #27, !dbg !14073
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !14074
  call void @llvm.dbg.value(metadata i32 %26, metadata !14042, metadata !DIExpression()), !dbg !14044
  br label %27, !dbg !14075

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !14076
  call void @llvm.dbg.value(metadata i32 %28, metadata !14042, metadata !DIExpression()), !dbg !14044
  ret i32 %28, !dbg !14077
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.238() unnamed_addr #17 !dbg !14078 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14079
  %2 = lshr i32 %1, 17, !dbg !14080
  %3 = and i32 %2, 1, !dbg !14080
  ret i32 %3, !dbg !14081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !14082 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14083
  %2 = or i32 %1, 262144, !dbg !14083
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14083
  ret void, !dbg !14084
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.239() unnamed_addr #16 !dbg !14085 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14086
  %2 = and i32 %1, -262145, !dbg !14086
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14086
  ret void, !dbg !14087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.240() unnamed_addr #16 !dbg !14088 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14089
  %2 = or i32 %1, 65536, !dbg !14089
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14089
  ret void, !dbg !14090
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !14091 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14094, metadata !DIExpression()), !dbg !14110
  call void @llvm.dbg.value(metadata i32 undef, metadata !14094, metadata !DIExpression()), !dbg !14110
  call void @llvm.dbg.value(metadata i32 undef, metadata !14094, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14110
  ret void, !dbg !14111
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14112 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14116, metadata !DIExpression()), !dbg !14118
  %2 = icmp eq i8* %0, null, !dbg !14119
  br i1 %2, label %29, label %3, !dbg !14121

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14122
  %5 = icmp eq i8 %4, 0, !dbg !14123
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14124
  br i1 %6, label %29, label %8, !dbg !14124

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14117, metadata !DIExpression()), !dbg !14118
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14125

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14117, metadata !DIExpression()), !dbg !14118
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !14127
  br i1 %10, label %11, label %15, !dbg !14132

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14133
  %13 = load i8*, i8** %12, align 4, !dbg !14133
  %14 = icmp eq i8* %13, %0, !dbg !14134
  br i1 %14, label %29, label %15, !dbg !14135

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14136
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14117, metadata !DIExpression()), !dbg !14118
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14137
  br i1 %17, label %7, label %8, !dbg !14138, !llvm.loop !14139

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14117, metadata !DIExpression()), !dbg !14118
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !14141
  br i1 %20, label %21, label %26, !dbg !14145

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14146
  %23 = load i8*, i8** %22, align 4, !dbg !14146
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !14147
  %25 = icmp eq i32 %24, 0, !dbg !14148
  br i1 %25, label %29, label %26, !dbg !14149

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14150
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14117, metadata !DIExpression()), !dbg !14118
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14151
  br i1 %28, label %29, label %18, !dbg !14125, !llvm.loop !14152

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14118
  ret %struct.device* %30, !dbg !14154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !14155 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14159, metadata !DIExpression()), !dbg !14160
  %2 = icmp eq %struct.device* %0, null, !dbg !14161
  br i1 %2, label %14, label %3, !dbg !14163

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14164
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14164
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14165
  %7 = load i8, i8* %6, align 1, !dbg !14165
  %8 = and i8 %7, 1, !dbg !14165
  %9 = icmp eq i8 %8, 0, !dbg !14165
  br i1 %9, label %14, label %10, !dbg !14166

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14167
  %12 = load i8, i8* %11, align 1, !dbg !14167
  %13 = icmp eq i8 %12, 0, !dbg !14168
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14160
  ret i1 %15, !dbg !14169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !14170 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14175, metadata !DIExpression()), !dbg !14176
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14177
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14178
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14179 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14187, metadata !DIExpression()), !dbg !14192
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14188, metadata !DIExpression()), !dbg !14192
  call void @llvm.dbg.value(metadata i8* %2, metadata !14189, metadata !DIExpression()), !dbg !14192
  %5 = bitcast i32* %4 to i8*, !dbg !14193
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14193
  call void @llvm.dbg.value(metadata i32 0, metadata !14190, metadata !DIExpression()), !dbg !14192
  store i32 0, i32* %4, align 4, !dbg !14194
  call void @llvm.dbg.value(metadata i32* %4, metadata !14190, metadata !DIExpression(DW_OP_deref)), !dbg !14192
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !14195
  call void @llvm.dbg.value(metadata i16* %6, metadata !14191, metadata !DIExpression()), !dbg !14192
  %7 = load i32, i32* %4, align 4, !dbg !14196
  call void @llvm.dbg.value(metadata i32 %7, metadata !14190, metadata !DIExpression()), !dbg !14192
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !14197
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14198
  ret i32 %8, !dbg !14199
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !14200 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14204, metadata !DIExpression()), !dbg !14210
  call void @llvm.dbg.value(metadata i32* %1, metadata !14205, metadata !DIExpression()), !dbg !14210
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14211
  %4 = load i16*, i16** %3, align 4, !dbg !14211
  call void @llvm.dbg.value(metadata i16* %4, metadata !14206, metadata !DIExpression()), !dbg !14210
  %5 = icmp eq i16* %4, null, !dbg !14212
  br i1 %5, label %14, label %6, !dbg !14213

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14214
  call void @llvm.dbg.value(metadata i32 %7, metadata !14207, metadata !DIExpression()), !dbg !14214
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14215
  %9 = load i16, i16* %8, align 2, !dbg !14215
  %10 = add i16 %9, -32767, !dbg !14216
  %11 = icmp ult i16 %10, 2, !dbg !14216
  %12 = add i32 %7, 1, !dbg !14217
  call void @llvm.dbg.value(metadata i32 %12, metadata !14207, metadata !DIExpression()), !dbg !14214
  br i1 %11, label %13, label %6, !dbg !14216, !llvm.loop !14219

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14222
  br label %14, !dbg !14223

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14224
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14225 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14229, metadata !DIExpression()), !dbg !14240
  call void @llvm.dbg.value(metadata i32 %1, metadata !14230, metadata !DIExpression()), !dbg !14240
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14231, metadata !DIExpression()), !dbg !14240
  call void @llvm.dbg.value(metadata i8* %3, metadata !14232, metadata !DIExpression()), !dbg !14240
  call void @llvm.dbg.value(metadata i32 0, metadata !14233, metadata !DIExpression()), !dbg !14241
  %5 = icmp eq i32 %1, 0, !dbg !14242
  br i1 %5, label %16, label %8, !dbg !14243

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14233, metadata !DIExpression()), !dbg !14241
  %7 = icmp eq i32 %15, %1, !dbg !14242
  br i1 %7, label %16, label %8, !dbg !14243, !llvm.loop !14244

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14233, metadata !DIExpression()), !dbg !14241
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14246
  %11 = load i16, i16* %10, align 2, !dbg !14246
  call void @llvm.dbg.value(metadata i16 %11, metadata !14235, metadata !DIExpression()), !dbg !14247
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !14248
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14238, metadata !DIExpression()), !dbg !14247
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !14249
  call void @llvm.dbg.value(metadata i32 %13, metadata !14239, metadata !DIExpression()), !dbg !14247
  %14 = icmp slt i32 %13, 0, !dbg !14250
  %15 = add nuw i32 %9, 1, !dbg !14252
  call void @llvm.dbg.value(metadata i32 %15, metadata !14233, metadata !DIExpression()), !dbg !14241
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !14254 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14258, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14259, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14260, metadata !DIExpression()), !dbg !14261
  %2 = sext i16 %0 to i32, !dbg !14262
  %3 = icmp slt i16 %0, 1, !dbg !14264
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14265
  %6 = add nsw i32 %2, -1, !dbg !14265
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14265
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14265
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14259, metadata !DIExpression()), !dbg !14261
  ret %struct.device* %8, !dbg !14266
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14267 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14269, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14270, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i8* %2, metadata !14271, metadata !DIExpression()), !dbg !14274
  %5 = bitcast i32* %4 to i8*, !dbg !14275
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14275
  call void @llvm.dbg.value(metadata i32 0, metadata !14272, metadata !DIExpression()), !dbg !14274
  store i32 0, i32* %4, align 4, !dbg !14276
  call void @llvm.dbg.value(metadata i32* %4, metadata !14272, metadata !DIExpression(DW_OP_deref)), !dbg !14274
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !14277
  call void @llvm.dbg.value(metadata i16* %6, metadata !14273, metadata !DIExpression()), !dbg !14274
  %7 = load i32, i32* %4, align 4, !dbg !14278
  call void @llvm.dbg.value(metadata i32 %7, metadata !14272, metadata !DIExpression()), !dbg !14274
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !14279
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14280
  ret i32 %8, !dbg !14281
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !14282 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14284, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.value(metadata i32* %1, metadata !14285, metadata !DIExpression()), !dbg !14289
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14290
  %4 = load i16*, i16** %3, align 4, !dbg !14290
  call void @llvm.dbg.value(metadata i16* %4, metadata !14286, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.value(metadata i32 0, metadata !14287, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.value(metadata i32 0, metadata !14288, metadata !DIExpression()), !dbg !14289
  %5 = icmp eq i16* %4, null, !dbg !14291
  br i1 %5, label %22, label %6, !dbg !14293

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14287, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.value(metadata i16* %8, metadata !14286, metadata !DIExpression()), !dbg !14289
  %9 = load i16, i16* %8, align 2, !dbg !14294
  %10 = icmp eq i16 %9, -32768, !dbg !14298
  call void @llvm.dbg.value(metadata i32 undef, metadata !14287, metadata !DIExpression()), !dbg !14289
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14299
  call void @llvm.dbg.value(metadata i16* %11, metadata !14286, metadata !DIExpression()), !dbg !14289
  %12 = zext i1 %10 to i32, !dbg !14300
  %13 = add i32 %7, %12, !dbg !14300
  call void @llvm.dbg.value(metadata i32 %13, metadata !14287, metadata !DIExpression()), !dbg !14289
  %14 = icmp eq i32 %13, 2, !dbg !14301
  br i1 %14, label %15, label %6, !dbg !14302

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14289
  call void @llvm.dbg.value(metadata i32 %16, metadata !14288, metadata !DIExpression()), !dbg !14289
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14303
  %18 = load i16, i16* %17, align 2, !dbg !14303
  %19 = icmp eq i16 %18, 32767, !dbg !14304
  %20 = add i32 %16, 1, !dbg !14305
  call void @llvm.dbg.value(metadata i32 %20, metadata !14288, metadata !DIExpression()), !dbg !14289
  br i1 %19, label %21, label %15, !dbg !14307, !llvm.loop !14308

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14310
  br label %22, !dbg !14311

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14312
  call void @llvm.dbg.value(metadata i16* %23, metadata !14286, metadata !DIExpression()), !dbg !14289
  ret i16* %23, !dbg !14313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !14314 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14317
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14318
  ret i32* %2, !dbg !14319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !14320 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14471, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14472, metadata !DIExpression()), !dbg !14473
  ret void, !dbg !14474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14479, metadata !DIExpression()), !dbg !14481
  call void @llvm.dbg.value(metadata i32 %1, metadata !14480, metadata !DIExpression()), !dbg !14481
  ret void, !dbg !14482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14483 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14487, metadata !DIExpression()), !dbg !14489
  call void @llvm.dbg.value(metadata i32 %1, metadata !14488, metadata !DIExpression()), !dbg !14489
  ret void, !dbg !14490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14495, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata i8* %1, metadata !14496, metadata !DIExpression()), !dbg !14497
  ret i32 -134, !dbg !14498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14503, metadata !DIExpression()), !dbg !14505
  call void @llvm.dbg.value(metadata i8* %1, metadata !14504, metadata !DIExpression()), !dbg !14505
  ret i32 -134, !dbg !14506
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !14507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14510, metadata !DIExpression()), !dbg !14511
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14512, !srcloc !14518
  call void @llvm.dbg.value(metadata i32 undef, metadata !14515, metadata !DIExpression()) #25, !dbg !14519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14516, metadata !DIExpression()) #25, !dbg !14519
  br label %3, !dbg !14520

3:                                                ; preds = %3, %1
  br label %3, !dbg !14521, !llvm.loop !14524
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14531, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14532, metadata !DIExpression()), !dbg !14533
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.245, i32 0, i32 0), i32 noundef 69) #26, !dbg !14534
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14539
  unreachable, !dbg !14539
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !14540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14542, metadata !DIExpression()), !dbg !14543
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14544
  unreachable, !dbg !14544
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14547, metadata !DIExpression()), !dbg !14551
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14548, metadata !DIExpression()), !dbg !14551
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14552, !srcloc !14518
  call void @llvm.dbg.value(metadata i32 undef, metadata !14515, metadata !DIExpression()) #25, !dbg !14554
  call void @llvm.dbg.value(metadata i32 undef, metadata !14516, metadata !DIExpression()) #25, !dbg !14554
  call void @llvm.dbg.value(metadata i32 undef, metadata !14549, metadata !DIExpression()), !dbg !14551
  %4 = tail call fastcc %struct.k_thread* @k_current_get.248() #28, !dbg !14555
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14550, metadata !DIExpression()), !dbg !14551
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #27, !dbg !14556
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.249, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #26, !dbg !14556
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14561
  br i1 %6, label %13, label %7, !dbg !14563

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14564, metadata !DIExpression()), !dbg !14569
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14571
  %9 = load i32, i32* %8, align 4, !dbg !14571
  %10 = and i32 %9, 511, !dbg !14572
  %11 = icmp eq i32 %10, 0, !dbg !14573
  br i1 %11, label %13, label %12, !dbg !14574

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.250, i32 0, i32 0), i32 noundef 69) #26, !dbg !14575
  br label %13, !dbg !14581

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #27, !dbg !14582
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.251, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #26, !dbg !14582
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !14587
  %15 = icmp eq i32 %0, 4, !dbg !14588
  br i1 %15, label %16, label %17, !dbg !14593

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.254, i32 0, i32 0), i32 noundef 148) #26, !dbg !14594
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.255, i32 0, i32 0)) #26, !dbg !14594
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.254, i32 0, i32 0), i32 noundef 148) #26, !dbg !14594
  unreachable, !dbg !14594

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14552
  call void @llvm.dbg.value(metadata i32 %18, metadata !14515, metadata !DIExpression()) #25, !dbg !14554
  call void @llvm.dbg.value(metadata i32 %18, metadata !14549, metadata !DIExpression()), !dbg !14551
  call void @llvm.dbg.value(metadata i32 undef, metadata !14596, metadata !DIExpression()) #25, !dbg !14599
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !14601, !srcloc !14602
  tail call fastcc void @k_thread_abort.256(%struct.k_thread* noundef %4) #27, !dbg !14603
  ret void, !dbg !14606
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.248() unnamed_addr #11 !dbg !14607 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.264() #28, !dbg !14611
  ret %struct.k_thread* %1, !dbg !14612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !14613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14617, metadata !DIExpression()), !dbg !14618
  %2 = icmp ult i32 %0, 5, !dbg !14619
  br i1 %2, label %3, label %6, !dbg !14619

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14619
  %5 = load i8*, i8** %4, align 4, !dbg !14619
  br label %6, !dbg !14619

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.258, i32 0, i32 0), %1 ], !dbg !14620
  ret i8* %7, !dbg !14622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14623 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14627, metadata !DIExpression()), !dbg !14629
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14630
  br i1 %2, label %9, label %3, !dbg !14631

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #26, !dbg !14632
  call void @llvm.dbg.value(metadata i8* %4, metadata !14628, metadata !DIExpression()), !dbg !14629
  %5 = icmp eq i8* %4, null, !dbg !14633
  br i1 %5, label %9, label %6, !dbg !14635

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14636
  %8 = icmp eq i8 %7, 0, !dbg !14637
  br i1 %8, label %9, label %10, !dbg !14638

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.257, i32 0, i32 0), metadata !14628, metadata !DIExpression()), !dbg !14629
  br label %10, !dbg !14639

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.257, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14629
  call void @llvm.dbg.value(metadata i8* %11, metadata !14628, metadata !DIExpression()), !dbg !14629
  ret i8* %11, !dbg !14641
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.256(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14642 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14646, metadata !DIExpression()), !dbg !14647
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14648, !srcloc !14650
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !14651
  ret void, !dbg !14652
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.264() unnamed_addr #11 !dbg !14653 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14654, !srcloc !14656
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !14657
  ret %struct.k_thread* %1, !dbg !14658
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14659 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14663, metadata !DIExpression()), !dbg !14666
  call void @llvm.dbg.value(metadata i32 %1, metadata !14664, metadata !DIExpression()), !dbg !14666
  call void @llvm.dbg.value(metadata i32 %2, metadata !14665, metadata !DIExpression()), !dbg !14666
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !14667
  ret void, !dbg !14668
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14669 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14673, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata i8* %1, metadata !14674, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata i32 %2, metadata !14675, metadata !DIExpression()), !dbg !14676
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !14677
  ret void, !dbg !14678
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14679 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !14680
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #27, !dbg !14681
  ret void, !dbg !14682
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14685, metadata !DIExpression()), !dbg !14686
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !14687
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14688
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14689
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14690
  %4 = trunc i32 %0 to i8, !dbg !14691
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14692
  store i8 %4, i8* %5, align 4, !dbg !14693
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14694
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !14695
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14696
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14697
  store i8* %8, i8** %9, align 4, !dbg !14698
  ret void, !dbg !14699
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14702, metadata !DIExpression()), !dbg !14708
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14709
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14703, metadata !DIExpression()), !dbg !14708
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14710
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14704, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.value(metadata i8* null, metadata !14707, metadata !DIExpression()), !dbg !14708
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14711
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14712
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #26, !dbg !14713
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !14714
  ret void, !dbg !14715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14716 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14720, metadata !DIExpression()), !dbg !14721
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14722
  ret i8* %2, !dbg !14723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14724 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14729, metadata !DIExpression()), !dbg !14730
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14731
  %3 = load i8, i8* %2, align 1, !dbg !14732
  %4 = and i8 %3, -5, !dbg !14732
  store i8 %4, i8* %2, align 1, !dbg !14732
  ret void, !dbg !14733
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !14734 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !14737
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !14738
  %3 = ptrtoint i8* %2 to i32, !dbg !14747
  %4 = add i32 %3, 2048, !dbg !14748
  call void @llvm.dbg.value(metadata i32 %4, metadata !14742, metadata !DIExpression()) #25, !dbg !14749
  call void @llvm.dbg.value(metadata i32 %4, metadata !14750, metadata !DIExpression()) #25, !dbg !14753
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !14755, !srcloc !14756
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14757
  %6 = or i32 %5, 512, !dbg !14757
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14757
  tail call fastcc void @__NVIC_SetPriority.273(i32 noundef -2, i32 noundef 255) #26, !dbg !14758
  tail call fastcc void @__NVIC_SetPriority.273(i32 noundef -5, i32 noundef 0) #26, !dbg !14761
  tail call fastcc void @__NVIC_SetPriority.273(i32 noundef -12, i32 noundef 0) #26, !dbg !14762
  tail call fastcc void @__NVIC_SetPriority.273(i32 noundef -11, i32 noundef 0) #26, !dbg !14763
  tail call fastcc void @__NVIC_SetPriority.273(i32 noundef -10, i32 noundef 0) #26, !dbg !14764
  tail call fastcc void @__NVIC_SetPriority.273(i32 noundef -4, i32 noundef 0) #26, !dbg !14765
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14766
  %8 = or i32 %7, 458752, !dbg !14766
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14766
  tail call void @z_arm_fault_init() #26, !dbg !14767
  tail call void @z_arm_cpu_idle_init() #26, !dbg !14768
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14769
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14772
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !14773
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !14774
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14775
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !14775
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14736, metadata !DIExpression()), !dbg !14776
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !14777
  call void @z_device_state_init() #26, !dbg !14778
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !14779
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !14780
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !14781
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !14782
  unreachable, !dbg !14782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2536, metadata !DIExpression()), !dbg !14783
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14784
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14784
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2537, metadata !DIExpression()), !dbg !14783
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2537, metadata !DIExpression()), !dbg !14783
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14785
  br i1 %7, label %8, label %35, !dbg !14786

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2537, metadata !DIExpression()), !dbg !14783
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14787
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14787
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2547, metadata !DIExpression()), !dbg !14788
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14789
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14789
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !14790
  call void @llvm.dbg.value(metadata i32 %14, metadata !2551, metadata !DIExpression()), !dbg !14788
  %15 = icmp eq %struct.device* %11, null, !dbg !14791
  br i1 %15, label %32, label %16, !dbg !14793

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14794
  br i1 %17, label %26, label %18, !dbg !14797

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14798
  call void @llvm.dbg.value(metadata i32 %19, metadata !2551, metadata !DIExpression()), !dbg !14788
  %20 = icmp ult i32 %19, 255, !dbg !14800
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14800
  call void @llvm.dbg.value(metadata i32 %21, metadata !2551, metadata !DIExpression()), !dbg !14788
  %22 = trunc i32 %21 to i8, !dbg !14801
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14802
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14802
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14803
  store i8 %22, i8* %25, align 1, !dbg !14804
  br label %26, !dbg !14805

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14806
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14806
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14807
  %30 = load i8, i8* %29, align 1, !dbg !14808
  %31 = or i8 %30, 1, !dbg !14808
  store i8 %31, i8* %29, align 1, !dbg !14808
  br label %32, !dbg !14809

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14810
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2537, metadata !DIExpression()), !dbg !14783
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14785
  br i1 %34, label %8, label %35, !dbg !14786, !llvm.loop !14811

35:                                               ; preds = %32, %1
  ret void, !dbg !14813
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.273(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !14814 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14816, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i32 %1, metadata !14817, metadata !DIExpression()), !dbg !14818
  %3 = trunc i32 %1 to i8, !dbg !14819
  %4 = shl i8 %3, 4, !dbg !14819
  %5 = and i32 %0, 15, !dbg !14822
  %6 = add nsw i32 %5, -4, !dbg !14823
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14824
  store volatile i8 %4, i8* %7, align 1, !dbg !14825
  ret void, !dbg !14826
}

; Function Attrs: optsize
declare !dbg !14827 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14828 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14831, metadata !DIExpression()), !dbg !14832
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14833
  store i8 1, i8* %2, align 1, !dbg !14834
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14835
  store i8 1, i8* %3, align 4, !dbg !14836
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14837
  store i32 0, i32* %4, align 4, !dbg !14838
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14839
  store i32 0, i32* %5, align 4, !dbg !14840
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #26, !dbg !14841
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14842
  ret void, !dbg !14843
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14844 {
  tail call void @z_sched_init() #26, !dbg !14849
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14850
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.274, i32 0, i32 0)) #26, !dbg !14851
  call void @llvm.dbg.value(metadata i8* %1, metadata !14848, metadata !DIExpression()), !dbg !14852
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14853
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !14854
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !14855
  ret i8* %1, !dbg !14856
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !14857 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14861, metadata !DIExpression()), !dbg !14862
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !14863
  unreachable, !dbg !14864
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14865 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14867, metadata !DIExpression()), !dbg !14870
  call void @llvm.dbg.value(metadata i8* %1, metadata !14868, metadata !DIExpression()), !dbg !14870
  call void @llvm.dbg.value(metadata i8* %2, metadata !14869, metadata !DIExpression()), !dbg !14870
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14871
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !14872
  tail call void @boot_banner() #26, !dbg !14873
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !14874
  tail call void @z_init_static_threads() #26, !dbg !14875
  tail call void @main() #26, !dbg !14876
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14877
  %5 = and i8 %4, -2, !dbg !14877
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14877
  ret void, !dbg !14878
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14879 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14889, metadata !DIExpression()), !dbg !14891
  call void @llvm.dbg.value(metadata i8* %1, metadata !14890, metadata !DIExpression()), !dbg !14891
  ret void, !dbg !14892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14893 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14895, metadata !DIExpression()), !dbg !14897
  call void @llvm.dbg.value(metadata i8* %1, metadata !14896, metadata !DIExpression()), !dbg !14897
  ret void, !dbg !14898
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14899 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14900, !srcloc !14907
  call void @llvm.dbg.value(metadata i32 %1, metadata !14903, metadata !DIExpression()) #25, !dbg !14908
  %2 = icmp ne i32 %1, 0, !dbg !14909
  ret i1 %2, !dbg !14910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !14911 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14912
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14913
  %3 = load i8, i8* %2, align 4, !dbg !14914
  %4 = or i8 %3, 1, !dbg !14914
  store i8 %4, i8* %2, align 4, !dbg !14914
  ret void, !dbg !14915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !14916 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14917
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14918
  %3 = load i8, i8* %2, align 4, !dbg !14919
  %4 = and i8 %3, -2, !dbg !14919
  store i8 %4, i8* %2, align 4, !dbg !14919
  ret void, !dbg !14920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !14921 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14922
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14923
  %3 = load i8, i8* %2, align 4, !dbg !14923
  %4 = and i8 %3, 1, !dbg !14924
  %5 = icmp ne i8 %4, 0, !dbg !14925
  ret i1 %5, !dbg !14926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14927 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14931, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata i8* %1, metadata !14932, metadata !DIExpression()), !dbg !14933
  ret i32 -88, !dbg !14934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14935 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14939, metadata !DIExpression()), !dbg !14940
  ret i8* null, !dbg !14941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14942 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14946, metadata !DIExpression()), !dbg !14949
  call void @llvm.dbg.value(metadata i8* %1, metadata !14947, metadata !DIExpression()), !dbg !14949
  call void @llvm.dbg.value(metadata i32 %2, metadata !14948, metadata !DIExpression()), !dbg !14949
  ret i32 -88, !dbg !14950
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2560 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2676, metadata !DIExpression()), !dbg !14951
  call void @llvm.dbg.value(metadata i8* %1, metadata !2677, metadata !DIExpression()), !dbg !14951
  call void @llvm.dbg.value(metadata i32 %2, metadata !2678, metadata !DIExpression()), !dbg !14951
  call void @llvm.dbg.value(metadata i32 0, metadata !2679, metadata !DIExpression()), !dbg !14951
  call void @llvm.dbg.value(metadata i8 undef, metadata !2681, metadata !DIExpression()), !dbg !14951
  %4 = icmp eq i8* %1, null, !dbg !14952
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14954
  br i1 %6, label %46, label %7, !dbg !14954

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14955
  %9 = load i8, i8* %8, align 1, !dbg !14955
  call void @llvm.dbg.value(metadata i8 %9, metadata !2681, metadata !DIExpression()), !dbg !14951
  %10 = add i32 %2, -1, !dbg !14956
  call void @llvm.dbg.value(metadata i32 %10, metadata !2678, metadata !DIExpression()), !dbg !14951
  call void @llvm.dbg.value(metadata i8 0, metadata !2682, metadata !DIExpression()), !dbg !14957
  call void @llvm.dbg.value(metadata i8 %9, metadata !2681, metadata !DIExpression()), !dbg !14951
  call void @llvm.dbg.value(metadata i32 0, metadata !2679, metadata !DIExpression()), !dbg !14951
  %11 = icmp eq i8 %9, 0, !dbg !14958
  br i1 %11, label %12, label %15, !dbg !14960

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14961
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14962
  store i8 0, i8* %14, align 1, !dbg !14963
  br label %46, !dbg !14964

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2682, metadata !DIExpression()), !dbg !14957
  call void @llvm.dbg.value(metadata i8 %17, metadata !2681, metadata !DIExpression()), !dbg !14951
  call void @llvm.dbg.value(metadata i32 %18, metadata !2679, metadata !DIExpression()), !dbg !14951
  %19 = zext i8 %17 to i32, !dbg !14965
  %20 = zext i8 %16 to i32, !dbg !14966
  %21 = shl nuw i32 1, %20, !dbg !14966
  call void @llvm.dbg.value(metadata i32 %21, metadata !2680, metadata !DIExpression()), !dbg !14951
  %22 = and i32 %21, %19, !dbg !14968
  %23 = icmp eq i32 %22, 0, !dbg !14970
  br i1 %23, label %42, label %24, !dbg !14971

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14972
  %26 = sub i32 %10, %18, !dbg !14973
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14974
  %28 = load i8*, i8** %27, align 4, !dbg !14974
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14975
  %30 = load i32, i32* %29, align 4, !dbg !14975
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !14976
  %32 = add i32 %31, %18, !dbg !14977
  call void @llvm.dbg.value(metadata i32 %32, metadata !2679, metadata !DIExpression()), !dbg !14951
  %33 = trunc i32 %21 to i8, !dbg !14978
  %34 = xor i8 %33, -1, !dbg !14978
  %35 = and i8 %17, %34, !dbg !14978
  call void @llvm.dbg.value(metadata i8 %35, metadata !2681, metadata !DIExpression()), !dbg !14951
  %36 = icmp eq i8 %35, 0, !dbg !14979
  br i1 %36, label %12, label %37, !dbg !14981

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14982
  %39 = sub i32 %10, %32, !dbg !14984
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.279, i32 0, i32 0), i32 noundef 1) #27, !dbg !14985
  %41 = add i32 %40, %32, !dbg !14986
  call void @llvm.dbg.value(metadata i32 %41, metadata !2679, metadata !DIExpression()), !dbg !14951
  br label %42, !dbg !14987

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14951
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14951
  call void @llvm.dbg.value(metadata i8 %44, metadata !2681, metadata !DIExpression()), !dbg !14951
  call void @llvm.dbg.value(metadata i32 %43, metadata !2679, metadata !DIExpression()), !dbg !14951
  %45 = add i8 %16, 1, !dbg !14988
  call void @llvm.dbg.value(metadata i8 %45, metadata !2682, metadata !DIExpression()), !dbg !14957
  br label %15, !dbg !14960

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.280, i32 0, i32 0), %3 ], !dbg !14951
  ret i8* %47, !dbg !14989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14990 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14994, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i32 %1, metadata !14995, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i8* %2, metadata !14996, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i32 %3, metadata !14997, metadata !DIExpression()), !dbg !14999
  %5 = icmp ult i32 %1, %3, !dbg !15000
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !15000
  call void @llvm.dbg.value(metadata i32 %6, metadata !14998, metadata !DIExpression()), !dbg !14999
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !15001
  ret i32 %6, !dbg !15002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15003 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15007, metadata !DIExpression()), !dbg !15008
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !15009
  ret void, !dbg !15010
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !15011 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15020, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15021, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.value(metadata i32 %2, metadata !15022, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15023, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.value(metadata i8* %4, metadata !15024, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.value(metadata i8* %5, metadata !15025, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.value(metadata i8* %6, metadata !15026, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.value(metadata i32 %7, metadata !15027, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.value(metadata i32 %8, metadata !15028, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.value(metadata i8* undef, metadata !15029, metadata !DIExpression()), !dbg !15031
  %11 = icmp eq i32 %7, 15, !dbg !15032
  br i1 %11, label %12, label %15, !dbg !15032

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !15032
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #27, !dbg !15032
  br i1 %14, label %19, label %18, !dbg !15032

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !15032
  %17 = icmp ult i32 %16, 31, !dbg !15032
  br i1 %17, label %19, label %18, !dbg !15032

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.292, i32 0, i32 0), i32 noundef 536) #26, !dbg !15036
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.293, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #26, !dbg !15036
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.292, i32 0, i32 0), i32 noundef 536) #26, !dbg !15036
  unreachable, !dbg !15036

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15038
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #27, !dbg !15039
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !15040
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !15041
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !15042
  call void @llvm.dbg.value(metadata i8* %22, metadata !15030, metadata !DIExpression()), !dbg !15031
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !15043
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !15044
  store i8* null, i8** %23, align 4, !dbg !15045
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15046
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !15046
  br i1 %25, label %29, label %26, !dbg !15048

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !15049
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !15049
  br label %29, !dbg !15050

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !15031
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15051
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !15053
  ret i8* %22, !dbg !15054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !15055 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15059, metadata !DIExpression()), !dbg !15060
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !15061
  ret i1 %2, !dbg !15062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !15063 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15068, metadata !DIExpression()), !dbg !15069
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15070
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !15071
  ret void, !dbg !15072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !15073 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15078, metadata !DIExpression()), !dbg !15082
  call void @llvm.dbg.value(metadata i32 %1, metadata !15079, metadata !DIExpression()), !dbg !15082
  call void @llvm.dbg.value(metadata i32 %2, metadata !15080, metadata !DIExpression()), !dbg !15082
  call void @llvm.dbg.value(metadata i32 %3, metadata !15081, metadata !DIExpression()), !dbg !15082
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !15083
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !15084
  %6 = trunc i32 %3 to i8, !dbg !15085
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !15086
  store i8 %6, i8* %7, align 4, !dbg !15087
  %8 = trunc i32 %2 to i8, !dbg !15088
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !15089
  store i8 %8, i8* %9, align 1, !dbg !15090
  %10 = trunc i32 %1 to i8, !dbg !15091
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !15092
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !15092
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !15092
  store i8 %10, i8* %13, align 2, !dbg !15093
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !15094
  store i8 0, i8* %14, align 1, !dbg !15095
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !15096
  ret void, !dbg !15097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !15098 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15102, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15103, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata i32 %2, metadata !15104, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata i32 0, metadata !15109, metadata !DIExpression()), !dbg !15110
  %4 = add i32 %2, 7, !dbg !15111
  %5 = and i32 %4, -8, !dbg !15111
  %6 = add i32 %5, 64, !dbg !15111
  call void @llvm.dbg.value(metadata i32 %6, metadata !15105, metadata !DIExpression()), !dbg !15110
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.294(%struct.z_thread_stack_element* noundef %1) #27, !dbg !15113
  call void @llvm.dbg.value(metadata i8* %7, metadata !15108, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata i32 %5, metadata !15106, metadata !DIExpression()), !dbg !15110
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !15114
  call void @llvm.dbg.value(metadata i8* %8, metadata !15107, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata i32 0, metadata !15109, metadata !DIExpression()), !dbg !15110
  %9 = ptrtoint i8* %7 to i32, !dbg !15115
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15116
  store i32 %9, i32* %10, align 4, !dbg !15117
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15118
  store i32 %5, i32* %11, align 4, !dbg !15119
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !15120
  store i32 0, i32* %12, align 4, !dbg !15121
  call void @llvm.dbg.value(metadata i8* %8, metadata !15107, metadata !DIExpression()), !dbg !15110
  ret i8* %8, !dbg !15122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.294(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !15123 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15127, metadata !DIExpression()), !dbg !15128
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15129
  ret i8* %2, !dbg !15130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15131 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15136, metadata !DIExpression()), !dbg !15137
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !15138
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !15139
  ret void, !dbg !15140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15141 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15143, metadata !DIExpression()), !dbg !15144
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15145
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !15146
  ret void, !dbg !15147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15148 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15152, metadata !DIExpression()), !dbg !15153
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15154
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15155
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15156
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15157
  ret void, !dbg !15158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15159 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15164, metadata !DIExpression()), !dbg !15165
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15166
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15167
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15168
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15169
  ret void, !dbg !15170
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !15171 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15188, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15179, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15180, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata i32 %2, metadata !15181, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15182, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata i8* %4, metadata !15183, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata i8* %5, metadata !15184, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata i8* %6, metadata !15185, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata i32 %7, metadata !15186, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata i32 %8, metadata !15187, metadata !DIExpression()), !dbg !15189
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15190, !srcloc !14907
  call void @llvm.dbg.value(metadata i32 %11, metadata !14903, metadata !DIExpression()) #25, !dbg !15195
  %12 = icmp eq i32 %11, 0, !dbg !15196
  br i1 %12, label %14, label %13, !dbg !15197

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.292, i32 0, i32 0), i32 noundef 647) #26, !dbg !15198
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.296, i32 0, i32 0)) #26, !dbg !15198
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.292, i32 0, i32 0), i32 noundef 647) #26, !dbg !15198
  unreachable, !dbg !15198

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !15188, metadata !DIExpression()), !dbg !15189
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !15200
  %17 = icmp eq i64 %15, -1, !dbg !15201
  br i1 %17, label %19, label %18, !dbg !15203

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !15204
  br label %19, !dbg !15206

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !15207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15208 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15213, metadata !DIExpression()), !dbg !15214
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15212, metadata !DIExpression()), !dbg !15214
  %4 = icmp eq i64 %3, 0, !dbg !15215
  br i1 %4, label %5, label %6, !dbg !15217

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !15218
  br label %7, !dbg !15220

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !15221
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15228, metadata !DIExpression()), !dbg !15229
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15230, !srcloc !15232
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !15233
  ret void, !dbg !15234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15235 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15238, metadata !DIExpression()), !dbg !15239
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15237, metadata !DIExpression()), !dbg !15239
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15240
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !15241
  ret void, !dbg !15242
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !15243 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15245, metadata !DIExpression()), !dbg !15264
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !15265

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.292, i32 0, i32 0), i32 noundef 750) #26, !dbg !15269
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.300, i32 0, i32 0)) #26, !dbg !15269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.292, i32 0, i32 0), i32 noundef 750) #26, !dbg !15269
  unreachable, !dbg !15269

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !15245, metadata !DIExpression()), !dbg !15264
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15272
  br i1 %4, label %6, label %5, !dbg !15273

5:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !15274
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15262, metadata !DIExpression()), !dbg !15275
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !15276

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !15280
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !15280
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !15282
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !15282
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !15283
  %12 = load i32, i32* %11, align 4, !dbg !15283
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !15284
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !15284
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !15285
  %16 = load i8*, i8** %15, align 4, !dbg !15285
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !15286
  %18 = load i8*, i8** %17, align 4, !dbg !15286
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !15287
  %20 = load i8*, i8** %19, align 4, !dbg !15287
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !15288
  %22 = load i32, i32* %21, align 4, !dbg !15288
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !15289
  %24 = load i32, i32* %23, align 4, !dbg !15289
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #27, !dbg !15290
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !15291
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !15292
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !15293
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !15293
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !15294
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !15245, metadata !DIExpression()), !dbg !15264
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15295
  br i1 %30, label %1, label %2, !dbg !15265, !llvm.loop !15296

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.292, i32 0, i32 0), i32 noundef 781) #26, !dbg !15298
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.300, i32 0, i32 0)) #26, !dbg !15298
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.292, i32 0, i32 0), i32 noundef 781) #26, !dbg !15298
  unreachable, !dbg !15298

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !15262, metadata !DIExpression()), !dbg !15275
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15301
  br i1 %34, label %36, label %35, !dbg !15302

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #26, !dbg !15303
  ret void, !dbg !15304

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !15305
  %38 = load i32, i32* %37, align 4, !dbg !15305
  %39 = icmp eq i32 %38, -1, !dbg !15308
  br i1 %39, label %48, label %40, !dbg !15309

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !15310
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !15310
  %43 = icmp sgt i32 %38, 0, !dbg !15312
  %44 = select i1 %43, i32 %38, i32 0, !dbg !15312
  %45 = zext i32 %44 to i64, !dbg !15312
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64.301(i64 noundef %45) #27, !dbg !15312
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !15313
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #27, !dbg !15313
  br label %48, !dbg !15314

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !15315
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !15262, metadata !DIExpression()), !dbg !15275
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15316
  br i1 %50, label %31, label %32, !dbg !15276, !llvm.loop !15317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.301(i64 noundef %0) unnamed_addr #4 !dbg !15319 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15321, metadata !DIExpression()), !dbg !15322
  call void @llvm.dbg.value(metadata i64 %0, metadata !15323, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i32 1000, metadata !15326, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i32 10000, metadata !15327, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i8 1, metadata !15328, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i8 0, metadata !15329, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i8 1, metadata !15330, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i8 0, metadata !15331, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i8 1, metadata !15332, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i8 0, metadata !15333, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i64 0, metadata !15334, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i64 0, metadata !15334, metadata !DIExpression()), !dbg !15338
  %2 = mul i64 %0, 10, !dbg !15340
  ret i64 %2, !dbg !15346
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !15347 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15349, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.value(metadata i8* %1, metadata !15350, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.value(metadata i8* %2, metadata !15351, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.value(metadata i8* %3, metadata !15352, metadata !DIExpression()), !dbg !15353
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15354
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15355
  %7 = load i8, i8* %6, align 4, !dbg !15356
  %8 = or i8 %7, 4, !dbg !15356
  store i8 %8, i8* %6, align 4, !dbg !15356
  tail call void @z_thread_essential_clear() #27, !dbg !15357
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !15358
  unreachable, !dbg !15358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15359 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15364, metadata !DIExpression()), !dbg !15366
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !15367
  %3 = load i32, i32* %2, align 4, !dbg !15367
  call void @llvm.dbg.value(metadata i32 %3, metadata !15365, metadata !DIExpression()), !dbg !15366
  %4 = icmp eq i32 %3, 0, !dbg !15368
  br i1 %4, label %10, label %5, !dbg !15370

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !15371
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15374
  %8 = zext i8 %7 to i32, !dbg !15375
  %9 = icmp eq i32 %6, %8, !dbg !15376
  br i1 %9, label %11, label %10, !dbg !15377

10:                                               ; preds = %5, %1
  br label %11, !dbg !15378

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !15366
  ret i1 %12, !dbg !15379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !15380 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15382, metadata !DIExpression()), !dbg !15383
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !15384
  %3 = load i32, i32* %2, align 4, !dbg !15384
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15386
  %5 = zext i8 %4 to i32, !dbg !15387
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15388
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !15389
  %8 = or i32 %7, %5, !dbg !15390
  %9 = icmp eq i32 %3, %8, !dbg !15391
  br i1 %9, label %10, label %11, !dbg !15392

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !15393
  br label %11, !dbg !15394

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !15395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !15396 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15400, metadata !DIExpression()), !dbg !15401
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15402
  %3 = zext i8 %2 to i32, !dbg !15403
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15404
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !15405
  %6 = or i32 %5, %3, !dbg !15406
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !15407
  store i32 %6, i32* %7, align 4, !dbg !15408
  ret void, !dbg !15409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !15410 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15414, metadata !DIExpression()), !dbg !15415
  ret i32 -134, !dbg !15416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !15417 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15421, metadata !DIExpression()), !dbg !15423
  call void @llvm.dbg.value(metadata i32 %1, metadata !15422, metadata !DIExpression()), !dbg !15423
  ret i32 -134, !dbg !15424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !15425 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15432, metadata !DIExpression()), !dbg !15434
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !15433, metadata !DIExpression()), !dbg !15434
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15435
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !15437
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15434
  ret i32 %6, !dbg !15438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !15439 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !15443, metadata !DIExpression()), !dbg !15444
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !15445
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15444
  ret i32 %3, !dbg !15447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15448 {
  tail call void @sys_clock_idle_exit() #26, !dbg !15450
  ret void, !dbg !15451
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !15452 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15454, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata i8* %1, metadata !15455, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata i8* %2, metadata !15456, metadata !DIExpression()), !dbg !15457
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15458
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15458
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15458
  %7 = load i8, i8* %6, align 2, !dbg !15458
  %8 = icmp sgt i8 %7, -1, !dbg !15458
  br i1 %8, label %10, label %9, !dbg !15461

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.312, i32 0, i32 0), i32 noundef 39) #26, !dbg !15462
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.312, i32 0, i32 0), i32 noundef 39) #26, !dbg !15462
  unreachable, !dbg !15462

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15464, !srcloc !15471
  call void @llvm.dbg.value(metadata i32 undef, metadata !15467, metadata !DIExpression()) #25, !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !15468, metadata !DIExpression()) #25, !dbg !15472
  tail call fastcc void @k_cpu_idle() #27, !dbg !15473
  br label %10, !dbg !15474, !llvm.loop !15475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15477 {
  tail call void @arch_cpu_idle() #26, !dbg !15478
  ret void, !dbg !15479
}

; Function Attrs: optsize
declare !dbg !15480 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !15481 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15499, metadata !DIExpression()), !dbg !15503
  call void @llvm.dbg.value(metadata i8* %1, metadata !15500, metadata !DIExpression()), !dbg !15503
  call void @llvm.dbg.value(metadata i32 %2, metadata !15501, metadata !DIExpression()), !dbg !15503
  call void @llvm.dbg.value(metadata i32 %3, metadata !15502, metadata !DIExpression()), !dbg !15503
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15504
  store i32 %2, i32* %5, align 4, !dbg !15505
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15506
  store i32 %3, i32* %6, align 4, !dbg !15507
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15508
  store i8* %1, i8** %7, align 4, !dbg !15509
  %8 = mul i32 %3, %2, !dbg !15510
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !15511
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15512
  store i8* %9, i8** %10, align 4, !dbg !15513
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15514
  store i8* %1, i8** %11, align 4, !dbg !15515
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15516
  store i8* %1, i8** %12, align 4, !dbg !15517
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15518
  store i32 0, i32* %13, align 4, !dbg !15519
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15520
  store i8 0, i8* %14, align 4, !dbg !15521
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15522
  tail call fastcc void @z_waitq_init.313(%struct._wait_q_t* noundef %15) #27, !dbg !15523
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !15524
  store i32 0, i32* %16, align 4, !dbg !15524
  ret void, !dbg !15525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.313(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !15526 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15530, metadata !DIExpression()), !dbg !15531
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15532
  tail call fastcc void @sys_dlist_init.314(%struct._dnode* noundef %2) #27, !dbg !15533
  ret void, !dbg !15534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.314(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15535 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15540, metadata !DIExpression()), !dbg !15541
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15542
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15543
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15544
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15545
  ret void, !dbg !15546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15547 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15551, metadata !DIExpression()), !dbg !15557
  call void @llvm.dbg.value(metadata i32 %1, metadata !15552, metadata !DIExpression()), !dbg !15557
  call void @llvm.dbg.value(metadata i32 %2, metadata !15553, metadata !DIExpression()), !dbg !15557
  %5 = bitcast i32* %4 to i8*, !dbg !15558
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15558
  call void @llvm.dbg.value(metadata i32* %4, metadata !15556, metadata !DIExpression(DW_OP_deref)), !dbg !15557
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !15559
  br i1 %6, label %13, label %7, !dbg !15561

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !15562
  call void @llvm.dbg.value(metadata i32 %8, metadata !15556, metadata !DIExpression()), !dbg !15557
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #27, !dbg !15564
  call void @llvm.dbg.value(metadata i8* %9, metadata !15554, metadata !DIExpression()), !dbg !15557
  %10 = icmp eq i8* %9, null, !dbg !15565
  br i1 %10, label %13, label %11, !dbg !15567

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #27, !dbg !15568
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15570
  store i8 1, i8* %12, align 4, !dbg !15571
  call void @llvm.dbg.value(metadata i32 0, metadata !15555, metadata !DIExpression()), !dbg !15557
  br label %13, !dbg !15572

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !15573
  call void @llvm.dbg.value(metadata i32 %14, metadata !15555, metadata !DIExpression()), !dbg !15557
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15574
  ret i32 %14, !dbg !15575
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !15576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15581, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i32 %1, metadata !15582, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i32* %2, metadata !15583, metadata !DIExpression()), !dbg !15584
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !15585
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !15585
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !15585
  store i32 %6, i32* %2, align 4, !dbg !15585
  ret i1 %5, !dbg !15586
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !15587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15591, metadata !DIExpression()), !dbg !15592
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #26, !dbg !15593
  ret i8* %2, !dbg !15594
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15595 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15599, metadata !DIExpression()), !dbg !15600
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15601
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #27, !dbg !15601
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15601
  br i1 %4, label %5, label %15, !dbg !15603

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15604
  %7 = load i8, i8* %6, align 4, !dbg !15604
  %8 = and i8 %7, 1, !dbg !15606
  %9 = icmp eq i8 %8, 0, !dbg !15607
  br i1 %9, label %15, label %10, !dbg !15608

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15609
  %12 = load i8*, i8** %11, align 4, !dbg !15609
  tail call void @k_free(i8* noundef %12) #26, !dbg !15611
  %13 = load i8, i8* %6, align 4, !dbg !15612
  %14 = and i8 %13, -2, !dbg !15612
  store i8 %14, i8* %6, align 4, !dbg !15612
  br label %15, !dbg !15613

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !15600
  ret i32 %16, !dbg !15614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15615 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15619, metadata !DIExpression()), !dbg !15620
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15621
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !15622
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15623
  ret %struct.k_thread* %4, !dbg !15624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15625 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15629, metadata !DIExpression()), !dbg !15630
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !15631
  br i1 %2, label %6, label %3, !dbg !15631

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15632
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15632
  br label %6, !dbg !15631

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15631
  ret %struct._dnode* %7, !dbg !15633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15634 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15638, metadata !DIExpression()), !dbg !15639
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15640
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15640
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15641
  ret i1 %4, !dbg !15642
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15643 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15653, metadata !DIExpression()), !dbg !15661
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15651, metadata !DIExpression()), !dbg !15661
  call void @llvm.dbg.value(metadata i8* %1, metadata !15652, metadata !DIExpression()), !dbg !15661
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15662, !srcloc !15671
  call void @llvm.dbg.value(metadata i32 %5, metadata !15665, metadata !DIExpression()) #25, !dbg !15672
  %6 = icmp eq i32 %5, 0, !dbg !15673
  %7 = icmp eq i64 %4, 0, !dbg !15674
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15674
  br i1 %8, label %10, label %9, !dbg !15674

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.319, i32 0, i32 0), i32 noundef 118) #26, !dbg !15675
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.320, i32 0, i32 0)) #26, !dbg !15675
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.319, i32 0, i32 0), i32 noundef 118) #26, !dbg !15675
  unreachable, !dbg !15675

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15678, metadata !DIExpression()) #25, !dbg !15685
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15687, !srcloc !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()) #25, !dbg !15694
  call void @llvm.dbg.value(metadata i32 undef, metadata !15691, metadata !DIExpression()) #25, !dbg !15694
  call void @llvm.dbg.value(metadata i32 undef, metadata !15684, metadata !DIExpression()) #25, !dbg !15685
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !15695
  br i1 %13, label %15, label %14, !dbg !15698

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 148) #26, !dbg !15699
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !15699
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 148) #26, !dbg !15699
  unreachable, !dbg !15699

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15687
  call void @llvm.dbg.value(metadata i32 %16, metadata !15690, metadata !DIExpression()) #25, !dbg !15694
  call void @llvm.dbg.value(metadata i32 %16, metadata !15684, metadata !DIExpression()) #25, !dbg !15685
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !15701
  call void @llvm.dbg.value(metadata i32 %16, metadata !15655, metadata !DIExpression()), !dbg !15661
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15702
  %18 = load i32, i32* %17, align 4, !dbg !15702
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15704
  %20 = load i32, i32* %19, align 4, !dbg !15704
  %21 = icmp ult i32 %18, %20, !dbg !15705
  br i1 %21, label %22, label %52, !dbg !15706

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15707
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %23) #26, !dbg !15709
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15654, metadata !DIExpression()), !dbg !15661
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !15710
  br i1 %25, label %34, label %26, !dbg !15712

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !15713
  %28 = load i8*, i8** %27, align 4, !dbg !15713
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15715
  %30 = load i32, i32* %29, align 4, !dbg !15715
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #26, !dbg !15716
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15717, metadata !DIExpression()), !dbg !15723
  call void @llvm.dbg.value(metadata i32 0, metadata !15722, metadata !DIExpression()), !dbg !15723
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 7, i32 1, !dbg !15725
  store i32 0, i32* %32, align 4, !dbg !15726
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #26, !dbg !15727
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15728
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #26, !dbg !15728
  br label %64, !dbg !15729

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15730
  %36 = load i8*, i8** %35, align 4, !dbg !15730
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15732
  %38 = load i32, i32* %37, align 4, !dbg !15732
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #26, !dbg !15733
  %40 = load i32, i32* %37, align 4, !dbg !15734
  %41 = load i8*, i8** %35, align 4, !dbg !15735
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !15735
  store i8* %42, i8** %35, align 4, !dbg !15735
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15736
  %44 = load i8*, i8** %43, align 4, !dbg !15736
  %45 = icmp eq i8* %42, %44, !dbg !15738
  br i1 %45, label %46, label %49, !dbg !15739

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15740
  %48 = load i8*, i8** %47, align 4, !dbg !15740
  store i8* %48, i8** %35, align 4, !dbg !15742
  br label %49, !dbg !15743

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !15744
  %51 = add i32 %50, 1, !dbg !15744
  store i32 %51, i32* %17, align 4, !dbg !15744
  call void @llvm.dbg.value(metadata i32 0, metadata !15660, metadata !DIExpression()), !dbg !15661
  br label %59, !dbg !15745

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !15746

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15747
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !15750
  store i8* %1, i8** %55, align 4, !dbg !15751
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15752
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15753
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %struct._wait_q_t* noundef %56, [1 x i64] %2) #26, !dbg !15753
  call void @llvm.dbg.value(metadata i32 %58, metadata !15660, metadata !DIExpression()), !dbg !15661
  br label %64, !dbg !15754

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !15755
  call void @llvm.dbg.value(metadata i32 %60, metadata !15660, metadata !DIExpression()), !dbg !15661
  call void @llvm.dbg.value(metadata i32 undef, metadata !15756, metadata !DIExpression()) #25, !dbg !15762
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15761, metadata !DIExpression()) #25, !dbg !15762
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !15764
  br i1 %61, label %63, label %62, !dbg !15767

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 194) #26, !dbg !15768
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !15768
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 194) #26, !dbg !15768
  unreachable, !dbg !15768

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !15756, metadata !DIExpression()) #25, !dbg !15762
  call void @llvm.dbg.value(metadata i32 %16, metadata !15770, metadata !DIExpression()) #25, !dbg !15773
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !15775, !srcloc !15776
  br label %64, !dbg !15777

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !15661
  ret i32 %65, !dbg !15778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !15779 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15789, metadata !DIExpression()), !dbg !15791
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15790, metadata !DIExpression()), !dbg !15791
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15792
  %4 = load i32, i32* %3, align 4, !dbg !15792
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15793
  store i32 %4, i32* %5, align 4, !dbg !15794
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15795
  %7 = load i32, i32* %6, align 4, !dbg !15795
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15796
  store i32 %7, i32* %8, align 4, !dbg !15797
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15798
  %10 = load i32, i32* %9, align 4, !dbg !15798
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15799
  store i32 %10, i32* %11, align 4, !dbg !15800
  ret void, !dbg !15801
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15802 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15808, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15806, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata i8* %1, metadata !15807, metadata !DIExpression()), !dbg !15812
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15813, !srcloc !15671
  call void @llvm.dbg.value(metadata i32 %5, metadata !15665, metadata !DIExpression()) #25, !dbg !15818
  %6 = icmp eq i32 %5, 0, !dbg !15819
  %7 = icmp eq i64 %4, 0, !dbg !15820
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15820
  br i1 %8, label %10, label %9, !dbg !15820

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.319, i32 0, i32 0), i32 noundef 208) #26, !dbg !15821
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.320, i32 0, i32 0)) #26, !dbg !15821
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.319, i32 0, i32 0), i32 noundef 208) #26, !dbg !15821
  unreachable, !dbg !15821

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15678, metadata !DIExpression()) #25, !dbg !15824
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15826, !srcloc !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()) #25, !dbg !15828
  call void @llvm.dbg.value(metadata i32 undef, metadata !15691, metadata !DIExpression()) #25, !dbg !15828
  call void @llvm.dbg.value(metadata i32 undef, metadata !15684, metadata !DIExpression()) #25, !dbg !15824
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !15829
  br i1 %13, label %15, label %14, !dbg !15830

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 148) #26, !dbg !15831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !15831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 148) #26, !dbg !15831
  unreachable, !dbg !15831

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15826
  call void @llvm.dbg.value(metadata i32 %16, metadata !15690, metadata !DIExpression()) #25, !dbg !15828
  call void @llvm.dbg.value(metadata i32 %16, metadata !15684, metadata !DIExpression()) #25, !dbg !15824
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !15832
  call void @llvm.dbg.value(metadata i32 %16, metadata !15809, metadata !DIExpression()), !dbg !15812
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15833
  %18 = load i32, i32* %17, align 4, !dbg !15833
  %19 = icmp eq i32 %18, 0, !dbg !15835
  br i1 %19, label %61, label %20, !dbg !15836

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15837
  %22 = load i8*, i8** %21, align 4, !dbg !15837
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15839
  %24 = load i32, i32* %23, align 4, !dbg !15839
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #26, !dbg !15840
  %26 = load i32, i32* %23, align 4, !dbg !15841
  %27 = load i8*, i8** %21, align 4, !dbg !15842
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !15842
  store i8* %28, i8** %21, align 4, !dbg !15842
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15843
  %30 = load i8*, i8** %29, align 4, !dbg !15843
  %31 = icmp eq i8* %28, %30, !dbg !15845
  br i1 %31, label %32, label %35, !dbg !15846

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15847
  %34 = load i8*, i8** %33, align 4, !dbg !15847
  store i8* %34, i8** %21, align 4, !dbg !15849
  br label %35, !dbg !15850

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !15851
  %37 = add i32 %36, -1, !dbg !15851
  store i32 %37, i32* %17, align 4, !dbg !15851
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15852
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %38) #26, !dbg !15853
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15810, metadata !DIExpression()), !dbg !15812
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !15854
  br i1 %40, label %68, label %41, !dbg !15856

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15857
  %43 = load i8*, i8** %42, align 4, !dbg !15857
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !15859
  %45 = load i8*, i8** %44, align 4, !dbg !15859
  %46 = load i32, i32* %23, align 4, !dbg !15860
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #26, !dbg !15861
  %48 = load i32, i32* %23, align 4, !dbg !15862
  %49 = load i8*, i8** %42, align 4, !dbg !15863
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !15863
  store i8* %50, i8** %42, align 4, !dbg !15863
  %51 = load i8*, i8** %29, align 4, !dbg !15864
  %52 = icmp eq i8* %50, %51, !dbg !15866
  br i1 %52, label %53, label %56, !dbg !15867

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15868
  %55 = load i8*, i8** %54, align 4, !dbg !15868
  store i8* %55, i8** %42, align 4, !dbg !15870
  br label %56, !dbg !15871

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !15872
  %58 = add i32 %57, 1, !dbg !15872
  store i32 %58, i32* %17, align 4, !dbg !15872
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15717, metadata !DIExpression()), !dbg !15873
  call void @llvm.dbg.value(metadata i32 0, metadata !15722, metadata !DIExpression()), !dbg !15873
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 7, i32 1, !dbg !15875
  store i32 0, i32* %59, align 4, !dbg !15876
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #26, !dbg !15877
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15878
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #26, !dbg !15878
  br label %73, !dbg !15879

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !15880

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15881
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !15884
  store i8* %1, i8** %64, align 4, !dbg !15885
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15886
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15887
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %struct._wait_q_t* noundef %65, [1 x i64] %2) #26, !dbg !15887
  call void @llvm.dbg.value(metadata i32 %67, metadata !15811, metadata !DIExpression()), !dbg !15812
  br label %73, !dbg !15888

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !15889
  call void @llvm.dbg.value(metadata i32 %69, metadata !15811, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata i32 undef, metadata !15756, metadata !DIExpression()) #25, !dbg !15890
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15761, metadata !DIExpression()) #25, !dbg !15890
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !15892
  br i1 %70, label %72, label %71, !dbg !15893

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 194) #26, !dbg !15894
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !15894
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 194) #26, !dbg !15894
  unreachable, !dbg !15894

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !15756, metadata !DIExpression()) #25, !dbg !15890
  call void @llvm.dbg.value(metadata i32 %16, metadata !15770, metadata !DIExpression()) #25, !dbg !15895
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !15897, !srcloc !15776
  br label %73, !dbg !15898

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !15812
  ret i32 %74, !dbg !15899
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15900 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15904, metadata !DIExpression()), !dbg !15908
  call void @llvm.dbg.value(metadata i8* %1, metadata !15905, metadata !DIExpression()), !dbg !15908
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15909
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15678, metadata !DIExpression()) #25, !dbg !15910
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15912, !srcloc !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()) #25, !dbg !15914
  call void @llvm.dbg.value(metadata i32 undef, metadata !15691, metadata !DIExpression()) #25, !dbg !15914
  call void @llvm.dbg.value(metadata i32 undef, metadata !15684, metadata !DIExpression()) #25, !dbg !15910
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !15915
  br i1 %5, label %7, label %6, !dbg !15916

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 148) #26, !dbg !15917
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !15917
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 148) #26, !dbg !15917
  unreachable, !dbg !15917

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()) #25, !dbg !15914
  call void @llvm.dbg.value(metadata i32 undef, metadata !15684, metadata !DIExpression()) #25, !dbg !15910
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !15918
  call void @llvm.dbg.value(metadata i32 undef, metadata !15906, metadata !DIExpression()), !dbg !15908
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15919
  %9 = load i32, i32* %8, align 4, !dbg !15919
  %10 = icmp eq i32 %9, 0, !dbg !15921
  br i1 %10, label %17, label %11, !dbg !15922

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15923
  %13 = load i8*, i8** %12, align 4, !dbg !15923
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15925
  %15 = load i32, i32* %14, align 4, !dbg !15925
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #26, !dbg !15926
  call void @llvm.dbg.value(metadata i32 0, metadata !15907, metadata !DIExpression()), !dbg !15908
  br label %17, !dbg !15927

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !15928
  call void @llvm.dbg.value(metadata i32 %18, metadata !15907, metadata !DIExpression()), !dbg !15908
  call void @llvm.dbg.value(metadata i32 undef, metadata !15756, metadata !DIExpression()) #25, !dbg !15929
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15761, metadata !DIExpression()) #25, !dbg !15929
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !15931
  br i1 %19, label %21, label %20, !dbg !15932

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 194) #26, !dbg !15933
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !15933
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 194) #26, !dbg !15933
  unreachable, !dbg !15933

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !15912
  call void @llvm.dbg.value(metadata i32 %22, metadata !15690, metadata !DIExpression()) #25, !dbg !15914
  call void @llvm.dbg.value(metadata i32 %22, metadata !15684, metadata !DIExpression()) #25, !dbg !15910
  call void @llvm.dbg.value(metadata i32 %22, metadata !15906, metadata !DIExpression()), !dbg !15908
  call void @llvm.dbg.value(metadata i32 undef, metadata !15756, metadata !DIExpression()) #25, !dbg !15929
  call void @llvm.dbg.value(metadata i32 undef, metadata !15770, metadata !DIExpression()) #25, !dbg !15934
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #25, !dbg !15936, !srcloc !15776
  ret i32 %18, !dbg !15937
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15938 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15942, metadata !DIExpression()), !dbg !15945
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15946
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !15678, metadata !DIExpression()) #25, !dbg !15947
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15949, !srcloc !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()) #25, !dbg !15951
  call void @llvm.dbg.value(metadata i32 undef, metadata !15691, metadata !DIExpression()) #25, !dbg !15951
  call void @llvm.dbg.value(metadata i32 undef, metadata !15684, metadata !DIExpression()) #25, !dbg !15947
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #26, !dbg !15952
  br i1 %4, label %6, label %5, !dbg !15953

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 148) #26, !dbg !15954
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #26, !dbg !15954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.322, i32 0, i32 0), i32 noundef 148) #26, !dbg !15954
  unreachable, !dbg !15954

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()) #25, !dbg !15951
  call void @llvm.dbg.value(metadata i32 undef, metadata !15684, metadata !DIExpression()) #25, !dbg !15947
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #26, !dbg !15955
  call void @llvm.dbg.value(metadata i32 undef, metadata !15943, metadata !DIExpression()), !dbg !15945
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #26, !dbg !15956
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15944, metadata !DIExpression()), !dbg !15945
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15957
  br i1 %9, label %15, label %10, !dbg !15958

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15717, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata i32 -35, metadata !15722, metadata !DIExpression()), !dbg !15959
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 7, i32 1, !dbg !15962
  store i32 -35, i32* %12, align 4, !dbg !15963
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #26, !dbg !15964
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #26, !dbg !15956
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15944, metadata !DIExpression()), !dbg !15945
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !15957
  br i1 %14, label %15, label %10, !dbg !15958, !llvm.loop !15965

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !15949
  call void @llvm.dbg.value(metadata i32 %16, metadata !15690, metadata !DIExpression()) #25, !dbg !15951
  call void @llvm.dbg.value(metadata i32 %16, metadata !15684, metadata !DIExpression()) #25, !dbg !15947
  call void @llvm.dbg.value(metadata i32 %16, metadata !15943, metadata !DIExpression()), !dbg !15945
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15967
  store i32 0, i32* %17, align 4, !dbg !15968
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15969
  %19 = load i8*, i8** %18, align 4, !dbg !15969
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15970
  store i8* %19, i8** %20, align 4, !dbg !15971
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15972
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #26, !dbg !15972
  ret void, !dbg !15973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !15974 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15985, metadata !DIExpression()), !dbg !15986
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15987
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !15988
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15989
  store i32 0, i32* %3, align 4, !dbg !15990
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15991
  tail call fastcc void @z_waitq_init.328(%struct._wait_q_t* noundef %4) #27, !dbg !15992
  ret i32 0, !dbg !15993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.328(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !15994 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15998, metadata !DIExpression()), !dbg !15999
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16000
  tail call fastcc void @sys_dlist_init.329(%struct._dnode* noundef %2) #27, !dbg !16001
  ret void, !dbg !16002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.329(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16003 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16008, metadata !DIExpression()), !dbg !16009
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16010
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16011
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16012
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16013
  ret void, !dbg !16014
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16015 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16024, metadata !DIExpression()), !dbg !16036
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16023, metadata !DIExpression()), !dbg !16036
  call void @llvm.dbg.value(metadata i8 0, metadata !16031, metadata !DIExpression()), !dbg !16036
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16037, !srcloc !16046
  call void @llvm.dbg.value(metadata i32 %4, metadata !16040, metadata !DIExpression()) #25, !dbg !16047
  %5 = icmp eq i32 %4, 0, !dbg !16048
  br i1 %5, label %7, label %6, !dbg !16049

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 101) #26, !dbg !16050
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.335, i32 0, i32 0)) #26, !dbg !16050
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 101) #26, !dbg !16050
  unreachable, !dbg !16050

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.336, metadata !16052, metadata !DIExpression()) #25, !dbg !16059
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16061, !srcloc !16067
  call void @llvm.dbg.value(metadata i32 undef, metadata !16064, metadata !DIExpression()) #25, !dbg !16068
  call void @llvm.dbg.value(metadata i32 undef, metadata !16065, metadata !DIExpression()) #25, !dbg !16068
  call void @llvm.dbg.value(metadata i32 undef, metadata !16058, metadata !DIExpression()) #25, !dbg !16059
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16069
  br i1 %9, label %11, label %10, !dbg !16072

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 148) #26, !dbg !16073
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.339, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16073
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 148) #26, !dbg !16073
  unreachable, !dbg !16073

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !16061
  call void @llvm.dbg.value(metadata i32 %12, metadata !16064, metadata !DIExpression()) #25, !dbg !16068
  call void @llvm.dbg.value(metadata i32 %12, metadata !16058, metadata !DIExpression()) #25, !dbg !16059
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16075
  call void @llvm.dbg.value(metadata i32 %12, metadata !16026, metadata !DIExpression()), !dbg !16036
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !16076
  %14 = load i32, i32* %13, align 4, !dbg !16076
  %15 = icmp eq i32 %14, 0, !dbg !16076
  br i1 %15, label %21, label %16, !dbg !16076

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16076
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !16076
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16076
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !16076
  br i1 %20, label %27, label %39, !dbg !16078, !prof !16079

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16080
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !16082
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !16082
  %25 = load i8, i8* %24, align 2, !dbg !16082
  %26 = sext i8 %25 to i32, !dbg !16080
  br label %30, !dbg !16083

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16084
  %29 = load i32, i32* %28, align 4, !dbg !16084
  br label %30, !dbg !16083

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !16085
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !16083
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16086
  store i32 %32, i32* %33, align 4, !dbg !16087
  %34 = add i32 %14, 1, !dbg !16088
  store i32 %34, i32* %13, align 4, !dbg !16088
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16089
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !16090
  call void @llvm.dbg.value(metadata i32 undef, metadata !16091, metadata !DIExpression()) #25, !dbg !16097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.336, metadata !16096, metadata !DIExpression()) #25, !dbg !16097
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16099
  br i1 %36, label %38, label %37, !dbg !16102

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 194) #26, !dbg !16103
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16103
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 194) #26, !dbg !16103
  unreachable, !dbg !16103

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !16091, metadata !DIExpression()) #25, !dbg !16097
  call void @llvm.dbg.value(metadata i32 %12, metadata !16105, metadata !DIExpression()) #25, !dbg !16108
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16110, !srcloc !16111
  br label %97, !dbg !16112

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !16113
  br i1 %40, label %41, label %45, !dbg !16115, !prof !16116

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !16091, metadata !DIExpression()) #25, !dbg !16117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.336, metadata !16096, metadata !DIExpression()) #25, !dbg !16117
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16120
  br i1 %42, label %44, label %43, !dbg !16121

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 194) #26, !dbg !16122
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16122
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 194) #26, !dbg !16122
  unreachable, !dbg !16122

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !16091, metadata !DIExpression()) #25, !dbg !16117
  call void @llvm.dbg.value(metadata i32 %12, metadata !16105, metadata !DIExpression()) #25, !dbg !16123
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16125, !srcloc !16111
  br label %97, !dbg !16126

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !16127
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !16127
  %48 = load i8, i8* %47, align 2, !dbg !16127
  %49 = sext i8 %48 to i32, !dbg !16128
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !16129
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !16129
  %52 = load i8, i8* %51, align 2, !dbg !16129
  %53 = sext i8 %52 to i32, !dbg !16130
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #27, !dbg !16131
  call void @llvm.dbg.value(metadata i32 %54, metadata !16025, metadata !DIExpression()), !dbg !16036
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #27, !dbg !16132
  br i1 %55, label %56, label %58, !dbg !16134

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #27, !dbg !16135
  call void @llvm.dbg.value(metadata i1 %57, metadata !16031, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16036
  br label %58, !dbg !16137

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !16031, metadata !DIExpression()), !dbg !16036
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !16138
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !16139
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.336, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #26, !dbg !16139
  call void @llvm.dbg.value(metadata i32 %62, metadata !16032, metadata !DIExpression()), !dbg !16036
  %63 = icmp eq i32 %62, 0, !dbg !16140
  br i1 %63, label %97, label %64, !dbg !16142

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.336, metadata !16052, metadata !DIExpression()) #25, !dbg !16143
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16145, !srcloc !16067
  call void @llvm.dbg.value(metadata i32 undef, metadata !16064, metadata !DIExpression()) #25, !dbg !16147
  call void @llvm.dbg.value(metadata i32 undef, metadata !16065, metadata !DIExpression()) #25, !dbg !16147
  call void @llvm.dbg.value(metadata i32 undef, metadata !16058, metadata !DIExpression()) #25, !dbg !16143
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16148
  br i1 %66, label %68, label %67, !dbg !16149

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 148) #26, !dbg !16150
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.339, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16150
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 148) #26, !dbg !16150
  unreachable, !dbg !16150

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !16145
  call void @llvm.dbg.value(metadata i32 %69, metadata !16064, metadata !DIExpression()) #25, !dbg !16147
  call void @llvm.dbg.value(metadata i32 %69, metadata !16058, metadata !DIExpression()) #25, !dbg !16143
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16151
  call void @llvm.dbg.value(metadata i32 %69, metadata !16026, metadata !DIExpression()), !dbg !16036
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !16152
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !16152
  br i1 %71, label %90, label %72, !dbg !16153, !prof !16116

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head.342(%struct._wait_q_t* noundef nonnull %60) #27, !dbg !16154
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !16033, metadata !DIExpression()), !dbg !16155
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !16156
  br i1 %74, label %83, label %75, !dbg !16157

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !16158
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !16158
  %78 = load i8, i8* %77, align 2, !dbg !16158
  %79 = sext i8 %78 to i32, !dbg !16159
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16160
  %81 = load i32, i32* %80, align 4, !dbg !16160
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #27, !dbg !16161
  br label %86, !dbg !16157

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16162
  %85 = load i32, i32* %84, align 4, !dbg !16162
  br label %86, !dbg !16157

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !16157
  call void @llvm.dbg.value(metadata i32 %87, metadata !16025, metadata !DIExpression()), !dbg !16036
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #27, !dbg !16163
  %89 = select i1 %88, i1 true, i1 %59, !dbg !16164
  call void @llvm.dbg.value(metadata i1 %89, metadata !16031, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16036
  call void @llvm.dbg.value(metadata i8 poison, metadata !16031, metadata !DIExpression()), !dbg !16036
  br i1 %89, label %91, label %93, !dbg !16165

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !16031, metadata !DIExpression()), !dbg !16036
  br i1 %59, label %91, label %93, !dbg !16165

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !16166
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.336, [1 x i32] %92) #26, !dbg !16166
  br label %97, !dbg !16169

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !16091, metadata !DIExpression()) #25, !dbg !16170
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.336, metadata !16096, metadata !DIExpression()) #25, !dbg !16170
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16173
  br i1 %94, label %96, label %95, !dbg !16174

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 194) #26, !dbg !16175
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16175
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 194) #26, !dbg !16175
  unreachable, !dbg !16175

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !16091, metadata !DIExpression()) #25, !dbg !16170
  call void @llvm.dbg.value(metadata i32 %69, metadata !16105, metadata !DIExpression()) #25, !dbg !16176
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #25, !dbg !16178, !srcloc !16111
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !16036
  ret i32 %98, !dbg !16179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !16180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16184, metadata !DIExpression()), !dbg !16187
  call void @llvm.dbg.value(metadata i32 %1, metadata !16185, metadata !DIExpression()), !dbg !16187
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #27, !dbg !16188
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !16188
  call void @llvm.dbg.value(metadata i32 %4, metadata !16186, metadata !DIExpression()), !dbg !16187
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #27, !dbg !16189
  call void @llvm.dbg.value(metadata i32 %5, metadata !16186, metadata !DIExpression()), !dbg !16187
  ret i32 %5, !dbg !16190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !16191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16195, metadata !DIExpression()), !dbg !16197
  call void @llvm.dbg.value(metadata i32 %1, metadata !16196, metadata !DIExpression()), !dbg !16197
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !16198
  ret i1 %3, !dbg !16199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !16200 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16204, metadata !DIExpression()), !dbg !16206
  call void @llvm.dbg.value(metadata i32 %1, metadata !16205, metadata !DIExpression()), !dbg !16206
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16207
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !16207
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !16209
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !16209
  %7 = load i8, i8* %6, align 2, !dbg !16209
  %8 = sext i8 %7 to i32, !dbg !16210
  %9 = icmp eq i32 %8, %1, !dbg !16211
  br i1 %9, label %12, label %10, !dbg !16212

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #26, !dbg !16213
  br label %12, !dbg !16215

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !16206
  ret i1 %13, !dbg !16216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.342(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !16217 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16221, metadata !DIExpression()), !dbg !16222
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16223
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.343(%struct._dnode* noundef %2) #27, !dbg !16224
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16225
  ret %struct.k_thread* %4, !dbg !16226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.343(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16227 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16231, metadata !DIExpression()), !dbg !16232
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.344(%struct._dnode* noundef %0) #27, !dbg !16233
  br i1 %2, label %6, label %3, !dbg !16233

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16234
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16234
  br label %6, !dbg !16233

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16233
  ret %struct._dnode* %7, !dbg !16235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.344(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16236 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16240, metadata !DIExpression()), !dbg !16241
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16242
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16242
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16243
  ret i1 %4, !dbg !16244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !16245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16247, metadata !DIExpression()), !dbg !16249
  call void @llvm.dbg.value(metadata i32 %1, metadata !16248, metadata !DIExpression()), !dbg !16249
  %3 = icmp slt i32 %0, %1, !dbg !16250
  ret i1 %3, !dbg !16251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !16252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16254, metadata !DIExpression()), !dbg !16255
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #27, !dbg !16256
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !16256
  ret i32 %3, !dbg !16257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !16258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16262, metadata !DIExpression()), !dbg !16263
  %2 = icmp sgt i32 %0, -128, !dbg !16264
  ret i1 %2, !dbg !16265
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !16266 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16268, metadata !DIExpression()), !dbg !16272
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16273, !srcloc !16046
  call void @llvm.dbg.value(metadata i32 %2, metadata !16040, metadata !DIExpression()) #25, !dbg !16278
  %3 = icmp eq i32 %2, 0, !dbg !16279
  br i1 %3, label %5, label %4, !dbg !16280

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 205) #26, !dbg !16281
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.335, i32 0, i32 0)) #26, !dbg !16281
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 205) #26, !dbg !16281
  unreachable, !dbg !16281

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16283
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !16283
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16283
  br i1 %8, label %41, label %9, !dbg !16285

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16286
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !16286
  br i1 %11, label %12, label %41, !dbg !16288

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !16289
  %14 = load i32, i32* %13, align 4, !dbg !16289
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !16292

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 229) #26, !dbg !16293
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 229) #26, !dbg !16293
  unreachable, !dbg !16293

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !16295
  store i32 %17, i32* %13, align 4, !dbg !16295
  br label %41, !dbg !16298

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.336, metadata !16052, metadata !DIExpression()) #25, !dbg !16299
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16301, !srcloc !16067
  call void @llvm.dbg.value(metadata i32 undef, metadata !16064, metadata !DIExpression()) #25, !dbg !16303
  call void @llvm.dbg.value(metadata i32 undef, metadata !16065, metadata !DIExpression()) #25, !dbg !16303
  call void @llvm.dbg.value(metadata i32 undef, metadata !16058, metadata !DIExpression()) #25, !dbg !16299
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16304
  br i1 %20, label %22, label %21, !dbg !16305

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 148) #26, !dbg !16306
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.339, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16306
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 148) #26, !dbg !16306
  unreachable, !dbg !16306

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !16301
  call void @llvm.dbg.value(metadata i32 %23, metadata !16064, metadata !DIExpression()) #25, !dbg !16303
  call void @llvm.dbg.value(metadata i32 %23, metadata !16058, metadata !DIExpression()) #25, !dbg !16299
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16307
  call void @llvm.dbg.value(metadata i32 %23, metadata !16270, metadata !DIExpression()), !dbg !16272
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16308
  %25 = load i32, i32* %24, align 4, !dbg !16308
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #27, !dbg !16309
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !16310
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #26, !dbg !16311
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !16269, metadata !DIExpression()), !dbg !16272
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !16312
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !16313
  br i1 %29, label %37, label %30, !dbg !16315

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !16316
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !16316
  %33 = load i8, i8* %32, align 2, !dbg !16316
  %34 = sext i8 %33 to i32, !dbg !16318
  store i32 %34, i32* %24, align 4, !dbg !16319
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !16320, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i32 0, metadata !16325, metadata !DIExpression()), !dbg !16326
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 7, i32 1, !dbg !16328
  store i32 0, i32* %35, align 4, !dbg !16329
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #26, !dbg !16330
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !16331
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.336, [1 x i32] %36) #26, !dbg !16331
  br label %41, !dbg !16332

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !16333
  call void @llvm.dbg.value(metadata i32 undef, metadata !16091, metadata !DIExpression()) #25, !dbg !16335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.336, metadata !16096, metadata !DIExpression()) #25, !dbg !16335
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16337
  br i1 %38, label %40, label %39, !dbg !16338

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 194) #26, !dbg !16339
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.336) #26, !dbg !16339
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.338, i32 0, i32 0), i32 noundef 194) #26, !dbg !16339
  unreachable, !dbg !16339

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !16091, metadata !DIExpression()) #25, !dbg !16335
  call void @llvm.dbg.value(metadata i32 %23, metadata !16105, metadata !DIExpression()) #25, !dbg !16340
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !16342, !srcloc !16111
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !16272
  ret i32 %42, !dbg !16343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !16344 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16348, metadata !DIExpression()), !dbg !16352
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16349, metadata !DIExpression()), !dbg !16352
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16353
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !16353
  %5 = load i8, i8* %4, align 2, !dbg !16353
  call void @llvm.dbg.value(metadata i8 %5, metadata !16350, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16352
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16354
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !16354
  %8 = load i8, i8* %7, align 2, !dbg !16354
  call void @llvm.dbg.value(metadata i8 %8, metadata !16351, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16352
  %9 = icmp eq i8 %8, %5, !dbg !16355
  %10 = sext i8 %5 to i32, !dbg !16357
  %11 = sext i8 %8 to i32, !dbg !16357
  %12 = sub nsw i32 %11, %10, !dbg !16357
  %13 = select i1 %9, i32 0, i32 %12, !dbg !16357
  ret i32 %13, !dbg !16358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !16359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16363, metadata !DIExpression()), !dbg !16364
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !16365
  %3 = icmp eq i32 %2, 0, !dbg !16367
  br i1 %3, label %8, label %4, !dbg !16368

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !16369
  %6 = add i32 %5, %2, !dbg !16371
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16372
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !16373
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !16374
  br label %8, !dbg !16375

8:                                                ; preds = %4, %1
  ret void, !dbg !16376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !16377 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16381, metadata !DIExpression()), !dbg !16383
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !16384
  call void @llvm.dbg.value(metadata i32 %1, metadata !16382, metadata !DIExpression()), !dbg !16383
  ret i32 %1, !dbg !16385
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16390, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i32 %1, metadata !16391, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i32 0, metadata !16392, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !16408
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16410, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !16408
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16418
  br i1 %4, label %6, label %5, !dbg !16421

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !16422
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16422
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !16422
  unreachable, !dbg !16422

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !16408
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16424
  call void @llvm.dbg.value(metadata i32 undef, metadata !16398, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()), !dbg !16400
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16425
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !16428
  %8 = icmp sgt i32 %0, 0, !dbg !16429
  %9 = icmp sgt i32 %7, 2, !dbg !16431
  %10 = select i1 %9, i32 %7, i32 2, !dbg !16431
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !16431
  store i32 %11, i32* @slice_ticks, align 4, !dbg !16432
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !16433
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16434
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !16441
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16443
  br i1 %12, label %14, label %13, !dbg !16446

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !16447
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16447
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !16447
  unreachable, !dbg !16447

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !16410
  call void @llvm.dbg.value(metadata i32 %15, metadata !16413, metadata !DIExpression()) #25, !dbg !16417
  call void @llvm.dbg.value(metadata i32 %15, metadata !16407, metadata !DIExpression()) #25, !dbg !16408
  call void @llvm.dbg.value(metadata i32 %15, metadata !16398, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16441
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !16452
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !16454, !srcloc !16455
  call void @llvm.dbg.value(metadata i32 1, metadata !16392, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()), !dbg !16400
  ret void, !dbg !16456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !16457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16459, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata i32 %0, metadata !16461, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16476
  call void @llvm.dbg.value(metadata i32 1000, metadata !16464, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.value(metadata i32 10000, metadata !16465, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.value(metadata i8 1, metadata !16466, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.value(metadata i1 true, metadata !16467, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16476
  call void @llvm.dbg.value(metadata i1 true, metadata !16468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16476
  call void @llvm.dbg.value(metadata i8 0, metadata !16469, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.value(metadata i1 true, metadata !16470, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16476
  call void @llvm.dbg.value(metadata i1 false, metadata !16471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16476
  call void @llvm.dbg.value(metadata i64 0, metadata !16472, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.value(metadata i64 0, metadata !16472, metadata !DIExpression()), !dbg !16476
  %2 = mul i32 %0, 10, !dbg !16478
  ret i32 %2, !dbg !16484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !16485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16487, metadata !DIExpression()), !dbg !16489
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !16490
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16492, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !16490
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16495
  br i1 %3, label %5, label %4, !dbg !16496

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !16497
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16497
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !16497
  unreachable, !dbg !16497

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16492
  call void @llvm.dbg.value(metadata i32 %6, metadata !16413, metadata !DIExpression()) #25, !dbg !16494
  call void @llvm.dbg.value(metadata i32 %6, metadata !16407, metadata !DIExpression()) #25, !dbg !16490
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16498
  call void @llvm.dbg.value(metadata i32 %6, metadata !16488, metadata !DIExpression()), !dbg !16489
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16499
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16501
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !16502
  br i1 %9, label %10, label %14, !dbg !16503

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16504
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !16506
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16508
  br i1 %11, label %13, label %12, !dbg !16509

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !16510
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16510
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !16510
  unreachable, !dbg !16510

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !16435, metadata !DIExpression()) #25, !dbg !16506
  call void @llvm.dbg.value(metadata i32 %6, metadata !16449, metadata !DIExpression()) #25, !dbg !16511
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16513, !srcloc !16455
  br label %33, !dbg !16514

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16515
  %15 = tail call fastcc i32 @slice_time() #27, !dbg !16516
  %16 = icmp eq i32 %15, 0, !dbg !16516
  br i1 %16, label %27, label %17, !dbg !16518

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #27, !dbg !16519
  br i1 %18, label %19, label %27, !dbg !16520

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16521
  %21 = icmp sgt i32 %20, %0, !dbg !16524
  br i1 %21, label %25, label %22, !dbg !16525

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16526
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #27, !dbg !16526
  call void @llvm.dbg.value(metadata i32 %24, metadata !16488, metadata !DIExpression()), !dbg !16489
  br label %28, !dbg !16528

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !16529
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16529
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16531
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !16489
  call void @llvm.dbg.value(metadata i32 %29, metadata !16488, metadata !DIExpression()), !dbg !16489
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !16533
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16535
  br i1 %30, label %32, label %31, !dbg !16536

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !16537
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16537
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !16537
  unreachable, !dbg !16537

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !16435, metadata !DIExpression()) #25, !dbg !16533
  call void @llvm.dbg.value(metadata i32 %29, metadata !16449, metadata !DIExpression()) #25, !dbg !16538
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #25, !dbg !16540, !srcloc !16455
  br label %33, !dbg !16541

33:                                               ; preds = %32, %13
  ret void, !dbg !16541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !16542 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16546, metadata !DIExpression()), !dbg !16548
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !16549
  %3 = icmp eq i32 %2, 0, !dbg !16549
  br i1 %3, label %16, label %4, !dbg !16550

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !16551
  br i1 %5, label %16, label %6, !dbg !16552

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16553
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !16553
  %9 = load i8, i8* %8, align 2, !dbg !16553
  %10 = sext i8 %9 to i32, !dbg !16554
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !16555
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.361(i32 noundef %10, i32 noundef %11) #27, !dbg !16556
  br i1 %12, label %16, label %13, !dbg !16557

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !16558
  %15 = xor i1 %14, true, !dbg !16559
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !16548
  call void @llvm.dbg.value(metadata i1 %17, metadata !16547, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16548
  ret i1 %17, !dbg !16560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !16561 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16565, metadata !DIExpression()), !dbg !16567
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16568
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16566, metadata !DIExpression()), !dbg !16567
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !16569
  br i1 %3, label %5, label %4, !dbg !16571

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !16572
  br label %5, !dbg !16574

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !16565, metadata !DIExpression()), !dbg !16567
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16575
  ret i32 %6, !dbg !16576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16577 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16579, metadata !DIExpression()), !dbg !16581
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16582
  %3 = load i8, i8* %2, align 1, !dbg !16582
  call void @llvm.dbg.value(metadata i8 %3, metadata !16580, metadata !DIExpression()), !dbg !16581
  %4 = and i8 %3, 31, !dbg !16583
  %5 = icmp ne i8 %4, 0, !dbg !16584
  ret i1 %5, !dbg !16585
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16586 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16588, metadata !DIExpression()), !dbg !16589
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !16590
  br i1 %2, label %3, label %7, !dbg !16592

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16593, metadata !DIExpression()) #25, !dbg !16596
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16599
  %5 = load i8, i8* %4, align 1, !dbg !16600
  %6 = and i8 %5, 127, !dbg !16600
  store i8 %6, i8* %4, align 1, !dbg !16600
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16601, metadata !DIExpression()) #25, !dbg !16604
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16608
  br label %7, !dbg !16609

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16610, metadata !DIExpression()) #25, !dbg !16613
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16615
  %9 = load i8, i8* %8, align 1, !dbg !16616
  %10 = or i8 %9, -128, !dbg !16616
  store i8 %10, i8* %8, align 1, !dbg !16616
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16617, metadata !DIExpression()) #25, !dbg !16620
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16624, metadata !DIExpression()) #25, !dbg !16632
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16630, metadata !DIExpression()) #25, !dbg !16632
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !16634
  br i1 %11, label %12, label %13, !dbg !16637

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 186) #26, !dbg !16638
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 186) #26, !dbg !16638
  unreachable, !dbg !16638

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.356(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !16640
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16631, metadata !DIExpression()) #25, !dbg !16632
  %15 = icmp eq %struct._dnode* %14, null, !dbg !16642
  br i1 %15, label %26, label %16, !dbg !16640

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16631, metadata !DIExpression()) #25, !dbg !16632
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !16644
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !16631, metadata !DIExpression()) #25, !dbg !16632
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #26, !dbg !16645
  %20 = icmp sgt i32 %19, 0, !dbg !16648
  br i1 %20, label %21, label %23, !dbg !16649

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16650
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #26, !dbg !16652
  br label %28, !dbg !16653

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #26, !dbg !16642
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16631, metadata !DIExpression()) #25, !dbg !16632
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16642
  br i1 %25, label %26, label %16, !dbg !16640, !llvm.loop !16654

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16656
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #26, !dbg !16657
  br label %28, !dbg !16658

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16659
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !16660
  %31 = zext i1 %30 to i32, !dbg !16660
  tail call fastcc void @update_cache(i32 noundef %31) #27, !dbg !16661
  ret void, !dbg !16662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16663 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16665, metadata !DIExpression()), !dbg !16666
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #27, !dbg !16667
  ret i1 %2, !dbg !16668
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16669 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16671, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16672, metadata !DIExpression()), !dbg !16673
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !16674
  br i1 %3, label %4, label %5, !dbg !16677

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1139) #26, !dbg !16678
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1139) #26, !dbg !16678
  unreachable, !dbg !16678

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16680
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #27, !dbg !16681
  ret void, !dbg !16682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !16683 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16685, metadata !DIExpression()), !dbg !16686
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16687
  ret i1 %2, !dbg !16688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.356(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16689 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16693, metadata !DIExpression()), !dbg !16694
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.359(%struct._dnode* noundef %0) #27, !dbg !16695
  br i1 %2, label %6, label %3, !dbg !16695

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16696
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16696
  br label %6, !dbg !16695

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16695
  ret %struct._dnode* %7, !dbg !16697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16698 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16702, metadata !DIExpression()), !dbg !16706
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16703, metadata !DIExpression()), !dbg !16706
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16707
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16707
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16704, metadata !DIExpression()), !dbg !16706
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16708
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16709
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16710
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16711
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16712
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16713
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16714
  ret void, !dbg !16715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !16716 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16720, metadata !DIExpression()), !dbg !16722
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16721, metadata !DIExpression()), !dbg !16722
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16723
  br i1 %3, label %6, label %4, !dbg !16724

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !16725
  br label %6, !dbg !16724

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16724
  ret %struct._dnode* %7, !dbg !16726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16727 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16731, metadata !DIExpression()), !dbg !16734
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16732, metadata !DIExpression()), !dbg !16734
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16735
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16735
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16733, metadata !DIExpression()), !dbg !16734
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16736
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16737
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16738
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16739
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16740
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16741
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16742
  ret void, !dbg !16743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16746, metadata !DIExpression()), !dbg !16748
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !16749
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16756, metadata !DIExpression()) #25, !dbg !16758
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16759
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16760
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !16760
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16747, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16761, metadata !DIExpression()) #25, !dbg !16767
  call void @llvm.dbg.value(metadata i32 %0, metadata !16766, metadata !DIExpression()) #25, !dbg !16767
  %6 = icmp eq i32 %0, 0, !dbg !16770
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16772
  br i1 %6, label %8, label %18, !dbg !16773

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !16774
  br i1 %9, label %10, label %11, !dbg !16777

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 137) #26, !dbg !16778
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.358, i32 0, i32 0)) #26, !dbg !16778
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 137) #26, !dbg !16778
  unreachable, !dbg !16778

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #26, !dbg !16780
  br i1 %12, label %18, label %13, !dbg !16782

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !16783
  br i1 %14, label %18, label %15, !dbg !16785

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #26, !dbg !16786
  %17 = icmp eq i32 %16, 0, !dbg !16786
  br i1 %17, label %21, label %18, !dbg !16788

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !16789
  br i1 %19, label %21, label %20, !dbg !16792

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16793
  br label %21, !dbg !16795

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !16772
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16772
  ret void, !dbg !16796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !16797 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16801, metadata !DIExpression()), !dbg !16804
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16802, metadata !DIExpression()), !dbg !16804
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.356(%struct._dnode* noundef %0) #27, !dbg !16805
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16803, metadata !DIExpression()), !dbg !16804
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16802, metadata !DIExpression()), !dbg !16804
  ret %struct.k_thread* %3, !dbg !16806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16807 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16809, metadata !DIExpression()), !dbg !16810
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16811
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16812
  %4 = xor i1 %3, true, !dbg !16813
  ret i1 %4, !dbg !16814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16815 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16817, metadata !DIExpression()), !dbg !16818
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16819
  %3 = load i16, i16* %2, align 2, !dbg !16819
  %4 = icmp ult i16 %3, 128, !dbg !16820
  %5 = zext i1 %4 to i32, !dbg !16820
  ret i32 %5, !dbg !16821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16822 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16828, metadata !DIExpression()), !dbg !16829
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16830
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !16831
  %4 = xor i1 %3, true, !dbg !16832
  ret i1 %4, !dbg !16833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16834 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16840, metadata !DIExpression()), !dbg !16841
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16842
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16842
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16843
  ret i1 %4, !dbg !16844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !16845 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16847, metadata !DIExpression()), !dbg !16849
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16848, metadata !DIExpression()), !dbg !16849
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16850
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16850
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16851
  br i1 %5, label %9, label %6, !dbg !16852

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16853
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16853
  br label %9, !dbg !16852

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16852
  ret %struct._dnode* %10, !dbg !16854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.359(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16855 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16859, metadata !DIExpression()), !dbg !16860
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16861
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16861
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16862
  ret i1 %4, !dbg !16863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !16864 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16868, metadata !DIExpression()), !dbg !16871
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16872
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16872
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16869, metadata !DIExpression()), !dbg !16871
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16873
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16873
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16870, metadata !DIExpression()), !dbg !16871
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16874
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16875
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16876
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16877
  tail call fastcc void @sys_dnode_init.360(%struct._dnode* noundef %0) #27, !dbg !16878
  ret void, !dbg !16879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.360(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !16880 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16882, metadata !DIExpression()), !dbg !16883
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16884
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16885
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16886
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16887
  ret void, !dbg !16888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !16889 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16893, metadata !DIExpression()), !dbg !16895
  call void @llvm.dbg.value(metadata i32 %1, metadata !16894, metadata !DIExpression()), !dbg !16895
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16896
  %4 = load i8, i8* %3, align 1, !dbg !16896
  %5 = zext i8 %4 to i32, !dbg !16897
  %6 = and i32 %5, %1, !dbg !16898
  %7 = icmp ne i32 %6, 0, !dbg !16899
  ret i1 %7, !dbg !16900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.361(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !16901 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16903, metadata !DIExpression()), !dbg !16905
  call void @llvm.dbg.value(metadata i32 %1, metadata !16904, metadata !DIExpression()), !dbg !16905
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.362(i32 noundef %0, i32 noundef %1) #27, !dbg !16906
  ret i1 %3, !dbg !16907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.362(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !16908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16910, metadata !DIExpression()), !dbg !16912
  call void @llvm.dbg.value(metadata i32 %1, metadata !16911, metadata !DIExpression()), !dbg !16912
  %3 = icmp slt i32 %0, %1, !dbg !16913
  ret i1 %3, !dbg !16914
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16915 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16917, metadata !DIExpression()), !dbg !16921
  call void @llvm.dbg.value(metadata i32 0, metadata !16918, metadata !DIExpression()), !dbg !16922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !16923
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16925, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !16927
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16927
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !16923
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16928
  br i1 %3, label %5, label %4, !dbg !16929

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !16930
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !16930
  unreachable, !dbg !16930

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !16927
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !16923
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16931
  call void @llvm.dbg.value(metadata i32 undef, metadata !16920, metadata !DIExpression()), !dbg !16922
  call void @llvm.dbg.value(metadata i32 undef, metadata !16918, metadata !DIExpression()), !dbg !16922
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16932
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !16937
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16939
  br i1 %6, label %8, label %7, !dbg !16940

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !16941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !16941
  unreachable, !dbg !16941

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16925
  call void @llvm.dbg.value(metadata i32 %9, metadata !16413, metadata !DIExpression()) #25, !dbg !16927
  call void @llvm.dbg.value(metadata i32 %9, metadata !16407, metadata !DIExpression()) #25, !dbg !16923
  call void @llvm.dbg.value(metadata i32 %9, metadata !16920, metadata !DIExpression()), !dbg !16922
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16937
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !16942
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16944, !srcloc !16455
  call void @llvm.dbg.value(metadata i32 1, metadata !16918, metadata !DIExpression()), !dbg !16922
  call void @llvm.dbg.value(metadata i32 undef, metadata !16918, metadata !DIExpression()), !dbg !16922
  ret void, !dbg !16945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16946 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16948, metadata !DIExpression()), !dbg !16949
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !16950
  br i1 %2, label %27, label %3, !dbg !16952

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !16953
  br i1 %4, label %5, label %27, !dbg !16954

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16610, metadata !DIExpression()) #25, !dbg !16955
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16958
  %7 = load i8, i8* %6, align 1, !dbg !16959
  %8 = or i8 %7, -128, !dbg !16959
  store i8 %8, i8* %6, align 1, !dbg !16959
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16617, metadata !DIExpression()) #25, !dbg !16960
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16624, metadata !DIExpression()) #25, !dbg !16962
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16630, metadata !DIExpression()) #25, !dbg !16962
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !16964
  br i1 %9, label %10, label %11, !dbg !16965

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 186) #26, !dbg !16966
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 186) #26, !dbg !16966
  unreachable, !dbg !16966

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.356(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !16967
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16631, metadata !DIExpression()) #25, !dbg !16962
  %13 = icmp eq %struct._dnode* %12, null, !dbg !16968
  br i1 %13, label %24, label %14, !dbg !16967

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16631, metadata !DIExpression()) #25, !dbg !16962
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !16969
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !16631, metadata !DIExpression()) #25, !dbg !16962
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #26, !dbg !16970
  %18 = icmp sgt i32 %17, 0, !dbg !16971
  br i1 %18, label %19, label %21, !dbg !16972

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16973
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #26, !dbg !16974
  br label %26, !dbg !16975

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #26, !dbg !16968
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !16631, metadata !DIExpression()) #25, !dbg !16962
  %23 = icmp eq %struct._dnode* %22, null, !dbg !16968
  br i1 %23, label %24, label %14, !dbg !16967, !llvm.loop !16976

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16978
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #26, !dbg !16979
  br label %26, !dbg !16980

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !16981
  br label %27, !dbg !16982

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !16983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16984 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16986, metadata !DIExpression()), !dbg !16987
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !16988
  br i1 %2, label %6, label %3, !dbg !16989

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !16990
  %5 = xor i1 %4, true, !dbg !16989
  br label %6, !dbg !16989

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16991
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16992 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16994, metadata !DIExpression()), !dbg !16998
  call void @llvm.dbg.value(metadata i32 0, metadata !16995, metadata !DIExpression()), !dbg !16999
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17000
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17002, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17004
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17004
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17000
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17005
  br i1 %3, label %5, label %4, !dbg !17006

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17007
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17007
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17007
  unreachable, !dbg !17007

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17004
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17000
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17008
  call void @llvm.dbg.value(metadata i32 undef, metadata !16997, metadata !DIExpression()), !dbg !16999
  call void @llvm.dbg.value(metadata i32 undef, metadata !16995, metadata !DIExpression()), !dbg !16999
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !17009
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17012
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17012
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17014
  br i1 %6, label %8, label %7, !dbg !17015

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17016
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17016
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17016
  unreachable, !dbg !17016

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17002
  call void @llvm.dbg.value(metadata i32 %9, metadata !16413, metadata !DIExpression()) #25, !dbg !17004
  call void @llvm.dbg.value(metadata i32 %9, metadata !16407, metadata !DIExpression()) #25, !dbg !17000
  call void @llvm.dbg.value(metadata i32 %9, metadata !16997, metadata !DIExpression()), !dbg !16999
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17012
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !17017
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17019, !srcloc !16455
  call void @llvm.dbg.value(metadata i32 1, metadata !16995, metadata !DIExpression()), !dbg !16999
  call void @llvm.dbg.value(metadata i32 undef, metadata !16995, metadata !DIExpression()), !dbg !16999
  ret void, !dbg !17020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17021 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17023, metadata !DIExpression()), !dbg !17025
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17026
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17028, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17026
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17031
  br i1 %3, label %5, label %4, !dbg !17032

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17033
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17033
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17033
  unreachable, !dbg !17033

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17028
  call void @llvm.dbg.value(metadata i32 %6, metadata !16413, metadata !DIExpression()) #25, !dbg !17030
  call void @llvm.dbg.value(metadata i32 %6, metadata !16407, metadata !DIExpression()) #25, !dbg !17026
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17034
  call void @llvm.dbg.value(metadata i32 %6, metadata !17024, metadata !DIExpression()), !dbg !17025
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !17035
  br i1 %7, label %8, label %12, !dbg !17037

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17038
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17038
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17041
  br i1 %9, label %11, label %10, !dbg !17042

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17043
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17043
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17043
  unreachable, !dbg !17043

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !16435, metadata !DIExpression()) #25, !dbg !17038
  call void @llvm.dbg.value(metadata i32 %6, metadata !16449, metadata !DIExpression()) #25, !dbg !17044
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !17046, !srcloc !16455
  br label %14, !dbg !17047

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.367(%struct.k_thread* noundef %0) #27, !dbg !17048
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !17049
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17050
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #27, !dbg !17050
  br label %14, !dbg !17051

14:                                               ; preds = %12, %11
  ret void, !dbg !17051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17052 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17054, metadata !DIExpression()), !dbg !17055
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17056
  %3 = load i8, i8* %2, align 1, !dbg !17056
  %4 = and i8 %3, 4, !dbg !17057
  %5 = icmp eq i8 %4, 0, !dbg !17058
  ret i1 %5, !dbg !17059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.367(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17060 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17062, metadata !DIExpression()), !dbg !17063
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17064
  %3 = load i8, i8* %2, align 1, !dbg !17065
  %4 = and i8 %3, -5, !dbg !17065
  store i8 %4, i8* %2, align 1, !dbg !17065
  ret void, !dbg !17066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !17067 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !17070, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17069, metadata !DIExpression()), !dbg !17071
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !17072
  br i1 %4, label %5, label %12, !dbg !17074

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !17075
  br i1 %6, label %7, label %12, !dbg !17076

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !17077, metadata !DIExpression()) #25, !dbg !17083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17082, metadata !DIExpression()) #25, !dbg !17083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17086, metadata !DIExpression()) #25, !dbg !17091
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !17093
  br i1 %8, label %10, label %9, !dbg !17096

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !17097
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !17097
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !17097
  unreachable, !dbg !17097

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !17077, metadata !DIExpression()) #25, !dbg !17083
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !17099
  br label %16, !dbg !17100

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17101
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16440, metadata !DIExpression()) #25, !dbg !17101
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !17104
  br i1 %13, label %15, label %14, !dbg !17105

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17106
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !17106
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17106
  unreachable, !dbg !17106

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !16435, metadata !DIExpression()) #25, !dbg !17101
  call void @llvm.dbg.value(metadata i32 %3, metadata !16449, metadata !DIExpression()) #25, !dbg !17107
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17109, !srcloc !16455
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !17110
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !17111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17115, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 %0, metadata !17117, metadata !DIExpression()), !dbg !17122
  %2 = icmp eq i32 %0, 0, !dbg !17124
  br i1 %2, label %3, label %6, !dbg !17125

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17126, !srcloc !17133
  call void @llvm.dbg.value(metadata i32 %4, metadata !17129, metadata !DIExpression()) #25, !dbg !17134
  %5 = icmp eq i32 %4, 0, !dbg !17135
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !17116
  ret i1 %7, !dbg !17136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !17137 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17140
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17139, metadata !DIExpression()), !dbg !17141
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17142
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !17143
  ret i1 %3, !dbg !17144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !17145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17147, metadata !DIExpression()), !dbg !17149
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !17150
  call void @llvm.dbg.value(metadata i32 %2, metadata !17148, metadata !DIExpression()), !dbg !17149
  ret i32 %2, !dbg !17151
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17152 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17154, metadata !DIExpression()), !dbg !17158
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !17159
  call void @llvm.dbg.value(metadata i32 0, metadata !17155, metadata !DIExpression()), !dbg !17160
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17161
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17163, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17165
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17165
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17161
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17166
  br i1 %4, label %6, label %5, !dbg !17167

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17168
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17168
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17168
  unreachable, !dbg !17168

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !17163
  call void @llvm.dbg.value(metadata i32 %7, metadata !16413, metadata !DIExpression()) #25, !dbg !17165
  call void @llvm.dbg.value(metadata i32 %7, metadata !16407, metadata !DIExpression()) #25, !dbg !17161
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17169
  call void @llvm.dbg.value(metadata i32 %7, metadata !17157, metadata !DIExpression()), !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !17155, metadata !DIExpression()), !dbg !17160
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !17170
  br i1 %8, label %9, label %13, !dbg !17174

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16593, metadata !DIExpression()) #25, !dbg !17175
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17178
  %11 = load i8, i8* %10, align 1, !dbg !17179
  %12 = and i8 %11, 127, !dbg !17179
  store i8 %12, i8* %10, align 1, !dbg !17179
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16601, metadata !DIExpression()) #25, !dbg !17180
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !17182
  br label %13, !dbg !17183

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !17184
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17185
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !17186
  %16 = zext i1 %15 to i32, !dbg !17186
  tail call fastcc void @update_cache(i32 noundef %16) #27, !dbg !17187
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17188
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17190
  br i1 %17, label %19, label %18, !dbg !17191

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17192
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17192
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17192
  unreachable, !dbg !17192

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !16435, metadata !DIExpression()) #25, !dbg !17188
  call void @llvm.dbg.value(metadata i32 %7, metadata !16449, metadata !DIExpression()) #25, !dbg !17193
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !17195, !srcloc !16455
  call void @llvm.dbg.value(metadata i32 1, metadata !17155, metadata !DIExpression()), !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !17155, metadata !DIExpression()), !dbg !17160
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17196
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !17198
  br i1 %21, label %22, label %23, !dbg !17199

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !17200
  br label %23, !dbg !17202

23:                                               ; preds = %22, %19
  ret void, !dbg !17203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17204 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17206, metadata !DIExpression()), !dbg !17207
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17208
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !17209
  ret i32 %3, !dbg !17210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17213, metadata !DIExpression()), !dbg !17214
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17215
  %3 = load i8, i8* %2, align 1, !dbg !17216
  %4 = or i8 %3, 16, !dbg !17216
  store i8 %4, i8* %2, align 1, !dbg !17216
  ret void, !dbg !17217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !17218 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17219, !srcloc !16416
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17219
  call void @llvm.dbg.value(metadata i32 %2, metadata !16413, metadata !DIExpression()) #25, !dbg !17221
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17221
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !17222
  ret void, !dbg !17223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !17224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17226, metadata !DIExpression()), !dbg !17227
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !17228
  br i1 %2, label %3, label %5, !dbg !17230

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !17231
  br label %6, !dbg !17233

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !16449, metadata !DIExpression()) #25, !dbg !17234
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !17237, !srcloc !16455
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !17238
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17239 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17241, metadata !DIExpression()), !dbg !17243
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17244
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17246, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17248
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17248
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17244
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17249
  br i1 %3, label %5, label %4, !dbg !17250

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17251
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17251
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17251
  unreachable, !dbg !17251

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17246
  call void @llvm.dbg.value(metadata i32 %6, metadata !16413, metadata !DIExpression()) #25, !dbg !17248
  call void @llvm.dbg.value(metadata i32 %6, metadata !16407, metadata !DIExpression()) #25, !dbg !17244
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17252
  call void @llvm.dbg.value(metadata i32 %6, metadata !17242, metadata !DIExpression()), !dbg !17243
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !17253
  br i1 %7, label %12, label %8, !dbg !17255

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17256
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17256
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17259
  br i1 %9, label %11, label %10, !dbg !17260

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17261
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17261
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17261
  unreachable, !dbg !17261

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !16435, metadata !DIExpression()) #25, !dbg !17256
  call void @llvm.dbg.value(metadata i32 %6, metadata !16449, metadata !DIExpression()) #25, !dbg !17262
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !17264, !srcloc !16455
  br label %14, !dbg !17265

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !17266
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !17267
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17268
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #27, !dbg !17268
  br label %14, !dbg !17269

14:                                               ; preds = %12, %11
  ret void, !dbg !17269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17270 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17272, metadata !DIExpression()), !dbg !17273
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17274
  %3 = load i8, i8* %2, align 1, !dbg !17274
  %4 = and i8 %3, 16, !dbg !17275
  %5 = icmp ne i8 %4, 0, !dbg !17276
  ret i1 %5, !dbg !17277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17278 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17280, metadata !DIExpression()), !dbg !17281
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17282
  %3 = load i8, i8* %2, align 1, !dbg !17283
  %4 = and i8 %3, -17, !dbg !17283
  store i8 %4, i8* %2, align 1, !dbg !17283
  ret void, !dbg !17284
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17285 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17295, metadata !DIExpression()), !dbg !17299
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17293, metadata !DIExpression()), !dbg !17299
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17294, metadata !DIExpression()), !dbg !17299
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17300
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !17300
  br i1 %5, label %9, label %6, !dbg !17300

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #27, !dbg !17300
  br i1 %7, label %9, label %8, !dbg !17303

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 773) #26, !dbg !17304
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 773) #26, !dbg !17304
  unreachable, !dbg !17304

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !17296, metadata !DIExpression()), !dbg !17306
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17307
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17309, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17311
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17311
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17307
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17312
  br i1 %11, label %13, label %12, !dbg !17313

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17314
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17314
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17314
  unreachable, !dbg !17314

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17311
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17307
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17315
  call void @llvm.dbg.value(metadata i32 undef, metadata !17298, metadata !DIExpression()), !dbg !17306
  call void @llvm.dbg.value(metadata i32 undef, metadata !17296, metadata !DIExpression()), !dbg !17306
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !17316
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17319
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17319
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17321
  br i1 %14, label %16, label %15, !dbg !17322

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17323
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17323
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17323
  unreachable, !dbg !17323

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !17309
  call void @llvm.dbg.value(metadata i32 %17, metadata !16413, metadata !DIExpression()) #25, !dbg !17311
  call void @llvm.dbg.value(metadata i32 %17, metadata !16407, metadata !DIExpression()) #25, !dbg !17307
  call void @llvm.dbg.value(metadata i32 %17, metadata !17298, metadata !DIExpression()), !dbg !17306
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17319
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !17324
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #25, !dbg !17326, !srcloc !16455
  call void @llvm.dbg.value(metadata i32 1, metadata !17296, metadata !DIExpression()), !dbg !17306
  call void @llvm.dbg.value(metadata i32 undef, metadata !17296, metadata !DIExpression()), !dbg !17306
  ret void, !dbg !17327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17328 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17330, metadata !DIExpression()), !dbg !17331
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17332
  %3 = load i8, i8* %2, align 1, !dbg !17332
  %4 = and i8 %3, 1, !dbg !17333
  %5 = icmp ne i8 %4, 0, !dbg !17334
  ret i1 %5, !dbg !17335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !17336 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17340, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17338, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17339, metadata !DIExpression()), !dbg !17341
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #27, !dbg !17342
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !17343
  ret void, !dbg !17344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !17345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17349, metadata !DIExpression()), !dbg !17351
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17350, metadata !DIExpression()), !dbg !17351
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !17352
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !17353
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !17354
  br i1 %3, label %24, label %4, !dbg !17356

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17357
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !17359
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !17360
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16624, metadata !DIExpression()) #25, !dbg !17361
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16630, metadata !DIExpression()) #25, !dbg !17361
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !17363
  br i1 %7, label %8, label %9, !dbg !17364

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 186) #26, !dbg !17365
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 186) #26, !dbg !17365
  unreachable, !dbg !17365

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.356(%struct._dnode* noundef nonnull %6) #26, !dbg !17366
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16631, metadata !DIExpression()) #25, !dbg !17361
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17367
  br i1 %11, label %22, label %12, !dbg !17366

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16631, metadata !DIExpression()) #25, !dbg !17361
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17368
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16631, metadata !DIExpression()) #25, !dbg !17361
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #26, !dbg !17369
  %16 = icmp sgt i32 %15, 0, !dbg !17370
  br i1 %16, label %17, label %19, !dbg !17371

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17372
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !17373
  br label %24, !dbg !17374

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #26, !dbg !17367
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16631, metadata !DIExpression()) #25, !dbg !17361
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17367
  br i1 %21, label %22, label %12, !dbg !17366, !llvm.loop !17375

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17377
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #26, !dbg !17378
  br label %24, !dbg !17379

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !17380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !17381 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !17386, metadata !DIExpression()), !dbg !17387
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17385, metadata !DIExpression()), !dbg !17387
  %4 = icmp eq i64 %3, -1, !dbg !17388
  br i1 %4, label %6, label %5, !dbg !17390

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.371(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !17391
  br label %6, !dbg !17393

6:                                                ; preds = %5, %2
  ret void, !dbg !17394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.371(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !17395 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17398, metadata !DIExpression()), !dbg !17399
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17397, metadata !DIExpression()), !dbg !17399
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17400
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !17401
  ret void, !dbg !17402
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !17403 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17405, metadata !DIExpression()), !dbg !17413
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !17414
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !17414
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17406, metadata !DIExpression()), !dbg !17413
  call void @llvm.dbg.value(metadata i32 0, metadata !17407, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17416
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17418, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17416
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17421
  br i1 %5, label %7, label %6, !dbg !17422

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17423
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17423
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17423
  unreachable, !dbg !17423

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17416
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17424
  call void @llvm.dbg.value(metadata i32 undef, metadata !17409, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata i32 undef, metadata !17407, metadata !DIExpression()), !dbg !17415
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !17425
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !17426
  %10 = load i8, i8* %9, align 1, !dbg !17426
  %11 = and i8 %10, 40, !dbg !17427
  %12 = icmp eq i8 %11, 0, !dbg !17427
  call void @llvm.dbg.value(metadata i1 %12, metadata !17410, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17428
  br i1 %12, label %13, label %20, !dbg !17429

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !17430
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !17430
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !17430
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !17434
  br i1 %17, label %19, label %18, !dbg !17435

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !17436
  br label %19, !dbg !17438

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.367(%struct.k_thread* noundef nonnull %3) #27, !dbg !17439
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !17440
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !17441
  br label %20, !dbg !17442

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17443
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17443
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17445
  br i1 %21, label %23, label %22, !dbg !17446

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17447
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17447
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17447
  unreachable, !dbg !17447

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !17418
  call void @llvm.dbg.value(metadata i32 %24, metadata !16413, metadata !DIExpression()) #25, !dbg !17420
  call void @llvm.dbg.value(metadata i32 %24, metadata !16407, metadata !DIExpression()) #25, !dbg !17416
  call void @llvm.dbg.value(metadata i32 %24, metadata !17409, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17443
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !17448
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !17450, !srcloc !16455
  call void @llvm.dbg.value(metadata i32 1, metadata !17407, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata i32 undef, metadata !17407, metadata !DIExpression()), !dbg !17415
  ret void, !dbg !17451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17452 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17454, metadata !DIExpression()), !dbg !17455
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #27, !dbg !17456
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17457
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !17458
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17459
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !17460
  ret void, !dbg !17461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !17462 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17466, metadata !DIExpression()), !dbg !17467
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17468
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !17468
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !17468
  br i1 %4, label %5, label %6, !dbg !17471

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.374, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 726) #26, !dbg !17472
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 726) #26, !dbg !17472
  unreachable, !dbg !17472

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !17474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17475 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17477, metadata !DIExpression()), !dbg !17478
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17479
  %3 = load i8, i8* %2, align 1, !dbg !17480
  %4 = and i8 %3, -3, !dbg !17480
  store i8 %4, i8* %2, align 1, !dbg !17480
  ret void, !dbg !17481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17484, metadata !DIExpression()), !dbg !17485
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !17486
  br i1 %2, label %3, label %7, !dbg !17488

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16593, metadata !DIExpression()) #25, !dbg !17489
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17492
  %5 = load i8, i8* %4, align 1, !dbg !17493
  %6 = and i8 %5, 127, !dbg !17493
  store i8 %6, i8* %4, align 1, !dbg !17493
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16601, metadata !DIExpression()) #25, !dbg !17494
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !17496
  br label %7, !dbg !17497

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17498
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !17499
  %10 = zext i1 %9 to i32, !dbg !17499
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !17500
  ret void, !dbg !17501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17502 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17504, metadata !DIExpression()), !dbg !17505
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17506
  %3 = load i8, i8* %2, align 1, !dbg !17507
  %4 = or i8 %3, 2, !dbg !17507
  store i8 %4, i8* %2, align 1, !dbg !17507
  ret void, !dbg !17508
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #24 !dbg !17509 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17511, metadata !DIExpression()), !dbg !17515
  call void @llvm.dbg.value(metadata i32 0, metadata !17512, metadata !DIExpression()), !dbg !17516
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17517
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17519, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17521
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17521
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17517
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17522
  br i1 %3, label %5, label %4, !dbg !17523

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17524
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17524
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17524
  unreachable, !dbg !17524

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17521
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17517
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17525
  call void @llvm.dbg.value(metadata i32 undef, metadata !17514, metadata !DIExpression()), !dbg !17516
  call void @llvm.dbg.value(metadata i32 undef, metadata !17512, metadata !DIExpression()), !dbg !17516
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !17526
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17529
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17529
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17531
  br i1 %6, label %8, label %7, !dbg !17532

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17533
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17533
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17533
  unreachable, !dbg !17533

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17519
  call void @llvm.dbg.value(metadata i32 %9, metadata !16413, metadata !DIExpression()) #25, !dbg !17521
  call void @llvm.dbg.value(metadata i32 %9, metadata !16407, metadata !DIExpression()) #25, !dbg !17517
  call void @llvm.dbg.value(metadata i32 %9, metadata !17514, metadata !DIExpression()), !dbg !17516
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17529
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !17534
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17536, !srcloc !16455
  call void @llvm.dbg.value(metadata i32 1, metadata !17512, metadata !DIExpression()), !dbg !17516
  call void @llvm.dbg.value(metadata i32 undef, metadata !17512, metadata !DIExpression()), !dbg !17516
  ret void, !dbg !17537
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17538 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17544, metadata !DIExpression()), !dbg !17549
  call void @llvm.dbg.value(metadata i32 %0, metadata !17542, metadata !DIExpression()), !dbg !17549
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17543, metadata !DIExpression()), !dbg !17549
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17550
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !17551
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17552
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17553
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !17554
  call void @llvm.dbg.value(metadata i32 %6, metadata !17545, metadata !DIExpression()), !dbg !17549
  call void @llvm.dbg.value(metadata i32 0, metadata !17546, metadata !DIExpression()), !dbg !17555
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17556
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17558, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17560
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17560
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17556
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17561
  br i1 %8, label %10, label %9, !dbg !17562

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17563
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17563
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17563
  unreachable, !dbg !17563

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17560
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17556
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17564
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()), !dbg !17555
  call void @llvm.dbg.value(metadata i32 undef, metadata !17546, metadata !DIExpression()), !dbg !17555
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !17565
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17569
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !17570
  br i1 %13, label %14, label %15, !dbg !17571

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !17572
  br label %15, !dbg !17574

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17575
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17575
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17577
  br i1 %16, label %18, label %17, !dbg !17578

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17579
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17579
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17579
  unreachable, !dbg !17579

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !17558
  call void @llvm.dbg.value(metadata i32 %19, metadata !16413, metadata !DIExpression()) #25, !dbg !17560
  call void @llvm.dbg.value(metadata i32 %19, metadata !16407, metadata !DIExpression()) #25, !dbg !17556
  call void @llvm.dbg.value(metadata i32 %19, metadata !17548, metadata !DIExpression()), !dbg !17555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17575
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !17580
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #25, !dbg !17582, !srcloc !16455
  call void @llvm.dbg.value(metadata i32 1, metadata !17546, metadata !DIExpression()), !dbg !17555
  call void @llvm.dbg.value(metadata i32 undef, metadata !17546, metadata !DIExpression()), !dbg !17555
  ret i32 %6, !dbg !17583
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17584 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17589, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i64 undef, metadata !17591, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17588, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17590, metadata !DIExpression()), !dbg !17592
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17593
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17594
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !17595
  br i1 %6, label %7, label %8, !dbg !17598

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 846) #26, !dbg !17599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 846) #26, !dbg !17599
  unreachable, !dbg !17599

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17601
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17603, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17605
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17605
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17601
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17606
  br i1 %10, label %12, label %11, !dbg !17607

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17608
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17608
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17608
  unreachable, !dbg !17608

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17605
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17601
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17609
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17610
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !17611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17086, metadata !DIExpression()) #25, !dbg !17612
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !17614
  br i1 %14, label %16, label %15, !dbg !17615

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !17616
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !17616
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !17616
  unreachable, !dbg !17616

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !17077, metadata !DIExpression()) #25, !dbg !17617
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17082, metadata !DIExpression()) #25, !dbg !17617
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17086, metadata !DIExpression()) #25, !dbg !17619
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17621
  br i1 %17, label %19, label %18, !dbg !17622

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !17623
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17623
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !17623
  unreachable, !dbg !17623

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !17077, metadata !DIExpression()) #25, !dbg !17617
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #26, !dbg !17624
  ret i32 %21, !dbg !17625
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17626 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17630, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17631, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata i32 0, metadata !17632, metadata !DIExpression()), !dbg !17636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17637
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17639, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17641
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17641
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17637
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17642
  br i1 %3, label %5, label %4, !dbg !17643

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17644
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17644
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17644
  unreachable, !dbg !17644

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17641
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17637
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17645
  call void @llvm.dbg.value(metadata i32 undef, metadata !17634, metadata !DIExpression()), !dbg !17636
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17631, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata i32 undef, metadata !17632, metadata !DIExpression()), !dbg !17636
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #27, !dbg !17646
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17631, metadata !DIExpression()), !dbg !17635
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17649
  br i1 %8, label %10, label %9, !dbg !17651

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !17652
  br label %10, !dbg !17654

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17655
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17657
  br i1 %11, label %13, label %12, !dbg !17658

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17659
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17659
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17659
  unreachable, !dbg !17659

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17639
  call void @llvm.dbg.value(metadata i32 %14, metadata !16413, metadata !DIExpression()) #25, !dbg !17641
  call void @llvm.dbg.value(metadata i32 %14, metadata !16407, metadata !DIExpression()) #25, !dbg !17637
  call void @llvm.dbg.value(metadata i32 %14, metadata !17634, metadata !DIExpression()), !dbg !17636
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17655
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !17660
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17662, !srcloc !16455
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17631, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata i32 undef, metadata !17632, metadata !DIExpression()), !dbg !17636
  ret %struct.k_thread* %7, !dbg !17663
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17664 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17666, metadata !DIExpression()), !dbg !17671
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17667, metadata !DIExpression()), !dbg !17671
  call void @llvm.dbg.value(metadata i32 0, metadata !17668, metadata !DIExpression()), !dbg !17672
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17673
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17675, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17677
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17677
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17673
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17678
  br i1 %3, label %5, label %4, !dbg !17679

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17680
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17680
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17680
  unreachable, !dbg !17680

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17677
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17673
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17681
  call void @llvm.dbg.value(metadata i32 undef, metadata !17670, metadata !DIExpression()), !dbg !17672
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17667, metadata !DIExpression()), !dbg !17671
  call void @llvm.dbg.value(metadata i32 undef, metadata !17668, metadata !DIExpression()), !dbg !17672
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #27, !dbg !17682
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17667, metadata !DIExpression()), !dbg !17671
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17685
  br i1 %8, label %11, label %9, !dbg !17687

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !17688
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !17690
  br label %11, !dbg !17691

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17692
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17692
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17694
  br i1 %12, label %14, label %13, !dbg !17695

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17696
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17696
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17696
  unreachable, !dbg !17696

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !17675
  call void @llvm.dbg.value(metadata i32 %15, metadata !16413, metadata !DIExpression()) #25, !dbg !17677
  call void @llvm.dbg.value(metadata i32 %15, metadata !16407, metadata !DIExpression()) #25, !dbg !17673
  call void @llvm.dbg.value(metadata i32 %15, metadata !17670, metadata !DIExpression()), !dbg !17672
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17692
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !17697
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !17699, !srcloc !16455
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17667, metadata !DIExpression()), !dbg !17671
  call void @llvm.dbg.value(metadata i32 undef, metadata !17668, metadata !DIExpression()), !dbg !17672
  ret %struct.k_thread* %7, !dbg !17700
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17703, metadata !DIExpression()), !dbg !17704
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17511, metadata !DIExpression()) #25, !dbg !17705
  call void @llvm.dbg.value(metadata i32 0, metadata !17512, metadata !DIExpression()) #25, !dbg !17707
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17708
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17710, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17712
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17712
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17708
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17713
  br i1 %3, label %5, label %4, !dbg !17714

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17715
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17715
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17715
  unreachable, !dbg !17715

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17712
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17708
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17716
  call void @llvm.dbg.value(metadata i32 undef, metadata !17514, metadata !DIExpression()) #25, !dbg !17707
  call void @llvm.dbg.value(metadata i32 undef, metadata !17512, metadata !DIExpression()) #25, !dbg !17707
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !17717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17718
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17718
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17720
  br i1 %6, label %8, label %7, !dbg !17721

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17722
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17722
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17722
  unreachable, !dbg !17722

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17710
  call void @llvm.dbg.value(metadata i32 %9, metadata !16413, metadata !DIExpression()) #25, !dbg !17712
  call void @llvm.dbg.value(metadata i32 %9, metadata !16407, metadata !DIExpression()) #25, !dbg !17708
  call void @llvm.dbg.value(metadata i32 %9, metadata !17514, metadata !DIExpression()) #25, !dbg !17707
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17718
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !17723
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17725, !srcloc !16455
  call void @llvm.dbg.value(metadata i32 1, metadata !17512, metadata !DIExpression()) #25, !dbg !17707
  call void @llvm.dbg.value(metadata i32 undef, metadata !17512, metadata !DIExpression()) #25, !dbg !17707
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !17726
  ret void, !dbg !17727
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17728 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17730, metadata !DIExpression()), !dbg !17736
  call void @llvm.dbg.value(metadata i32 %1, metadata !17731, metadata !DIExpression()), !dbg !17736
  call void @llvm.dbg.value(metadata i8 0, metadata !17732, metadata !DIExpression()), !dbg !17736
  call void @llvm.dbg.value(metadata i32 0, metadata !17733, metadata !DIExpression()), !dbg !17737
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17738
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17740, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17742
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17742
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17738
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17743
  br i1 %4, label %6, label %5, !dbg !17744

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17745
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17745
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17745
  unreachable, !dbg !17745

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17742
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17738
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17746
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()), !dbg !17737
  call void @llvm.dbg.value(metadata i8 poison, metadata !17732, metadata !DIExpression()), !dbg !17736
  call void @llvm.dbg.value(metadata i32 undef, metadata !17733, metadata !DIExpression()), !dbg !17737
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !17747
  call void @llvm.dbg.value(metadata i1 %9, metadata !17732, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17736
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !17750

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16593, metadata !DIExpression()) #25, !dbg !17751
  %14 = load i8, i8* %7, align 1, !dbg !17757
  %15 = and i8 %14, 127, !dbg !17757
  store i8 %15, i8* %7, align 1, !dbg !17757
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16601, metadata !DIExpression()) #25, !dbg !17758
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !17760
  store i8 %12, i8* %11, align 2, !dbg !17761
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16610, metadata !DIExpression()) #25, !dbg !17762
  %16 = load i8, i8* %7, align 1, !dbg !17764
  %17 = or i8 %16, -128, !dbg !17764
  store i8 %17, i8* %7, align 1, !dbg !17764
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16617, metadata !DIExpression()) #25, !dbg !17765
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16624, metadata !DIExpression()) #25, !dbg !17767
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16630, metadata !DIExpression()) #25, !dbg !17767
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !17769
  br i1 %18, label %19, label %20, !dbg !17770

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 186) #26, !dbg !17771
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 186) #26, !dbg !17771
  unreachable, !dbg !17771

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.356(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !17772
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16631, metadata !DIExpression()) #25, !dbg !17767
  %22 = icmp eq %struct._dnode* %21, null, !dbg !17773
  br i1 %22, label %32, label %23, !dbg !17772

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16631, metadata !DIExpression()) #25, !dbg !17767
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !17774
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !16631, metadata !DIExpression()) #25, !dbg !17767
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #26, !dbg !17775
  %27 = icmp sgt i32 %26, 0, !dbg !17776
  br i1 %27, label %28, label %29, !dbg !17777

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #26, !dbg !17778
  br label %33, !dbg !17779

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #26, !dbg !17773
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16631, metadata !DIExpression()) #25, !dbg !17767
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17773
  br i1 %31, label %32, label %23, !dbg !17772, !llvm.loop !17780

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #26, !dbg !17782
  br label %33, !dbg !17783

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !17784
  br label %35, !dbg !17785

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !17786
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17788
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17790
  br i1 %36, label %38, label %37, !dbg !17791

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17792
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17792
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17792
  unreachable, !dbg !17792

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !17740
  call void @llvm.dbg.value(metadata i32 %39, metadata !16413, metadata !DIExpression()) #25, !dbg !17742
  call void @llvm.dbg.value(metadata i32 %39, metadata !16407, metadata !DIExpression()) #25, !dbg !17738
  call void @llvm.dbg.value(metadata i32 %39, metadata !17735, metadata !DIExpression()), !dbg !17737
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17788
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !17793
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #25, !dbg !17795, !srcloc !16455
  call void @llvm.dbg.value(metadata i8 poison, metadata !17732, metadata !DIExpression()), !dbg !17736
  call void @llvm.dbg.value(metadata i32 undef, metadata !17733, metadata !DIExpression()), !dbg !17737
  ret i1 %9, !dbg !17796
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17797 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17801, metadata !DIExpression()), !dbg !17804
  call void @llvm.dbg.value(metadata i32 %1, metadata !17802, metadata !DIExpression()), !dbg !17804
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !17805
  call void @llvm.dbg.value(metadata i1 %3, metadata !17803, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17804
  br i1 %3, label %4, label %12, !dbg !17806

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17808
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17809
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17809
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17809
  %9 = load i8, i8* %8, align 1, !dbg !17809
  %10 = icmp eq i8 %9, 0, !dbg !17810
  br i1 %10, label %11, label %12, !dbg !17811

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !17812
  br label %12, !dbg !17814

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !17815
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !17816 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17818, metadata !DIExpression()), !dbg !17821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17822
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17824, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17826
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17826
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17822
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17827
  br i1 %2, label %4, label %3, !dbg !17828

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17829
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17829
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17829
  unreachable, !dbg !17829

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17826
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17822
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17830
  call void @llvm.dbg.value(metadata i32 undef, metadata !17820, metadata !DIExpression()), !dbg !17821
  call void @llvm.dbg.value(metadata i32 undef, metadata !17818, metadata !DIExpression()), !dbg !17821
  tail call fastcc void @z_sched_lock() #27, !dbg !17831
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17834
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17836
  br i1 %5, label %7, label %6, !dbg !17837

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17838
  unreachable, !dbg !17838

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !17824
  call void @llvm.dbg.value(metadata i32 %8, metadata !16413, metadata !DIExpression()) #25, !dbg !17826
  call void @llvm.dbg.value(metadata i32 %8, metadata !16407, metadata !DIExpression()) #25, !dbg !17822
  call void @llvm.dbg.value(metadata i32 %8, metadata !17820, metadata !DIExpression()), !dbg !17821
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17834
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !17839
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17841, !srcloc !16455
  call void @llvm.dbg.value(metadata i32 1, metadata !17818, metadata !DIExpression()), !dbg !17821
  call void @llvm.dbg.value(metadata i32 undef, metadata !17818, metadata !DIExpression()), !dbg !17821
  ret void, !dbg !17842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !17843 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17844, !srcloc !17133
  call void @llvm.dbg.value(metadata i32 %1, metadata !17129, metadata !DIExpression()) #25, !dbg !17849
  %2 = icmp eq i32 %1, 0, !dbg !17850
  br i1 %2, label %4, label %3, !dbg !17851

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.384, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.385, i32 0, i32 0), i32 noundef 253) #26, !dbg !17852
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.358, i32 0, i32 0)) #26, !dbg !17852
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.385, i32 0, i32 0), i32 noundef 253) #26, !dbg !17852
  unreachable, !dbg !17852

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17854
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17854
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17854
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17854
  %9 = load i8, i8* %8, align 1, !dbg !17854
  %10 = icmp eq i8 %9, 1, !dbg !17854
  br i1 %10, label %11, label %12, !dbg !17857

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.385, i32 0, i32 0), i32 noundef 254) #26, !dbg !17858
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.358, i32 0, i32 0)) #26, !dbg !17858
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.385, i32 0, i32 0), i32 noundef 254) #26, !dbg !17858
  unreachable, !dbg !17858

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !17860
  store i8 %13, i8* %8, align 1, !dbg !17860
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17861, !srcloc !17863
  ret void, !dbg !17864
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !17865 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17867, metadata !DIExpression()), !dbg !17870
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !17871
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17873, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17871
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17876
  br i1 %2, label %4, label %3, !dbg !17877

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17878
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17878
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17878
  unreachable, !dbg !17878

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17871
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17879
  call void @llvm.dbg.value(metadata i32 undef, metadata !17869, metadata !DIExpression()), !dbg !17870
  call void @llvm.dbg.value(metadata i32 undef, metadata !17867, metadata !DIExpression()), !dbg !17870
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17880
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17880
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17880
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17880
  %9 = load i8, i8* %8, align 1, !dbg !17880
  %10 = icmp eq i8 %9, 0, !dbg !17880
  br i1 %10, label %11, label %12, !dbg !17885

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 999) #26, !dbg !17886
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.358, i32 0, i32 0)) #26, !dbg !17886
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 999) #26, !dbg !17886
  unreachable, !dbg !17886

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17888, !srcloc !17133
  call void @llvm.dbg.value(metadata i32 %13, metadata !17129, metadata !DIExpression()) #25, !dbg !17893
  %14 = icmp eq i32 %13, 0, !dbg !17894
  br i1 %14, label %16, label %15, !dbg !17895

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.384, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1000) #26, !dbg !17896
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.358, i32 0, i32 0)) #26, !dbg !17896
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1000) #26, !dbg !17896
  unreachable, !dbg !17896

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17898
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !17899
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !17899
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !17899
  %21 = load i8, i8* %20, align 1, !dbg !17900
  %22 = add i8 %21, 1, !dbg !17900
  store i8 %22, i8* %20, align 1, !dbg !17900
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !17901
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17902
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !17902
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17904
  br i1 %23, label %25, label %24, !dbg !17905

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17906
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17906
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17906
  unreachable, !dbg !17906

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !17873
  call void @llvm.dbg.value(metadata i32 %26, metadata !16413, metadata !DIExpression()) #25, !dbg !17875
  call void @llvm.dbg.value(metadata i32 %26, metadata !16407, metadata !DIExpression()) #25, !dbg !17871
  call void @llvm.dbg.value(metadata i32 %26, metadata !17869, metadata !DIExpression()), !dbg !17870
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !17902
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !17907
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #25, !dbg !17909, !srcloc !16455
  call void @llvm.dbg.value(metadata i32 1, metadata !17867, metadata !DIExpression()), !dbg !17870
  call void @llvm.dbg.value(metadata i32 undef, metadata !17867, metadata !DIExpression()), !dbg !17870
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !17910
  ret void, !dbg !17911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !17912 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17913
  ret %struct.k_thread* %1, !dbg !17914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !17915 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !17919, metadata !DIExpression()), !dbg !17924
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !17920, metadata !DIExpression()), !dbg !17924
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17925
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17921, metadata !DIExpression()), !dbg !17924
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17926
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17922, metadata !DIExpression()), !dbg !17924
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !17927
  call void @llvm.dbg.value(metadata i32 %5, metadata !17923, metadata !DIExpression()), !dbg !17924
  %6 = icmp sgt i32 %5, 0, !dbg !17928
  br i1 %6, label %17, label %7, !dbg !17930

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17931
  br i1 %8, label %17, label %9, !dbg !17933

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17934
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17934
  %12 = load i32, i32* %11, align 8, !dbg !17934
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17936
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17936
  %15 = load i32, i32* %14, align 8, !dbg !17936
  %16 = icmp ult i32 %12, %15, !dbg !17937
  br label %17, !dbg !17938

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17939
  ret i1 %18, !dbg !17940
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17941 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17958, metadata !DIExpression()), !dbg !17973
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17959, metadata !DIExpression()), !dbg !17973
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !17974
  br i1 %4, label %5, label %6, !dbg !17977

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1179) #26, !dbg !17978
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1179) #26, !dbg !17978
  unreachable, !dbg !17978

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17980
  %8 = load i32, i32* %7, align 4, !dbg !17981
  %9 = add nsw i32 %8, 1, !dbg !17981
  store i32 %9, i32* %7, align 4, !dbg !17981
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17982
  store i32 %8, i32* %10, align 8, !dbg !17983
  %11 = load i32, i32* %7, align 4, !dbg !17984
  %12 = icmp eq i32 %11, 0, !dbg !17985
  br i1 %12, label %13, label %35, !dbg !17986

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17987
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #25, !dbg !17987
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17961, metadata !DIExpression()), !dbg !17987
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17987
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17987
  %17 = load i32, i32* %16, align 4, !dbg !17987
  %18 = shl i32 %17, 2, !dbg !17987
  %19 = alloca i8, i32 %18, align 8, !dbg !17987
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17987
  store i8* %19, i8** %20, align 4, !dbg !17987
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17987
  %22 = alloca i8, i32 %17, align 8, !dbg !17987
  store i8* %22, i8** %21, align 4, !dbg !17987
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17987
  store i32 -1, i32* %23, align 4, !dbg !17987
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !17988
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !17970, metadata !DIExpression()), !dbg !17989
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !17960, metadata !DIExpression()), !dbg !17973
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !17990
  br i1 %25, label %26, label %27, !dbg !17987

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #25, !dbg !17990
  br label %35, !dbg !17991

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !17960, metadata !DIExpression()), !dbg !17973
  %29 = load i32, i32* %7, align 4, !dbg !17992
  %30 = add nsw i32 %29, 1, !dbg !17992
  store i32 %30, i32* %7, align 4, !dbg !17992
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !17994
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !17994
  store i32 %29, i32* %32, align 8, !dbg !17995
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !17988
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !17970, metadata !DIExpression()), !dbg !17989
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !17960, metadata !DIExpression()), !dbg !17973
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !17990
  br i1 %34, label %26, label %27, !dbg !17987, !llvm.loop !17996

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17998
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17999
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #26, !dbg !18000
  ret void, !dbg !18001
}

; Function Attrs: optsize
declare !dbg !18002 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !18007 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !18010 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18012, metadata !DIExpression()), !dbg !18014
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18013, metadata !DIExpression()), !dbg !18014
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !18015
  br i1 %3, label %4, label %5, !dbg !18018

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1200) #26, !dbg !18019
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1200) #26, !dbg !18019
  unreachable, !dbg !18019

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18021
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !18022
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #26, !dbg !18023
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !18024
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !18024
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !18026
  br i1 %10, label %11, label %13, !dbg !18027

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !18028
  store i32 0, i32* %12, align 4, !dbg !18030
  br label %13, !dbg !18031

13:                                               ; preds = %11, %5
  ret void, !dbg !18032
}

; Function Attrs: optsize
declare !dbg !18033 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !18034 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18038, metadata !DIExpression()), !dbg !18041
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18039, metadata !DIExpression()), !dbg !18041
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18042
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !18043
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !18040, metadata !DIExpression()), !dbg !18041
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !18039, metadata !DIExpression()), !dbg !18041
  ret %struct.k_thread* %4, !dbg !18044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !18045 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !18049, metadata !DIExpression()), !dbg !18050
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !18051
  ret %struct.rbnode* %2, !dbg !18052
}

; Function Attrs: optsize
declare !dbg !18053 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !18056 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !18068, metadata !DIExpression()), !dbg !18072
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !18073
  %3 = load i32, i32* %2, align 4, !dbg !18073
  %4 = icmp eq i32 %3, 0, !dbg !18075
  br i1 %4, label %10, label %5, !dbg !18076

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18069, metadata !DIExpression()), !dbg !18072
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !18077, !range !5482
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !18078
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !18070, metadata !DIExpression()), !dbg !18072
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.356(%struct._dnode* noundef %7) #27, !dbg !18079
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !18071, metadata !DIExpression()), !dbg !18072
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18069, metadata !DIExpression()), !dbg !18072
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !18072
  ret %struct.k_thread* %11, !dbg !18080
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !18081 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18085, metadata !DIExpression()), !dbg !18088
  call void @llvm.dbg.value(metadata i32 0, metadata !18086, metadata !DIExpression()), !dbg !18088
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.390(%struct._wait_q_t* noundef %0) #27, !dbg !18089
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18087, metadata !DIExpression()), !dbg !18088
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18090
  br i1 %3, label %8, label %4, !dbg !18091

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !18092
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !18094
  call void @llvm.dbg.value(metadata i32 1, metadata !18086, metadata !DIExpression()), !dbg !18088
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.390(%struct._wait_q_t* noundef %0) #27, !dbg !18089
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !18087, metadata !DIExpression()), !dbg !18088
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !18090
  br i1 %7, label %8, label %4, !dbg !18091, !llvm.loop !18095

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !18088
  ret i32 %9, !dbg !18097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.390(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !18098 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18100, metadata !DIExpression()), !dbg !18101
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18102
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.356(%struct._dnode* noundef %2) #27, !dbg !18103
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !18104
  ret %struct.k_thread* %4, !dbg !18105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !18106 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !18115, metadata !DIExpression()), !dbg !18116
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !18117
  tail call fastcc void @sys_dlist_init.391(%struct._dnode* noundef nonnull %2) #27, !dbg !18118
  ret void, !dbg !18119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.391(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !18120 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18124, metadata !DIExpression()), !dbg !18125
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18126
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18127
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18128
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18129
  ret void, !dbg !18130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !18131 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !18132
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !18133
  ret void, !dbg !18134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !18135 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18140, metadata !DIExpression()), !dbg !18141
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !18142
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !18142
  %4 = load i8, i8* %3, align 2, !dbg !18142
  %5 = sext i8 %4 to i32, !dbg !18143
  ret i32 %5, !dbg !18144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18145 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18149, metadata !DIExpression()), !dbg !18152
  call void @llvm.dbg.value(metadata i32 %1, metadata !18150, metadata !DIExpression()), !dbg !18152
  %3 = add i32 %1, 16, !dbg !18153
  %4 = icmp ult i32 %3, 31, !dbg !18153
  br i1 %4, label %6, label %5, !dbg !18153

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1331) #26, !dbg !18157
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.395, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #26, !dbg !18157
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1331) #26, !dbg !18157
  unreachable, !dbg !18157

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18159, !srcloc !17133
  call void @llvm.dbg.value(metadata i32 %7, metadata !17129, metadata !DIExpression()) #25, !dbg !18164
  %8 = icmp eq i32 %7, 0, !dbg !18165
  br i1 %8, label %10, label %9, !dbg !18166

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.384, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1332) #26, !dbg !18167
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.358, i32 0, i32 0)) #26, !dbg !18167
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1332) #26, !dbg !18167
  unreachable, !dbg !18167

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18151, metadata !DIExpression()), !dbg !18152
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !18169
  ret void, !dbg !18170
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !18171 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !18172
  br i1 %1, label %8, label %2, !dbg !18173

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !18174
  br i1 %3, label %8, label %4, !dbg !18175

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18176
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !18177
  %7 = xor i1 %6, true, !dbg !18175
  br label %8, !dbg !18175

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !18178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !18179 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !18180, !range !8224
  %2 = icmp eq i8 %1, 0, !dbg !18180
  ret i1 %2, !dbg !18181
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !18182 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18185, !srcloc !17133
  call void @llvm.dbg.value(metadata i32 %1, metadata !17129, metadata !DIExpression()) #25, !dbg !18190
  %2 = icmp eq i32 %1, 0, !dbg !18191
  br i1 %2, label %4, label %3, !dbg !18192

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.384, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1392) #26, !dbg !18193
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.358, i32 0, i32 0)) #26, !dbg !18193
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1392) #26, !dbg !18193
  unreachable, !dbg !18193

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !18195
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18197, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !18199
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !18199
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !18195
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18200
  br i1 %6, label %8, label %7, !dbg !18201

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !18202
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18202
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !18202
  unreachable, !dbg !18202

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !18199
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !18195
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18203
  call void @llvm.dbg.value(metadata i32 undef, metadata !18184, metadata !DIExpression()), !dbg !18204
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18205
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16593, metadata !DIExpression()) #25, !dbg !18208
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !18210
  %11 = load i8, i8* %10, align 1, !dbg !18211
  %12 = and i8 %11, 127, !dbg !18211
  store i8 %12, i8* %10, align 1, !dbg !18211
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16601, metadata !DIExpression()) #25, !dbg !18212
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #26, !dbg !18214
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18215
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16610, metadata !DIExpression()) #25, !dbg !18216
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !18218
  %15 = load i8, i8* %14, align 1, !dbg !18219
  %16 = or i8 %15, -128, !dbg !18219
  store i8 %16, i8* %14, align 1, !dbg !18219
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16617, metadata !DIExpression()) #25, !dbg !18220
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16624, metadata !DIExpression()) #25, !dbg !18222
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16630, metadata !DIExpression()) #25, !dbg !18222
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #26, !dbg !18224
  br i1 %17, label %18, label %19, !dbg !18225

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 186) #26, !dbg !18226
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 186) #26, !dbg !18226
  unreachable, !dbg !18226

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.356(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !18227
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16631, metadata !DIExpression()) #25, !dbg !18222
  %21 = icmp eq %struct._dnode* %20, null, !dbg !18228
  br i1 %21, label %32, label %22, !dbg !18227

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !16631, metadata !DIExpression()) #25, !dbg !18222
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !18229
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !16631, metadata !DIExpression()) #25, !dbg !18222
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #26, !dbg !18230
  %26 = icmp sgt i32 %25, 0, !dbg !18231
  br i1 %26, label %27, label %29, !dbg !18232

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !18233
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #26, !dbg !18234
  br label %34, !dbg !18235

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #26, !dbg !18228
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16631, metadata !DIExpression()) #25, !dbg !18222
  %31 = icmp eq %struct._dnode* %30, null, !dbg !18228
  br i1 %31, label %32, label %22, !dbg !18227, !llvm.loop !18236

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !18238
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #26, !dbg !18239
  br label %34, !dbg !18240

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !18241
  call void @llvm.dbg.value(metadata i32 undef, metadata !17077, metadata !DIExpression()) #25, !dbg !18242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17082, metadata !DIExpression()) #25, !dbg !18242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17086, metadata !DIExpression()) #25, !dbg !18244
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18246
  br i1 %35, label %37, label %36, !dbg !18247

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !18248
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18248
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !18248
  unreachable, !dbg !18248

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !18197
  call void @llvm.dbg.value(metadata i32 %38, metadata !16413, metadata !DIExpression()) #25, !dbg !18199
  call void @llvm.dbg.value(metadata i32 %38, metadata !16407, metadata !DIExpression()) #25, !dbg !18195
  call void @llvm.dbg.value(metadata i32 %38, metadata !18184, metadata !DIExpression()), !dbg !18204
  call void @llvm.dbg.value(metadata i32 undef, metadata !17077, metadata !DIExpression()) #25, !dbg !18242
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #26, !dbg !18249
  ret void, !dbg !18250
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !18251 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18255, metadata !DIExpression()), !dbg !18258
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18259, !srcloc !17133
  call void @llvm.dbg.value(metadata i32 %3, metadata !17129, metadata !DIExpression()) #25, !dbg !18264
  %4 = icmp eq i32 %3, 0, !dbg !18265
  br i1 %4, label %6, label %5, !dbg !18266

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.384, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1463) #26, !dbg !18267
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.358, i32 0, i32 0)) #26, !dbg !18267
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1463) #26, !dbg !18267
  unreachable, !dbg !18267

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !18269
  br i1 %7, label %8, label %10, !dbg !18271

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18272
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #27, !dbg !18274
  br label %15, !dbg !18275

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !18256, metadata !DIExpression()), !dbg !18258
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !18276
  %12 = sext i32 %11 to i64, !dbg !18276
  call void @llvm.dbg.value(metadata i64 %12, metadata !18256, metadata !DIExpression()), !dbg !18258
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #27, !dbg !18277
  %14 = trunc i64 %13 to i32, !dbg !18277
  call void @llvm.dbg.value(metadata i32 %14, metadata !18257, metadata !DIExpression()), !dbg !18258
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !18258
  ret i32 %16, !dbg !18278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18283, metadata !DIExpression()), !dbg !18284
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !18285, !srcloc !18287
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !18288
  ret void, !dbg !18289
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !18290 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18294, metadata !DIExpression()), !dbg !18298
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18299, !srcloc !17133
  call void @llvm.dbg.value(metadata i32 %2, metadata !17129, metadata !DIExpression()) #25, !dbg !18304
  %3 = icmp eq i32 %2, 0, !dbg !18305
  br i1 %3, label %5, label %4, !dbg !18306

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.384, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1420) #26, !dbg !18307
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.358, i32 0, i32 0)) #26, !dbg !18307
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1420) #26, !dbg !18307
  unreachable, !dbg !18307

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !18309
  br i1 %6, label %7, label %8, !dbg !18311

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #27, !dbg !18312
  br label %43, !dbg !18314

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !18296, metadata !DIExpression()), !dbg !18298
  %9 = icmp sgt i64 %0, -3, !dbg !18315
  br i1 %9, label %10, label %14, !dbg !18317

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !18318
  %12 = trunc i64 %0 to i32, !dbg !18320
  %13 = add i32 %11, %12, !dbg !18320
  call void @llvm.dbg.value(metadata i32 %13, metadata !18295, metadata !DIExpression()), !dbg !18298
  br label %17, !dbg !18321

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !18322
  %16 = sub i32 -2, %15, !dbg !18322
  call void @llvm.dbg.value(metadata i32 %16, metadata !18295, metadata !DIExpression()), !dbg !18298
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !18324
  call void @llvm.dbg.value(metadata i32 %18, metadata !18295, metadata !DIExpression()), !dbg !18298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !18325
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18327, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !18329
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !18329
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !18325
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18330
  br i1 %20, label %22, label %21, !dbg !18331

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !18332
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18332
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !18332
  unreachable, !dbg !18332

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !18329
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !18325
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18333
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()), !dbg !18298
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18334
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !18335
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #27, !dbg !18336
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18337
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !18338
  tail call fastcc void @z_add_thread_timeout.371(%struct.k_thread* noundef %24, [1 x i64] %25) #27, !dbg !18338
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18339
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #27, !dbg !18340
  call void @llvm.dbg.value(metadata i32 undef, metadata !17077, metadata !DIExpression()) #25, !dbg !18341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17082, metadata !DIExpression()) #25, !dbg !18341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17086, metadata !DIExpression()) #25, !dbg !18343
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18345
  br i1 %27, label %29, label %28, !dbg !18346

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !18347
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18347
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !18347
  unreachable, !dbg !18347

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !18327
  call void @llvm.dbg.value(metadata i32 %30, metadata !16413, metadata !DIExpression()) #25, !dbg !18329
  call void @llvm.dbg.value(metadata i32 %30, metadata !16407, metadata !DIExpression()) #25, !dbg !18325
  call void @llvm.dbg.value(metadata i32 %30, metadata !18297, metadata !DIExpression()), !dbg !18298
  call void @llvm.dbg.value(metadata i32 undef, metadata !17077, metadata !DIExpression()) #25, !dbg !18341
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #26, !dbg !18348
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18349
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #27, !dbg !18349
  br i1 %33, label %34, label %35, !dbg !18352

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.396, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1448) #26, !dbg !18353
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.358, i32 0, i32 0)) #26, !dbg !18353
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1448) #26, !dbg !18353
  unreachable, !dbg !18353

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !18355
  %37 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !18356
  %38 = zext i32 %37 to i64, !dbg !18356
  %39 = sub nsw i64 %36, %38, !dbg !18357
  call void @llvm.dbg.value(metadata i64 %39, metadata !18294, metadata !DIExpression()), !dbg !18298
  %40 = icmp sgt i64 %39, 0, !dbg !18358
  %41 = select i1 %40, i64 %39, i64 0, !dbg !18358
  %42 = trunc i64 %41 to i32, !dbg !18358
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !18298
  ret i32 %44, !dbg !18359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !18360 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18362, metadata !DIExpression()), !dbg !18363
  call void @llvm.dbg.value(metadata i64 %0, metadata !16461, metadata !DIExpression()), !dbg !18364
  call void @llvm.dbg.value(metadata i32 10000, metadata !16464, metadata !DIExpression()), !dbg !18364
  call void @llvm.dbg.value(metadata i32 1000, metadata !16465, metadata !DIExpression()), !dbg !18364
  call void @llvm.dbg.value(metadata i8 1, metadata !16466, metadata !DIExpression()), !dbg !18364
  call void @llvm.dbg.value(metadata i1 false, metadata !16467, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18364
  call void @llvm.dbg.value(metadata i1 false, metadata !16468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18364
  call void @llvm.dbg.value(metadata i8 0, metadata !16469, metadata !DIExpression()), !dbg !18364
  call void @llvm.dbg.value(metadata i1 false, metadata !16470, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18364
  call void @llvm.dbg.value(metadata i1 true, metadata !16471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18364
  call void @llvm.dbg.value(metadata i64 0, metadata !16472, metadata !DIExpression()), !dbg !18364
  call void @llvm.dbg.value(metadata i64 0, metadata !16472, metadata !DIExpression()), !dbg !18364
  call void @llvm.dbg.value(metadata i64 %0, metadata !16461, metadata !DIExpression()), !dbg !18364
  %2 = udiv i64 %0, 10, !dbg !18366
  ret i64 %2, !dbg !18370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !18371 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !18372, !srcloc !18374
  tail call void @z_impl_k_yield() #27, !dbg !18375
  ret void, !dbg !18376
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !18377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18381, metadata !DIExpression()), !dbg !18383
  %2 = sext i32 %0 to i64, !dbg !18384
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !18385
  call void @llvm.dbg.value(metadata i64 %3, metadata !18382, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18383
  %4 = shl i64 %3, 32, !dbg !18386
  %5 = ashr exact i64 %4, 32, !dbg !18386
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !18387
  call void @llvm.dbg.value(metadata i32 %6, metadata !18382, metadata !DIExpression()), !dbg !18383
  %7 = sext i32 %6 to i64, !dbg !18388
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !18389
  %9 = trunc i64 %8 to i32, !dbg !18389
  ret i32 %9, !dbg !18390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !18391 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18393, metadata !DIExpression()), !dbg !18394
  call void @llvm.dbg.value(metadata i64 %0, metadata !16461, metadata !DIExpression()), !dbg !18395
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16464, metadata !DIExpression()), !dbg !18395
  call void @llvm.dbg.value(metadata i32 10000, metadata !16465, metadata !DIExpression()), !dbg !18395
  call void @llvm.dbg.value(metadata i8 1, metadata !16466, metadata !DIExpression()), !dbg !18395
  call void @llvm.dbg.value(metadata i1 false, metadata !16467, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18395
  call void @llvm.dbg.value(metadata i1 true, metadata !16468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18395
  call void @llvm.dbg.value(metadata i8 0, metadata !16469, metadata !DIExpression()), !dbg !18395
  call void @llvm.dbg.value(metadata i1 false, metadata !16470, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18395
  call void @llvm.dbg.value(metadata i1 true, metadata !16471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18395
  call void @llvm.dbg.value(metadata i64 0, metadata !16472, metadata !DIExpression()), !dbg !18395
  call void @llvm.dbg.value(metadata i64 0, metadata !16472, metadata !DIExpression()), !dbg !18395
  %2 = add i64 %0, 99, !dbg !18397
  call void @llvm.dbg.value(metadata i64 %2, metadata !16461, metadata !DIExpression()), !dbg !18395
  %3 = udiv i64 %2, 100, !dbg !18398
  ret i64 %3, !dbg !18399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !18400 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18402, metadata !DIExpression()), !dbg !18403
  call void @llvm.dbg.value(metadata i64 %0, metadata !16461, metadata !DIExpression()), !dbg !18404
  call void @llvm.dbg.value(metadata i32 10000, metadata !16464, metadata !DIExpression()), !dbg !18404
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16465, metadata !DIExpression()), !dbg !18404
  call void @llvm.dbg.value(metadata i8 1, metadata !16466, metadata !DIExpression()), !dbg !18404
  call void @llvm.dbg.value(metadata i1 false, metadata !16467, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18404
  call void @llvm.dbg.value(metadata i1 false, metadata !16468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18404
  call void @llvm.dbg.value(metadata i8 0, metadata !16469, metadata !DIExpression()), !dbg !18404
  call void @llvm.dbg.value(metadata i1 true, metadata !16470, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18404
  call void @llvm.dbg.value(metadata i1 false, metadata !16471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18404
  call void @llvm.dbg.value(metadata i64 0, metadata !16472, metadata !DIExpression()), !dbg !18404
  call void @llvm.dbg.value(metadata i64 0, metadata !16472, metadata !DIExpression()), !dbg !18404
  %2 = mul i64 %0, 100, !dbg !18406
  ret i64 %2, !dbg !18408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18409 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18411, metadata !DIExpression()), !dbg !18412
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !18413
  br i1 %2, label %14, label %3, !dbg !18415

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !18416
  %5 = icmp slt i32 %4, 0, !dbg !18418
  br i1 %5, label %6, label %10, !dbg !18419

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18420
  %8 = load i8, i8* %7, align 1, !dbg !18420
  %9 = icmp eq i8 %8, 16, !dbg !18423
  br i1 %9, label %10, label %14, !dbg !18424

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !18425
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !18426
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18427, !srcloc !17133
  call void @llvm.dbg.value(metadata i32 %11, metadata !17129, metadata !DIExpression()) #25, !dbg !18431
  %12 = icmp eq i32 %11, 0, !dbg !18432
  br i1 %12, label %13, label %14, !dbg !18433

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !18434
  br label %14, !dbg !18436

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !18437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !18438 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18440, metadata !DIExpression()), !dbg !18441
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18442
  %3 = load i8, i8* %2, align 1, !dbg !18442
  %4 = and i8 %3, 2, !dbg !18443
  %5 = icmp ne i8 %4, 0, !dbg !18444
  ret i1 %5, !dbg !18445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !18446 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18451
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18450, metadata !DIExpression()), !dbg !18452
  ret %struct.k_thread* %1, !dbg !18453
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !18454 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18455, !srcloc !17133
  call void @llvm.dbg.value(metadata i32 %1, metadata !17129, metadata !DIExpression()) #25, !dbg !18458
  %2 = icmp eq i32 %1, 0, !dbg !18459
  br i1 %2, label %3, label %8, !dbg !18460

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18461
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !18462
  %6 = icmp ne i32 %5, 0, !dbg !18460
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !18463
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18464 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18466, metadata !DIExpression()), !dbg !18468
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !18469
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18471, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !18473
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !18473
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !18469
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18474
  br i1 %3, label %5, label %4, !dbg !18475

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !18476
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18476
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !18476
  unreachable, !dbg !18476

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !18471
  call void @llvm.dbg.value(metadata i32 %6, metadata !16413, metadata !DIExpression()) #25, !dbg !18473
  call void @llvm.dbg.value(metadata i32 %6, metadata !16407, metadata !DIExpression()) #25, !dbg !18469
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18477
  call void @llvm.dbg.value(metadata i32 %6, metadata !18467, metadata !DIExpression()), !dbg !18468
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !18478
  %8 = load i8, i8* %7, align 4, !dbg !18478
  %9 = and i8 %8, 1, !dbg !18480
  %10 = icmp eq i8 %9, 0, !dbg !18481
  br i1 %10, label %15, label %11, !dbg !18482

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !18483
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !18483
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18486
  br i1 %12, label %14, label %13, !dbg !18487

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !18488
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18488
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !18488
  unreachable, !dbg !18488

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !16435, metadata !DIExpression()) #25, !dbg !18483
  call void @llvm.dbg.value(metadata i32 %6, metadata !16449, metadata !DIExpression()) #25, !dbg !18489
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !18491, !srcloc !16455
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.401, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1731) #26, !dbg !18492
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.402, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #26, !dbg !18492
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1731) #26, !dbg !18492
  unreachable, !dbg !18492

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18496
  %17 = load i8, i8* %16, align 1, !dbg !18496
  %18 = and i8 %17, 8, !dbg !18498
  %19 = icmp eq i8 %18, 0, !dbg !18499
  br i1 %19, label %24, label %20, !dbg !18500

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !18501
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !18501
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18504
  br i1 %21, label %23, label %22, !dbg !18505

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !18506
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18506
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !18506
  unreachable, !dbg !18506

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !16435, metadata !DIExpression()) #25, !dbg !18501
  call void @llvm.dbg.value(metadata i32 %6, metadata !16449, metadata !DIExpression()) #25, !dbg !18507
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !18509, !srcloc !16455
  br label %39, !dbg !18510

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !18511
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18512
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !18514
  br i1 %26, label %27, label %35, !dbg !18515

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18516, !srcloc !17133
  call void @llvm.dbg.value(metadata i32 %28, metadata !17129, metadata !DIExpression()) #25, !dbg !18519
  %29 = icmp eq i32 %28, 0, !dbg !18520
  br i1 %29, label %30, label %35, !dbg !18521

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !17077, metadata !DIExpression()) #25, !dbg !18522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17082, metadata !DIExpression()) #25, !dbg !18522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17086, metadata !DIExpression()) #25, !dbg !18525
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18527
  br i1 %31, label %33, label %32, !dbg !18528

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !18529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !18529
  unreachable, !dbg !18529

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !17077, metadata !DIExpression()) #25, !dbg !18522
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #26, !dbg !18530
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.401, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1778) #26, !dbg !18531
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.403, i32 0, i32 0)) #26, !dbg !18531
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1778) #26, !dbg !18531
  unreachable, !dbg !18531

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !18535
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !18535
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18537
  br i1 %36, label %38, label %37, !dbg !18538

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !18539
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18539
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !18539
  unreachable, !dbg !18539

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !16435, metadata !DIExpression()) #25, !dbg !18535
  call void @llvm.dbg.value(metadata i32 %6, metadata !16449, metadata !DIExpression()) #25, !dbg !18540
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !18542, !srcloc !16455
  br label %39, !dbg !18543

39:                                               ; preds = %38, %23
  ret void, !dbg !18543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18544 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18546, metadata !DIExpression()), !dbg !18547
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18548
  %3 = load i8, i8* %2, align 1, !dbg !18548
  %4 = and i8 %3, 8, !dbg !18550
  %5 = icmp eq i8 %4, 0, !dbg !18551
  br i1 %5, label %6, label %20, !dbg !18552

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !18553
  %8 = or i8 %7, 8, !dbg !18553
  store i8 %8, i8* %2, align 1, !dbg !18553
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !18555
  br i1 %9, label %10, label %12, !dbg !18557

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16593, metadata !DIExpression()) #25, !dbg !18558
  %11 = and i8 %8, 95, !dbg !18561
  store i8 %11, i8* %2, align 1, !dbg !18561
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16601, metadata !DIExpression()) #25, !dbg !18562
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !18564
  br label %12, !dbg !18565

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18566
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !18566
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !18568
  br i1 %15, label %17, label %16, !dbg !18569

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !18570
  br label %17, !dbg !18572

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !18573
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18574
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #27, !dbg !18575
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !18576
  br label %20, !dbg !18577

20:                                               ; preds = %17, %1
  ret void, !dbg !18578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !18579 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18583, metadata !DIExpression()), !dbg !18585
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.390(%struct._wait_q_t* noundef %0) #27, !dbg !18586
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18584, metadata !DIExpression()), !dbg !18585
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18587
  br i1 %3, label %10, label %4, !dbg !18588

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !18589
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !18591
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !18592, metadata !DIExpression()), !dbg !18598
  call void @llvm.dbg.value(metadata i32 0, metadata !18597, metadata !DIExpression()), !dbg !18598
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !18600
  store i32 0, i32* %7, align 4, !dbg !18601
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !18602
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.390(%struct._wait_q_t* noundef %0) #27, !dbg !18586
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !18584, metadata !DIExpression()), !dbg !18585
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !18587
  br i1 %9, label %10, label %4, !dbg !18588, !llvm.loop !18603

10:                                               ; preds = %4, %1
  ret void, !dbg !18605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !18606 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18611, metadata !DIExpression()), !dbg !18614
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18610, metadata !DIExpression()), !dbg !18614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !18615
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18617, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !18619
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !18619
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !18615
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18620
  br i1 %4, label %6, label %5, !dbg !18621

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !18622
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18622
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !18622
  unreachable, !dbg !18622

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !18617
  call void @llvm.dbg.value(metadata i32 %7, metadata !16413, metadata !DIExpression()) #25, !dbg !18619
  call void @llvm.dbg.value(metadata i32 %7, metadata !16407, metadata !DIExpression()) #25, !dbg !18615
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18623
  call void @llvm.dbg.value(metadata i32 %7, metadata !18612, metadata !DIExpression()), !dbg !18614
  call void @llvm.dbg.value(metadata i32 0, metadata !18613, metadata !DIExpression()), !dbg !18614
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18624
  %9 = load i8, i8* %8, align 1, !dbg !18624
  %10 = and i8 %9, 8, !dbg !18626
  %11 = icmp eq i8 %10, 0, !dbg !18627
  br i1 %11, label %12, label %35, !dbg !18628

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !18611, metadata !DIExpression()), !dbg !18614
  %14 = icmp eq i64 %13, 0, !dbg !18629
  br i1 %14, label %35, label %15, !dbg !18631

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18632
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !18634
  br i1 %17, label %35, label %18, !dbg !18635

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18636
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !18636
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !18637
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !18638
  br i1 %22, label %35, label %23, !dbg !18639

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18640, !srcloc !17133
  call void @llvm.dbg.value(metadata i32 %24, metadata !17129, metadata !DIExpression()) #25, !dbg !18646
  %25 = icmp eq i32 %24, 0, !dbg !18647
  br i1 %25, label %27, label %26, !dbg !18648

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.384, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1809) #26, !dbg !18649
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.404, i32 0, i32 0)) #26, !dbg !18649
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 1809) #26, !dbg !18649
  unreachable, !dbg !18649

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18651
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18652
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #27, !dbg !18653
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18654
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #27, !dbg !18655
  call void @llvm.dbg.value(metadata i32 undef, metadata !17077, metadata !DIExpression()) #25, !dbg !18656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17082, metadata !DIExpression()) #25, !dbg !18656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17086, metadata !DIExpression()) #25, !dbg !18658
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18660
  br i1 %31, label %33, label %32, !dbg !18661

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !18662
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18662
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 225) #26, !dbg !18662
  unreachable, !dbg !18662

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !17077, metadata !DIExpression()) #25, !dbg !18656
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #26, !dbg !18663
  call void @llvm.dbg.value(metadata i32 %34, metadata !18613, metadata !DIExpression()), !dbg !18614
  br label %40, !dbg !18664

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !18665
  call void @llvm.dbg.value(metadata i32 %36, metadata !18613, metadata !DIExpression()), !dbg !18614
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !18666
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !18666
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18668
  br i1 %37, label %39, label %38, !dbg !18669

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !18670
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18670
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !18670
  unreachable, !dbg !18670

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !16435, metadata !DIExpression()) #25, !dbg !18666
  call void @llvm.dbg.value(metadata i32 %7, metadata !16449, metadata !DIExpression()) #25, !dbg !18671
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !18673, !srcloc !16455
  br label %40, !dbg !18674

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !18614
  ret i32 %41, !dbg !18675
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !18676 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18680, metadata !DIExpression()), !dbg !18688
  call void @llvm.dbg.value(metadata i32 %1, metadata !18681, metadata !DIExpression()), !dbg !18688
  call void @llvm.dbg.value(metadata i8* %2, metadata !18682, metadata !DIExpression()), !dbg !18688
  call void @llvm.dbg.value(metadata i8 0, metadata !18684, metadata !DIExpression()), !dbg !18688
  call void @llvm.dbg.value(metadata i32 0, metadata !18685, metadata !DIExpression()), !dbg !18689
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16401, metadata !DIExpression()) #25, !dbg !18690
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18692, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !18694
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !18694
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !18690
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18695
  br i1 %5, label %7, label %6, !dbg !18696

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !18697
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18697
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !18697
  unreachable, !dbg !18697

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !18694
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !18690
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18698
  call void @llvm.dbg.value(metadata i32 undef, metadata !18687, metadata !DIExpression()), !dbg !18689
  call void @llvm.dbg.value(metadata i8 poison, metadata !18684, metadata !DIExpression()), !dbg !18688
  call void @llvm.dbg.value(metadata i32 undef, metadata !18685, metadata !DIExpression()), !dbg !18689
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #27, !dbg !18699
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18683, metadata !DIExpression()), !dbg !18688
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !18702
  br i1 %10, label %15, label %11, !dbg !18704

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18705, metadata !DIExpression()), !dbg !18712
  call void @llvm.dbg.value(metadata i32 %1, metadata !18710, metadata !DIExpression()), !dbg !18712
  call void @llvm.dbg.value(metadata i8* %2, metadata !18711, metadata !DIExpression()), !dbg !18712
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18592, metadata !DIExpression()), !dbg !18715
  call void @llvm.dbg.value(metadata i32 %1, metadata !18597, metadata !DIExpression()), !dbg !18715
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !18717
  store i32 %1, i32* %12, align 4, !dbg !18718
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18719
  store i8* %2, i8** %13, align 4, !dbg !18720
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #27, !dbg !18721
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #27, !dbg !18722
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #27, !dbg !18723
  call void @llvm.dbg.value(metadata i8 1, metadata !18684, metadata !DIExpression()), !dbg !18688
  br label %15, !dbg !18724

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !18684, metadata !DIExpression()), !dbg !18688
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !18725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16440, metadata !DIExpression()) #25, !dbg !18725
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18727
  br i1 %16, label %18, label %17, !dbg !18728

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !18729
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18729
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !18729
  unreachable, !dbg !18729

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !18688
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !18692
  call void @llvm.dbg.value(metadata i32 %20, metadata !16413, metadata !DIExpression()) #25, !dbg !18694
  call void @llvm.dbg.value(metadata i32 %20, metadata !16407, metadata !DIExpression()) #25, !dbg !18690
  call void @llvm.dbg.value(metadata i32 %20, metadata !18687, metadata !DIExpression()), !dbg !18689
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !18725
  call void @llvm.dbg.value(metadata i32 undef, metadata !16449, metadata !DIExpression()) #25, !dbg !18730
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !18732, !srcloc !16455
  call void @llvm.dbg.value(metadata i8 poison, metadata !18684, metadata !DIExpression()), !dbg !18688
  call void @llvm.dbg.value(metadata i32 undef, metadata !18685, metadata !DIExpression()), !dbg !18689
  ret i1 %19, !dbg !18733
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !18734 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18740, metadata !DIExpression()), !dbg !18745
  call void @llvm.dbg.value(metadata i64 undef, metadata !18742, metadata !DIExpression()), !dbg !18745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18739, metadata !DIExpression()), !dbg !18745
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !18741, metadata !DIExpression()), !dbg !18745
  call void @llvm.dbg.value(metadata i8** %4, metadata !18743, metadata !DIExpression()), !dbg !18745
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !18746
  call void @llvm.dbg.value(metadata i32 %6, metadata !18744, metadata !DIExpression()), !dbg !18745
  %7 = icmp eq i8** %4, null, !dbg !18747
  br i1 %7, label %12, label %8, !dbg !18749

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18750
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18752
  %11 = load i8*, i8** %10, align 4, !dbg !18752
  store i8* %11, i8** %4, align 4, !dbg !18753
  br label %12, !dbg !18754

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !18755
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !18756 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !18758
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !18759
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #26, !dbg !18760
  ret void, !dbg !18761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18762 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !18772, metadata !DIExpression()), !dbg !18789
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18770, metadata !DIExpression()), !dbg !18789
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !18771, metadata !DIExpression()), !dbg !18789
  %5 = icmp eq i64 %4, -1, !dbg !18790
  br i1 %5, label %63, label %6, !dbg !18792

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18793
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.409(%struct._dnode* noundef %7) #27, !dbg !18793
  br i1 %8, label %9, label %10, !dbg !18796

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.411, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.412, i32 0, i32 0), i32 noundef 99) #26, !dbg !18797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.413, i32 0, i32 0)) #26, !dbg !18797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.412, i32 0, i32 0), i32 noundef 99) #26, !dbg !18797
  unreachable, !dbg !18797

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !18799
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !18800
  call void @llvm.dbg.value(metadata i32 0, metadata !18773, metadata !DIExpression()), !dbg !18801
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18802, metadata !DIExpression()) #25, !dbg !18809
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18811, !srcloc !18817
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !18818
  call void @llvm.dbg.value(metadata i32 undef, metadata !18815, metadata !DIExpression()) #25, !dbg !18818
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !18809
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !18819
  br i1 %13, label %15, label %14, !dbg !18822

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.414, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !18823
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.416, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !18823
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !18823
  unreachable, !dbg !18823

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !18811
  call void @llvm.dbg.value(metadata i32 %16, metadata !18814, metadata !DIExpression()) #25, !dbg !18818
  call void @llvm.dbg.value(metadata i32 %16, metadata !18808, metadata !DIExpression()) #25, !dbg !18809
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !18825
  call void @llvm.dbg.value(metadata i32 %16, metadata !18779, metadata !DIExpression()), !dbg !18801
  call void @llvm.dbg.value(metadata i32 undef, metadata !18773, metadata !DIExpression()), !dbg !18801
  %17 = icmp slt i64 %4, -1, !dbg !18826
  br i1 %17, label %18, label %24, !dbg !18827

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !18828
  %20 = add i64 %4, %19, !dbg !18829
  %21 = sub i64 -2, %20, !dbg !18829
  call void @llvm.dbg.value(metadata i64 %21, metadata !18783, metadata !DIExpression()), !dbg !18830
  %22 = icmp sgt i64 %21, 1, !dbg !18831
  %23 = select i1 %22, i64 %21, i64 1, !dbg !18831
  br label %29, !dbg !18832

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !18833
  %26 = tail call fastcc i32 @elapsed.417() #27, !dbg !18835
  %27 = sext i32 %26 to i64, !dbg !18835
  %28 = add nsw i64 %25, %27, !dbg !18836
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !18837
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18838
  store i64 %30, i64* %31, align 8, !dbg !18839
  %32 = tail call fastcc %struct._timeout* @first() #27, !dbg !18840
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !18780, metadata !DIExpression()), !dbg !18842
  %33 = icmp eq %struct._timeout* %32, null, !dbg !18843
  br i1 %33, label %48, label %34, !dbg !18843

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !18844
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !18780, metadata !DIExpression()), !dbg !18842
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18848
  %38 = load i64, i64* %37, align 8, !dbg !18848
  %39 = icmp slt i64 %35, %38, !dbg !18849
  br i1 %39, label %40, label %44, !dbg !18850

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18848
  %42 = sub nsw i64 %38, %35, !dbg !18851
  store i64 %42, i64* %41, align 8, !dbg !18851
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !18853
  tail call fastcc void @sys_dlist_insert.418(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #27, !dbg !18854
  br label %49, !dbg !18855

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !18856
  store i64 %45, i64* %31, align 8, !dbg !18856
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #27, !dbg !18857
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !18780, metadata !DIExpression()), !dbg !18842
  %47 = icmp eq %struct._timeout* %46, null, !dbg !18843
  br i1 %47, label %48, label %34, !dbg !18843, !llvm.loop !18858

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.419(%struct._dnode* noundef nonnull %7) #27, !dbg !18860
  br label %49, !dbg !18863

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #27, !dbg !18864
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !18865
  br i1 %51, label %52, label %59, !dbg !18866

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #27, !dbg !18867
  call void @llvm.dbg.value(metadata i32 %53, metadata !18786, metadata !DIExpression()), !dbg !18868
  %54 = icmp ne i32 %53, 0, !dbg !18869
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !18871
  br i1 %57, label %59, label %58, !dbg !18871

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #26, !dbg !18872
  br label %59, !dbg !18874

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !18881
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18880, metadata !DIExpression()) #25, !dbg !18881
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !18883
  br i1 %60, label %62, label %61, !dbg !18886

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !18887
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.421, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !18887
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !18887
  unreachable, !dbg !18887

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !18875, metadata !DIExpression()) #25, !dbg !18881
  call void @llvm.dbg.value(metadata i32 %16, metadata !18889, metadata !DIExpression()) #25, !dbg !18892
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !18894, !srcloc !18895
  call void @llvm.dbg.value(metadata i32 undef, metadata !18773, metadata !DIExpression()), !dbg !18801
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !18896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.409(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !18897 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18903, metadata !DIExpression()), !dbg !18904
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18905
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18905
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18906
  ret i1 %4, !dbg !18907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.417() unnamed_addr #1 !dbg !18908 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !18911
  %2 = icmp eq i32 %1, 0, !dbg !18912
  br i1 %2, label %3, label %5, !dbg !18911

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !18913
  br label %5, !dbg !18911

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !18911
  ret i32 %6, !dbg !18914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !18915 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.424() #27, !dbg !18921
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18919, metadata !DIExpression()), !dbg !18922
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !18923
  ret %struct._timeout* %2, !dbg !18924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.418(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !18925 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18929, metadata !DIExpression()), !dbg !18933
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18930, metadata !DIExpression()), !dbg !18933
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18934
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18934
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !18931, metadata !DIExpression()), !dbg !18933
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !18935
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !18936
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18937
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !18938
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !18939
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !18940
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !18941
  ret void, !dbg !18942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !18943 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18947, metadata !DIExpression()), !dbg !18949
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18950
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.422(%struct._dnode* noundef %2) #27, !dbg !18951
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18948, metadata !DIExpression()), !dbg !18949
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !18952
  ret %struct._timeout* %4, !dbg !18953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.419(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !18954 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18959, metadata !DIExpression()), !dbg !18962
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18960, metadata !DIExpression()), !dbg !18962
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18963
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !18961, metadata !DIExpression()), !dbg !18962
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18964
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !18965
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18966
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !18967
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !18968
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !18969
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18970
  ret void, !dbg !18971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !18972 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !18977
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !18974, metadata !DIExpression()), !dbg !18978
  %2 = tail call fastcc i32 @elapsed.417() #27, !dbg !18979
  call void @llvm.dbg.value(metadata i32 %2, metadata !18975, metadata !DIExpression()), !dbg !18978
  %3 = icmp eq %struct._timeout* %1, null, !dbg !18980
  br i1 %3, label %14, label %4, !dbg !18982

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !18983
  %6 = load i64, i64* %5, align 8, !dbg !18983
  %7 = sext i32 %2 to i64, !dbg !18984
  %8 = sub nsw i64 %6, %7, !dbg !18985
  %9 = icmp sgt i64 %8, 2147483647, !dbg !18986
  br i1 %9, label %14, label %10, !dbg !18987

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !18988
  %12 = select i1 %11, i64 %8, i64 0, !dbg !18988
  %13 = trunc i64 %12 to i32, !dbg !18988
  call void @llvm.dbg.value(metadata i32 %13, metadata !18976, metadata !DIExpression()), !dbg !18978
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !18990
  call void @llvm.dbg.value(metadata i32 %15, metadata !18976, metadata !DIExpression()), !dbg !18978
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !18991
  %17 = icmp ne i32 %16, 0, !dbg !18993
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !18994
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !18994
  call void @llvm.dbg.value(metadata i32 %20, metadata !18976, metadata !DIExpression()), !dbg !18978
  ret i32 %20, !dbg !18995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.422(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !18996 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19000, metadata !DIExpression()), !dbg !19002
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19001, metadata !DIExpression()), !dbg !19002
  %2 = icmp eq %struct._dnode* %0, null, !dbg !19003
  br i1 %2, label %5, label %3, !dbg !19004

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.423(%struct._dnode* noundef nonnull %0) #27, !dbg !19005
  br label %5, !dbg !19004

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !19004
  ret %struct._dnode* %6, !dbg !19006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.423(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !19007 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19009, metadata !DIExpression()), !dbg !19011
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19010, metadata !DIExpression()), !dbg !19011
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !19012
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !19013
  br i1 %3, label %7, label %4, !dbg !19014

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19015
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !19015
  br label %7, !dbg !19014

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !19014
  ret %struct._dnode* %8, !dbg !19016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.424() unnamed_addr #8 !dbg !19017 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19021, metadata !DIExpression()), !dbg !19022
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.425() #27, !dbg !19023
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !19023
  ret %struct._dnode* %3, !dbg !19024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.425() unnamed_addr #8 !dbg !19025 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19029, metadata !DIExpression()), !dbg !19030
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !19031
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !19032
  ret i1 %2, !dbg !19033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19034 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19038, metadata !DIExpression()), !dbg !19043
  call void @llvm.dbg.value(metadata i32 -22, metadata !19039, metadata !DIExpression()), !dbg !19043
  call void @llvm.dbg.value(metadata i32 0, metadata !19040, metadata !DIExpression()), !dbg !19044
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18802, metadata !DIExpression()) #25, !dbg !19045
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19047, !srcloc !18817
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19049
  call void @llvm.dbg.value(metadata i32 undef, metadata !18815, metadata !DIExpression()) #25, !dbg !19049
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19045
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19050
  br i1 %3, label %5, label %4, !dbg !19051

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.414, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19052
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.416, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19052
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19052
  unreachable, !dbg !19052

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19049
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19045
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19053
  call void @llvm.dbg.value(metadata i32 undef, metadata !19042, metadata !DIExpression()), !dbg !19044
  call void @llvm.dbg.value(metadata i32 -22, metadata !19039, metadata !DIExpression()), !dbg !19043
  call void @llvm.dbg.value(metadata i32 undef, metadata !19040, metadata !DIExpression()), !dbg !19044
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !19039, metadata !DIExpression()), !dbg !19043
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.409(%struct._dnode* noundef %6) #27, !dbg !19054
  br i1 %7, label %8, label %9, !dbg !19058

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !19059
  call void @llvm.dbg.value(metadata i32 0, metadata !19039, metadata !DIExpression()), !dbg !19043
  br label %9, !dbg !19061

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !19043
  call void @llvm.dbg.value(metadata i32 %10, metadata !19039, metadata !DIExpression()), !dbg !19043
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18880, metadata !DIExpression()) #25, !dbg !19062
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19064
  br i1 %11, label %13, label %12, !dbg !19065

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19066
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.421, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19066
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19066
  unreachable, !dbg !19066

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !19047
  call void @llvm.dbg.value(metadata i32 %14, metadata !18814, metadata !DIExpression()) #25, !dbg !19049
  call void @llvm.dbg.value(metadata i32 %14, metadata !18808, metadata !DIExpression()) #25, !dbg !19045
  call void @llvm.dbg.value(metadata i32 %14, metadata !19042, metadata !DIExpression()), !dbg !19044
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19062
  call void @llvm.dbg.value(metadata i32 undef, metadata !18889, metadata !DIExpression()) #25, !dbg !19067
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !19069, !srcloc !18895
  call void @llvm.dbg.value(metadata i32 %10, metadata !19039, metadata !DIExpression()), !dbg !19043
  call void @llvm.dbg.value(metadata i32 undef, metadata !19040, metadata !DIExpression()), !dbg !19044
  ret i32 %10, !dbg !19070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !19071 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19073, metadata !DIExpression()), !dbg !19074
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !19075
  %3 = icmp eq %struct._timeout* %2, null, !dbg !19077
  br i1 %3, label %10, label %4, !dbg !19078

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !19079
  %6 = load i64, i64* %5, align 8, !dbg !19079
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !19081
  %8 = load i64, i64* %7, align 8, !dbg !19082
  %9 = add nsw i64 %8, %6, !dbg !19082
  store i64 %9, i64* %7, align 8, !dbg !19082
  br label %10, !dbg !19083

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19084
  tail call fastcc void @sys_dlist_remove.428(%struct._dnode* noundef %11) #27, !dbg !19085
  ret void, !dbg !19086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.428(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !19087 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19091, metadata !DIExpression()), !dbg !19094
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19095
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !19095
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !19092, metadata !DIExpression()), !dbg !19094
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19096
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !19096
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !19093, metadata !DIExpression()), !dbg !19094
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !19097
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !19098
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !19099
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !19100
  tail call fastcc void @sys_dnode_init.429(%struct._dnode* noundef %0) #27, !dbg !19101
  ret void, !dbg !19102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.429(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !19103 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19105, metadata !DIExpression()), !dbg !19106
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19107
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !19108
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19109
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !19110
  ret void, !dbg !19111
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19112 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19118, metadata !DIExpression()), !dbg !19123
  call void @llvm.dbg.value(metadata i64 0, metadata !19119, metadata !DIExpression()), !dbg !19123
  call void @llvm.dbg.value(metadata i32 0, metadata !19120, metadata !DIExpression()), !dbg !19124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18802, metadata !DIExpression()) #25, !dbg !19125
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19127, !srcloc !18817
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19129
  call void @llvm.dbg.value(metadata i32 undef, metadata !18815, metadata !DIExpression()) #25, !dbg !19129
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19125
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19130
  br i1 %3, label %5, label %4, !dbg !19131

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.414, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19132
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.416, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19132
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19132
  unreachable, !dbg !19132

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19129
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19125
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19133
  call void @llvm.dbg.value(metadata i32 undef, metadata !19122, metadata !DIExpression()), !dbg !19124
  call void @llvm.dbg.value(metadata i64 0, metadata !19119, metadata !DIExpression()), !dbg !19123
  call void @llvm.dbg.value(metadata i32 undef, metadata !19120, metadata !DIExpression()), !dbg !19124
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !19134
  call void @llvm.dbg.value(metadata i64 %6, metadata !19119, metadata !DIExpression()), !dbg !19123
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18880, metadata !DIExpression()) #25, !dbg !19137
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19139
  br i1 %7, label %9, label %8, !dbg !19140

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19141
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.421, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19141
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19141
  unreachable, !dbg !19141

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !19127
  call void @llvm.dbg.value(metadata i32 %10, metadata !18814, metadata !DIExpression()) #25, !dbg !19129
  call void @llvm.dbg.value(metadata i32 %10, metadata !18808, metadata !DIExpression()) #25, !dbg !19125
  call void @llvm.dbg.value(metadata i32 %10, metadata !19122, metadata !DIExpression()), !dbg !19124
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19137
  call void @llvm.dbg.value(metadata i32 undef, metadata !18889, metadata !DIExpression()) #25, !dbg !19142
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !19144, !srcloc !18895
  call void @llvm.dbg.value(metadata i64 %6, metadata !19119, metadata !DIExpression()), !dbg !19123
  call void @llvm.dbg.value(metadata i32 undef, metadata !19120, metadata !DIExpression()), !dbg !19124
  ret i64 %6, !dbg !19145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !19146 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19148, metadata !DIExpression()), !dbg !19152
  call void @llvm.dbg.value(metadata i64 0, metadata !19149, metadata !DIExpression()), !dbg !19152
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.430(%struct._timeout* noundef %0) #27, !dbg !19153
  br i1 %2, label %21, label %3, !dbg !19155

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !19156
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !19150, metadata !DIExpression()), !dbg !19157
  call void @llvm.dbg.value(metadata i64 0, metadata !19149, metadata !DIExpression()), !dbg !19152
  %5 = icmp eq %struct._timeout* %4, null, !dbg !19158
  br i1 %5, label %16, label %6, !dbg !19160

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !19150, metadata !DIExpression()), !dbg !19157
  call void @llvm.dbg.value(metadata i64 %8, metadata !19149, metadata !DIExpression()), !dbg !19152
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !19161
  %10 = load i64, i64* %9, align 8, !dbg !19161
  %11 = add nsw i64 %10, %8, !dbg !19163
  call void @llvm.dbg.value(metadata i64 %11, metadata !19149, metadata !DIExpression()), !dbg !19152
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !19164
  br i1 %12, label %16, label %13, !dbg !19166

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !19167
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !19150, metadata !DIExpression()), !dbg !19157
  call void @llvm.dbg.value(metadata i64 %11, metadata !19149, metadata !DIExpression()), !dbg !19152
  %15 = icmp eq %struct._timeout* %14, null, !dbg !19158
  br i1 %15, label %16, label %6, !dbg !19160, !llvm.loop !19168

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !19152
  call void @llvm.dbg.value(metadata i64 %17, metadata !19149, metadata !DIExpression()), !dbg !19152
  %18 = tail call fastcc i32 @elapsed.417() #27, !dbg !19170
  %19 = sext i32 %18 to i64, !dbg !19170
  %20 = sub nsw i64 %17, %19, !dbg !19171
  br label %21, !dbg !19172

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !19152
  ret i64 %22, !dbg !19173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.430(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !19174 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19178, metadata !DIExpression()), !dbg !19179
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19180
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.409(%struct._dnode* noundef %2) #27, !dbg !19181
  %4 = xor i1 %3, true, !dbg !19182
  ret i1 %4, !dbg !19183
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19184 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19186, metadata !DIExpression()), !dbg !19191
  call void @llvm.dbg.value(metadata i64 0, metadata !19187, metadata !DIExpression()), !dbg !19191
  call void @llvm.dbg.value(metadata i32 0, metadata !19188, metadata !DIExpression()), !dbg !19192
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18802, metadata !DIExpression()) #25, !dbg !19193
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19195, !srcloc !18817
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19197
  call void @llvm.dbg.value(metadata i32 undef, metadata !18815, metadata !DIExpression()) #25, !dbg !19197
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19193
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19198
  br i1 %3, label %5, label %4, !dbg !19199

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.414, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19200
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.416, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19200
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19200
  unreachable, !dbg !19200

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19197
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19193
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19201
  call void @llvm.dbg.value(metadata i32 undef, metadata !19190, metadata !DIExpression()), !dbg !19192
  call void @llvm.dbg.value(metadata i64 0, metadata !19187, metadata !DIExpression()), !dbg !19191
  call void @llvm.dbg.value(metadata i32 undef, metadata !19188, metadata !DIExpression()), !dbg !19192
  %6 = load i64, i64* @curr_tick, align 8, !dbg !19202
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !19205
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !19187, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19191
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19206
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18880, metadata !DIExpression()) #25, !dbg !19206
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19208
  br i1 %8, label %10, label %9, !dbg !19209

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19210
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.421, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19210
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19210
  unreachable, !dbg !19210

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !19195
  call void @llvm.dbg.value(metadata i32 %11, metadata !18814, metadata !DIExpression()) #25, !dbg !19197
  call void @llvm.dbg.value(metadata i32 %11, metadata !18808, metadata !DIExpression()) #25, !dbg !19193
  call void @llvm.dbg.value(metadata i32 %11, metadata !19190, metadata !DIExpression()), !dbg !19192
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !19187, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19191
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19206
  call void @llvm.dbg.value(metadata i32 undef, metadata !18889, metadata !DIExpression()) #25, !dbg !19211
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !19213, !srcloc !18895
  call void @llvm.dbg.value(metadata i32 undef, metadata !19188, metadata !DIExpression()), !dbg !19192
  %12 = add i64 %7, %6, !dbg !19214
  ret i64 %12, !dbg !19215
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !19216 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !19218, metadata !DIExpression()), !dbg !19222
  call void @llvm.dbg.value(metadata i32 0, metadata !19219, metadata !DIExpression()), !dbg !19223
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18802, metadata !DIExpression()) #25, !dbg !19224
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19226, !srcloc !18817
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19228
  call void @llvm.dbg.value(metadata i32 undef, metadata !18815, metadata !DIExpression()) #25, !dbg !19228
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19224
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19229
  br i1 %2, label %4, label %3, !dbg !19230

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.414, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19231
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.416, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19231
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19231
  unreachable, !dbg !19231

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19228
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19224
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19232
  call void @llvm.dbg.value(metadata i32 undef, metadata !19221, metadata !DIExpression()), !dbg !19223
  call void @llvm.dbg.value(metadata i32 -1, metadata !19218, metadata !DIExpression()), !dbg !19222
  call void @llvm.dbg.value(metadata i32 undef, metadata !19219, metadata !DIExpression()), !dbg !19223
  %5 = tail call fastcc i32 @next_timeout() #27, !dbg !19233
  call void @llvm.dbg.value(metadata i32 %5, metadata !19218, metadata !DIExpression()), !dbg !19222
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19236
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18880, metadata !DIExpression()) #25, !dbg !19236
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19238
  br i1 %6, label %8, label %7, !dbg !19239

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19240
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.421, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19240
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19240
  unreachable, !dbg !19240

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !19226
  call void @llvm.dbg.value(metadata i32 %9, metadata !18814, metadata !DIExpression()) #25, !dbg !19228
  call void @llvm.dbg.value(metadata i32 %9, metadata !18808, metadata !DIExpression()) #25, !dbg !19224
  call void @llvm.dbg.value(metadata i32 %9, metadata !19221, metadata !DIExpression()), !dbg !19223
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19236
  call void @llvm.dbg.value(metadata i32 undef, metadata !18889, metadata !DIExpression()) #25, !dbg !19241
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !19243, !srcloc !18895
  call void @llvm.dbg.value(metadata i32 %5, metadata !19218, metadata !DIExpression()), !dbg !19222
  call void @llvm.dbg.value(metadata i32 undef, metadata !19219, metadata !DIExpression()), !dbg !19223
  ret i32 %5, !dbg !19244
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !19245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19247, metadata !DIExpression()), !dbg !19257
  call void @llvm.dbg.value(metadata i1 %1, metadata !19248, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19257
  call void @llvm.dbg.value(metadata i32 0, metadata !19249, metadata !DIExpression()), !dbg !19258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18802, metadata !DIExpression()) #25, !dbg !19259
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19261, !srcloc !18817
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19263
  call void @llvm.dbg.value(metadata i32 undef, metadata !18815, metadata !DIExpression()) #25, !dbg !19263
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19259
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19264
  br i1 %4, label %6, label %5, !dbg !19265

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.414, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19266
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.416, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19266
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19266
  unreachable, !dbg !19266

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19263
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19259
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19267
  call void @llvm.dbg.value(metadata i32 undef, metadata !19251, metadata !DIExpression()), !dbg !19258
  call void @llvm.dbg.value(metadata i32 undef, metadata !19249, metadata !DIExpression()), !dbg !19258
  %7 = tail call fastcc i32 @next_timeout() #27, !dbg !19268
  call void @llvm.dbg.value(metadata i32 %7, metadata !19252, metadata !DIExpression()), !dbg !19269
  call void @llvm.dbg.value(metadata i1 undef, metadata !19255, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19269
  %8 = icmp slt i32 %7, 2, !dbg !19270
  call void @llvm.dbg.value(metadata i1 %8, metadata !19256, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19269
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !19271
  call void @llvm.dbg.value(metadata i1 %9, metadata !19255, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19269
  br i1 %10, label %14, label %11, !dbg !19271

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !19273
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !19273
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #26, !dbg !19275
  br label %14, !dbg !19276

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19277
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18880, metadata !DIExpression()) #25, !dbg !19277
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19279
  br i1 %15, label %17, label %16, !dbg !19280

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19281
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.421, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19281
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19281
  unreachable, !dbg !19281

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !19261
  call void @llvm.dbg.value(metadata i32 %18, metadata !18814, metadata !DIExpression()) #25, !dbg !19263
  call void @llvm.dbg.value(metadata i32 %18, metadata !18808, metadata !DIExpression()) #25, !dbg !19259
  call void @llvm.dbg.value(metadata i32 %18, metadata !19251, metadata !DIExpression()), !dbg !19258
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19277
  call void @llvm.dbg.value(metadata i32 undef, metadata !18889, metadata !DIExpression()) #25, !dbg !19282
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !19284, !srcloc !18895
  call void @llvm.dbg.value(metadata i32 1, metadata !19249, metadata !DIExpression()), !dbg !19258
  call void @llvm.dbg.value(metadata i32 undef, metadata !19249, metadata !DIExpression()), !dbg !19258
  ret void, !dbg !19285
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !19286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19290, metadata !DIExpression()), !dbg !19295
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !19296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18802, metadata !DIExpression()) #25, !dbg !19297
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19299, !srcloc !18817
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19301
  call void @llvm.dbg.value(metadata i32 undef, metadata !18815, metadata !DIExpression()) #25, !dbg !19301
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19297
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19302
  br i1 %3, label %5, label %4, !dbg !19303

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.414, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19304
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.416, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19304
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19304
  unreachable, !dbg !19304

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19301
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19297
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19305
  call void @llvm.dbg.value(metadata i32 undef, metadata !19291, metadata !DIExpression()), !dbg !19295
  store i32 %0, i32* @announce_remaining, align 4, !dbg !19295
  call void @llvm.dbg.value(metadata i32 undef, metadata !19291, metadata !DIExpression()), !dbg !19295
  %6 = tail call fastcc %struct._timeout* @first() #27, !dbg !19306
  %7 = icmp eq %struct._timeout* %6, null, !dbg !19307
  br i1 %7, label %37, label %8, !dbg !19308

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !19295
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !19309
  %14 = load i64, i64* %13, align 8, !dbg !19309
  %15 = sext i32 %11 to i64, !dbg !19310
  %16 = icmp sgt i64 %14, %15, !dbg !19311
  br i1 %16, label %35, label %17, !dbg !19312

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !19292, metadata !DIExpression()), !dbg !19313
  %18 = trunc i64 %14 to i32, !dbg !19314
  call void @llvm.dbg.value(metadata i32 %18, metadata !19294, metadata !DIExpression()), !dbg !19313
  %19 = sext i32 %18 to i64, !dbg !19315
  %20 = load i64, i64* @curr_tick, align 8, !dbg !19316
  %21 = add i64 %20, %19, !dbg !19316
  store i64 %21, i64* @curr_tick, align 8, !dbg !19316
  store i64 0, i64* %13, align 8, !dbg !19317
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #27, !dbg !19318
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19319
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18880, metadata !DIExpression()) #25, !dbg !19319
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19321
  br i1 %22, label %24, label %23, !dbg !19322

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19323
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.421, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19323
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19323
  unreachable, !dbg !19323

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !18875, metadata !DIExpression()) #25, !dbg !19319
  call void @llvm.dbg.value(metadata i32 %12, metadata !18889, metadata !DIExpression()) #25, !dbg !19324
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !19326, !srcloc !18895
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !19327
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !19327
  tail call void %26(%struct._timeout* noundef nonnull %9) #26, !dbg !19328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18802, metadata !DIExpression()) #25, !dbg !19329
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19331, !srcloc !18817
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19333
  call void @llvm.dbg.value(metadata i32 undef, metadata !18815, metadata !DIExpression()) #25, !dbg !19333
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19329
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19334
  br i1 %28, label %30, label %29, !dbg !19335

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.414, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19336
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.416, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19336
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19336
  unreachable, !dbg !19336

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19333
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19329
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19337
  call void @llvm.dbg.value(metadata i32 undef, metadata !19291, metadata !DIExpression()), !dbg !19295
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !19338
  %32 = sub nsw i32 %31, %18, !dbg !19338
  store i32 %32, i32* @announce_remaining, align 4, !dbg !19295
  call void @llvm.dbg.value(metadata i32 undef, metadata !19291, metadata !DIExpression()), !dbg !19295
  %33 = tail call fastcc %struct._timeout* @first() #27, !dbg !19306
  %34 = icmp eq %struct._timeout* %33, null, !dbg !19307
  br i1 %34, label %37, label %8, !dbg !19308, !llvm.loop !19339

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !19341
  store i64 %36, i64* %13, align 8, !dbg !19341
  br label %41, !dbg !19344

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !19295
  %40 = sext i32 %39 to i64, !dbg !19345
  br label %41, !dbg !19345

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !19345
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !19346
  %45 = add i64 %44, %42, !dbg !19346
  store i64 %45, i64* @curr_tick, align 8, !dbg !19346
  store i32 0, i32* @announce_remaining, align 4, !dbg !19347
  %46 = tail call fastcc i32 @next_timeout() #27, !dbg !19348
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #26, !dbg !19349
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19350
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18880, metadata !DIExpression()) #25, !dbg !19350
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19352
  br i1 %47, label %49, label %48, !dbg !19353

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19354
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.421, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19354
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19354
  unreachable, !dbg !19354

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !19295
  call void @llvm.dbg.value(metadata i32 %50, metadata !18875, metadata !DIExpression()) #25, !dbg !19350
  call void @llvm.dbg.value(metadata i32 %50, metadata !18889, metadata !DIExpression()) #25, !dbg !19355
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #25, !dbg !19357, !srcloc !18895
  ret void, !dbg !19358
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !19359 {
  call void @llvm.dbg.value(metadata i64 0, metadata !19363, metadata !DIExpression()), !dbg !19367
  call void @llvm.dbg.value(metadata i32 0, metadata !19364, metadata !DIExpression()), !dbg !19368
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18802, metadata !DIExpression()) #25, !dbg !19369
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19371, !srcloc !18817
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19373
  call void @llvm.dbg.value(metadata i32 undef, metadata !18815, metadata !DIExpression()) #25, !dbg !19373
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19369
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19374
  br i1 %2, label %4, label %3, !dbg !19375

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.414, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19376
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.416, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19376
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 148) #26, !dbg !19376
  unreachable, !dbg !19376

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18814, metadata !DIExpression()) #25, !dbg !19373
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()) #25, !dbg !19369
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19377
  call void @llvm.dbg.value(metadata i32 undef, metadata !19366, metadata !DIExpression()), !dbg !19368
  call void @llvm.dbg.value(metadata i64 0, metadata !19363, metadata !DIExpression()), !dbg !19367
  call void @llvm.dbg.value(metadata i32 undef, metadata !19364, metadata !DIExpression()), !dbg !19368
  %5 = load i64, i64* @curr_tick, align 8, !dbg !19378
  %6 = tail call fastcc i32 @elapsed.417() #27, !dbg !19381
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !19363, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !19367
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18880, metadata !DIExpression()) #25, !dbg !19382
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19384
  br i1 %7, label %9, label %8, !dbg !19385

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19386
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.421, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19386
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.415, i32 0, i32 0), i32 noundef 194) #26, !dbg !19386
  unreachable, !dbg !19386

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !19371
  call void @llvm.dbg.value(metadata i32 %10, metadata !18814, metadata !DIExpression()) #25, !dbg !19373
  call void @llvm.dbg.value(metadata i32 %10, metadata !18808, metadata !DIExpression()) #25, !dbg !19369
  call void @llvm.dbg.value(metadata i32 %10, metadata !19366, metadata !DIExpression()), !dbg !19368
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !19363, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !19367
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !19363, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19367
  call void @llvm.dbg.value(metadata i32 undef, metadata !18875, metadata !DIExpression()) #25, !dbg !19382
  call void @llvm.dbg.value(metadata i32 undef, metadata !18889, metadata !DIExpression()) #25, !dbg !19387
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !19389, !srcloc !18895
  call void @llvm.dbg.value(metadata i32 undef, metadata !19364, metadata !DIExpression()), !dbg !19368
  %11 = sext i32 %6 to i64, !dbg !19381
  %12 = add i64 %5, %11, !dbg !19390
  ret i64 %12, !dbg !19391
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !19392 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !19393
  %2 = trunc i64 %1 to i32, !dbg !19394
  ret i32 %2, !dbg !19395
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !19396 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !19397
  ret i64 %1, !dbg !19398
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !19399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19401, metadata !DIExpression()), !dbg !19408
  %2 = icmp eq i32 %0, 0, !dbg !19409
  br i1 %2, label %10, label %3, !dbg !19411

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !19412
  call void @llvm.dbg.value(metadata i32 %4, metadata !19402, metadata !DIExpression()), !dbg !19408
  %5 = mul i32 %0, 168, !dbg !19413
  call void @llvm.dbg.value(metadata i32 %5, metadata !19403, metadata !DIExpression()), !dbg !19408
  br label %6, !dbg !19414

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !19415
  call void @llvm.dbg.value(metadata i32 %7, metadata !19404, metadata !DIExpression()), !dbg !19416
  %8 = sub i32 %7, %4, !dbg !19417
  %9 = icmp ult i32 %8, %5, !dbg !19419
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !19420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !19421 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !19422
  ret i32 %1, !dbg !19423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !19424 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !19426
  ret i32 %1, !dbg !19427
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !19428 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !19432, metadata !DIExpression()), !dbg !19434
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !19435

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !19436
  br label %14, !dbg !19440

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !19433, metadata !DIExpression()), !dbg !19434
  %6 = icmp slt i64 %2, -1, !dbg !19441
  br i1 %6, label %7, label %9, !dbg !19444

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !19445
  br label %14, !dbg !19446

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !19448
  %11 = icmp ugt i64 %2, 1, !dbg !19449
  %12 = select i1 %11, i64 %2, i64 1, !dbg !19449
  %13 = add nsw i64 %10, %12, !dbg !19450
  br label %14, !dbg !19451

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !19452
  ret i64 %15, !dbg !19453
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !19454 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19456, metadata !DIExpression()), !dbg !19460
  %2 = icmp eq i8* %0, null, !dbg !19461
  br i1 %2, label %7, label %3, !dbg !19463

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !19457, metadata !DIExpression()), !dbg !19460
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !19464
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !19464
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !19457, metadata !DIExpression()), !dbg !19460
  call void @llvm.dbg.value(metadata i8* %4, metadata !19456, metadata !DIExpression()), !dbg !19460
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !19466
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #26, !dbg !19467
  br label %7, !dbg !19468

7:                                                ; preds = %3, %1
  ret void, !dbg !19469
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !19470 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19474, metadata !DIExpression()), !dbg !19477
  call void @llvm.dbg.value(metadata i32 %1, metadata !19475, metadata !DIExpression()), !dbg !19477
  %3 = icmp ugt i32 %0, 3, !dbg !19478
  %4 = and i32 %0, 3, !dbg !19478
  %5 = icmp eq i32 %4, 0, !dbg !19478
  %6 = and i1 %3, %5, !dbg !19478
  br i1 %6, label %8, label %7, !dbg !19478

7:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.445, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.446, i32 0, i32 0), i32 noundef 68) #26, !dbg !19481
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.447, i32 0, i32 0)) #26, !dbg !19481
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.446, i32 0, i32 0), i32 noundef 68) #26, !dbg !19481
  unreachable, !dbg !19481

8:                                                ; preds = %2
  %9 = tail call i32 @llvm.ctpop.i32(i32 %0), !dbg !19483, !range !5482
  %10 = icmp ult i32 %9, 2, !dbg !19483
  br i1 %10, label %12, label %11, !dbg !19486

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.448, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.446, i32 0, i32 0), i32 noundef 71) #26, !dbg !19487
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.449, i32 0, i32 0)) #26, !dbg !19487
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.446, i32 0, i32 0), i32 noundef 71) #26, !dbg !19487
  unreachable, !dbg !19487

12:                                               ; preds = %8
  %13 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #27, !dbg !19489
  call void @llvm.dbg.value(metadata i8* %13, metadata !19476, metadata !DIExpression()), !dbg !19477
  ret i8* %13, !dbg !19490
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !19491 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19495, metadata !DIExpression()), !dbg !19501
  call void @llvm.dbg.value(metadata i32 %1, metadata !19496, metadata !DIExpression()), !dbg !19501
  call void @llvm.dbg.value(metadata i32 %2, metadata !19497, metadata !DIExpression()), !dbg !19501
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !19497, metadata !DIExpression(DW_OP_deref)), !dbg !19501
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !19502
  br i1 %5, label %21, label %6, !dbg !19504

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !19505
  call void @llvm.dbg.value(metadata i32 %7, metadata !19500, metadata !DIExpression()), !dbg !19501
  %8 = load i32, i32* %4, align 4, !dbg !19506
  call void @llvm.dbg.value(metadata i32 %8, metadata !19497, metadata !DIExpression()), !dbg !19501
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #26, !dbg !19507
  call void @llvm.dbg.value(metadata i8* %9, metadata !19498, metadata !DIExpression()), !dbg !19501
  %10 = icmp eq i8* %9, null, !dbg !19508
  br i1 %10, label %21, label %11, !dbg !19510

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !19511
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !19499, metadata !DIExpression()), !dbg !19501
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !19512
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !19513
  call void @llvm.dbg.value(metadata i8* %13, metadata !19499, metadata !DIExpression()), !dbg !19501
  call void @llvm.dbg.value(metadata i8* %13, metadata !19498, metadata !DIExpression()), !dbg !19501
  %14 = icmp eq i32 %1, 0, !dbg !19514
  br i1 %14, label %21, label %15, !dbg !19514

15:                                               ; preds = %11
  %16 = ptrtoint i8* %13 to i32, !dbg !19514
  %17 = add i32 %1, -1, !dbg !19514
  %18 = and i32 %17, %16, !dbg !19514
  %19 = icmp eq i32 %18, 0, !dbg !19514
  br i1 %19, label %21, label %20, !dbg !19517

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6.450, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.446, i32 0, i32 0), i32 noundef 38) #26, !dbg !19518
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.451, i32 0, i32 0), i8* noundef nonnull %13, i32 noundef %1) #26, !dbg !19518
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.446, i32 0, i32 0), i32 noundef 38) #26, !dbg !19518
  unreachable, !dbg !19518

21:                                               ; preds = %11, %15, %6, %3
  %22 = phi i8* [ null, %3 ], [ null, %6 ], [ %13, %15 ], [ %13, %11 ], !dbg !19501
  ret i8* %22, !dbg !19520
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #23 !dbg !19521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19523, metadata !DIExpression()), !dbg !19526
  call void @llvm.dbg.value(metadata i32 4, metadata !19524, metadata !DIExpression()), !dbg !19526
  call void @llvm.dbg.value(metadata i32* %1, metadata !19525, metadata !DIExpression()), !dbg !19526
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !19527
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !19527
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !19527
  store i32 %5, i32* %1, align 4, !dbg !19527
  ret i1 %4, !dbg !19528
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !19529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19531, metadata !DIExpression()), !dbg !19533
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #27, !dbg !19534
  call void @llvm.dbg.value(metadata i8* %2, metadata !19532, metadata !DIExpression()), !dbg !19533
  ret i8* %2, !dbg !19535
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !19536 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !19538, metadata !DIExpression()), !dbg !19542
  call void @llvm.dbg.value(metadata i32 %1, metadata !19539, metadata !DIExpression()), !dbg !19542
  %4 = bitcast i32* %3 to i8*, !dbg !19543
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25, !dbg !19543
  call void @llvm.dbg.value(metadata i32* %3, metadata !19541, metadata !DIExpression(DW_OP_deref)), !dbg !19542
  %5 = call fastcc zeroext i1 @size_mul_overflow.454(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #27, !dbg !19544
  br i1 %5, label %12, label %6, !dbg !19546

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !19547
  call void @llvm.dbg.value(metadata i32 %7, metadata !19541, metadata !DIExpression()), !dbg !19542
  %8 = tail call i8* @k_malloc(i32 noundef %7) #27, !dbg !19548
  call void @llvm.dbg.value(metadata i8* %8, metadata !19540, metadata !DIExpression()), !dbg !19542
  %9 = icmp eq i8* %8, null, !dbg !19549
  br i1 %9, label %12, label %10, !dbg !19551

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !19541, metadata !DIExpression()), !dbg !19542
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #26, !dbg !19552
  br label %12, !dbg !19554

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !19542
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25, !dbg !19555
  ret i8* %13, !dbg !19555
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow.454(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !19556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19558, metadata !DIExpression()), !dbg !19561
  call void @llvm.dbg.value(metadata i32 %1, metadata !19559, metadata !DIExpression()), !dbg !19561
  call void @llvm.dbg.value(metadata i32* %2, metadata !19560, metadata !DIExpression()), !dbg !19561
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !19562
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !19562
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !19562
  store i32 %6, i32* %2, align 4, !dbg !19562
  ret i1 %5, !dbg !19563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !19564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19638, metadata !DIExpression()), !dbg !19639
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !19640
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 8, !dbg !19641
  ret void, !dbg !19642
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !19643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19645, metadata !DIExpression()), !dbg !19649
  call void @llvm.dbg.value(metadata i32 %1, metadata !19646, metadata !DIExpression()), !dbg !19649
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !19650
  br i1 %3, label %9, label %4, !dbg !19652

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19653
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !19655
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !19655
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !19648, metadata !DIExpression()), !dbg !19649
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !19656
  br i1 %8, label %12, label %9, !dbg !19658

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #27, !dbg !19659
  call void @llvm.dbg.value(metadata i8* %11, metadata !19647, metadata !DIExpression()), !dbg !19649
  br label %12, !dbg !19661

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !19662
  call void @llvm.dbg.value(metadata i8* %13, metadata !19647, metadata !DIExpression()), !dbg !19649
  ret i8* %13, !dbg !19663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @boot_banner() local_unnamed_addr #4 !dbg !19664 {
  ret void, !dbg !19666
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !19667 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !19669, metadata !DIExpression()), !dbg !19691
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !19670, metadata !DIExpression()), !dbg !19692
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !19693

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.463, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.464, i32 0, i32 0), i32 noundef 24) #26, !dbg !19697
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.465, i32 0, i32 0)) #26, !dbg !19697
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.464, i32 0, i32 0), i32 noundef 24) #26, !dbg !19697
  unreachable, !dbg !19697

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !19670, metadata !DIExpression()), !dbg !19692
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !19700
  br i1 %5, label %7, label %6, !dbg !19701

6:                                                ; preds = %3
  ret i32 0, !dbg !19702

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !19703
  %9 = load i8*, i8** %8, align 4, !dbg !19703
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !19706
  %11 = load i32, i32* %10, align 4, !dbg !19706
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #27, !dbg !19707
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !19708
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !19670, metadata !DIExpression()), !dbg !19692
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !19709
  br i1 %13, label %2, label %3, !dbg !19693, !llvm.loop !19710
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !19712 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19716, metadata !DIExpression()), !dbg !19719
  call void @llvm.dbg.value(metadata i8* %1, metadata !19717, metadata !DIExpression()), !dbg !19719
  call void @llvm.dbg.value(metadata i32 %2, metadata !19718, metadata !DIExpression()), !dbg !19719
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19720
  tail call fastcc void @z_waitq_init.466(%struct._wait_q_t* noundef nonnull %4) #27, !dbg !19721
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19722
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #26, !dbg !19723
  ret void, !dbg !19724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.466(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !19725 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19730, metadata !DIExpression()), !dbg !19731
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !19732
  tail call fastcc void @sys_dlist_init.467(%struct._dnode* noundef %2) #27, !dbg !19733
  ret void, !dbg !19734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.467(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !19735 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19740, metadata !DIExpression()), !dbg !19741
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19742
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !19743
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19744
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !19745
  ret void, !dbg !19746
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !19747 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !19758, metadata !DIExpression()), !dbg !19768
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19755, metadata !DIExpression()), !dbg !19768
  call void @llvm.dbg.value(metadata i32 %1, metadata !19756, metadata !DIExpression()), !dbg !19768
  call void @llvm.dbg.value(metadata i32 %2, metadata !19757, metadata !DIExpression()), !dbg !19768
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #26, !dbg !19769
  call void @llvm.dbg.value(metadata i64 %6, metadata !19760, metadata !DIExpression()), !dbg !19768
  call void @llvm.dbg.value(metadata i8* null, metadata !19761, metadata !DIExpression()), !dbg !19768
  %7 = icmp eq i64 %5, -1, !dbg !19770
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !19770
  call void @llvm.dbg.value(metadata i64 %8, metadata !19760, metadata !DIExpression()), !dbg !19768
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19771
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19772, metadata !DIExpression()) #25, !dbg !19779
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19781, !srcloc !19787
  call void @llvm.dbg.value(metadata i32 undef, metadata !19784, metadata !DIExpression()) #25, !dbg !19788
  call void @llvm.dbg.value(metadata i32 undef, metadata !19785, metadata !DIExpression()) #25, !dbg !19788
  call void @llvm.dbg.value(metadata i32 undef, metadata !19778, metadata !DIExpression()) #25, !dbg !19779
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !19789
  br i1 %11, label %13, label %12, !dbg !19792

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.470, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.471, i32 0, i32 0), i32 noundef 148) #26, !dbg !19793
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.472, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !19793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.471, i32 0, i32 0), i32 noundef 148) #26, !dbg !19793
  unreachable, !dbg !19793

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !19784, metadata !DIExpression()) #25, !dbg !19788
  call void @llvm.dbg.value(metadata i32 undef, metadata !19778, metadata !DIExpression()) #25, !dbg !19779
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !19795
  call void @llvm.dbg.value(metadata i32 undef, metadata !19762, metadata !DIExpression()), !dbg !19768
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19796, !srcloc !19805
  call void @llvm.dbg.value(metadata i32 %14, metadata !19799, metadata !DIExpression()) #25, !dbg !19806
  %15 = icmp eq i32 %14, 0, !dbg !19807
  %16 = icmp eq i64 %5, 0, !dbg !19808
  %17 = select i1 %15, i1 true, i1 %16, !dbg !19808
  br i1 %17, label %18, label %25, !dbg !19808

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !19761, metadata !DIExpression()), !dbg !19768
  call void @llvm.dbg.value(metadata i8 0, metadata !19767, metadata !DIExpression()), !dbg !19768
  call void @llvm.dbg.value(metadata i32 undef, metadata !19762, metadata !DIExpression()), !dbg !19768
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #26, !dbg !19809
  call void @llvm.dbg.value(metadata i8* %20, metadata !19761, metadata !DIExpression()), !dbg !19768
  %21 = tail call i64 @sys_clock_tick_get() #26, !dbg !19811
  call void @llvm.dbg.value(metadata i64 %21, metadata !19759, metadata !DIExpression()), !dbg !19768
  %22 = icmp eq i8* %20, null, !dbg !19812
  br i1 %22, label %23, label %43, !dbg !19814

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !19762, metadata !DIExpression()), !dbg !19768
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !19814

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.473, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.464, i32 0, i32 0), i32 noundef 76) #26, !dbg !19815
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.474, i32 0, i32 0)) #26, !dbg !19815
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.464, i32 0, i32 0), i32 noundef 76) #26, !dbg !19815
  unreachable, !dbg !19815

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !19767, metadata !DIExpression()), !dbg !19768
  %29 = sub nsw i64 %8, %27, !dbg !19817
  %30 = icmp slt i64 %29, 1, !dbg !19818
  br i1 %30, label %43, label %31, !dbg !19819

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !19768
  call void @llvm.dbg.value(metadata i8 undef, metadata !19767, metadata !DIExpression()), !dbg !19768
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !19820
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !19820
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %24, [1 x i64] %34) #26, !dbg !19820
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19772, metadata !DIExpression()) #25, !dbg !19821
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19823, !srcloc !19787
  call void @llvm.dbg.value(metadata i32 undef, metadata !19784, metadata !DIExpression()) #25, !dbg !19825
  call void @llvm.dbg.value(metadata i32 undef, metadata !19785, metadata !DIExpression()) #25, !dbg !19825
  call void @llvm.dbg.value(metadata i32 undef, metadata !19778, metadata !DIExpression()) #25, !dbg !19821
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !19826
  br i1 %37, label %39, label %38, !dbg !19827

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.470, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.471, i32 0, i32 0), i32 noundef 148) #26, !dbg !19828
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.472, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !19828
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.471, i32 0, i32 0), i32 noundef 148) #26, !dbg !19828
  unreachable, !dbg !19828

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !19767, metadata !DIExpression()), !dbg !19768
  call void @llvm.dbg.value(metadata i32 undef, metadata !19784, metadata !DIExpression()) #25, !dbg !19825
  call void @llvm.dbg.value(metadata i32 undef, metadata !19778, metadata !DIExpression()) #25, !dbg !19821
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !19829
  call void @llvm.dbg.value(metadata i32 undef, metadata !19762, metadata !DIExpression()), !dbg !19768
  call void @llvm.dbg.value(metadata i8* null, metadata !19761, metadata !DIExpression()), !dbg !19768
  call void @llvm.dbg.value(metadata i32 undef, metadata !19762, metadata !DIExpression()), !dbg !19768
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #26, !dbg !19809
  call void @llvm.dbg.value(metadata i8* %40, metadata !19761, metadata !DIExpression()), !dbg !19768
  %41 = tail call i64 @sys_clock_tick_get() #26, !dbg !19811
  call void @llvm.dbg.value(metadata i64 %41, metadata !19759, metadata !DIExpression()), !dbg !19768
  %42 = icmp eq i8* %40, null, !dbg !19812
  br i1 %42, label %26, label %43, !dbg !19814, !llvm.loop !19830

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !19809
  call void @llvm.dbg.value(metadata i8* %45, metadata !19761, metadata !DIExpression()), !dbg !19768
  call void @llvm.dbg.value(metadata i32 undef, metadata !19833, metadata !DIExpression()) #25, !dbg !19839
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19838, metadata !DIExpression()) #25, !dbg !19839
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !19841
  br i1 %46, label %48, label %47, !dbg !19844

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.475, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.471, i32 0, i32 0), i32 noundef 194) #26, !dbg !19845
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.476, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !19845
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.471, i32 0, i32 0), i32 noundef 194) #26, !dbg !19845
  unreachable, !dbg !19845

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !19768
  call void @llvm.dbg.value(metadata i32 %49, metadata !19833, metadata !DIExpression()) #25, !dbg !19839
  call void @llvm.dbg.value(metadata i32 %49, metadata !19847, metadata !DIExpression()) #25, !dbg !19850
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #25, !dbg !19852, !srcloc !19853
  ret i8* %45, !dbg !19854
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19855 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19861, metadata !DIExpression()), !dbg !19863
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19859, metadata !DIExpression()), !dbg !19863
  call void @llvm.dbg.value(metadata i32 %1, metadata !19860, metadata !DIExpression()), !dbg !19863
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !19864
  call void @llvm.dbg.value(metadata i8* %4, metadata !19862, metadata !DIExpression()), !dbg !19863
  ret i8* %4, !dbg !19865
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !19866 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19870, metadata !DIExpression()), !dbg !19873
  call void @llvm.dbg.value(metadata i8* %1, metadata !19871, metadata !DIExpression()), !dbg !19873
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19874
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19772, metadata !DIExpression()) #25, !dbg !19875
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19877, !srcloc !19787
  call void @llvm.dbg.value(metadata i32 undef, metadata !19784, metadata !DIExpression()) #25, !dbg !19879
  call void @llvm.dbg.value(metadata i32 undef, metadata !19785, metadata !DIExpression()) #25, !dbg !19879
  call void @llvm.dbg.value(metadata i32 undef, metadata !19778, metadata !DIExpression()) #25, !dbg !19875
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !19880
  br i1 %5, label %7, label %6, !dbg !19881

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.470, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.471, i32 0, i32 0), i32 noundef 148) #26, !dbg !19882
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.472, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !19882
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.471, i32 0, i32 0), i32 noundef 148) #26, !dbg !19882
  unreachable, !dbg !19882

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !19877
  call void @llvm.dbg.value(metadata i32 %8, metadata !19784, metadata !DIExpression()) #25, !dbg !19879
  call void @llvm.dbg.value(metadata i32 %8, metadata !19778, metadata !DIExpression()) #25, !dbg !19875
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !19883
  call void @llvm.dbg.value(metadata i32 %8, metadata !19872, metadata !DIExpression()), !dbg !19873
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19884
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #26, !dbg !19885
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19886
  %11 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %10) #26, !dbg !19888
  %12 = icmp eq i32 %11, 0, !dbg !19889
  br i1 %12, label %15, label %13, !dbg !19890

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !19891
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #26, !dbg !19891
  br label %19, !dbg !19893

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !19833, metadata !DIExpression()) #25, !dbg !19894
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19838, metadata !DIExpression()) #25, !dbg !19894
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !19897
  br i1 %16, label %18, label %17, !dbg !19898

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.475, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.471, i32 0, i32 0), i32 noundef 194) #26, !dbg !19899
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.476, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !19899
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.471, i32 0, i32 0), i32 noundef 194) #26, !dbg !19899
  unreachable, !dbg !19899

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !19833, metadata !DIExpression()) #25, !dbg !19894
  call void @llvm.dbg.value(metadata i32 %8, metadata !19847, metadata !DIExpression()) #25, !dbg !19900
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !19902, !srcloc !19853
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !19903
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1263, !2, !3029, !27, !344, !547, !736, !759, !3031, !3033, !3066, !3100, !3102, !768, !818, !3104, !3107, !3118, !3164, !3166, !3194, !3222, !3265, !3336, !3381, !847, !987, !3409, !1023, !1033, !1058, !1070, !1297, !3414, !1432, !1498, !1813, !2037, !3451, !2152, !2242, !3453, !3537, !3600, !2290, !3603, !2297, !2667, !3621, !3623, !2687, !2797, !3729, !2914, !2955, !3732, !2998}
!llvm.ident = !{!3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734, !3734}
!llvm.module.flags = !{!3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_consumer_sub", scope: !27, file: !117, line: 13, type: !126, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !114, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/dyn_channel/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !111, !112}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!110 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !113)
!113 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!114 = !{!25, !115, !295, !326, !330, !335, !340}
!115 = !DIGlobalVariableExpression(var: !116, expr: !DIExpression())
!116 = distinct !DIGlobalVariable(name: "consumer_sub", scope: !27, file: !117, line: 13, type: !118, isLocal: false, isDefinition: true, align: 32)
!117 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !120)
!119 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = !{!121, !123, !168}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !118, file: !119, line: 91, baseType: !122, size: 8)
!122 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !118, file: !119, line: 93, baseType: !124, size: 32, offset: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !{!129, !150, !155, !158, !159, !161, !162, !163, !164, !165}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !126, file: !127, line: 4206, baseType: !130, size: 64)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !132)
!131 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !133)
!133 = !{!134}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !132, file: !131, line: 232, baseType: !135, size: 64)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !137)
!136 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !138)
!138 = !{!139, !145}
!139 = !DIDerivedType(tag: DW_TAG_member, scope: !137, file: !136, line: 38, baseType: !140, size: 32)
!140 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !137, file: !136, line: 38, size: 32, elements: !141)
!141 = !{!142, !144}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !140, file: !136, line: 39, baseType: !143, size: 32)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !140, file: !136, line: 40, baseType: !143, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, scope: !137, file: !136, line: 42, baseType: !146, size: 32, offset: 32)
!146 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !137, file: !136, line: 42, size: 32, elements: !147)
!147 = !{!148, !149}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !146, file: !136, line: 43, baseType: !143, size: 32)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !146, file: !136, line: 44, baseType: !143, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !126, file: !127, line: 4208, baseType: !151, size: 32, offset: 64)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !153)
!152 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!153 = !{!154}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !151, file: !152, line: 52, baseType: !22, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !126, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !157, line: 214, baseType: !32)
!157 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!158 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !126, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !126, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !126, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !126, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !126, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !126, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !126, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !167)
!167 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !118, file: !119, line: 96, baseType: !169, size: 32, offset: 64)
!169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 32)
!171 = !DISubroutineType(types: !172)
!172 = !{null, !173}
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !176)
!176 = !{!177, !179, !183, !185, !186, !191, !290}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !175, file: !119, line: 32, baseType: !178, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !175, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !182)
!182 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !175, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !175, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !175, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !188)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DISubroutineType(types: !190)
!190 = !{!122, !13, !156}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !175, file: !119, line: 56, baseType: !192, size: 32, offset: 160)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !194)
!194 = !{!195, !196, !288, !289}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !193, file: !127, line: 2722, baseType: !130, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !193, file: !127, line: 2724, baseType: !197, size: 32, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 32)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !200)
!199 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!200 = !{!201, !246, !259, !260, !261, !262, !268, !283}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !198, file: !199, line: 247, baseType: !202, size: 384)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !203)
!203 = !{!204, !218, !220, !221, !222, !233, !234, !235}
!204 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !199, line: 60, baseType: !205, size: 64)
!205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !202, file: !199, line: 60, size: 64, elements: !206)
!206 = !{!207, !209}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !205, file: !199, line: 61, baseType: !208, size: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !137)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !205, file: !199, line: 62, baseType: !210, size: 64)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !210, file: !211, line: 50, baseType: !214, size: 64)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 64, elements: !216)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!216 = !{!217}
!217 = !DISubrange(count: 2)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !202, file: !199, line: 68, baseType: !219, size: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !202, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !202, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!222 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !199, line: 90, baseType: !223, size: 16, offset: 112)
!223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !202, file: !199, line: 90, size: 16, elements: !224)
!224 = !{!225, !232}
!225 = !DIDerivedType(tag: DW_TAG_member, scope: !223, file: !199, line: 91, baseType: !226, size: 16)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !223, file: !199, line: 91, size: 16, elements: !227)
!227 = !{!228, !231}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !226, file: !199, line: 96, baseType: !229, size: 8)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !230)
!230 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !226, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !223, file: !199, line: 100, baseType: !181, size: 16)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !202, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !202, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !202, file: !199, line: 131, baseType: !236, size: 192, offset: 192)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !237)
!237 = !{!238, !239, !245}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !236, file: !131, line: 245, baseType: !208, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !236, file: !131, line: 246, baseType: !240, size: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{null, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !236, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !198, file: !199, line: 250, baseType: !247, size: 288, offset: 384)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !249)
!248 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!249 = !{!250, !251, !252, !253, !254, !255, !256, !257, !258}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !247, file: !248, line: 26, baseType: !111, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !247, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !247, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !247, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !247, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !247, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !247, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !247, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !247, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !198, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !198, file: !199, line: 256, baseType: !130, size: 64, offset: 704)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !198, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !198, file: !199, line: 300, baseType: !263, size: 96, offset: 800)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !264)
!264 = !{!265, !266, !267}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !263, file: !199, line: 153, baseType: !22, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !263, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !263, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !198, file: !199, line: 325, baseType: !269, size: 32, offset: 896)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !271)
!271 = !{!272, !281, !282}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !270, file: !127, line: 5074, baseType: !273, size: 96)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !275)
!274 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!275 = !{!276, !279, !280}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !273, file: !274, line: 57, baseType: !277, size: 32)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !274, line: 57, flags: DIFlagFwdDecl)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !273, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !273, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !270, file: !127, line: 5075, baseType: !130, size: 64, offset: 96)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !270, file: !127, line: 5076, baseType: !151, size: 32, offset: 160)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !198, file: !199, line: 343, baseType: !284, size: 64, offset: 928)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !285)
!285 = !{!286, !287}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !284, file: !248, line: 63, baseType: !111, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !284, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !193, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !193, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !175, file: !119, line: 67, baseType: !291, size: 32, offset: 192)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !293)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_k_thread_data_consumer_thread_id", scope: !27, file: !117, line: 44, type: !297, isLocal: false, isDefinition: true, align: 32)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !127, line: 620, size: 384, elements: !298)
!298 = !{!299, !300, !308, !309, !314, !315, !316, !317, !318, !319, !321, !325}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !297, file: !127, line: 621, baseType: !197, size: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !297, file: !127, line: 622, baseType: !301, size: 32, offset: 32)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !304)
!303 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !306)
!305 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!306 = !{!307}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !304, file: !305, line: 48, baseType: !110, size: 8)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !297, file: !127, line: 623, baseType: !32, size: 32, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !297, file: !127, line: 624, baseType: !310, size: 32, offset: 96)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !303, line: 46, baseType: !311)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!312 = !DISubroutineType(types: !313)
!313 = !{null, !102, !102, !102}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !297, file: !127, line: 625, baseType: !102, size: 32, offset: 128)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !297, file: !127, line: 626, baseType: !102, size: 32, offset: 160)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !297, file: !127, line: 627, baseType: !102, size: 32, offset: 192)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !297, file: !127, line: 628, baseType: !103, size: 32, offset: 224)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !297, file: !127, line: 629, baseType: !111, size: 32, offset: 256)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !297, file: !127, line: 630, baseType: !320, size: 32, offset: 288)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !297, file: !127, line: 631, baseType: !322, size: 32, offset: 320)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!323 = !DISubroutineType(types: !324)
!324 = !{null}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !297, file: !127, line: 632, baseType: !108, size: 32, offset: 352)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "consumer_thread_id", scope: !27, file: !117, line: 44, type: !328, isLocal: false, isDefinition: true)
!328 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !329)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !197)
!330 = !DIGlobalVariableExpression(var: !331, expr: !DIExpression())
!331 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_consumer_sub", scope: !27, file: !117, line: 13, type: !332, isLocal: true, isDefinition: true, align: 32)
!332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 128, elements: !333)
!333 = !{!334}
!334 = !DISubrange(count: 16)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "_k_thread_stack_consumer_thread_id", scope: !27, file: !117, line: 44, type: !337, isLocal: false, isDefinition: true, align: 512)
!337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 8704, elements: !338)
!338 = !{!339}
!339 = !DISubrange(count: 1088)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "_k_thread_obj_consumer_thread_id", scope: !27, file: !117, line: 44, type: !198, isLocal: false, isDefinition: true)
!342 = !DIGlobalVariableExpression(var: !343, expr: !DIExpression())
!343 = distinct !DIGlobalVariable(name: "_zbus_mutex_pkt_chan", scope: !344, file: !350, line: 15, type: !361, isLocal: true, isDefinition: true, align: 32)
!344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !345, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, globals: !347, splitDebugInlining: false, nameTableKind: None)
!345 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/dyn_channel/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!346 = !{!102, !103}
!347 = !{!342, !348, !498, !500, !502, !504, !506, !508, !510, !512, !519, !522, !529, !534, !539, !541, !543}
!348 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression())
!349 = distinct !DIGlobalVariable(name: "pkt_chan", scope: !344, file: !350, line: 15, type: !351, isLocal: false, isDefinition: true, align: 32)
!350 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !353)
!353 = !{!354, !355, !356, !357, !358, !359, !469}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !352, file: !119, line: 32, baseType: !178, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !352, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !352, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !352, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !352, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !352, file: !119, line: 56, baseType: !360, size: 32, offset: 160)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !362)
!362 = !{!363, !382, !467, !468}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !361, file: !127, line: 2722, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !366)
!366 = !{!367}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !365, file: !131, line: 232, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !370)
!370 = !{!371, !377}
!371 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !136, line: 38, baseType: !372, size: 32)
!372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !136, line: 38, size: 32, elements: !373)
!373 = !{!374, !376}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !372, file: !136, line: 39, baseType: !375, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !372, file: !136, line: 40, baseType: !375, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !136, line: 42, baseType: !378, size: 32, offset: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !136, line: 42, size: 32, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !378, file: !136, line: 43, baseType: !375, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !378, file: !136, line: 44, baseType: !375, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !361, file: !127, line: 2724, baseType: !383, size: 32, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 32)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !385)
!385 = !{!386, !426, !438, !439, !440, !441, !447, !462}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !384, file: !199, line: 247, baseType: !387, size: 384)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !388)
!388 = !{!389, !400, !402, !403, !404, !413, !414, !415}
!389 = !DIDerivedType(tag: DW_TAG_member, scope: !387, file: !199, line: 60, baseType: !390, size: 64)
!390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !387, file: !199, line: 60, size: 64, elements: !391)
!391 = !{!392, !394}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !390, file: !199, line: 61, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !369)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !390, file: !199, line: 62, baseType: !395, size: 64)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !396)
!396 = !{!397}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !395, file: !211, line: 50, baseType: !398, size: 64)
!398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 64, elements: !216)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !387, file: !199, line: 68, baseType: !401, size: 32, offset: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !387, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !387, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!404 = !DIDerivedType(tag: DW_TAG_member, scope: !387, file: !199, line: 90, baseType: !405, size: 16, offset: 112)
!405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !387, file: !199, line: 90, size: 16, elements: !406)
!406 = !{!407, !412}
!407 = !DIDerivedType(tag: DW_TAG_member, scope: !405, file: !199, line: 91, baseType: !408, size: 16)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !405, file: !199, line: 91, size: 16, elements: !409)
!409 = !{!410, !411}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !408, file: !199, line: 96, baseType: !229, size: 8)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !408, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !405, file: !199, line: 100, baseType: !181, size: 16)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !387, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !387, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !387, file: !199, line: 131, baseType: !416, size: 192, offset: 192)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !417)
!417 = !{!418, !419, !425}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !416, file: !131, line: 245, baseType: !393, size: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !416, file: !131, line: 246, baseType: !420, size: 32, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DISubroutineType(types: !423)
!423 = !{null, !424}
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !416, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !384, file: !199, line: 250, baseType: !427, size: 288, offset: 384)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !428)
!428 = !{!429, !430, !431, !432, !433, !434, !435, !436, !437}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !427, file: !248, line: 26, baseType: !111, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !427, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !427, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !427, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !427, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !427, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !427, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !427, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !427, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !384, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !384, file: !199, line: 256, baseType: !364, size: 64, offset: 704)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !384, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !384, file: !199, line: 300, baseType: !442, size: 96, offset: 800)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !443)
!443 = !{!444, !445, !446}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !442, file: !199, line: 153, baseType: !22, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !442, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !442, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !384, file: !199, line: 325, baseType: !448, size: 32, offset: 896)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 32)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !450)
!450 = !{!451, !457, !458}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !449, file: !127, line: 5074, baseType: !452, size: 96)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !453)
!453 = !{!454, !455, !456}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !452, file: !274, line: 57, baseType: !277, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !452, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !452, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !449, file: !127, line: 5075, baseType: !364, size: 64, offset: 96)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !449, file: !127, line: 5076, baseType: !459, size: 32, offset: 160)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !460)
!460 = !{!461}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !459, file: !152, line: 52, baseType: !22, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !384, file: !199, line: 343, baseType: !463, size: 64, offset: 928)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !464)
!464 = !{!465, !466}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !463, file: !248, line: 63, baseType: !111, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !463, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !361, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !361, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !352, file: !119, line: 67, baseType: !470, size: 32, offset: 192)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 32)
!471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !472)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !475)
!475 = !{!476, !477, !492}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !474, file: !119, line: 91, baseType: !122, size: 8)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !474, file: !119, line: 93, baseType: !478, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !479)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !481)
!481 = !{!482, !483, !484, !485, !486, !487, !488, !489, !490, !491}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !480, file: !127, line: 4206, baseType: !364, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !480, file: !127, line: 4208, baseType: !459, size: 32, offset: 64)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !480, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !480, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !480, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !480, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !480, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !480, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !480, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !480, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !474, file: !119, line: 96, baseType: !493, size: 32, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 32)
!495 = !DISubroutineType(types: !496)
!496 = !{null, !497}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "_zbus_mutex_version_chan", scope: !344, file: !350, line: 24, type: !361, isLocal: true, isDefinition: true, align: 32)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "version_chan", scope: !344, file: !350, line: 24, type: !351, isLocal: false, isDefinition: true, align: 32)
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "_zbus_mutex_data_ready_chan", scope: !344, file: !350, line: 33, type: !361, isLocal: true, isDefinition: true, align: 32)
!504 = !DIGlobalVariableExpression(var: !505, expr: !DIExpression())
!505 = distinct !DIGlobalVariable(name: "data_ready_chan", scope: !344, file: !350, line: 33, type: !351, isLocal: false, isDefinition: true, align: 32)
!506 = !DIGlobalVariableExpression(var: !507, expr: !DIExpression())
!507 = distinct !DIGlobalVariable(name: "_zbus_mutex_ack", scope: !344, file: !350, line: 42, type: !361, isLocal: true, isDefinition: true, align: 32)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "ack", scope: !344, file: !350, line: 42, type: !351, isLocal: false, isDefinition: true, align: 32)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "filter_lis", scope: !344, file: !350, line: 73, type: !474, isLocal: false, isDefinition: true, align: 32)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "_zbus_message_pkt_chan", scope: !344, file: !350, line: 15, type: !514, isLocal: true, isDefinition: true)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !515, line: 16, size: 64, elements: !516)
!515 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = !{!517, !518}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !514, file: !515, line: 17, baseType: !102, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !514, file: !515, line: 18, baseType: !156, size: 32, offset: 32)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "_zbus_observers_pkt_chan", scope: !344, file: !350, line: 15, type: !521, isLocal: true, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 64, elements: !216)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "_zbus_message_version_chan", scope: !344, file: !350, line: 24, type: !524, isLocal: true, isDefinition: true)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "version_msg", file: !515, line: 10, size: 32, elements: !525)
!525 = !{!526, !527, !528}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !524, file: !515, line: 11, baseType: !166, size: 8)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !524, file: !515, line: 12, baseType: !166, size: 8, offset: 8)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "build", scope: !524, file: !515, line: 13, baseType: !181, size: 16, offset: 16)
!529 = !DIGlobalVariableExpression(var: !530, expr: !DIExpression())
!530 = distinct !DIGlobalVariable(name: "_zbus_observers_version_chan", scope: !344, file: !350, line: 24, type: !531, isLocal: true, isDefinition: true)
!531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 32, elements: !532)
!532 = !{!533}
!533 = !DISubrange(count: 1)
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "_zbus_message_data_ready_chan", scope: !344, file: !350, line: 33, type: !536, isLocal: true, isDefinition: true)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ack_msg", file: !515, line: 21, size: 8, elements: !537)
!537 = !{!538}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !536, file: !515, line: 22, baseType: !166, size: 8)
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "_zbus_observers_data_ready_chan", scope: !344, file: !350, line: 33, type: !521, isLocal: true, isDefinition: true)
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "_zbus_message_ack", scope: !344, file: !350, line: 42, type: !536, isLocal: true, isDefinition: true)
!543 = !DIGlobalVariableExpression(var: !544, expr: !DIExpression())
!544 = distinct !DIGlobalVariable(name: "_zbus_observers_ack", scope: !344, file: !350, line: 42, type: !521, isLocal: true, isDefinition: true)
!545 = !DIGlobalVariableExpression(var: !546, expr: !DIExpression())
!546 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_producer_sub", scope: !547, file: !554, line: 13, type: !561, isLocal: false, isDefinition: true, align: 32)
!547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !549, globals: !551, splitDebugInlining: false, nameTableKind: None)
!548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/dyn_channel/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!549 = !{!102, !103, !550, !104, !111, !112}
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!551 = !{!545, !552, !702, !723, !727, !729, !732}
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "producer_sub", scope: !547, file: !554, line: 13, type: !555, isLocal: false, isDefinition: true, align: 32)
!554 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !556)
!556 = !{!557, !558, !594}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !555, file: !119, line: 91, baseType: !122, size: 8)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !555, file: !119, line: 93, baseType: !559, size: 32, offset: 32)
!559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !560)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !562)
!562 = !{!563, !582, !586, !587, !588, !589, !590, !591, !592, !593}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !561, file: !127, line: 4206, baseType: !564, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !565)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !566)
!566 = !{!567}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !565, file: !131, line: 232, baseType: !568, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !569)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !570)
!570 = !{!571, !577}
!571 = !DIDerivedType(tag: DW_TAG_member, scope: !569, file: !136, line: 38, baseType: !572, size: 32)
!572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !569, file: !136, line: 38, size: 32, elements: !573)
!573 = !{!574, !576}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !572, file: !136, line: 39, baseType: !575, size: 32)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !572, file: !136, line: 40, baseType: !575, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, scope: !569, file: !136, line: 42, baseType: !578, size: 32, offset: 32)
!578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !569, file: !136, line: 42, size: 32, elements: !579)
!579 = !{!580, !581}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !578, file: !136, line: 43, baseType: !575, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !578, file: !136, line: 44, baseType: !575, size: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !561, file: !127, line: 4208, baseType: !583, size: 32, offset: 64)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !584)
!584 = !{!585}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !583, file: !152, line: 52, baseType: !22, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !561, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !561, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !561, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !561, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !561, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !561, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !561, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !561, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !555, file: !119, line: 96, baseType: !595, size: 32, offset: 64)
!595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !596)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 32)
!597 = !DISubroutineType(types: !598)
!598 = !{null, !599}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !601)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !602)
!602 = !{!603, !604, !605, !606, !607, !608, !697}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !601, file: !119, line: 32, baseType: !178, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !601, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !601, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !601, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !601, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !601, file: !119, line: 56, baseType: !609, size: 32, offset: 160)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !611)
!611 = !{!612, !613, !695, !696}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !610, file: !127, line: 2722, baseType: !564, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !610, file: !127, line: 2724, baseType: !614, size: 32, offset: 64)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 32)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !616)
!616 = !{!617, !657, !669, !670, !671, !672, !678, !690}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !615, file: !199, line: 247, baseType: !618, size: 384)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !619)
!619 = !{!620, !631, !633, !634, !635, !644, !645, !646}
!620 = !DIDerivedType(tag: DW_TAG_member, scope: !618, file: !199, line: 60, baseType: !621, size: 64)
!621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !618, file: !199, line: 60, size: 64, elements: !622)
!622 = !{!623, !625}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !621, file: !199, line: 61, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !569)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !621, file: !199, line: 62, baseType: !626, size: 64)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !627)
!627 = !{!628}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !626, file: !211, line: 50, baseType: !629, size: 64)
!629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 64, elements: !216)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !618, file: !199, line: 68, baseType: !632, size: 32, offset: 64)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !618, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !618, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!635 = !DIDerivedType(tag: DW_TAG_member, scope: !618, file: !199, line: 90, baseType: !636, size: 16, offset: 112)
!636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !618, file: !199, line: 90, size: 16, elements: !637)
!637 = !{!638, !643}
!638 = !DIDerivedType(tag: DW_TAG_member, scope: !636, file: !199, line: 91, baseType: !639, size: 16)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !636, file: !199, line: 91, size: 16, elements: !640)
!640 = !{!641, !642}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !639, file: !199, line: 96, baseType: !229, size: 8)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !639, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !636, file: !199, line: 100, baseType: !181, size: 16)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !618, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !618, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !618, file: !199, line: 131, baseType: !647, size: 192, offset: 192)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !648)
!648 = !{!649, !650, !656}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !647, file: !131, line: 245, baseType: !624, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !647, file: !131, line: 246, baseType: !651, size: 32, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !652)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 32)
!653 = !DISubroutineType(types: !654)
!654 = !{null, !655}
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !647, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !615, file: !199, line: 250, baseType: !658, size: 288, offset: 384)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !659)
!659 = !{!660, !661, !662, !663, !664, !665, !666, !667, !668}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !658, file: !248, line: 26, baseType: !111, size: 32)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !658, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !658, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !658, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !658, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !658, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !658, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !658, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !658, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !615, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !615, file: !199, line: 256, baseType: !564, size: 64, offset: 704)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !615, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !615, file: !199, line: 300, baseType: !673, size: 96, offset: 800)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !673, file: !199, line: 153, baseType: !22, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !673, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !673, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !615, file: !199, line: 325, baseType: !679, size: 32, offset: 896)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !681)
!681 = !{!682, !688, !689}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !680, file: !127, line: 5074, baseType: !683, size: 96)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !684)
!684 = !{!685, !686, !687}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !683, file: !274, line: 57, baseType: !277, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !683, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !683, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !680, file: !127, line: 5075, baseType: !564, size: 64, offset: 96)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !680, file: !127, line: 5076, baseType: !583, size: 32, offset: 160)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !615, file: !199, line: 343, baseType: !691, size: 64, offset: 928)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !692)
!692 = !{!693, !694}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !691, file: !248, line: 63, baseType: !111, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !691, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !610, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !610, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !601, file: !119, line: 67, baseType: !698, size: 32, offset: 192)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !700)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !555)
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(name: "_k_thread_data_producer_thread_id", scope: !547, file: !554, line: 40, type: !704, isLocal: false, isDefinition: true, align: 32)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !127, line: 620, size: 384, elements: !705)
!705 = !{!706, !707, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !704, file: !127, line: 621, baseType: !614, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !704, file: !127, line: 622, baseType: !708, size: 32, offset: 32)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !711)
!711 = !{!712}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !710, file: !305, line: 48, baseType: !110, size: 8)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !704, file: !127, line: 623, baseType: !32, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !704, file: !127, line: 624, baseType: !310, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !704, file: !127, line: 625, baseType: !102, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !704, file: !127, line: 626, baseType: !102, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !704, file: !127, line: 627, baseType: !102, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !704, file: !127, line: 628, baseType: !103, size: 32, offset: 224)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !704, file: !127, line: 629, baseType: !111, size: 32, offset: 256)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !704, file: !127, line: 630, baseType: !320, size: 32, offset: 288)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !704, file: !127, line: 631, baseType: !322, size: 32, offset: 320)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !704, file: !127, line: 632, baseType: !108, size: 32, offset: 352)
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(name: "producer_thread_id", scope: !547, file: !554, line: 40, type: !725, isLocal: false, isDefinition: true)
!725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !726)
!726 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !614)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_producer_sub", scope: !547, file: !554, line: 13, type: !332, isLocal: true, isDefinition: true, align: 32)
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "_k_thread_stack_producer_thread_id", scope: !547, file: !554, line: 40, type: !731, isLocal: false, isDefinition: true, align: 512)
!731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !710, size: 8704, elements: !338)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "_k_thread_obj_producer_thread_id", scope: !547, file: !554, line: 40, type: !615, isLocal: false, isDefinition: true)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !736, file: !750, line: 18, type: !751, isLocal: false, isDefinition: true)
!736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !738, globals: !749, splitDebugInlining: false, nameTableKind: None)
!737 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!738 = !{!22, !102, !24, !739, !741, !743, !156, !103, !744, !745, !747, !748, !160, !550, !181, !108}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 32)
!740 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 32)
!742 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!749 = !{!734}
!750 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !752)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !754)
!753 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!754 = !{!755, !756}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !752, file: !753, line: 17, baseType: !108, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !752, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "_char_out", scope: !759, file: !762, line: 54, type: !763, isLocal: false, isDefinition: true)
!759 = distinct !DICompileUnit(language: DW_LANG_C99, file: !760, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, globals: !761, splitDebugInlining: false, nameTableKind: None)
!760 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!761 = !{!757}
!762 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 32)
!764 = !DISubroutineType(types: !765)
!765 = !{!103, !103}
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !768, file: !785, line: 56, type: !786, isLocal: true, isDefinition: true, align: 32)
!768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !769, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !770, globals: !784, splitDebugInlining: false, nameTableKind: None)
!769 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!770 = !{!771}
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 32)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !773, line: 369, baseType: !774)
!773 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 360, size: 224, elements: !775)
!775 = !{!776, !778, !779, !780, !781, !782, !783}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !774, file: !773, line: 362, baseType: !777, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !111)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !774, file: !773, line: 363, baseType: !777, size: 32, offset: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !774, file: !773, line: 364, baseType: !777, size: 32, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !774, file: !773, line: 365, baseType: !777, size: 32, offset: 96)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !774, file: !773, line: 366, baseType: !777, size: 32, offset: 128)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !774, file: !773, line: 367, baseType: !777, size: 32, offset: 160)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !774, file: !773, line: 368, baseType: !777, size: 32, offset: 192)
!784 = !{!766}
!785 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !787)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !789)
!788 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!789 = !{!790, !815}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !787, file: !788, line: 60, baseType: !791, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 32)
!792 = !DISubroutineType(types: !793)
!793 = !{!103, !794}
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !796)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !798)
!797 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!798 = !{!799, !800, !801, !802, !808, !809}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !796, file: !797, line: 380, baseType: !108, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !796, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !796, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !796, file: !797, line: 386, baseType: !803, size: 32, offset: 96)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 32)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !805)
!805 = !{!806, !807}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !804, file: !797, line: 359, baseType: !166, size: 8)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !804, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !796, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !796, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !812)
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !797, line: 43, baseType: !813)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !814)
!814 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !787, file: !788, line: 65, baseType: !794, size: 32, offset: 32)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !818, file: !821, line: 71, type: !822, isLocal: true, isDefinition: true, align: 32)
!818 = distinct !DICompileUnit(language: DW_LANG_C99, file: !819, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !820, splitDebugInlining: false, nameTableKind: None)
!819 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!820 = !{!816}
!821 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !823)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !824)
!824 = !{!825, !844}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !823, file: !788, line: 60, baseType: !826, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 32)
!827 = !DISubroutineType(types: !828)
!828 = !{!103, !829}
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 32)
!830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !831)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !832)
!832 = !{!833, !834, !835, !836, !842, !843}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !831, file: !797, line: 380, baseType: !108, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !831, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !831, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !831, file: !797, line: 386, baseType: !837, size: 32, offset: 96)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 32)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !839)
!839 = !{!840, !841}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !838, file: !797, line: 359, baseType: !166, size: 8)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !838, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !831, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !831, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !823, file: !788, line: 65, baseType: !829, size: 32, offset: 32)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !847, file: !854, line: 17, type: !980, isLocal: false, isDefinition: true)
!847 = distinct !DICompileUnit(language: DW_LANG_C99, file: !848, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !849, globals: !850, splitDebugInlining: false, nameTableKind: None)
!848 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!849 = !{!156, !103, !111, !102}
!850 = !{!845, !851, !976}
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !853, file: !854, line: 198, type: !964, isLocal: true, isDefinition: true)
!853 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !854, file: !854, line: 175, type: !855, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !847, retainedNodes: !959)
!854 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!855 = !DISubroutineType(types: !856)
!856 = !{null, !857}
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !859)
!859 = !{!860, !918, !930, !931, !932, !933, !939, !954}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !858, file: !199, line: 247, baseType: !861, size: 384)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !862)
!862 = !{!863, !887, !894, !895, !896, !905, !906, !907}
!863 = !DIDerivedType(tag: DW_TAG_member, scope: !861, file: !199, line: 60, baseType: !864, size: 64)
!864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !861, file: !199, line: 60, size: 64, elements: !865)
!865 = !{!866, !881}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !864, file: !199, line: 61, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !869)
!869 = !{!870, !876}
!870 = !DIDerivedType(tag: DW_TAG_member, scope: !868, file: !136, line: 38, baseType: !871, size: 32)
!871 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !868, file: !136, line: 38, size: 32, elements: !872)
!872 = !{!873, !875}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !871, file: !136, line: 39, baseType: !874, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !871, file: !136, line: 40, baseType: !874, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, scope: !868, file: !136, line: 42, baseType: !877, size: 32, offset: 32)
!877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !868, file: !136, line: 42, size: 32, elements: !878)
!878 = !{!879, !880}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !877, file: !136, line: 43, baseType: !874, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !877, file: !136, line: 44, baseType: !874, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !864, file: !199, line: 62, baseType: !882, size: 64)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !883)
!883 = !{!884}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !882, file: !211, line: 50, baseType: !885, size: 64)
!885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !886, size: 64, elements: !216)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !861, file: !199, line: 68, baseType: !888, size: 32, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !890)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !891)
!891 = !{!892}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !890, file: !131, line: 232, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !868)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !861, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !861, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!896 = !DIDerivedType(tag: DW_TAG_member, scope: !861, file: !199, line: 90, baseType: !897, size: 16, offset: 112)
!897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !861, file: !199, line: 90, size: 16, elements: !898)
!898 = !{!899, !904}
!899 = !DIDerivedType(tag: DW_TAG_member, scope: !897, file: !199, line: 91, baseType: !900, size: 16)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !897, file: !199, line: 91, size: 16, elements: !901)
!901 = !{!902, !903}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !900, file: !199, line: 96, baseType: !229, size: 8)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !900, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !897, file: !199, line: 100, baseType: !181, size: 16)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !861, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !861, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !861, file: !199, line: 131, baseType: !908, size: 192, offset: 192)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !909)
!909 = !{!910, !911, !917}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !908, file: !131, line: 245, baseType: !867, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !908, file: !131, line: 246, baseType: !912, size: 32, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !913)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 32)
!914 = !DISubroutineType(types: !915)
!915 = !{null, !916}
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !908, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !858, file: !199, line: 250, baseType: !919, size: 288, offset: 384)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !920)
!920 = !{!921, !922, !923, !924, !925, !926, !927, !928, !929}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !919, file: !248, line: 26, baseType: !111, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !919, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !919, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !919, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !919, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !919, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !919, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !919, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !919, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !858, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !858, file: !199, line: 256, baseType: !889, size: 64, offset: 704)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !858, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !858, file: !199, line: 300, baseType: !934, size: 96, offset: 800)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !935)
!935 = !{!936, !937, !938}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !934, file: !199, line: 153, baseType: !22, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !934, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !934, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !858, file: !199, line: 325, baseType: !940, size: 32, offset: 896)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 32)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !942)
!942 = !{!943, !949, !950}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !941, file: !127, line: 5074, baseType: !944, size: 96)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !945)
!945 = !{!946, !947, !948}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !944, file: !274, line: 57, baseType: !277, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !944, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !944, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !941, file: !127, line: 5075, baseType: !889, size: 64, offset: 96)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !941, file: !127, line: 5076, baseType: !951, size: 32, offset: 160)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !952)
!952 = !{!953}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !951, file: !152, line: 52, baseType: !22, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !858, file: !199, line: 343, baseType: !955, size: 64, offset: 928)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !956)
!956 = !{!957, !958}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !955, file: !248, line: 63, baseType: !111, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !955, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!959 = !{!960, !961, !962, !963}
!960 = !DILocalVariable(name: "thread", arg: 1, scope: !853, file: !854, line: 175, type: !857)
!961 = !DILocalVariable(name: "region_num", scope: !853, file: !854, line: 200, type: !166)
!962 = !DILocalVariable(name: "guard_start", scope: !853, file: !854, line: 265, type: !22)
!963 = !DILocalVariable(name: "guard_size", scope: !853, file: !854, line: 266, type: !156)
!964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !965, size: 96, elements: !532)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !966, line: 52, size: 96, elements: !967)
!966 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!967 = !{!968, !969, !970}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !965, file: !966, line: 53, baseType: !22, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !965, file: !966, line: 54, baseType: !156, size: 32, offset: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !965, file: !966, line: 55, baseType: !971, size: 32, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !972, line: 151, baseType: !973)
!972 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !972, line: 149, size: 32, elements: !974)
!974 = !{!975}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !973, file: !972, line: 150, baseType: !111, size: 32)
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "static_regions", scope: !847, file: !854, line: 62, type: !978, isLocal: true, isDefinition: true)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 96, elements: !532)
!979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !981)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !982)
!982 = !{!983, !984}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !981, file: !753, line: 17, baseType: !108, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !981, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!985 = !DIGlobalVariableExpression(var: !986, expr: !DIExpression())
!986 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !987, file: !1020, line: 39, type: !166, isLocal: true, isDefinition: true)
!987 = distinct !DICompileUnit(language: DW_LANG_C99, file: !988, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !989, globals: !1019, splitDebugInlining: false, nameTableKind: None)
!988 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!989 = !{!990, !102, !103, !1007, !166}
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !992, line: 1226, baseType: !993)
!992 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 1213, size: 352, elements: !994)
!994 = !{!995, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !993, file: !992, line: 1215, baseType: !996, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !993, file: !992, line: 1216, baseType: !777, size: 32, offset: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !993, file: !992, line: 1217, baseType: !777, size: 32, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !993, file: !992, line: 1218, baseType: !777, size: 32, offset: 96)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !993, file: !992, line: 1219, baseType: !777, size: 32, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !993, file: !992, line: 1220, baseType: !777, size: 32, offset: 160)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !993, file: !992, line: 1221, baseType: !777, size: 32, offset: 192)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !993, file: !992, line: 1222, baseType: !777, size: 32, offset: 224)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !993, file: !992, line: 1223, baseType: !777, size: 32, offset: 256)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !993, file: !992, line: 1224, baseType: !777, size: 32, offset: 288)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !993, file: !992, line: 1225, baseType: !777, size: 32, offset: 320)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 32)
!1008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1009)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !1010, line: 27, size: 96, elements: !1011)
!1010 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1011 = !{!1012, !1013, !1014}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1009, file: !1010, line: 29, baseType: !111, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1009, file: !1010, line: 31, baseType: !108, size: 32, offset: 32)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1009, file: !1010, line: 37, baseType: !1015, size: 32, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !972, line: 146, baseType: !1016)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !972, line: 141, size: 32, elements: !1017)
!1017 = !{!1018}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !1016, file: !972, line: 143, baseType: !111, size: 32)
!1019 = !{!985}
!1020 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !1023, file: !1030, line: 21, type: !763, isLocal: true, isDefinition: true)
!1023 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1024, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1025, globals: !1029, splitDebugInlining: false, nameTableKind: None)
!1024 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!1025 = !{!1026, !103, !102}
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1028, line: 22, baseType: !103)
!1028 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1029 = !{!1021}
!1030 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !1033, file: !1038, line: 13, type: !1055, isLocal: true, isDefinition: true)
!1033 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1034, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1035, splitDebugInlining: false, nameTableKind: None)
!1034 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!1035 = !{!1036, !1031}
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "mpu_config", scope: !1033, file: !1038, line: 37, type: !1039, isLocal: false, isDefinition: true)
!1038 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !1010, line: 41, size: 64, elements: !1041)
!1041 = !{!1042, !1043}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !1040, file: !1010, line: 43, baseType: !111, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !1040, file: !1010, line: 45, baseType: !1044, size: 32, offset: 32)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !1010, line: 27, size: 96, elements: !1047)
!1047 = !{!1048, !1049, !1050}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1046, file: !1010, line: 29, baseType: !111, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1046, file: !1010, line: 31, baseType: !108, size: 32, offset: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1046, file: !1010, line: 37, baseType: !1051, size: 32, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !972, line: 146, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !972, line: 141, size: 32, elements: !1053)
!1053 = !{!1054}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !1052, file: !972, line: 143, baseType: !111, size: 32)
!1055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1045, size: 192, elements: !216)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !1058, file: !1062, line: 10, type: !1063, isLocal: false, isDefinition: true)
!1058 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1059, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1060, globals: !1061, splitDebugInlining: false, nameTableKind: None)
!1059 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!1060 = !{!104, !102, !103}
!1061 = !{!1056}
!1062 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !1065)
!1065 = !{!1066, !1067}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1064, file: !753, line: 17, baseType: !108, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1064, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!1068 = !DIGlobalVariableExpression(var: !1069, expr: !DIExpression())
!1069 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !1070, file: !1175, line: 72, type: !1258, isLocal: true, isDefinition: true)
!1070 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1071, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1072, retainedTypes: !1161, globals: !1172, splitDebugInlining: false, nameTableKind: None)
!1071 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!1072 = !{!30, !1073}
!1073 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !773, line: 65, baseType: !103, size: 32, elements: !1074)
!1074 = !{!1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160}
!1075 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1076 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1077 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1078 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1079 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1080 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1081 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1082 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1083 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!1084 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!1085 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!1086 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!1087 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!1088 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!1089 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!1090 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!1091 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!1092 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!1093 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!1094 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!1095 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!1096 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!1097 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!1098 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!1099 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!1100 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!1101 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!1102 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!1103 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!1104 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!1105 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!1106 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!1107 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!1108 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!1109 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!1110 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!1111 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!1112 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!1113 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!1114 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!1115 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!1116 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!1117 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!1118 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!1119 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!1120 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!1121 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!1122 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!1123 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!1124 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!1125 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!1126 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!1127 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!1128 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!1129 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!1130 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!1131 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!1132 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!1133 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!1134 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!1135 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!1136 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!1137 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!1138 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!1139 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!1140 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!1141 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!1142 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!1143 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!1144 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!1145 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!1146 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!1147 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!1148 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!1149 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!1150 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!1151 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!1152 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!1153 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!1154 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!1155 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!1156 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!1157 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!1158 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!1159 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!1160 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!1161 = !{!156, !103, !102, !1162}
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !773, line: 354, baseType: !1164)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 346, size: 192, elements: !1165)
!1165 = !{!1166, !1167, !1168, !1169, !1170, !1171}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1164, file: !773, line: 348, baseType: !777, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1164, file: !773, line: 349, baseType: !777, size: 32, offset: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1164, file: !773, line: 350, baseType: !777, size: 32, offset: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1164, file: !773, line: 351, baseType: !777, size: 32, offset: 96)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1164, file: !773, line: 352, baseType: !777, size: 32, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1164, file: !773, line: 353, baseType: !777, size: 32, offset: 160)
!1172 = !{!1173, !1179, !1195, !1206, !1223, !1068, !1225, !1238, !1240, !1242, !1244, !1246, !1248, !1250, !1252, !1254, !1256}
!1173 = !DIGlobalVariableExpression(var: !1174, expr: !DIExpression())
!1174 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !1070, file: !1175, line: 424, type: !1176, isLocal: false, isDefinition: true, align: 16)
!1175 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 64, elements: !1177)
!1177 = !{!1178}
!1178 = !DISubrange(count: 4)
!1179 = !DIGlobalVariableExpression(var: !1180, expr: !DIExpression())
!1180 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !1070, file: !1175, line: 424, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187, !1193, !1194}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1182, file: !797, line: 380, baseType: !108, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1182, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1182, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1182, file: !797, line: 386, baseType: !1188, size: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !1190)
!1190 = !{!1191, !1192}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1189, file: !797, line: 359, baseType: !166, size: 8)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1189, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1182, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1182, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !1070, file: !1175, line: 424, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !1199)
!1199 = !{!1200, !1205}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1198, file: !788, line: 60, baseType: !1201, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!103, !1204}
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1198, file: !788, line: 65, baseType: !1204, size: 32, offset: 32)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "exti_data", scope: !1070, file: !1175, line: 423, type: !1208, isLocal: true, isDefinition: true)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !1175, line: 107, size: 1472, elements: !1209)
!1209 = !{!1210}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1208, file: !1175, line: 109, baseType: !1211, size: 1472)
!1211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1212, size: 1472, elements: !1221)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !1175, line: 101, size: 64, elements: !1213)
!1213 = !{!1214, !1220}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1212, file: !1175, line: 102, baseType: !1215, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !1216, line: 63, baseType: !1217)
!1216 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1218 = !DISubroutineType(types: !1219)
!1219 = !{null, !103, !102}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1212, file: !1175, line: 103, baseType: !102, size: 32, offset: 32)
!1221 = !{!1222}
!1222 = !DISubrange(count: 23)
!1223 = !DIGlobalVariableExpression(var: !1224, expr: !DIExpression())
!1224 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !1070, file: !1175, line: 424, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1225 = !DIGlobalVariableExpression(var: !1226, expr: !DIExpression())
!1226 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !1227, file: !1175, line: 493, type: !1232, isLocal: true, isDefinition: true, align: 32)
!1227 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !1175, file: !1175, line: 460, type: !1228, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !1230)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{null, !1204}
!1230 = !{!1231}
!1231 = !DILocalVariable(name: "dev", arg: 1, scope: !1227, file: !1175, line: 460, type: !1204)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1233)
!1233 = !{!1234, !1235, !1236, !1237}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1232, file: !10, line: 55, baseType: !320, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1232, file: !10, line: 57, baseType: !320, size: 32, offset: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1232, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1232, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !1227, file: !1175, line: 497, type: !1232, isLocal: true, isDefinition: true, align: 32)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !1227, file: !1175, line: 507, type: !1232, isLocal: true, isDefinition: true, align: 32)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !1227, file: !1175, line: 512, type: !1232, isLocal: true, isDefinition: true, align: 32)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !1227, file: !1175, line: 516, type: !1232, isLocal: true, isDefinition: true, align: 32)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !1227, file: !1175, line: 523, type: !1232, isLocal: true, isDefinition: true, align: 32)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !1227, file: !1175, line: 527, type: !1232, isLocal: true, isDefinition: true, align: 32)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !1227, file: !1175, line: 581, type: !1232, isLocal: true, isDefinition: true, align: 32)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !1227, file: !1175, line: 586, type: !1232, isLocal: true, isDefinition: true, align: 32)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !1227, file: !1175, line: 591, type: !1232, isLocal: true, isDefinition: true, align: 32)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !1227, file: !1175, line: 595, type: !1232, isLocal: true, isDefinition: true, align: 32)
!1258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1259, size: 736, elements: !1221)
!1259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1260)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !773, line: 155, baseType: !1073)
!1261 = !DIGlobalVariableExpression(var: !1262, expr: !DIExpression())
!1262 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !1263, file: !1268, line: 23, type: !1292, isLocal: false, isDefinition: true, align: 16)
!1263 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1264, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1265, splitDebugInlining: false, nameTableKind: None)
!1264 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!1265 = !{!1266, !1261, !1272, !1274, !1276, !1278, !1280, !1282, !1284, !1286, !1288, !1290}
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1263, file: !1268, line: 18, type: !1269, isLocal: false, isDefinition: true, align: 16)
!1268 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!1269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 208, elements: !1270)
!1270 = !{!1271}
!1271 = !DISubrange(count: 13)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1263, file: !1268, line: 30, type: !1176, isLocal: false, isDefinition: true, align: 16)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1263, file: !1268, line: 37, type: !1176, isLocal: false, isDefinition: true, align: 16)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1263, file: !1268, line: 44, type: !1176, isLocal: false, isDefinition: true, align: 16)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1263, file: !1268, line: 51, type: !1176, isLocal: false, isDefinition: true, align: 16)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1263, file: !1268, line: 58, type: !1176, isLocal: false, isDefinition: true, align: 16)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1263, file: !1268, line: 65, type: !1176, isLocal: false, isDefinition: true, align: 16)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1263, file: !1268, line: 72, type: !1176, isLocal: false, isDefinition: true, align: 16)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1263, file: !1268, line: 79, type: !1176, isLocal: false, isDefinition: true, align: 16)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1263, file: !1268, line: 86, type: !1176, isLocal: false, isDefinition: true, align: 16)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1263, file: !1268, line: 93, type: !1176, isLocal: false, isDefinition: true, align: 16)
!1292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 48, elements: !1293)
!1293 = !{!1294}
!1294 = !DISubrange(count: 3)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1297, file: !1358, line: 398, type: !1391, isLocal: true, isDefinition: true)
!1297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1299, retainedTypes: !1312, globals: !1355, splitDebugInlining: false, nameTableKind: None)
!1298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!1299 = !{!1300, !30, !1305}
!1300 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1301, line: 197, baseType: !32, size: 32, elements: !1302)
!1301 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1302 = !{!1303, !1304}
!1303 = !DIEnumerator(name: "SUCCESS", value: 0)
!1304 = !DIEnumerator(name: "ERROR", value: 1)
!1305 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1306, line: 44, baseType: !32, size: 32, elements: !1307)
!1306 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1307 = !{!1308, !1309, !1310, !1311}
!1308 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1309 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1310 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1311 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1312 = !{!102, !103, !111, !1313, !1348, !1354}
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 32)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 532, baseType: !1315)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 500, size: 1088, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1315, file: !773, line: 502, baseType: !777, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1315, file: !773, line: 503, baseType: !777, size: 32, offset: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1315, file: !773, line: 504, baseType: !777, size: 32, offset: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1315, file: !773, line: 505, baseType: !777, size: 32, offset: 96)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1315, file: !773, line: 506, baseType: !777, size: 32, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1315, file: !773, line: 507, baseType: !777, size: 32, offset: 160)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1315, file: !773, line: 508, baseType: !777, size: 32, offset: 192)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1315, file: !773, line: 509, baseType: !111, size: 32, offset: 224)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1315, file: !773, line: 510, baseType: !777, size: 32, offset: 256)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1315, file: !773, line: 511, baseType: !777, size: 32, offset: 288)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1315, file: !773, line: 512, baseType: !1328, size: 64, offset: 320)
!1328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 64, elements: !216)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1315, file: !773, line: 513, baseType: !777, size: 32, offset: 384)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1315, file: !773, line: 514, baseType: !777, size: 32, offset: 416)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1315, file: !773, line: 515, baseType: !777, size: 32, offset: 448)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1315, file: !773, line: 516, baseType: !111, size: 32, offset: 480)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1315, file: !773, line: 517, baseType: !777, size: 32, offset: 512)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1315, file: !773, line: 518, baseType: !777, size: 32, offset: 544)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1315, file: !773, line: 519, baseType: !1328, size: 64, offset: 576)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1315, file: !773, line: 520, baseType: !777, size: 32, offset: 640)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1315, file: !773, line: 521, baseType: !777, size: 32, offset: 672)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1315, file: !773, line: 522, baseType: !777, size: 32, offset: 704)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1315, file: !773, line: 523, baseType: !111, size: 32, offset: 736)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1315, file: !773, line: 524, baseType: !777, size: 32, offset: 768)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1315, file: !773, line: 525, baseType: !777, size: 32, offset: 800)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1315, file: !773, line: 526, baseType: !1328, size: 64, offset: 832)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1315, file: !773, line: 527, baseType: !777, size: 32, offset: 896)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1315, file: !773, line: 528, baseType: !777, size: 32, offset: 928)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1315, file: !773, line: 529, baseType: !1328, size: 64, offset: 960)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1315, file: !773, line: 530, baseType: !777, size: 32, offset: 1024)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1315, file: !773, line: 531, baseType: !777, size: 32, offset: 1056)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 32)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1350, line: 343, size: 64, elements: !1351)
!1350 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1351 = !{!1352, !1353}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1349, file: !1350, line: 344, baseType: !111, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1349, file: !1350, line: 345, baseType: !111, size: 32, offset: 32)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!1355 = !{!1356, !1362, !1378, !1389, !1295}
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1297, file: !1358, line: 752, type: !1359, isLocal: false, isDefinition: true, align: 16)
!1358 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 928, elements: !1360)
!1360 = !{!1361}
!1361 = !DISubrange(count: 58)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !1297, file: !1358, line: 752, type: !1364, isLocal: false, isDefinition: true, align: 32)
!1364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1365)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !1366)
!1366 = !{!1367, !1368, !1369, !1370, !1376, !1377}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1365, file: !797, line: 380, baseType: !108, size: 32)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1365, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1365, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1365, file: !797, line: 386, baseType: !1371, size: 32, offset: 96)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 32)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !1373)
!1373 = !{!1374, !1375}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1372, file: !797, line: 359, baseType: !166, size: 8)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1372, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1365, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1365, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !1297, file: !1358, line: 752, type: !1380, isLocal: true, isDefinition: true, align: 32)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !1382)
!1382 = !{!1383, !1388}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1381, file: !788, line: 60, baseType: !1384, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!103, !1387}
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1381, file: !788, line: 65, baseType: !1387, size: 32, offset: 32)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !1297, file: !1358, line: 752, type: !1372, isLocal: true, isDefinition: true, align: 8)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1306, line: 100, size: 224, elements: !1392)
!1392 = !{!1393, !1399, !1400, !1409, !1414, !1419, !1425}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1391, file: !1306, line: 101, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1306, line: 76, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{!103, !1387, !1398}
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1306, line: 56, baseType: !102)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1391, file: !1306, line: 102, baseType: !1394, size: 32, offset: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1391, file: !1306, line: 103, baseType: !1401, size: 32, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1306, line: 83, baseType: !1402)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 32)
!1403 = !DISubroutineType(types: !1404)
!1404 = !{!103, !1387, !1398, !1405, !102}
!1405 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1306, line: 72, baseType: !1406)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 32)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{null, !1387, !1398, !102}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1391, file: !1306, line: 104, baseType: !1410, size: 32, offset: 96)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1306, line: 79, baseType: !1411)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!103, !1387, !1398, !1354}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1391, file: !1306, line: 105, baseType: !1415, size: 32, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1306, line: 88, baseType: !1416)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 32)
!1417 = !DISubroutineType(types: !1418)
!1418 = !{!1305, !1387, !1398}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1391, file: !1306, line: 106, baseType: !1420, size: 32, offset: 160)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1306, line: 92, baseType: !1421)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!1422 = !DISubroutineType(types: !1423)
!1423 = !{!103, !1387, !1398, !1424}
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1306, line: 64, baseType: !102)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1391, file: !1306, line: 107, baseType: !1426, size: 32, offset: 192)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1306, line: 96, baseType: !1427)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!103, !1387, !1398, !102}
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1432, file: !1489, line: 603, type: !1491, isLocal: true, isDefinition: true, align: 32)
!1432 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1433, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1434, globals: !1486, splitDebugInlining: false, nameTableKind: None)
!1433 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!1434 = !{!102, !103, !1435}
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1437)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1438, line: 336, size: 160, elements: !1439)
!1438 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1439 = !{!1440, !1460, !1464, !1468, !1481}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1437, file: !1438, line: 365, baseType: !1441, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!103, !1444, !1459}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !1447)
!1447 = !{!1448, !1449, !1450, !1451, !1457, !1458}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1446, file: !797, line: 380, baseType: !108, size: 32)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1446, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1446, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1446, file: !797, line: 386, baseType: !1452, size: 32, offset: 96)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 32)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !1454)
!1454 = !{!1455, !1456}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1453, file: !797, line: 359, baseType: !166, size: 8)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1453, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1446, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1446, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1437, file: !1438, line: 366, baseType: !1461, size: 32, offset: 32)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{null, !1444, !167}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1437, file: !1438, line: 374, baseType: !1465, size: 32, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!103, !1444}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1437, file: !1438, line: 377, baseType: !1469, size: 32, offset: 96)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 32)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{!103, !1444, !1472}
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1438, line: 122, size: 64, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1479, !1480}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1474, file: !1438, line: 123, baseType: !111, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1474, file: !1438, line: 124, baseType: !166, size: 8, offset: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1474, file: !1438, line: 125, baseType: !166, size: 8, offset: 40)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1474, file: !1438, line: 126, baseType: !166, size: 8, offset: 48)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1474, file: !1438, line: 127, baseType: !166, size: 8, offset: 56)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1437, file: !1438, line: 379, baseType: !1482, size: 32, offset: 128)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{!103, !1444, !1485}
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1486 = !{!1430, !1487}
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1432, file: !1489, line: 38, type: !1490, isLocal: true, isDefinition: true)
!1489 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1444)
!1491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1492)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !1493)
!1493 = !{!1494, !1495}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1492, file: !788, line: 60, baseType: !1465, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1492, file: !788, line: 65, baseType: !1444, size: 32, offset: 32)
!1496 = !DIGlobalVariableExpression(var: !1497, expr: !DIExpression())
!1497 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1498, file: !1667, line: 762, type: !1786, isLocal: true, isDefinition: true)
!1498 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1499, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1500, retainedTypes: !1518, globals: !1664, splitDebugInlining: false, nameTableKind: None)
!1499 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!1500 = !{!30, !1501, !1507, !1512, !1305}
!1501 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1502, line: 506, baseType: !32, size: 32, elements: !1503)
!1502 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1503 = !{!1504, !1505, !1506}
!1504 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1505 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1506 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1507 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1502, line: 512, baseType: !32, size: 32, elements: !1508)
!1508 = !{!1509, !1510, !1511}
!1509 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1510 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1511 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1512 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !1216, line: 43, baseType: !32, size: 32, elements: !1513)
!1513 = !{!1514, !1515, !1516, !1517}
!1514 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1515 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1516 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1517 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1518 = !{!102, !103, !1519, !1589, !1594, !1554, !1507, !1501, !1599, !1600, !111, !1614, !1569, !160, !1624, !1625}
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1502, line: 523, size: 288, elements: !1522)
!1522 = !{!1523, !1544, !1550, !1555, !1559, !1560, !1561, !1565, !1585}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1521, file: !1502, line: 524, baseType: !1524, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!103, !1527, !1542, !1543}
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !1530)
!1530 = !{!1531, !1532, !1533, !1534, !1540, !1541}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1529, file: !797, line: 380, baseType: !108, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1529, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1529, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1529, file: !797, line: 386, baseType: !1535, size: 32, offset: 96)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !1537)
!1537 = !{!1538, !1539}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1536, file: !797, line: 359, baseType: !166, size: 8)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1536, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1529, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1529, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!1542 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1502, line: 237, baseType: !166)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1502, line: 257, baseType: !111)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1521, file: !1502, line: 530, baseType: !1545, size: 32, offset: 32)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!103, !1527, !1548}
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1502, line: 229, baseType: !111)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1521, file: !1502, line: 532, baseType: !1551, size: 32, offset: 64)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!103, !1527, !1554, !1549}
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1502, line: 216, baseType: !111)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1521, file: !1502, line: 535, baseType: !1556, size: 32, offset: 96)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!103, !1527, !1554}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1521, file: !1502, line: 537, baseType: !1556, size: 32, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1521, file: !1502, line: 539, baseType: !1556, size: 32, offset: 160)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1521, file: !1502, line: 541, baseType: !1562, size: 32, offset: 192)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!103, !1527, !1542, !1501, !1507}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1521, file: !1502, line: 544, baseType: !1566, size: 32, offset: 224)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!103, !1527, !1569, !122}
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1502, line: 478, size: 96, elements: !1571)
!1571 = !{!1572, !1579, !1584}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1570, file: !1502, line: 482, baseType: !1573, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1574, line: 33, baseType: !1575)
!1574 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1574, line: 29, size: 32, elements: !1576)
!1576 = !{!1577}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1575, file: !1574, line: 30, baseType: !1578, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1570, file: !1502, line: 485, baseType: !1580, size: 32, offset: 32)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1502, line: 464, baseType: !1581)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{null, !1527, !1569, !1554}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1570, file: !1502, line: 493, baseType: !1554, size: 32, offset: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1521, file: !1502, line: 547, baseType: !1586, size: 32, offset: 256)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 32)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!111, !1527}
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1591)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1502, line: 428, size: 32, elements: !1592)
!1592 = !{!1593}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1591, file: !1502, line: 434, baseType: !1554, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1596)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1502, line: 441, size: 32, elements: !1597)
!1597 = !{!1598}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1596, file: !1502, line: 447, baseType: !1554, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !773, line: 441, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 430, size: 320, elements: !1603)
!1603 = !{!1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1602, file: !773, line: 432, baseType: !777, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1602, file: !773, line: 433, baseType: !777, size: 32, offset: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1602, file: !773, line: 434, baseType: !777, size: 32, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1602, file: !773, line: 435, baseType: !777, size: 32, offset: 96)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1602, file: !773, line: 436, baseType: !777, size: 32, offset: 128)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1602, file: !773, line: 437, baseType: !777, size: 32, offset: 160)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1602, file: !773, line: 438, baseType: !777, size: 32, offset: 192)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1602, file: !773, line: 439, baseType: !777, size: 32, offset: 224)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1602, file: !773, line: 440, baseType: !1613, size: 64, offset: 256)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 64, elements: !216)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !773, line: 454, baseType: !1616)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 447, size: 288, elements: !1617)
!1617 = !{!1618, !1619, !1620, !1622, !1623}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1616, file: !773, line: 449, baseType: !777, size: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1616, file: !773, line: 450, baseType: !777, size: 32, offset: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1616, file: !773, line: 451, baseType: !1621, size: 128, offset: 64)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 128, elements: !1177)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1616, file: !773, line: 452, baseType: !1328, size: 64, offset: 192)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1616, file: !773, line: 453, baseType: !777, size: 32, offset: 256)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1627)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1306, line: 100, size: 224, elements: !1628)
!1628 = !{!1629, !1634, !1635, !1644, !1649, !1654, !1659}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1627, file: !1306, line: 101, baseType: !1630, size: 32)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1306, line: 76, baseType: !1631)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 32)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!103, !1527, !1398}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1627, file: !1306, line: 102, baseType: !1630, size: 32, offset: 32)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1627, file: !1306, line: 103, baseType: !1636, size: 32, offset: 64)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1306, line: 83, baseType: !1637)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 32)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{!103, !1527, !1398, !1640, !102}
!1640 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1306, line: 72, baseType: !1641)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{null, !1527, !1398, !102}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1627, file: !1306, line: 104, baseType: !1645, size: 32, offset: 96)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1306, line: 79, baseType: !1646)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 32)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{!103, !1527, !1398, !1354}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1627, file: !1306, line: 105, baseType: !1650, size: 32, offset: 128)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1306, line: 88, baseType: !1651)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{!1305, !1527, !1398}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1627, file: !1306, line: 106, baseType: !1655, size: 32, offset: 160)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1306, line: 92, baseType: !1656)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 32)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!103, !1527, !1398, !1424}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1627, file: !1306, line: 107, baseType: !1660, size: 32, offset: 192)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1306, line: 96, baseType: !1661)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{!103, !1527, !1398, !102}
!1664 = !{!1665, !1671, !1673, !1683, !1688, !1690, !1692, !1694, !1696, !1698, !1700, !1702, !1704, !1706, !1708, !1710, !1712, !1714, !1716, !1718, !1720, !1722, !1724, !1726, !1728, !1730, !1732, !1734, !1748, !1750, !1752, !1754, !1756, !1758, !1760, !1762, !1764, !1766, !1768, !1770, !1772, !1774, !1776, !1778, !1780, !1496, !1782, !1784, !1797, !1799, !1801, !1803, !1805, !1807, !1809}
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1498, file: !1667, line: 762, type: !1668, isLocal: false, isDefinition: true, align: 16)
!1667 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 96, elements: !1669)
!1669 = !{!1670}
!1670 = !DISubrange(count: 6)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1498, file: !1667, line: 762, type: !1528, isLocal: false, isDefinition: true, align: 32)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1498, file: !1667, line: 762, type: !1675, isLocal: true, isDefinition: true, align: 32)
!1675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !1677)
!1677 = !{!1678, !1682}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1676, file: !788, line: 60, baseType: !1679, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 32)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!103, !1527}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1676, file: !788, line: 65, baseType: !1527, size: 32, offset: 32)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1498, file: !1667, line: 766, type: !1685, isLocal: false, isDefinition: true, align: 16)
!1685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 80, elements: !1686)
!1686 = !{!1687}
!1687 = !DISubrange(count: 5)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1498, file: !1667, line: 766, type: !1528, isLocal: false, isDefinition: true, align: 32)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1498, file: !1667, line: 766, type: !1675, isLocal: true, isDefinition: true, align: 32)
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1498, file: !1667, line: 770, type: !1668, isLocal: false, isDefinition: true, align: 16)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1498, file: !1667, line: 770, type: !1528, isLocal: false, isDefinition: true, align: 32)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1498, file: !1667, line: 770, type: !1675, isLocal: true, isDefinition: true, align: 32)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1498, file: !1667, line: 774, type: !1685, isLocal: false, isDefinition: true, align: 16)
!1700 = !DIGlobalVariableExpression(var: !1701, expr: !DIExpression())
!1701 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1498, file: !1667, line: 774, type: !1528, isLocal: false, isDefinition: true, align: 32)
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1498, file: !1667, line: 774, type: !1675, isLocal: true, isDefinition: true, align: 32)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1498, file: !1667, line: 778, type: !1685, isLocal: false, isDefinition: true, align: 16)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1498, file: !1667, line: 778, type: !1528, isLocal: false, isDefinition: true, align: 32)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1498, file: !1667, line: 778, type: !1675, isLocal: true, isDefinition: true, align: 32)
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1498, file: !1667, line: 782, type: !1685, isLocal: false, isDefinition: true, align: 16)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1498, file: !1667, line: 782, type: !1528, isLocal: false, isDefinition: true, align: 32)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1498, file: !1667, line: 782, type: !1675, isLocal: true, isDefinition: true, align: 32)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1498, file: !1667, line: 786, type: !1685, isLocal: false, isDefinition: true, align: 16)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1498, file: !1667, line: 786, type: !1528, isLocal: false, isDefinition: true, align: 32)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1498, file: !1667, line: 786, type: !1675, isLocal: true, isDefinition: true, align: 32)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1498, file: !1667, line: 790, type: !1685, isLocal: false, isDefinition: true, align: 16)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1498, file: !1667, line: 790, type: !1528, isLocal: false, isDefinition: true, align: 32)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1498, file: !1667, line: 790, type: !1675, isLocal: true, isDefinition: true, align: 32)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1498, file: !1667, line: 794, type: !1685, isLocal: false, isDefinition: true, align: 16)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1498, file: !1667, line: 794, type: !1528, isLocal: false, isDefinition: true, align: 32)
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1498, file: !1667, line: 794, type: !1675, isLocal: true, isDefinition: true, align: 32)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1498, file: !1667, line: 762, type: !1736, isLocal: true, isDefinition: true)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1737, line: 237, size: 128, elements: !1738)
!1737 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1738 = !{!1739, !1740, !1741}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1736, file: !1737, line: 239, baseType: !1596, size: 32)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1736, file: !1737, line: 241, baseType: !1527, size: 32, offset: 32)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1736, file: !1737, line: 243, baseType: !1742, size: 64, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1574, line: 40, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1574, line: 35, size: 64, elements: !1744)
!1744 = !{!1745, !1747}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1743, file: !1574, line: 36, baseType: !1746, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1743, file: !1574, line: 37, baseType: !1746, size: 32, offset: 32)
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1498, file: !1667, line: 762, type: !1536, isLocal: true, isDefinition: true, align: 8)
!1750 = !DIGlobalVariableExpression(var: !1751, expr: !DIExpression())
!1751 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1498, file: !1667, line: 766, type: !1736, isLocal: true, isDefinition: true)
!1752 = !DIGlobalVariableExpression(var: !1753, expr: !DIExpression())
!1753 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1498, file: !1667, line: 766, type: !1536, isLocal: true, isDefinition: true, align: 8)
!1754 = !DIGlobalVariableExpression(var: !1755, expr: !DIExpression())
!1755 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1498, file: !1667, line: 770, type: !1736, isLocal: true, isDefinition: true)
!1756 = !DIGlobalVariableExpression(var: !1757, expr: !DIExpression())
!1757 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1498, file: !1667, line: 770, type: !1536, isLocal: true, isDefinition: true, align: 8)
!1758 = !DIGlobalVariableExpression(var: !1759, expr: !DIExpression())
!1759 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1498, file: !1667, line: 774, type: !1736, isLocal: true, isDefinition: true)
!1760 = !DIGlobalVariableExpression(var: !1761, expr: !DIExpression())
!1761 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1498, file: !1667, line: 774, type: !1536, isLocal: true, isDefinition: true, align: 8)
!1762 = !DIGlobalVariableExpression(var: !1763, expr: !DIExpression())
!1763 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1498, file: !1667, line: 778, type: !1736, isLocal: true, isDefinition: true)
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression())
!1765 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1498, file: !1667, line: 778, type: !1536, isLocal: true, isDefinition: true, align: 8)
!1766 = !DIGlobalVariableExpression(var: !1767, expr: !DIExpression())
!1767 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1498, file: !1667, line: 782, type: !1736, isLocal: true, isDefinition: true)
!1768 = !DIGlobalVariableExpression(var: !1769, expr: !DIExpression())
!1769 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1498, file: !1667, line: 782, type: !1536, isLocal: true, isDefinition: true, align: 8)
!1770 = !DIGlobalVariableExpression(var: !1771, expr: !DIExpression())
!1771 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1498, file: !1667, line: 786, type: !1736, isLocal: true, isDefinition: true)
!1772 = !DIGlobalVariableExpression(var: !1773, expr: !DIExpression())
!1773 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1498, file: !1667, line: 786, type: !1536, isLocal: true, isDefinition: true, align: 8)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1498, file: !1667, line: 790, type: !1736, isLocal: true, isDefinition: true)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1498, file: !1667, line: 790, type: !1536, isLocal: true, isDefinition: true, align: 8)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1498, file: !1667, line: 794, type: !1736, isLocal: true, isDefinition: true)
!1780 = !DIGlobalVariableExpression(var: !1781, expr: !DIExpression())
!1781 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1498, file: !1667, line: 794, type: !1536, isLocal: true, isDefinition: true, align: 8)
!1782 = !DIGlobalVariableExpression(var: !1783, expr: !DIExpression())
!1783 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1498, file: !1667, line: 656, type: !1520, isLocal: true, isDefinition: true)
!1784 = !DIGlobalVariableExpression(var: !1785, expr: !DIExpression())
!1785 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1498, file: !1667, line: 766, type: !1786, isLocal: true, isDefinition: true)
!1786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1787)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1737, line: 224, size: 160, elements: !1788)
!1788 = !{!1789, !1790, !1791, !1792}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1787, file: !1737, line: 226, baseType: !1591, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1787, file: !1737, line: 228, baseType: !1354, size: 32, offset: 32)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1787, file: !1737, line: 230, baseType: !103, size: 32, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1787, file: !1737, line: 231, baseType: !1793, size: 64, offset: 96)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1350, line: 343, size: 64, elements: !1794)
!1794 = !{!1795, !1796}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1793, file: !1350, line: 344, baseType: !111, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1793, file: !1350, line: 345, baseType: !111, size: 32, offset: 32)
!1797 = !DIGlobalVariableExpression(var: !1798, expr: !DIExpression())
!1798 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1498, file: !1667, line: 770, type: !1786, isLocal: true, isDefinition: true)
!1799 = !DIGlobalVariableExpression(var: !1800, expr: !DIExpression())
!1800 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1498, file: !1667, line: 774, type: !1786, isLocal: true, isDefinition: true)
!1801 = !DIGlobalVariableExpression(var: !1802, expr: !DIExpression())
!1802 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1498, file: !1667, line: 778, type: !1786, isLocal: true, isDefinition: true)
!1803 = !DIGlobalVariableExpression(var: !1804, expr: !DIExpression())
!1804 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1498, file: !1667, line: 782, type: !1786, isLocal: true, isDefinition: true)
!1805 = !DIGlobalVariableExpression(var: !1806, expr: !DIExpression())
!1806 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1498, file: !1667, line: 786, type: !1786, isLocal: true, isDefinition: true)
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1498, file: !1667, line: 790, type: !1786, isLocal: true, isDefinition: true)
!1809 = !DIGlobalVariableExpression(var: !1810, expr: !DIExpression())
!1810 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1498, file: !1667, line: 794, type: !1786, isLocal: true, isDefinition: true)
!1811 = !DIGlobalVariableExpression(var: !1812, expr: !DIExpression())
!1812 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1813, file: !1952, line: 44, type: !2030, isLocal: false, isDefinition: true)
!1813 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1814, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1815, retainedTypes: !1848, globals: !1949, splitDebugInlining: false, nameTableKind: None)
!1814 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!1815 = !{!30, !1816, !1823, !1830, !1837, !1843, !1305}
!1816 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1438, line: 47, baseType: !32, size: 32, elements: !1817)
!1817 = !{!1818, !1819, !1820, !1821, !1822}
!1818 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1819 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1820 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1821 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1822 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1823 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1438, line: 75, baseType: !32, size: 32, elements: !1824)
!1824 = !{!1825, !1826, !1827, !1828, !1829}
!1825 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1826 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1827 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1828 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1829 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1830 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1438, line: 92, baseType: !32, size: 32, elements: !1831)
!1831 = !{!1832, !1833, !1834, !1835, !1836}
!1832 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1833 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1834 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1835 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1836 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1837 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1438, line: 84, baseType: !32, size: 32, elements: !1838)
!1838 = !{!1839, !1840, !1841, !1842}
!1839 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1840 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1841 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1842 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1843 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1438, line: 107, baseType: !32, size: 32, elements: !1844)
!1844 = !{!1845, !1846, !1847}
!1845 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1846 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1847 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1848 = !{!102, !103, !1849, !167, !166, !1898, !111, !1398, !1909, !181, !112, !1948}
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1851)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1438, line: 336, size: 160, elements: !1852)
!1852 = !{!1853, !1872, !1876, !1880, !1893}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1851, file: !1438, line: 365, baseType: !1854, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 32)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!103, !1857, !1459}
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1859)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !1860)
!1860 = !{!1861, !1862, !1863, !1864, !1870, !1871}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1859, file: !797, line: 380, baseType: !108, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1859, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1859, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1859, file: !797, line: 386, baseType: !1865, size: 32, offset: 96)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !1867)
!1867 = !{!1868, !1869}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1866, file: !797, line: 359, baseType: !166, size: 8)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1866, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1859, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1859, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1851, file: !1438, line: 366, baseType: !1873, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{null, !1857, !167}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1851, file: !1438, line: 374, baseType: !1877, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!1878 = !DISubroutineType(types: !1879)
!1879 = !{!103, !1857}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1851, file: !1438, line: 377, baseType: !1881, size: 32, offset: 96)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = !DISubroutineType(types: !1883)
!1883 = !{!103, !1857, !1884}
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1438, line: 122, size: 64, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1892}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1886, file: !1438, line: 123, baseType: !111, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1886, file: !1438, line: 124, baseType: !166, size: 8, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1886, file: !1438, line: 125, baseType: !166, size: 8, offset: 40)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1886, file: !1438, line: 126, baseType: !166, size: 8, offset: 48)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1886, file: !1438, line: 127, baseType: !166, size: 8, offset: 56)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1851, file: !1438, line: 379, baseType: !1894, size: 32, offset: 128)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 32)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{!103, !1857, !1897}
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !773, line: 670, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 661, size: 224, elements: !1901)
!1901 = !{!1902, !1903, !1904, !1905, !1906, !1907, !1908}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1900, file: !773, line: 663, baseType: !777, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1900, file: !773, line: 664, baseType: !777, size: 32, offset: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1900, file: !773, line: 665, baseType: !777, size: 32, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1900, file: !773, line: 666, baseType: !777, size: 32, offset: 96)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1900, file: !773, line: 667, baseType: !777, size: 32, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1900, file: !773, line: 668, baseType: !777, size: 32, offset: 160)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1900, file: !773, line: 669, baseType: !777, size: 32, offset: 192)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1306, line: 100, size: 224, elements: !1912)
!1912 = !{!1913, !1918, !1919, !1928, !1933, !1938, !1943}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1911, file: !1306, line: 101, baseType: !1914, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1306, line: 76, baseType: !1915)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!103, !1857, !1398}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1911, file: !1306, line: 102, baseType: !1914, size: 32, offset: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1911, file: !1306, line: 103, baseType: !1920, size: 32, offset: 64)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1306, line: 83, baseType: !1921)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{!103, !1857, !1398, !1924, !102}
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1306, line: 72, baseType: !1925)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 32)
!1926 = !DISubroutineType(types: !1927)
!1927 = !{null, !1857, !1398, !102}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1911, file: !1306, line: 104, baseType: !1929, size: 32, offset: 96)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1306, line: 79, baseType: !1930)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{!103, !1857, !1398, !1354}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1911, file: !1306, line: 105, baseType: !1934, size: 32, offset: 128)
!1934 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1306, line: 88, baseType: !1935)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 32)
!1936 = !DISubroutineType(types: !1937)
!1937 = !{!1305, !1857, !1398}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1911, file: !1306, line: 106, baseType: !1939, size: 32, offset: 160)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1306, line: 92, baseType: !1940)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 32)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!103, !1857, !1398, !1424}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1911, file: !1306, line: 107, baseType: !1944, size: 32, offset: 192)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1306, line: 96, baseType: !1945)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 32)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!103, !1857, !1398, !102}
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 32)
!1949 = !{!1811, !1950, !1956, !1958, !1965, !1967, !2011, !2014, !2016, !2019, !2022, !2024}
!1950 = !DIGlobalVariableExpression(var: !1951, expr: !DIExpression())
!1951 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1813, file: !1952, line: 1914, type: !1953, isLocal: false, isDefinition: true, align: 16)
!1952 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 128, elements: !1954)
!1954 = !{!1955}
!1955 = !DISubrange(count: 8)
!1956 = !DIGlobalVariableExpression(var: !1957, expr: !DIExpression())
!1957 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1813, file: !1952, line: 1914, type: !1858, isLocal: false, isDefinition: true, align: 32)
!1958 = !DIGlobalVariableExpression(var: !1959, expr: !DIExpression())
!1959 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1813, file: !1952, line: 1914, type: !1960, isLocal: true, isDefinition: true, align: 32)
!1960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1961)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !1962)
!1962 = !{!1963, !1964}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1961, file: !788, line: 60, baseType: !1877, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1961, file: !788, line: 65, baseType: !1857, size: 32, offset: 32)
!1965 = !DIGlobalVariableExpression(var: !1966, expr: !DIExpression())
!1966 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1813, file: !1952, line: 1914, type: !1866, isLocal: true, isDefinition: true, align: 8)
!1967 = !DIGlobalVariableExpression(var: !1968, expr: !DIExpression())
!1968 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1813, file: !1952, line: 1914, type: !1969, isLocal: true, isDefinition: true)
!1969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1970)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1971, line: 22, size: 224, elements: !1972)
!1971 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1972 = !{!1973, !1974, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1970, file: !1971, line: 24, baseType: !1898, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1970, file: !1971, line: 26, baseType: !1975, size: 32, offset: 32)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1977)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1350, line: 343, size: 64, elements: !1978)
!1978 = !{!1979, !1980}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1977, file: !1350, line: 344, baseType: !111, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1977, file: !1350, line: 345, baseType: !111, size: 32, offset: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1970, file: !1971, line: 28, baseType: !156, size: 32, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1970, file: !1971, line: 30, baseType: !122, size: 8, offset: 96)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1970, file: !1971, line: 32, baseType: !103, size: 32, offset: 128)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1970, file: !1971, line: 34, baseType: !122, size: 8, offset: 160)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1970, file: !1971, line: 36, baseType: !122, size: 8, offset: 168)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1970, file: !1971, line: 38, baseType: !122, size: 8, offset: 176)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1970, file: !1971, line: 40, baseType: !122, size: 8, offset: 184)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1970, file: !1971, line: 41, baseType: !1989, size: 32, offset: 192)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1991)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1992, line: 60, size: 64, elements: !1993)
!1992 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1993 = !{!1994, !2010}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1991, file: !1992, line: 69, baseType: !1995, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1997)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1992, line: 50, size: 64, elements: !1998)
!1998 = !{!1999, !2008, !2009}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1997, file: !1992, line: 52, baseType: !2000, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2002)
!2002 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2003, line: 37, baseType: !2004)
!2003 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2003, line: 32, size: 64, elements: !2005)
!2005 = !{!2006, !2007}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !2004, file: !2003, line: 34, baseType: !111, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !2004, file: !2003, line: 36, baseType: !111, size: 32, offset: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1997, file: !1992, line: 54, baseType: !166, size: 8, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1997, file: !1992, line: 56, baseType: !166, size: 8, offset: 40)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1991, file: !1992, line: 71, baseType: !166, size: 8, offset: 32)
!2011 = !DIGlobalVariableExpression(var: !2012, expr: !DIExpression())
!2012 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1813, file: !1952, line: 1914, type: !2013, isLocal: true, isDefinition: true)
!2013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1976, size: 64, elements: !532)
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1813, file: !1952, line: 1914, type: !1990, isLocal: true, isDefinition: true)
!2016 = !DIGlobalVariableExpression(var: !2017, expr: !DIExpression())
!2017 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1813, file: !1952, line: 1914, type: !2018, isLocal: true, isDefinition: true)
!2018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1996, size: 64, elements: !532)
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression())
!2020 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1813, file: !1952, line: 1914, type: !2021, isLocal: true, isDefinition: true)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2001, size: 128, elements: !216)
!2022 = !DIGlobalVariableExpression(var: !2023, expr: !DIExpression())
!2023 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1813, file: !1952, line: 1539, type: !1850, isLocal: true, isDefinition: true)
!2024 = !DIGlobalVariableExpression(var: !2025, expr: !DIExpression())
!2025 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1813, file: !1952, line: 1914, type: !2026, isLocal: true, isDefinition: true)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1971, line: 74, size: 64, elements: !2027)
!2027 = !{!2028, !2029}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !2026, file: !1971, line: 76, baseType: !111, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !2026, file: !1971, line: 78, baseType: !1857, size: 32, offset: 32)
!2030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2031)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !2032)
!2032 = !{!2033, !2034}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2031, file: !753, line: 17, baseType: !108, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2031, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!2035 = !DIGlobalVariableExpression(var: !2036, expr: !DIExpression())
!2036 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !2037, file: !2115, line: 65, type: !777, isLocal: true, isDefinition: true)
!2037 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2038, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2039, retainedTypes: !2040, globals: !2112, splitDebugInlining: false, nameTableKind: None)
!2038 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!2039 = !{!1073}
!2040 = !{!104, !2041, !320, !166, !111, !2049, !2080}
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !992, line: 770, baseType: !2043)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 764, size: 128, elements: !2044)
!2044 = !{!2045, !2046, !2047, !2048}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2043, file: !992, line: 766, baseType: !777, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2043, file: !992, line: 767, baseType: !777, size: 32, offset: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2043, file: !992, line: 768, baseType: !777, size: 32, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2043, file: !992, line: 769, baseType: !996, size: 32, offset: 96)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !992, line: 426, baseType: !2051)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 411, size: 28704, elements: !2052)
!2052 = !{!2053, !2055, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2070, !2075, !2079}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2051, file: !992, line: 413, baseType: !2054, size: 256)
!2054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 256, elements: !1954)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2051, file: !992, line: 414, baseType: !2056, size: 768, offset: 256)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 768, elements: !2057)
!2057 = !{!2058}
!2058 = !DISubrange(count: 24)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2051, file: !992, line: 415, baseType: !2054, size: 256, offset: 1024)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2051, file: !992, line: 416, baseType: !2056, size: 768, offset: 1280)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2051, file: !992, line: 417, baseType: !2054, size: 256, offset: 2048)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2051, file: !992, line: 418, baseType: !2056, size: 768, offset: 2304)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2051, file: !992, line: 419, baseType: !2054, size: 256, offset: 3072)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2051, file: !992, line: 420, baseType: !2056, size: 768, offset: 3328)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2051, file: !992, line: 421, baseType: !2054, size: 256, offset: 4096)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2051, file: !992, line: 422, baseType: !2067, size: 1792, offset: 4352)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 1792, elements: !2068)
!2068 = !{!2069}
!2069 = !DISubrange(count: 56)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2051, file: !992, line: 423, baseType: !2071, size: 1920, offset: 6144)
!2071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2072, size: 1920, elements: !2073)
!2072 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !166)
!2073 = !{!2074}
!2074 = !DISubrange(count: 240)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2051, file: !992, line: 424, baseType: !2076, size: 20608, offset: 8064)
!2076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 20608, elements: !2077)
!2077 = !{!2078}
!2078 = !DISubrange(count: 644)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2051, file: !992, line: 425, baseType: !777, size: 32, offset: 28672)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !2082)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !2083)
!2083 = !{!2084, !2085, !2086, !2087, !2088, !2089, !2090, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2103, !2104, !2105, !2107, !2109, !2111}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2082, file: !992, line: 447, baseType: !996, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2082, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2082, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2082, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2082, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2082, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2082, file: !992, line: 453, baseType: !2091, size: 96, offset: 192)
!2091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2072, size: 96, elements: !2092)
!2092 = !{!2093}
!2093 = !DISubrange(count: 12)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2082, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2082, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2082, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2082, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2082, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2082, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2082, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2082, file: !992, line: 461, baseType: !2102, size: 64, offset: 512)
!2102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 64, elements: !216)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2082, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2082, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2082, file: !992, line: 464, baseType: !2106, size: 128, offset: 640)
!2106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 128, elements: !1177)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2082, file: !992, line: 465, baseType: !2108, size: 160, offset: 768)
!2108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 160, elements: !1686)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2082, file: !992, line: 466, baseType: !2110, size: 160, offset: 928)
!2110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 160, elements: !1686)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2082, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!2112 = !{!2113, !2139, !2144, !2146, !2148, !2035}
!2113 = !DIGlobalVariableExpression(var: !2114, expr: !DIExpression())
!2114 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !2037, file: !2115, line: 285, type: !2116, isLocal: true, isDefinition: true, align: 32)
!2115 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2117)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !2118)
!2118 = !{!2119, !2138}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2117, file: !788, line: 60, baseType: !2120, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 32)
!2121 = !DISubroutineType(types: !2122)
!2122 = !{!103, !2123}
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2125)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !2126)
!2126 = !{!2127, !2128, !2129, !2130, !2136, !2137}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2125, file: !797, line: 380, baseType: !108, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2125, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2125, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2125, file: !797, line: 386, baseType: !2131, size: 32, offset: 96)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 32)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !2133)
!2133 = !{!2134, !2135}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2132, file: !797, line: 359, baseType: !166, size: 8)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2132, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2125, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2125, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2117, file: !788, line: 65, baseType: !2123, size: 32, offset: 32)
!2139 = !DIGlobalVariableExpression(var: !2140, expr: !DIExpression())
!2140 = distinct !DIGlobalVariable(name: "lock", scope: !2037, file: !2115, line: 34, type: !2141, isLocal: true, isDefinition: true)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2142)
!2142 = !{!2143}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2141, file: !152, line: 52, baseType: !22, size: 32)
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(name: "last_load", scope: !2037, file: !2115, line: 36, type: !111, isLocal: true, isDefinition: true)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "cycle_count", scope: !2037, file: !2115, line: 48, type: !111, isLocal: true, isDefinition: true)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !2037, file: !2115, line: 54, type: !111, isLocal: true, isDefinition: true)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2152, file: !2234, line: 22, type: !2236, isLocal: true, isDefinition: true)
!2152 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2153, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2154, retainedTypes: !2155, globals: !2231, splitDebugInlining: false, nameTableKind: None)
!2153 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!2154 = !{!1501, !1507}
!2155 = !{!2156, !2220, !2225, !1554, !1507, !1501, !2230, !102}
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2158)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1502, line: 523, size: 288, elements: !2159)
!2159 = !{!2160, !2179, !2183, !2187, !2191, !2192, !2193, !2197, !2216}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2158, file: !1502, line: 524, baseType: !2161, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 32)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{!103, !2164, !1542, !1543}
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2166)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !2167)
!2167 = !{!2168, !2169, !2170, !2171, !2177, !2178}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2166, file: !797, line: 380, baseType: !108, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2166, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2166, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2166, file: !797, line: 386, baseType: !2172, size: 32, offset: 96)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 32)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !2174)
!2174 = !{!2175, !2176}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2173, file: !797, line: 359, baseType: !166, size: 8)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2173, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2166, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2166, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2158, file: !1502, line: 530, baseType: !2180, size: 32, offset: 32)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 32)
!2181 = !DISubroutineType(types: !2182)
!2182 = !{!103, !2164, !1548}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2158, file: !1502, line: 532, baseType: !2184, size: 32, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 32)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{!103, !2164, !1554, !1549}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2158, file: !1502, line: 535, baseType: !2188, size: 32, offset: 96)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 32)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{!103, !2164, !1554}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2158, file: !1502, line: 537, baseType: !2188, size: 32, offset: 128)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2158, file: !1502, line: 539, baseType: !2188, size: 32, offset: 160)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2158, file: !1502, line: 541, baseType: !2194, size: 32, offset: 192)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2195 = !DISubroutineType(types: !2196)
!2196 = !{!103, !2164, !1542, !1501, !1507}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2158, file: !1502, line: 544, baseType: !2198, size: 32, offset: 224)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!103, !2164, !2201, !122}
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 32)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1502, line: 478, size: 96, elements: !2203)
!2203 = !{!2204, !2210, !2215}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2202, file: !1502, line: 482, baseType: !2205, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1574, line: 33, baseType: !2206)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1574, line: 29, size: 32, elements: !2207)
!2207 = !{!2208}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2206, file: !1574, line: 30, baseType: !2209, size: 32)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2202, file: !1502, line: 485, baseType: !2211, size: 32, offset: 32)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1502, line: 464, baseType: !2212)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{null, !2164, !2201, !1554}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2202, file: !1502, line: 493, baseType: !1554, size: 32, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2158, file: !1502, line: 547, baseType: !2217, size: 32, offset: 256)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!111, !2164}
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2222)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1502, line: 428, size: 32, elements: !2223)
!2223 = !{!2224}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2222, file: !1502, line: 434, baseType: !1554, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2227)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1502, line: 441, size: 32, elements: !2228)
!2228 = !{!2229}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2227, file: !1502, line: 447, baseType: !1554, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!2231 = !{!2232, !2150}
!2232 = !DIGlobalVariableExpression(var: !2233, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2233 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2152, file: !2234, line: 37, type: !2235, isLocal: true, isDefinition: true)
!2234 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!2236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2237, size: 352, elements: !2238)
!2237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2164)
!2238 = !{!2239}
!2239 = !DISubrange(count: 11)
!2240 = !DIGlobalVariableExpression(var: !2241, expr: !DIExpression())
!2241 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2242, file: !2282, line: 139, type: !2287, isLocal: false, isDefinition: true)
!2242 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2243, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2244, globals: !2279, splitDebugInlining: false, nameTableKind: None)
!2243 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!2244 = !{!2245}
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 532, baseType: !2247)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 500, size: 1088, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2247, file: !773, line: 502, baseType: !777, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2247, file: !773, line: 503, baseType: !777, size: 32, offset: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2247, file: !773, line: 504, baseType: !777, size: 32, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2247, file: !773, line: 505, baseType: !777, size: 32, offset: 96)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2247, file: !773, line: 506, baseType: !777, size: 32, offset: 128)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2247, file: !773, line: 507, baseType: !777, size: 32, offset: 160)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2247, file: !773, line: 508, baseType: !777, size: 32, offset: 192)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2247, file: !773, line: 509, baseType: !111, size: 32, offset: 224)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2247, file: !773, line: 510, baseType: !777, size: 32, offset: 256)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2247, file: !773, line: 511, baseType: !777, size: 32, offset: 288)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2247, file: !773, line: 512, baseType: !1328, size: 64, offset: 320)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2247, file: !773, line: 513, baseType: !777, size: 32, offset: 384)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2247, file: !773, line: 514, baseType: !777, size: 32, offset: 416)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2247, file: !773, line: 515, baseType: !777, size: 32, offset: 448)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2247, file: !773, line: 516, baseType: !111, size: 32, offset: 480)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2247, file: !773, line: 517, baseType: !777, size: 32, offset: 512)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2247, file: !773, line: 518, baseType: !777, size: 32, offset: 544)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2247, file: !773, line: 519, baseType: !1328, size: 64, offset: 576)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2247, file: !773, line: 520, baseType: !777, size: 32, offset: 640)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2247, file: !773, line: 521, baseType: !777, size: 32, offset: 672)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2247, file: !773, line: 522, baseType: !777, size: 32, offset: 704)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2247, file: !773, line: 523, baseType: !111, size: 32, offset: 736)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2247, file: !773, line: 524, baseType: !777, size: 32, offset: 768)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2247, file: !773, line: 525, baseType: !777, size: 32, offset: 800)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2247, file: !773, line: 526, baseType: !1328, size: 64, offset: 832)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2247, file: !773, line: 527, baseType: !777, size: 32, offset: 896)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2247, file: !773, line: 528, baseType: !777, size: 32, offset: 928)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2247, file: !773, line: 529, baseType: !1328, size: 64, offset: 960)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2247, file: !773, line: 530, baseType: !777, size: 32, offset: 1024)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2247, file: !773, line: 531, baseType: !777, size: 32, offset: 1056)
!2279 = !{!2280, !2283, !2240}
!2280 = !DIGlobalVariableExpression(var: !2281, expr: !DIExpression())
!2281 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2242, file: !2282, line: 137, type: !111, isLocal: false, isDefinition: true)
!2282 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2283 = !DIGlobalVariableExpression(var: !2284, expr: !DIExpression())
!2284 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2242, file: !2282, line: 138, type: !2285, isLocal: false, isDefinition: true)
!2285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2286, size: 128, elements: !333)
!2286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!2287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2286, size: 64, elements: !1954)
!2288 = !DIGlobalVariableExpression(var: !2289, expr: !DIExpression())
!2289 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2290, file: !2293, line: 23, type: !2294, isLocal: false, isDefinition: true)
!2290 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2291, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, globals: !2292, splitDebugInlining: false, nameTableKind: None)
!2291 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!2292 = !{!2288}
!2293 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!2295 = !DIGlobalVariableExpression(var: !2296, expr: !DIExpression())
!2296 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2297, file: !2301, line: 37, type: !2553, isLocal: false, isDefinition: true)
!2297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2299, retainedTypes: !2308, globals: !2381, splitDebugInlining: false, nameTableKind: None)
!2298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!2299 = !{!2300, !30, !1073}
!2300 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2301, line: 63, baseType: !32, size: 32, elements: !2302)
!2301 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2302 = !{!2303, !2304, !2305, !2306, !2307}
!2303 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2304 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2305 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2306 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2307 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2308 = !{!22, !156, !102, !103, !2309, !160, !111, !2339, !320, !166, !2364}
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2311)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2312, line: 51, size: 64, elements: !2313)
!2312 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2313 = !{!2314, !2334}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2311, file: !2312, line: 52, baseType: !2315, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2312, line: 38, baseType: !2316)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 32)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!103, !2319, !550, !181}
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2321)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !2322)
!2322 = !{!2323, !2324, !2325, !2326, !2332, !2333}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2321, file: !797, line: 380, baseType: !108, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2321, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2321, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2321, file: !797, line: 386, baseType: !2327, size: 32, offset: 96)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 32)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !2329)
!2329 = !{!2330, !2331}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2328, file: !797, line: 359, baseType: !166, size: 8)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2328, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2321, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2321, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2311, file: !2312, line: 53, baseType: !2335, size: 32, offset: 32)
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2312, line: 47, baseType: !2336)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2337 = !DISubroutineType(types: !2338)
!2338 = !{!103, !2319, !550, !181, !111}
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !2341)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !2342)
!2342 = !{!2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2341, file: !992, line: 447, baseType: !996, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2341, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2341, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2341, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2341, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2341, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2341, file: !992, line: 453, baseType: !2091, size: 96, offset: 192)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2341, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2341, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2341, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2341, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2341, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2341, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2341, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2341, file: !992, line: 461, baseType: !2102, size: 64, offset: 512)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2341, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2341, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2341, file: !992, line: 464, baseType: !2106, size: 128, offset: 640)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2341, file: !992, line: 465, baseType: !2108, size: 160, offset: 768)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2341, file: !992, line: 466, baseType: !2110, size: 160, offset: 928)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2341, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !992, line: 426, baseType: !2366)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 411, size: 28704, elements: !2367)
!2367 = !{!2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2366, file: !992, line: 413, baseType: !2054, size: 256)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2366, file: !992, line: 414, baseType: !2056, size: 768, offset: 256)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2366, file: !992, line: 415, baseType: !2054, size: 256, offset: 1024)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2366, file: !992, line: 416, baseType: !2056, size: 768, offset: 1280)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2366, file: !992, line: 417, baseType: !2054, size: 256, offset: 2048)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2366, file: !992, line: 418, baseType: !2056, size: 768, offset: 2304)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2366, file: !992, line: 419, baseType: !2054, size: 256, offset: 3072)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2366, file: !992, line: 420, baseType: !2056, size: 768, offset: 3328)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2366, file: !992, line: 421, baseType: !2054, size: 256, offset: 4096)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2366, file: !992, line: 422, baseType: !2067, size: 1792, offset: 4352)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2366, file: !992, line: 423, baseType: !2071, size: 1920, offset: 6144)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2366, file: !992, line: 424, baseType: !2076, size: 20608, offset: 8064)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2366, file: !992, line: 425, baseType: !777, size: 32, offset: 28672)
!2381 = !{!2295, !2382, !2507, !2513, !2515, !2518, !2523, !2525, !2530}
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(name: "_kernel", scope: !2297, file: !2301, line: 40, type: !2384, isLocal: false, isDefinition: true)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !131, line: 158, size: 288, elements: !2385)
!2385 = !{!2386, !2502}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2384, file: !131, line: 159, baseType: !2387, size: 192)
!2387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2388, size: 192, elements: !532)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !131, line: 100, size: 192, elements: !2389)
!2389 = !{!2390, !2391, !2392, !2495, !2496, !2497, !2498}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2388, file: !131, line: 102, baseType: !111, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2388, file: !131, line: 105, baseType: !160, size: 32, offset: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2388, file: !131, line: 108, baseType: !2393, size: 32, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 32)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !2395)
!2395 = !{!2396, !2454, !2466, !2467, !2468, !2469, !2475, !2490}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2394, file: !199, line: 247, baseType: !2397, size: 384)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2398)
!2398 = !{!2399, !2423, !2430, !2431, !2432, !2441, !2442, !2443}
!2399 = !DIDerivedType(tag: DW_TAG_member, scope: !2397, file: !199, line: 60, baseType: !2400, size: 64)
!2400 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2397, file: !199, line: 60, size: 64, elements: !2401)
!2401 = !{!2402, !2417}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2400, file: !199, line: 61, baseType: !2403, size: 64)
!2403 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2404)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2405)
!2405 = !{!2406, !2412}
!2406 = !DIDerivedType(tag: DW_TAG_member, scope: !2404, file: !136, line: 38, baseType: !2407, size: 32)
!2407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2404, file: !136, line: 38, size: 32, elements: !2408)
!2408 = !{!2409, !2411}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2407, file: !136, line: 39, baseType: !2410, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2407, file: !136, line: 40, baseType: !2410, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, scope: !2404, file: !136, line: 42, baseType: !2413, size: 32, offset: 32)
!2413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2404, file: !136, line: 42, size: 32, elements: !2414)
!2414 = !{!2415, !2416}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2413, file: !136, line: 43, baseType: !2410, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2413, file: !136, line: 44, baseType: !2410, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2400, file: !199, line: 62, baseType: !2418, size: 64)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2419)
!2419 = !{!2420}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2418, file: !211, line: 50, baseType: !2421, size: 64)
!2421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2422, size: 64, elements: !216)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2397, file: !199, line: 68, baseType: !2424, size: 32, offset: 64)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2426)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2427)
!2427 = !{!2428}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2426, file: !131, line: 232, baseType: !2429, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2404)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2397, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2397, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2432 = !DIDerivedType(tag: DW_TAG_member, scope: !2397, file: !199, line: 90, baseType: !2433, size: 16, offset: 112)
!2433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2397, file: !199, line: 90, size: 16, elements: !2434)
!2434 = !{!2435, !2440}
!2435 = !DIDerivedType(tag: DW_TAG_member, scope: !2433, file: !199, line: 91, baseType: !2436, size: 16)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2433, file: !199, line: 91, size: 16, elements: !2437)
!2437 = !{!2438, !2439}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2436, file: !199, line: 96, baseType: !229, size: 8)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2436, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2433, file: !199, line: 100, baseType: !181, size: 16)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2397, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2397, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2397, file: !199, line: 131, baseType: !2444, size: 192, offset: 192)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2445)
!2445 = !{!2446, !2447, !2453}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2444, file: !131, line: 245, baseType: !2403, size: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2444, file: !131, line: 246, baseType: !2448, size: 32, offset: 64)
!2448 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2449)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 32)
!2450 = !DISubroutineType(types: !2451)
!2451 = !{null, !2452}
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2444, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2394, file: !199, line: 250, baseType: !2455, size: 288, offset: 384)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2456)
!2456 = !{!2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2455, file: !248, line: 26, baseType: !111, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2455, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2455, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2455, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2455, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2455, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2455, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2455, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2455, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2394, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2394, file: !199, line: 256, baseType: !2425, size: 64, offset: 704)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2394, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2394, file: !199, line: 300, baseType: !2470, size: 96, offset: 800)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !2471)
!2471 = !{!2472, !2473, !2474}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2470, file: !199, line: 153, baseType: !22, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2470, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2470, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2394, file: !199, line: 325, baseType: !2476, size: 32, offset: 896)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 32)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2478)
!2478 = !{!2479, !2485, !2486}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2477, file: !127, line: 5074, baseType: !2480, size: 96)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2481)
!2481 = !{!2482, !2483, !2484}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2480, file: !274, line: 57, baseType: !277, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2480, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2480, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2477, file: !127, line: 5075, baseType: !2425, size: 64, offset: 96)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2477, file: !127, line: 5076, baseType: !2487, size: 32, offset: 160)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2488)
!2488 = !{!2489}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2487, file: !152, line: 52, baseType: !22, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2394, file: !199, line: 343, baseType: !2491, size: 64, offset: 928)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2492)
!2492 = !{!2493, !2494}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2491, file: !248, line: 63, baseType: !111, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2491, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2388, file: !131, line: 111, baseType: !2393, size: 32, offset: 96)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2388, file: !131, line: 124, baseType: !103, size: 32, offset: 128)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2388, file: !131, line: 127, baseType: !166, size: 8, offset: 160)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2388, file: !131, line: 153, baseType: !2499, offset: 168)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2500, line: 33, elements: !2501)
!2500 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2501 = !{}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2384, file: !131, line: 170, baseType: !2503, size: 96, offset: 192)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !131, line: 83, size: 96, elements: !2504)
!2504 = !{!2505, !2506}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2503, file: !131, line: 86, baseType: !2393, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2503, file: !131, line: 90, baseType: !2429, size: 64, offset: 32)
!2507 = !DIGlobalVariableExpression(var: !2508, expr: !DIExpression())
!2508 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2297, file: !2301, line: 43, type: !2509, isLocal: false, isDefinition: true, align: 512)
!2509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2510, size: 8704, elements: !338)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !2511)
!2511 = !{!2512}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2510, file: !305, line: 48, baseType: !110, size: 8)
!2513 = !DIGlobalVariableExpression(var: !2514, expr: !DIExpression())
!2514 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2297, file: !2301, line: 44, type: !2394, isLocal: false, isDefinition: true)
!2515 = !DIGlobalVariableExpression(var: !2516, expr: !DIExpression())
!2516 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2297, file: !2301, line: 48, type: !2517, isLocal: false, isDefinition: true)
!2517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2394, size: 1024, elements: !532)
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2297, file: !2301, line: 86, type: !2520, isLocal: false, isDefinition: true, align: 512)
!2520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2510, size: 16896, elements: !2521)
!2521 = !{!533, !2522}
!2522 = !DISubrange(count: 2112)
!2523 = !DIGlobalVariableExpression(var: !2524, expr: !DIExpression())
!2524 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2297, file: !2301, line: 217, type: !122, isLocal: false, isDefinition: true)
!2525 = !DIGlobalVariableExpression(var: !2526, expr: !DIExpression())
!2526 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2297, file: !2301, line: 50, type: !2527, isLocal: true, isDefinition: true, align: 512)
!2527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2510, size: 3072, elements: !2528)
!2528 = !{!533, !2529}
!2529 = !DISubrange(count: 384)
!2530 = !DIGlobalVariableExpression(var: !2531, expr: !DIExpression())
!2531 = distinct !DIGlobalVariable(name: "levels", scope: !2532, file: !2301, line: 232, type: !2552, isLocal: true, isDefinition: true)
!2532 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2301, file: !2301, line: 230, type: !2533, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !2535)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{null, !2300}
!2535 = !{!2536, !2537, !2547, !2551}
!2536 = !DILocalVariable(name: "level", arg: 1, scope: !2532, file: !2301, line: 230, type: !2300)
!2537 = !DILocalVariable(name: "entry", scope: !2532, file: !2301, line: 244, type: !2538)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2540)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !2541)
!2541 = !{!2542, !2546}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2540, file: !788, line: 60, baseType: !2543, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 32)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{!103, !2319}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2540, file: !788, line: 65, baseType: !2319, size: 32, offset: 32)
!2547 = !DILocalVariable(name: "dev", scope: !2548, file: !2301, line: 247, type: !2319)
!2548 = distinct !DILexicalBlock(scope: !2549, file: !2301, line: 246, column: 64)
!2549 = distinct !DILexicalBlock(scope: !2550, file: !2301, line: 246, column: 2)
!2550 = distinct !DILexicalBlock(scope: !2532, file: !2301, line: 246, column: 2)
!2551 = !DILocalVariable(name: "rc", scope: !2548, file: !2301, line: 248, type: !103)
!2552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2538, size: 192, elements: !1669)
!2553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2554)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !2555)
!2555 = !{!2556, !2557}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2554, file: !753, line: 17, baseType: !108, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2554, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!2558 = !DIGlobalVariableExpression(var: !2559, expr: !DIExpression())
!2559 = distinct !DIGlobalVariable(name: "states_str", scope: !2560, file: !2561, line: 276, type: !2684, isLocal: true, isDefinition: true)
!2560 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2561, file: !2561, line: 271, type: !2562, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !2675)
!2561 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2562 = !DISubroutineType(types: !2563)
!2563 = !{!108, !2564, !160, !156}
!2564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !2565)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 32)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !2567)
!2567 = !{!2568, !2626, !2638, !2639, !2640, !2641, !2647, !2662}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2566, file: !199, line: 247, baseType: !2569, size: 384)
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2570)
!2570 = !{!2571, !2595, !2602, !2603, !2604, !2613, !2614, !2615}
!2571 = !DIDerivedType(tag: DW_TAG_member, scope: !2569, file: !199, line: 60, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2569, file: !199, line: 60, size: 64, elements: !2573)
!2573 = !{!2574, !2589}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2572, file: !199, line: 61, baseType: !2575, size: 64)
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2576)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2577)
!2577 = !{!2578, !2584}
!2578 = !DIDerivedType(tag: DW_TAG_member, scope: !2576, file: !136, line: 38, baseType: !2579, size: 32)
!2579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2576, file: !136, line: 38, size: 32, elements: !2580)
!2580 = !{!2581, !2583}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2579, file: !136, line: 39, baseType: !2582, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2579, file: !136, line: 40, baseType: !2582, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, scope: !2576, file: !136, line: 42, baseType: !2585, size: 32, offset: 32)
!2585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2576, file: !136, line: 42, size: 32, elements: !2586)
!2586 = !{!2587, !2588}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2585, file: !136, line: 43, baseType: !2582, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2585, file: !136, line: 44, baseType: !2582, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2572, file: !199, line: 62, baseType: !2590, size: 64)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2591)
!2591 = !{!2592}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2590, file: !211, line: 50, baseType: !2593, size: 64)
!2593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2594, size: 64, elements: !216)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2569, file: !199, line: 68, baseType: !2596, size: 32, offset: 64)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2598)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2599)
!2599 = !{!2600}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2598, file: !131, line: 232, baseType: !2601, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2576)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2569, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2569, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2604 = !DIDerivedType(tag: DW_TAG_member, scope: !2569, file: !199, line: 90, baseType: !2605, size: 16, offset: 112)
!2605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2569, file: !199, line: 90, size: 16, elements: !2606)
!2606 = !{!2607, !2612}
!2607 = !DIDerivedType(tag: DW_TAG_member, scope: !2605, file: !199, line: 91, baseType: !2608, size: 16)
!2608 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2605, file: !199, line: 91, size: 16, elements: !2609)
!2609 = !{!2610, !2611}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2608, file: !199, line: 96, baseType: !229, size: 8)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2608, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2605, file: !199, line: 100, baseType: !181, size: 16)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2569, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2569, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2569, file: !199, line: 131, baseType: !2616, size: 192, offset: 192)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2617)
!2617 = !{!2618, !2619, !2625}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2616, file: !131, line: 245, baseType: !2575, size: 64)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2616, file: !131, line: 246, baseType: !2620, size: 32, offset: 64)
!2620 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2621)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 32)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{null, !2624}
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2616, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2566, file: !199, line: 250, baseType: !2627, size: 288, offset: 384)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2628)
!2628 = !{!2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2627, file: !248, line: 26, baseType: !111, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2627, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2627, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2627, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2627, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2627, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2627, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2627, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2627, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2566, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2566, file: !199, line: 256, baseType: !2597, size: 64, offset: 704)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2566, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2566, file: !199, line: 300, baseType: !2642, size: 96, offset: 800)
!2642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !2643)
!2643 = !{!2644, !2645, !2646}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2642, file: !199, line: 153, baseType: !22, size: 32)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2642, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2642, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2566, file: !199, line: 325, baseType: !2648, size: 32, offset: 896)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 32)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2650)
!2650 = !{!2651, !2657, !2658}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2649, file: !127, line: 5074, baseType: !2652, size: 96)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2653)
!2653 = !{!2654, !2655, !2656}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2652, file: !274, line: 57, baseType: !277, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2652, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2652, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2649, file: !127, line: 5075, baseType: !2597, size: 64, offset: 96)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2649, file: !127, line: 5076, baseType: !2659, size: 32, offset: 160)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2660)
!2660 = !{!2661}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2659, file: !152, line: 52, baseType: !22, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2566, file: !199, line: 343, baseType: !2663, size: 64, offset: 928)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2664)
!2664 = !{!2665, !2666}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2663, file: !248, line: 63, baseType: !111, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2663, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2667 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2668, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2669, globals: !2671, splitDebugInlining: false, nameTableKind: None)
!2668 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!2669 = !{!102, !108, !104, !166, !22, !103, !2670, !24, !156, !160, !111, !112}
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 32)
!2671 = !{!2558, !2672}
!2672 = !DIGlobalVariableExpression(var: !2673, expr: !DIExpression())
!2673 = distinct !DIGlobalVariable(name: "states_sz", scope: !2560, file: !2561, line: 279, type: !2674, isLocal: true, isDefinition: true)
!2674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2235, size: 256, elements: !1954)
!2675 = !{!2676, !2677, !2678, !2679, !2680, !2681, !2682}
!2676 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2560, file: !2561, line: 271, type: !2564)
!2677 = !DILocalVariable(name: "buf", arg: 2, scope: !2560, file: !2561, line: 271, type: !160)
!2678 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2560, file: !2561, line: 271, type: !156)
!2679 = !DILocalVariable(name: "off", scope: !2560, file: !2561, line: 273, type: !156)
!2680 = !DILocalVariable(name: "bit", scope: !2560, file: !2561, line: 274, type: !166)
!2681 = !DILocalVariable(name: "thread_state", scope: !2560, file: !2561, line: 275, type: !166)
!2682 = !DILocalVariable(name: "index", scope: !2683, file: !2561, line: 293, type: !166)
!2683 = distinct !DILexicalBlock(scope: !2560, file: !2561, line: 293, column: 2)
!2684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 256, elements: !1954)
!2685 = !DIGlobalVariableExpression(var: !2686, expr: !DIExpression())
!2686 = distinct !DIGlobalVariable(name: "lock", scope: !2687, file: !2794, line: 47, type: !2785, isLocal: true, isDefinition: true)
!2687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2688, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2689, globals: !2793, splitDebugInlining: false, nameTableKind: None)
!2688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!2689 = !{!122, !102, !103, !2690, !2705}
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2692)
!2692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2693)
!2693 = !{!2694, !2700}
!2694 = !DIDerivedType(tag: DW_TAG_member, scope: !2692, file: !136, line: 38, baseType: !2695, size: 32)
!2695 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2692, file: !136, line: 38, size: 32, elements: !2696)
!2696 = !{!2697, !2699}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2695, file: !136, line: 39, baseType: !2698, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2695, file: !136, line: 40, baseType: !2698, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, scope: !2692, file: !136, line: 42, baseType: !2701, size: 32, offset: 32)
!2701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2692, file: !136, line: 42, size: 32, elements: !2702)
!2702 = !{!2703, !2704}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2701, file: !136, line: 43, baseType: !2698, size: 32)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2701, file: !136, line: 44, baseType: !2698, size: 32)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 32)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !2707)
!2707 = !{!2708, !2752, !2764, !2765, !2766, !2767, !2773, !2788}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2706, file: !199, line: 247, baseType: !2709, size: 384)
!2709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2710)
!2710 = !{!2711, !2721, !2728, !2729, !2730, !2739, !2740, !2741}
!2711 = !DIDerivedType(tag: DW_TAG_member, scope: !2709, file: !199, line: 60, baseType: !2712, size: 64)
!2712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2709, file: !199, line: 60, size: 64, elements: !2713)
!2713 = !{!2714, !2715}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2712, file: !199, line: 61, baseType: !2691, size: 64)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2712, file: !199, line: 62, baseType: !2716, size: 64)
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2717)
!2717 = !{!2718}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2716, file: !211, line: 50, baseType: !2719, size: 64)
!2719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2720, size: 64, elements: !216)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2709, file: !199, line: 68, baseType: !2722, size: 32, offset: 64)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2724)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2725)
!2725 = !{!2726}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2724, file: !131, line: 232, baseType: !2727, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2692)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2709, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2709, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2730 = !DIDerivedType(tag: DW_TAG_member, scope: !2709, file: !199, line: 90, baseType: !2731, size: 16, offset: 112)
!2731 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2709, file: !199, line: 90, size: 16, elements: !2732)
!2732 = !{!2733, !2738}
!2733 = !DIDerivedType(tag: DW_TAG_member, scope: !2731, file: !199, line: 91, baseType: !2734, size: 16)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2731, file: !199, line: 91, size: 16, elements: !2735)
!2735 = !{!2736, !2737}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2734, file: !199, line: 96, baseType: !229, size: 8)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2734, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2731, file: !199, line: 100, baseType: !181, size: 16)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2709, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2709, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2709, file: !199, line: 131, baseType: !2742, size: 192, offset: 192)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2743)
!2743 = !{!2744, !2745, !2751}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2742, file: !131, line: 245, baseType: !2691, size: 64)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2742, file: !131, line: 246, baseType: !2746, size: 32, offset: 64)
!2746 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2747)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 32)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{null, !2750}
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 32)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2742, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2706, file: !199, line: 250, baseType: !2753, size: 288, offset: 384)
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2754)
!2754 = !{!2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2753, file: !248, line: 26, baseType: !111, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2753, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2753, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2753, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2753, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2753, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2753, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2753, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2753, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2706, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2706, file: !199, line: 256, baseType: !2723, size: 64, offset: 704)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2706, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2706, file: !199, line: 300, baseType: !2768, size: 96, offset: 800)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !2769)
!2769 = !{!2770, !2771, !2772}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2768, file: !199, line: 153, baseType: !22, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2768, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2768, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2706, file: !199, line: 325, baseType: !2774, size: 32, offset: 896)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 32)
!2775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2776)
!2776 = !{!2777, !2783, !2784}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2775, file: !127, line: 5074, baseType: !2778, size: 96)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2779)
!2779 = !{!2780, !2781, !2782}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2778, file: !274, line: 57, baseType: !277, size: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2778, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2778, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2775, file: !127, line: 5075, baseType: !2723, size: 64, offset: 96)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2775, file: !127, line: 5076, baseType: !2785, size: 32, offset: 160)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2786)
!2786 = !{!2787}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2785, file: !152, line: 52, baseType: !22, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2706, file: !199, line: 343, baseType: !2789, size: 64, offset: 928)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2790)
!2790 = !{!2791, !2792}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2789, file: !248, line: 63, baseType: !111, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2789, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2793 = !{!2685}
!2794 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2795 = !DIGlobalVariableExpression(var: !2796, expr: !DIExpression())
!2796 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2797, file: !2907, line: 56, type: !2894, isLocal: false, isDefinition: true)
!2797 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2798, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2799, globals: !2904, splitDebugInlining: false, nameTableKind: None)
!2798 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!2799 = !{!2800, !160, !102, !2902, !550, !104, !320, !103, !111, !112, !2903}
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 32)
!2801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !2802)
!2802 = !{!2803, !2861, !2873, !2874, !2875, !2876, !2882, !2897}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2801, file: !199, line: 247, baseType: !2804, size: 384)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2805)
!2805 = !{!2806, !2830, !2837, !2838, !2839, !2848, !2849, !2850}
!2806 = !DIDerivedType(tag: DW_TAG_member, scope: !2804, file: !199, line: 60, baseType: !2807, size: 64)
!2807 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2804, file: !199, line: 60, size: 64, elements: !2808)
!2808 = !{!2809, !2824}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2807, file: !199, line: 61, baseType: !2810, size: 64)
!2810 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2811)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2812)
!2812 = !{!2813, !2819}
!2813 = !DIDerivedType(tag: DW_TAG_member, scope: !2811, file: !136, line: 38, baseType: !2814, size: 32)
!2814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2811, file: !136, line: 38, size: 32, elements: !2815)
!2815 = !{!2816, !2818}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2814, file: !136, line: 39, baseType: !2817, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2814, file: !136, line: 40, baseType: !2817, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, scope: !2811, file: !136, line: 42, baseType: !2820, size: 32, offset: 32)
!2820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2811, file: !136, line: 42, size: 32, elements: !2821)
!2821 = !{!2822, !2823}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2820, file: !136, line: 43, baseType: !2817, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2820, file: !136, line: 44, baseType: !2817, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2807, file: !199, line: 62, baseType: !2825, size: 64)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2826)
!2826 = !{!2827}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2825, file: !211, line: 50, baseType: !2828, size: 64)
!2828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2829, size: 64, elements: !216)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2804, file: !199, line: 68, baseType: !2831, size: 32, offset: 64)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2833)
!2833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2834)
!2834 = !{!2835}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2833, file: !131, line: 232, baseType: !2836, size: 64)
!2836 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2811)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2804, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2804, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2839 = !DIDerivedType(tag: DW_TAG_member, scope: !2804, file: !199, line: 90, baseType: !2840, size: 16, offset: 112)
!2840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2804, file: !199, line: 90, size: 16, elements: !2841)
!2841 = !{!2842, !2847}
!2842 = !DIDerivedType(tag: DW_TAG_member, scope: !2840, file: !199, line: 91, baseType: !2843, size: 16)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2840, file: !199, line: 91, size: 16, elements: !2844)
!2844 = !{!2845, !2846}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2843, file: !199, line: 96, baseType: !229, size: 8)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2843, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2840, file: !199, line: 100, baseType: !181, size: 16)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2804, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2804, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2804, file: !199, line: 131, baseType: !2851, size: 192, offset: 192)
!2851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2852)
!2852 = !{!2853, !2854, !2860}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2851, file: !131, line: 245, baseType: !2810, size: 64)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2851, file: !131, line: 246, baseType: !2855, size: 32, offset: 64)
!2855 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2856)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 32)
!2857 = !DISubroutineType(types: !2858)
!2858 = !{null, !2859}
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2851, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2801, file: !199, line: 250, baseType: !2862, size: 288, offset: 384)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2863)
!2863 = !{!2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2862, file: !248, line: 26, baseType: !111, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2862, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2862, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2862, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2862, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2862, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2862, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2862, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2862, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2801, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2801, file: !199, line: 256, baseType: !2832, size: 64, offset: 704)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2801, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2801, file: !199, line: 300, baseType: !2877, size: 96, offset: 800)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !2878)
!2878 = !{!2879, !2880, !2881}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2877, file: !199, line: 153, baseType: !22, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2877, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2877, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2801, file: !199, line: 325, baseType: !2883, size: 32, offset: 896)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 32)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2885)
!2885 = !{!2886, !2892, !2893}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2884, file: !127, line: 5074, baseType: !2887, size: 96)
!2887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2888)
!2888 = !{!2889, !2890, !2891}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2887, file: !274, line: 57, baseType: !277, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2887, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2887, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2884, file: !127, line: 5075, baseType: !2832, size: 64, offset: 96)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2884, file: !127, line: 5076, baseType: !2894, size: 32, offset: 160)
!2894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2895)
!2895 = !{!2896}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2894, file: !152, line: 52, baseType: !22, size: 32)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2801, file: !199, line: 343, baseType: !2898, size: 64, offset: 928)
!2898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2899)
!2899 = !{!2900, !2901}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2898, file: !248, line: 63, baseType: !111, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2898, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 32)
!2904 = !{!2795, !2905, !2908, !2910}
!2905 = !DIGlobalVariableExpression(var: !2906, expr: !DIExpression())
!2906 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2797, file: !2907, line: 404, type: !103, isLocal: true, isDefinition: true)
!2907 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2908 = !DIGlobalVariableExpression(var: !2909, expr: !DIExpression())
!2909 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2797, file: !2907, line: 405, type: !103, isLocal: true, isDefinition: true)
!2910 = !DIGlobalVariableExpression(var: !2911, expr: !DIExpression())
!2911 = distinct !DIGlobalVariable(name: "pending_current", scope: !2797, file: !2907, line: 425, type: !2800, isLocal: true, isDefinition: true)
!2912 = !DIGlobalVariableExpression(var: !2913, expr: !DIExpression())
!2913 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2914, file: !2944, line: 19, type: !2950, isLocal: true, isDefinition: true)
!2914 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2915, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2916, globals: !2941, splitDebugInlining: false, nameTableKind: None)
!2915 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!2916 = !{!104, !102, !320, !111, !112, !103, !2917, !160, !106}
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 32)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2919)
!2919 = !{!2920, !2935, !2940}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2918, file: !131, line: 245, baseType: !2921, size: 64)
!2921 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2922)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2923)
!2923 = !{!2924, !2930}
!2924 = !DIDerivedType(tag: DW_TAG_member, scope: !2922, file: !136, line: 38, baseType: !2925, size: 32)
!2925 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2922, file: !136, line: 38, size: 32, elements: !2926)
!2926 = !{!2927, !2929}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2925, file: !136, line: 39, baseType: !2928, size: 32)
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2925, file: !136, line: 40, baseType: !2928, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, scope: !2922, file: !136, line: 42, baseType: !2931, size: 32, offset: 32)
!2931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2922, file: !136, line: 42, size: 32, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2931, file: !136, line: 43, baseType: !2928, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2931, file: !136, line: 44, baseType: !2928, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2918, file: !131, line: 246, baseType: !2936, size: 32, offset: 64)
!2936 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2937)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 32)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{null, !2917}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2918, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2941 = !{!2942, !2912, !2945, !2947}
!2942 = !DIGlobalVariableExpression(var: !2943, expr: !DIExpression())
!2943 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2914, file: !2944, line: 15, type: !112, isLocal: true, isDefinition: true)
!2944 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2945 = !DIGlobalVariableExpression(var: !2946, expr: !DIExpression())
!2946 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2914, file: !2944, line: 25, type: !103, isLocal: true, isDefinition: true)
!2947 = !DIGlobalVariableExpression(var: !2948, expr: !DIExpression())
!2948 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2914, file: !2944, line: 17, type: !2949, isLocal: true, isDefinition: true)
!2949 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2922)
!2950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2951)
!2951 = !{!2952}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2950, file: !152, line: 52, baseType: !22, size: 32)
!2953 = !DIGlobalVariableExpression(var: !2954, expr: !DIExpression())
!2954 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2955, file: !2961, line: 61, type: !2993, isLocal: false, isDefinition: true, align: 64)
!2955 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2956, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2957, globals: !2958, splitDebugInlining: false, nameTableKind: None)
!2956 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!2957 = !{!102, !103, !22}
!2958 = !{!2959, !2953}
!2959 = !DIGlobalVariableExpression(var: !2960, expr: !DIExpression())
!2960 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2955, file: !2961, line: 61, type: !2962, isLocal: false, isDefinition: true, align: 32)
!2961 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2963)
!2963 = !{!2964, !2970, !2989}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2962, file: !127, line: 5074, baseType: !2965, size: 96)
!2965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2966)
!2966 = !{!2967, !2968, !2969}
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2965, file: !274, line: 57, baseType: !277, size: 32)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2965, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2965, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2962, file: !127, line: 5075, baseType: !2971, size: 64, offset: 96)
!2971 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2972)
!2972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2973)
!2973 = !{!2974}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2972, file: !131, line: 232, baseType: !2975, size: 64)
!2975 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2976)
!2976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2977)
!2977 = !{!2978, !2984}
!2978 = !DIDerivedType(tag: DW_TAG_member, scope: !2976, file: !136, line: 38, baseType: !2979, size: 32)
!2979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2976, file: !136, line: 38, size: 32, elements: !2980)
!2980 = !{!2981, !2983}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2979, file: !136, line: 39, baseType: !2982, size: 32)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2979, file: !136, line: 40, baseType: !2982, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, scope: !2976, file: !136, line: 42, baseType: !2985, size: 32, offset: 32)
!2985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2976, file: !136, line: 42, size: 32, elements: !2986)
!2986 = !{!2987, !2988}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2985, file: !136, line: 43, baseType: !2982, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2985, file: !136, line: 44, baseType: !2982, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2962, file: !127, line: 5076, baseType: !2990, size: 32, offset: 160)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2991)
!2991 = !{!2992}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2990, file: !152, line: 52, baseType: !22, size: 32)
!2993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 8192, elements: !2994)
!2994 = !{!2995}
!2995 = !DISubrange(count: 1024)
!2996 = !DIGlobalVariableExpression(var: !2997, expr: !DIExpression())
!2997 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2998, file: !3017, line: 55, type: !3018, isLocal: true, isDefinition: true, align: 32)
!2998 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2999, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3000, globals: !3016, splitDebugInlining: false, nameTableKind: None)
!2999 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3000 = !{!102, !104, !103, !3001}
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 32)
!3002 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !3003)
!3003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !3004)
!3004 = !{!3005, !3011}
!3005 = !DIDerivedType(tag: DW_TAG_member, scope: !3003, file: !136, line: 38, baseType: !3006, size: 32)
!3006 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3003, file: !136, line: 38, size: 32, elements: !3007)
!3007 = !{!3008, !3010}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3006, file: !136, line: 39, baseType: !3009, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3006, file: !136, line: 40, baseType: !3009, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, scope: !3003, file: !136, line: 42, baseType: !3012, size: 32, offset: 32)
!3012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3003, file: !136, line: 42, size: 32, elements: !3013)
!3013 = !{!3014, !3015}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3012, file: !136, line: 43, baseType: !3009, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3012, file: !136, line: 44, baseType: !3009, size: 32)
!3016 = !{!2996}
!3017 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3019)
!3019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !3020)
!3020 = !{!3021, !3028}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3019, file: !788, line: 60, baseType: !3022, size: 32)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 32)
!3023 = !DISubroutineType(types: !3024)
!3024 = !{!103, !3025}
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3027)
!3027 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !788, line: 48, flags: DIFlagFwdDecl)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3019, file: !788, line: 65, baseType: !3025, size: 32, offset: 32)
!3029 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3030, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3030 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3031 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3032, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3032 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3033 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3034, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3035, retainedTypes: !3043, splitDebugInlining: false, nameTableKind: None)
!3034 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3035 = !{!30, !3036}
!3036 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !3037, line: 54, baseType: !32, size: 32, elements: !3038)
!3037 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3038 = !{!3039, !3040, !3041, !3042}
!3039 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!3040 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!3041 = !DIEnumerator(name: "FREE_PREV", value: 2)
!3042 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!3043 = !{!102, !156, !550, !24, !3044, !22, !3050, !103, !1354, !3065}
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !3037, line: 58, baseType: !3046)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3037, line: 58, size: 64, elements: !3047)
!3047 = !{!3048}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3046, file: !3037, line: 58, baseType: !3049, size: 64)
!3049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !1954)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 32)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !3037, line: 68, size: 128, elements: !3052)
!3052 = !{!3053, !3056, !3057, !3058}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !3051, file: !3037, line: 69, baseType: !3054, size: 64)
!3054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3055, size: 64, elements: !216)
!3055 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !3037, line: 61, baseType: !111)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !3051, file: !3037, line: 70, baseType: !3055, size: 32, offset: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !3051, file: !3037, line: 71, baseType: !111, size: 32, offset: 96)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !3051, file: !3037, line: 77, baseType: !3059, offset: 128)
!3059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3060, elements: !3063)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !3037, line: 64, size: 32, elements: !3061)
!3061 = !{!3062}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3060, file: !3037, line: 65, baseType: !3055, size: 32)
!3063 = !{!3064}
!3064 = !DISubrange(count: 0)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!3066 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3067, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3068, retainedTypes: !3088, splitDebugInlining: false, nameTableKind: None)
!3067 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3068 = !{!3069, !3077}
!3069 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !3070, line: 69, baseType: !32, size: 32, elements: !3071)
!3070 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3071 = !{!3072, !3073, !3074, !3075, !3076}
!3072 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!3073 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!3074 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!3075 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!3076 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!3077 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !3070, line: 56, baseType: !32, size: 32, elements: !3078)
!3078 = !{!3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087}
!3079 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!3080 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!3081 = !DIEnumerator(name: "LENGTH_H", value: 2)
!3082 = !DIEnumerator(name: "LENGTH_L", value: 3)
!3083 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!3084 = !DIEnumerator(name: "LENGTH_J", value: 5)
!3085 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!3086 = !DIEnumerator(name: "LENGTH_T", value: 7)
!3087 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!3088 = !{!103, !3069, !3077, !3089, !230, !814, !3091, !3092, !167, !182, !108, !156, !102, !22, !32, !744, !3094, !3095, !746, !745, !107, !747, !3090, !3096, !3097, !3098, !3099}
!3089 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !3070, line: 31, baseType: !3090)
!3090 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!3091 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !157, line: 329, baseType: !32)
!3092 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !3070, line: 32, baseType: !3093)
!3093 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !113)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 32)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 32)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!3098 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !157, line: 145, baseType: !103)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 32)
!3100 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3101, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3101 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3102 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3103, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3103 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3104 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3105, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3106, splitDebugInlining: false, nameTableKind: None)
!3105 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3106 = !{!108, !167, !103, !32}
!3107 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3108, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3109, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3108 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3109 = !{!3110, !30}
!3110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !3111, line: 27, baseType: !32, size: 32, elements: !3112)
!3111 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3112 = !{!3113, !3114, !3115, !3116, !3117}
!3113 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!3114 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!3115 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!3116 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!3117 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!3118 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3119, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3120, retainedTypes: !3121, splitDebugInlining: false, nameTableKind: None)
!3119 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3120 = !{!1073, !3110, !30}
!3121 = !{!1260, !3122, !102, !103, !320, !111, !166, !3139}
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 32)
!3123 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !992, line: 426, baseType: !3124)
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 411, size: 28704, elements: !3125)
!3125 = !{!3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3124, file: !992, line: 413, baseType: !2054, size: 256)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3124, file: !992, line: 414, baseType: !2056, size: 768, offset: 256)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3124, file: !992, line: 415, baseType: !2054, size: 256, offset: 1024)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3124, file: !992, line: 416, baseType: !2056, size: 768, offset: 1280)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3124, file: !992, line: 417, baseType: !2054, size: 256, offset: 2048)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3124, file: !992, line: 418, baseType: !2056, size: 768, offset: 2304)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3124, file: !992, line: 419, baseType: !2054, size: 256, offset: 3072)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3124, file: !992, line: 420, baseType: !2056, size: 768, offset: 3328)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3124, file: !992, line: 421, baseType: !2054, size: 256, offset: 4096)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3124, file: !992, line: 422, baseType: !2067, size: 1792, offset: 4352)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3124, file: !992, line: 423, baseType: !2071, size: 1920, offset: 6144)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3124, file: !992, line: 424, baseType: !2076, size: 20608, offset: 8064)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3124, file: !992, line: 425, baseType: !777, size: 32, offset: 28672)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 32)
!3140 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !3141)
!3141 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !3142)
!3142 = !{!3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3141, file: !992, line: 447, baseType: !996, size: 32)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3141, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3141, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3141, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3141, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3141, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3141, file: !992, line: 453, baseType: !2091, size: 96, offset: 192)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3141, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3141, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3141, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3141, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3141, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3141, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3141, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3141, file: !992, line: 461, baseType: !2102, size: 64, offset: 512)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3141, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3141, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3141, file: !992, line: 464, baseType: !2106, size: 128, offset: 640)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3141, file: !992, line: 465, baseType: !2108, size: 160, offset: 768)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3141, file: !992, line: 466, baseType: !2110, size: 160, offset: 928)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3141, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!3164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3165, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3165 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3166 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3167, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3168, splitDebugInlining: false, nameTableKind: None)
!3167 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3168 = !{!102, !103, !22, !3169}
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 32)
!3170 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !3171)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !3172)
!3172 = !{!3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3171, file: !992, line: 447, baseType: !996, size: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3171, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3171, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3171, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3171, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3171, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3171, file: !992, line: 453, baseType: !2091, size: 96, offset: 192)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3171, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3171, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3171, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3171, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3171, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3171, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3171, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3171, file: !992, line: 461, baseType: !2102, size: 64, offset: 512)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3171, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3171, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3171, file: !992, line: 464, baseType: !2106, size: 128, offset: 640)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3171, file: !992, line: 465, baseType: !2108, size: 160, offset: 768)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3171, file: !992, line: 466, baseType: !2110, size: 160, offset: 928)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3171, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!3194 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3195, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3196, splitDebugInlining: false, nameTableKind: None)
!3195 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3196 = !{!3197, !102, !103}
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 32)
!3198 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !3199)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !3200)
!3200 = !{!3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3199, file: !992, line: 447, baseType: !996, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3199, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3199, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3199, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3199, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3199, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3199, file: !992, line: 453, baseType: !2091, size: 96, offset: 192)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3199, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3199, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3199, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3199, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3199, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3199, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3199, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3199, file: !992, line: 461, baseType: !2102, size: 64, offset: 512)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3199, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3199, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3199, file: !992, line: 464, baseType: !2106, size: 128, offset: 640)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3199, file: !992, line: 465, baseType: !2108, size: 160, offset: 768)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3199, file: !992, line: 466, baseType: !2110, size: 160, offset: 928)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3199, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!3222 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3223, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3224, splitDebugInlining: false, nameTableKind: None)
!3223 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3224 = !{!3225, !111, !102, !103}
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 32)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3227, line: 98, size: 256, elements: !3228)
!3227 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3228 = !{!3229, !3234, !3239, !3244, !3249, !3254, !3259, !3264}
!3229 = !DIDerivedType(tag: DW_TAG_member, scope: !3226, file: !3227, line: 99, baseType: !3230, size: 32)
!3230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3226, file: !3227, line: 99, size: 32, elements: !3231)
!3231 = !{!3232, !3233}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3230, file: !3227, line: 99, baseType: !111, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3230, file: !3227, line: 99, baseType: !111, size: 32)
!3234 = !DIDerivedType(tag: DW_TAG_member, scope: !3226, file: !3227, line: 100, baseType: !3235, size: 32, offset: 32)
!3235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3226, file: !3227, line: 100, size: 32, elements: !3236)
!3236 = !{!3237, !3238}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3235, file: !3227, line: 100, baseType: !111, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3235, file: !3227, line: 100, baseType: !111, size: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, scope: !3226, file: !3227, line: 101, baseType: !3240, size: 32, offset: 64)
!3240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3226, file: !3227, line: 101, size: 32, elements: !3241)
!3241 = !{!3242, !3243}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3240, file: !3227, line: 101, baseType: !111, size: 32)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3240, file: !3227, line: 101, baseType: !111, size: 32)
!3244 = !DIDerivedType(tag: DW_TAG_member, scope: !3226, file: !3227, line: 102, baseType: !3245, size: 32, offset: 96)
!3245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3226, file: !3227, line: 102, size: 32, elements: !3246)
!3246 = !{!3247, !3248}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3245, file: !3227, line: 102, baseType: !111, size: 32)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3245, file: !3227, line: 102, baseType: !111, size: 32)
!3249 = !DIDerivedType(tag: DW_TAG_member, scope: !3226, file: !3227, line: 103, baseType: !3250, size: 32, offset: 128)
!3250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3226, file: !3227, line: 103, size: 32, elements: !3251)
!3251 = !{!3252, !3253}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3250, file: !3227, line: 103, baseType: !111, size: 32)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3250, file: !3227, line: 103, baseType: !111, size: 32)
!3254 = !DIDerivedType(tag: DW_TAG_member, scope: !3226, file: !3227, line: 104, baseType: !3255, size: 32, offset: 160)
!3255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3226, file: !3227, line: 104, size: 32, elements: !3256)
!3256 = !{!3257, !3258}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3255, file: !3227, line: 104, baseType: !111, size: 32)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3255, file: !3227, line: 104, baseType: !111, size: 32)
!3259 = !DIDerivedType(tag: DW_TAG_member, scope: !3226, file: !3227, line: 105, baseType: !3260, size: 32, offset: 192)
!3260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3226, file: !3227, line: 105, size: 32, elements: !3261)
!3261 = !{!3262, !3263}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3260, file: !3227, line: 105, baseType: !111, size: 32)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3260, file: !3227, line: 105, baseType: !111, size: 32)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3226, file: !3227, line: 106, baseType: !111, size: 32, offset: 224)
!3265 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3266, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3109, retainedTypes: !3267, splitDebugInlining: false, nameTableKind: None)
!3266 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3267 = !{!3268, !102, !103, !3293, !3065, !111}
!3268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3269, size: 32)
!3269 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !3270)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !3271)
!3271 = !{!3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3270, file: !992, line: 447, baseType: !996, size: 32)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3270, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3270, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3270, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3270, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3270, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3270, file: !992, line: 453, baseType: !2091, size: 96, offset: 192)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3270, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3270, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3270, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3270, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3270, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3270, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3270, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3270, file: !992, line: 461, baseType: !2102, size: 64, offset: 512)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3270, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3270, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3270, file: !992, line: 464, baseType: !2106, size: 128, offset: 640)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3270, file: !992, line: 465, baseType: !2108, size: 160, offset: 768)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3270, file: !992, line: 466, baseType: !2110, size: 160, offset: 928)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3270, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3227, line: 141, baseType: !3295)
!3295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3227, line: 97, size: 256, elements: !3296)
!3296 = !{!3297}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3295, file: !3227, line: 107, baseType: !3298, size: 256)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3227, line: 98, size: 256, elements: !3299)
!3299 = !{!3300, !3305, !3310, !3315, !3320, !3325, !3330, !3335}
!3300 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3227, line: 99, baseType: !3301, size: 32)
!3301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3227, line: 99, size: 32, elements: !3302)
!3302 = !{!3303, !3304}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3301, file: !3227, line: 99, baseType: !111, size: 32)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3301, file: !3227, line: 99, baseType: !111, size: 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3227, line: 100, baseType: !3306, size: 32, offset: 32)
!3306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3227, line: 100, size: 32, elements: !3307)
!3307 = !{!3308, !3309}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3306, file: !3227, line: 100, baseType: !111, size: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3306, file: !3227, line: 100, baseType: !111, size: 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3227, line: 101, baseType: !3311, size: 32, offset: 64)
!3311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3227, line: 101, size: 32, elements: !3312)
!3312 = !{!3313, !3314}
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3311, file: !3227, line: 101, baseType: !111, size: 32)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3311, file: !3227, line: 101, baseType: !111, size: 32)
!3315 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3227, line: 102, baseType: !3316, size: 32, offset: 96)
!3316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3227, line: 102, size: 32, elements: !3317)
!3317 = !{!3318, !3319}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3316, file: !3227, line: 102, baseType: !111, size: 32)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3316, file: !3227, line: 102, baseType: !111, size: 32)
!3320 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3227, line: 103, baseType: !3321, size: 32, offset: 128)
!3321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3227, line: 103, size: 32, elements: !3322)
!3322 = !{!3323, !3324}
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3321, file: !3227, line: 103, baseType: !111, size: 32)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3321, file: !3227, line: 103, baseType: !111, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3227, line: 104, baseType: !3326, size: 32, offset: 160)
!3326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3227, line: 104, size: 32, elements: !3327)
!3327 = !{!3328, !3329}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3326, file: !3227, line: 104, baseType: !111, size: 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3326, file: !3227, line: 104, baseType: !111, size: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3227, line: 105, baseType: !3331, size: 32, offset: 192)
!3331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3227, line: 105, size: 32, elements: !3332)
!3332 = !{!3333, !3334}
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3331, file: !3227, line: 105, baseType: !111, size: 32)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3331, file: !3227, line: 105, baseType: !111, size: 32)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3298, file: !3227, line: 106, baseType: !111, size: 32, offset: 224)
!3336 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3337, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2039, retainedTypes: !3338, splitDebugInlining: false, nameTableKind: None)
!3337 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3338 = !{!1260, !320, !166, !111, !3339, !3356}
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 32)
!3340 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !992, line: 426, baseType: !3341)
!3341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 411, size: 28704, elements: !3342)
!3342 = !{!3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3341, file: !992, line: 413, baseType: !2054, size: 256)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3341, file: !992, line: 414, baseType: !2056, size: 768, offset: 256)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3341, file: !992, line: 415, baseType: !2054, size: 256, offset: 1024)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3341, file: !992, line: 416, baseType: !2056, size: 768, offset: 1280)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3341, file: !992, line: 417, baseType: !2054, size: 256, offset: 2048)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3341, file: !992, line: 418, baseType: !2056, size: 768, offset: 2304)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3341, file: !992, line: 419, baseType: !2054, size: 256, offset: 3072)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3341, file: !992, line: 420, baseType: !2056, size: 768, offset: 3328)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3341, file: !992, line: 421, baseType: !2054, size: 256, offset: 4096)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3341, file: !992, line: 422, baseType: !2067, size: 1792, offset: 4352)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3341, file: !992, line: 423, baseType: !2071, size: 1920, offset: 6144)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3341, file: !992, line: 424, baseType: !2076, size: 20608, offset: 8064)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3341, file: !992, line: 425, baseType: !777, size: 32, offset: 28672)
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 32)
!3357 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !3358)
!3358 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !3359)
!3359 = !{!3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380}
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3358, file: !992, line: 447, baseType: !996, size: 32)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3358, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3358, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3358, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3358, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3358, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3358, file: !992, line: 453, baseType: !2091, size: 96, offset: 192)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3358, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3358, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3358, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3358, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3358, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3358, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3358, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3358, file: !992, line: 461, baseType: !2102, size: 64, offset: 512)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3358, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3358, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3358, file: !992, line: 464, baseType: !2106, size: 128, offset: 640)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3358, file: !992, line: 465, baseType: !2108, size: 160, offset: 768)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3358, file: !992, line: 466, baseType: !2110, size: 160, offset: 928)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3358, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!3381 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3382, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3383, splitDebugInlining: false, nameTableKind: None)
!3382 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3383 = !{!3384, !102, !103}
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 32)
!3385 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !3386)
!3386 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !3387)
!3387 = !{!3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3386, file: !992, line: 447, baseType: !996, size: 32)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3386, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3386, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3386, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3386, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3386, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3386, file: !992, line: 453, baseType: !2091, size: 96, offset: 192)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3386, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3386, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3386, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3386, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3386, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3386, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3386, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3386, file: !992, line: 461, baseType: !2102, size: 64, offset: 512)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3386, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3386, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3386, file: !992, line: 464, baseType: !2106, size: 128, offset: 640)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3386, file: !992, line: 465, baseType: !2108, size: 160, offset: 768)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3386, file: !992, line: 466, baseType: !2110, size: 160, offset: 928)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3386, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!3409 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3410, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3411, splitDebugInlining: false, nameTableKind: None)
!3410 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3411 = !{!110, !160, !156, !1459, !3412, !167, !102}
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 32)
!3413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!3414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3416, splitDebugInlining: false, nameTableKind: None)
!3415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3416 = !{!3417}
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 32)
!3418 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 532, baseType: !3419)
!3419 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 500, size: 1088, elements: !3420)
!3420 = !{!3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3419, file: !773, line: 502, baseType: !777, size: 32)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3419, file: !773, line: 503, baseType: !777, size: 32, offset: 32)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3419, file: !773, line: 504, baseType: !777, size: 32, offset: 64)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3419, file: !773, line: 505, baseType: !777, size: 32, offset: 96)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3419, file: !773, line: 506, baseType: !777, size: 32, offset: 128)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3419, file: !773, line: 507, baseType: !777, size: 32, offset: 160)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3419, file: !773, line: 508, baseType: !777, size: 32, offset: 192)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3419, file: !773, line: 509, baseType: !111, size: 32, offset: 224)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3419, file: !773, line: 510, baseType: !777, size: 32, offset: 256)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3419, file: !773, line: 511, baseType: !777, size: 32, offset: 288)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3419, file: !773, line: 512, baseType: !1328, size: 64, offset: 320)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3419, file: !773, line: 513, baseType: !777, size: 32, offset: 384)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3419, file: !773, line: 514, baseType: !777, size: 32, offset: 416)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3419, file: !773, line: 515, baseType: !777, size: 32, offset: 448)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3419, file: !773, line: 516, baseType: !111, size: 32, offset: 480)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3419, file: !773, line: 517, baseType: !777, size: 32, offset: 512)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3419, file: !773, line: 518, baseType: !777, size: 32, offset: 544)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3419, file: !773, line: 519, baseType: !1328, size: 64, offset: 576)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3419, file: !773, line: 520, baseType: !777, size: 32, offset: 640)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3419, file: !773, line: 521, baseType: !777, size: 32, offset: 672)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3419, file: !773, line: 522, baseType: !777, size: 32, offset: 704)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3419, file: !773, line: 523, baseType: !111, size: 32, offset: 736)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3419, file: !773, line: 524, baseType: !777, size: 32, offset: 768)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3419, file: !773, line: 525, baseType: !777, size: 32, offset: 800)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3419, file: !773, line: 526, baseType: !1328, size: 64, offset: 832)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3419, file: !773, line: 527, baseType: !777, size: 32, offset: 896)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3419, file: !773, line: 528, baseType: !777, size: 32, offset: 928)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3419, file: !773, line: 529, baseType: !1328, size: 64, offset: 960)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3419, file: !773, line: 530, baseType: !777, size: 32, offset: 1024)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3419, file: !773, line: 531, baseType: !777, size: 32, offset: 1056)
!3451 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3452, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3452 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3453 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3454, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3455, retainedTypes: !3471, splitDebugInlining: false, nameTableKind: None)
!3454 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3455 = !{!3456, !3463, !3467}
!3456 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3457, line: 38, baseType: !32, size: 32, elements: !3458)
!3457 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3458 = !{!3459, !3460, !3461, !3462}
!3459 = !DIEnumerator(name: "HAL_OK", value: 0)
!3460 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3461 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3462 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3463 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1301, line: 184, baseType: !32, size: 32, elements: !3464)
!3464 = !{!3465, !3466}
!3465 = !DIEnumerator(name: "RESET", value: 0)
!3466 = !DIEnumerator(name: "SET", value: 1)
!3467 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1301, line: 190, baseType: !32, size: 32, elements: !3468)
!3468 = !{!3469, !3470}
!3469 = !DIEnumerator(name: "DISABLE", value: 0)
!3470 = !DIEnumerator(name: "ENABLE", value: 1)
!3471 = !{!102, !3472, !166, !111, !1948, !3506, !3512, !3523, !181, !3524, !112}
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 32)
!3473 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 532, baseType: !3474)
!3474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 500, size: 1088, elements: !3475)
!3475 = !{!3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505}
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3474, file: !773, line: 502, baseType: !777, size: 32)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3474, file: !773, line: 503, baseType: !777, size: 32, offset: 32)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3474, file: !773, line: 504, baseType: !777, size: 32, offset: 64)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3474, file: !773, line: 505, baseType: !777, size: 32, offset: 96)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3474, file: !773, line: 506, baseType: !777, size: 32, offset: 128)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3474, file: !773, line: 507, baseType: !777, size: 32, offset: 160)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3474, file: !773, line: 508, baseType: !777, size: 32, offset: 192)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3474, file: !773, line: 509, baseType: !111, size: 32, offset: 224)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3474, file: !773, line: 510, baseType: !777, size: 32, offset: 256)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3474, file: !773, line: 511, baseType: !777, size: 32, offset: 288)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3474, file: !773, line: 512, baseType: !1328, size: 64, offset: 320)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3474, file: !773, line: 513, baseType: !777, size: 32, offset: 384)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3474, file: !773, line: 514, baseType: !777, size: 32, offset: 416)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3474, file: !773, line: 515, baseType: !777, size: 32, offset: 448)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3474, file: !773, line: 516, baseType: !111, size: 32, offset: 480)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3474, file: !773, line: 517, baseType: !777, size: 32, offset: 512)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3474, file: !773, line: 518, baseType: !777, size: 32, offset: 544)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3474, file: !773, line: 519, baseType: !1328, size: 64, offset: 576)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3474, file: !773, line: 520, baseType: !777, size: 32, offset: 640)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3474, file: !773, line: 521, baseType: !777, size: 32, offset: 672)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3474, file: !773, line: 522, baseType: !777, size: 32, offset: 704)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3474, file: !773, line: 523, baseType: !111, size: 32, offset: 736)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3474, file: !773, line: 524, baseType: !777, size: 32, offset: 768)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3474, file: !773, line: 525, baseType: !777, size: 32, offset: 800)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3474, file: !773, line: 526, baseType: !1328, size: 64, offset: 832)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3474, file: !773, line: 527, baseType: !777, size: 32, offset: 896)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3474, file: !773, line: 528, baseType: !777, size: 32, offset: 928)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3474, file: !773, line: 529, baseType: !1328, size: 64, offset: 960)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3474, file: !773, line: 530, baseType: !777, size: 32, offset: 1024)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3474, file: !773, line: 531, baseType: !777, size: 32, offset: 1056)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 32)
!3507 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !773, line: 494, baseType: !3508)
!3508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 490, size: 64, elements: !3509)
!3509 = !{!3510, !3511}
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3508, file: !773, line: 492, baseType: !777, size: 32)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3508, file: !773, line: 493, baseType: !777, size: 32, offset: 32)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 32)
!3513 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !773, line: 369, baseType: !3514)
!3514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 360, size: 224, elements: !3515)
!3515 = !{!3516, !3517, !3518, !3519, !3520, !3521, !3522}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3514, file: !773, line: 362, baseType: !777, size: 32)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3514, file: !773, line: 363, baseType: !777, size: 32, offset: 32)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3514, file: !773, line: 364, baseType: !777, size: 32, offset: 64)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3514, file: !773, line: 365, baseType: !777, size: 32, offset: 96)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3514, file: !773, line: 366, baseType: !777, size: 32, offset: 128)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3514, file: !773, line: 367, baseType: !777, size: 32, offset: 160)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3514, file: !773, line: 368, baseType: !777, size: 32, offset: 192)
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 32)
!3525 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !773, line: 441, baseType: !3526)
!3526 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 430, size: 320, elements: !3527)
!3527 = !{!3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536}
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3526, file: !773, line: 432, baseType: !777, size: 32)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3526, file: !773, line: 433, baseType: !777, size: 32, offset: 32)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3526, file: !773, line: 434, baseType: !777, size: 32, offset: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3526, file: !773, line: 435, baseType: !777, size: 32, offset: 96)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3526, file: !773, line: 436, baseType: !777, size: 32, offset: 128)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3526, file: !773, line: 437, baseType: !777, size: 32, offset: 160)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3526, file: !773, line: 438, baseType: !777, size: 32, offset: 192)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3526, file: !773, line: 439, baseType: !777, size: 32, offset: 224)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3526, file: !773, line: 440, baseType: !1613, size: 64, offset: 256)
!3537 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3538, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3539, retainedTypes: !3540, splitDebugInlining: false, nameTableKind: None)
!3538 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3539 = !{!1300}
!3540 = !{!3541, !111, !3549, !3555, !3566}
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 32)
!3542 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !992, line: 770, baseType: !3543)
!3543 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 764, size: 128, elements: !3544)
!3544 = !{!3545, !3546, !3547, !3548}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3543, file: !992, line: 766, baseType: !777, size: 32)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3543, file: !992, line: 767, baseType: !777, size: 32, offset: 32)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3543, file: !992, line: 768, baseType: !777, size: 32, offset: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3543, file: !992, line: 769, baseType: !996, size: 32, offset: 96)
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3550, size: 32)
!3550 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !773, line: 494, baseType: !3551)
!3551 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 490, size: 64, elements: !3552)
!3552 = !{!3553, !3554}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3551, file: !773, line: 492, baseType: !777, size: 32)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3551, file: !773, line: 493, baseType: !777, size: 32, offset: 32)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 32)
!3556 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !773, line: 369, baseType: !3557)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 360, size: 224, elements: !3558)
!3558 = !{!3559, !3560, !3561, !3562, !3563, !3564, !3565}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3557, file: !773, line: 362, baseType: !777, size: 32)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3557, file: !773, line: 363, baseType: !777, size: 32, offset: 32)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3557, file: !773, line: 364, baseType: !777, size: 32, offset: 64)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3557, file: !773, line: 365, baseType: !777, size: 32, offset: 96)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3557, file: !773, line: 366, baseType: !777, size: 32, offset: 128)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3557, file: !773, line: 367, baseType: !777, size: 32, offset: 160)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3557, file: !773, line: 368, baseType: !777, size: 32, offset: 192)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 32)
!3567 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 532, baseType: !3568)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 500, size: 1088, elements: !3569)
!3569 = !{!3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3568, file: !773, line: 502, baseType: !777, size: 32)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3568, file: !773, line: 503, baseType: !777, size: 32, offset: 32)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3568, file: !773, line: 504, baseType: !777, size: 32, offset: 64)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3568, file: !773, line: 505, baseType: !777, size: 32, offset: 96)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3568, file: !773, line: 506, baseType: !777, size: 32, offset: 128)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3568, file: !773, line: 507, baseType: !777, size: 32, offset: 160)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3568, file: !773, line: 508, baseType: !777, size: 32, offset: 192)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3568, file: !773, line: 509, baseType: !111, size: 32, offset: 224)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3568, file: !773, line: 510, baseType: !777, size: 32, offset: 256)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3568, file: !773, line: 511, baseType: !777, size: 32, offset: 288)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3568, file: !773, line: 512, baseType: !1328, size: 64, offset: 320)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3568, file: !773, line: 513, baseType: !777, size: 32, offset: 384)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3568, file: !773, line: 514, baseType: !777, size: 32, offset: 416)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3568, file: !773, line: 515, baseType: !777, size: 32, offset: 448)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3568, file: !773, line: 516, baseType: !111, size: 32, offset: 480)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3568, file: !773, line: 517, baseType: !777, size: 32, offset: 512)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3568, file: !773, line: 518, baseType: !777, size: 32, offset: 544)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3568, file: !773, line: 519, baseType: !1328, size: 64, offset: 576)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3568, file: !773, line: 520, baseType: !777, size: 32, offset: 640)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3568, file: !773, line: 521, baseType: !777, size: 32, offset: 672)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3568, file: !773, line: 522, baseType: !777, size: 32, offset: 704)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3568, file: !773, line: 523, baseType: !111, size: 32, offset: 736)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3568, file: !773, line: 524, baseType: !777, size: 32, offset: 768)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3568, file: !773, line: 525, baseType: !777, size: 32, offset: 800)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3568, file: !773, line: 526, baseType: !1328, size: 64, offset: 832)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3568, file: !773, line: 527, baseType: !777, size: 32, offset: 896)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3568, file: !773, line: 528, baseType: !777, size: 32, offset: 928)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3568, file: !773, line: 529, baseType: !1328, size: 64, offset: 960)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3568, file: !773, line: 530, baseType: !777, size: 32, offset: 1024)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3568, file: !773, line: 531, baseType: !777, size: 32, offset: 1056)
!3600 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3601, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3602, splitDebugInlining: false, nameTableKind: None)
!3601 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3602 = !{!102, !156}
!3603 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3604, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3605, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3604 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3605 = !{!3606, !3613, !3110, !30}
!3606 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3607, line: 14, baseType: !32, size: 32, elements: !3608)
!3607 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3608 = !{!3609, !3610, !3611, !3612}
!3609 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3610 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3611 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3612 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3613 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3607, line: 42, baseType: !32, size: 32, elements: !3614)
!3614 = !{!3615, !3616, !3617, !3618, !3619, !3620}
!3615 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3616 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3617 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3618 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3619 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3620 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3622, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3622 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3623 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3624, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3625, splitDebugInlining: false, nameTableKind: None)
!3624 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3625 = !{!102, !103, !3626, !3641}
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 32)
!3627 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !3628)
!3628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !3629)
!3629 = !{!3630, !3636}
!3630 = !DIDerivedType(tag: DW_TAG_member, scope: !3628, file: !136, line: 38, baseType: !3631, size: 32)
!3631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3628, file: !136, line: 38, size: 32, elements: !3632)
!3632 = !{!3633, !3635}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3631, file: !136, line: 39, baseType: !3634, size: 32)
!3634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3628, size: 32)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3631, file: !136, line: 40, baseType: !3634, size: 32)
!3636 = !DIDerivedType(tag: DW_TAG_member, scope: !3628, file: !136, line: 42, baseType: !3637, size: 32, offset: 32)
!3637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3628, file: !136, line: 42, size: 32, elements: !3638)
!3638 = !{!3639, !3640}
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3637, file: !136, line: 43, baseType: !3634, size: 32)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3637, file: !136, line: 44, baseType: !3634, size: 32)
!3641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3642, size: 32)
!3642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !3643)
!3643 = !{!3644, !3688, !3700, !3701, !3702, !3703, !3709, !3724}
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3642, file: !199, line: 247, baseType: !3645, size: 384)
!3645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !3646)
!3646 = !{!3647, !3657, !3664, !3665, !3666, !3675, !3676, !3677}
!3647 = !DIDerivedType(tag: DW_TAG_member, scope: !3645, file: !199, line: 60, baseType: !3648, size: 64)
!3648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3645, file: !199, line: 60, size: 64, elements: !3649)
!3649 = !{!3650, !3651}
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3648, file: !199, line: 61, baseType: !3627, size: 64)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3648, file: !199, line: 62, baseType: !3652, size: 64)
!3652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !3653)
!3653 = !{!3654}
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3652, file: !211, line: 50, baseType: !3655, size: 64)
!3655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3656, size: 64, elements: !216)
!3656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3652, size: 32)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3645, file: !199, line: 68, baseType: !3658, size: 32, offset: 64)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 32)
!3659 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !3660)
!3660 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !3661)
!3661 = !{!3662}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3660, file: !131, line: 232, baseType: !3663, size: 64)
!3663 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !3628)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3645, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3645, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!3666 = !DIDerivedType(tag: DW_TAG_member, scope: !3645, file: !199, line: 90, baseType: !3667, size: 16, offset: 112)
!3667 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3645, file: !199, line: 90, size: 16, elements: !3668)
!3668 = !{!3669, !3674}
!3669 = !DIDerivedType(tag: DW_TAG_member, scope: !3667, file: !199, line: 91, baseType: !3670, size: 16)
!3670 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3667, file: !199, line: 91, size: 16, elements: !3671)
!3671 = !{!3672, !3673}
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3670, file: !199, line: 96, baseType: !229, size: 8)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3670, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3667, file: !199, line: 100, baseType: !181, size: 16)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3645, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3645, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3645, file: !199, line: 131, baseType: !3678, size: 192, offset: 192)
!3678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !3679)
!3679 = !{!3680, !3681, !3687}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3678, file: !131, line: 245, baseType: !3627, size: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3678, file: !131, line: 246, baseType: !3682, size: 32, offset: 64)
!3682 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !3683)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 32)
!3684 = !DISubroutineType(types: !3685)
!3685 = !{null, !3686}
!3686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 32)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3678, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3642, file: !199, line: 250, baseType: !3689, size: 288, offset: 384)
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !3690)
!3690 = !{!3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3689, file: !248, line: 26, baseType: !111, size: 32)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3689, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3689, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3689, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3689, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3689, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3689, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3689, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3689, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3642, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3642, file: !199, line: 256, baseType: !3659, size: 64, offset: 704)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3642, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3642, file: !199, line: 300, baseType: !3704, size: 96, offset: 800)
!3704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !3705)
!3705 = !{!3706, !3707, !3708}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3704, file: !199, line: 153, baseType: !22, size: 32)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3704, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3704, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3642, file: !199, line: 325, baseType: !3710, size: 32, offset: 896)
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 32)
!3711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !3712)
!3712 = !{!3713, !3719, !3720}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3711, file: !127, line: 5074, baseType: !3714, size: 96)
!3714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !3715)
!3715 = !{!3716, !3717, !3718}
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3714, file: !274, line: 57, baseType: !277, size: 32)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3714, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3714, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3711, file: !127, line: 5075, baseType: !3659, size: 64, offset: 96)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3711, file: !127, line: 5076, baseType: !3721, size: 32, offset: 160)
!3721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !3722)
!3722 = !{!3723}
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3721, file: !152, line: 52, baseType: !22, size: 32)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3642, file: !199, line: 343, baseType: !3725, size: 64, offset: 928)
!3725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !3726)
!3726 = !{!3727, !3728}
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3725, file: !248, line: 63, baseType: !111, size: 32)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3725, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!3729 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3730, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3731, splitDebugInlining: false, nameTableKind: None)
!3730 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3731 = !{!22, !102, !103}
!3732 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3733, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3733 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!3734 = !{!"Ubuntu clang version 14.0.6"}
!3735 = !{i32 7, !"Dwarf Version", i32 4}
!3736 = !{i32 2, !"Debug Info Version", i32 3}
!3737 = !{i32 1, !"wchar_size", i32 4}
!3738 = !{i32 1, !"min_enum_size", i32 4}
!3739 = !{i32 1, !"branch-target-enforcement", i32 0}
!3740 = !{i32 1, !"sign-return-address", i32 0}
!3741 = !{i32 1, !"sign-return-address-all", i32 0}
!3742 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3743 = !{i32 7, !"frame-pointer", i32 2}
!3744 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3745, file: !3745, line: 26, type: !323, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !2501)
!3745 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3746 = !DILocation(line: 28, column: 1, scope: !3744)
!3747 = !{i64 2155128899, i64 2155128919, i64 2155128982}
!3748 = !DILocation(line: 29, column: 1, scope: !3744)
!3749 = !{i64 2155129314, i64 2155129334, i64 2155129397}
!3750 = !DILocation(line: 30, column: 1, scope: !3744)
!3751 = !{i64 2155129733, i64 2155129753, i64 2155129816}
!3752 = !DILocation(line: 31, column: 1, scope: !3744)
!3753 = !{i64 2155130152, i64 2155130172, i64 2155130235}
!3754 = !DILocation(line: 33, column: 1, scope: !3744)
!3755 = !{i64 2155130444, i64 2155130464, i64 2155130527}
!3756 = !DILocation(line: 35, column: 1, scope: !3744)
!3757 = !{i64 2155130769, i64 2155130789, i64 2155130852}
!3758 = !DILocation(line: 50, column: 1, scope: !3744)
!3759 = !{i64 2155131196, i64 2155131216, i64 2155131279}
!3760 = !DILocation(line: 54, column: 1, scope: !3744)
!3761 = !{i64 2155131635, i64 2155131655, i64 2155131718}
!3762 = !DILocation(line: 61, column: 1, scope: !3744)
!3763 = !{i64 2155131952, i64 2155131972, i64 2155132035}
!3764 = !DILocation(line: 63, column: 1, scope: !3744)
!3765 = !{i64 2155132332, i64 2155132352, i64 2155132415}
!3766 = !DILocation(line: 64, column: 1, scope: !3744)
!3767 = !{i64 2155132854, i64 2155132874, i64 2155132937}
!3768 = !DILocation(line: 65, column: 1, scope: !3744)
!3769 = !{i64 2155133352, i64 2155133372, i64 2155133435}
!3770 = !DILocation(line: 66, column: 1, scope: !3744)
!3771 = !{i64 2155133834, i64 2155133854, i64 2155133917}
!3772 = !DILocation(line: 67, column: 1, scope: !3744)
!3773 = !{i64 2155134341, i64 2155134361, i64 2155134424}
!3774 = !DILocation(line: 68, column: 1, scope: !3744)
!3775 = !{i64 2155134829, i64 2155134849, i64 2155134912}
!3776 = !DILocation(line: 70, column: 1, scope: !3744)
!3777 = !{i64 2155139358, i64 2155139378, i64 2155139441}
!3778 = !DILocation(line: 71, column: 1, scope: !3744)
!3779 = !{i64 2155139800, i64 2155139820, i64 2155139883}
!3780 = !DILocation(line: 72, column: 1, scope: !3744)
!3781 = !{i64 2155140258, i64 2155140278, i64 2155140341}
!3782 = !DILocation(line: 79, column: 1, scope: !3744)
!3783 = !{i64 2155140712, i64 2155140732, i64 2155140795}
!3784 = !DILocation(line: 80, column: 1, scope: !3744)
!3785 = !{i64 2155141223, i64 2155141243, i64 2155141306}
!3786 = !DILocation(line: 82, column: 1, scope: !3744)
!3787 = !{i64 2155141714, i64 2155141734, i64 2155141797}
!3788 = !DILocation(line: 97, column: 1, scope: !3744)
!3789 = !{i64 2155142051, i64 2155142071, i64 2155142134}
!3790 = !DILocation(line: 99, column: 1, scope: !3744)
!3791 = !{i64 2155142269, i64 2155142289, i64 2155142352}
!3792 = !DILocation(line: 102, column: 1, scope: !3744)
!3793 = !{i64 2155142526, i64 2155142546, i64 2155142609}
!3794 = !DILocation(line: 105, column: 1, scope: !3744)
!3795 = !{i64 2155142766, i64 2155142786, i64 2155142849}
!3796 = !DILocation(line: 115, column: 1, scope: !3744)
!3797 = !{i64 2155143105, i64 2155143125, i64 2155143188}
!3798 = !DILocation(line: 118, column: 1, scope: !3744)
!3799 = !{i64 2155143449, i64 2155143469, i64 2155143532}
!3800 = !DILocation(line: 32, column: 1, scope: !3801)
!3801 = !DILexicalBlockFile(scope: !3744, file: !3802, discriminator: 0)
!3802 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3803 = !{i64 2155143805, i64 2155143825, i64 2155143888}
!3804 = !DILocation(line: 33, column: 1, scope: !3801)
!3805 = !{i64 2155144317, i64 2155144337, i64 2155144400}
!3806 = !DILocation(line: 53, column: 1, scope: !3801)
!3807 = !{i64 2155144825, i64 2155144845, i64 2155144908}
!3808 = !DILocation(line: 54, column: 1, scope: !3801)
!3809 = !{i64 2155145243, i64 2155145263, i64 2155145326}
!3810 = !DILocation(line: 55, column: 1, scope: !3801)
!3811 = !{i64 2155145661, i64 2155145681, i64 2155145744}
!3812 = !DILocation(line: 56, column: 1, scope: !3801)
!3813 = !{i64 2155146079, i64 2155146099, i64 2155146162}
!3814 = !DILocation(line: 57, column: 1, scope: !3801)
!3815 = !{i64 2155146497, i64 2155146517, i64 2155146580}
!3816 = !DILocation(line: 58, column: 1, scope: !3801)
!3817 = !{i64 2155146915, i64 2155146935, i64 2155146998}
!3818 = !DILocation(line: 59, column: 1, scope: !3801)
!3819 = !{i64 2155147333, i64 2155147353, i64 2155147416}
!3820 = !DILocation(line: 60, column: 1, scope: !3801)
!3821 = !{i64 2155147757, i64 2155147777, i64 2155147840}
!3822 = !DILocation(line: 61, column: 1, scope: !3801)
!3823 = !{i64 2155148074, i64 2155148094, i64 2155148157}
!3824 = !DILocation(line: 70, column: 1, scope: !3801)
!3825 = !{i64 2155148303, i64 2155148323, i64 2155148386}
!3826 = !DILocation(line: 72, column: 1, scope: !3801)
!3827 = !{i64 2155148635, i64 2155148655, i64 2155148718}
!3828 = !DILocation(line: 73, column: 1, scope: !3801)
!3829 = !{i64 2155153146, i64 2155153166, i64 2155153229}
!3830 = !DILocation(line: 74, column: 1, scope: !3801)
!3831 = !{i64 2155153596, i64 2155153616, i64 2155153679}
!3832 = !DILocation(line: 75, column: 1, scope: !3801)
!3833 = !{i64 2155154046, i64 2155154066, i64 2155154129}
!3834 = !DILocation(line: 76, column: 1, scope: !3801)
!3835 = !{i64 2155154496, i64 2155154516, i64 2155154579}
!3836 = !DILocation(line: 77, column: 1, scope: !3801)
!3837 = !{i64 2155154946, i64 2155154966, i64 2155155029}
!3838 = !DILocation(line: 78, column: 1, scope: !3801)
!3839 = !{i64 2155155396, i64 2155155416, i64 2155155479}
!3840 = !DILocation(line: 79, column: 1, scope: !3801)
!3841 = !{i64 2155155846, i64 2155155866, i64 2155155929}
!3842 = !DILocation(line: 80, column: 1, scope: !3801)
!3843 = !{i64 2155156299, i64 2155156319, i64 2155156382}
!3844 = !DILocation(line: 84, column: 1, scope: !3801)
!3845 = !{i64 2155156631, i64 2155156651, i64 2155156714}
!3846 = !DILocation(line: 91, column: 1, scope: !3801)
!3847 = !{i64 2155157028, i64 2155157048, i64 2155157111}
!3848 = !DILocation(line: 93, column: 1, scope: !3801)
!3849 = !{i64 2155157395, i64 2155157415, i64 2155157478}
!3850 = !DILocation(line: 106, column: 1, scope: !3801)
!3851 = !{i64 2155157665, i64 2155157685, i64 2155157748}
!3852 = !DILocation(line: 11, column: 1, scope: !3853)
!3853 = !DILexicalBlockFile(scope: !3744, file: !3854, discriminator: 0)
!3854 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3855 = distinct !DISubprogram(name: "consumer_thread", scope: !117, file: !117, line: 15, type: !323, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3856)
!3856 = !{!3857, !3863, !3864, !3869, !3870, !3871}
!3857 = !DILocalVariable(name: "dyn_alloc_msg", scope: !3855, file: !117, line: 17, type: !3858)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 32)
!3859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !515, line: 16, size: 64, elements: !3860)
!3860 = !{!3861, !3862}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !3859, file: !515, line: 17, baseType: !102, size: 32)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3859, file: !515, line: 18, baseType: !156, size: 32, offset: 32)
!3863 = !DILocalVariable(name: "chan", scope: !3855, file: !117, line: 18, type: !173)
!3864 = !DILocalVariable(name: "_str", scope: !3865, file: !117, line: 29, type: !108)
!3865 = distinct !DILexicalBlock(scope: !3866, file: !117, line: 29, column: 4)
!3866 = distinct !DILexicalBlock(scope: !3867, file: !117, line: 25, column: 49)
!3867 = distinct !DILexicalBlock(scope: !3868, file: !117, line: 25, column: 7)
!3868 = distinct !DILexicalBlock(scope: !3855, file: !117, line: 20, column: 58)
!3869 = !DILocalVariable(name: "is_user_context", scope: !3865, file: !117, line: 29, type: !122)
!3870 = !DILocalVariable(name: "filters", scope: !3865, file: !117, line: 29, type: !111)
!3871 = !DILocalVariable(name: "a", scope: !3868, file: !117, line: 38, type: !3872)
!3872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ack_msg", file: !515, line: 21, size: 8, elements: !3873)
!3873 = !{!3874}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3872, file: !515, line: 22, baseType: !166, size: 8)
!3875 = !DILocation(line: 18, column: 2, scope: !3855)
!3876 = !DILocation(line: 0, scope: !3855)
!3877 = !DILocation(line: 20, column: 10, scope: !3855)
!3878 = !DILocation(line: 20, column: 9, scope: !3855)
!3879 = !DILocation(line: 20, column: 2, scope: !3855)
!3880 = !DILocation(line: 23, column: 3, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !117, line: 23, column: 3)
!3882 = distinct !DILexicalBlock(scope: !3868, file: !117, line: 23, column: 3)
!3883 = !DILocation(line: 23, column: 3, scope: !3882)
!3884 = !DILocation(line: 23, column: 3, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3881, file: !117, line: 23, column: 3)
!3886 = !DILocation(line: 25, column: 35, scope: !3867)
!3887 = !DILocation(line: 25, column: 8, scope: !3867)
!3888 = !DILocation(line: 25, column: 7, scope: !3868)
!3889 = !DILocation(line: 26, column: 20, scope: !3866)
!3890 = !DILocation(line: 28, column: 4, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !117, line: 28, column: 4)
!3892 = distinct !DILexicalBlock(scope: !3893, file: !117, line: 28, column: 4)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !117, line: 28, column: 4)
!3894 = distinct !DILexicalBlock(scope: !3866, file: !117, line: 28, column: 4)
!3895 = !DILocation(line: 0, scope: !3865)
!3896 = !DILocation(line: 29, column: 4, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3898, file: !117, line: 29, column: 4)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !117, line: 29, column: 4)
!3899 = distinct !DILexicalBlock(scope: !3865, file: !117, line: 29, column: 4)
!3900 = !DILocation(line: 29, column: 4, scope: !3898)
!3901 = !DILocation(line: 32, column: 26, scope: !3866)
!3902 = !DILocation(line: 32, column: 4, scope: !3866)
!3903 = !DILocation(line: 33, column: 29, scope: !3866)
!3904 = !DILocation(line: 34, column: 24, scope: !3866)
!3905 = !DILocation(line: 36, column: 4, scope: !3866)
!3906 = !DILocation(line: 37, column: 3, scope: !3866)
!3907 = !DILocation(line: 38, column: 3, scope: !3868)
!3908 = !DILocation(line: 38, column: 18, scope: !3868)
!3909 = !DILocation(line: 40, column: 27, scope: !3868)
!3910 = !DILocation(line: 40, column: 3, scope: !3868)
!3911 = !DILocation(line: 41, column: 2, scope: !3855)
!3912 = distinct !{!3912, !3879, !3911}
!3913 = !DILocation(line: 42, column: 1, scope: !3855)
!3914 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3915, file: !3915, line: 403, type: !3916, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3918)
!3915 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3916 = !DISubroutineType(types: !3917)
!3917 = !{!112, !112}
!3918 = !{!3919}
!3919 = !DILocalVariable(name: "t", arg: 1, scope: !3914, file: !3915, line: 403, type: !112)
!3920 = !DILocation(line: 0, scope: !3914)
!3921 = !DILocalVariable(name: "t", arg: 1, scope: !3922, file: !3915, line: 102, type: !112)
!3922 = distinct !DISubprogram(name: "z_tmcvt", scope: !3915, file: !3915, line: 102, type: !3923, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3925)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{!112, !112, !111, !111, !122, !122, !122, !122}
!3925 = !{!3921, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935}
!3926 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3922, file: !3915, line: 102, type: !111)
!3927 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3922, file: !3915, line: 103, type: !111)
!3928 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3922, file: !3915, line: 103, type: !122)
!3929 = !DILocalVariable(name: "result32", arg: 5, scope: !3922, file: !3915, line: 104, type: !122)
!3930 = !DILocalVariable(name: "round_up", arg: 6, scope: !3922, file: !3915, line: 104, type: !122)
!3931 = !DILocalVariable(name: "round_off", arg: 7, scope: !3922, file: !3915, line: 105, type: !122)
!3932 = !DILocalVariable(name: "mul_ratio", scope: !3922, file: !3915, line: 107, type: !122)
!3933 = !DILocalVariable(name: "div_ratio", scope: !3922, file: !3915, line: 109, type: !122)
!3934 = !DILocalVariable(name: "off", scope: !3922, file: !3915, line: 116, type: !112)
!3935 = !DILocalVariable(name: "rdivisor", scope: !3936, file: !3915, line: 119, type: !111)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !3915, line: 118, column: 18)
!3937 = distinct !DILexicalBlock(scope: !3922, file: !3915, line: 118, column: 6)
!3938 = !DILocation(line: 0, scope: !3922, inlinedAt: !3939)
!3939 = distinct !DILocation(line: 406, column: 9, scope: !3914)
!3940 = !DILocation(line: 145, column: 13, scope: !3941, inlinedAt: !3939)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !3915, line: 144, column: 10)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !3915, line: 142, column: 7)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !3915, line: 141, column: 24)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !3915, line: 141, column: 13)
!3945 = distinct !DILexicalBlock(scope: !3922, file: !3915, line: 134, column: 6)
!3946 = !DILocation(line: 406, column: 2, scope: !3914)
!3947 = distinct !DISubprogram(name: "zbus_chan_msg", scope: !119, file: !119, line: 395, type: !3948, scopeLine: 396, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3950)
!3948 = !DISubroutineType(types: !3949)
!3949 = !{!102, !173}
!3950 = !{!3951}
!3951 = !DILocalVariable(name: "chan", arg: 1, scope: !3947, file: !119, line: 395, type: !173)
!3952 = !DILocation(line: 0, scope: !3947)
!3953 = !DILocation(line: 399, column: 15, scope: !3947)
!3954 = !DILocation(line: 399, column: 2, scope: !3947)
!3955 = distinct !DISubprogram(name: "filter_cb", scope: !350, file: !350, line: 51, type: !495, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !3956)
!3956 = !{!3957, !3958, !3961}
!3957 = !DILocalVariable(name: "chan", arg: 1, scope: !3955, file: !350, line: 51, type: !497)
!3958 = !DILocalVariable(name: "chan_message", scope: !3955, file: !350, line: 58, type: !3959)
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 32)
!3960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!3961 = !DILocalVariable(name: "dr", scope: !3955, file: !350, line: 68, type: !536)
!3962 = !DILocation(line: 0, scope: !3955)
!3963 = !DILocation(line: 60, column: 2, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !350, line: 60, column: 2)
!3965 = distinct !DILexicalBlock(scope: !3955, file: !350, line: 60, column: 2)
!3966 = !DILocation(line: 60, column: 2, scope: !3965)
!3967 = !DILocation(line: 60, column: 2, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3964, file: !350, line: 60, column: 2)
!3969 = !DILocation(line: 62, column: 17, scope: !3955)
!3970 = !DILocation(line: 64, column: 20, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3955, file: !350, line: 64, column: 6)
!3972 = !DILocation(line: 64, column: 25, scope: !3971)
!3973 = !DILocation(line: 64, column: 6, scope: !3955)
!3974 = !DILocation(line: 65, column: 24, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3971, file: !350, line: 64, column: 30)
!3976 = !DILocation(line: 65, column: 3, scope: !3975)
!3977 = !DILocation(line: 66, column: 2, scope: !3975)
!3978 = !DILocation(line: 68, column: 2, scope: !3955)
!3979 = !DILocation(line: 68, column: 17, scope: !3955)
!3980 = !DILocation(line: 70, column: 2, scope: !3955)
!3981 = !DILocation(line: 71, column: 1, scope: !3955)
!3982 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !119, file: !119, line: 416, type: !3983, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !3985)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{!13, !497}
!3985 = !{!3986}
!3986 = !DILocalVariable(name: "chan", arg: 1, scope: !3982, file: !119, line: 416, type: !497)
!3987 = !DILocation(line: 0, scope: !3982)
!3988 = !DILocation(line: 418, column: 2, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !119, line: 418, column: 2)
!3990 = distinct !DILexicalBlock(scope: !3982, file: !119, line: 418, column: 2)
!3991 = !DILocation(line: 418, column: 2, scope: !3990)
!3992 = !DILocation(line: 418, column: 2, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3989, file: !119, line: 418, column: 2)
!3994 = !DILocation(line: 420, column: 15, scope: !3982)
!3995 = !DILocation(line: 420, column: 2, scope: !3982)
!3996 = distinct !DISubprogram(name: "main", scope: !350, file: !350, line: 75, type: !323, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !3997)
!3997 = !{!3998}
!3998 = !DILocalVariable(name: "v", scope: !3996, file: !350, line: 77, type: !3999)
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 32)
!4000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!4001 = !DILocation(line: 77, column: 32, scope: !3996)
!4002 = !DILocation(line: 0, scope: !3996)
!4003 = !DILocation(line: 80, column: 1, scope: !3996)
!4004 = distinct !DISubprogram(name: "producer_thread", scope: !554, file: !554, line: 15, type: !323, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !4005)
!4005 = !{!4006, !4007, !4008, !4010, !4017}
!4006 = !DILocalVariable(name: "chan", scope: !4004, file: !554, line: 17, type: !599)
!4007 = !DILocalVariable(name: "msg", scope: !4004, file: !554, line: 18, type: !102)
!4008 = !DILocalVariable(name: "i", scope: !4009, file: !554, line: 20, type: !166)
!4009 = distinct !DILexicalBlock(scope: !4004, file: !554, line: 20, column: 2)
!4010 = !DILocalVariable(name: "dyn_alloc_msg", scope: !4011, file: !554, line: 25, type: !4013)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !554, line: 20, column: 37)
!4012 = distinct !DILexicalBlock(scope: !4009, file: !554, line: 20, column: 2)
!4013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !515, line: 16, size: 64, elements: !4014)
!4014 = !{!4015, !4016}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !4013, file: !515, line: 17, baseType: !102, size: 32)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4013, file: !515, line: 18, baseType: !156, size: 32, offset: 32)
!4017 = !DILocalVariable(name: "j", scope: !4018, file: !554, line: 27, type: !103)
!4018 = distinct !DILexicalBlock(scope: !4011, file: !554, line: 27, column: 3)
!4019 = !DILocation(line: 17, column: 2, scope: !4004)
!4020 = !DILocation(line: 0, scope: !4009)
!4021 = !DILocation(line: 20, column: 2, scope: !4009)
!4022 = !DILocation(line: 38, column: 1, scope: !4004)
!4023 = !DILocation(line: 21, column: 20, scope: !4011)
!4024 = !DILocation(line: 21, column: 9, scope: !4011)
!4025 = !DILocation(line: 0, scope: !4004)
!4026 = !DILocation(line: 23, column: 3, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4028, file: !554, line: 23, column: 3)
!4028 = distinct !DILexicalBlock(scope: !4011, file: !554, line: 23, column: 3)
!4029 = !DILocation(line: 23, column: 3, scope: !4028)
!4030 = !DILocation(line: 23, column: 3, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4027, file: !554, line: 23, column: 3)
!4032 = !DILocation(line: 25, column: 3, scope: !4011)
!4033 = !DILocation(line: 25, column: 28, scope: !4011)
!4034 = !DILocation(line: 25, column: 44, scope: !4011)
!4035 = !DILocation(line: 0, scope: !4018)
!4036 = !DILocation(line: 28, column: 44, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !554, line: 27, column: 48)
!4038 = distinct !DILexicalBlock(scope: !4018, file: !554, line: 27, column: 3)
!4039 = !DILocation(line: 27, column: 37, scope: !4038)
!4040 = !DILocation(line: 27, column: 21, scope: !4038)
!4041 = !DILocation(line: 27, column: 3, scope: !4018)
!4042 = distinct !{!4042, !4041, !4043}
!4043 = !DILocation(line: 29, column: 3, scope: !4018)
!4044 = !DILocation(line: 31, column: 3, scope: !4011)
!4045 = !DILocation(line: 34, column: 7, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4011, file: !554, line: 34, column: 7)
!4047 = !DILocation(line: 34, column: 7, scope: !4011)
!4048 = !DILocation(line: 28, column: 30, scope: !4037)
!4049 = !DILocation(line: 28, column: 4, scope: !4037)
!4050 = !DILocation(line: 27, column: 43, scope: !4038)
!4051 = !DILocation(line: 35, column: 4, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4053, file: !554, line: 35, column: 4)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !554, line: 35, column: 4)
!4054 = distinct !DILexicalBlock(scope: !4055, file: !554, line: 35, column: 4)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !554, line: 35, column: 4)
!4056 = distinct !DILexicalBlock(scope: !4046, file: !554, line: 34, column: 55)
!4057 = !DILocation(line: 36, column: 3, scope: !4056)
!4058 = !DILocation(line: 37, column: 2, scope: !4012)
!4059 = !DILocation(line: 20, column: 25, scope: !4012)
!4060 = distinct !{!4060, !4021, !4061}
!4061 = !DILocation(line: 37, column: 2, scope: !4009)
!4062 = distinct !DISubprogram(name: "cbvprintf_package", scope: !750, file: !750, line: 233, type: !4063, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4072)
!4063 = !DISubroutineType(types: !4064)
!4064 = !{!103, !102, !156, !111, !108, !4065}
!4065 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4066, line: 99, baseType: !4067)
!4066 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4067 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4066, line: 40, baseType: !4068)
!4068 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !750, baseType: !4069)
!4069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4070)
!4070 = !{!4071}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4069, file: !750, line: 18, baseType: !102, size: 32)
!4072 = !{!4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4108, !4117, !4120, !4121, !4124, !4127, !4130, !4133, !4139}
!4073 = !DILocalVariable(name: "packaged", arg: 1, scope: !4062, file: !750, line: 233, type: !102)
!4074 = !DILocalVariable(name: "len", arg: 2, scope: !4062, file: !750, line: 233, type: !156)
!4075 = !DILocalVariable(name: "flags", arg: 3, scope: !4062, file: !750, line: 233, type: !111)
!4076 = !DILocalVariable(name: "fmt", arg: 4, scope: !4062, file: !750, line: 234, type: !108)
!4077 = !DILocalVariable(name: "ap", arg: 5, scope: !4062, file: !750, line: 234, type: !4065)
!4078 = !DILocalVariable(name: "buf0", scope: !4062, file: !750, line: 247, type: !550)
!4079 = !DILocalVariable(name: "buf", scope: !4062, file: !750, line: 248, type: !550)
!4080 = !DILocalVariable(name: "size", scope: !4062, file: !750, line: 249, type: !32)
!4081 = !DILocalVariable(name: "align", scope: !4062, file: !750, line: 250, type: !32)
!4082 = !DILocalVariable(name: "str_ptr_pos", scope: !4062, file: !750, line: 251, type: !4083)
!4083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 128, elements: !333)
!4084 = !DILocalVariable(name: "str_ptr_arg", scope: !4062, file: !750, line: 252, type: !4083)
!4085 = !DILocalVariable(name: "s_idx", scope: !4062, file: !750, line: 253, type: !32)
!4086 = !DILocalVariable(name: "s_rw_cnt", scope: !4062, file: !750, line: 254, type: !32)
!4087 = !DILocalVariable(name: "s_ro_cnt", scope: !4062, file: !750, line: 255, type: !32)
!4088 = !DILocalVariable(name: "arg_idx", scope: !4062, file: !750, line: 256, type: !103)
!4089 = !DILocalVariable(name: "i", scope: !4062, file: !750, line: 257, type: !32)
!4090 = !DILocalVariable(name: "s", scope: !4062, file: !750, line: 258, type: !108)
!4091 = !DILocalVariable(name: "parsing", scope: !4062, file: !750, line: 259, type: !122)
!4092 = !DILocalVariable(name: "rws_pos_en", scope: !4062, file: !750, line: 263, type: !122)
!4093 = !DILocalVariable(name: "fros_cnt", scope: !4062, file: !750, line: 268, type: !103)
!4094 = !DILocalVariable(name: "is_str_arg", scope: !4062, file: !750, line: 269, type: !122)
!4095 = !DILocalVariable(name: "pkg_hdr", scope: !4062, file: !750, line: 270, type: !4096)
!4096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4097, size: 32)
!4097 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4098, line: 78, size: 32, elements: !4099)
!4098 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4099 = !{!4100, !4107}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4097, file: !4098, line: 80, baseType: !4101, size: 32)
!4101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4098, line: 45, size: 32, elements: !4102)
!4102 = !{!4103, !4104, !4105, !4106}
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4101, file: !4098, line: 47, baseType: !166, size: 8)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4101, file: !4098, line: 50, baseType: !166, size: 8, offset: 8)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4101, file: !4098, line: 53, baseType: !166, size: 8, offset: 16)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4101, file: !4098, line: 56, baseType: !166, size: 8, offset: 24)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4097, file: !4098, line: 82, baseType: !102, size: 32)
!4108 = !DILocalVariable(name: "v", scope: !4109, file: !750, line: 567, type: !4113)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !750, line: 562, column: 14)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !750, line: 481, column: 18)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !750, line: 466, column: 3)
!4112 = distinct !DILexicalBlock(scope: !4062, file: !750, line: 343, column: 15)
!4113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4062, file: !750, line: 567, size: 64, elements: !4114)
!4114 = !{!4115, !4116}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4113, file: !750, line: 567, baseType: !742, size: 64)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4113, file: !750, line: 567, baseType: !740, size: 64)
!4117 = !DILocalVariable(name: "is_ro", scope: !4118, file: !750, line: 620, type: !122)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !750, line: 613, column: 19)
!4119 = distinct !DILexicalBlock(scope: !4112, file: !750, line: 613, column: 7)
!4120 = !DILocalVariable(name: "do_ro", scope: !4118, file: !750, line: 621, type: !122)
!4121 = !DILocalVariable(name: "s_ptr_idx", scope: !4122, file: !750, line: 626, type: !111)
!4122 = distinct !DILexicalBlock(scope: !4123, file: !750, line: 625, column: 11)
!4123 = distinct !DILexicalBlock(scope: !4118, file: !750, line: 623, column: 8)
!4124 = !DILocalVariable(name: "v", scope: !4125, file: !750, line: 684, type: !103)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !750, line: 683, column: 35)
!4126 = distinct !DILexicalBlock(scope: !4119, file: !750, line: 683, column: 14)
!4127 = !DILocalVariable(name: "v", scope: !4128, file: !750, line: 691, type: !746)
!4128 = distinct !DILexicalBlock(scope: !4129, file: !750, line: 690, column: 36)
!4129 = distinct !DILexicalBlock(scope: !4126, file: !750, line: 690, column: 14)
!4130 = !DILocalVariable(name: "v", scope: !4131, file: !750, line: 698, type: !107)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !750, line: 697, column: 41)
!4132 = distinct !DILexicalBlock(scope: !4129, file: !750, line: 697, column: 14)
!4133 = !DILocalVariable(name: "pos", scope: !4134, file: !750, line: 762, type: !166)
!4134 = distinct !DILexicalBlock(scope: !4135, file: !750, line: 757, column: 31)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !750, line: 757, column: 3)
!4136 = distinct !DILexicalBlock(scope: !4137, file: !750, line: 757, column: 3)
!4137 = distinct !DILexicalBlock(scope: !4138, file: !750, line: 756, column: 16)
!4138 = distinct !DILexicalBlock(scope: !4062, file: !750, line: 756, column: 6)
!4139 = !DILabel(scope: !4118, name: "process_string", file: !750, line: 615)
!4140 = !DILocation(line: 0, scope: !4062)
!4141 = !DILocation(line: 251, column: 2, scope: !4062)
!4142 = !DILocation(line: 251, column: 10, scope: !4062)
!4143 = !DILocation(line: 252, column: 2, scope: !4062)
!4144 = !DILocation(line: 252, column: 10, scope: !4062)
!4145 = !DILocation(line: 263, column: 29, scope: !4062)
!4146 = !DILocation(line: 263, column: 21, scope: !4062)
!4147 = !DILocation(line: 268, column: 21, scope: !4062)
!4148 = !DILocation(line: 268, column: 19, scope: !4062)
!4149 = !DILocation(line: 273, column: 6, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4062, file: !750, line: 273, column: 6)
!4151 = !DILocation(line: 273, column: 26, scope: !4150)
!4152 = !DILocation(line: 273, column: 6, scope: !4062)
!4153 = !DILocation(line: 297, column: 6, scope: !4062)
!4154 = !DILocation(line: 305, column: 11, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4062, file: !750, line: 305, column: 6)
!4156 = !DILocation(line: 305, column: 6, scope: !4062)
!4157 = !DILocation(line: 327, column: 19, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4062, file: !750, line: 327, column: 6)
!4159 = !DILocation(line: 327, column: 22, scope: !4158)
!4160 = !DILocation(line: 327, column: 33, scope: !4158)
!4161 = !DILocation(line: 327, column: 50, scope: !4158)
!4162 = !DILocation(line: 327, column: 6, scope: !4062)
!4163 = !DILocation(line: 338, column: 9, scope: !4062)
!4164 = !DILocation(line: 341, column: 2, scope: !4062)
!4165 = !DILocation(line: 472, column: 8, scope: !4111)
!4166 = !DILocation(line: 473, column: 14, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !750, line: 473, column: 9)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !750, line: 472, column: 18)
!4169 = distinct !DILexicalBlock(scope: !4111, file: !750, line: 472, column: 8)
!4170 = !DILocation(line: 473, column: 9, scope: !4168)
!4171 = !DILocation(line: 479, column: 5, scope: !4168)
!4172 = !DILocation(line: 468, column: 9, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4111, file: !750, line: 468, column: 8)
!4174 = !DILocation(line: 468, column: 8, scope: !4173)
!4175 = !DILocation(line: 468, column: 15, scope: !4173)
!4176 = !DILocation(line: 468, column: 8, scope: !4111)
!4177 = distinct !{!4177, !4178, !4179}
!4178 = !DILocation(line: 343, column: 2, scope: !4062)
!4179 = !DILocation(line: 712, column: 2, scope: !4062)
!4180 = !DILocation(line: 481, column: 4, scope: !4111)
!4181 = !DILocation(line: 484, column: 12, scope: !4110)
!4182 = !DILocation(line: 485, column: 5, scope: !4110)
!4183 = !DILocation(line: 505, column: 5, scope: !4110)
!4184 = !DILocation(line: 518, column: 5, scope: !4110)
!4185 = !DILocation(line: 523, column: 5, scope: !4110)
!4186 = !DILocation(line: 532, column: 9, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4110, file: !750, line: 532, column: 9)
!4188 = !DILocation(line: 532, column: 17, scope: !4187)
!4189 = !DILocation(line: 532, column: 9, scope: !4110)
!4190 = !DILocation(line: 533, column: 10, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !750, line: 533, column: 10)
!4192 = distinct !DILexicalBlock(scope: !4187, file: !750, line: 532, column: 25)
!4193 = !DILocation(line: 533, column: 18, scope: !4191)
!4194 = !DILocation(line: 0, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4109, file: !750, line: 569, column: 9)
!4196 = !DILocation(line: 0, scope: !4109)
!4197 = !DILocation(line: 579, column: 20, scope: !4109)
!4198 = !DILocation(line: 579, column: 11, scope: !4109)
!4199 = !DILocation(line: 580, column: 9, scope: !4109)
!4200 = !DILocation(line: 582, column: 21, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4202, file: !750, line: 582, column: 10)
!4202 = distinct !DILexicalBlock(scope: !4203, file: !750, line: 580, column: 23)
!4203 = distinct !DILexicalBlock(scope: !4109, file: !750, line: 580, column: 9)
!4204 = !DILocation(line: 582, column: 28, scope: !4201)
!4205 = !DILocation(line: 582, column: 10, scope: !4202)
!4206 = !DILocation(line: 0, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !750, line: 587, column: 17)
!4208 = distinct !DILexicalBlock(scope: !4202, file: !750, line: 585, column: 10)
!4209 = !DILocation(line: 593, column: 9, scope: !4109)
!4210 = !DILocation(line: 600, column: 5, scope: !4110)
!4211 = !DILocation(line: 605, column: 18, scope: !4112)
!4212 = !DILocation(line: 605, column: 9, scope: !4112)
!4213 = !DILocation(line: 608, column: 20, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4112, file: !750, line: 608, column: 7)
!4215 = !DILocation(line: 608, column: 23, scope: !4214)
!4216 = !DILocation(line: 608, column: 34, scope: !4214)
!4217 = !DILocation(line: 608, column: 41, scope: !4214)
!4218 = !DILocation(line: 608, column: 7, scope: !4112)
!4219 = !DILocation(line: 613, column: 7, scope: !4112)
!4220 = !DILocation(line: 614, column: 8, scope: !4118)
!4221 = !DILocation(line: 614, column: 4, scope: !4118)
!4222 = !DILocation(line: 256, column: 6, scope: !4062)
!4223 = !DILocation(line: 254, column: 15, scope: !4062)
!4224 = !DILocation(line: 320, column: 7, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4155, file: !750, line: 305, column: 20)
!4226 = !DILocation(line: 615, column: 1, scope: !4118)
!4227 = !DILocation(line: 616, column: 8, scope: !4118)
!4228 = !DILocation(line: 617, column: 5, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4230, file: !750, line: 616, column: 22)
!4230 = distinct !DILexicalBlock(scope: !4118, file: !750, line: 616, column: 8)
!4231 = !DILocation(line: 617, column: 25, scope: !4229)
!4232 = !DILocation(line: 618, column: 4, scope: !4229)
!4233 = !DILocation(line: 620, column: 26, scope: !4118)
!4234 = !DILocation(line: 620, column: 29, scope: !4118)
!4235 = !DILocation(line: 620, column: 17, scope: !4118)
!4236 = !DILocation(line: 620, column: 43, scope: !4118)
!4237 = !DILocation(line: 0, scope: !4118)
!4238 = !DILocation(line: 623, column: 14, scope: !4123)
!4239 = !DILocation(line: 626, column: 26, scope: !4122)
!4240 = !DILocation(line: 626, column: 37, scope: !4122)
!4241 = !DILocation(line: 0, scope: !4122)
!4242 = !DILocation(line: 634, column: 15, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4122, file: !750, line: 634, column: 9)
!4244 = !DILocation(line: 635, column: 6, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4246, file: !750, line: 635, column: 6)
!4246 = distinct !DILexicalBlock(scope: !4247, file: !750, line: 635, column: 6)
!4247 = distinct !DILexicalBlock(scope: !4248, file: !750, line: 635, column: 6)
!4248 = distinct !DILexicalBlock(scope: !4243, file: !750, line: 634, column: 44)
!4249 = !DILocation(line: 639, column: 15, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4122, file: !750, line: 639, column: 9)
!4251 = !DILocation(line: 639, column: 9, scope: !4122)
!4252 = !DILocation(line: 640, column: 6, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !750, line: 640, column: 6)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !750, line: 640, column: 6)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !750, line: 640, column: 6)
!4256 = distinct !DILexicalBlock(scope: !4250, file: !750, line: 639, column: 43)
!4257 = !DILocation(line: 644, column: 9, scope: !4122)
!4258 = !DILocation(line: 649, column: 27, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !750, line: 644, column: 23)
!4260 = distinct !DILexicalBlock(scope: !4122, file: !750, line: 644, column: 9)
!4261 = !DILocation(line: 649, column: 6, scope: !4259)
!4262 = !DILocation(line: 649, column: 25, scope: !4259)
!4263 = !DILocation(line: 650, column: 27, scope: !4259)
!4264 = !DILocation(line: 650, column: 6, scope: !4259)
!4265 = !DILocation(line: 650, column: 25, scope: !4259)
!4266 = !DILocation(line: 651, column: 10, scope: !4259)
!4267 = !DILocation(line: 653, column: 26, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !750, line: 651, column: 17)
!4269 = distinct !DILexicalBlock(scope: !4259, file: !750, line: 651, column: 10)
!4270 = !DILocation(line: 654, column: 15, scope: !4268)
!4271 = !DILocation(line: 655, column: 6, scope: !4268)
!4272 = !DILocation(line: 656, column: 15, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4269, file: !750, line: 655, column: 13)
!4274 = !DILocation(line: 658, column: 16, scope: !4260)
!4275 = !DILocation(line: 663, column: 10, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !750, line: 658, column: 23)
!4277 = distinct !DILexicalBlock(scope: !4260, file: !750, line: 658, column: 16)
!4278 = !DILocation(line: 664, column: 5, scope: !4276)
!4279 = !DILocation(line: 664, column: 16, scope: !4277)
!4280 = !DILocation(line: 669, column: 10, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !750, line: 664, column: 28)
!4282 = distinct !DILexicalBlock(scope: !4277, file: !750, line: 664, column: 16)
!4283 = !DILocation(line: 670, column: 5, scope: !4281)
!4284 = !DILocation(line: 675, column: 13, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4282, file: !750, line: 670, column: 12)
!4286 = !DILocation(line: 675, column: 27, scope: !4285)
!4287 = !DILocation(line: 675, column: 10, scope: !4285)
!4288 = !DILocation(line: 678, column: 10, scope: !4122)
!4289 = !DILocation(line: 680, column: 8, scope: !4118)
!4290 = !DILocation(line: 683, column: 14, scope: !4119)
!4291 = !DILocation(line: 684, column: 12, scope: !4125)
!4292 = !DILocation(line: 0, scope: !4125)
!4293 = !DILocation(line: 686, column: 8, scope: !4125)
!4294 = !DILocation(line: 687, column: 5, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !750, line: 686, column: 22)
!4296 = distinct !DILexicalBlock(scope: !4125, file: !750, line: 686, column: 8)
!4297 = !DILocation(line: 687, column: 17, scope: !4295)
!4298 = !DILocation(line: 688, column: 4, scope: !4295)
!4299 = !DILocation(line: 698, column: 18, scope: !4131)
!4300 = !DILocation(line: 0, scope: !4131)
!4301 = !DILocation(line: 700, column: 8, scope: !4131)
!4302 = !DILocation(line: 704, column: 6, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !750, line: 703, column: 12)
!4304 = distinct !DILexicalBlock(scope: !4305, file: !750, line: 701, column: 9)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !750, line: 700, column: 22)
!4306 = distinct !DILexicalBlock(scope: !4131, file: !750, line: 700, column: 8)
!4307 = !DILocation(line: 704, column: 24, scope: !4303)
!4308 = !DILocation(line: 706, column: 4, scope: !4305)
!4309 = !DILocation(line: 709, column: 4, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4311, file: !750, line: 709, column: 4)
!4311 = distinct !DILexicalBlock(scope: !4312, file: !750, line: 709, column: 4)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !750, line: 709, column: 4)
!4313 = distinct !DILexicalBlock(scope: !4132, file: !750, line: 708, column: 10)
!4314 = !DILocation(line: 0, scope: !4126)
!4315 = !DILocation(line: 0, scope: !4112)
!4316 = !DILocation(line: 720, column: 6, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4062, file: !750, line: 720, column: 6)
!4318 = !DILocation(line: 720, column: 17, scope: !4317)
!4319 = !DILocation(line: 720, column: 31, scope: !4317)
!4320 = !DILocation(line: 720, column: 6, scope: !4062)
!4321 = !DILocation(line: 721, column: 3, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4323, file: !750, line: 721, column: 3)
!4323 = distinct !DILexicalBlock(scope: !4324, file: !750, line: 721, column: 3)
!4324 = distinct !DILexicalBlock(scope: !4325, file: !750, line: 721, column: 3)
!4325 = distinct !DILexicalBlock(scope: !4317, file: !750, line: 720, column: 38)
!4326 = !DILocation(line: 729, column: 6, scope: !4062)
!4327 = !DILocation(line: 730, column: 21, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !750, line: 729, column: 20)
!4329 = distinct !DILexicalBlock(scope: !4062, file: !750, line: 729, column: 6)
!4330 = !DILocation(line: 730, column: 27, scope: !4328)
!4331 = !DILocation(line: 730, column: 3, scope: !4328)
!4332 = !DILocation(line: 737, column: 22, scope: !4062)
!4333 = !DILocation(line: 737, column: 20, scope: !4062)
!4334 = !DILocation(line: 0, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4062, file: !750, line: 739, column: 6)
!4336 = !DILocation(line: 745, column: 17, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4335, file: !750, line: 743, column: 9)
!4338 = !DILocation(line: 745, column: 25, scope: !4337)
!4339 = !DILocation(line: 746, column: 17, scope: !4337)
!4340 = !DILocation(line: 746, column: 28, scope: !4337)
!4341 = !DILocation(line: 749, column: 29, scope: !4062)
!4342 = !DILocation(line: 749, column: 16, scope: !4062)
!4343 = !DILocation(line: 749, column: 27, scope: !4062)
!4344 = !DILocation(line: 756, column: 6, scope: !4138)
!4345 = !DILocation(line: 756, column: 6, scope: !4062)
!4346 = !DILocation(line: 757, column: 3, scope: !4136)
!4347 = !DILocation(line: 758, column: 10, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4134, file: !750, line: 758, column: 8)
!4349 = !DILocation(line: 758, column: 25, scope: !4348)
!4350 = !DILocation(line: 758, column: 8, scope: !4134)
!4351 = !DILocation(line: 0, scope: !4134)
!4352 = !DILocation(line: 765, column: 8, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4134, file: !750, line: 765, column: 8)
!4354 = !DILocation(line: 765, column: 19, scope: !4353)
!4355 = !DILocation(line: 765, column: 23, scope: !4353)
!4356 = !DILocation(line: 765, column: 8, scope: !4134)
!4357 = !DILocation(line: 762, column: 33, scope: !4134)
!4358 = !DILocation(line: 769, column: 8, scope: !4134)
!4359 = !DILocation(line: 769, column: 11, scope: !4134)
!4360 = !DILocation(line: 757, column: 27, scope: !4135)
!4361 = !DILocation(line: 757, column: 17, scope: !4135)
!4362 = distinct !{!4362, !4346, !4363}
!4363 = !DILocation(line: 770, column: 3, scope: !4136)
!4364 = !DILocation(line: 774, column: 16, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4366, file: !750, line: 774, column: 2)
!4366 = distinct !DILexicalBlock(scope: !4062, file: !750, line: 774, column: 2)
!4367 = !DILocation(line: 774, column: 2, scope: !4366)
!4368 = !DILocation(line: 776, column: 16, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !750, line: 776, column: 7)
!4370 = distinct !DILexicalBlock(scope: !4365, file: !750, line: 774, column: 30)
!4371 = !DILocation(line: 776, column: 19, scope: !4369)
!4372 = !DILocation(line: 776, column: 34, scope: !4369)
!4373 = !DILocation(line: 776, column: 7, scope: !4370)
!4374 = !DILocation(line: 780, column: 7, scope: !4370)
!4375 = !DILocation(line: 782, column: 13, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4377, file: !750, line: 780, column: 19)
!4377 = distinct !DILexicalBlock(scope: !4370, file: !750, line: 780, column: 7)
!4378 = !DILocation(line: 782, column: 8, scope: !4376)
!4379 = !DILocation(line: 782, column: 11, scope: !4376)
!4380 = !DILocation(line: 783, column: 3, scope: !4376)
!4381 = !DILocation(line: 785, column: 26, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4377, file: !750, line: 783, column: 10)
!4383 = !DILocation(line: 785, column: 41, scope: !4382)
!4384 = !DILocation(line: 785, column: 24, scope: !4382)
!4385 = !DILocation(line: 785, column: 8, scope: !4382)
!4386 = !DILocation(line: 787, column: 52, scope: !4382)
!4387 = !DILocation(line: 789, column: 11, scope: !4382)
!4388 = !DILocation(line: 789, column: 21, scope: !4382)
!4389 = !DILocation(line: 0, scope: !4377)
!4390 = !DILocation(line: 793, column: 7, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4370, file: !750, line: 793, column: 7)
!4392 = !DILocation(line: 793, column: 18, scope: !4391)
!4393 = !DILocation(line: 793, column: 22, scope: !4391)
!4394 = !DILocation(line: 793, column: 29, scope: !4391)
!4395 = !DILocation(line: 793, column: 7, scope: !4370)
!4396 = !DILocation(line: 797, column: 12, scope: !4370)
!4397 = !DILocation(line: 797, column: 7, scope: !4370)
!4398 = !DILocation(line: 797, column: 10, scope: !4370)
!4399 = !DILocation(line: 799, column: 3, scope: !4370)
!4400 = !DILocation(line: 800, column: 7, scope: !4370)
!4401 = !DILocation(line: 801, column: 2, scope: !4370)
!4402 = !DILocation(line: 338, column: 4, scope: !4062)
!4403 = !DILocation(line: 774, column: 26, scope: !4365)
!4404 = distinct !{!4404, !4367, !4405}
!4405 = !DILocation(line: 801, column: 2, scope: !4366)
!4406 = !DILocation(line: 808, column: 9, scope: !4062)
!4407 = !DILocation(line: 808, column: 2, scope: !4062)
!4408 = !DILocation(line: 813, column: 1, scope: !4062)
!4409 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !750, file: !750, line: 33, type: !4410, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4412)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{!122, !108}
!4412 = !{!4413}
!4413 = !DILocalVariable(name: "addr", arg: 1, scope: !4409, file: !750, line: 33, type: !108)
!4414 = !DILocation(line: 0, scope: !4409)
!4415 = !DILocation(line: 41, column: 9, scope: !4409)
!4416 = !DILocation(line: 41, column: 2, scope: !4409)
!4417 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4418, file: !4418, line: 24, type: !4419, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4421)
!4418 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4419 = !DISubroutineType(types: !4420)
!4420 = !{!122, !13}
!4421 = !{!4422}
!4422 = !DILocalVariable(name: "addr", arg: 1, scope: !4417, file: !4418, line: 24, type: !13)
!4423 = !DILocation(line: 0, scope: !4417)
!4424 = !DILocation(line: 49, column: 30, scope: !4417)
!4425 = !DILocation(line: 49, column: 57, scope: !4417)
!4426 = !DILocation(line: 49, column: 2, scope: !4417)
!4427 = distinct !DISubprogram(name: "cbprintf_package", scope: !750, file: !750, line: 815, type: !4428, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4430)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!103, !102, !156, !111, !108, null}
!4430 = !{!4431, !4432, !4433, !4434, !4435, !4436}
!4431 = !DILocalVariable(name: "packaged", arg: 1, scope: !4427, file: !750, line: 815, type: !102)
!4432 = !DILocalVariable(name: "len", arg: 2, scope: !4427, file: !750, line: 815, type: !156)
!4433 = !DILocalVariable(name: "flags", arg: 3, scope: !4427, file: !750, line: 815, type: !111)
!4434 = !DILocalVariable(name: "format", arg: 4, scope: !4427, file: !750, line: 816, type: !108)
!4435 = !DILocalVariable(name: "ap", scope: !4427, file: !750, line: 818, type: !4065)
!4436 = !DILocalVariable(name: "ret", scope: !4427, file: !750, line: 819, type: !103)
!4437 = !DILocation(line: 0, scope: !4427)
!4438 = !DILocation(line: 818, column: 2, scope: !4427)
!4439 = !DILocation(line: 818, column: 10, scope: !4427)
!4440 = !DILocation(line: 821, column: 2, scope: !4427)
!4441 = !DILocation(line: 822, column: 8, scope: !4427)
!4442 = !DILocation(line: 823, column: 2, scope: !4427)
!4443 = !DILocation(line: 825, column: 1, scope: !4427)
!4444 = !DILocation(line: 824, column: 2, scope: !4427)
!4445 = distinct !DISubprogram(name: "cbpprintf_external", scope: !750, file: !750, line: 827, type: !4446, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4456)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{!103, !4448, !4452, !102, !102}
!4448 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4098, line: 297, baseType: !4449)
!4449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 32)
!4450 = !DISubroutineType(types: !4451)
!4451 = !{!103, null}
!4452 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4098, line: 328, baseType: !4453)
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 32)
!4454 = !DISubroutineType(types: !4455)
!4455 = !{!103, !4448, !102, !108, !4065}
!4456 = !{!4457, !4458, !4459, !4460, !4461, !4462, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475}
!4457 = !DILocalVariable(name: "out", arg: 1, scope: !4445, file: !750, line: 827, type: !4448)
!4458 = !DILocalVariable(name: "formatter", arg: 2, scope: !4445, file: !750, line: 828, type: !4452)
!4459 = !DILocalVariable(name: "ctx", arg: 3, scope: !4445, file: !750, line: 829, type: !102)
!4460 = !DILocalVariable(name: "packaged", arg: 4, scope: !4445, file: !750, line: 829, type: !102)
!4461 = !DILocalVariable(name: "buf", scope: !4445, file: !750, line: 831, type: !550)
!4462 = !DILocalVariable(name: "hdr", scope: !4445, file: !750, line: 832, type: !4463)
!4463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4464, size: 32)
!4464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4098, line: 96, size: 64, elements: !4465)
!4465 = !{!4466, !4467}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4464, file: !4098, line: 98, baseType: !4097, size: 32)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4464, file: !4098, line: 101, baseType: !160, size: 32, offset: 32)
!4468 = !DILocalVariable(name: "s", scope: !4445, file: !750, line: 833, type: !160)
!4469 = !DILocalVariable(name: "ps", scope: !4445, file: !750, line: 833, type: !748)
!4470 = !DILocalVariable(name: "i", scope: !4445, file: !750, line: 834, type: !32)
!4471 = !DILocalVariable(name: "args_size", scope: !4445, file: !750, line: 834, type: !32)
!4472 = !DILocalVariable(name: "s_nbr", scope: !4445, file: !750, line: 834, type: !32)
!4473 = !DILocalVariable(name: "ros_nbr", scope: !4445, file: !750, line: 834, type: !32)
!4474 = !DILocalVariable(name: "rws_nbr", scope: !4445, file: !750, line: 834, type: !32)
!4475 = !DILocalVariable(name: "s_idx", scope: !4445, file: !750, line: 834, type: !32)
!4476 = !DILocation(line: 0, scope: !4445)
!4477 = !DILocation(line: 836, column: 10, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4445, file: !750, line: 836, column: 6)
!4479 = !DILocation(line: 836, column: 6, scope: !4445)
!4480 = !DILocation(line: 842, column: 28, scope: !4445)
!4481 = !DILocation(line: 842, column: 14, scope: !4445)
!4482 = !DILocation(line: 852, column: 16, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4484, file: !750, line: 852, column: 2)
!4484 = distinct !DILexicalBlock(scope: !4445, file: !750, line: 852, column: 2)
!4485 = !DILocation(line: 852, column: 2, scope: !4484)
!4486 = !DILocation(line: 841, column: 28, scope: !4445)
!4487 = !DILocation(line: 841, column: 14, scope: !4445)
!4488 = !DILocation(line: 841, column: 32, scope: !4445)
!4489 = !DILocation(line: 847, column: 19, scope: !4445)
!4490 = !DILocation(line: 843, column: 28, scope: !4445)
!4491 = !DILocation(line: 843, column: 14, scope: !4445)
!4492 = !DILocation(line: 847, column: 31, scope: !4445)
!4493 = !DILocation(line: 844, column: 28, scope: !4445)
!4494 = !DILocation(line: 844, column: 14, scope: !4445)
!4495 = !DILocation(line: 847, column: 45, scope: !4445)
!4496 = !DILocation(line: 847, column: 41, scope: !4445)
!4497 = !DILocation(line: 854, column: 24, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4483, file: !750, line: 852, column: 30)
!4499 = !DILocation(line: 854, column: 11, scope: !4498)
!4500 = !DILocation(line: 855, column: 30, scope: !4498)
!4501 = !DILocation(line: 855, column: 22, scope: !4498)
!4502 = !DILocation(line: 855, column: 8, scope: !4498)
!4503 = !DILocation(line: 857, column: 7, scope: !4498)
!4504 = !DILocation(line: 859, column: 8, scope: !4498)
!4505 = !DILocation(line: 859, column: 18, scope: !4498)
!4506 = !DILocation(line: 859, column: 5, scope: !4498)
!4507 = !DILocation(line: 852, column: 26, scope: !4483)
!4508 = distinct !{!4508, !4485, !4509}
!4509 = !DILocation(line: 860, column: 2, scope: !4484)
!4510 = !DILocation(line: 863, column: 6, scope: !4445)
!4511 = !DILocation(line: 866, column: 56, scope: !4445)
!4512 = !DILocation(line: 866, column: 9, scope: !4445)
!4513 = !DILocation(line: 866, column: 2, scope: !4445)
!4514 = !DILocation(line: 867, column: 1, scope: !4445)
!4515 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !750, file: !750, line: 179, type: !4516, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4518)
!4516 = !DISubroutineType(types: !4517)
!4517 = !{!103, !4448, !4452, !102, !108, !102}
!4518 = !{!4519, !4520, !4521, !4522, !4523, !4524}
!4519 = !DILocalVariable(name: "out", arg: 1, scope: !4515, file: !750, line: 179, type: !4448)
!4520 = !DILocalVariable(name: "formatter", arg: 2, scope: !4515, file: !750, line: 180, type: !4452)
!4521 = !DILocalVariable(name: "ctx", arg: 3, scope: !4515, file: !750, line: 181, type: !102)
!4522 = !DILocalVariable(name: "fmt", arg: 4, scope: !4515, file: !750, line: 182, type: !108)
!4523 = !DILocalVariable(name: "buf", arg: 5, scope: !4515, file: !750, line: 182, type: !102)
!4524 = !DILocalVariable(name: "u", scope: !4515, file: !750, line: 187, type: !4525)
!4525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4515, file: !750, line: 184, size: 32, elements: !4526)
!4526 = !{!4527, !4528}
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4525, file: !750, line: 185, baseType: !4065, size: 32)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4525, file: !750, line: 186, baseType: !102, size: 32)
!4529 = !DILocation(line: 0, scope: !4515)
!4530 = !DILocation(line: 191, column: 9, scope: !4515)
!4531 = !DILocation(line: 191, column: 2, scope: !4515)
!4532 = distinct !DISubprogram(name: "is_ptr", scope: !750, file: !750, line: 881, type: !4533, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4535)
!4533 = !DISubroutineType(types: !4534)
!4534 = !{!122, !108, !103}
!4535 = !{!4536, !4537, !4538, !4539, !4540}
!4536 = !DILocalVariable(name: "fmt", arg: 1, scope: !4532, file: !750, line: 881, type: !108)
!4537 = !DILocalVariable(name: "n", arg: 2, scope: !4532, file: !750, line: 881, type: !103)
!4538 = !DILocalVariable(name: "c", scope: !4532, file: !750, line: 883, type: !110)
!4539 = !DILocalVariable(name: "mod", scope: !4532, file: !750, line: 884, type: !122)
!4540 = !DILocalVariable(name: "cnt", scope: !4532, file: !750, line: 885, type: !103)
!4541 = !DILocation(line: 0, scope: !4532)
!4542 = !DILocation(line: 887, column: 14, scope: !4532)
!4543 = !DILocation(line: 887, column: 22, scope: !4532)
!4544 = !DILocation(line: 887, column: 2, scope: !4532)
!4545 = !DILocation(line: 887, column: 18, scope: !4532)
!4546 = !DILocation(line: 888, column: 7, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4532, file: !750, line: 887, column: 31)
!4548 = !DILocation(line: 889, column: 12, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !750, line: 889, column: 8)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !750, line: 888, column: 12)
!4551 = distinct !DILexicalBlock(scope: !4547, file: !750, line: 888, column: 7)
!4552 = !DILocation(line: 889, column: 8, scope: !4550)
!4553 = !DILocation(line: 890, column: 11, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !750, line: 890, column: 9)
!4555 = distinct !DILexicalBlock(scope: !4549, file: !750, line: 889, column: 18)
!4556 = !DILocation(line: 890, column: 9, scope: !4555)
!4557 = !DILocation(line: 892, column: 16, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4554, file: !750, line: 892, column: 16)
!4559 = !DILocation(line: 892, column: 16, scope: !4554)
!4560 = !DILocation(line: 895, column: 15, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4549, file: !750, line: 895, column: 15)
!4562 = !DILocation(line: 895, column: 15, scope: !4549)
!4563 = !DILocation(line: 900, column: 9, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4547, file: !750, line: 900, column: 7)
!4565 = !DILocation(line: 900, column: 7, scope: !4547)
!4566 = distinct !{!4566, !4544, !4567}
!4567 = !DILocation(line: 903, column: 2, scope: !4532)
!4568 = !DILocation(line: 906, column: 1, scope: !4532)
!4569 = distinct !DISubprogram(name: "is_fmt_spec", scope: !750, file: !750, line: 873, type: !4570, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4572)
!4570 = !DISubroutineType(types: !4571)
!4571 = !{!122, !110}
!4572 = !{!4573}
!4573 = !DILocalVariable(name: "c", arg: 1, scope: !4569, file: !750, line: 873, type: !110)
!4574 = !DILocation(line: 0, scope: !4569)
!4575 = !DILocation(line: 875, column: 19, scope: !4569)
!4576 = !DILocation(line: 875, column: 2, scope: !4569)
!4577 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !750, file: !750, line: 908, type: !4578, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4584)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{!103, !102, !156, !4580, !102, !111, !3065, !156}
!4580 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4098, line: 308, baseType: !4581)
!4581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4582, size: 32)
!4582 = !DISubroutineType(types: !4583)
!4583 = !{!103, !13, !156, !102}
!4584 = !{!4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4602, !4603, !4604, !4605, !4606, !4612, !4615, !4616, !4617, !4619, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4635, !4638, !4639, !4640, !4641, !4642, !4643, !4645, !4648, !4649, !4650}
!4585 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4577, file: !750, line: 908, type: !102)
!4586 = !DILocalVariable(name: "in_len", arg: 2, scope: !4577, file: !750, line: 909, type: !156)
!4587 = !DILocalVariable(name: "cb", arg: 3, scope: !4577, file: !750, line: 910, type: !4580)
!4588 = !DILocalVariable(name: "ctx", arg: 4, scope: !4577, file: !750, line: 911, type: !102)
!4589 = !DILocalVariable(name: "flags", arg: 5, scope: !4577, file: !750, line: 912, type: !111)
!4590 = !DILocalVariable(name: "strl", arg: 6, scope: !4577, file: !750, line: 913, type: !3065)
!4591 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4577, file: !750, line: 914, type: !156)
!4592 = !DILocalVariable(name: "buf", scope: !4577, file: !750, line: 918, type: !550)
!4593 = !DILocalVariable(name: "buf32", scope: !4577, file: !750, line: 919, type: !1354)
!4594 = !DILocalVariable(name: "args_size", scope: !4577, file: !750, line: 920, type: !32)
!4595 = !DILocalVariable(name: "ros_nbr", scope: !4577, file: !750, line: 920, type: !32)
!4596 = !DILocalVariable(name: "rws_nbr", scope: !4577, file: !750, line: 920, type: !32)
!4597 = !DILocalVariable(name: "fmt_present", scope: !4577, file: !750, line: 921, type: !122)
!4598 = !DILocalVariable(name: "rw_cpy", scope: !4577, file: !750, line: 922, type: !122)
!4599 = !DILocalVariable(name: "ro_cpy", scope: !4577, file: !750, line: 923, type: !122)
!4600 = !DILocalVariable(name: "in_desc", scope: !4577, file: !750, line: 924, type: !4601)
!4601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4101, size: 32)
!4602 = !DILocalVariable(name: "out_len", scope: !4577, file: !750, line: 960, type: !103)
!4603 = !DILocalVariable(name: "fmt", scope: !4577, file: !750, line: 965, type: !108)
!4604 = !DILocalVariable(name: "str_pos", scope: !4577, file: !750, line: 966, type: !550)
!4605 = !DILocalVariable(name: "strl_cnt", scope: !4577, file: !750, line: 967, type: !156)
!4606 = !DILocalVariable(name: "i", scope: !4607, file: !750, line: 973, type: !103)
!4607 = distinct !DILexicalBlock(scope: !4608, file: !750, line: 973, column: 4)
!4608 = distinct !DILexicalBlock(scope: !4609, file: !750, line: 972, column: 15)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !750, line: 972, column: 7)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !750, line: 970, column: 18)
!4611 = distinct !DILexicalBlock(scope: !4577, file: !750, line: 970, column: 6)
!4612 = !DILocalVariable(name: "str", scope: !4613, file: !750, line: 974, type: !108)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !750, line: 973, column: 38)
!4614 = distinct !DILexicalBlock(scope: !4607, file: !750, line: 973, column: 4)
!4615 = !DILocalVariable(name: "len", scope: !4613, file: !750, line: 975, type: !103)
!4616 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4610, file: !750, line: 990, type: !122)
!4617 = !DILocalVariable(name: "i", scope: !4618, file: !750, line: 995, type: !103)
!4618 = distinct !DILexicalBlock(scope: !4610, file: !750, line: 995, column: 3)
!4619 = !DILocalVariable(name: "arg_idx", scope: !4620, file: !750, line: 996, type: !166)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !750, line: 995, column: 37)
!4621 = distinct !DILexicalBlock(scope: !4618, file: !750, line: 995, column: 3)
!4622 = !DILocalVariable(name: "arg_pos", scope: !4620, file: !750, line: 997, type: !166)
!4623 = !DILocalVariable(name: "str", scope: !4620, file: !750, line: 998, type: !108)
!4624 = !DILocalVariable(name: "is_ro", scope: !4620, file: !750, line: 999, type: !122)
!4625 = !DILocalVariable(name: "len", scope: !4620, file: !750, line: 1000, type: !103)
!4626 = !DILocalVariable(name: "out_desc", scope: !4577, file: !750, line: 1038, type: !4101)
!4627 = !DILocalVariable(name: "cpy_str_pos", scope: !4577, file: !750, line: 1040, type: !4083)
!4628 = !DILocalVariable(name: "keep_str_pos", scope: !4577, file: !750, line: 1042, type: !4083)
!4629 = !DILocalVariable(name: "scpy_cnt", scope: !4577, file: !750, line: 1043, type: !166)
!4630 = !DILocalVariable(name: "keep_cnt", scope: !4577, file: !750, line: 1044, type: !166)
!4631 = !DILocalVariable(name: "dst", scope: !4577, file: !750, line: 1045, type: !550)
!4632 = !DILocalVariable(name: "rv", scope: !4577, file: !750, line: 1046, type: !103)
!4633 = !DILocalVariable(name: "i", scope: !4634, file: !750, line: 1074, type: !103)
!4634 = distinct !DILexicalBlock(scope: !4577, file: !750, line: 1074, column: 2)
!4635 = !DILocalVariable(name: "arg_idx", scope: !4636, file: !750, line: 1075, type: !166)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !750, line: 1074, column: 36)
!4637 = distinct !DILexicalBlock(scope: !4634, file: !750, line: 1074, column: 2)
!4638 = !DILocalVariable(name: "arg_pos", scope: !4636, file: !750, line: 1076, type: !166)
!4639 = !DILocalVariable(name: "str", scope: !4636, file: !750, line: 1077, type: !108)
!4640 = !DILocalVariable(name: "is_ro", scope: !4636, file: !750, line: 1078, type: !122)
!4641 = !DILocalVariable(name: "in_desc_backup", scope: !4577, file: !750, line: 1114, type: !4101)
!4642 = !DILocalVariable(name: "strs_len", scope: !4577, file: !750, line: 1134, type: !156)
!4643 = !DILocalVariable(name: "i", scope: !4644, file: !750, line: 1143, type: !103)
!4644 = distinct !DILexicalBlock(scope: !4577, file: !750, line: 1143, column: 2)
!4645 = !DILocalVariable(name: "loc", scope: !4646, file: !750, line: 1144, type: !166)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !750, line: 1143, column: 37)
!4647 = distinct !DILexicalBlock(scope: !4644, file: !750, line: 1143, column: 2)
!4648 = !DILocalVariable(name: "str", scope: !4646, file: !750, line: 1145, type: !108)
!4649 = !DILocalVariable(name: "str_len", scope: !4646, file: !750, line: 1146, type: !181)
!4650 = !DILabel(scope: !4651, name: "calculate_string_length", file: !750, line: 1021)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !750, line: 1020, column: 56)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !750, line: 1020, column: 15)
!4653 = distinct !DILexicalBlock(scope: !4620, file: !750, line: 1014, column: 8)
!4654 = !DILocation(line: 0, scope: !4577)
!4655 = !DILocation(line: 916, column: 2, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !750, line: 916, column: 2)
!4657 = distinct !DILexicalBlock(scope: !4577, file: !750, line: 916, column: 2)
!4658 = !DILocation(line: 916, column: 2, scope: !4657)
!4659 = !DILocation(line: 916, column: 2, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4656, file: !750, line: 916, column: 2)
!4661 = !DILocation(line: 919, column: 20, scope: !4577)
!4662 = !DILocation(line: 921, column: 27, scope: !4577)
!4663 = !DILocation(line: 921, column: 21, scope: !4577)
!4664 = !DILocation(line: 926, column: 18, scope: !4577)
!4665 = !DILocation(line: 926, column: 11, scope: !4577)
!4666 = !DILocation(line: 926, column: 34, scope: !4577)
!4667 = !DILocation(line: 931, column: 21, scope: !4577)
!4668 = !DILocation(line: 931, column: 12, scope: !4577)
!4669 = !DILocation(line: 932, column: 11, scope: !4577)
!4670 = !DILocation(line: 932, column: 19, scope: !4577)
!4671 = !DILocation(line: 938, column: 21, scope: !4577)
!4672 = !DILocation(line: 938, column: 12, scope: !4577)
!4673 = !DILocation(line: 939, column: 19, scope: !4577)
!4674 = !DILocation(line: 939, column: 23, scope: !4577)
!4675 = !DILocation(line: 946, column: 14, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4577, file: !750, line: 946, column: 6)
!4677 = !DILocation(line: 947, column: 7, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4679, file: !750, line: 947, column: 7)
!4679 = distinct !DILexicalBlock(scope: !4676, file: !750, line: 946, column: 26)
!4680 = !DILocation(line: 947, column: 7, scope: !4679)
!4681 = !DILocation(line: 948, column: 4, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4678, file: !750, line: 947, column: 11)
!4683 = !DILocation(line: 949, column: 3, scope: !4682)
!4684 = !DILocation(line: 958, column: 23, scope: !4577)
!4685 = !DILocation(line: 958, column: 14, scope: !4577)
!4686 = !DILocation(line: 958, column: 27, scope: !4577)
!4687 = !DILocation(line: 965, column: 41, scope: !4577)
!4688 = !DILocation(line: 965, column: 20, scope: !4577)
!4689 = !DILocation(line: 966, column: 22, scope: !4577)
!4690 = !DILocation(line: 970, column: 9, scope: !4611)
!4691 = !DILocation(line: 970, column: 6, scope: !4577)
!4692 = !DILocation(line: 972, column: 7, scope: !4610)
!4693 = !DILocation(line: 0, scope: !4607)
!4694 = !DILocation(line: 973, column: 4, scope: !4607)
!4695 = !DILocation(line: 974, column: 46, scope: !4613)
!4696 = !DILocation(line: 974, column: 40, scope: !4613)
!4697 = !DILocation(line: 974, column: 23, scope: !4613)
!4698 = !DILocation(line: 0, scope: !4613)
!4699 = !DILocation(line: 975, column: 15, scope: !4613)
!4700 = !DILocation(line: 978, column: 14, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4613, file: !750, line: 978, column: 9)
!4702 = !DILocation(line: 979, column: 25, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4701, file: !750, line: 978, column: 38)
!4704 = !DILocation(line: 979, column: 19, scope: !4703)
!4705 = !DILocation(line: 979, column: 6, scope: !4703)
!4706 = !DILocation(line: 979, column: 23, scope: !4703)
!4707 = !DILocation(line: 980, column: 5, scope: !4703)
!4708 = !DILocation(line: 981, column: 13, scope: !4613)
!4709 = !DILocation(line: 982, column: 12, scope: !4613)
!4710 = !DILocation(line: 973, column: 34, scope: !4614)
!4711 = !DILocation(line: 973, column: 22, scope: !4614)
!4712 = distinct !{!4712, !4694, !4713}
!4713 = !DILocation(line: 983, column: 4, scope: !4607)
!4714 = !DILocation(line: 985, column: 16, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !750, line: 985, column: 8)
!4716 = distinct !DILexicalBlock(scope: !4609, file: !750, line: 984, column: 10)
!4717 = !DILocation(line: 967, column: 9, scope: !4577)
!4718 = !DILocation(line: 971, column: 11, scope: !4610)
!4719 = !DILocation(line: 0, scope: !4610)
!4720 = !DILocation(line: 0, scope: !4618)
!4721 = !DILocation(line: 995, column: 21, scope: !4621)
!4722 = !DILocation(line: 995, column: 3, scope: !4618)
!4723 = !DILocation(line: 990, column: 34, scope: !4610)
!4724 = !DILocation(line: 990, column: 26, scope: !4610)
!4725 = !DILocation(line: 996, column: 30, scope: !4620)
!4726 = !DILocation(line: 0, scope: !4620)
!4727 = !DILocation(line: 997, column: 30, scope: !4620)
!4728 = !DILocation(line: 997, column: 22, scope: !4620)
!4729 = !DILocation(line: 998, column: 39, scope: !4620)
!4730 = !DILocation(line: 998, column: 22, scope: !4620)
!4731 = !DILocation(line: 999, column: 17, scope: !4620)
!4732 = !DILocation(line: 1002, column: 20, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4620, file: !750, line: 1002, column: 8)
!4734 = !DILocation(line: 996, column: 22, scope: !4620)
!4735 = !DILocation(line: 1002, column: 35, scope: !4733)
!4736 = !DILocation(line: 1002, column: 23, scope: !4733)
!4737 = !DILocation(line: 1002, column: 8, scope: !4620)
!4738 = !DILocation(line: 1003, column: 5, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !750, line: 1003, column: 5)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !750, line: 1003, column: 5)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !750, line: 1003, column: 5)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !750, line: 1003, column: 5)
!4743 = distinct !DILexicalBlock(scope: !4733, file: !750, line: 1002, column: 45)
!4744 = !DILocation(line: 1010, column: 13, scope: !4743)
!4745 = !DILocation(line: 1011, column: 5, scope: !4743)
!4746 = !DILocation(line: 1014, column: 8, scope: !4620)
!4747 = !DILocation(line: 1015, column: 9, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4653, file: !750, line: 1014, column: 15)
!4749 = !DILocation(line: 1018, column: 14, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !750, line: 1017, column: 12)
!4751 = distinct !DILexicalBlock(scope: !4748, file: !750, line: 1015, column: 9)
!4752 = !DILocation(line: 1020, column: 4, scope: !4748)
!4753 = !DILocation(line: 1020, column: 15, scope: !4653)
!4754 = !DILocation(line: 1021, column: 1, scope: !4651)
!4755 = !DILocation(line: 1022, column: 11, scope: !4651)
!4756 = !DILocation(line: 1025, column: 14, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4651, file: !750, line: 1025, column: 9)
!4758 = !DILocation(line: 1026, column: 25, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4757, file: !750, line: 1025, column: 38)
!4760 = !DILocation(line: 1026, column: 19, scope: !4759)
!4761 = !DILocation(line: 1026, column: 6, scope: !4759)
!4762 = !DILocation(line: 1026, column: 23, scope: !4759)
!4763 = !DILocation(line: 1027, column: 5, scope: !4759)
!4764 = !DILocation(line: 1031, column: 21, scope: !4651)
!4765 = !DILocation(line: 1031, column: 13, scope: !4651)
!4766 = !DILocation(line: 1032, column: 4, scope: !4651)
!4767 = !DILocation(line: 995, column: 33, scope: !4621)
!4768 = distinct !{!4768, !4722, !4769}
!4769 = !DILocation(line: 1033, column: 3, scope: !4618)
!4770 = !DILocation(line: 1040, column: 10, scope: !4577)
!4771 = !DILocation(line: 1042, column: 10, scope: !4577)
!4772 = !DILocation(line: 1052, column: 6, scope: !4577)
!4773 = !DILocation(line: 1055, column: 9, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !750, line: 1052, column: 14)
!4775 = distinct !DILexicalBlock(scope: !4577, file: !750, line: 1052, column: 6)
!4776 = !DILocation(line: 1056, column: 2, scope: !4774)
!4777 = !DILocation(line: 1056, column: 21, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4775, file: !750, line: 1056, column: 13)
!4779 = !DILocation(line: 1066, column: 3, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !750, line: 1065, column: 11)
!4781 = distinct !DILexicalBlock(scope: !4577, file: !750, line: 1065, column: 6)
!4782 = !DILocation(line: 1067, column: 2, scope: !4780)
!4783 = !DILocation(line: 1068, column: 10, scope: !4577)
!4784 = !DILocation(line: 0, scope: !4634)
!4785 = !DILocation(line: 1074, column: 20, scope: !4637)
!4786 = !DILocation(line: 1074, column: 2, scope: !4634)
!4787 = !DILocation(line: 1110, column: 24, scope: !4577)
!4788 = !DILocation(line: 1053, column: 12, scope: !4774)
!4789 = !DILocation(line: 1054, column: 12, scope: !4774)
!4790 = !DILocation(line: 1108, column: 30, scope: !4577)
!4791 = !DILocation(line: 1108, column: 40, scope: !4577)
!4792 = !DILocation(line: 1108, column: 38, scope: !4577)
!4793 = !DILocation(line: 1109, column: 31, scope: !4577)
!4794 = !DILocation(line: 1109, column: 24, scope: !4577)
!4795 = !DILocation(line: 1110, column: 31, scope: !4577)
!4796 = !DILocation(line: 1114, column: 31, scope: !4577)
!4797 = !DILocation(line: 1114, column: 48, scope: !4577)
!4798 = !DILocation(line: 1115, column: 13, scope: !4577)
!4799 = !DILocation(line: 1118, column: 7, scope: !4577)
!4800 = !DILocation(line: 1119, column: 9, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4577, file: !750, line: 1119, column: 6)
!4802 = !DILocation(line: 1119, column: 6, scope: !4577)
!4803 = !DILocation(line: 1075, column: 29, scope: !4636)
!4804 = !DILocation(line: 1075, column: 21, scope: !4636)
!4805 = !DILocation(line: 0, scope: !4636)
!4806 = !DILocation(line: 1076, column: 29, scope: !4636)
!4807 = !DILocation(line: 1076, column: 21, scope: !4636)
!4808 = !DILocation(line: 1077, column: 38, scope: !4636)
!4809 = !DILocation(line: 1077, column: 21, scope: !4636)
!4810 = !DILocation(line: 1078, column: 16, scope: !4636)
!4811 = !DILocation(line: 1080, column: 19, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4636, file: !750, line: 1080, column: 7)
!4813 = !DILocation(line: 1080, column: 34, scope: !4812)
!4814 = !DILocation(line: 1080, column: 22, scope: !4812)
!4815 = !DILocation(line: 1080, column: 7, scope: !4636)
!4816 = !DILocation(line: 1084, column: 7, scope: !4636)
!4817 = !DILocation(line: 1085, column: 8, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4819, file: !750, line: 1084, column: 14)
!4819 = distinct !DILexicalBlock(scope: !4636, file: !750, line: 1084, column: 7)
!4820 = !DILocation(line: 1086, column: 5, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4822, file: !750, line: 1086, column: 5)
!4822 = distinct !DILexicalBlock(scope: !4823, file: !750, line: 1086, column: 5)
!4823 = distinct !DILexicalBlock(scope: !4824, file: !750, line: 1085, column: 49)
!4824 = distinct !DILexicalBlock(scope: !4818, file: !750, line: 1085, column: 8)
!4825 = !DILocation(line: 1086, column: 5, scope: !4822)
!4826 = !DILocation(line: 1086, column: 5, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4821, file: !750, line: 1086, column: 5)
!4828 = !DILocation(line: 1087, column: 25, scope: !4823)
!4829 = !DILocation(line: 1087, column: 5, scope: !4823)
!4830 = !DILocation(line: 1088, column: 4, scope: !4823)
!4831 = !DILocation(line: 1088, column: 15, scope: !4824)
!4832 = !DILocation(line: 1089, column: 5, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4834, file: !750, line: 1089, column: 5)
!4834 = distinct !DILexicalBlock(scope: !4835, file: !750, line: 1089, column: 5)
!4835 = distinct !DILexicalBlock(scope: !4836, file: !750, line: 1088, column: 61)
!4836 = distinct !DILexicalBlock(scope: !4824, file: !750, line: 1088, column: 15)
!4837 = !DILocation(line: 1089, column: 5, scope: !4834)
!4838 = !DILocation(line: 1089, column: 5, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4833, file: !750, line: 1089, column: 5)
!4840 = !DILocation(line: 1090, column: 26, scope: !4835)
!4841 = !DILocation(line: 1090, column: 5, scope: !4835)
!4842 = !DILocation(line: 1091, column: 4, scope: !4835)
!4843 = !DILocation(line: 1095, column: 8, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4819, file: !750, line: 1094, column: 10)
!4845 = !DILocation(line: 1096, column: 5, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !750, line: 1096, column: 5)
!4847 = distinct !DILexicalBlock(scope: !4848, file: !750, line: 1096, column: 5)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !750, line: 1095, column: 49)
!4849 = distinct !DILexicalBlock(scope: !4844, file: !750, line: 1095, column: 8)
!4850 = !DILocation(line: 1096, column: 5, scope: !4847)
!4851 = !DILocation(line: 1096, column: 5, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4846, file: !750, line: 1096, column: 5)
!4853 = !DILocation(line: 1097, column: 25, scope: !4848)
!4854 = !DILocation(line: 1097, column: 5, scope: !4848)
!4855 = !DILocation(line: 1098, column: 4, scope: !4848)
!4856 = !DILocation(line: 1099, column: 5, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !750, line: 1099, column: 5)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !750, line: 1099, column: 5)
!4859 = distinct !DILexicalBlock(scope: !4849, file: !750, line: 1098, column: 11)
!4860 = !DILocation(line: 1099, column: 5, scope: !4858)
!4861 = !DILocation(line: 1099, column: 5, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4857, file: !750, line: 1099, column: 5)
!4863 = !DILocation(line: 1100, column: 26, scope: !4859)
!4864 = !DILocation(line: 1100, column: 5, scope: !4859)
!4865 = !DILocation(line: 1100, column: 30, scope: !4859)
!4866 = !DILocation(line: 1101, column: 26, scope: !4859)
!4867 = !DILocation(line: 1101, column: 5, scope: !4859)
!4868 = !DILocation(line: 0, scope: !4819)
!4869 = !DILocation(line: 1074, column: 32, scope: !4637)
!4870 = distinct !{!4870, !4786, !4871}
!4871 = !DILocation(line: 1104, column: 2, scope: !4634)
!4872 = !DILocation(line: 1124, column: 13, scope: !4577)
!4873 = !DILocation(line: 1127, column: 10, scope: !4577)
!4874 = !DILocation(line: 1127, column: 7, scope: !4577)
!4875 = !DILocation(line: 1128, column: 9, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4577, file: !750, line: 1128, column: 6)
!4877 = !DILocation(line: 1128, column: 6, scope: !4577)
!4878 = !DILocation(line: 1134, column: 27, scope: !4577)
!4879 = !DILocation(line: 1136, column: 7, scope: !4577)
!4880 = !DILocation(line: 1137, column: 9, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4577, file: !750, line: 1137, column: 6)
!4882 = !DILocation(line: 1137, column: 6, scope: !4577)
!4883 = !DILocation(line: 1131, column: 10, scope: !4577)
!4884 = !DILocation(line: 1140, column: 10, scope: !4577)
!4885 = !DILocation(line: 0, scope: !4644)
!4886 = !DILocation(line: 1143, column: 20, scope: !4647)
!4887 = !DILocation(line: 1143, column: 2, scope: !4644)
!4888 = !DILocation(line: 1144, column: 3, scope: !4646)
!4889 = !DILocation(line: 1144, column: 17, scope: !4646)
!4890 = !DILocation(line: 0, scope: !4646)
!4891 = !DILocation(line: 1144, column: 11, scope: !4646)
!4892 = !DILocation(line: 1145, column: 38, scope: !4646)
!4893 = !DILocation(line: 1145, column: 21, scope: !4646)
!4894 = !DILocation(line: 1146, column: 22, scope: !4646)
!4895 = !DILocation(line: 1146, column: 29, scope: !4646)
!4896 = !DILocation(line: 1148, column: 8, scope: !4646)
!4897 = !DILocation(line: 1149, column: 10, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4646, file: !750, line: 1149, column: 7)
!4899 = !DILocation(line: 1149, column: 7, scope: !4646)
!4900 = !DILocation(line: 1154, column: 8, scope: !4646)
!4901 = !DILocation(line: 1155, column: 10, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4646, file: !750, line: 1155, column: 7)
!4903 = !DILocation(line: 1155, column: 7, scope: !4646)
!4904 = !DILocation(line: 1159, column: 2, scope: !4647)
!4905 = !DILocation(line: 1152, column: 11, scope: !4646)
!4906 = !DILocation(line: 1158, column: 11, scope: !4646)
!4907 = !DILocation(line: 1143, column: 33, scope: !4647)
!4908 = distinct !{!4908, !4887, !4909}
!4909 = !DILocation(line: 1159, column: 2, scope: !4644)
!4910 = !DILocation(line: 1162, column: 8, scope: !4577)
!4911 = !DILocation(line: 1164, column: 2, scope: !4577)
!4912 = !DILocation(line: 1165, column: 1, scope: !4577)
!4913 = distinct !DISubprogram(name: "get_package_len", scope: !750, file: !750, line: 196, type: !4914, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4916)
!4914 = !DISubroutineType(types: !4915)
!4915 = !{!156, !102}
!4916 = !{!4917, !4918, !4919, !4920, !4921, !4922, !4923}
!4917 = !DILocalVariable(name: "packaged", arg: 1, scope: !4913, file: !750, line: 196, type: !102)
!4918 = !DILocalVariable(name: "buf", scope: !4913, file: !750, line: 200, type: !550)
!4919 = !DILocalVariable(name: "start", scope: !4913, file: !750, line: 201, type: !550)
!4920 = !DILocalVariable(name: "args_size", scope: !4913, file: !750, line: 202, type: !32)
!4921 = !DILocalVariable(name: "s_nbr", scope: !4913, file: !750, line: 202, type: !32)
!4922 = !DILocalVariable(name: "ros_nbr", scope: !4913, file: !750, line: 202, type: !32)
!4923 = !DILocalVariable(name: "i", scope: !4924, file: !750, line: 215, type: !103)
!4924 = distinct !DILexicalBlock(scope: !4913, file: !750, line: 215, column: 2)
!4925 = !DILocation(line: 0, scope: !4913)
!4926 = !DILocation(line: 198, column: 2, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4928, file: !750, line: 198, column: 2)
!4928 = distinct !DILexicalBlock(scope: !4913, file: !750, line: 198, column: 2)
!4929 = !DILocation(line: 198, column: 2, scope: !4928)
!4930 = !DILocation(line: 198, column: 2, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4927, file: !750, line: 198, column: 2)
!4932 = !DILocation(line: 204, column: 14, scope: !4913)
!4933 = !DILocation(line: 204, column: 21, scope: !4913)
!4934 = !DILocation(line: 205, column: 14, scope: !4913)
!4935 = !DILocation(line: 206, column: 14, scope: !4913)
!4936 = !DILocation(line: 209, column: 6, scope: !4913)
!4937 = !DILocation(line: 212, column: 6, scope: !4913)
!4938 = !DILocation(line: 0, scope: !4924)
!4939 = !DILocation(line: 215, column: 20, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4924, file: !750, line: 215, column: 2)
!4941 = !DILocation(line: 215, column: 2, scope: !4924)
!4942 = !DILocation(line: 220, column: 33, scope: !4913)
!4943 = !DILocation(line: 220, column: 2, scope: !4913)
!4944 = !DILocation(line: 216, column: 6, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4940, file: !750, line: 215, column: 34)
!4946 = !DILocation(line: 217, column: 10, scope: !4945)
!4947 = !DILocation(line: 217, column: 36, scope: !4945)
!4948 = !DILocation(line: 217, column: 7, scope: !4945)
!4949 = !DILocation(line: 215, column: 30, scope: !4940)
!4950 = distinct !{!4950, !4941, !4951}
!4951 = !DILocation(line: 218, column: 2, scope: !4924)
!4952 = distinct !DISubprogram(name: "append_string", scope: !750, file: !750, line: 223, type: !4953, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4955)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{!103, !4580, !102, !108, !181}
!4955 = !{!4956, !4957, !4958, !4959}
!4956 = !DILocalVariable(name: "cb", arg: 1, scope: !4952, file: !750, line: 223, type: !4580)
!4957 = !DILocalVariable(name: "ctx", arg: 2, scope: !4952, file: !750, line: 223, type: !102)
!4958 = !DILocalVariable(name: "str", arg: 3, scope: !4952, file: !750, line: 223, type: !108)
!4959 = !DILocalVariable(name: "strl", arg: 4, scope: !4952, file: !750, line: 223, type: !181)
!4960 = !DILocation(line: 0, scope: !4952)
!4961 = !DILocation(line: 225, column: 9, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4952, file: !750, line: 225, column: 6)
!4963 = !DILocation(line: 225, column: 6, scope: !4952)
!4964 = !DILocation(line: 226, column: 14, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4962, file: !750, line: 225, column: 18)
!4966 = !DILocation(line: 226, column: 12, scope: !4965)
!4967 = !DILocation(line: 226, column: 3, scope: !4965)
!4968 = !DILocation(line: 229, column: 14, scope: !4952)
!4969 = !DILocation(line: 229, column: 9, scope: !4952)
!4970 = !DILocation(line: 229, column: 27, scope: !4952)
!4971 = !DILocation(line: 229, column: 39, scope: !4952)
!4972 = !DILocation(line: 230, column: 17, scope: !4952)
!4973 = !DILocation(line: 230, column: 9, scope: !4952)
!4974 = !DILocation(line: 230, column: 2, scope: !4952)
!4975 = !DILocation(line: 231, column: 1, scope: !4952)
!4976 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !762, file: !762, line: 45, type: !764, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !4977)
!4977 = !{!4978}
!4978 = !DILocalVariable(name: "c", arg: 1, scope: !4976, file: !762, line: 45, type: !103)
!4979 = !DILocation(line: 0, scope: !4976)
!4980 = !DILocation(line: 50, column: 2, scope: !4976)
!4981 = distinct !DISubprogram(name: "__printk_hook_install", scope: !762, file: !762, line: 63, type: !4982, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !4984)
!4982 = !DISubroutineType(types: !4983)
!4983 = !{null, !763}
!4984 = !{!4985}
!4985 = !DILocalVariable(name: "fn", arg: 1, scope: !4981, file: !762, line: 63, type: !763)
!4986 = !DILocation(line: 0, scope: !4981)
!4987 = !DILocation(line: 65, column: 12, scope: !4981)
!4988 = !DILocation(line: 66, column: 1, scope: !4981)
!4989 = distinct !DISubprogram(name: "__printk_get_hook", scope: !762, file: !762, line: 76, type: !4990, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !2501)
!4990 = !DISubroutineType(types: !4991)
!4991 = !{!102}
!4992 = !DILocation(line: 78, column: 9, scope: !4989)
!4993 = !DILocation(line: 78, column: 2, scope: !4989)
!4994 = distinct !DISubprogram(name: "vprintk", scope: !762, file: !762, line: 113, type: !4995, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5003)
!4995 = !DISubroutineType(types: !4996)
!4996 = !{null, !108, !4997}
!4997 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4066, line: 99, baseType: !4998)
!4998 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4066, line: 40, baseType: !4999)
!4999 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !762, baseType: !5000)
!5000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5001)
!5001 = !{!5002}
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5000, file: !762, line: 79, baseType: !102, size: 32)
!5003 = !{!5004, !5005, !5006}
!5004 = !DILocalVariable(name: "fmt", arg: 1, scope: !4994, file: !762, line: 113, type: !108)
!5005 = !DILocalVariable(name: "ap", arg: 2, scope: !4994, file: !762, line: 113, type: !4997)
!5006 = !DILocalVariable(name: "ctx", scope: !5007, file: !762, line: 121, type: !5009)
!5007 = distinct !DILexicalBlock(scope: !5008, file: !762, line: 120, column: 27)
!5008 = distinct !DILexicalBlock(scope: !4994, file: !762, line: 120, column: 6)
!5009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !762, line: 81, size: 32, elements: !5010)
!5010 = !{!5011, !5012}
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5009, file: !762, line: 85, baseType: !32, size: 32)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5009, file: !762, line: 86, baseType: !5013, offset: 32)
!5013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, elements: !3063)
!5014 = !DILocation(line: 0, scope: !4994)
!5015 = !DILocation(line: 148, column: 3, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5008, file: !762, line: 138, column: 9)
!5017 = !DILocation(line: 155, column: 1, scope: !4994)
!5018 = distinct !DISubprogram(name: "char_out", scope: !762, file: !762, line: 107, type: !5019, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5021)
!5019 = !DISubroutineType(types: !5020)
!5020 = !{!103, !103, !102}
!5021 = !{!5022, !5023}
!5022 = !DILocalVariable(name: "c", arg: 1, scope: !5018, file: !762, line: 107, type: !103)
!5023 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5018, file: !762, line: 107, type: !102)
!5024 = !DILocation(line: 0, scope: !5018)
!5025 = !DILocation(line: 110, column: 9, scope: !5018)
!5026 = !DILocation(line: 110, column: 2, scope: !5018)
!5027 = distinct !DISubprogram(name: "cbvprintf", scope: !4098, file: !4098, line: 739, type: !5028, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5030)
!5028 = !DISubroutineType(types: !5029)
!5029 = !{!103, !4448, !102, !108, !4997}
!5030 = !{!5031, !5032, !5033, !5034}
!5031 = !DILocalVariable(name: "out", arg: 1, scope: !5027, file: !4098, line: 739, type: !4448)
!5032 = !DILocalVariable(name: "ctx", arg: 2, scope: !5027, file: !4098, line: 739, type: !102)
!5033 = !DILocalVariable(name: "format", arg: 3, scope: !5027, file: !4098, line: 739, type: !108)
!5034 = !DILocalVariable(name: "ap", arg: 4, scope: !5027, file: !4098, line: 739, type: !4997)
!5035 = !DILocation(line: 0, scope: !5027)
!5036 = !DILocation(line: 741, column: 9, scope: !5027)
!5037 = !DILocation(line: 741, column: 2, scope: !5027)
!5038 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !762, file: !762, line: 157, type: !5039, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5041)
!5039 = !DISubroutineType(types: !5040)
!5040 = !{null, !160, !156}
!5041 = !{!5042, !5043, !5044}
!5042 = !DILocalVariable(name: "c", arg: 1, scope: !5038, file: !762, line: 157, type: !160)
!5043 = !DILocalVariable(name: "n", arg: 2, scope: !5038, file: !762, line: 157, type: !156)
!5044 = !DILocalVariable(name: "i", scope: !5038, file: !762, line: 159, type: !156)
!5045 = !DILocation(line: 0, scope: !5038)
!5046 = !DILocation(line: 164, column: 16, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5048, file: !762, line: 164, column: 2)
!5048 = distinct !DILexicalBlock(scope: !5038, file: !762, line: 164, column: 2)
!5049 = !DILocation(line: 164, column: 2, scope: !5048)
!5050 = !DILocation(line: 165, column: 3, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5047, file: !762, line: 164, column: 26)
!5052 = !DILocation(line: 165, column: 13, scope: !5051)
!5053 = !DILocation(line: 164, column: 22, scope: !5047)
!5054 = distinct !{!5054, !5049, !5055}
!5055 = !DILocation(line: 166, column: 2, scope: !5048)
!5056 = !DILocation(line: 171, column: 1, scope: !5038)
!5057 = distinct !DISubprogram(name: "printk", scope: !762, file: !762, line: 203, type: !5058, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5060)
!5058 = !DISubroutineType(types: !5059)
!5059 = !{null, !108, null}
!5060 = !{!5061, !5062}
!5061 = !DILocalVariable(name: "fmt", arg: 1, scope: !5057, file: !762, line: 203, type: !108)
!5062 = !DILocalVariable(name: "ap", scope: !5057, file: !762, line: 205, type: !4997)
!5063 = !DILocation(line: 0, scope: !5057)
!5064 = !DILocation(line: 205, column: 2, scope: !5057)
!5065 = !DILocation(line: 205, column: 10, scope: !5057)
!5066 = !DILocation(line: 207, column: 2, scope: !5057)
!5067 = !DILocation(line: 209, column: 2, scope: !5057)
!5068 = !DILocation(line: 211, column: 2, scope: !5057)
!5069 = !DILocation(line: 212, column: 1, scope: !5057)
!5070 = distinct !DISubprogram(name: "snprintk", scope: !762, file: !762, line: 239, type: !5071, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5073)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!103, !160, !156, !108, null}
!5073 = !{!5074, !5075, !5076, !5077, !5078}
!5074 = !DILocalVariable(name: "str", arg: 1, scope: !5070, file: !762, line: 239, type: !160)
!5075 = !DILocalVariable(name: "size", arg: 2, scope: !5070, file: !762, line: 239, type: !156)
!5076 = !DILocalVariable(name: "fmt", arg: 3, scope: !5070, file: !762, line: 239, type: !108)
!5077 = !DILocalVariable(name: "ap", scope: !5070, file: !762, line: 241, type: !4997)
!5078 = !DILocalVariable(name: "ret", scope: !5070, file: !762, line: 242, type: !103)
!5079 = !DILocation(line: 0, scope: !5070)
!5080 = !DILocation(line: 241, column: 2, scope: !5070)
!5081 = !DILocation(line: 241, column: 10, scope: !5070)
!5082 = !DILocation(line: 244, column: 2, scope: !5070)
!5083 = !DILocation(line: 245, column: 8, scope: !5070)
!5084 = !DILocation(line: 246, column: 2, scope: !5070)
!5085 = !DILocation(line: 249, column: 1, scope: !5070)
!5086 = !DILocation(line: 248, column: 2, scope: !5070)
!5087 = distinct !DISubprogram(name: "vsnprintk", scope: !762, file: !762, line: 251, type: !5088, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5090)
!5088 = !DISubroutineType(types: !5089)
!5089 = !{!103, !160, !156, !108, !4997}
!5090 = !{!5091, !5092, !5093, !5094, !5095}
!5091 = !DILocalVariable(name: "str", arg: 1, scope: !5087, file: !762, line: 251, type: !160)
!5092 = !DILocalVariable(name: "size", arg: 2, scope: !5087, file: !762, line: 251, type: !156)
!5093 = !DILocalVariable(name: "fmt", arg: 3, scope: !5087, file: !762, line: 251, type: !108)
!5094 = !DILocalVariable(name: "ap", arg: 4, scope: !5087, file: !762, line: 251, type: !4997)
!5095 = !DILocalVariable(name: "ctx", scope: !5087, file: !762, line: 253, type: !5096)
!5096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !762, line: 217, size: 96, elements: !5097)
!5097 = !{!5098, !5099, !5100}
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5096, file: !762, line: 218, baseType: !160, size: 32)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5096, file: !762, line: 219, baseType: !103, size: 32, offset: 32)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5096, file: !762, line: 220, baseType: !103, size: 32, offset: 64)
!5101 = !DILocation(line: 0, scope: !5087)
!5102 = !DILocation(line: 253, column: 2, scope: !5087)
!5103 = !DILocation(line: 253, column: 21, scope: !5087)
!5104 = !DILocation(line: 253, column: 27, scope: !5087)
!5105 = !DILocation(line: 255, column: 2, scope: !5087)
!5106 = !DILocation(line: 257, column: 10, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5087, file: !762, line: 257, column: 6)
!5108 = !DILocation(line: 257, column: 22, scope: !5107)
!5109 = !DILocation(line: 257, column: 16, scope: !5107)
!5110 = !DILocation(line: 257, column: 6, scope: !5087)
!5111 = !DILocation(line: 258, column: 3, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5107, file: !762, line: 257, column: 27)
!5113 = !DILocation(line: 258, column: 18, scope: !5112)
!5114 = !DILocation(line: 259, column: 2, scope: !5112)
!5115 = !DILocation(line: 262, column: 1, scope: !5087)
!5116 = !DILocation(line: 261, column: 2, scope: !5087)
!5117 = distinct !DISubprogram(name: "str_out", scope: !762, file: !762, line: 223, type: !5118, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5121)
!5118 = !DISubroutineType(types: !5119)
!5119 = !{!103, !103, !5120}
!5120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5096, size: 32)
!5121 = !{!5122, !5123}
!5122 = !DILocalVariable(name: "c", arg: 1, scope: !5117, file: !762, line: 223, type: !103)
!5123 = !DILocalVariable(name: "ctx", arg: 2, scope: !5117, file: !762, line: 223, type: !5120)
!5124 = !DILocation(line: 0, scope: !5117)
!5125 = !DILocation(line: 225, column: 11, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5117, file: !762, line: 225, column: 6)
!5127 = !DILocation(line: 225, column: 15, scope: !5126)
!5128 = !DILocation(line: 0, scope: !5126)
!5129 = !DILocation(line: 225, column: 23, scope: !5126)
!5130 = !DILocation(line: 225, column: 45, scope: !5126)
!5131 = !DILocation(line: 225, column: 37, scope: !5126)
!5132 = !DILocation(line: 225, column: 6, scope: !5117)
!5133 = !DILocation(line: 226, column: 8, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5126, file: !762, line: 225, column: 50)
!5135 = !DILocation(line: 226, column: 13, scope: !5134)
!5136 = !DILocation(line: 227, column: 3, scope: !5134)
!5137 = !DILocation(line: 230, column: 29, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5117, file: !762, line: 230, column: 6)
!5139 = !DILocation(line: 230, column: 17, scope: !5138)
!5140 = !DILocation(line: 230, column: 6, scope: !5117)
!5141 = !DILocation(line: 231, column: 22, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5138, file: !762, line: 230, column: 34)
!5143 = !DILocation(line: 231, column: 3, scope: !5142)
!5144 = !DILocation(line: 231, column: 26, scope: !5142)
!5145 = !DILocation(line: 232, column: 2, scope: !5142)
!5146 = !DILocation(line: 233, column: 28, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5138, file: !762, line: 232, column: 9)
!5148 = !DILocation(line: 233, column: 22, scope: !5147)
!5149 = !DILocation(line: 233, column: 3, scope: !5147)
!5150 = !DILocation(line: 233, column: 26, scope: !5147)
!5151 = !DILocation(line: 237, column: 1, scope: !5117)
!5152 = distinct !DISubprogram(name: "z_thread_entry", scope: !5153, file: !5153, line: 30, type: !5154, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3031, retainedNodes: !5156)
!5153 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5154 = !DISubroutineType(types: !5155)
!5155 = !{null, !310, !102, !102, !102}
!5156 = !{!5157, !5158, !5159, !5160}
!5157 = !DILocalVariable(name: "entry", arg: 1, scope: !5152, file: !5153, line: 30, type: !310)
!5158 = !DILocalVariable(name: "p1", arg: 2, scope: !5152, file: !5153, line: 31, type: !102)
!5159 = !DILocalVariable(name: "p2", arg: 3, scope: !5152, file: !5153, line: 31, type: !102)
!5160 = !DILocalVariable(name: "p3", arg: 4, scope: !5152, file: !5153, line: 31, type: !102)
!5161 = !DILocation(line: 0, scope: !5152)
!5162 = !DILocation(line: 36, column: 2, scope: !5152)
!5163 = !DILocation(line: 38, column: 17, scope: !5152)
!5164 = !DILocation(line: 38, column: 2, scope: !5152)
!5165 = !DILocation(line: 45, column: 2, scope: !5152)
!5166 = distinct !DISubprogram(name: "k_current_get", scope: !127, file: !127, line: 530, type: !5167, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3031, retainedNodes: !2501)
!5167 = !DISubroutineType(types: !5168)
!5168 = !{!5169}
!5169 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !5170)
!5170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5171, size: 32)
!5171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !5172)
!5172 = !{!5173, !5231, !5243, !5244, !5245, !5246, !5252, !5267}
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5171, file: !199, line: 247, baseType: !5174, size: 384)
!5174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !5175)
!5175 = !{!5176, !5200, !5207, !5208, !5209, !5218, !5219, !5220}
!5176 = !DIDerivedType(tag: DW_TAG_member, scope: !5174, file: !199, line: 60, baseType: !5177, size: 64)
!5177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5174, file: !199, line: 60, size: 64, elements: !5178)
!5178 = !{!5179, !5194}
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5177, file: !199, line: 61, baseType: !5180, size: 64)
!5180 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !5181)
!5181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !5182)
!5182 = !{!5183, !5189}
!5183 = !DIDerivedType(tag: DW_TAG_member, scope: !5181, file: !136, line: 38, baseType: !5184, size: 32)
!5184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5181, file: !136, line: 38, size: 32, elements: !5185)
!5185 = !{!5186, !5188}
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5184, file: !136, line: 39, baseType: !5187, size: 32)
!5187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5181, size: 32)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5184, file: !136, line: 40, baseType: !5187, size: 32)
!5189 = !DIDerivedType(tag: DW_TAG_member, scope: !5181, file: !136, line: 42, baseType: !5190, size: 32, offset: 32)
!5190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5181, file: !136, line: 42, size: 32, elements: !5191)
!5191 = !{!5192, !5193}
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5190, file: !136, line: 43, baseType: !5187, size: 32)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5190, file: !136, line: 44, baseType: !5187, size: 32)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5177, file: !199, line: 62, baseType: !5195, size: 64)
!5195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !5196)
!5196 = !{!5197}
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5195, file: !211, line: 50, baseType: !5198, size: 64)
!5198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5199, size: 64, elements: !216)
!5199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5195, size: 32)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5174, file: !199, line: 68, baseType: !5201, size: 32, offset: 64)
!5201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5202, size: 32)
!5202 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !5203)
!5203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !5204)
!5204 = !{!5205}
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5203, file: !131, line: 232, baseType: !5206, size: 64)
!5206 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !5181)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5174, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5174, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!5209 = !DIDerivedType(tag: DW_TAG_member, scope: !5174, file: !199, line: 90, baseType: !5210, size: 16, offset: 112)
!5210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5174, file: !199, line: 90, size: 16, elements: !5211)
!5211 = !{!5212, !5217}
!5212 = !DIDerivedType(tag: DW_TAG_member, scope: !5210, file: !199, line: 91, baseType: !5213, size: 16)
!5213 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5210, file: !199, line: 91, size: 16, elements: !5214)
!5214 = !{!5215, !5216}
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5213, file: !199, line: 96, baseType: !229, size: 8)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5213, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5210, file: !199, line: 100, baseType: !181, size: 16)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5174, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5174, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5174, file: !199, line: 131, baseType: !5221, size: 192, offset: 192)
!5221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !5222)
!5222 = !{!5223, !5224, !5230}
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5221, file: !131, line: 245, baseType: !5180, size: 64)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5221, file: !131, line: 246, baseType: !5225, size: 32, offset: 64)
!5225 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !5226)
!5226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5227, size: 32)
!5227 = !DISubroutineType(types: !5228)
!5228 = !{null, !5229}
!5229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5221, size: 32)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5221, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5171, file: !199, line: 250, baseType: !5232, size: 288, offset: 384)
!5232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !5233)
!5233 = !{!5234, !5235, !5236, !5237, !5238, !5239, !5240, !5241, !5242}
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5232, file: !248, line: 26, baseType: !111, size: 32)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5232, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5232, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5232, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5232, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5232, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5232, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5232, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5232, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5171, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5171, file: !199, line: 256, baseType: !5202, size: 64, offset: 704)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5171, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5171, file: !199, line: 300, baseType: !5247, size: 96, offset: 800)
!5247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !5248)
!5248 = !{!5249, !5250, !5251}
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5247, file: !199, line: 153, baseType: !22, size: 32)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5247, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5247, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5171, file: !199, line: 325, baseType: !5253, size: 32, offset: 896)
!5253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5254, size: 32)
!5254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !5255)
!5255 = !{!5256, !5262, !5263}
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5254, file: !127, line: 5074, baseType: !5257, size: 96)
!5257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !5258)
!5258 = !{!5259, !5260, !5261}
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5257, file: !274, line: 57, baseType: !277, size: 32)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5257, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5257, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5254, file: !127, line: 5075, baseType: !5202, size: 64, offset: 96)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5254, file: !127, line: 5076, baseType: !5264, size: 32, offset: 160)
!5264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !5265)
!5265 = !{!5266}
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5264, file: !152, line: 52, baseType: !22, size: 32)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5171, file: !199, line: 343, baseType: !5268, size: 64, offset: 928)
!5268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !5269)
!5269 = !{!5270, !5271}
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5268, file: !248, line: 63, baseType: !111, size: 32)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5268, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!5272 = !DILocation(line: 535, column: 9, scope: !5166)
!5273 = !DILocation(line: 535, column: 2, scope: !5166)
!5274 = distinct !DISubprogram(name: "k_thread_abort", scope: !5275, file: !5275, line: 188, type: !5276, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3031, retainedNodes: !5278)
!5275 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!5276 = !DISubroutineType(types: !5277)
!5277 = !{null, !5169}
!5278 = !{!5279}
!5279 = !DILocalVariable(name: "thread", arg: 1, scope: !5274, file: !5275, line: 188, type: !5169)
!5280 = !DILocation(line: 0, scope: !5274)
!5281 = !DILocation(line: 197, column: 2, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5274, file: !5275, line: 197, column: 2)
!5283 = !{i64 2154846339}
!5284 = !DILocation(line: 198, column: 2, scope: !5274)
!5285 = !DILocation(line: 199, column: 1, scope: !5274)
!5286 = distinct !DISubprogram(name: "z_current_get", scope: !5275, file: !5275, line: 173, type: !5167, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3031, retainedNodes: !2501)
!5287 = !DILocation(line: 180, column: 2, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5286, file: !5275, line: 180, column: 2)
!5289 = !{i64 2154846271}
!5290 = !DILocation(line: 181, column: 9, scope: !5286)
!5291 = !DILocation(line: 181, column: 2, scope: !5286)
!5292 = distinct !DISubprogram(name: "sys_heap_free", scope: !5293, file: !5293, line: 163, type: !5294, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5302)
!5293 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5294 = !DISubroutineType(types: !5295)
!5295 = !{null, !5296, !102}
!5296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5297, size: 32)
!5297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !5298)
!5298 = !{!5299, !5300, !5301}
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5297, file: !274, line: 57, baseType: !3050, size: 32)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5297, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5297, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!5302 = !{!5303, !5304, !5305, !5306}
!5303 = !DILocalVariable(name: "heap", arg: 1, scope: !5292, file: !5293, line: 163, type: !5296)
!5304 = !DILocalVariable(name: "mem", arg: 2, scope: !5292, file: !5293, line: 163, type: !102)
!5305 = !DILocalVariable(name: "h", scope: !5292, file: !5293, line: 168, type: !3050)
!5306 = !DILocalVariable(name: "c", scope: !5292, file: !5293, line: 169, type: !3055)
!5307 = !DILocation(line: 0, scope: !5292)
!5308 = !DILocation(line: 165, column: 10, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5292, file: !5293, line: 165, column: 6)
!5310 = !DILocation(line: 165, column: 6, scope: !5292)
!5311 = !DILocation(line: 168, column: 27, scope: !5292)
!5312 = !DILocation(line: 169, column: 16, scope: !5292)
!5313 = !{i32 0, i32 536870912}
!5314 = !DILocation(line: 175, column: 2, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5316, file: !5293, line: 175, column: 2)
!5316 = distinct !DILexicalBlock(scope: !5292, file: !5293, line: 175, column: 2)
!5317 = !DILocation(line: 175, column: 2, scope: !5316)
!5318 = !DILocation(line: 175, column: 2, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5315, file: !5293, line: 175, column: 2)
!5320 = !DILocation(line: 183, column: 2, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5322, file: !5293, line: 183, column: 2)
!5322 = distinct !DILexicalBlock(scope: !5292, file: !5293, line: 183, column: 2)
!5323 = !DILocation(line: 183, column: 2, scope: !5322)
!5324 = !DILocation(line: 183, column: 2, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5321, file: !5293, line: 183, column: 2)
!5326 = !DILocation(line: 187, column: 2, scope: !5292)
!5327 = !DILocation(line: 197, column: 2, scope: !5292)
!5328 = !DILocation(line: 198, column: 1, scope: !5292)
!5329 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5293, file: !5293, line: 157, type: !5330, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5332)
!5330 = !DISubroutineType(types: !5331)
!5331 = !{!3055, !3050, !102}
!5332 = !{!5333, !5334, !5335, !5336}
!5333 = !DILocalVariable(name: "h", arg: 1, scope: !5329, file: !5293, line: 157, type: !3050)
!5334 = !DILocalVariable(name: "p", arg: 2, scope: !5329, file: !5293, line: 157, type: !102)
!5335 = !DILocalVariable(name: "mem", scope: !5329, file: !5293, line: 159, type: !550)
!5336 = !DILocalVariable(name: "base", scope: !5329, file: !5293, line: 159, type: !550)
!5337 = !DILocation(line: 0, scope: !5329)
!5338 = !DILocation(line: 159, column: 39, scope: !5329)
!5339 = !DILocation(line: 160, column: 14, scope: !5329)
!5340 = !DILocation(line: 160, column: 38, scope: !5329)
!5341 = !DILocation(line: 160, column: 46, scope: !5329)
!5342 = !DILocation(line: 160, column: 2, scope: !5329)
!5343 = distinct !DISubprogram(name: "chunk_used", scope: !3037, file: !3037, line: 137, type: !5344, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5346)
!5344 = !DISubroutineType(types: !5345)
!5345 = !{!122, !3050, !3055}
!5346 = !{!5347, !5348}
!5347 = !DILocalVariable(name: "h", arg: 1, scope: !5343, file: !3037, line: 137, type: !3050)
!5348 = !DILocalVariable(name: "c", arg: 2, scope: !5343, file: !3037, line: 137, type: !3055)
!5349 = !DILocation(line: 0, scope: !5343)
!5350 = !DILocation(line: 139, column: 9, scope: !5343)
!5351 = !DILocation(line: 139, column: 42, scope: !5343)
!5352 = !DILocation(line: 139, column: 2, scope: !5343)
!5353 = distinct !DISubprogram(name: "right_chunk", scope: !3037, file: !3037, line: 204, type: !5354, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5356)
!5354 = !DISubroutineType(types: !5355)
!5355 = !{!3055, !3050, !3055}
!5356 = !{!5357, !5358}
!5357 = !DILocalVariable(name: "h", arg: 1, scope: !5353, file: !3037, line: 204, type: !3050)
!5358 = !DILocalVariable(name: "c", arg: 2, scope: !5353, file: !3037, line: 204, type: !3055)
!5359 = !DILocation(line: 0, scope: !5353)
!5360 = !DILocation(line: 206, column: 13, scope: !5353)
!5361 = !DILocation(line: 206, column: 11, scope: !5353)
!5362 = !DILocation(line: 206, column: 2, scope: !5353)
!5363 = distinct !DISubprogram(name: "left_chunk", scope: !3037, file: !3037, line: 199, type: !5354, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5364)
!5364 = !{!5365, !5366}
!5365 = !DILocalVariable(name: "h", arg: 1, scope: !5363, file: !3037, line: 199, type: !3050)
!5366 = !DILocalVariable(name: "c", arg: 2, scope: !5363, file: !3037, line: 199, type: !3055)
!5367 = !DILocation(line: 0, scope: !5363)
!5368 = !DILocation(line: 201, column: 13, scope: !5363)
!5369 = !DILocation(line: 201, column: 11, scope: !5363)
!5370 = !DILocation(line: 201, column: 2, scope: !5363)
!5371 = distinct !DISubprogram(name: "set_chunk_used", scope: !3037, file: !3037, line: 147, type: !5372, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5374)
!5372 = !DISubroutineType(types: !5373)
!5373 = !{null, !3050, !3055, !122}
!5374 = !{!5375, !5376, !5377, !5378, !5379}
!5375 = !DILocalVariable(name: "h", arg: 1, scope: !5371, file: !3037, line: 147, type: !3050)
!5376 = !DILocalVariable(name: "c", arg: 2, scope: !5371, file: !3037, line: 147, type: !3055)
!5377 = !DILocalVariable(name: "used", arg: 3, scope: !5371, file: !3037, line: 147, type: !122)
!5378 = !DILocalVariable(name: "buf", scope: !5371, file: !3037, line: 149, type: !3044)
!5379 = !DILocalVariable(name: "cmem", scope: !5371, file: !3037, line: 150, type: !102)
!5380 = !DILocation(line: 0, scope: !5371)
!5381 = !DILocation(line: 149, column: 22, scope: !5371)
!5382 = !DILocation(line: 0, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5384, file: !3037, line: 159, column: 7)
!5384 = distinct !DILexicalBlock(scope: !5385, file: !3037, line: 158, column: 9)
!5385 = distinct !DILexicalBlock(scope: !5371, file: !3037, line: 152, column: 6)
!5386 = !DILocation(line: 159, column: 7, scope: !5384)
!5387 = !DILocation(line: 165, column: 1, scope: !5371)
!5388 = distinct !DISubprogram(name: "free_chunk", scope: !5293, file: !5293, line: 133, type: !5389, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5391)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{null, !3050, !3055}
!5391 = !{!5392, !5393}
!5392 = !DILocalVariable(name: "h", arg: 1, scope: !5388, file: !5293, line: 133, type: !3050)
!5393 = !DILocalVariable(name: "c", arg: 2, scope: !5388, file: !5293, line: 133, type: !3055)
!5394 = !DILocation(line: 0, scope: !5388)
!5395 = !DILocation(line: 136, column: 21, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5388, file: !5293, line: 136, column: 6)
!5397 = !DILocation(line: 136, column: 7, scope: !5396)
!5398 = !DILocation(line: 136, column: 6, scope: !5388)
!5399 = !DILocation(line: 137, column: 3, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5396, file: !5293, line: 136, column: 41)
!5401 = !DILocation(line: 138, column: 22, scope: !5400)
!5402 = !DILocation(line: 138, column: 3, scope: !5400)
!5403 = !DILocation(line: 139, column: 2, scope: !5400)
!5404 = !DILocation(line: 142, column: 21, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5388, file: !5293, line: 142, column: 6)
!5406 = !DILocation(line: 142, column: 7, scope: !5405)
!5407 = !DILocation(line: 142, column: 6, scope: !5388)
!5408 = !DILocation(line: 143, column: 3, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5405, file: !5293, line: 142, column: 40)
!5410 = !DILocation(line: 144, column: 19, scope: !5409)
!5411 = !DILocation(line: 144, column: 3, scope: !5409)
!5412 = !DILocation(line: 145, column: 7, scope: !5409)
!5413 = !DILocation(line: 146, column: 2, scope: !5409)
!5414 = !DILocation(line: 148, column: 2, scope: !5388)
!5415 = !DILocation(line: 149, column: 1, scope: !5388)
!5416 = distinct !DISubprogram(name: "free_list_remove", scope: !5293, file: !5293, line: 60, type: !5389, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5417)
!5417 = !{!5418, !5419, !5420}
!5418 = !DILocalVariable(name: "h", arg: 1, scope: !5416, file: !5293, line: 60, type: !3050)
!5419 = !DILocalVariable(name: "c", arg: 2, scope: !5416, file: !5293, line: 60, type: !3055)
!5420 = !DILocalVariable(name: "bidx", scope: !5421, file: !5293, line: 63, type: !103)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !5293, line: 62, column: 31)
!5422 = distinct !DILexicalBlock(scope: !5416, file: !5293, line: 62, column: 6)
!5423 = !DILocation(line: 0, scope: !5416)
!5424 = !DILocation(line: 63, column: 28, scope: !5421)
!5425 = !{i32 0, i32 32768}
!5426 = !DILocation(line: 63, column: 14, scope: !5421)
!5427 = !DILocation(line: 0, scope: !5421)
!5428 = !DILocation(line: 64, column: 3, scope: !5421)
!5429 = !DILocation(line: 66, column: 1, scope: !5416)
!5430 = distinct !DISubprogram(name: "merge_chunks", scope: !5293, file: !5293, line: 125, type: !5431, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5433)
!5431 = !DISubroutineType(types: !5432)
!5432 = !{null, !3050, !3055, !3055}
!5433 = !{!5434, !5435, !5436, !5437}
!5434 = !DILocalVariable(name: "h", arg: 1, scope: !5430, file: !5293, line: 125, type: !3050)
!5435 = !DILocalVariable(name: "lc", arg: 2, scope: !5430, file: !5293, line: 125, type: !3055)
!5436 = !DILocalVariable(name: "rc", arg: 3, scope: !5430, file: !5293, line: 125, type: !3055)
!5437 = !DILocalVariable(name: "newsz", scope: !5430, file: !5293, line: 127, type: !5438)
!5438 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !3037, line: 62, baseType: !111)
!5439 = !DILocation(line: 0, scope: !5430)
!5440 = !DILocation(line: 127, column: 20, scope: !5430)
!5441 = !DILocation(line: 127, column: 40, scope: !5430)
!5442 = !DILocation(line: 127, column: 38, scope: !5430)
!5443 = !DILocation(line: 129, column: 2, scope: !5430)
!5444 = !DILocation(line: 130, column: 25, scope: !5430)
!5445 = !DILocation(line: 130, column: 2, scope: !5430)
!5446 = !DILocation(line: 131, column: 1, scope: !5430)
!5447 = distinct !DISubprogram(name: "free_list_add", scope: !5293, file: !5293, line: 98, type: !5389, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5448)
!5448 = !{!5449, !5450, !5451}
!5449 = !DILocalVariable(name: "h", arg: 1, scope: !5447, file: !5293, line: 98, type: !3050)
!5450 = !DILocalVariable(name: "c", arg: 2, scope: !5447, file: !5293, line: 98, type: !3055)
!5451 = !DILocalVariable(name: "bidx", scope: !5452, file: !5293, line: 101, type: !103)
!5452 = distinct !DILexicalBlock(scope: !5453, file: !5293, line: 100, column: 31)
!5453 = distinct !DILexicalBlock(scope: !5447, file: !5293, line: 100, column: 6)
!5454 = !DILocation(line: 0, scope: !5447)
!5455 = !DILocation(line: 101, column: 28, scope: !5452)
!5456 = !DILocation(line: 101, column: 14, scope: !5452)
!5457 = !DILocation(line: 0, scope: !5452)
!5458 = !DILocation(line: 102, column: 3, scope: !5452)
!5459 = !DILocation(line: 104, column: 1, scope: !5447)
!5460 = distinct !DISubprogram(name: "chunk_size", scope: !3037, file: !3037, line: 142, type: !5461, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5463)
!5461 = !DISubroutineType(types: !5462)
!5462 = !{!5438, !3050, !3055}
!5463 = !{!5464, !5465}
!5464 = !DILocalVariable(name: "h", arg: 1, scope: !5460, file: !3037, line: 142, type: !3050)
!5465 = !DILocalVariable(name: "c", arg: 2, scope: !5460, file: !3037, line: 142, type: !3055)
!5466 = !DILocation(line: 0, scope: !5460)
!5467 = !DILocation(line: 144, column: 9, scope: !5460)
!5468 = !DILocation(line: 144, column: 42, scope: !5460)
!5469 = !DILocation(line: 144, column: 2, scope: !5460)
!5470 = distinct !DISubprogram(name: "bucket_idx", scope: !3037, file: !3037, line: 250, type: !5471, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5473)
!5471 = !DISubroutineType(types: !5472)
!5472 = !{!103, !3050, !5438}
!5473 = !{!5474, !5475, !5476}
!5474 = !DILocalVariable(name: "h", arg: 1, scope: !5470, file: !3037, line: 250, type: !3050)
!5475 = !DILocalVariable(name: "sz", arg: 2, scope: !5470, file: !3037, line: 250, type: !5438)
!5476 = !DILocalVariable(name: "usable_sz", scope: !5470, file: !3037, line: 252, type: !32)
!5477 = !DILocation(line: 0, scope: !5470)
!5478 = !DILocation(line: 252, column: 32, scope: !5470)
!5479 = !DILocation(line: 252, column: 30, scope: !5470)
!5480 = !DILocation(line: 252, column: 50, scope: !5470)
!5481 = !DILocation(line: 253, column: 14, scope: !5470)
!5482 = !{i32 0, i32 33}
!5483 = !DILocation(line: 253, column: 12, scope: !5470)
!5484 = !DILocation(line: 253, column: 2, scope: !5470)
!5485 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5293, file: !5293, line: 68, type: !5486, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5488)
!5486 = !DISubroutineType(types: !5487)
!5487 = !{null, !3050, !3055, !103}
!5488 = !{!5489, !5490, !5491, !5492, !5494, !5497}
!5489 = !DILocalVariable(name: "h", arg: 1, scope: !5485, file: !5293, line: 68, type: !3050)
!5490 = !DILocalVariable(name: "c", arg: 2, scope: !5485, file: !5293, line: 68, type: !3055)
!5491 = !DILocalVariable(name: "bidx", arg: 3, scope: !5485, file: !5293, line: 68, type: !103)
!5492 = !DILocalVariable(name: "b", scope: !5485, file: !5293, line: 70, type: !5493)
!5493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 32)
!5494 = !DILocalVariable(name: "second", scope: !5495, file: !5293, line: 84, type: !3055)
!5495 = distinct !DILexicalBlock(scope: !5496, file: !5293, line: 80, column: 9)
!5496 = distinct !DILexicalBlock(scope: !5485, file: !5293, line: 72, column: 6)
!5497 = !DILocalVariable(name: "first", scope: !5495, file: !5293, line: 85, type: !3055)
!5498 = !DILocation(line: 0, scope: !5485)
!5499 = !DILocation(line: 72, column: 9, scope: !5496)
!5500 = !DILocation(line: 72, column: 14, scope: !5496)
!5501 = !DILocation(line: 72, column: 6, scope: !5485)
!5502 = !DILocation(line: 76, column: 23, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5496, file: !5293, line: 72, column: 21)
!5504 = !DILocation(line: 76, column: 6, scope: !5503)
!5505 = !DILocation(line: 76, column: 20, scope: !5503)
!5506 = !DILocation(line: 77, column: 11, scope: !5503)
!5507 = !DILocation(line: 78, column: 3, scope: !5503)
!5508 = !DILocation(line: 79, column: 3, scope: !5503)
!5509 = !DILocation(line: 80, column: 2, scope: !5503)
!5510 = !DILocation(line: 0, scope: !5495)
!5511 = !DILocation(line: 85, column: 21, scope: !5495)
!5512 = !{i32 0, i32 65536}
!5513 = !DILocation(line: 87, column: 3, scope: !5495)
!5514 = !DILocation(line: 88, column: 3, scope: !5495)
!5515 = !DILocation(line: 89, column: 3, scope: !5495)
!5516 = !DILocation(line: 90, column: 3, scope: !5495)
!5517 = !DILocation(line: 96, column: 1, scope: !5485)
!5518 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !3037, file: !3037, line: 187, type: !5431, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5519)
!5519 = !{!5520, !5521, !5522}
!5520 = !DILocalVariable(name: "h", arg: 1, scope: !5518, file: !3037, line: 187, type: !3050)
!5521 = !DILocalVariable(name: "c", arg: 2, scope: !5518, file: !3037, line: 187, type: !3055)
!5522 = !DILocalVariable(name: "prev", arg: 3, scope: !5518, file: !3037, line: 188, type: !3055)
!5523 = !DILocation(line: 0, scope: !5518)
!5524 = !DILocation(line: 190, column: 2, scope: !5518)
!5525 = !DILocation(line: 191, column: 1, scope: !5518)
!5526 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !3037, file: !3037, line: 193, type: !5431, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5527)
!5527 = !{!5528, !5529, !5530}
!5528 = !DILocalVariable(name: "h", arg: 1, scope: !5526, file: !3037, line: 193, type: !3050)
!5529 = !DILocalVariable(name: "c", arg: 2, scope: !5526, file: !3037, line: 193, type: !3055)
!5530 = !DILocalVariable(name: "next", arg: 3, scope: !5526, file: !3037, line: 194, type: !3055)
!5531 = !DILocation(line: 0, scope: !5526)
!5532 = !DILocation(line: 196, column: 2, scope: !5526)
!5533 = !DILocation(line: 197, column: 1, scope: !5526)
!5534 = distinct !DISubprogram(name: "prev_free_chunk", scope: !3037, file: !3037, line: 177, type: !5354, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5535)
!5535 = !{!5536, !5537}
!5536 = !DILocalVariable(name: "h", arg: 1, scope: !5534, file: !3037, line: 177, type: !3050)
!5537 = !DILocalVariable(name: "c", arg: 2, scope: !5534, file: !3037, line: 177, type: !3055)
!5538 = !DILocation(line: 0, scope: !5534)
!5539 = !DILocation(line: 179, column: 9, scope: !5534)
!5540 = !DILocation(line: 179, column: 2, scope: !5534)
!5541 = distinct !DISubprogram(name: "chunk_field", scope: !3037, file: !3037, line: 107, type: !5542, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5544)
!5542 = !DISubroutineType(types: !5543)
!5543 = !{!3055, !3050, !3055, !3036}
!5544 = !{!5545, !5546, !5547, !5548, !5549}
!5545 = !DILocalVariable(name: "h", arg: 1, scope: !5541, file: !3037, line: 107, type: !3050)
!5546 = !DILocalVariable(name: "c", arg: 2, scope: !5541, file: !3037, line: 107, type: !3055)
!5547 = !DILocalVariable(name: "f", arg: 3, scope: !5541, file: !3037, line: 108, type: !3036)
!5548 = !DILocalVariable(name: "buf", scope: !5541, file: !3037, line: 110, type: !3044)
!5549 = !DILocalVariable(name: "cmem", scope: !5541, file: !3037, line: 111, type: !102)
!5550 = !DILocation(line: 0, scope: !5541)
!5551 = !DILocation(line: 110, column: 22, scope: !5541)
!5552 = !DILocation(line: 111, column: 15, scope: !5541)
!5553 = !DILocation(line: 116, column: 11, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5555, file: !3037, line: 115, column: 9)
!5555 = distinct !DILexicalBlock(scope: !5541, file: !3037, line: 113, column: 6)
!5556 = !DILocation(line: 116, column: 10, scope: !5554)
!5557 = !DILocation(line: 118, column: 1, scope: !5541)
!5558 = distinct !DISubprogram(name: "chunk_buf", scope: !3037, file: !3037, line: 101, type: !5559, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5561)
!5559 = !DISubroutineType(types: !5560)
!5560 = !{!3044, !3050}
!5561 = !{!5562}
!5562 = !DILocalVariable(name: "h", arg: 1, scope: !5558, file: !3037, line: 101, type: !3050)
!5563 = !DILocation(line: 0, scope: !5558)
!5564 = !DILocation(line: 104, column: 9, scope: !5558)
!5565 = !DILocation(line: 104, column: 2, scope: !5558)
!5566 = distinct !DISubprogram(name: "chunk_set", scope: !3037, file: !3037, line: 120, type: !5567, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5569)
!5567 = !DISubroutineType(types: !5568)
!5568 = !{null, !3050, !3055, !3036, !3055}
!5569 = !{!5570, !5571, !5572, !5573, !5574, !5575}
!5570 = !DILocalVariable(name: "h", arg: 1, scope: !5566, file: !3037, line: 120, type: !3050)
!5571 = !DILocalVariable(name: "c", arg: 2, scope: !5566, file: !3037, line: 120, type: !3055)
!5572 = !DILocalVariable(name: "f", arg: 3, scope: !5566, file: !3037, line: 121, type: !3036)
!5573 = !DILocalVariable(name: "val", arg: 4, scope: !5566, file: !3037, line: 121, type: !3055)
!5574 = !DILocalVariable(name: "buf", scope: !5566, file: !3037, line: 125, type: !3044)
!5575 = !DILocalVariable(name: "cmem", scope: !5566, file: !3037, line: 126, type: !102)
!5576 = !DILocation(line: 0, scope: !5566)
!5577 = !DILocation(line: 125, column: 22, scope: !5566)
!5578 = !DILocation(line: 126, column: 15, scope: !5566)
!5579 = !DILocation(line: 133, column: 27, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5581, file: !3037, line: 131, column: 9)
!5581 = distinct !DILexicalBlock(scope: !5566, file: !3037, line: 128, column: 6)
!5582 = !DILocation(line: 133, column: 4, scope: !5580)
!5583 = !DILocation(line: 133, column: 3, scope: !5580)
!5584 = !DILocation(line: 133, column: 25, scope: !5580)
!5585 = !DILocation(line: 135, column: 1, scope: !5566)
!5586 = distinct !DISubprogram(name: "min_chunk_size", scope: !3037, file: !3037, line: 240, type: !5587, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5589)
!5587 = !DISubroutineType(types: !5588)
!5588 = !{!5438, !3050}
!5589 = !{!5590}
!5590 = !DILocalVariable(name: "h", arg: 1, scope: !5586, file: !3037, line: 240, type: !3050)
!5591 = !DILocation(line: 0, scope: !5586)
!5592 = !DILocation(line: 242, column: 9, scope: !5586)
!5593 = !DILocation(line: 242, column: 2, scope: !5586)
!5594 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !3037, file: !3037, line: 235, type: !5595, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5597)
!5595 = !DISubroutineType(types: !5596)
!5596 = !{!5438, !3050, !156}
!5597 = !{!5598, !5599}
!5598 = !DILocalVariable(name: "h", arg: 1, scope: !5594, file: !3037, line: 235, type: !3050)
!5599 = !DILocalVariable(name: "bytes", arg: 2, scope: !5594, file: !3037, line: 235, type: !156)
!5600 = !DILocation(line: 0, scope: !5594)
!5601 = !DILocation(line: 237, column: 39, scope: !5594)
!5602 = !DILocation(line: 237, column: 9, scope: !5594)
!5603 = !DILocation(line: 237, column: 2, scope: !5594)
!5604 = distinct !DISubprogram(name: "chunksz", scope: !3037, file: !3037, line: 230, type: !5605, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5607)
!5605 = !DISubroutineType(types: !5606)
!5606 = !{!5438, !156}
!5607 = !{!5608}
!5608 = !DILocalVariable(name: "bytes", arg: 1, scope: !5604, file: !3037, line: 230, type: !156)
!5609 = !DILocation(line: 0, scope: !5604)
!5610 = !DILocation(line: 232, column: 29, scope: !5604)
!5611 = !DILocation(line: 232, column: 35, scope: !5604)
!5612 = !DILocation(line: 232, column: 2, scope: !5604)
!5613 = distinct !DISubprogram(name: "set_chunk_size", scope: !3037, file: !3037, line: 172, type: !5614, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5616)
!5614 = !DISubroutineType(types: !5615)
!5615 = !{null, !3050, !3055, !5438}
!5616 = !{!5617, !5618, !5619}
!5617 = !DILocalVariable(name: "h", arg: 1, scope: !5613, file: !3037, line: 172, type: !3050)
!5618 = !DILocalVariable(name: "c", arg: 2, scope: !5613, file: !3037, line: 172, type: !3055)
!5619 = !DILocalVariable(name: "size", arg: 3, scope: !5613, file: !3037, line: 172, type: !5438)
!5620 = !DILocation(line: 0, scope: !5613)
!5621 = !DILocation(line: 174, column: 38, scope: !5613)
!5622 = !DILocation(line: 174, column: 2, scope: !5613)
!5623 = !DILocation(line: 175, column: 1, scope: !5613)
!5624 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !3037, file: !3037, line: 209, type: !5614, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5625)
!5625 = !{!5626, !5627, !5628}
!5626 = !DILocalVariable(name: "h", arg: 1, scope: !5624, file: !3037, line: 209, type: !3050)
!5627 = !DILocalVariable(name: "c", arg: 2, scope: !5624, file: !3037, line: 209, type: !3055)
!5628 = !DILocalVariable(name: "size", arg: 3, scope: !5624, file: !3037, line: 210, type: !5438)
!5629 = !DILocation(line: 0, scope: !5624)
!5630 = !DILocation(line: 212, column: 2, scope: !5624)
!5631 = !DILocation(line: 213, column: 1, scope: !5624)
!5632 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5293, file: !5293, line: 34, type: !5486, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5633)
!5633 = !{!5634, !5635, !5636, !5637, !5638, !5641}
!5634 = !DILocalVariable(name: "h", arg: 1, scope: !5632, file: !5293, line: 34, type: !3050)
!5635 = !DILocalVariable(name: "c", arg: 2, scope: !5632, file: !5293, line: 34, type: !3055)
!5636 = !DILocalVariable(name: "bidx", arg: 3, scope: !5632, file: !5293, line: 34, type: !103)
!5637 = !DILocalVariable(name: "b", scope: !5632, file: !5293, line: 36, type: !5493)
!5638 = !DILocalVariable(name: "first", scope: !5639, file: !5293, line: 47, type: !3055)
!5639 = distinct !DILexicalBlock(scope: !5640, file: !5293, line: 46, column: 9)
!5640 = distinct !DILexicalBlock(scope: !5632, file: !5293, line: 42, column: 6)
!5641 = !DILocalVariable(name: "second", scope: !5639, file: !5293, line: 48, type: !3055)
!5642 = !DILocation(line: 0, scope: !5632)
!5643 = !DILocation(line: 36, column: 29, scope: !5632)
!5644 = !DILocation(line: 42, column: 6, scope: !5640)
!5645 = !DILocation(line: 42, column: 28, scope: !5640)
!5646 = !DILocation(line: 42, column: 6, scope: !5632)
!5647 = !DILocation(line: 44, column: 24, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5640, file: !5293, line: 42, column: 34)
!5649 = !DILocation(line: 44, column: 23, scope: !5648)
!5650 = !DILocation(line: 44, column: 6, scope: !5648)
!5651 = !DILocation(line: 44, column: 20, scope: !5648)
!5652 = !DILocation(line: 45, column: 6, scope: !5648)
!5653 = !DILocation(line: 45, column: 11, scope: !5648)
!5654 = !DILocation(line: 46, column: 2, scope: !5648)
!5655 = !DILocation(line: 47, column: 21, scope: !5639)
!5656 = !DILocation(line: 0, scope: !5639)
!5657 = !DILocation(line: 50, column: 6, scope: !5639)
!5658 = !DILocation(line: 50, column: 11, scope: !5639)
!5659 = !DILocation(line: 51, column: 3, scope: !5639)
!5660 = !DILocation(line: 52, column: 3, scope: !5639)
!5661 = !DILocation(line: 58, column: 1, scope: !5632)
!5662 = distinct !DISubprogram(name: "next_free_chunk", scope: !3037, file: !3037, line: 182, type: !5354, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5663)
!5663 = !{!5664, !5665}
!5664 = !DILocalVariable(name: "h", arg: 1, scope: !5662, file: !3037, line: 182, type: !3050)
!5665 = !DILocalVariable(name: "c", arg: 2, scope: !5662, file: !3037, line: 182, type: !3055)
!5666 = !DILocation(line: 0, scope: !5662)
!5667 = !DILocation(line: 184, column: 9, scope: !5662)
!5668 = !DILocation(line: 184, column: 2, scope: !5662)
!5669 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5293, file: !5293, line: 200, type: !5670, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5672)
!5670 = !DISubroutineType(types: !5671)
!5671 = !{!156, !5296, !102}
!5672 = !{!5673, !5674, !5675, !5676, !5677, !5678, !5679}
!5673 = !DILocalVariable(name: "heap", arg: 1, scope: !5669, file: !5293, line: 200, type: !5296)
!5674 = !DILocalVariable(name: "mem", arg: 2, scope: !5669, file: !5293, line: 200, type: !102)
!5675 = !DILocalVariable(name: "h", scope: !5669, file: !5293, line: 202, type: !3050)
!5676 = !DILocalVariable(name: "c", scope: !5669, file: !5293, line: 203, type: !3055)
!5677 = !DILocalVariable(name: "addr", scope: !5669, file: !5293, line: 204, type: !156)
!5678 = !DILocalVariable(name: "chunk_base", scope: !5669, file: !5293, line: 205, type: !156)
!5679 = !DILocalVariable(name: "chunk_sz", scope: !5669, file: !5293, line: 206, type: !156)
!5680 = !DILocation(line: 0, scope: !5669)
!5681 = !DILocation(line: 202, column: 27, scope: !5669)
!5682 = !DILocation(line: 203, column: 16, scope: !5669)
!5683 = !DILocation(line: 204, column: 16, scope: !5669)
!5684 = !DILocation(line: 205, column: 31, scope: !5669)
!5685 = !DILocation(line: 205, column: 22, scope: !5669)
!5686 = !DILocation(line: 206, column: 20, scope: !5669)
!5687 = !DILocation(line: 206, column: 37, scope: !5669)
!5688 = !DILocation(line: 208, column: 26, scope: !5669)
!5689 = !DILocation(line: 208, column: 18, scope: !5669)
!5690 = !DILocation(line: 208, column: 2, scope: !5669)
!5691 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5293, file: !5293, line: 263, type: !5692, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5694)
!5692 = !DISubroutineType(types: !5693)
!5693 = !{!102, !5296, !156}
!5694 = !{!5695, !5696, !5697, !5698, !5699, !5700}
!5695 = !DILocalVariable(name: "heap", arg: 1, scope: !5691, file: !5293, line: 263, type: !5296)
!5696 = !DILocalVariable(name: "bytes", arg: 2, scope: !5691, file: !5293, line: 263, type: !156)
!5697 = !DILocalVariable(name: "h", scope: !5691, file: !5293, line: 265, type: !3050)
!5698 = !DILocalVariable(name: "mem", scope: !5691, file: !5293, line: 266, type: !102)
!5699 = !DILocalVariable(name: "chunk_sz", scope: !5691, file: !5293, line: 272, type: !5438)
!5700 = !DILocalVariable(name: "c", scope: !5691, file: !5293, line: 273, type: !3055)
!5701 = !DILocation(line: 0, scope: !5691)
!5702 = !DILocation(line: 265, column: 27, scope: !5691)
!5703 = !DILocation(line: 268, column: 12, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5691, file: !5293, line: 268, column: 6)
!5705 = !DILocation(line: 268, column: 18, scope: !5704)
!5706 = !DILocation(line: 268, column: 21, scope: !5704)
!5707 = !DILocation(line: 268, column: 6, scope: !5691)
!5708 = !DILocation(line: 272, column: 23, scope: !5691)
!5709 = !DILocation(line: 273, column: 16, scope: !5691)
!5710 = !DILocation(line: 274, column: 8, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5691, file: !5293, line: 274, column: 6)
!5712 = !DILocation(line: 274, column: 6, scope: !5691)
!5713 = !DILocation(line: 279, column: 6, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5691, file: !5293, line: 279, column: 6)
!5715 = !DILocation(line: 279, column: 23, scope: !5714)
!5716 = !DILocation(line: 279, column: 6, scope: !5691)
!5717 = !DILocation(line: 280, column: 24, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5714, file: !5293, line: 279, column: 35)
!5719 = !DILocation(line: 280, column: 3, scope: !5718)
!5720 = !DILocation(line: 281, column: 3, scope: !5718)
!5721 = !DILocation(line: 282, column: 2, scope: !5718)
!5722 = !DILocation(line: 284, column: 2, scope: !5691)
!5723 = !DILocation(line: 286, column: 8, scope: !5691)
!5724 = !DILocation(line: 298, column: 2, scope: !5691)
!5725 = !DILocation(line: 299, column: 1, scope: !5691)
!5726 = distinct !DISubprogram(name: "size_too_big", scope: !3037, file: !3037, line: 256, type: !5727, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5729)
!5727 = !DISubroutineType(types: !5728)
!5728 = !{!122, !3050, !156}
!5729 = !{!5730, !5731}
!5730 = !DILocalVariable(name: "h", arg: 1, scope: !5726, file: !3037, line: 256, type: !3050)
!5731 = !DILocalVariable(name: "bytes", arg: 2, scope: !5726, file: !3037, line: 256, type: !156)
!5732 = !DILocation(line: 0, scope: !5726)
!5733 = !DILocation(line: 262, column: 16, scope: !5726)
!5734 = !DILocation(line: 262, column: 36, scope: !5726)
!5735 = !DILocation(line: 262, column: 30, scope: !5726)
!5736 = !DILocation(line: 262, column: 2, scope: !5726)
!5737 = distinct !DISubprogram(name: "alloc_chunk", scope: !5293, file: !5293, line: 211, type: !5738, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5740)
!5738 = !DISubroutineType(types: !5739)
!5739 = !{!3055, !3050, !5438}
!5740 = !{!5741, !5742, !5743, !5744, !5745, !5748, !5749, !5751, !5752, !5755}
!5741 = !DILocalVariable(name: "h", arg: 1, scope: !5737, file: !5293, line: 211, type: !3050)
!5742 = !DILocalVariable(name: "sz", arg: 2, scope: !5737, file: !5293, line: 211, type: !5438)
!5743 = !DILocalVariable(name: "bi", scope: !5737, file: !5293, line: 213, type: !103)
!5744 = !DILocalVariable(name: "b", scope: !5737, file: !5293, line: 214, type: !5493)
!5745 = !DILocalVariable(name: "first", scope: !5746, file: !5293, line: 233, type: !3055)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !5293, line: 232, column: 15)
!5747 = distinct !DILexicalBlock(scope: !5737, file: !5293, line: 232, column: 6)
!5748 = !DILocalVariable(name: "i", scope: !5746, file: !5293, line: 234, type: !103)
!5749 = !DILocalVariable(name: "c", scope: !5750, file: !5293, line: 236, type: !3055)
!5750 = distinct !DILexicalBlock(scope: !5746, file: !5293, line: 235, column: 6)
!5751 = !DILocalVariable(name: "bmask", scope: !5737, file: !5293, line: 249, type: !111)
!5752 = !DILocalVariable(name: "minbucket", scope: !5753, file: !5293, line: 252, type: !103)
!5753 = distinct !DILexicalBlock(scope: !5754, file: !5293, line: 251, column: 19)
!5754 = distinct !DILexicalBlock(scope: !5737, file: !5293, line: 251, column: 6)
!5755 = !DILocalVariable(name: "c", scope: !5753, file: !5293, line: 253, type: !3055)
!5756 = !DILocation(line: 0, scope: !5737)
!5757 = !DILocation(line: 213, column: 11, scope: !5737)
!5758 = !DILocation(line: 232, column: 9, scope: !5747)
!5759 = !DILocation(line: 232, column: 6, scope: !5747)
!5760 = !DILocation(line: 232, column: 6, scope: !5737)
!5761 = !DILocation(line: 236, column: 21, scope: !5750)
!5762 = !DILocation(line: 0, scope: !5746)
!5763 = !DILocation(line: 0, scope: !5750)
!5764 = !DILocation(line: 237, column: 8, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5750, file: !5293, line: 237, column: 8)
!5766 = !DILocation(line: 237, column: 25, scope: !5765)
!5767 = !DILocation(line: 237, column: 8, scope: !5750)
!5768 = !DILocation(line: 238, column: 5, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5765, file: !5293, line: 237, column: 32)
!5770 = !DILocation(line: 241, column: 14, scope: !5750)
!5771 = !DILocation(line: 241, column: 12, scope: !5750)
!5772 = !DILocation(line: 243, column: 12, scope: !5746)
!5773 = !DILocation(line: 243, column: 16, scope: !5746)
!5774 = distinct !{!5774, !5775, !5776}
!5775 = !DILocation(line: 235, column: 3, scope: !5746)
!5776 = !DILocation(line: 243, column: 35, scope: !5746)
!5777 = !DILocation(line: 249, column: 22, scope: !5737)
!5778 = !DILocation(line: 249, column: 39, scope: !5737)
!5779 = !DILocation(line: 249, column: 36, scope: !5737)
!5780 = !DILocation(line: 251, column: 12, scope: !5754)
!5781 = !DILocation(line: 251, column: 6, scope: !5737)
!5782 = !DILocation(line: 252, column: 19, scope: !5753)
!5783 = !DILocation(line: 0, scope: !5753)
!5784 = !DILocation(line: 253, column: 39, scope: !5753)
!5785 = !DILocation(line: 255, column: 3, scope: !5753)
!5786 = !DILocation(line: 261, column: 1, scope: !5737)
!5787 = distinct !DISubprogram(name: "split_chunks", scope: !5293, file: !5293, line: 109, type: !5431, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5788)
!5788 = !{!5789, !5790, !5791, !5792, !5793, !5794}
!5789 = !DILocalVariable(name: "h", arg: 1, scope: !5787, file: !5293, line: 109, type: !3050)
!5790 = !DILocalVariable(name: "lc", arg: 2, scope: !5787, file: !5293, line: 109, type: !3055)
!5791 = !DILocalVariable(name: "rc", arg: 3, scope: !5787, file: !5293, line: 109, type: !3055)
!5792 = !DILocalVariable(name: "sz0", scope: !5787, file: !5293, line: 114, type: !5438)
!5793 = !DILocalVariable(name: "lsz", scope: !5787, file: !5293, line: 115, type: !5438)
!5794 = !DILocalVariable(name: "rsz", scope: !5787, file: !5293, line: 116, type: !5438)
!5795 = !DILocation(line: 0, scope: !5787)
!5796 = !DILocation(line: 114, column: 18, scope: !5787)
!5797 = !DILocation(line: 115, column: 21, scope: !5787)
!5798 = !DILocation(line: 116, column: 22, scope: !5787)
!5799 = !DILocation(line: 118, column: 2, scope: !5787)
!5800 = !DILocation(line: 119, column: 2, scope: !5787)
!5801 = !DILocation(line: 120, column: 2, scope: !5787)
!5802 = !DILocation(line: 121, column: 25, scope: !5787)
!5803 = !DILocation(line: 121, column: 2, scope: !5787)
!5804 = !DILocation(line: 122, column: 1, scope: !5787)
!5805 = distinct !DISubprogram(name: "chunk_mem", scope: !5293, file: !5293, line: 24, type: !5806, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5808)
!5806 = !DISubroutineType(types: !5807)
!5807 = !{!102, !3050, !3055}
!5808 = !{!5809, !5810, !5811, !5812}
!5809 = !DILocalVariable(name: "h", arg: 1, scope: !5805, file: !5293, line: 24, type: !3050)
!5810 = !DILocalVariable(name: "c", arg: 2, scope: !5805, file: !5293, line: 24, type: !3055)
!5811 = !DILocalVariable(name: "buf", scope: !5805, file: !5293, line: 26, type: !3044)
!5812 = !DILocalVariable(name: "ret", scope: !5805, file: !5293, line: 27, type: !550)
!5813 = !DILocation(line: 0, scope: !5805)
!5814 = !DILocation(line: 26, column: 22, scope: !5805)
!5815 = !DILocation(line: 27, column: 38, scope: !5805)
!5816 = !DILocation(line: 31, column: 2, scope: !5805)
!5817 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5293, file: !5293, line: 301, type: !5818, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5820)
!5818 = !DISubroutineType(types: !5819)
!5819 = !{!102, !5296, !156, !156}
!5820 = !{!5821, !5822, !5823, !5824, !5825, !5826, !5827, !5828, !5829, !5830, !5831, !5832}
!5821 = !DILocalVariable(name: "heap", arg: 1, scope: !5817, file: !5293, line: 301, type: !5296)
!5822 = !DILocalVariable(name: "align", arg: 2, scope: !5817, file: !5293, line: 301, type: !156)
!5823 = !DILocalVariable(name: "bytes", arg: 3, scope: !5817, file: !5293, line: 301, type: !156)
!5824 = !DILocalVariable(name: "h", scope: !5817, file: !5293, line: 303, type: !3050)
!5825 = !DILocalVariable(name: "gap", scope: !5817, file: !5293, line: 304, type: !156)
!5826 = !DILocalVariable(name: "rew", scope: !5817, file: !5293, line: 304, type: !156)
!5827 = !DILocalVariable(name: "padded_sz", scope: !5817, file: !5293, line: 335, type: !5438)
!5828 = !DILocalVariable(name: "c0", scope: !5817, file: !5293, line: 336, type: !3055)
!5829 = !DILocalVariable(name: "mem", scope: !5817, file: !5293, line: 341, type: !550)
!5830 = !DILocalVariable(name: "end", scope: !5817, file: !5293, line: 345, type: !3044)
!5831 = !DILocalVariable(name: "c", scope: !5817, file: !5293, line: 348, type: !3055)
!5832 = !DILocalVariable(name: "c_end", scope: !5817, file: !5293, line: 349, type: !3055)
!5833 = !DILocation(line: 0, scope: !5817)
!5834 = !DILocation(line: 303, column: 27, scope: !5817)
!5835 = !DILocation(line: 313, column: 16, scope: !5817)
!5836 = !DILocation(line: 313, column: 14, scope: !5817)
!5837 = !DILocation(line: 314, column: 12, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5817, file: !5293, line: 314, column: 6)
!5839 = !DILocation(line: 314, column: 6, scope: !5817)
!5840 = !DILocation(line: 315, column: 9, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5838, file: !5293, line: 314, column: 20)
!5842 = !DILocation(line: 316, column: 9, scope: !5841)
!5843 = !DILocation(line: 318, column: 13, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5845, file: !5293, line: 318, column: 7)
!5845 = distinct !DILexicalBlock(scope: !5838, file: !5293, line: 317, column: 9)
!5846 = !DILocation(line: 318, column: 7, scope: !5845)
!5847 = !DILocation(line: 319, column: 11, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5844, file: !5293, line: 318, column: 39)
!5849 = !DILocation(line: 319, column: 4, scope: !5848)
!5850 = !DILocation(line: 0, scope: !5838)
!5851 = !DILocation(line: 324, column: 2, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5853, file: !5293, line: 324, column: 2)
!5853 = distinct !DILexicalBlock(scope: !5817, file: !5293, line: 324, column: 2)
!5854 = !DILocation(line: 324, column: 2, scope: !5853)
!5855 = !DILocation(line: 324, column: 2, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5852, file: !5293, line: 324, column: 2)
!5857 = !DILocation(line: 326, column: 12, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5817, file: !5293, line: 326, column: 6)
!5859 = !DILocation(line: 326, column: 17, scope: !5858)
!5860 = !DILocation(line: 326, column: 20, scope: !5858)
!5861 = !DILocation(line: 326, column: 6, scope: !5817)
!5862 = !DILocation(line: 335, column: 50, scope: !5817)
!5863 = !DILocation(line: 335, column: 58, scope: !5817)
!5864 = !DILocation(line: 335, column: 24, scope: !5817)
!5865 = !DILocation(line: 336, column: 17, scope: !5817)
!5866 = !DILocation(line: 338, column: 9, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5817, file: !5293, line: 338, column: 6)
!5868 = !DILocation(line: 338, column: 6, scope: !5817)
!5869 = !DILocation(line: 341, column: 17, scope: !5817)
!5870 = !DILocation(line: 344, column: 20, scope: !5817)
!5871 = !DILocation(line: 344, column: 8, scope: !5817)
!5872 = !DILocation(line: 344, column: 47, scope: !5817)
!5873 = !DILocation(line: 345, column: 39, scope: !5817)
!5874 = !DILocation(line: 348, column: 16, scope: !5817)
!5875 = !DILocation(line: 349, column: 26, scope: !5817)
!5876 = !DILocation(line: 349, column: 24, scope: !5817)
!5877 = !DILocation(line: 353, column: 8, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5817, file: !5293, line: 353, column: 6)
!5879 = !DILocation(line: 353, column: 6, scope: !5817)
!5880 = !DILocation(line: 354, column: 3, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5878, file: !5293, line: 353, column: 14)
!5882 = !DILocation(line: 355, column: 3, scope: !5881)
!5883 = !DILocation(line: 356, column: 2, scope: !5881)
!5884 = !DILocation(line: 359, column: 6, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5817, file: !5293, line: 359, column: 6)
!5886 = !DILocation(line: 359, column: 24, scope: !5885)
!5887 = !DILocation(line: 359, column: 6, scope: !5817)
!5888 = !DILocation(line: 360, column: 3, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5885, file: !5293, line: 359, column: 33)
!5890 = !DILocation(line: 361, column: 3, scope: !5889)
!5891 = !DILocation(line: 362, column: 2, scope: !5889)
!5892 = !DILocation(line: 364, column: 2, scope: !5817)
!5893 = !DILocation(line: 377, column: 1, scope: !5817)
!5894 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5293, file: !5293, line: 379, type: !5895, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5897)
!5895 = !DISubroutineType(types: !5896)
!5896 = !{!102, !5296, !102, !156, !156}
!5897 = !{!5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907, !5913, !5914}
!5898 = !DILocalVariable(name: "heap", arg: 1, scope: !5894, file: !5293, line: 379, type: !5296)
!5899 = !DILocalVariable(name: "ptr", arg: 2, scope: !5894, file: !5293, line: 379, type: !102)
!5900 = !DILocalVariable(name: "align", arg: 3, scope: !5894, file: !5293, line: 380, type: !156)
!5901 = !DILocalVariable(name: "bytes", arg: 4, scope: !5894, file: !5293, line: 380, type: !156)
!5902 = !DILocalVariable(name: "h", scope: !5894, file: !5293, line: 382, type: !3050)
!5903 = !DILocalVariable(name: "c", scope: !5894, file: !5293, line: 399, type: !3055)
!5904 = !DILocalVariable(name: "rc", scope: !5894, file: !5293, line: 400, type: !3055)
!5905 = !DILocalVariable(name: "align_gap", scope: !5894, file: !5293, line: 401, type: !156)
!5906 = !DILocalVariable(name: "chunks_need", scope: !5894, file: !5293, line: 402, type: !5438)
!5907 = !DILocalVariable(name: "split_size", scope: !5908, file: !5293, line: 435, type: !5438)
!5908 = distinct !DILexicalBlock(scope: !5909, file: !5293, line: 433, column: 61)
!5909 = distinct !DILexicalBlock(scope: !5910, file: !5293, line: 432, column: 13)
!5910 = distinct !DILexicalBlock(scope: !5911, file: !5293, line: 409, column: 13)
!5911 = distinct !DILexicalBlock(scope: !5912, file: !5293, line: 406, column: 13)
!5912 = distinct !DILexicalBlock(scope: !5894, file: !5293, line: 404, column: 6)
!5913 = !DILocalVariable(name: "ptr2", scope: !5894, file: !5293, line: 474, type: !102)
!5914 = !DILocalVariable(name: "prev_size", scope: !5915, file: !5293, line: 477, type: !156)
!5915 = distinct !DILexicalBlock(scope: !5916, file: !5293, line: 476, column: 20)
!5916 = distinct !DILexicalBlock(scope: !5894, file: !5293, line: 476, column: 6)
!5917 = !DILocation(line: 0, scope: !5894)
!5918 = !DILocation(line: 382, column: 27, scope: !5894)
!5919 = !DILocation(line: 385, column: 10, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5894, file: !5293, line: 385, column: 6)
!5921 = !DILocation(line: 385, column: 6, scope: !5894)
!5922 = !DILocation(line: 386, column: 10, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5920, file: !5293, line: 385, column: 19)
!5924 = !DILocation(line: 386, column: 3, scope: !5923)
!5925 = !DILocation(line: 388, column: 12, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5894, file: !5293, line: 388, column: 6)
!5927 = !DILocation(line: 388, column: 6, scope: !5894)
!5928 = !DILocation(line: 389, column: 3, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5926, file: !5293, line: 388, column: 18)
!5930 = !DILocation(line: 390, column: 3, scope: !5929)
!5931 = !DILocation(line: 393, column: 2, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5933, file: !5293, line: 393, column: 2)
!5933 = distinct !DILexicalBlock(scope: !5894, file: !5293, line: 393, column: 2)
!5934 = !DILocation(line: 393, column: 2, scope: !5933)
!5935 = !DILocation(line: 393, column: 2, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5932, file: !5293, line: 393, column: 2)
!5937 = !DILocation(line: 395, column: 6, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5894, file: !5293, line: 395, column: 6)
!5939 = !DILocation(line: 395, column: 6, scope: !5894)
!5940 = !DILocation(line: 399, column: 16, scope: !5894)
!5941 = !DILocation(line: 400, column: 17, scope: !5894)
!5942 = !DILocation(line: 401, column: 49, scope: !5894)
!5943 = !DILocation(line: 401, column: 36, scope: !5894)
!5944 = !DILocation(line: 402, column: 52, scope: !5894)
!5945 = !DILocation(line: 402, column: 26, scope: !5894)
!5946 = !DILocation(line: 404, column: 6, scope: !5912)
!5947 = !DILocation(line: 404, column: 12, scope: !5912)
!5948 = !DILocation(line: 406, column: 13, scope: !5911)
!5949 = !DILocation(line: 406, column: 30, scope: !5911)
!5950 = !DILocation(line: 406, column: 13, scope: !5912)
!5951 = !DILocation(line: 409, column: 30, scope: !5910)
!5952 = !DILocation(line: 409, column: 13, scope: !5911)
!5953 = !DILocation(line: 420, column: 24, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5910, file: !5293, line: 409, column: 45)
!5955 = !DILocation(line: 420, column: 3, scope: !5954)
!5956 = !DILocation(line: 421, column: 3, scope: !5954)
!5957 = !DILocation(line: 422, column: 3, scope: !5954)
!5958 = !DILocation(line: 431, column: 3, scope: !5954)
!5959 = !DILocation(line: 432, column: 14, scope: !5909)
!5960 = !DILocation(line: 432, column: 32, scope: !5909)
!5961 = !DILocation(line: 433, column: 26, scope: !5909)
!5962 = !DILocation(line: 433, column: 24, scope: !5909)
!5963 = !DILocation(line: 433, column: 44, scope: !5909)
!5964 = !DILocation(line: 432, column: 13, scope: !5910)
!5965 = !DILocation(line: 435, column: 38, scope: !5908)
!5966 = !DILocation(line: 0, scope: !5908)
!5967 = !DILocation(line: 445, column: 3, scope: !5908)
!5968 = !DILocation(line: 447, column: 20, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5908, file: !5293, line: 447, column: 7)
!5970 = !DILocation(line: 447, column: 18, scope: !5969)
!5971 = !DILocation(line: 447, column: 7, scope: !5908)
!5972 = !DILocation(line: 448, column: 27, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5969, file: !5293, line: 447, column: 39)
!5974 = !DILocation(line: 448, column: 4, scope: !5973)
!5975 = !DILocation(line: 449, column: 4, scope: !5973)
!5976 = !DILocation(line: 450, column: 3, scope: !5973)
!5977 = !DILocation(line: 452, column: 3, scope: !5908)
!5978 = !DILocation(line: 453, column: 3, scope: !5908)
!5979 = !DILocation(line: 474, column: 15, scope: !5894)
!5980 = !DILocation(line: 476, column: 11, scope: !5916)
!5981 = !DILocation(line: 476, column: 6, scope: !5894)
!5982 = !DILocation(line: 477, column: 42, scope: !5915)
!5983 = !DILocation(line: 477, column: 22, scope: !5915)
!5984 = !DILocation(line: 477, column: 60, scope: !5915)
!5985 = !DILocation(line: 0, scope: !5915)
!5986 = !DILocation(line: 479, column: 21, scope: !5915)
!5987 = !DILocation(line: 479, column: 3, scope: !5915)
!5988 = !DILocation(line: 480, column: 3, scope: !5915)
!5989 = !DILocation(line: 481, column: 2, scope: !5915)
!5990 = !DILocation(line: 483, column: 1, scope: !5894)
!5991 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !3037, file: !3037, line: 245, type: !5992, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !5994)
!5992 = !DISubroutineType(types: !5993)
!5993 = !{!156, !3050, !5438}
!5994 = !{!5995, !5996}
!5995 = !DILocalVariable(name: "h", arg: 1, scope: !5991, file: !3037, line: 245, type: !3050)
!5996 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5991, file: !3037, line: 245, type: !5438)
!5997 = !DILocation(line: 0, scope: !5991)
!5998 = !DILocation(line: 247, column: 20, scope: !5991)
!5999 = !DILocation(line: 247, column: 33, scope: !5991)
!6000 = !DILocation(line: 247, column: 2, scope: !5991)
!6001 = distinct !DISubprogram(name: "sys_heap_init", scope: !5293, file: !5293, line: 485, type: !6002, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !6004)
!6002 = !DISubroutineType(types: !6003)
!6003 = !{null, !5296, !102, !156}
!6004 = !{!6005, !6006, !6007, !6008, !6009, !6010, !6011, !6012, !6013, !6014}
!6005 = !DILocalVariable(name: "heap", arg: 1, scope: !6001, file: !5293, line: 485, type: !5296)
!6006 = !DILocalVariable(name: "mem", arg: 2, scope: !6001, file: !5293, line: 485, type: !102)
!6007 = !DILocalVariable(name: "bytes", arg: 3, scope: !6001, file: !5293, line: 485, type: !156)
!6008 = !DILocalVariable(name: "addr", scope: !6001, file: !5293, line: 502, type: !22)
!6009 = !DILocalVariable(name: "end", scope: !6001, file: !5293, line: 503, type: !22)
!6010 = !DILocalVariable(name: "heap_sz", scope: !6001, file: !5293, line: 504, type: !5438)
!6011 = !DILocalVariable(name: "h", scope: !6001, file: !5293, line: 509, type: !3050)
!6012 = !DILocalVariable(name: "nb_buckets", scope: !6001, file: !5293, line: 520, type: !103)
!6013 = !DILocalVariable(name: "chunk0_size", scope: !6001, file: !5293, line: 521, type: !5438)
!6014 = !DILocalVariable(name: "i", scope: !6015, file: !5293, line: 526, type: !103)
!6015 = distinct !DILexicalBlock(scope: !6001, file: !5293, line: 526, column: 2)
!6016 = !DILocation(line: 0, scope: !6001)
!6017 = !DILocation(line: 491, column: 3, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6019, file: !5293, line: 491, column: 3)
!6019 = distinct !DILexicalBlock(scope: !6020, file: !5293, line: 491, column: 3)
!6020 = distinct !DILexicalBlock(scope: !6021, file: !5293, line: 489, column: 46)
!6021 = distinct !DILexicalBlock(scope: !6001, file: !5293, line: 489, column: 6)
!6022 = !DILocation(line: 491, column: 3, scope: !6019)
!6023 = !DILocation(line: 491, column: 3, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6018, file: !5293, line: 491, column: 3)
!6025 = !DILocation(line: 498, column: 2, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6027, file: !5293, line: 498, column: 2)
!6027 = distinct !DILexicalBlock(scope: !6001, file: !5293, line: 498, column: 2)
!6028 = !DILocation(line: 498, column: 2, scope: !6027)
!6029 = !DILocation(line: 498, column: 2, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6026, file: !5293, line: 498, column: 2)
!6031 = !DILocation(line: 499, column: 8, scope: !6001)
!6032 = !DILocation(line: 502, column: 19, scope: !6001)
!6033 = !DILocation(line: 503, column: 18, scope: !6001)
!6034 = !DILocation(line: 504, column: 27, scope: !6001)
!6035 = !DILocation(line: 504, column: 35, scope: !6001)
!6036 = !DILocation(line: 507, column: 2, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6038, file: !5293, line: 507, column: 2)
!6038 = distinct !DILexicalBlock(scope: !6001, file: !5293, line: 507, column: 2)
!6039 = !DILocation(line: 507, column: 2, scope: !6038)
!6040 = !DILocation(line: 507, column: 2, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6037, file: !5293, line: 507, column: 2)
!6042 = !DILocation(line: 509, column: 21, scope: !6001)
!6043 = !DILocation(line: 510, column: 8, scope: !6001)
!6044 = !DILocation(line: 510, column: 13, scope: !6001)
!6045 = !DILocation(line: 511, column: 5, scope: !6001)
!6046 = !DILocation(line: 511, column: 15, scope: !6001)
!6047 = !DILocation(line: 512, column: 5, scope: !6001)
!6048 = !DILocation(line: 512, column: 19, scope: !6001)
!6049 = !DILocation(line: 520, column: 19, scope: !6001)
!6050 = !DILocation(line: 522, column: 21, scope: !6001)
!6051 = !DILocation(line: 521, column: 56, scope: !6001)
!6052 = !DILocation(line: 521, column: 26, scope: !6001)
!6053 = !DILocation(line: 524, column: 2, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6055, file: !5293, line: 524, column: 2)
!6055 = distinct !DILexicalBlock(scope: !6001, file: !5293, line: 524, column: 2)
!6056 = !DILocation(line: 524, column: 2, scope: !6055)
!6057 = !DILocation(line: 0, scope: !6015)
!6058 = !DILocation(line: 526, column: 20, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6015, file: !5293, line: 526, column: 2)
!6060 = !DILocation(line: 526, column: 2, scope: !6015)
!6061 = !DILocation(line: 524, column: 2, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6054, file: !5293, line: 524, column: 2)
!6063 = !DILocation(line: 531, column: 2, scope: !6001)
!6064 = !DILocation(line: 532, column: 2, scope: !6001)
!6065 = !DILocation(line: 533, column: 2, scope: !6001)
!6066 = !DILocation(line: 536, column: 41, scope: !6001)
!6067 = !DILocation(line: 536, column: 2, scope: !6001)
!6068 = !DILocation(line: 537, column: 2, scope: !6001)
!6069 = !DILocation(line: 540, column: 2, scope: !6001)
!6070 = !DILocation(line: 541, column: 2, scope: !6001)
!6071 = !DILocation(line: 542, column: 2, scope: !6001)
!6072 = !DILocation(line: 544, column: 2, scope: !6001)
!6073 = !DILocation(line: 545, column: 1, scope: !6001)
!6074 = !DILocation(line: 527, column: 17, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6059, file: !5293, line: 526, column: 39)
!6076 = !DILocation(line: 527, column: 22, scope: !6075)
!6077 = !DILocation(line: 526, column: 35, scope: !6059)
!6078 = distinct !{!6078, !6060, !6079}
!6079 = !DILocation(line: 528, column: 2, scope: !6015)
!6080 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !3070, file: !3070, line: 1338, type: !6081, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6089)
!6081 = !DISubroutineType(types: !6082)
!6082 = !{!103, !4448, !102, !108, !6083, !111}
!6083 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4066, line: 99, baseType: !6084)
!6084 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4066, line: 40, baseType: !6085)
!6085 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3070, baseType: !6086)
!6086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6087)
!6087 = !{!6088}
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6086, file: !3070, baseType: !102, size: 32)
!6089 = !{!6090, !6091, !6092, !6093, !6094, !6095, !6099, !6100, !6101, !6103, !6108, !6151, !6154, !6157, !6158, !6159, !6160, !6161, !6162, !6163, !6166, !6167, !6168, !6172, !6175, !6177, !6180, !6181, !6182, !6187, !6193, !6196, !6200, !6206, !6210, !6213, !6215, !6218}
!6090 = !DILocalVariable(name: "out", arg: 1, scope: !6080, file: !3070, line: 1338, type: !4448)
!6091 = !DILocalVariable(name: "ctx", arg: 2, scope: !6080, file: !3070, line: 1338, type: !102)
!6092 = !DILocalVariable(name: "fp", arg: 3, scope: !6080, file: !3070, line: 1338, type: !108)
!6093 = !DILocalVariable(name: "ap", arg: 4, scope: !6080, file: !3070, line: 1339, type: !6083)
!6094 = !DILocalVariable(name: "flags", arg: 5, scope: !6080, file: !3070, line: 1339, type: !111)
!6095 = !DILocalVariable(name: "buf", scope: !6080, file: !3070, line: 1341, type: !6096)
!6096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 176, elements: !6097)
!6097 = !{!6098}
!6098 = !DISubrange(count: 22)
!6099 = !DILocalVariable(name: "count", scope: !6080, file: !3070, line: 1342, type: !156)
!6100 = !DILocalVariable(name: "sint", scope: !6080, file: !3070, line: 1343, type: !3089)
!6101 = !DILocalVariable(name: "tagged_ap", scope: !6080, file: !3070, line: 1345, type: !6102)
!6102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !122)
!6103 = !DILocalVariable(name: "rc", scope: !6104, file: !3070, line: 1377, type: !103)
!6104 = distinct !DILexicalBlock(scope: !6105, file: !3070, line: 1377, column: 4)
!6105 = distinct !DILexicalBlock(scope: !6106, file: !3070, line: 1376, column: 19)
!6106 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1376, column: 7)
!6107 = distinct !DILexicalBlock(scope: !6080, file: !3070, line: 1375, column: 19)
!6108 = !DILocalVariable(name: "state", scope: !6107, file: !3070, line: 1395, type: !6109)
!6109 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6080, file: !3070, line: 1392, size: 192, elements: !6110)
!6110 = !{!6111, !6119}
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6109, file: !3070, line: 1393, baseType: !6112, size: 64)
!6112 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !3070, line: 166, size: 64, elements: !6113)
!6113 = !{!6114, !6115, !6116, !6117, !6118}
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6112, file: !3070, line: 168, baseType: !3089, size: 64)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6112, file: !3070, line: 171, baseType: !3092, size: 64)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6112, file: !3070, line: 174, baseType: !742, size: 64)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6112, file: !3070, line: 177, baseType: !740, size: 64)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6112, file: !3070, line: 180, baseType: !102, size: 32)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6109, file: !3070, line: 1394, baseType: !6120, size: 96, offset: 64)
!6120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !3070, line: 189, size: 96, elements: !6121)
!6121 = !{!6122, !6123, !6124, !6125, !6126, !6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6139, !6140, !6141, !6146}
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6120, file: !3070, line: 191, baseType: !122, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6120, file: !3070, line: 194, baseType: !122, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6120, file: !3070, line: 197, baseType: !122, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6120, file: !3070, line: 200, baseType: !122, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6120, file: !3070, line: 203, baseType: !122, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6120, file: !3070, line: 206, baseType: !122, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6120, file: !3070, line: 209, baseType: !122, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6120, file: !3070, line: 212, baseType: !122, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6120, file: !3070, line: 219, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6120, file: !3070, line: 222, baseType: !122, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6120, file: !3070, line: 229, baseType: !122, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6120, file: !3070, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6120, file: !3070, line: 238, baseType: !122, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6120, file: !3070, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6120, file: !3070, line: 244, baseType: !122, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6120, file: !3070, line: 247, baseType: !122, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6120, file: !3070, line: 252, baseType: !122, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6120, file: !3070, line: 257, baseType: !122, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6120, file: !3070, line: 260, baseType: !167, size: 8, offset: 24)
!6141 = !DIDerivedType(tag: DW_TAG_member, scope: !6120, file: !3070, line: 262, baseType: !6142, size: 32, offset: 32)
!6142 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6120, file: !3070, line: 262, size: 32, elements: !6143)
!6143 = !{!6144, !6145}
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6142, file: !3070, line: 267, baseType: !103, size: 32)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6142, file: !3070, line: 289, baseType: !103, size: 32)
!6146 = !DIDerivedType(tag: DW_TAG_member, scope: !6120, file: !3070, line: 292, baseType: !6147, size: 32, offset: 64)
!6147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6120, file: !3070, line: 292, size: 32, elements: !6148)
!6148 = !{!6149, !6150}
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6147, file: !3070, line: 297, baseType: !103, size: 32)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6147, file: !3070, line: 306, baseType: !103, size: 32)
!6151 = !DILocalVariable(name: "conv", scope: !6107, file: !3070, line: 1400, type: !6152)
!6152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6153)
!6153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6120, size: 32)
!6154 = !DILocalVariable(name: "value", scope: !6107, file: !3070, line: 1401, type: !6155)
!6155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6156)
!6156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6112, size: 32)
!6157 = !DILocalVariable(name: "sp", scope: !6107, file: !3070, line: 1402, type: !108)
!6158 = !DILocalVariable(name: "width", scope: !6107, file: !3070, line: 1403, type: !103)
!6159 = !DILocalVariable(name: "precision", scope: !6107, file: !3070, line: 1404, type: !103)
!6160 = !DILocalVariable(name: "bps", scope: !6107, file: !3070, line: 1405, type: !108)
!6161 = !DILocalVariable(name: "bpe", scope: !6107, file: !3070, line: 1406, type: !108)
!6162 = !DILocalVariable(name: "sign", scope: !6107, file: !3070, line: 1407, type: !110)
!6163 = !DILocalVariable(name: "arg", scope: !6164, file: !3070, line: 1432, type: !103)
!6164 = distinct !DILexicalBlock(scope: !6165, file: !3070, line: 1431, column: 24)
!6165 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1431, column: 7)
!6166 = !DILocalVariable(name: "specifier_cat", scope: !6107, file: !3070, line: 1468, type: !3069)
!6167 = !DILocalVariable(name: "length_mod", scope: !6107, file: !3070, line: 1470, type: !3077)
!6168 = !DILocalVariable(name: "rc", scope: !6169, file: !3070, line: 1575, type: !103)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !3070, line: 1575, column: 4)
!6170 = distinct !DILexicalBlock(scope: !6171, file: !3070, line: 1574, column: 43)
!6171 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1574, column: 7)
!6172 = !DILocalVariable(name: "rc", scope: !6173, file: !3070, line: 1584, type: !103)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !3070, line: 1584, column: 4)
!6174 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1582, column: 28)
!6175 = !DILocalVariable(name: "len", scope: !6176, file: !3070, line: 1589, type: !156)
!6176 = distinct !DILexicalBlock(scope: !6174, file: !3070, line: 1586, column: 13)
!6177 = !DILocalVariable(name: "len", scope: !6178, file: !3070, line: 1641, type: !156)
!6178 = distinct !DILexicalBlock(scope: !6179, file: !3070, line: 1640, column: 24)
!6179 = distinct !DILexicalBlock(scope: !6174, file: !3070, line: 1640, column: 8)
!6180 = !DILocalVariable(name: "nj_len", scope: !6107, file: !3070, line: 1722, type: !156)
!6181 = !DILocalVariable(name: "pad_len", scope: !6107, file: !3070, line: 1723, type: !103)
!6182 = !DILocalVariable(name: "pad", scope: !6183, file: !3070, line: 1751, type: !110)
!6183 = distinct !DILexicalBlock(scope: !6184, file: !3070, line: 1750, column: 26)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !3070, line: 1750, column: 8)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !3070, line: 1747, column: 18)
!6186 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1747, column: 7)
!6187 = !DILocalVariable(name: "rc", scope: !6188, file: !3070, line: 1758, type: !103)
!6188 = distinct !DILexicalBlock(scope: !6189, file: !3070, line: 1758, column: 7)
!6189 = distinct !DILexicalBlock(scope: !6190, file: !3070, line: 1757, column: 21)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !3070, line: 1757, column: 10)
!6191 = distinct !DILexicalBlock(scope: !6192, file: !3070, line: 1756, column: 26)
!6192 = distinct !DILexicalBlock(scope: !6183, file: !3070, line: 1756, column: 9)
!6193 = !DILocalVariable(name: "rc", scope: !6194, file: !3070, line: 1765, type: !103)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !3070, line: 1765, column: 6)
!6195 = distinct !DILexicalBlock(scope: !6183, file: !3070, line: 1764, column: 25)
!6196 = !DILocalVariable(name: "rc", scope: !6197, file: !3070, line: 1774, type: !103)
!6197 = distinct !DILexicalBlock(scope: !6198, file: !3070, line: 1774, column: 4)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !3070, line: 1773, column: 18)
!6199 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1773, column: 7)
!6200 = !DILocalVariable(name: "rc", scope: !6201, file: !3070, line: 1819, type: !103)
!6201 = distinct !DILexicalBlock(scope: !6202, file: !3070, line: 1819, column: 5)
!6202 = distinct !DILexicalBlock(scope: !6203, file: !3070, line: 1818, column: 44)
!6203 = distinct !DILexicalBlock(scope: !6204, file: !3070, line: 1818, column: 8)
!6204 = distinct !DILexicalBlock(scope: !6205, file: !3070, line: 1817, column: 10)
!6205 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1777, column: 7)
!6206 = !DILocalVariable(name: "rc", scope: !6207, file: !3070, line: 1823, type: !103)
!6207 = distinct !DILexicalBlock(scope: !6208, file: !3070, line: 1823, column: 5)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !3070, line: 1822, column: 26)
!6209 = distinct !DILexicalBlock(scope: !6204, file: !3070, line: 1822, column: 8)
!6210 = !DILocalVariable(name: "rc", scope: !6211, file: !3070, line: 1828, type: !103)
!6211 = distinct !DILexicalBlock(scope: !6212, file: !3070, line: 1828, column: 5)
!6212 = distinct !DILexicalBlock(scope: !6204, file: !3070, line: 1827, column: 26)
!6213 = !DILocalVariable(name: "rc", scope: !6214, file: !3070, line: 1831, type: !103)
!6214 = distinct !DILexicalBlock(scope: !6204, file: !3070, line: 1831, column: 4)
!6215 = !DILocalVariable(name: "rc", scope: !6216, file: !3070, line: 1836, type: !103)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !3070, line: 1836, column: 4)
!6217 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1835, column: 21)
!6218 = !DILabel(scope: !6174, name: "prec_int_pad0", file: !3070, line: 1634)
!6219 = !DILocation(line: 0, scope: !6080)
!6220 = !DILocation(line: 1341, column: 2, scope: !6080)
!6221 = !DILocation(line: 1341, column: 7, scope: !6080)
!6222 = !DILocation(line: 1375, column: 2, scope: !6080)
!6223 = !DILocation(line: 1342, column: 9, scope: !6080)
!6224 = !DILocation(line: 1375, column: 9, scope: !6080)
!6225 = !DILocation(line: 1377, column: 4, scope: !6104)
!6226 = !DILocation(line: 0, scope: !6104)
!6227 = !DILocation(line: 1377, column: 4, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6104, file: !3070, line: 1377, column: 4)
!6229 = distinct !{!6229, !6222, !6230}
!6230 = !DILocation(line: 1839, column: 2, scope: !6080)
!6231 = !DILocation(line: 1392, column: 3, scope: !6107)
!6232 = !DILocation(line: 1395, column: 5, scope: !6107)
!6233 = !DILocation(line: 0, scope: !6107)
!6234 = !DILocation(line: 1409, column: 8, scope: !6107)
!6235 = !DILocation(line: 1414, column: 13, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1414, column: 7)
!6237 = !DILocation(line: 1414, column: 7, scope: !6107)
!6238 = !DILocation(line: 1415, column: 12, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6236, file: !3070, line: 1414, column: 25)
!6240 = !DILocation(line: 1417, column: 14, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6239, file: !3070, line: 1417, column: 8)
!6242 = !DILocation(line: 1417, column: 8, scope: !6239)
!6243 = !DILocation(line: 1418, column: 21, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6241, file: !3070, line: 1417, column: 19)
!6245 = !DILocation(line: 1419, column: 13, scope: !6244)
!6246 = !DILocation(line: 1420, column: 4, scope: !6244)
!6247 = !DILocation(line: 1421, column: 20, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6236, file: !3070, line: 1421, column: 14)
!6249 = !DILocation(line: 1421, column: 14, scope: !6236)
!6250 = !DILocation(line: 1431, column: 13, scope: !6165)
!6251 = !DILocation(line: 1431, column: 7, scope: !6107)
!6252 = !DILocation(line: 1432, column: 14, scope: !6164)
!6253 = !DILocation(line: 0, scope: !6164)
!6254 = !DILocation(line: 1434, column: 12, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6164, file: !3070, line: 1434, column: 8)
!6256 = !DILocation(line: 1434, column: 8, scope: !6164)
!6257 = !DILocation(line: 1435, column: 24, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6255, file: !3070, line: 1434, column: 17)
!6259 = !DILocation(line: 1436, column: 4, scope: !6258)
!6260 = !DILocation(line: 1439, column: 20, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6165, file: !3070, line: 1439, column: 14)
!6262 = !DILocation(line: 1439, column: 14, scope: !6165)
!6263 = !DILocation(line: 1469, column: 37, scope: !6107)
!6264 = !DILocation(line: 1448, column: 20, scope: !6107)
!6265 = !DILocation(line: 1449, column: 22, scope: !6107)
!6266 = !DILocation(line: 1471, column: 34, scope: !6107)
!6267 = !DILocation(line: 1478, column: 7, scope: !6107)
!6268 = !DILocation(line: 1479, column: 4, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6270, file: !3070, line: 1478, column: 40)
!6270 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1478, column: 7)
!6271 = !DILocation(line: 1484, column: 19, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6269, file: !3070, line: 1479, column: 24)
!6273 = !DILocation(line: 1484, column: 17, scope: !6272)
!6274 = !DILocation(line: 1485, column: 5, scope: !6272)
!6275 = !DILocation(line: 1492, column: 20, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6277, file: !3070, line: 1491, column: 12)
!6277 = distinct !DILexicalBlock(scope: !6272, file: !3070, line: 1487, column: 9)
!6278 = !DILocation(line: 1492, column: 18, scope: !6276)
!6279 = !DILocation(line: 1494, column: 5, scope: !6272)
!6280 = !DILocation(line: 1497, column: 23, scope: !6272)
!6281 = !DILocation(line: 1496, column: 17, scope: !6272)
!6282 = !DILocation(line: 1498, column: 5, scope: !6272)
!6283 = !DILocation(line: 1501, column: 23, scope: !6272)
!6284 = !DILocation(line: 1500, column: 17, scope: !6272)
!6285 = !DILocation(line: 1502, column: 5, scope: !6272)
!6286 = !DILocation(line: 1513, column: 23, scope: !6272)
!6287 = !DILocation(line: 1513, column: 6, scope: !6272)
!6288 = !DILocation(line: 1512, column: 17, scope: !6272)
!6289 = !DILocation(line: 1514, column: 5, scope: !6272)
!6290 = !DILocation(line: 0, scope: !6272)
!6291 = !DILocation(line: 1516, column: 8, scope: !6269)
!6292 = !DILocation(line: 1517, column: 19, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6294, file: !3070, line: 1516, column: 33)
!6294 = distinct !DILexicalBlock(scope: !6269, file: !3070, line: 1516, column: 8)
!6295 = !DILocation(line: 1517, column: 17, scope: !6293)
!6296 = !DILocation(line: 1518, column: 4, scope: !6293)
!6297 = !DILocation(line: 1519, column: 19, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6299, file: !3070, line: 1518, column: 39)
!6299 = distinct !DILexicalBlock(scope: !6294, file: !3070, line: 1518, column: 15)
!6300 = !DILocation(line: 1519, column: 17, scope: !6298)
!6301 = !DILocation(line: 1520, column: 4, scope: !6298)
!6302 = !DILocation(line: 1522, column: 4, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6304, file: !3070, line: 1521, column: 47)
!6304 = distinct !DILexicalBlock(scope: !6270, file: !3070, line: 1521, column: 14)
!6305 = !DILocation(line: 1527, column: 19, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6303, file: !3070, line: 1522, column: 24)
!6307 = !DILocation(line: 1527, column: 17, scope: !6306)
!6308 = !DILocation(line: 1528, column: 5, scope: !6306)
!6309 = !DILocation(line: 0, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6306, file: !3070, line: 1530, column: 9)
!6311 = !DILocation(line: 1540, column: 23, scope: !6306)
!6312 = !DILocation(line: 1539, column: 17, scope: !6306)
!6313 = !DILocation(line: 1542, column: 5, scope: !6306)
!6314 = !DILocation(line: 1545, column: 23, scope: !6306)
!6315 = !DILocation(line: 1544, column: 17, scope: !6306)
!6316 = !DILocation(line: 1547, column: 5, scope: !6306)
!6317 = !DILocation(line: 1551, column: 23, scope: !6306)
!6318 = !DILocation(line: 1551, column: 6, scope: !6306)
!6319 = !DILocation(line: 1550, column: 17, scope: !6306)
!6320 = !DILocation(line: 1552, column: 5, scope: !6306)
!6321 = !DILocation(line: 0, scope: !6306)
!6322 = !DILocation(line: 1554, column: 8, scope: !6303)
!6323 = !DILocation(line: 1555, column: 19, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6325, file: !3070, line: 1554, column: 33)
!6325 = distinct !DILexicalBlock(scope: !6303, file: !3070, line: 1554, column: 8)
!6326 = !DILocation(line: 1555, column: 17, scope: !6324)
!6327 = !DILocation(line: 1556, column: 4, scope: !6324)
!6328 = !DILocation(line: 1557, column: 19, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !3070, line: 1556, column: 39)
!6330 = distinct !DILexicalBlock(scope: !6325, file: !3070, line: 1556, column: 15)
!6331 = !DILocation(line: 1557, column: 17, scope: !6329)
!6332 = !DILocation(line: 1558, column: 4, scope: !6329)
!6333 = !DILocation(line: 0, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6335, file: !3070, line: 1560, column: 8)
!6335 = distinct !DILexicalBlock(scope: !6336, file: !3070, line: 1559, column: 45)
!6336 = distinct !DILexicalBlock(scope: !6304, file: !3070, line: 1559, column: 14)
!6337 = !DILocation(line: 1566, column: 17, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6339, file: !3070, line: 1565, column: 46)
!6339 = distinct !DILexicalBlock(scope: !6336, file: !3070, line: 1565, column: 14)
!6340 = !DILocation(line: 1566, column: 15, scope: !6338)
!6341 = !DILocation(line: 1567, column: 3, scope: !6338)
!6342 = !DILocation(line: 1574, column: 21, scope: !6171)
!6343 = !DILocation(line: 1575, column: 4, scope: !6169)
!6344 = !DILocation(line: 0, scope: !6169)
!6345 = !DILocation(line: 1575, column: 4, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6169, file: !3070, line: 1575, column: 4)
!6347 = !DILocation(line: 1582, column: 17, scope: !6107)
!6348 = !DILocation(line: 1582, column: 3, scope: !6107)
!6349 = !DILocation(line: 1584, column: 4, scope: !6173)
!6350 = !DILocation(line: 0, scope: !6173)
!6351 = !DILocation(line: 1584, column: 4, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6173, file: !3070, line: 1584, column: 4)
!6353 = !DILocation(line: 1587, column: 31, scope: !6176)
!6354 = !DILocation(line: 1591, column: 18, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6176, file: !3070, line: 1591, column: 8)
!6356 = !DILocation(line: 1591, column: 8, scope: !6176)
!6357 = !DILocation(line: 1592, column: 11, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6355, file: !3070, line: 1591, column: 24)
!6359 = !DILocation(line: 0, scope: !6176)
!6360 = !DILocation(line: 1593, column: 4, scope: !6358)
!6361 = !DILocation(line: 1594, column: 11, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6355, file: !3070, line: 1593, column: 11)
!6363 = !DILocation(line: 1604, column: 51, scope: !6174)
!6364 = !DILocation(line: 1604, column: 13, scope: !6174)
!6365 = !DILocation(line: 1604, column: 11, scope: !6174)
!6366 = !DILocation(line: 1606, column: 4, scope: !6174)
!6367 = !DILocation(line: 1609, column: 14, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6174, file: !3070, line: 1609, column: 8)
!6369 = !DILocation(line: 1609, column: 8, scope: !6174)
!6370 = !DILocation(line: 1619, column: 18, scope: !6174)
!6371 = !DILocation(line: 1620, column: 13, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6174, file: !3070, line: 1620, column: 8)
!6373 = !DILocation(line: 1620, column: 8, scope: !6174)
!6374 = !DILocation(line: 1622, column: 36, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6372, file: !3070, line: 1620, column: 18)
!6376 = !DILocation(line: 1622, column: 17, scope: !6375)
!6377 = !DILocation(line: 1623, column: 4, scope: !6375)
!6378 = !DILocation(line: 1632, column: 29, scope: !6174)
!6379 = !DILocation(line: 1632, column: 10, scope: !6174)
!6380 = !DILocation(line: 1632, column: 4, scope: !6174)
!6381 = !DILocation(line: 1407, column: 8, scope: !6107)
!6382 = !DILocation(line: 0, scope: !6174)
!6383 = !DILocation(line: 1634, column: 3, scope: !6174)
!6384 = !DILocation(line: 1640, column: 18, scope: !6179)
!6385 = !DILocation(line: 1640, column: 8, scope: !6174)
!6386 = !DILocation(line: 1729, column: 13, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1729, column: 7)
!6388 = !DILocation(line: 1641, column: 22, scope: !6178)
!6389 = !DILocation(line: 0, scope: !6178)
!6390 = !DILocation(line: 1646, column: 21, scope: !6178)
!6391 = !DILocation(line: 1649, column: 13, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6178, file: !3070, line: 1649, column: 9)
!6393 = !DILocation(line: 1649, column: 9, scope: !6178)
!6394 = !DILocation(line: 1650, column: 35, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6392, file: !3070, line: 1649, column: 34)
!6396 = !DILocation(line: 1650, column: 23, scope: !6395)
!6397 = !DILocation(line: 1651, column: 5, scope: !6395)
!6398 = !DILocation(line: 1660, column: 15, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6174, file: !3070, line: 1660, column: 8)
!6400 = !DILocation(line: 1660, column: 19, scope: !6399)
!6401 = !DILocation(line: 1660, column: 8, scope: !6174)
!6402 = !DILocation(line: 1661, column: 23, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6399, file: !3070, line: 1660, column: 28)
!6404 = !DILocation(line: 1661, column: 11, scope: !6403)
!6405 = !DILocation(line: 1665, column: 22, scope: !6403)
!6406 = !DILocation(line: 1666, column: 21, scope: !6403)
!6407 = !DILocation(line: 1668, column: 5, scope: !6403)
!6408 = !DILocation(line: 1677, column: 30, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6410, file: !3070, line: 1676, column: 49)
!6410 = distinct !DILexicalBlock(scope: !6174, file: !3070, line: 1676, column: 8)
!6411 = !DILocation(line: 1677, column: 5, scope: !6409)
!6412 = !DILocation(line: 1680, column: 4, scope: !6174)
!6413 = !DILocation(line: 0, scope: !6355)
!6414 = !DILocation(line: 1597, column: 14, scope: !6176)
!6415 = !DILocation(line: 1699, column: 11, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1699, column: 7)
!6417 = !DILocation(line: 1699, column: 7, scope: !6107)
!6418 = !DILocation(line: 1725, column: 7, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1725, column: 7)
!6420 = !DILocation(line: 1725, column: 12, scope: !6419)
!6421 = !DILocation(line: 1747, column: 13, scope: !6186)
!6422 = !DILocation(line: 1747, column: 7, scope: !6107)
!6423 = !DILocation(line: 1722, column: 24, scope: !6107)
!6424 = !DILocation(line: 1725, column: 7, scope: !6107)
!6425 = !DILocation(line: 1729, column: 7, scope: !6107)
!6426 = !DILocation(line: 1736, column: 13, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6107, file: !3070, line: 1736, column: 7)
!6428 = !DILocation(line: 1735, column: 19, scope: !6107)
!6429 = !DILocation(line: 1736, column: 7, scope: !6107)
!6430 = !DILocation(line: 1748, column: 10, scope: !6185)
!6431 = !DILocation(line: 1750, column: 15, scope: !6184)
!6432 = !DILocation(line: 1750, column: 8, scope: !6185)
!6433 = !DILocation(line: 0, scope: !6183)
!6434 = !DILocation(line: 1756, column: 15, scope: !6192)
!6435 = !DILocation(line: 1756, column: 9, scope: !6183)
!6436 = !DILocation(line: 1758, column: 7, scope: !6188)
!6437 = !DILocation(line: 0, scope: !6188)
!6438 = !DILocation(line: 1758, column: 7, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6188, file: !3070, line: 1758, column: 7)
!6440 = !DILocation(line: 1764, column: 5, scope: !6183)
!6441 = !DILocation(line: 0, scope: !6185)
!6442 = !DILocation(line: 1764, column: 20, scope: !6183)
!6443 = !DILocation(line: 1764, column: 17, scope: !6183)
!6444 = !DILocation(line: 1765, column: 6, scope: !6194)
!6445 = !DILocation(line: 0, scope: !6194)
!6446 = !DILocation(line: 1765, column: 6, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6194, file: !3070, line: 1765, column: 6)
!6448 = distinct !{!6448, !6440, !6449}
!6449 = !DILocation(line: 1766, column: 5, scope: !6183)
!6450 = !DILocation(line: 1773, column: 12, scope: !6199)
!6451 = !DILocation(line: 1773, column: 7, scope: !6107)
!6452 = !DILocation(line: 1773, column: 7, scope: !6199)
!6453 = !DILocation(line: 1774, column: 4, scope: !6197)
!6454 = !DILocation(line: 0, scope: !6197)
!6455 = !DILocation(line: 1774, column: 4, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6197, file: !3070, line: 1774, column: 4)
!6457 = !DILocation(line: 1818, column: 8, scope: !6203)
!6458 = !DILocation(line: 1818, column: 27, scope: !6203)
!6459 = !DILocation(line: 1818, column: 25, scope: !6203)
!6460 = !DILocation(line: 1818, column: 8, scope: !6204)
!6461 = !DILocation(line: 1819, column: 5, scope: !6201)
!6462 = !DILocation(line: 0, scope: !6201)
!6463 = !DILocation(line: 1819, column: 5, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6201, file: !3070, line: 1819, column: 5)
!6465 = !DILocation(line: 1822, column: 14, scope: !6209)
!6466 = !DILocation(line: 1822, column: 8, scope: !6204)
!6467 = !DILocation(line: 1823, column: 5, scope: !6207)
!6468 = !DILocation(line: 0, scope: !6207)
!6469 = !DILocation(line: 1823, column: 5, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6207, file: !3070, line: 1823, column: 5)
!6471 = !DILocation(line: 1826, column: 20, scope: !6204)
!6472 = !DILocation(line: 1827, column: 4, scope: !6204)
!6473 = !DILocation(line: 0, scope: !6204)
!6474 = !DILocation(line: 1827, column: 21, scope: !6204)
!6475 = !DILocation(line: 1827, column: 18, scope: !6204)
!6476 = !DILocation(line: 1828, column: 5, scope: !6211)
!6477 = !DILocation(line: 0, scope: !6211)
!6478 = !DILocation(line: 1828, column: 5, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6211, file: !3070, line: 1828, column: 5)
!6480 = distinct !{!6480, !6472, !6481}
!6481 = !DILocation(line: 1829, column: 4, scope: !6204)
!6482 = !DILocation(line: 1831, column: 4, scope: !6214)
!6483 = !DILocation(line: 0, scope: !6214)
!6484 = !DILocation(line: 1831, column: 4, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6214, file: !3070, line: 1831, column: 4)
!6486 = !DILocation(line: 1835, column: 16, scope: !6107)
!6487 = !DILocation(line: 1835, column: 3, scope: !6107)
!6488 = !DILocation(line: 1836, column: 4, scope: !6216)
!6489 = !DILocation(line: 0, scope: !6216)
!6490 = !DILocation(line: 1836, column: 4, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6216, file: !3070, line: 1836, column: 4)
!6492 = !DILocation(line: 1837, column: 4, scope: !6217)
!6493 = distinct !{!6493, !6487, !6494}
!6494 = !DILocation(line: 1838, column: 3, scope: !6107)
!6495 = !DILocation(line: 1844, column: 1, scope: !6080)
!6496 = distinct !DISubprogram(name: "extract_conversion", scope: !3070, file: !3070, line: 642, type: !6497, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6499)
!6497 = !DISubroutineType(types: !6498)
!6498 = !{!108, !6153, !108}
!6499 = !{!6500, !6501}
!6500 = !DILocalVariable(name: "conv", arg: 1, scope: !6496, file: !3070, line: 642, type: !6153)
!6501 = !DILocalVariable(name: "sp", arg: 2, scope: !6496, file: !3070, line: 643, type: !108)
!6502 = !DILocation(line: 0, scope: !6496)
!6503 = !DILocation(line: 645, column: 10, scope: !6496)
!6504 = !DILocation(line: 653, column: 2, scope: !6496)
!6505 = !DILocation(line: 654, column: 6, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6496, file: !3070, line: 654, column: 6)
!6507 = !DILocation(line: 654, column: 10, scope: !6506)
!6508 = !DILocation(line: 654, column: 6, scope: !6496)
!6509 = !DILocation(line: 655, column: 24, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6506, file: !3070, line: 654, column: 18)
!6511 = !DILocation(line: 655, column: 19, scope: !6510)
!6512 = !DILocation(line: 656, column: 3, scope: !6510)
!6513 = !DILocation(line: 659, column: 7, scope: !6496)
!6514 = !DILocation(line: 660, column: 7, scope: !6496)
!6515 = !DILocation(line: 661, column: 7, scope: !6496)
!6516 = !DILocation(line: 662, column: 7, scope: !6496)
!6517 = !DILocation(line: 663, column: 7, scope: !6496)
!6518 = !DILocation(line: 665, column: 2, scope: !6496)
!6519 = !DILocation(line: 666, column: 1, scope: !6496)
!6520 = distinct !DISubprogram(name: "outs", scope: !3070, file: !3070, line: 1319, type: !6521, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6523)
!6521 = !DISubroutineType(types: !6522)
!6522 = !{!103, !4448, !102, !108, !108}
!6523 = !{!6524, !6525, !6526, !6527, !6528, !6529}
!6524 = !DILocalVariable(name: "out", arg: 1, scope: !6520, file: !3070, line: 1319, type: !4448)
!6525 = !DILocalVariable(name: "ctx", arg: 2, scope: !6520, file: !3070, line: 1320, type: !102)
!6526 = !DILocalVariable(name: "sp", arg: 3, scope: !6520, file: !3070, line: 1321, type: !108)
!6527 = !DILocalVariable(name: "ep", arg: 4, scope: !6520, file: !3070, line: 1322, type: !108)
!6528 = !DILocalVariable(name: "count", scope: !6520, file: !3070, line: 1324, type: !156)
!6529 = !DILocalVariable(name: "rc", scope: !6530, file: !3070, line: 1327, type: !103)
!6530 = distinct !DILexicalBlock(scope: !6520, file: !3070, line: 1326, column: 45)
!6531 = !DILocation(line: 0, scope: !6520)
!6532 = !DILocation(line: 1326, column: 2, scope: !6520)
!6533 = !DILocation(line: 1324, column: 9, scope: !6520)
!6534 = !DILocation(line: 1326, column: 13, scope: !6520)
!6535 = !DILocation(line: 1326, column: 19, scope: !6520)
!6536 = !DILocation(line: 1327, column: 21, scope: !6530)
!6537 = !DILocation(line: 1326, column: 36, scope: !6520)
!6538 = !DILocation(line: 1326, column: 39, scope: !6520)
!6539 = !DILocation(line: 1327, column: 24, scope: !6530)
!6540 = !DILocation(line: 1327, column: 16, scope: !6530)
!6541 = !DILocation(line: 1327, column: 12, scope: !6530)
!6542 = !DILocation(line: 0, scope: !6530)
!6543 = !DILocation(line: 1329, column: 10, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6530, file: !3070, line: 1329, column: 7)
!6545 = !DILocation(line: 1329, column: 7, scope: !6530)
!6546 = distinct !{!6546, !6532, !6547}
!6547 = !DILocation(line: 1333, column: 2, scope: !6520)
!6548 = !DILocation(line: 1336, column: 1, scope: !6520)
!6549 = distinct !DISubprogram(name: "encode_uint", scope: !3070, file: !3070, line: 788, type: !6550, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6552)
!6550 = !DISubroutineType(types: !6551)
!6551 = !{!160, !3092, !6153, !160, !108}
!6552 = !{!6553, !6554, !6555, !6556, !6557, !6558, !6560, !6561}
!6553 = !DILocalVariable(name: "value", arg: 1, scope: !6549, file: !3070, line: 788, type: !3092)
!6554 = !DILocalVariable(name: "conv", arg: 2, scope: !6549, file: !3070, line: 789, type: !6153)
!6555 = !DILocalVariable(name: "bps", arg: 3, scope: !6549, file: !3070, line: 790, type: !160)
!6556 = !DILocalVariable(name: "bpe", arg: 4, scope: !6549, file: !3070, line: 791, type: !108)
!6557 = !DILocalVariable(name: "upcase", scope: !6549, file: !3070, line: 793, type: !122)
!6558 = !DILocalVariable(name: "radix", scope: !6549, file: !3070, line: 794, type: !6559)
!6559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6560 = !DILocalVariable(name: "bp", scope: !6549, file: !3070, line: 795, type: !160)
!6561 = !DILocalVariable(name: "lsv", scope: !6562, file: !3070, line: 798, type: !32)
!6562 = distinct !DILexicalBlock(scope: !6549, file: !3070, line: 797, column: 5)
!6563 = !DILocation(line: 0, scope: !6549)
!6564 = !DILocation(line: 793, column: 35, scope: !6549)
!6565 = !DILocation(line: 793, column: 24, scope: !6549)
!6566 = !DILocation(line: 793, column: 16, scope: !6549)
!6567 = !DILocation(line: 794, column: 29, scope: !6549)
!6568 = !DILocation(line: 795, column: 24, scope: !6549)
!6569 = !DILocation(line: 795, column: 17, scope: !6549)
!6570 = !DILocation(line: 797, column: 2, scope: !6549)
!6571 = !DILocation(line: 802, column: 9, scope: !6562)
!6572 = !DILocation(line: 798, column: 22, scope: !6562)
!6573 = !DILocation(line: 0, scope: !6562)
!6574 = !DILocation(line: 800, column: 16, scope: !6562)
!6575 = !DILocation(line: 800, column: 11, scope: !6562)
!6576 = !DILocation(line: 800, column: 4, scope: !6562)
!6577 = !DILocation(line: 800, column: 9, scope: !6562)
!6578 = !DILocation(line: 803, column: 18, scope: !6549)
!6579 = !DILocation(line: 803, column: 24, scope: !6549)
!6580 = !DILocation(line: 803, column: 2, scope: !6562)
!6581 = distinct !{!6581, !6570, !6582}
!6582 = !DILocation(line: 803, column: 37, scope: !6549)
!6583 = !DILocation(line: 808, column: 12, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6549, file: !3070, line: 808, column: 6)
!6585 = !DILocation(line: 808, column: 6, scope: !6549)
!6586 = !DILocation(line: 809, column: 7, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6584, file: !3070, line: 808, column: 23)
!6588 = !DILocation(line: 813, column: 3, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6590, file: !3070, line: 811, column: 27)
!6590 = distinct !DILexicalBlock(scope: !6591, file: !3070, line: 811, column: 14)
!6591 = distinct !DILexicalBlock(scope: !6587, file: !3070, line: 809, column: 7)
!6592 = !DILocation(line: 0, scope: !6591)
!6593 = !DILocation(line: 818, column: 2, scope: !6549)
!6594 = distinct !DISubprogram(name: "store_count", scope: !3070, file: !3070, line: 1280, type: !6595, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6599)
!6595 = !DISubroutineType(types: !6596)
!6596 = !{null, !6597, !102, !103}
!6597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6598, size: 32)
!6598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6120)
!6599 = !{!6600, !6601, !6602}
!6600 = !DILocalVariable(name: "conv", arg: 1, scope: !6594, file: !3070, line: 1280, type: !6597)
!6601 = !DILocalVariable(name: "dp", arg: 2, scope: !6594, file: !3070, line: 1281, type: !102)
!6602 = !DILocalVariable(name: "count", arg: 3, scope: !6594, file: !3070, line: 1282, type: !103)
!6603 = !DILocation(line: 0, scope: !6594)
!6604 = !DILocation(line: 1284, column: 38, scope: !6594)
!6605 = !DILocation(line: 1284, column: 2, scope: !6594)
!6606 = !DILocation(line: 1286, column: 4, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6594, file: !3070, line: 1284, column: 50)
!6608 = !DILocation(line: 1286, column: 14, scope: !6607)
!6609 = !DILocation(line: 1287, column: 3, scope: !6607)
!6610 = !DILocation(line: 1289, column: 24, scope: !6607)
!6611 = !DILocation(line: 1289, column: 22, scope: !6607)
!6612 = !DILocation(line: 1290, column: 3, scope: !6607)
!6613 = !DILocation(line: 1292, column: 18, scope: !6607)
!6614 = !DILocation(line: 1292, column: 4, scope: !6607)
!6615 = !DILocation(line: 1292, column: 16, scope: !6607)
!6616 = !DILocation(line: 1293, column: 3, scope: !6607)
!6617 = !DILocation(line: 1295, column: 4, scope: !6607)
!6618 = !DILocation(line: 1295, column: 15, scope: !6607)
!6619 = !DILocation(line: 1296, column: 3, scope: !6607)
!6620 = !DILocation(line: 1298, column: 22, scope: !6607)
!6621 = !DILocation(line: 1298, column: 4, scope: !6607)
!6622 = !DILocation(line: 1298, column: 20, scope: !6607)
!6623 = !DILocation(line: 1299, column: 3, scope: !6607)
!6624 = !DILocation(line: 1301, column: 21, scope: !6607)
!6625 = !DILocation(line: 1301, column: 4, scope: !6607)
!6626 = !DILocation(line: 1301, column: 19, scope: !6607)
!6627 = !DILocation(line: 1302, column: 3, scope: !6607)
!6628 = !DILocation(line: 1304, column: 4, scope: !6607)
!6629 = !DILocation(line: 1304, column: 17, scope: !6607)
!6630 = !DILocation(line: 1305, column: 3, scope: !6607)
!6631 = !DILocation(line: 1307, column: 4, scope: !6607)
!6632 = !DILocation(line: 1307, column: 20, scope: !6607)
!6633 = !DILocation(line: 1308, column: 3, scope: !6607)
!6634 = !DILocation(line: 1316, column: 1, scope: !6594)
!6635 = distinct !DISubprogram(name: "isupper", scope: !6636, file: !6636, line: 16, type: !764, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6637)
!6636 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6637 = !{!6638}
!6638 = !DILocalVariable(name: "a", arg: 1, scope: !6635, file: !6636, line: 16, type: !103)
!6639 = !DILocation(line: 0, scope: !6635)
!6640 = !DILocation(line: 18, column: 29, scope: !6635)
!6641 = !DILocation(line: 18, column: 45, scope: !6635)
!6642 = !DILocation(line: 18, column: 2, scope: !6635)
!6643 = distinct !DISubprogram(name: "conversion_radix", scope: !3070, file: !3070, line: 761, type: !6644, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6646)
!6644 = !DISubroutineType(types: !6645)
!6645 = !{!156, !110}
!6646 = !{!6647}
!6647 = !DILocalVariable(name: "specifier", arg: 1, scope: !6643, file: !3070, line: 761, type: !110)
!6648 = !DILocation(line: 0, scope: !6643)
!6649 = !DILocation(line: 763, column: 2, scope: !6643)
!6650 = !DILocation(line: 770, column: 3, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6643, file: !3070, line: 763, column: 21)
!6652 = !DILocation(line: 774, column: 3, scope: !6651)
!6653 = !DILocation(line: 0, scope: !6651)
!6654 = !DILocation(line: 776, column: 1, scope: !6643)
!6655 = distinct !DISubprogram(name: "extract_flags", scope: !3070, file: !3070, line: 339, type: !6497, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6656)
!6656 = !{!6657, !6658, !6659}
!6657 = !DILocalVariable(name: "conv", arg: 1, scope: !6655, file: !3070, line: 339, type: !6153)
!6658 = !DILocalVariable(name: "sp", arg: 2, scope: !6655, file: !3070, line: 340, type: !108)
!6659 = !DILocalVariable(name: "loop", scope: !6655, file: !3070, line: 342, type: !122)
!6660 = !DILocation(line: 0, scope: !6655)
!6661 = !DILocation(line: 344, column: 2, scope: !6655)
!6662 = !DILocation(line: 345, column: 11, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6655, file: !3070, line: 344, column: 5)
!6664 = !DILocation(line: 345, column: 3, scope: !6663)
!6665 = !DILocation(line: 351, column: 4, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6663, file: !3070, line: 345, column: 16)
!6667 = !DILocation(line: 354, column: 4, scope: !6666)
!6668 = !DILocation(line: 357, column: 4, scope: !6666)
!6669 = !DILocation(line: 360, column: 4, scope: !6666)
!6670 = !DILocation(line: 0, scope: !6666)
!6671 = !DILocation(line: 370, column: 12, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6655, file: !3070, line: 370, column: 6)
!6673 = !DILocation(line: 370, column: 22, scope: !6672)
!6674 = !DILocation(line: 371, column: 19, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6672, file: !3070, line: 370, column: 42)
!6676 = !DILocation(line: 372, column: 2, scope: !6675)
!6677 = !DILocation(line: 376, column: 2, scope: !6655)
!6678 = distinct !DISubprogram(name: "extract_width", scope: !3070, file: !3070, line: 388, type: !6497, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6679)
!6679 = !{!6680, !6681, !6682, !6683}
!6680 = !DILocalVariable(name: "conv", arg: 1, scope: !6678, file: !3070, line: 388, type: !6153)
!6681 = !DILocalVariable(name: "sp", arg: 2, scope: !6678, file: !3070, line: 389, type: !108)
!6682 = !DILocalVariable(name: "wp", scope: !6678, file: !3070, line: 398, type: !108)
!6683 = !DILocalVariable(name: "width", scope: !6678, file: !3070, line: 399, type: !156)
!6684 = !DILocation(line: 0, scope: !6678)
!6685 = !DILocation(line: 391, column: 8, scope: !6678)
!6686 = !DILocation(line: 391, column: 22, scope: !6678)
!6687 = !DILocation(line: 393, column: 6, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6678, file: !3070, line: 393, column: 6)
!6689 = !DILocation(line: 393, column: 10, scope: !6688)
!6690 = !DILocation(line: 393, column: 6, scope: !6678)
!6691 = !DILocation(line: 394, column: 20, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6688, file: !3070, line: 393, column: 18)
!6693 = !DILocation(line: 395, column: 10, scope: !6692)
!6694 = !DILocation(line: 395, column: 3, scope: !6692)
!6695 = !DILocation(line: 399, column: 17, scope: !6678)
!6696 = !DILocation(line: 401, column: 6, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6678, file: !3070, line: 401, column: 6)
!6698 = !DILocation(line: 401, column: 9, scope: !6697)
!6699 = !DILocation(line: 401, column: 6, scope: !6678)
!6700 = !DILocation(line: 402, column: 23, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6697, file: !3070, line: 401, column: 16)
!6702 = !DILocation(line: 403, column: 9, scope: !6701)
!6703 = !DILocation(line: 403, column: 21, scope: !6701)
!6704 = !DILocation(line: 405, column: 11, scope: !6701)
!6705 = !DILocation(line: 404, column: 21, scope: !6701)
!6706 = !DILocation(line: 406, column: 2, scope: !6701)
!6707 = !DILocation(line: 409, column: 1, scope: !6678)
!6708 = distinct !DISubprogram(name: "extract_prec", scope: !3070, file: !3070, line: 420, type: !6497, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6709)
!6709 = !{!6710, !6711, !6712}
!6710 = !DILocalVariable(name: "conv", arg: 1, scope: !6708, file: !3070, line: 420, type: !6153)
!6711 = !DILocalVariable(name: "sp", arg: 2, scope: !6708, file: !3070, line: 421, type: !108)
!6712 = !DILocalVariable(name: "prec", scope: !6708, file: !3070, line: 435, type: !156)
!6713 = !DILocation(line: 0, scope: !6708)
!6714 = !DILocation(line: 423, column: 24, scope: !6708)
!6715 = !DILocation(line: 423, column: 28, scope: !6708)
!6716 = !DILocation(line: 423, column: 8, scope: !6708)
!6717 = !DILocation(line: 423, column: 21, scope: !6708)
!6718 = !DILocation(line: 425, column: 6, scope: !6708)
!6719 = !DILocation(line: 428, column: 2, scope: !6708)
!6720 = !DILocation(line: 430, column: 6, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6708, file: !3070, line: 430, column: 6)
!6722 = !DILocation(line: 430, column: 10, scope: !6721)
!6723 = !DILocation(line: 430, column: 6, scope: !6708)
!6724 = !DILocation(line: 431, column: 19, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6721, file: !3070, line: 430, column: 18)
!6726 = !DILocation(line: 432, column: 10, scope: !6725)
!6727 = !DILocation(line: 432, column: 3, scope: !6725)
!6728 = !DILocation(line: 435, column: 16, scope: !6708)
!6729 = !DILocation(line: 437, column: 8, scope: !6708)
!6730 = !DILocation(line: 437, column: 19, scope: !6708)
!6731 = !DILocation(line: 439, column: 10, scope: !6708)
!6732 = !DILocation(line: 438, column: 20, scope: !6708)
!6733 = !DILocation(line: 441, column: 9, scope: !6708)
!6734 = !DILocation(line: 442, column: 1, scope: !6708)
!6735 = distinct !DISubprogram(name: "extract_length", scope: !3070, file: !3070, line: 453, type: !6497, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6736)
!6736 = !{!6737, !6738}
!6737 = !DILocalVariable(name: "conv", arg: 1, scope: !6735, file: !3070, line: 453, type: !6153)
!6738 = !DILocalVariable(name: "sp", arg: 2, scope: !6735, file: !3070, line: 454, type: !108)
!6739 = !DILocation(line: 0, scope: !6735)
!6740 = !DILocation(line: 456, column: 10, scope: !6735)
!6741 = !DILocation(line: 456, column: 2, scope: !6735)
!6742 = !DILocation(line: 458, column: 8, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !3070, line: 458, column: 7)
!6744 = distinct !DILexicalBlock(scope: !6735, file: !3070, line: 456, column: 15)
!6745 = !DILocation(line: 458, column: 7, scope: !6743)
!6746 = !DILocation(line: 458, column: 13, scope: !6743)
!6747 = !DILocation(line: 0, scope: !6743)
!6748 = !DILocation(line: 458, column: 7, scope: !6744)
!6749 = !DILocation(line: 459, column: 21, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6743, file: !3070, line: 458, column: 21)
!6751 = !DILocation(line: 460, column: 4, scope: !6750)
!6752 = !DILocation(line: 461, column: 3, scope: !6750)
!6753 = !DILocation(line: 462, column: 21, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6743, file: !3070, line: 461, column: 10)
!6755 = !DILocation(line: 466, column: 8, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6744, file: !3070, line: 466, column: 7)
!6757 = !DILocation(line: 466, column: 7, scope: !6756)
!6758 = !DILocation(line: 466, column: 13, scope: !6756)
!6759 = !DILocation(line: 0, scope: !6756)
!6760 = !DILocation(line: 466, column: 7, scope: !6744)
!6761 = !DILocation(line: 467, column: 21, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6756, file: !3070, line: 466, column: 21)
!6763 = !DILocation(line: 468, column: 4, scope: !6762)
!6764 = !DILocation(line: 469, column: 3, scope: !6762)
!6765 = !DILocation(line: 470, column: 21, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6756, file: !3070, line: 469, column: 10)
!6767 = !DILocation(line: 474, column: 9, scope: !6744)
!6768 = !DILocation(line: 474, column: 20, scope: !6744)
!6769 = !DILocation(line: 475, column: 3, scope: !6744)
!6770 = !DILocation(line: 476, column: 3, scope: !6744)
!6771 = !DILocation(line: 478, column: 9, scope: !6744)
!6772 = !DILocation(line: 478, column: 20, scope: !6744)
!6773 = !DILocation(line: 479, column: 3, scope: !6744)
!6774 = !DILocation(line: 480, column: 3, scope: !6744)
!6775 = !DILocation(line: 482, column: 9, scope: !6744)
!6776 = !DILocation(line: 482, column: 20, scope: !6744)
!6777 = !DILocation(line: 483, column: 3, scope: !6744)
!6778 = !DILocation(line: 484, column: 3, scope: !6744)
!6779 = !DILocation(line: 486, column: 9, scope: !6744)
!6780 = !DILocation(line: 486, column: 20, scope: !6744)
!6781 = !DILocation(line: 487, column: 3, scope: !6744)
!6782 = !DILocation(line: 492, column: 21, scope: !6744)
!6783 = !DILocation(line: 493, column: 3, scope: !6744)
!6784 = !DILocation(line: 495, column: 9, scope: !6744)
!6785 = !DILocation(line: 495, column: 20, scope: !6744)
!6786 = !DILocation(line: 496, column: 3, scope: !6744)
!6787 = !DILocation(line: 498, column: 2, scope: !6735)
!6788 = distinct !DISubprogram(name: "extract_specifier", scope: !3070, file: !3070, line: 513, type: !6497, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6789)
!6789 = !{!6790, !6791, !6792, !6793}
!6790 = !DILocalVariable(name: "conv", arg: 1, scope: !6788, file: !3070, line: 513, type: !6153)
!6791 = !DILocalVariable(name: "sp", arg: 2, scope: !6788, file: !3070, line: 514, type: !108)
!6792 = !DILocalVariable(name: "unsupported", scope: !6788, file: !3070, line: 516, type: !122)
!6793 = !DILabel(scope: !6794, name: "int_conv", file: !3070, line: 526)
!6794 = distinct !DILexicalBlock(scope: !6788, file: !3070, line: 520, column: 27)
!6795 = !DILocation(line: 0, scope: !6788)
!6796 = !DILocation(line: 518, column: 20, scope: !6788)
!6797 = !DILocation(line: 518, column: 8, scope: !6788)
!6798 = !DILocation(line: 518, column: 18, scope: !6788)
!6799 = !DILocation(line: 520, column: 2, scope: !6788)
!6800 = !DILocation(line: 525, column: 3, scope: !6794)
!6801 = !DILocation(line: 0, scope: !6794)
!6802 = !DILocation(line: 526, column: 1, scope: !6794)
!6803 = !DILocation(line: 528, column: 24, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6794, file: !3070, line: 528, column: 7)
!6805 = !DILocation(line: 528, column: 7, scope: !6794)
!6806 = !DILocation(line: 535, column: 23, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6794, file: !3070, line: 535, column: 7)
!6808 = !DILocation(line: 535, column: 7, scope: !6794)
!6809 = !DILocation(line: 536, column: 36, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6807, file: !3070, line: 535, column: 31)
!6811 = !DILocation(line: 537, column: 3, scope: !6810)
!6812 = !DILocation(line: 570, column: 9, scope: !6794)
!6813 = !DILocation(line: 570, column: 23, scope: !6794)
!6814 = !DILocation(line: 575, column: 4, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !3070, line: 573, column: 48)
!6816 = distinct !DILexicalBlock(scope: !6794, file: !3070, line: 573, column: 7)
!6817 = !DILocation(line: 603, column: 9, scope: !6794)
!6818 = !DILocation(line: 603, column: 23, scope: !6794)
!6819 = !DILocation(line: 605, column: 24, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6794, file: !3070, line: 605, column: 7)
!6821 = !DILocation(line: 605, column: 7, scope: !6794)
!6822 = !DILocation(line: 612, column: 9, scope: !6794)
!6823 = !DILocation(line: 612, column: 23, scope: !6794)
!6824 = !DILocation(line: 619, column: 24, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6794, file: !3070, line: 619, column: 7)
!6826 = !DILocation(line: 619, column: 7, scope: !6794)
!6827 = !DILocation(line: 625, column: 9, scope: !6794)
!6828 = !DILocation(line: 625, column: 17, scope: !6794)
!6829 = !DILocation(line: 626, column: 3, scope: !6794)
!6830 = !DILocation(line: 629, column: 20, scope: !6788)
!6831 = !DILocation(line: 629, column: 8, scope: !6788)
!6832 = !DILocation(line: 518, column: 23, scope: !6788)
!6833 = !DILocation(line: 631, column: 2, scope: !6788)
!6834 = distinct !DISubprogram(name: "extract_decimal", scope: !3070, file: !3070, line: 318, type: !6835, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6837)
!6835 = !DISubroutineType(types: !6836)
!6836 = !{!156, !743}
!6837 = !{!6838, !6839, !6840}
!6838 = !DILocalVariable(name: "str", arg: 1, scope: !6834, file: !3070, line: 318, type: !743)
!6839 = !DILocalVariable(name: "sp", scope: !6834, file: !3070, line: 320, type: !108)
!6840 = !DILocalVariable(name: "val", scope: !6834, file: !3070, line: 321, type: !156)
!6841 = !DILocation(line: 0, scope: !6834)
!6842 = !DILocation(line: 320, column: 19, scope: !6834)
!6843 = !DILocation(line: 323, column: 37, scope: !6834)
!6844 = !DILocation(line: 323, column: 17, scope: !6834)
!6845 = !DILocation(line: 323, column: 9, scope: !6834)
!6846 = !DILocation(line: 323, column: 2, scope: !6834)
!6847 = !DILocation(line: 324, column: 13, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6834, file: !3070, line: 323, column: 43)
!6849 = !DILocation(line: 324, column: 24, scope: !6848)
!6850 = !DILocation(line: 324, column: 19, scope: !6848)
!6851 = !DILocation(line: 324, column: 27, scope: !6848)
!6852 = distinct !{!6852, !6846, !6853}
!6853 = !DILocation(line: 325, column: 2, scope: !6834)
!6854 = !DILocation(line: 326, column: 7, scope: !6834)
!6855 = !DILocation(line: 327, column: 2, scope: !6834)
!6856 = distinct !DISubprogram(name: "isdigit", scope: !6636, file: !6636, line: 43, type: !764, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !6857)
!6857 = !{!6858}
!6858 = !DILocalVariable(name: "a", arg: 1, scope: !6856, file: !6636, line: 43, type: !103)
!6859 = !DILocation(line: 0, scope: !6856)
!6860 = !DILocation(line: 45, column: 29, scope: !6856)
!6861 = !DILocation(line: 45, column: 45, scope: !6856)
!6862 = !DILocation(line: 45, column: 2, scope: !6856)
!6863 = distinct !DISubprogram(name: "assert_post_action", scope: !6864, file: !6864, line: 26, type: !6865, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !6867)
!6864 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6865 = !DISubroutineType(types: !6866)
!6866 = !{null, !108, !32}
!6867 = !{!6868, !6869}
!6868 = !DILocalVariable(name: "file", arg: 1, scope: !6863, file: !6864, line: 26, type: !108)
!6869 = !DILocalVariable(name: "line", arg: 2, scope: !6863, file: !6864, line: 26, type: !32)
!6870 = !DILocation(line: 0, scope: !6863)
!6871 = !DILocation(line: 43, column: 2, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6863, file: !6864, line: 43, column: 2)
!6873 = !{i64 2154851683, i64 2154851699, i64 2154851725, i64 2154851753, i64 2154851773}
!6874 = !DILocation(line: 44, column: 1, scope: !6863)
!6875 = distinct !DISubprogram(name: "assert_print", scope: !6864, file: !6864, line: 46, type: !5058, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !6876)
!6876 = !{!6877, !6878}
!6877 = !DILocalVariable(name: "fmt", arg: 1, scope: !6875, file: !6864, line: 46, type: !108)
!6878 = !DILocalVariable(name: "ap", scope: !6875, file: !6864, line: 48, type: !6879)
!6879 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4066, line: 99, baseType: !6880)
!6880 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4066, line: 40, baseType: !6881)
!6881 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6864, baseType: !6882)
!6882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6883)
!6883 = !{!6884}
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6882, file: !6864, line: 48, baseType: !102, size: 32)
!6885 = !DILocation(line: 0, scope: !6875)
!6886 = !DILocation(line: 48, column: 2, scope: !6875)
!6887 = !DILocation(line: 48, column: 10, scope: !6875)
!6888 = !DILocation(line: 50, column: 2, scope: !6875)
!6889 = !DILocation(line: 52, column: 2, scope: !6875)
!6890 = !DILocation(line: 54, column: 2, scope: !6875)
!6891 = !DILocation(line: 55, column: 1, scope: !6875)
!6892 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6893, file: !6893, line: 9, type: !323, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3102, retainedNodes: !2501)
!6893 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!6894 = !DILocation(line: 11, column: 1, scope: !6892)
!6895 = !{i64 2147565150, i64 2147565193, i64 2147565233}
!6896 = !DILocation(line: 12, column: 1, scope: !6892)
!6897 = !{i64 2147569377, i64 2147569420, i64 2147569460}
!6898 = !DILocation(line: 13, column: 1, scope: !6892)
!6899 = !{i64 2147569586, i64 2147569629, i64 2147569669}
!6900 = !DILocation(line: 14, column: 1, scope: !6892)
!6901 = !{i64 2147569755, i64 2147569798, i64 2147569838}
!6902 = !DILocation(line: 15, column: 1, scope: !6892)
!6903 = !{i64 2147569918, i64 2147569961, i64 2147570001}
!6904 = !DILocation(line: 16, column: 1, scope: !6892)
!6905 = !{i64 2147570102, i64 2147570145, i64 2147570185}
!6906 = !DILocation(line: 17, column: 1, scope: !6892)
!6907 = !{i64 2147570281, i64 2147570324, i64 2147570364}
!6908 = !DILocation(line: 18, column: 1, scope: !6892)
!6909 = !{i64 2147570524, i64 2147570567, i64 2147570607}
!6910 = !DILocation(line: 19, column: 1, scope: !6892)
!6911 = !{i64 2147570759, i64 2147570802, i64 2147570842}
!6912 = !DILocation(line: 20, column: 1, scope: !6892)
!6913 = !{i64 2147570946, i64 2147570989, i64 2147571029}
!6914 = !DILocation(line: 21, column: 1, scope: !6892)
!6915 = !{i64 2147571162, i64 2147571205, i64 2147571245}
!6916 = !DILocation(line: 22, column: 1, scope: !6892)
!6917 = !{i64 2147571365, i64 2147571408, i64 2147571448}
!6918 = !DILocation(line: 23, column: 1, scope: !6892)
!6919 = !{i64 2147571568, i64 2147571611, i64 2147571651}
!6920 = !DILocation(line: 24, column: 1, scope: !6892)
!6921 = !{i64 2147571743, i64 2147571786, i64 2147571826}
!6922 = !DILocation(line: 25, column: 1, scope: !6892)
!6923 = !{i64 2147571954, i64 2147571997, i64 2147572037}
!6924 = !DILocation(line: 26, column: 1, scope: !6892)
!6925 = !{i64 2147572158, i64 2147572201, i64 2147572241}
!6926 = !DILocation(line: 27, column: 1, scope: !6892)
!6927 = !{i64 2147572351, i64 2147572394, i64 2147572434}
!6928 = !DILocation(line: 28, column: 1, scope: !6892)
!6929 = !{i64 2147572553, i64 2147572596, i64 2147572636}
!6930 = !DILocation(line: 29, column: 1, scope: !6892)
!6931 = !{i64 2147572752, i64 2147572795, i64 2147572835}
!6932 = !DILocation(line: 30, column: 1, scope: !6892)
!6933 = !{i64 2147572979, i64 2147573022, i64 2147573062}
!6934 = !DILocation(line: 31, column: 1, scope: !6892)
!6935 = !{i64 2147573181, i64 2147573224, i64 2147573264}
!6936 = !DILocation(line: 32, column: 1, scope: !6892)
!6937 = !{i64 2147573396, i64 2147573439, i64 2147573479}
!6938 = !DILocation(line: 33, column: 1, scope: !6892)
!6939 = !{i64 2147573568, i64 2147573611, i64 2147573651}
!6940 = !DILocation(line: 34, column: 1, scope: !6892)
!6941 = !{i64 2147573770, i64 2147573813, i64 2147573853}
!6942 = !DILocation(line: 35, column: 1, scope: !6892)
!6943 = !{i64 2147573996, i64 2147574039, i64 2147574079}
!6944 = !DILocation(line: 36, column: 1, scope: !6892)
!6945 = !{i64 2147574195, i64 2147574238, i64 2147574278}
!6946 = !DILocation(line: 37, column: 1, scope: !6892)
!6947 = !{i64 2147574370, i64 2147574413, i64 2147574453}
!6948 = !DILocation(line: 38, column: 1, scope: !6892)
!6949 = !{i64 2147574638, i64 2147574681, i64 2147574721}
!6950 = !DILocation(line: 39, column: 1, scope: !6892)
!6951 = !{i64 2147574891, i64 2147574934, i64 2147574974}
!6952 = !DILocation(line: 40, column: 1, scope: !6892)
!6953 = !{i64 2147575132, i64 2147575175, i64 2147575215}
!6954 = !DILocation(line: 41, column: 1, scope: !6892)
!6955 = !{i64 2147575367, i64 2147575410, i64 2147575450}
!6956 = !DILocation(line: 42, column: 1, scope: !6892)
!6957 = !{i64 2147575599, i64 2147575642, i64 2147575682}
!6958 = !DILocation(line: 43, column: 1, scope: !6892)
!6959 = !{i64 2147575825, i64 2147575868, i64 2147575908}
!6960 = !DILocation(line: 44, column: 1, scope: !6892)
!6961 = !{i64 2147576063, i64 2147576106, i64 2147576146}
!6962 = !DILocation(line: 45, column: 1, scope: !6892)
!6963 = !{i64 2147576289, i64 2147576332, i64 2147576372}
!6964 = !DILocation(line: 46, column: 1, scope: !6892)
!6965 = !{i64 2147576524, i64 2147576567, i64 2147576607}
!6966 = !DILocation(line: 47, column: 1, scope: !6892)
!6967 = !{i64 2147576759, i64 2147576802, i64 2147576842}
!6968 = !DILocation(line: 48, column: 1, scope: !6892)
!6969 = !{i64 2147576997, i64 2147577040, i64 2147577080}
!6970 = !DILocation(line: 49, column: 1, scope: !6892)
!6971 = !{i64 2147577271, i64 2147577314, i64 2147577354}
!6972 = !DILocation(line: 50, column: 1, scope: !6892)
!6973 = !{i64 2147577509, i64 2147577552, i64 2147577592}
!6974 = !DILocation(line: 51, column: 1, scope: !6892)
!6975 = !{i64 2147577762, i64 2147577805, i64 2147577845}
!6976 = !DILocation(line: 52, column: 1, scope: !6892)
!6977 = !{i64 2147578006, i64 2147578049, i64 2147578089}
!6978 = !DILocation(line: 53, column: 1, scope: !6892)
!6979 = !{i64 2147582317, i64 2147582360, i64 2147582400}
!6980 = !DILocation(line: 54, column: 1, scope: !6892)
!6981 = !{i64 2147582558, i64 2147582601, i64 2147582641}
!6982 = !DILocation(line: 55, column: 1, scope: !6892)
!6983 = !{i64 2147582805, i64 2147582848, i64 2147582888}
!6984 = !DILocation(line: 56, column: 1, scope: !6892)
!6985 = !{i64 2147583040, i64 2147583083, i64 2147583123}
!6986 = !DILocation(line: 57, column: 1, scope: !6892)
!6987 = !{i64 2147583275, i64 2147583318, i64 2147583358}
!6988 = !DILocation(line: 58, column: 1, scope: !6892)
!6989 = !{i64 2147583510, i64 2147583553, i64 2147583593}
!6990 = !DILocation(line: 59, column: 1, scope: !6892)
!6991 = !{i64 2147583748, i64 2147583791, i64 2147583831}
!6992 = !DILocation(line: 60, column: 1, scope: !6892)
!6993 = !{i64 2147583989, i64 2147584032, i64 2147584072}
!6994 = !DILocation(line: 61, column: 1, scope: !6892)
!6995 = !{i64 2147584269, i64 2147584312, i64 2147584352}
!6996 = !DILocation(line: 62, column: 1, scope: !6892)
!6997 = !{i64 2147584528, i64 2147584571, i64 2147584611}
!6998 = !DILocation(line: 63, column: 1, scope: !6892)
!6999 = !{i64 2147584766, i64 2147584809, i64 2147584849}
!7000 = !DILocation(line: 64, column: 1, scope: !6892)
!7001 = !{i64 2147585025, i64 2147585068, i64 2147585108}
!7002 = !DILocation(line: 65, column: 1, scope: !6892)
!7003 = !{i64 2147585254, i64 2147585297, i64 2147585337}
!7004 = !DILocation(line: 66, column: 1, scope: !6892)
!7005 = !{i64 2147585462, i64 2147585505, i64 2147585545}
!7006 = !DILocation(line: 67, column: 1, scope: !6892)
!7007 = !{i64 2147585673, i64 2147585716, i64 2147585756}
!7008 = !DILocation(line: 68, column: 1, scope: !6892)
!7009 = !{i64 2147585908, i64 2147585951, i64 2147585991}
!7010 = !DILocation(line: 69, column: 1, scope: !6892)
!7011 = !{i64 2147586137, i64 2147586180, i64 2147586220}
!7012 = !DILocation(line: 70, column: 1, scope: !6892)
!7013 = !{i64 2147586354, i64 2147586397, i64 2147586437}
!7014 = !DILocation(line: 71, column: 1, scope: !6892)
!7015 = !{i64 2147586583, i64 2147586626, i64 2147586666}
!7016 = !DILocation(line: 72, column: 1, scope: !6892)
!7017 = !{i64 2147586821, i64 2147586864, i64 2147586904}
!7018 = !DILocation(line: 73, column: 1, scope: !6892)
!7019 = !{i64 2147587053, i64 2147587096, i64 2147587136}
!7020 = !DILocation(line: 74, column: 1, scope: !6892)
!7021 = !{i64 2147587279, i64 2147587322, i64 2147587362}
!7022 = !DILocation(line: 75, column: 1, scope: !6892)
!7023 = !{i64 2147587496, i64 2147587539, i64 2147587579}
!7024 = !DILocation(line: 76, column: 1, scope: !6892)
!7025 = !{i64 2147587728, i64 2147587771, i64 2147587811}
!7026 = !DILocation(line: 77, column: 1, scope: !6892)
!7027 = !{i64 2147587954, i64 2147587997, i64 2147588037}
!7028 = !DILocation(line: 78, column: 1, scope: !6892)
!7029 = !{i64 2147588168, i64 2147588211, i64 2147588251}
!7030 = !DILocation(line: 79, column: 1, scope: !6892)
!7031 = !{i64 2147588388, i64 2147588431, i64 2147588471}
!7032 = !DILocation(line: 80, column: 1, scope: !6892)
!7033 = !{i64 2147588620, i64 2147588663, i64 2147588703}
!7034 = !DILocation(line: 81, column: 1, scope: !6892)
!7035 = !{i64 2147588828, i64 2147588871, i64 2147588911}
!7036 = !DILocation(line: 82, column: 1, scope: !6892)
!7037 = !{i64 2147589033, i64 2147589076, i64 2147589116}
!7038 = !DILocation(line: 83, column: 1, scope: !6892)
!7039 = !{i64 2147589250, i64 2147589293, i64 2147589333}
!7040 = !DILocation(line: 84, column: 1, scope: !6892)
!7041 = !{i64 2147589464, i64 2147589507, i64 2147589547}
!7042 = !DILocation(line: 85, column: 1, scope: !6892)
!7043 = !{i64 2147589690, i64 2147589733, i64 2147589773}
!7044 = !DILocation(line: 86, column: 1, scope: !6892)
!7045 = !{i64 2147589910, i64 2147589953, i64 2147589993}
!7046 = !DILocation(line: 87, column: 1, scope: !6892)
!7047 = !{i64 2147590115, i64 2147590158, i64 2147590198}
!7048 = !DILocation(line: 88, column: 1, scope: !6892)
!7049 = !{i64 2147594408, i64 2147594451, i64 2147594491}
!7050 = !DILocation(line: 89, column: 1, scope: !6892)
!7051 = !{i64 2147594643, i64 2147594686, i64 2147594726}
!7052 = !DILocation(line: 90, column: 1, scope: !6892)
!7053 = !{i64 2147594893, i64 2147594936, i64 2147594976}
!7054 = !DILocation(line: 91, column: 1, scope: !6892)
!7055 = !{i64 2147595143, i64 2147595186, i64 2147595226}
!7056 = !DILocation(line: 92, column: 1, scope: !6892)
!7057 = !{i64 2147595381, i64 2147595424, i64 2147595464}
!7058 = !DILocation(line: 93, column: 1, scope: !6892)
!7059 = !{i64 2147595592, i64 2147595635, i64 2147595675}
!7060 = !DILocation(line: 94, column: 1, scope: !6892)
!7061 = !{i64 2147595809, i64 2147595852, i64 2147595892}
!7062 = !DILocation(line: 95, column: 1, scope: !6892)
!7063 = !{i64 2147596005, i64 2147596048, i64 2147596088}
!7064 = !DILocation(line: 96, column: 1, scope: !6892)
!7065 = !{i64 2147596207, i64 2147596250, i64 2147596290}
!7066 = !DILocation(line: 97, column: 1, scope: !6892)
!7067 = !{i64 2147596400, i64 2147596443, i64 2147596483}
!7068 = !DILocation(line: 98, column: 1, scope: !6892)
!7069 = !{i64 2147596608, i64 2147596651, i64 2147596691}
!7070 = !DILocation(line: 99, column: 1, scope: !6892)
!7071 = !{i64 2147596804, i64 2147596847, i64 2147596887}
!7072 = !DILocation(line: 100, column: 1, scope: !6892)
!7073 = !{i64 2147597054, i64 2147597097, i64 2147597137}
!7074 = !DILocation(line: 101, column: 1, scope: !6892)
!7075 = !{i64 2147597265, i64 2147597308, i64 2147597348}
!7076 = !DILocation(line: 102, column: 1, scope: !6892)
!7077 = !{i64 2147597464, i64 2147597507, i64 2147597547}
!7078 = !DILocation(line: 103, column: 1, scope: !6892)
!7079 = !{i64 2147597639, i64 2147597682, i64 2147597722}
!7080 = !DILocation(line: 104, column: 1, scope: !6892)
!7081 = !{i64 2147597823, i64 2147597866, i64 2147597906}
!7082 = !DILocation(line: 105, column: 1, scope: !6892)
!7083 = !{i64 2147598025, i64 2147598068, i64 2147598108}
!7084 = !DILocation(line: 106, column: 1, scope: !6892)
!7085 = !{i64 2147598206, i64 2147598249, i64 2147598289}
!7086 = !DILocation(line: 107, column: 1, scope: !6892)
!7087 = !{i64 2147598405, i64 2147598448, i64 2147598488}
!7088 = !DILocation(line: 108, column: 1, scope: !6892)
!7089 = !{i64 2147598610, i64 2147598653, i64 2147598693}
!7090 = !DILocation(line: 109, column: 1, scope: !6892)
!7091 = !{i64 2147598803, i64 2147598846, i64 2147598886}
!7092 = !DILocation(line: 110, column: 1, scope: !6892)
!7093 = !{i64 2147598969, i64 2147599012, i64 2147599052}
!7094 = !DILocation(line: 111, column: 1, scope: !6892)
!7095 = !{i64 2147599153, i64 2147599196, i64 2147599236}
!7096 = !DILocation(line: 112, column: 1, scope: !6892)
!7097 = !{i64 2147599343, i64 2147599386, i64 2147599426}
!7098 = !DILocation(line: 113, column: 1, scope: !6892)
!7099 = !{i64 2147599527, i64 2147599570, i64 2147599610}
!7100 = !DILocation(line: 114, column: 1, scope: !6892)
!7101 = !{i64 2147599741, i64 2147599784, i64 2147599824}
!7102 = !DILocation(line: 115, column: 1, scope: !6892)
!7103 = !{i64 2147599952, i64 2147599995, i64 2147600035}
!7104 = !DILocation(line: 116, column: 1, scope: !6892)
!7105 = !{i64 2147600175, i64 2147600218, i64 2147600258}
!7106 = !DILocation(line: 117, column: 1, scope: !6892)
!7107 = !{i64 2147600359, i64 2147600402, i64 2147600442}
!7108 = !DILocation(line: 118, column: 1, scope: !6892)
!7109 = !{i64 2147600573, i64 2147600616, i64 2147600656}
!7110 = !DILocation(line: 119, column: 1, scope: !6892)
!7111 = !{i64 2147600739, i64 2147600782, i64 2147600822}
!7112 = !DILocation(line: 120, column: 1, scope: !6892)
!7113 = !{i64 2147600920, i64 2147600963, i64 2147601003}
!7114 = !DILocation(line: 121, column: 1, scope: !6892)
!7115 = !{i64 2147601113, i64 2147601156, i64 2147601196}
!7116 = !DILocation(line: 122, column: 1, scope: !6892)
!7117 = !{i64 2147601339, i64 2147601382, i64 2147601422}
!7118 = !DILocation(line: 123, column: 1, scope: !6892)
!7119 = !{i64 2147601553, i64 2147601596, i64 2147601636}
!7120 = !DILocation(line: 124, column: 1, scope: !6892)
!7121 = !{i64 2147601779, i64 2147601822, i64 2147601862}
!7122 = !DILocation(line: 125, column: 1, scope: !6892)
!7123 = !{i64 2147601996, i64 2147602039, i64 2147602079}
!7124 = !DILocation(line: 126, column: 1, scope: !6892)
!7125 = !{i64 2147602273, i64 2147602316, i64 2147602356}
!7126 = !DILocation(line: 127, column: 1, scope: !6892)
!7127 = !{i64 2147602499, i64 2147602542, i64 2147602582}
!7128 = !DILocation(line: 128, column: 1, scope: !6892)
!7129 = !{i64 2147602707, i64 2147602750, i64 2147602790}
!7130 = !DILocation(line: 129, column: 1, scope: !6892)
!7131 = !{i64 2147602903, i64 2147602946, i64 2147602986}
!7132 = !DILocation(line: 130, column: 1, scope: !6892)
!7133 = !{i64 2147603168, i64 2147603211, i64 2147603251}
!7134 = !DILocation(line: 131, column: 1, scope: !6892)
!7135 = !{i64 2147607443, i64 2147607486, i64 2147607526}
!7136 = !DILocation(line: 132, column: 1, scope: !6892)
!7137 = !{i64 2147607618, i64 2147607661, i64 2147607701}
!7138 = !DILocation(line: 133, column: 1, scope: !6892)
!7139 = !{i64 2147607872, i64 2147607915, i64 2147607955}
!7140 = !DILocation(line: 134, column: 1, scope: !6892)
!7141 = !{i64 2147608071, i64 2147608114, i64 2147608154}
!7142 = !DILocation(line: 135, column: 1, scope: !6892)
!7143 = !{i64 2147608313, i64 2147608356, i64 2147608396}
!7144 = !DILocation(line: 136, column: 1, scope: !6892)
!7145 = !{i64 2147608476, i64 2147608519, i64 2147608559}
!7146 = !DILocation(line: 137, column: 1, scope: !6892)
!7147 = !{i64 2147608663, i64 2147608706, i64 2147608746}
!7148 = !DILocation(line: 138, column: 1, scope: !6892)
!7149 = !{i64 2147608871, i64 2147608914, i64 2147608954}
!7150 = !DILocation(line: 139, column: 1, scope: !6892)
!7151 = !{i64 2147609067, i64 2147609110, i64 2147609150}
!7152 = !DILocation(line: 140, column: 1, scope: !6892)
!7153 = !{i64 2147609260, i64 2147609303, i64 2147609343}
!7154 = !DILocation(line: 141, column: 1, scope: !6892)
!7155 = !{i64 2147609443, i64 2147609486, i64 2147609526}
!7156 = !DILocation(line: 142, column: 1, scope: !6892)
!7157 = !{i64 2147609657, i64 2147609700, i64 2147609740}
!7158 = !DILocation(line: 143, column: 1, scope: !6892)
!7159 = !{i64 2147609868, i64 2147609911, i64 2147609951}
!7160 = !DILocation(line: 144, column: 1, scope: !6892)
!7161 = !{i64 2147610088, i64 2147610131, i64 2147610171}
!7162 = !DILocation(line: 145, column: 1, scope: !6892)
!7163 = !{i64 2147610295, i64 2147610338, i64 2147610378}
!7164 = !DILocation(line: 146, column: 1, scope: !6892)
!7165 = !{i64 2147610568, i64 2147610611, i64 2147610651}
!7166 = !DILocation(line: 147, column: 1, scope: !6892)
!7167 = !{i64 2147610816, i64 2147610859, i64 2147610899}
!7168 = !DILocation(line: 148, column: 1, scope: !6892)
!7169 = !{i64 2147611015, i64 2147611058, i64 2147611098}
!7170 = !DILocation(line: 149, column: 1, scope: !6892)
!7171 = !{i64 2147611250, i64 2147611293, i64 2147611333}
!7172 = !DILocation(line: 150, column: 1, scope: !6892)
!7173 = !{i64 2147611500, i64 2147611543, i64 2147611583}
!7174 = !DILocation(line: 151, column: 1, scope: !6892)
!7175 = !{i64 2147611702, i64 2147611745, i64 2147611785}
!7176 = !DILocation(line: 152, column: 1, scope: !6892)
!7177 = !{i64 2147611925, i64 2147611968, i64 2147612008}
!7178 = !DILocation(line: 153, column: 1, scope: !6892)
!7179 = !{i64 2147612139, i64 2147612182, i64 2147612222}
!7180 = !DILocation(line: 154, column: 1, scope: !6892)
!7181 = !{i64 2147612383, i64 2147612426, i64 2147612466}
!7182 = !DILocation(line: 155, column: 1, scope: !6892)
!7183 = !{i64 2147612612, i64 2147612655, i64 2147612695}
!7184 = !DILocation(line: 156, column: 1, scope: !6892)
!7185 = !{i64 2147612841, i64 2147612884, i64 2147612924}
!7186 = !DILocation(line: 157, column: 1, scope: !6892)
!7187 = !{i64 2147613049, i64 2147613092, i64 2147613132}
!7188 = !DILocation(line: 158, column: 1, scope: !6892)
!7189 = !{i64 2147613287, i64 2147613330, i64 2147613370}
!7190 = !DILocation(line: 159, column: 1, scope: !6892)
!7191 = !{i64 2147613513, i64 2147613556, i64 2147613596}
!7192 = !DILocation(line: 160, column: 1, scope: !6892)
!7193 = !{i64 2147613772, i64 2147613815, i64 2147613855}
!7194 = !DILocation(line: 161, column: 1, scope: !6892)
!7195 = !{i64 2147613992, i64 2147614035, i64 2147614075}
!7196 = !DILocation(line: 162, column: 1, scope: !6892)
!7197 = !{i64 2147614224, i64 2147614267, i64 2147614307}
!7198 = !DILocation(line: 163, column: 1, scope: !6892)
!7199 = !{i64 2147614465, i64 2147614508, i64 2147614548}
!7200 = !DILocation(line: 164, column: 1, scope: !6892)
!7201 = !{i64 2147614706, i64 2147614749, i64 2147614789}
!7202 = !DILocation(line: 165, column: 1, scope: !6892)
!7203 = !{i64 2147614929, i64 2147614972, i64 2147615012}
!7204 = !DILocation(line: 166, column: 1, scope: !6892)
!7205 = !{i64 2147615146, i64 2147615189, i64 2147615229}
!7206 = !DILocation(line: 167, column: 1, scope: !6892)
!7207 = !{i64 2147615387, i64 2147615430, i64 2147615470}
!7208 = !DILocation(line: 168, column: 1, scope: !6892)
!7209 = !{i64 2147615574, i64 2147615617, i64 2147615657}
!7210 = !DILocation(line: 169, column: 1, scope: !6892)
!7211 = !{i64 2147615761, i64 2147615804, i64 2147615844}
!7212 = !DILocation(line: 170, column: 1, scope: !6892)
!7213 = !{i64 2147615924, i64 2147615967, i64 2147616007}
!7214 = !DILocation(line: 171, column: 1, scope: !6892)
!7215 = !{i64 2147620190, i64 2147620233, i64 2147620273}
!7216 = !DILocation(line: 172, column: 1, scope: !6892)
!7217 = !{i64 2147620383, i64 2147620426, i64 2147620466}
!7218 = !DILocation(line: 173, column: 1, scope: !6892)
!7219 = !{i64 2147620642, i64 2147620685, i64 2147620725}
!7220 = !DILocation(line: 174, column: 1, scope: !6892)
!7221 = !{i64 2147620865, i64 2147620908, i64 2147620948}
!7222 = !DILocation(line: 175, column: 1, scope: !6892)
!7223 = !{i64 2147621094, i64 2147621137, i64 2147621177}
!7224 = !DILocation(line: 176, column: 1, scope: !6892)
!7225 = !{i64 2147621308, i64 2147621351, i64 2147621391}
!7226 = !DILocation(line: 177, column: 1, scope: !6892)
!7227 = !{i64 2147621510, i64 2147621553, i64 2147621593}
!7228 = !DILocation(line: 178, column: 1, scope: !6892)
!7229 = !{i64 2147621706, i64 2147621749, i64 2147621789}
!7230 = !DILocation(line: 179, column: 1, scope: !6892)
!7231 = !{i64 2147621918, i64 2147621961, i64 2147622001}
!7232 = !DILocation(line: 180, column: 1, scope: !6892)
!7233 = !{i64 2147622139, i64 2147622182, i64 2147622222}
!7234 = !DILocation(line: 181, column: 1, scope: !6892)
!7235 = !{i64 2147622353, i64 2147622396, i64 2147622436}
!7236 = !DILocation(line: 182, column: 1, scope: !6892)
!7237 = !{i64 2147622543, i64 2147622586, i64 2147622626}
!7238 = !DILocation(line: 183, column: 1, scope: !6892)
!7239 = !{i64 2147622742, i64 2147622785, i64 2147622825}
!7240 = !DILocation(line: 184, column: 1, scope: !6892)
!7241 = !{i64 2147622947, i64 2147622990, i64 2147623030}
!7242 = !DILocation(line: 185, column: 1, scope: !6892)
!7243 = !{i64 2147623167, i64 2147623210, i64 2147623250}
!7244 = !DILocation(line: 186, column: 1, scope: !6892)
!7245 = !{i64 2147623368, i64 2147623411, i64 2147623451}
!7246 = !DILocation(line: 187, column: 1, scope: !6892)
!7247 = !{i64 2147623567, i64 2147623610, i64 2147623650}
!7248 = !DILocation(line: 188, column: 1, scope: !6892)
!7249 = !{i64 2147623772, i64 2147623815, i64 2147623855}
!7250 = !DILocation(line: 189, column: 1, scope: !6892)
!7251 = !{i64 2147623941, i64 2147623984, i64 2147624024}
!7252 = !DILocation(line: 190, column: 1, scope: !6892)
!7253 = !{i64 2147624125, i64 2147624168, i64 2147624208}
!7254 = !DILocation(line: 191, column: 1, scope: !6892)
!7255 = !{i64 2147624309, i64 2147624352, i64 2147624392}
!7256 = !DILocation(line: 192, column: 1, scope: !6892)
!7257 = !{i64 2147624493, i64 2147624536, i64 2147624576}
!7258 = !DILocation(line: 193, column: 1, scope: !6892)
!7259 = !{i64 2147624731, i64 2147624774, i64 2147624814}
!7260 = !DILocation(line: 194, column: 1, scope: !6892)
!7261 = !{i64 2147624961, i64 2147625004, i64 2147625044}
!7262 = !DILocation(line: 195, column: 1, scope: !6892)
!7263 = !{i64 2147625190, i64 2147625233, i64 2147625273}
!7264 = !DILocation(line: 196, column: 1, scope: !6892)
!7265 = !{i64 2147625377, i64 2147625420, i64 2147625460}
!7266 = !DILocation(line: 197, column: 1, scope: !6892)
!7267 = !{i64 2147625573, i64 2147625616, i64 2147625656}
!7268 = !DILocation(line: 198, column: 1, scope: !6892)
!7269 = !{i64 2147625781, i64 2147625824, i64 2147625864}
!7270 = !DILocation(line: 199, column: 1, scope: !6892)
!7271 = !{i64 2147625993, i64 2147626036, i64 2147626076}
!7272 = !DILocation(line: 200, column: 1, scope: !6892)
!7273 = !{i64 2147626192, i64 2147626235, i64 2147626275}
!7274 = !DILocation(line: 201, column: 1, scope: !6892)
!7275 = !{i64 2147626430, i64 2147626473, i64 2147626513}
!7276 = !DILocation(line: 202, column: 1, scope: !6892)
!7277 = !{i64 2147626626, i64 2147626669, i64 2147626709}
!7278 = !DILocation(line: 203, column: 1, scope: !6892)
!7279 = !{i64 2147626828, i64 2147626871, i64 2147626911}
!7280 = !DILocation(line: 204, column: 1, scope: !6892)
!7281 = !{i64 2147627021, i64 2147627064, i64 2147627104}
!7282 = !DILocation(line: 205, column: 1, scope: !6892)
!7283 = !{i64 2147627255, i64 2147627298, i64 2147627338}
!7284 = !DILocation(line: 206, column: 1, scope: !6892)
!7285 = !{i64 2147627418, i64 2147627461, i64 2147627501}
!7286 = !DILocation(line: 207, column: 1, scope: !6892)
!7287 = !{i64 2147627657, i64 2147627700, i64 2147627740}
!7288 = !DILocation(line: 208, column: 1, scope: !6892)
!7289 = !{i64 2147627896, i64 2147627939, i64 2147627979}
!7290 = !DILocation(line: 209, column: 1, scope: !6892)
!7291 = !{i64 2147628132, i64 2147628175, i64 2147628215}
!7292 = !DILocation(line: 210, column: 1, scope: !6892)
!7293 = !{i64 2147628362, i64 2147628405, i64 2147628445}
!7294 = !DILocation(line: 211, column: 1, scope: !6892)
!7295 = !{i64 2147628549, i64 2147628592, i64 2147628632}
!7296 = !DILocation(line: 212, column: 1, scope: !6892)
!7297 = !{i64 2147628748, i64 2147628791, i64 2147628831}
!7298 = !DILocation(line: 213, column: 1, scope: !6892)
!7299 = !{i64 2147629019, i64 2147629062, i64 2147629102}
!7300 = !DILocation(line: 214, column: 1, scope: !6892)
!7301 = !{i64 2147629194, i64 2147629237, i64 2147629277}
!7302 = !DILocation(line: 215, column: 1, scope: !6892)
!7303 = !{i64 2147633489, i64 2147633532, i64 2147633572}
!7304 = !DILocation(line: 216, column: 1, scope: !6892)
!7305 = !{i64 2147633697, i64 2147633740, i64 2147633780}
!7306 = !DILocation(line: 217, column: 1, scope: !6892)
!7307 = !{i64 2147633915, i64 2147633958, i64 2147633998}
!7308 = !DILocation(line: 218, column: 1, scope: !6892)
!7309 = !{i64 2147634105, i64 2147634148, i64 2147634188}
!7310 = !DILocation(line: 219, column: 1, scope: !6892)
!7311 = !{i64 2147634337, i64 2147634380, i64 2147634420}
!7312 = !DILocation(line: 220, column: 1, scope: !6892)
!7313 = !{i64 2147634557, i64 2147634600, i64 2147634640}
!7314 = !DILocation(line: 221, column: 1, scope: !6892)
!7315 = !{i64 2147634753, i64 2147634796, i64 2147634836}
!7316 = !DILocation(line: 222, column: 1, scope: !6892)
!7317 = !{i64 2147634959, i64 2147635002, i64 2147635042}
!7318 = !DILocation(line: 223, column: 1, scope: !6892)
!7319 = !{i64 2147635164, i64 2147635207, i64 2147635247}
!7320 = !DILocation(line: 224, column: 1, scope: !6892)
!7321 = !{i64 2147635390, i64 2147635433, i64 2147635473}
!7322 = !DILocation(line: 225, column: 1, scope: !6892)
!7323 = !{i64 2147635598, i64 2147635641, i64 2147635681}
!7324 = !DILocation(line: 226, column: 1, scope: !6892)
!7325 = !{i64 2147635794, i64 2147635837, i64 2147635877}
!7326 = !DILocation(line: 227, column: 1, scope: !6892)
!7327 = !{i64 2147636026, i64 2147636069, i64 2147636109}
!7328 = !DILocation(line: 228, column: 1, scope: !6892)
!7329 = !{i64 2147636210, i64 2147636253, i64 2147636293}
!7330 = !DILocation(line: 229, column: 1, scope: !6892)
!7331 = !{i64 2147636419, i64 2147636462, i64 2147636502}
!7332 = !DILocation(line: 230, column: 1, scope: !6892)
!7333 = !{i64 2147636627, i64 2147636670, i64 2147636710}
!7334 = !DILocation(line: 231, column: 1, scope: !6892)
!7335 = !{i64 2147636823, i64 2147636866, i64 2147636906}
!7336 = !DILocation(line: 232, column: 1, scope: !6892)
!7337 = !{i64 2147637007, i64 2147637050, i64 2147637090}
!7338 = !DILocation(line: 233, column: 1, scope: !6892)
!7339 = !{i64 2147637233, i64 2147637276, i64 2147637316}
!7340 = !DILocation(line: 234, column: 1, scope: !6892)
!7341 = !{i64 2147637459, i64 2147637502, i64 2147637542}
!7342 = !DILocation(line: 235, column: 1, scope: !6892)
!7343 = !{i64 2147637685, i64 2147637728, i64 2147637768}
!7344 = !DILocation(line: 236, column: 1, scope: !6892)
!7345 = !{i64 2147637911, i64 2147637954, i64 2147637994}
!7346 = !DILocation(line: 237, column: 1, scope: !6892)
!7347 = !{i64 2147638137, i64 2147638180, i64 2147638220}
!7348 = !DILocation(line: 238, column: 1, scope: !6892)
!7349 = !{i64 2147638369, i64 2147638412, i64 2147638452}
!7350 = !DILocation(line: 239, column: 1, scope: !6892)
!7351 = !{i64 2147638607, i64 2147638650, i64 2147638690}
!7352 = !DILocation(line: 240, column: 1, scope: !6892)
!7353 = !{i64 2147638827, i64 2147638870, i64 2147638910}
!7354 = !DILocation(line: 241, column: 1, scope: !6892)
!7355 = !{i64 2147639071, i64 2147639114, i64 2147639154}
!7356 = !DILocation(line: 242, column: 1, scope: !6892)
!7357 = !{i64 2147639312, i64 2147639355, i64 2147639395}
!7358 = !DILocation(line: 243, column: 1, scope: !6892)
!7359 = !{i64 2147639547, i64 2147639590, i64 2147639630}
!7360 = !DILocation(line: 244, column: 1, scope: !6892)
!7361 = !{i64 2147639779, i64 2147639822, i64 2147639862}
!7362 = !DILocation(line: 245, column: 1, scope: !6892)
!7363 = !{i64 2147639981, i64 2147640024, i64 2147640064}
!7364 = !DILocation(line: 246, column: 1, scope: !6892)
!7365 = !{i64 2147640231, i64 2147640274, i64 2147640314}
!7366 = !DILocation(line: 247, column: 1, scope: !6892)
!7367 = !{i64 2147640469, i64 2147640512, i64 2147640552}
!7368 = !DILocation(line: 248, column: 1, scope: !6892)
!7369 = !{i64 2147640677, i64 2147640720, i64 2147640760}
!7370 = !DILocation(line: 249, column: 1, scope: !6892)
!7371 = !{i64 2147640873, i64 2147640916, i64 2147640956}
!7372 = !DILocation(line: 250, column: 1, scope: !6892)
!7373 = !{i64 2147641057, i64 2147641100, i64 2147641140}
!7374 = !DILocation(line: 251, column: 1, scope: !6892)
!7375 = !{i64 2147641274, i64 2147641317, i64 2147641357}
!7376 = !DILocation(line: 252, column: 1, scope: !6892)
!7377 = !{i64 2147641479, i64 2147641522, i64 2147641562}
!7378 = !DILocation(line: 253, column: 1, scope: !6892)
!7379 = !{i64 2147641714, i64 2147641757, i64 2147641797}
!7380 = !DILocation(line: 254, column: 1, scope: !6892)
!7381 = !{i64 2147641937, i64 2147641980, i64 2147642020}
!7382 = !DILocation(line: 255, column: 1, scope: !6892)
!7383 = !{i64 2147646222, i64 2147646265, i64 2147646305}
!7384 = !DILocation(line: 256, column: 1, scope: !6892)
!7385 = !{i64 2147646460, i64 2147646503, i64 2147646543}
!7386 = !DILocation(line: 257, column: 1, scope: !6892)
!7387 = !{i64 2147646698, i64 2147646741, i64 2147646781}
!7388 = !DILocation(line: 258, column: 1, scope: !6892)
!7389 = !{i64 2147646915, i64 2147646958, i64 2147646998}
!7390 = !DILocation(line: 259, column: 1, scope: !6892)
!7391 = !{i64 2147647120, i64 2147647163, i64 2147647203}
!7392 = !DILocation(line: 260, column: 1, scope: !6892)
!7393 = !{i64 2147647313, i64 2147647356, i64 2147647396}
!7394 = !DILocation(line: 261, column: 1, scope: !6892)
!7395 = !{i64 2147647566, i64 2147647609, i64 2147647649}
!7396 = !DILocation(line: 262, column: 1, scope: !6892)
!7397 = !{i64 2147647774, i64 2147647817, i64 2147647857}
!7398 = !DILocation(line: 263, column: 1, scope: !6892)
!7399 = !{i64 2147647970, i64 2147648013, i64 2147648053}
!7400 = !DILocation(line: 264, column: 1, scope: !6892)
!7401 = !{i64 2147648184, i64 2147648227, i64 2147648267}
!7402 = !DILocation(line: 265, column: 1, scope: !6892)
!7403 = !{i64 2147648392, i64 2147648435, i64 2147648475}
!7404 = !DILocation(line: 266, column: 1, scope: !6892)
!7405 = !{i64 2147648582, i64 2147648625, i64 2147648665}
!7406 = !DILocation(line: 267, column: 1, scope: !6892)
!7407 = !{i64 2147648796, i64 2147648839, i64 2147648879}
!7408 = !DILocation(line: 268, column: 1, scope: !6892)
!7409 = !{i64 2147649058, i64 2147649101, i64 2147649141}
!7410 = !DILocation(line: 269, column: 1, scope: !6892)
!7411 = !{i64 2147649269, i64 2147649312, i64 2147649352}
!7412 = !DILocation(line: 270, column: 1, scope: !6892)
!7413 = !{i64 2147649513, i64 2147649556, i64 2147649596}
!7414 = !DILocation(line: 271, column: 1, scope: !6892)
!7415 = !{i64 2147649724, i64 2147649767, i64 2147649807}
!7416 = !DILocation(line: 272, column: 1, scope: !6892)
!7417 = !{i64 2147649953, i64 2147649996, i64 2147650036}
!7418 = !DILocation(line: 273, column: 1, scope: !6892)
!7419 = !{i64 2147650218, i64 2147650261, i64 2147650301}
!7420 = !DILocation(line: 274, column: 1, scope: !6892)
!7421 = !{i64 2147650423, i64 2147650466, i64 2147650506}
!7422 = !DILocation(line: 275, column: 1, scope: !6892)
!7423 = !{i64 2147650619, i64 2147650662, i64 2147650702}
!7424 = !DILocation(line: 276, column: 1, scope: !6892)
!7425 = !{i64 2147650842, i64 2147650885, i64 2147650925}
!7426 = !DILocation(line: 277, column: 1, scope: !6892)
!7427 = !{i64 2147651005, i64 2147651048, i64 2147651088}
!7428 = !DILocation(line: 278, column: 1, scope: !6892)
!7429 = !{i64 2147651210, i64 2147651253, i64 2147651293}
!7430 = !DILocation(line: 279, column: 1, scope: !6892)
!7431 = !{i64 2147651430, i64 2147651473, i64 2147651513}
!7432 = !DILocation(line: 280, column: 1, scope: !6892)
!7433 = !{i64 2147651644, i64 2147651687, i64 2147651727}
!7434 = !DILocation(line: 281, column: 1, scope: !6892)
!7435 = !{i64 2147651888, i64 2147651931, i64 2147651971}
!7436 = !DILocation(line: 282, column: 1, scope: !6892)
!7437 = !{i64 2147652120, i64 2147652163, i64 2147652203}
!7438 = !DILocation(line: 283, column: 1, scope: !6892)
!7439 = !{i64 2147652334, i64 2147652377, i64 2147652417}
!7440 = !DILocation(line: 284, column: 1, scope: !6892)
!7441 = !{i64 2147652545, i64 2147652588, i64 2147652628}
!7442 = !DILocation(line: 285, column: 1, scope: !6892)
!7443 = !{i64 2147652738, i64 2147652781, i64 2147652821}
!7444 = !DILocation(line: 286, column: 1, scope: !6892)
!7445 = !{i64 2147652937, i64 2147652980, i64 2147653020}
!7446 = !DILocation(line: 287, column: 1, scope: !6892)
!7447 = !{i64 2147653109, i64 2147653152, i64 2147653192}
!7448 = !DILocation(line: 288, column: 1, scope: !6892)
!7449 = !{i64 2147653281, i64 2147653324, i64 2147653364}
!7450 = !DILocation(line: 289, column: 1, scope: !6892)
!7451 = !{i64 2147653471, i64 2147653514, i64 2147653554}
!7452 = !DILocation(line: 290, column: 1, scope: !6892)
!7453 = !{i64 2147653664, i64 2147653707, i64 2147653747}
!7454 = !DILocation(line: 291, column: 1, scope: !6892)
!7455 = !{i64 2147653860, i64 2147653903, i64 2147653943}
!7456 = !DILocation(line: 292, column: 1, scope: !6892)
!7457 = !{i64 2147654023, i64 2147654066, i64 2147654106}
!7458 = !DILocation(line: 293, column: 1, scope: !6892)
!7459 = !{i64 2147654225, i64 2147654268, i64 2147654308}
!7460 = !DILocation(line: 294, column: 1, scope: !6892)
!7461 = !{i64 2147654430, i64 2147654473, i64 2147654513}
!7462 = !DILocation(line: 295, column: 1, scope: !6892)
!7463 = !{i64 2147654638, i64 2147654681, i64 2147654721}
!7464 = !DILocation(line: 296, column: 1, scope: !6892)
!7465 = !{i64 2147654831, i64 2147654874, i64 2147654914}
!7466 = !DILocation(line: 297, column: 1, scope: !6892)
!7467 = !{i64 2147655018, i64 2147655061, i64 2147655101}
!7468 = !DILocation(line: 298, column: 1, scope: !6892)
!7469 = !{i64 2147659306, i64 2147659349, i64 2147659389}
!7470 = !DILocation(line: 299, column: 1, scope: !6892)
!7471 = !{i64 2147659472, i64 2147659515, i64 2147659555}
!7472 = !DILocation(line: 300, column: 1, scope: !6892)
!7473 = !{i64 2147659710, i64 2147659753, i64 2147659793}
!7474 = !DILocation(line: 301, column: 1, scope: !6892)
!7475 = !{i64 2147659915, i64 2147659958, i64 2147659998}
!7476 = !DILocation(line: 302, column: 1, scope: !6892)
!7477 = !{i64 2147660165, i64 2147660208, i64 2147660248}
!7478 = !DILocation(line: 303, column: 1, scope: !6892)
!7479 = !{i64 2147660373, i64 2147660416, i64 2147660456}
!7480 = !DILocation(line: 304, column: 1, scope: !6892)
!7481 = !{i64 2147660569, i64 2147660612, i64 2147660652}
!7482 = !DILocation(line: 305, column: 1, scope: !6892)
!7483 = !{i64 2147660786, i64 2147660829, i64 2147660869}
!7484 = !DILocation(line: 306, column: 1, scope: !6892)
!7485 = !{i64 2147661078, i64 2147661121, i64 2147661161}
!7486 = !DILocation(line: 307, column: 1, scope: !6892)
!7487 = !{i64 2147661310, i64 2147661353, i64 2147661393}
!7488 = !DILocation(line: 308, column: 1, scope: !6892)
!7489 = !{i64 2147661527, i64 2147661570, i64 2147661610}
!7490 = !DILocation(line: 309, column: 1, scope: !6892)
!7491 = !{i64 2147661734, i64 2147661777, i64 2147661817}
!7492 = !DILocation(line: 310, column: 1, scope: !6892)
!7493 = !{i64 2147661935, i64 2147661978, i64 2147662018}
!7494 = !DILocation(line: 311, column: 1, scope: !6892)
!7495 = !{i64 2147662167, i64 2147662210, i64 2147662250}
!7496 = !DILocation(line: 312, column: 1, scope: !6892)
!7497 = !{i64 2147662375, i64 2147662418, i64 2147662458}
!7498 = !DILocation(line: 313, column: 1, scope: !6892)
!7499 = !{i64 2147662565, i64 2147662608, i64 2147662648}
!7500 = !DILocation(line: 314, column: 1, scope: !6892)
!7501 = !{i64 2147662791, i64 2147662834, i64 2147662874}
!7502 = !DILocation(line: 315, column: 1, scope: !6892)
!7503 = !{i64 2147662980, i64 2147663023, i64 2147663063}
!7504 = !DILocation(line: 316, column: 1, scope: !6892)
!7505 = !{i64 2147663251, i64 2147663294, i64 2147663334}
!7506 = !DILocation(line: 317, column: 1, scope: !6892)
!7507 = !{i64 2147663471, i64 2147663514, i64 2147663554}
!7508 = !DILocation(line: 318, column: 1, scope: !6892)
!7509 = !{i64 2147663724, i64 2147663767, i64 2147663807}
!7510 = !DILocation(line: 319, column: 1, scope: !6892)
!7511 = !{i64 2147663932, i64 2147663975, i64 2147664015}
!7512 = !DILocation(line: 320, column: 1, scope: !6892)
!7513 = !{i64 2147664164, i64 2147664207, i64 2147664247}
!7514 = !DILocation(line: 321, column: 1, scope: !6892)
!7515 = !{i64 2147664375, i64 2147664418, i64 2147664458}
!7516 = !DILocation(line: 322, column: 1, scope: !6892)
!7517 = !{i64 2147664565, i64 2147664608, i64 2147664648}
!7518 = !DILocation(line: 323, column: 1, scope: !6892)
!7519 = !{i64 2147664779, i64 2147664822, i64 2147664862}
!7520 = !DILocation(line: 324, column: 1, scope: !6892)
!7521 = !{i64 2147664978, i64 2147665021, i64 2147665061}
!7522 = !DILocation(line: 325, column: 1, scope: !6892)
!7523 = !{i64 2147665165, i64 2147665208, i64 2147665248}
!7524 = !DILocation(line: 326, column: 1, scope: !6892)
!7525 = !{i64 2147665373, i64 2147665416, i64 2147665456}
!7526 = !DILocation(line: 327, column: 1, scope: !6892)
!7527 = !{i64 2147665602, i64 2147665645, i64 2147665685}
!7528 = !DILocation(line: 328, column: 1, scope: !6892)
!7529 = !{i64 2147665804, i64 2147665847, i64 2147665887}
!7530 = !DILocation(line: 329, column: 1, scope: !6892)
!7531 = !{i64 2147666003, i64 2147666046, i64 2147666086}
!7532 = !DILocation(line: 330, column: 1, scope: !6892)
!7533 = !{i64 2147666220, i64 2147666263, i64 2147666303}
!7534 = !DILocation(line: 332, column: 1, scope: !6892)
!7535 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !785, file: !785, line: 30, type: !792, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7536)
!7536 = !{!7537, !7538}
!7537 = !DILocalVariable(name: "arg", arg: 1, scope: !7535, file: !785, line: 30, type: !794)
!7538 = !DILocalVariable(name: "key", scope: !7535, file: !785, line: 32, type: !111)
!7539 = !DILocation(line: 0, scope: !7535)
!7540 = !DILocation(line: 37, column: 2, scope: !7535)
!7541 = !DILocation(line: 38, column: 2, scope: !7535)
!7542 = !DILocation(line: 55, column: 2, scope: !7543, inlinedAt: !7550)
!7543 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7544, file: !7544, line: 42, type: !7545, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7547)
!7544 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7545 = !DISubroutineType(types: !7546)
!7546 = !{!32}
!7547 = !{!7548, !7549}
!7548 = !DILocalVariable(name: "key", scope: !7543, file: !7544, line: 44, type: !32)
!7549 = !DILocalVariable(name: "tmp", scope: !7543, file: !7544, line: 53, type: !32)
!7550 = distinct !DILocation(line: 40, column: 8, scope: !7535)
!7551 = !{i64 2110034}
!7552 = !DILocation(line: 0, scope: !7543, inlinedAt: !7550)
!7553 = !DILocalVariable(name: "key", arg: 1, scope: !7554, file: !7544, line: 84, type: !32)
!7554 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7544, file: !7544, line: 84, type: !7555, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7557)
!7555 = !DISubroutineType(types: !7556)
!7556 = !{null, !32}
!7557 = !{!7553}
!7558 = !DILocation(line: 0, scope: !7554, inlinedAt: !7559)
!7559 = distinct !DILocation(line: 47, column: 2, scope: !7535)
!7560 = !DILocation(line: 95, column: 2, scope: !7554, inlinedAt: !7559)
!7561 = !{i64 2110851}
!7562 = !DILocation(line: 51, column: 18, scope: !7535)
!7563 = !DILocation(line: 53, column: 2, scope: !7535)
!7564 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7565, file: !7565, line: 1609, type: !323, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !2501)
!7565 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7566 = !DILocation(line: 1611, column: 3, scope: !7564)
!7567 = !DILocation(line: 1612, column: 1, scope: !7564)
!7568 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7565, file: !7565, line: 1629, type: !323, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !2501)
!7569 = !DILocation(line: 1631, column: 3, scope: !7568)
!7570 = !DILocation(line: 1632, column: 1, scope: !7568)
!7571 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !821, file: !821, line: 26, type: !827, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !818, retainedNodes: !7572)
!7572 = !{!7573}
!7573 = !DILocalVariable(name: "dev", arg: 1, scope: !7571, file: !821, line: 26, type: !829)
!7574 = !DILocation(line: 0, scope: !7571)
!7575 = !DILocation(line: 68, column: 2, scope: !7571)
!7576 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7577, file: !7577, line: 14, type: !5058, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3104, retainedNodes: !7578)
!7577 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7578 = !{!7579, !7580}
!7579 = !DILocalVariable(name: "fmt", arg: 1, scope: !7576, file: !7577, line: 14, type: !108)
!7580 = !DILocalVariable(name: "ap", scope: !7576, file: !7577, line: 16, type: !7581)
!7581 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4066, line: 99, baseType: !7582)
!7582 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4066, line: 40, baseType: !7583)
!7583 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7577, baseType: !7584)
!7584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7585)
!7585 = !{!7586}
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7584, file: !7577, line: 16, baseType: !102, size: 32)
!7587 = !DILocation(line: 0, scope: !7576)
!7588 = !DILocation(line: 16, column: 2, scope: !7576)
!7589 = !DILocation(line: 16, column: 10, scope: !7576)
!7590 = !DILocation(line: 18, column: 2, scope: !7576)
!7591 = !DILocation(line: 19, column: 2, scope: !7576)
!7592 = !DILocation(line: 20, column: 2, scope: !7576)
!7593 = !DILocation(line: 21, column: 1, scope: !7576)
!7594 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7577, file: !7577, line: 23, type: !7595, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3104, retainedNodes: !7597)
!7595 = !DISubroutineType(types: !7596)
!7596 = !{null, !108, !7581}
!7597 = !{!7598, !7599}
!7598 = !DILocalVariable(name: "fmt", arg: 1, scope: !7594, file: !7577, line: 23, type: !108)
!7599 = !DILocalVariable(name: "ap", arg: 2, scope: !7594, file: !7577, line: 23, type: !7581)
!7600 = !DILocation(line: 0, scope: !7594)
!7601 = !DILocation(line: 25, column: 2, scope: !7594)
!7602 = !DILocation(line: 26, column: 1, scope: !7594)
!7603 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7577, file: !7577, line: 52, type: !7604, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3104, retainedNodes: !7606)
!7604 = !DISubroutineType(types: !7605)
!7605 = !{null, !103, !13, !156}
!7606 = !{!7607, !7608, !7609, !7610}
!7607 = !DILocalVariable(name: "level", arg: 1, scope: !7603, file: !7577, line: 52, type: !103)
!7608 = !DILocalVariable(name: "data", arg: 2, scope: !7603, file: !7577, line: 52, type: !13)
!7609 = !DILocalVariable(name: "size", arg: 3, scope: !7603, file: !7577, line: 52, type: !156)
!7610 = !DILocalVariable(name: "data_buffer", scope: !7603, file: !7577, line: 54, type: !108)
!7611 = !DILocation(line: 0, scope: !7603)
!7612 = !DILocation(line: 55, column: 14, scope: !7603)
!7613 = !DILocation(line: 55, column: 2, scope: !7603)
!7614 = !DILocation(line: 56, column: 3, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7603, file: !7577, line: 55, column: 20)
!7616 = !DILocation(line: 57, column: 3, scope: !7615)
!7617 = !DILocation(line: 59, column: 7, scope: !7615)
!7618 = distinct !{!7618, !7613, !7619}
!7619 = !DILocation(line: 65, column: 2, scope: !7603)
!7620 = !DILocation(line: 66, column: 1, scope: !7603)
!7621 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7622, file: !7622, line: 175, type: !7623, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3104, retainedNodes: !7625)
!7622 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7623 = !DISubroutineType(types: !7624)
!7624 = !{!110, !103}
!7625 = !{!7626}
!7626 = !DILocalVariable(name: "level", arg: 1, scope: !7621, file: !7622, line: 175, type: !103)
!7627 = !DILocation(line: 0, scope: !7621)
!7628 = !DILocation(line: 177, column: 2, scope: !7621)
!7629 = !DILocation(line: 189, column: 1, scope: !7621)
!7630 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7577, file: !7577, line: 28, type: !7631, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3104, retainedNodes: !7633)
!7631 = !DISubroutineType(types: !7632)
!7632 = !{null, !108, !156}
!7633 = !{!7634, !7635, !7636, !7638, !7640}
!7634 = !DILocalVariable(name: "data", arg: 1, scope: !7630, file: !7577, line: 28, type: !108)
!7635 = !DILocalVariable(name: "length", arg: 2, scope: !7630, file: !7577, line: 28, type: !156)
!7636 = !DILocalVariable(name: "i", scope: !7637, file: !7577, line: 30, type: !156)
!7637 = distinct !DILexicalBlock(scope: !7630, file: !7577, line: 30, column: 2)
!7638 = !DILocalVariable(name: "i", scope: !7639, file: !7577, line: 40, type: !156)
!7639 = distinct !DILexicalBlock(scope: !7630, file: !7577, line: 40, column: 2)
!7640 = !DILocalVariable(name: "c", scope: !7641, file: !7577, line: 42, type: !167)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !7577, line: 41, column: 19)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !7577, line: 41, column: 7)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !7577, line: 40, column: 54)
!7644 = distinct !DILexicalBlock(scope: !7639, file: !7577, line: 40, column: 2)
!7645 = !DILocation(line: 0, scope: !7630)
!7646 = !DILocation(line: 0, scope: !7637)
!7647 = !DILocation(line: 30, column: 2, scope: !7637)
!7648 = !DILocation(line: 38, column: 2, scope: !7630)
!7649 = !DILocation(line: 0, scope: !7639)
!7650 = !DILocation(line: 40, column: 2, scope: !7639)
!7651 = !DILocation(line: 31, column: 9, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7653, file: !7577, line: 31, column: 7)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !7577, line: 30, column: 54)
!7654 = distinct !DILexicalBlock(scope: !7637, file: !7577, line: 30, column: 2)
!7655 = !DILocation(line: 31, column: 7, scope: !7653)
!7656 = !DILocation(line: 32, column: 35, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7652, file: !7577, line: 31, column: 19)
!7658 = !DILocation(line: 32, column: 20, scope: !7657)
!7659 = !DILocation(line: 32, column: 4, scope: !7657)
!7660 = !DILocation(line: 33, column: 3, scope: !7657)
!7661 = !DILocation(line: 34, column: 4, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7652, file: !7577, line: 33, column: 10)
!7663 = !DILocation(line: 30, column: 50, scope: !7654)
!7664 = !DILocation(line: 30, column: 24, scope: !7654)
!7665 = distinct !{!7665, !7647, !7666}
!7666 = !DILocation(line: 36, column: 2, scope: !7637)
!7667 = !DILocation(line: 49, column: 2, scope: !7630)
!7668 = !DILocation(line: 50, column: 1, scope: !7630)
!7669 = !DILocation(line: 41, column: 9, scope: !7642)
!7670 = !DILocation(line: 41, column: 7, scope: !7643)
!7671 = !DILocation(line: 42, column: 22, scope: !7641)
!7672 = !DILocation(line: 0, scope: !7641)
!7673 = !DILocation(line: 44, column: 25, scope: !7641)
!7674 = !DILocation(line: 44, column: 17, scope: !7641)
!7675 = !DILocation(line: 44, column: 33, scope: !7641)
!7676 = !DILocation(line: 44, column: 4, scope: !7641)
!7677 = !DILocation(line: 45, column: 3, scope: !7641)
!7678 = !DILocation(line: 46, column: 4, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7642, file: !7577, line: 45, column: 10)
!7680 = !DILocation(line: 40, column: 50, scope: !7644)
!7681 = !DILocation(line: 40, column: 24, scope: !7644)
!7682 = distinct !{!7682, !7650, !7683}
!7683 = !DILocation(line: 48, column: 2, scope: !7639)
!7684 = distinct !DISubprogram(name: "isprint", scope: !6636, file: !6636, line: 37, type: !764, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3104, retainedNodes: !7685)
!7685 = !{!7686}
!7686 = !DILocalVariable(name: "c", arg: 1, scope: !7684, file: !6636, line: 37, type: !103)
!7687 = !DILocation(line: 0, scope: !7684)
!7688 = !DILocation(line: 39, column: 38, scope: !7684)
!7689 = !DILocation(line: 39, column: 2, scope: !7684)
!7690 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7691, file: !7691, line: 57, type: !7692, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3107, retainedNodes: !7738)
!7691 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7692 = !DISubroutineType(types: !7693)
!7693 = !{null, !32, !7694}
!7694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7695, size: 32)
!7695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7696)
!7696 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3227, line: 141, baseType: !7697)
!7697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3227, line: 97, size: 256, elements: !7698)
!7698 = !{!7699}
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7697, file: !3227, line: 107, baseType: !7700, size: 256)
!7700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3227, line: 98, size: 256, elements: !7701)
!7701 = !{!7702, !7707, !7712, !7717, !7722, !7727, !7732, !7737}
!7702 = !DIDerivedType(tag: DW_TAG_member, scope: !7700, file: !3227, line: 99, baseType: !7703, size: 32)
!7703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7700, file: !3227, line: 99, size: 32, elements: !7704)
!7704 = !{!7705, !7706}
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7703, file: !3227, line: 99, baseType: !111, size: 32)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7703, file: !3227, line: 99, baseType: !111, size: 32)
!7707 = !DIDerivedType(tag: DW_TAG_member, scope: !7700, file: !3227, line: 100, baseType: !7708, size: 32, offset: 32)
!7708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7700, file: !3227, line: 100, size: 32, elements: !7709)
!7709 = !{!7710, !7711}
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7708, file: !3227, line: 100, baseType: !111, size: 32)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7708, file: !3227, line: 100, baseType: !111, size: 32)
!7712 = !DIDerivedType(tag: DW_TAG_member, scope: !7700, file: !3227, line: 101, baseType: !7713, size: 32, offset: 64)
!7713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7700, file: !3227, line: 101, size: 32, elements: !7714)
!7714 = !{!7715, !7716}
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7713, file: !3227, line: 101, baseType: !111, size: 32)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7713, file: !3227, line: 101, baseType: !111, size: 32)
!7717 = !DIDerivedType(tag: DW_TAG_member, scope: !7700, file: !3227, line: 102, baseType: !7718, size: 32, offset: 96)
!7718 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7700, file: !3227, line: 102, size: 32, elements: !7719)
!7719 = !{!7720, !7721}
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7718, file: !3227, line: 102, baseType: !111, size: 32)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7718, file: !3227, line: 102, baseType: !111, size: 32)
!7722 = !DIDerivedType(tag: DW_TAG_member, scope: !7700, file: !3227, line: 103, baseType: !7723, size: 32, offset: 128)
!7723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7700, file: !3227, line: 103, size: 32, elements: !7724)
!7724 = !{!7725, !7726}
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7723, file: !3227, line: 103, baseType: !111, size: 32)
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7723, file: !3227, line: 103, baseType: !111, size: 32)
!7727 = !DIDerivedType(tag: DW_TAG_member, scope: !7700, file: !3227, line: 104, baseType: !7728, size: 32, offset: 160)
!7728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7700, file: !3227, line: 104, size: 32, elements: !7729)
!7729 = !{!7730, !7731}
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7728, file: !3227, line: 104, baseType: !111, size: 32)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7728, file: !3227, line: 104, baseType: !111, size: 32)
!7732 = !DIDerivedType(tag: DW_TAG_member, scope: !7700, file: !3227, line: 105, baseType: !7733, size: 32, offset: 192)
!7733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7700, file: !3227, line: 105, size: 32, elements: !7734)
!7734 = !{!7735, !7736}
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7733, file: !3227, line: 105, baseType: !111, size: 32)
!7736 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7733, file: !3227, line: 105, baseType: !111, size: 32)
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7700, file: !3227, line: 106, baseType: !111, size: 32, offset: 224)
!7738 = !{!7739, !7740}
!7739 = !DILocalVariable(name: "reason", arg: 1, scope: !7690, file: !7691, line: 57, type: !32)
!7740 = !DILocalVariable(name: "esf", arg: 2, scope: !7690, file: !7691, line: 57, type: !7694)
!7741 = !DILocation(line: 0, scope: !7690)
!7742 = !DILocation(line: 60, column: 10, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7690, file: !7691, line: 60, column: 6)
!7744 = !DILocation(line: 60, column: 6, scope: !7690)
!7745 = !DILocation(line: 61, column: 3, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7743, file: !7691, line: 60, column: 19)
!7747 = !DILocation(line: 62, column: 2, scope: !7746)
!7748 = !DILocation(line: 63, column: 2, scope: !7690)
!7749 = !DILocation(line: 64, column: 1, scope: !7690)
!7750 = distinct !DISubprogram(name: "esf_dump", scope: !7691, file: !7691, line: 20, type: !7751, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3107, retainedNodes: !7753)
!7751 = !DISubroutineType(types: !7752)
!7752 = !{null, !7694}
!7753 = !{!7754}
!7754 = !DILocalVariable(name: "esf", arg: 1, scope: !7750, file: !7691, line: 20, type: !7694)
!7755 = !DILocation(line: 0, scope: !7750)
!7756 = !DILocation(line: 22, column: 2, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !7691, line: 22, column: 2)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !7691, line: 22, column: 2)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !7691, line: 22, column: 2)
!7760 = distinct !DILexicalBlock(scope: !7750, file: !7691, line: 22, column: 2)
!7761 = !DILocation(line: 24, column: 2, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7763, file: !7691, line: 24, column: 2)
!7763 = distinct !DILexicalBlock(scope: !7764, file: !7691, line: 24, column: 2)
!7764 = distinct !DILexicalBlock(scope: !7765, file: !7691, line: 24, column: 2)
!7765 = distinct !DILexicalBlock(scope: !7750, file: !7691, line: 24, column: 2)
!7766 = !DILocation(line: 26, column: 2, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !7691, line: 26, column: 2)
!7768 = distinct !DILexicalBlock(scope: !7769, file: !7691, line: 26, column: 2)
!7769 = distinct !DILexicalBlock(scope: !7770, file: !7691, line: 26, column: 2)
!7770 = distinct !DILexicalBlock(scope: !7750, file: !7691, line: 26, column: 2)
!7771 = !DILocation(line: 53, column: 2, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7773, file: !7691, line: 53, column: 2)
!7773 = distinct !DILexicalBlock(scope: !7774, file: !7691, line: 53, column: 2)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !7691, line: 53, column: 2)
!7775 = distinct !DILexicalBlock(scope: !7750, file: !7691, line: 53, column: 2)
!7776 = !DILocation(line: 55, column: 1, scope: !7750)
!7777 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7691, file: !7691, line: 82, type: !7778, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3107, retainedNodes: !7793)
!7778 = !DISubroutineType(types: !7779)
!7779 = !{null, !7694, !7780}
!7780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7781, size: 32)
!7781 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !248, line: 37, baseType: !7782)
!7782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !7783)
!7783 = !{!7784, !7785, !7786, !7787, !7788, !7789, !7790, !7791, !7792}
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7782, file: !248, line: 26, baseType: !111, size: 32)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7782, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7782, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7782, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7782, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7782, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7782, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7782, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!7792 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7782, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!7793 = !{!7794, !7795, !7796}
!7794 = !DILocalVariable(name: "esf", arg: 1, scope: !7777, file: !7691, line: 82, type: !7694)
!7795 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7777, file: !7691, line: 82, type: !7780)
!7796 = !DILocalVariable(name: "reason", scope: !7777, file: !7691, line: 88, type: !32)
!7797 = !DILocation(line: 0, scope: !7777)
!7798 = !DILocation(line: 88, column: 35, scope: !7777)
!7799 = !DILocation(line: 108, column: 2, scope: !7777)
!7800 = !DILocation(line: 131, column: 1, scope: !7777)
!7801 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7691, file: !7691, line: 133, type: !7802, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3107, retainedNodes: !7804)
!7802 = !DISubroutineType(types: !7803)
!7803 = !{null, !102}
!7804 = !{!7805, !7806, !7807}
!7805 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7801, file: !7691, line: 133, type: !102)
!7806 = !DILocalVariable(name: "ssf_contents", scope: !7801, file: !7691, line: 135, type: !1354)
!7807 = !DILocalVariable(name: "oops_esf", scope: !7801, file: !7691, line: 136, type: !7696)
!7808 = !DILocation(line: 0, scope: !7801)
!7809 = !DILocation(line: 136, column: 2, scope: !7801)
!7810 = !DILocation(line: 136, column: 15, scope: !7801)
!7811 = !DILocation(line: 139, column: 22, scope: !7801)
!7812 = !DILocation(line: 139, column: 17, scope: !7801)
!7813 = !DILocation(line: 139, column: 20, scope: !7801)
!7814 = !DILocation(line: 141, column: 2, scope: !7801)
!7815 = !DILocation(line: 142, column: 2, scope: !7801)
!7816 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7817, file: !7817, line: 40, type: !7555, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !7818)
!7817 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7818 = !{!7819}
!7819 = !DILocalVariable(name: "irq", arg: 1, scope: !7816, file: !7817, line: 40, type: !32)
!7820 = !DILocation(line: 0, scope: !7816)
!7821 = !DILocation(line: 42, column: 2, scope: !7816)
!7822 = !DILocation(line: 43, column: 1, scope: !7816)
!7823 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !992, file: !992, line: 1684, type: !7824, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !7826)
!7824 = !DISubroutineType(types: !7825)
!7825 = !{null, !1260}
!7826 = !{!7827}
!7827 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7823, file: !992, line: 1684, type: !1260)
!7828 = !DILocation(line: 0, scope: !7823)
!7829 = !DILocation(line: 1686, column: 23, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7823, file: !992, line: 1686, column: 7)
!7831 = !DILocation(line: 1686, column: 7, scope: !7823)
!7832 = !DILocation(line: 1688, column: 5, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7830, file: !992, line: 1687, column: 3)
!7834 = !{i64 2151073152}
!7835 = !DILocation(line: 1689, column: 81, scope: !7833)
!7836 = !DILocation(line: 1689, column: 60, scope: !7833)
!7837 = !DILocation(line: 1689, column: 34, scope: !7833)
!7838 = !DILocation(line: 1689, column: 5, scope: !7833)
!7839 = !DILocation(line: 1689, column: 43, scope: !7833)
!7840 = !DILocation(line: 1690, column: 5, scope: !7833)
!7841 = !{i64 2151073266}
!7842 = !DILocation(line: 1691, column: 3, scope: !7833)
!7843 = !DILocation(line: 1692, column: 1, scope: !7823)
!7844 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7817, file: !7817, line: 45, type: !7555, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !7845)
!7845 = !{!7846}
!7846 = !DILocalVariable(name: "irq", arg: 1, scope: !7844, file: !7817, line: 45, type: !32)
!7847 = !DILocation(line: 0, scope: !7844)
!7848 = !DILocation(line: 47, column: 2, scope: !7844)
!7849 = !DILocation(line: 48, column: 1, scope: !7844)
!7850 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !992, file: !992, line: 1722, type: !7824, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !7851)
!7851 = !{!7852}
!7852 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7850, file: !992, line: 1722, type: !1260)
!7853 = !DILocation(line: 0, scope: !7850)
!7854 = !DILocation(line: 1724, column: 23, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7850, file: !992, line: 1724, column: 7)
!7856 = !DILocation(line: 1724, column: 7, scope: !7850)
!7857 = !DILocation(line: 1726, column: 81, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7855, file: !992, line: 1725, column: 3)
!7859 = !DILocation(line: 1726, column: 60, scope: !7858)
!7860 = !DILocation(line: 1726, column: 34, scope: !7858)
!7861 = !DILocation(line: 1726, column: 5, scope: !7858)
!7862 = !DILocation(line: 1726, column: 43, scope: !7858)
!7863 = !DILocation(line: 271, column: 3, scope: !7864, inlinedAt: !7866)
!7864 = distinct !DISubprogram(name: "__DSB", scope: !7865, file: !7865, line: 269, type: !323, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !2501)
!7865 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7866 = distinct !DILocation(line: 1727, column: 5, scope: !7858)
!7867 = !{i64 3527535}
!7868 = !DILocation(line: 260, column: 3, scope: !7869, inlinedAt: !7870)
!7869 = distinct !DISubprogram(name: "__ISB", scope: !7865, file: !7865, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !2501)
!7870 = distinct !DILocation(line: 1728, column: 5, scope: !7858)
!7871 = !{i64 3527252}
!7872 = !DILocation(line: 1729, column: 3, scope: !7858)
!7873 = !DILocation(line: 1730, column: 1, scope: !7850)
!7874 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7817, file: !7817, line: 50, type: !7875, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !7877)
!7875 = !DISubroutineType(types: !7876)
!7876 = !{!103, !32}
!7877 = !{!7878}
!7878 = !DILocalVariable(name: "irq", arg: 1, scope: !7874, file: !7817, line: 50, type: !32)
!7879 = !DILocation(line: 0, scope: !7874)
!7880 = !DILocation(line: 52, column: 20, scope: !7874)
!7881 = !DILocation(line: 52, column: 9, scope: !7874)
!7882 = !DILocation(line: 52, column: 41, scope: !7874)
!7883 = !DILocation(line: 52, column: 39, scope: !7874)
!7884 = !DILocation(line: 52, column: 2, scope: !7874)
!7885 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7817, file: !7817, line: 64, type: !7886, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !7888)
!7886 = !DISubroutineType(types: !7887)
!7887 = !{null, !32, !32, !111}
!7888 = !{!7889, !7890, !7891}
!7889 = !DILocalVariable(name: "irq", arg: 1, scope: !7885, file: !7817, line: 64, type: !32)
!7890 = !DILocalVariable(name: "prio", arg: 2, scope: !7885, file: !7817, line: 64, type: !32)
!7891 = !DILocalVariable(name: "flags", arg: 3, scope: !7885, file: !7817, line: 64, type: !111)
!7892 = !DILocation(line: 0, scope: !7885)
!7893 = !DILocation(line: 83, column: 8, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !7817, line: 82, column: 9)
!7895 = distinct !DILexicalBlock(scope: !7885, file: !7817, line: 76, column: 6)
!7896 = !DILocation(line: 91, column: 2, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7898, file: !7817, line: 91, column: 2)
!7898 = distinct !DILexicalBlock(scope: !7885, file: !7817, line: 91, column: 2)
!7899 = !DILocation(line: 91, column: 2, scope: !7898)
!7900 = !DILocation(line: 91, column: 2, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7897, file: !7817, line: 91, column: 2)
!7902 = !DILocation(line: 95, column: 2, scope: !7885)
!7903 = !DILocation(line: 96, column: 1, scope: !7885)
!7904 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !992, file: !992, line: 1814, type: !7905, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !7907)
!7905 = !DISubroutineType(types: !7906)
!7906 = !{null, !1260, !111}
!7907 = !{!7908, !7909}
!7908 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7904, file: !992, line: 1814, type: !1260)
!7909 = !DILocalVariable(name: "priority", arg: 2, scope: !7904, file: !992, line: 1814, type: !111)
!7910 = !DILocation(line: 0, scope: !7904)
!7911 = !DILocation(line: 0, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7904, file: !992, line: 1816, column: 7)
!7913 = !DILocation(line: 1816, column: 7, scope: !7904)
!7914 = !DILocation(line: 1824, column: 1, scope: !7904)
!7915 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7817, file: !7817, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !7916)
!7916 = !{!7917}
!7917 = !DILocalVariable(name: "unused", arg: 1, scope: !7915, file: !7817, line: 155, type: !13)
!7918 = !DILocation(line: 0, scope: !7915)
!7919 = !DILocation(line: 159, column: 2, scope: !7915)
!7920 = !DILocation(line: 160, column: 1, scope: !7915)
!7921 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7922, file: !7922, line: 87, type: !323, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3164, retainedNodes: !2501)
!7922 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7923 = !DILocation(line: 89, column: 2, scope: !7921)
!7924 = !DILocation(line: 90, column: 2, scope: !7921)
!7925 = !DILocation(line: 91, column: 1, scope: !7921)
!7926 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7922, file: !7922, line: 23, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2501)
!7927 = !DISubprogram(name: "z_arm_int_exit", scope: !7928, file: !7928, line: 153, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2501)
!7928 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7929 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7930, file: !7930, line: 256, type: !323, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !2501)
!7930 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7931 = !DILocation(line: 258, column: 2, scope: !7929)
!7932 = !DILocation(line: 260, column: 2, scope: !7929)
!7933 = !DILocation(line: 262, column: 2, scope: !7929)
!7934 = !DILocation(line: 263, column: 2, scope: !7929)
!7935 = !DILocation(line: 267, column: 2, scope: !7929)
!7936 = !DILocation(line: 268, column: 2, scope: !7929)
!7937 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7930, file: !7930, line: 53, type: !323, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !2501)
!7938 = !DILocation(line: 55, column: 12, scope: !7937)
!7939 = !DILocation(line: 271, column: 3, scope: !7940, inlinedAt: !7941)
!7940 = distinct !DISubprogram(name: "__DSB", scope: !7865, file: !7865, line: 269, type: !323, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !2501)
!7941 = distinct !DILocation(line: 56, column: 2, scope: !7937)
!7942 = !{i64 3526206}
!7943 = !DILocation(line: 260, column: 3, scope: !7944, inlinedAt: !7945)
!7944 = distinct !DISubprogram(name: "__ISB", scope: !7865, file: !7865, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !2501)
!7945 = distinct !DILocation(line: 57, column: 2, scope: !7937)
!7946 = !{i64 3525923}
!7947 = !DILocation(line: 58, column: 1, scope: !7937)
!7948 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7930, file: !7930, line: 96, type: !323, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !2501)
!7949 = !DILocation(line: 103, column: 13, scope: !7948)
!7950 = !DILocation(line: 975, column: 3, scope: !7951, inlinedAt: !7956)
!7951 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7865, file: !7865, line: 971, type: !7952, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !7954)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{!111}
!7954 = !{!7955}
!7955 = !DILocalVariable(name: "result", scope: !7951, file: !7865, line: 973, type: !111)
!7956 = distinct !DILocation(line: 189, column: 16, scope: !7948)
!7957 = !{i64 3547036}
!7958 = !DILocation(line: 0, scope: !7951, inlinedAt: !7956)
!7959 = !DILocation(line: 189, column: 32, scope: !7948)
!7960 = !DILocalVariable(name: "control", arg: 1, scope: !7961, file: !7865, line: 1001, type: !111)
!7961 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7865, file: !7865, line: 1001, type: !7962, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !7964)
!7962 = !DISubroutineType(types: !7963)
!7963 = !{null, !111}
!7964 = !{!7960}
!7965 = !DILocation(line: 0, scope: !7961, inlinedAt: !7966)
!7966 = distinct !DILocation(line: 189, column: 2, scope: !7948)
!7967 = !DILocation(line: 1003, column: 3, scope: !7961, inlinedAt: !7966)
!7968 = !{i64 3547756}
!7969 = !DILocation(line: 260, column: 3, scope: !7944, inlinedAt: !7970)
!7970 = distinct !DILocation(line: 1004, column: 3, scope: !7961, inlinedAt: !7966)
!7971 = !DILocation(line: 191, column: 1, scope: !7948)
!7972 = distinct !DISubprogram(name: "arch_swap", scope: !7973, file: !7973, line: 33, type: !7875, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3194, retainedNodes: !7974)
!7973 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7974 = !{!7975}
!7975 = !DILocalVariable(name: "key", arg: 1, scope: !7972, file: !7973, line: 33, type: !32)
!7976 = !DILocation(line: 0, scope: !7972)
!7977 = !DILocation(line: 36, column: 2, scope: !7972)
!7978 = !DILocation(line: 36, column: 17, scope: !7972)
!7979 = !DILocation(line: 36, column: 25, scope: !7972)
!7980 = !DILocation(line: 37, column: 37, scope: !7972)
!7981 = !DILocation(line: 37, column: 17, scope: !7972)
!7982 = !DILocation(line: 37, column: 35, scope: !7972)
!7983 = !DILocation(line: 41, column: 12, scope: !7972)
!7984 = !DILocalVariable(name: "key", arg: 1, scope: !7985, file: !7544, line: 84, type: !32)
!7985 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7544, file: !7544, line: 84, type: !7555, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3194, retainedNodes: !7986)
!7986 = !{!7984}
!7987 = !DILocation(line: 0, scope: !7985, inlinedAt: !7988)
!7988 = distinct !DILocation(line: 44, column: 2, scope: !7972)
!7989 = !DILocation(line: 95, column: 2, scope: !7985, inlinedAt: !7988)
!7990 = !{i64 2225528}
!7991 = !DILocation(line: 53, column: 9, scope: !7972)
!7992 = !DILocation(line: 53, column: 24, scope: !7972)
!7993 = !DILocation(line: 53, column: 2, scope: !7972)
!7994 = distinct !DISubprogram(name: "arch_new_thread", scope: !7995, file: !7995, line: 56, type: !7996, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !8105)
!7995 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7996 = !DISubroutineType(types: !7997)
!7997 = !{null, !7998, !8100, !160, !310, !102, !102, !102}
!7998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7999, size: 32)
!7999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !8000)
!8000 = !{!8001, !8059, !8071, !8072, !8073, !8074, !8080, !8095}
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7999, file: !199, line: 247, baseType: !8002, size: 384)
!8002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !8003)
!8003 = !{!8004, !8028, !8035, !8036, !8037, !8046, !8047, !8048}
!8004 = !DIDerivedType(tag: DW_TAG_member, scope: !8002, file: !199, line: 60, baseType: !8005, size: 64)
!8005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8002, file: !199, line: 60, size: 64, elements: !8006)
!8006 = !{!8007, !8022}
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8005, file: !199, line: 61, baseType: !8008, size: 64)
!8008 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !8009)
!8009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !8010)
!8010 = !{!8011, !8017}
!8011 = !DIDerivedType(tag: DW_TAG_member, scope: !8009, file: !136, line: 38, baseType: !8012, size: 32)
!8012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8009, file: !136, line: 38, size: 32, elements: !8013)
!8013 = !{!8014, !8016}
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8012, file: !136, line: 39, baseType: !8015, size: 32)
!8015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8009, size: 32)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8012, file: !136, line: 40, baseType: !8015, size: 32)
!8017 = !DIDerivedType(tag: DW_TAG_member, scope: !8009, file: !136, line: 42, baseType: !8018, size: 32, offset: 32)
!8018 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8009, file: !136, line: 42, size: 32, elements: !8019)
!8019 = !{!8020, !8021}
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8018, file: !136, line: 43, baseType: !8015, size: 32)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8018, file: !136, line: 44, baseType: !8015, size: 32)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8005, file: !199, line: 62, baseType: !8023, size: 64)
!8023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !8024)
!8024 = !{!8025}
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8023, file: !211, line: 50, baseType: !8026, size: 64)
!8026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8027, size: 64, elements: !216)
!8027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8023, size: 32)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8002, file: !199, line: 68, baseType: !8029, size: 32, offset: 64)
!8029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8030, size: 32)
!8030 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !8031)
!8031 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !8032)
!8032 = !{!8033}
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8031, file: !131, line: 232, baseType: !8034, size: 64)
!8034 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !8009)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8002, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8002, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!8037 = !DIDerivedType(tag: DW_TAG_member, scope: !8002, file: !199, line: 90, baseType: !8038, size: 16, offset: 112)
!8038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8002, file: !199, line: 90, size: 16, elements: !8039)
!8039 = !{!8040, !8045}
!8040 = !DIDerivedType(tag: DW_TAG_member, scope: !8038, file: !199, line: 91, baseType: !8041, size: 16)
!8041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8038, file: !199, line: 91, size: 16, elements: !8042)
!8042 = !{!8043, !8044}
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8041, file: !199, line: 96, baseType: !229, size: 8)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8041, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8038, file: !199, line: 100, baseType: !181, size: 16)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8002, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8002, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8002, file: !199, line: 131, baseType: !8049, size: 192, offset: 192)
!8049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !8050)
!8050 = !{!8051, !8052, !8058}
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8049, file: !131, line: 245, baseType: !8008, size: 64)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8049, file: !131, line: 246, baseType: !8053, size: 32, offset: 64)
!8053 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !8054)
!8054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8055, size: 32)
!8055 = !DISubroutineType(types: !8056)
!8056 = !{null, !8057}
!8057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8049, size: 32)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8049, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7999, file: !199, line: 250, baseType: !8060, size: 288, offset: 384)
!8060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !8061)
!8061 = !{!8062, !8063, !8064, !8065, !8066, !8067, !8068, !8069, !8070}
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8060, file: !248, line: 26, baseType: !111, size: 32)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8060, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8060, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8060, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8060, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8060, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8060, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8060, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8060, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7999, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7999, file: !199, line: 256, baseType: !8030, size: 64, offset: 704)
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7999, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7999, file: !199, line: 300, baseType: !8075, size: 96, offset: 800)
!8075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !8076)
!8076 = !{!8077, !8078, !8079}
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8075, file: !199, line: 153, baseType: !22, size: 32)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8075, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8075, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7999, file: !199, line: 325, baseType: !8081, size: 32, offset: 896)
!8081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8082, size: 32)
!8082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !8083)
!8083 = !{!8084, !8090, !8091}
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8082, file: !127, line: 5074, baseType: !8085, size: 96)
!8085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !8086)
!8086 = !{!8087, !8088, !8089}
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8085, file: !274, line: 57, baseType: !277, size: 32)
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8085, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!8089 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8085, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8082, file: !127, line: 5075, baseType: !8030, size: 64, offset: 96)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8082, file: !127, line: 5076, baseType: !8092, size: 32, offset: 160)
!8092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !8093)
!8093 = !{!8094}
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8092, file: !152, line: 52, baseType: !22, size: 32)
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7999, file: !199, line: 343, baseType: !8096, size: 64, offset: 928)
!8096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !8097)
!8097 = !{!8098, !8099}
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8096, file: !248, line: 63, baseType: !111, size: 32)
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8096, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!8100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8101, size: 32)
!8101 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !8102)
!8102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !8103)
!8103 = !{!8104}
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8102, file: !305, line: 48, baseType: !110, size: 8)
!8105 = !{!8106, !8107, !8108, !8109, !8110, !8111, !8112, !8113}
!8106 = !DILocalVariable(name: "thread", arg: 1, scope: !7994, file: !7995, line: 56, type: !7998)
!8107 = !DILocalVariable(name: "stack", arg: 2, scope: !7994, file: !7995, line: 56, type: !8100)
!8108 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7994, file: !7995, line: 57, type: !160)
!8109 = !DILocalVariable(name: "entry", arg: 4, scope: !7994, file: !7995, line: 57, type: !310)
!8110 = !DILocalVariable(name: "p1", arg: 5, scope: !7994, file: !7995, line: 58, type: !102)
!8111 = !DILocalVariable(name: "p2", arg: 6, scope: !7994, file: !7995, line: 58, type: !102)
!8112 = !DILocalVariable(name: "p3", arg: 7, scope: !7994, file: !7995, line: 58, type: !102)
!8113 = !DILocalVariable(name: "iframe", scope: !7994, file: !7995, line: 60, type: !3225)
!8114 = !DILocation(line: 0, scope: !7994)
!8115 = !DILocation(line: 85, column: 11, scope: !7994)
!8116 = !DILocation(line: 93, column: 10, scope: !7994)
!8117 = !DILocation(line: 98, column: 13, scope: !7994)
!8118 = !DILocation(line: 100, column: 15, scope: !7994)
!8119 = !DILocation(line: 100, column: 10, scope: !7994)
!8120 = !DILocation(line: 100, column: 13, scope: !7994)
!8121 = !DILocation(line: 101, column: 15, scope: !7994)
!8122 = !DILocation(line: 101, column: 10, scope: !7994)
!8123 = !DILocation(line: 101, column: 13, scope: !7994)
!8124 = !DILocation(line: 102, column: 15, scope: !7994)
!8125 = !DILocation(line: 102, column: 10, scope: !7994)
!8126 = !DILocation(line: 102, column: 13, scope: !7994)
!8127 = !DILocation(line: 103, column: 15, scope: !7994)
!8128 = !DILocation(line: 103, column: 10, scope: !7994)
!8129 = !DILocation(line: 103, column: 13, scope: !7994)
!8130 = !DILocation(line: 106, column: 10, scope: !7994)
!8131 = !DILocation(line: 106, column: 15, scope: !7994)
!8132 = !DILocation(line: 122, column: 29, scope: !7994)
!8133 = !DILocation(line: 122, column: 23, scope: !7994)
!8134 = !DILocation(line: 122, column: 27, scope: !7994)
!8135 = !DILocation(line: 123, column: 15, scope: !7994)
!8136 = !DILocation(line: 123, column: 23, scope: !7994)
!8137 = !DILocation(line: 143, column: 1, scope: !7994)
!8138 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7995, file: !7995, line: 385, type: !8139, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !8142)
!8139 = !DISubroutineType(types: !8140)
!8140 = !{!111, !8141, !8141}
!8141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!8142 = !{!8143, !8144, !8145, !8148}
!8143 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8138, file: !7995, line: 385, type: !8141)
!8144 = !DILocalVariable(name: "psp", arg: 2, scope: !8138, file: !7995, line: 385, type: !8141)
!8145 = !DILocalVariable(name: "thread", scope: !8138, file: !7995, line: 388, type: !8146)
!8146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8147, size: 32)
!8147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7999)
!8148 = !DILocalVariable(name: "guard_len", scope: !8138, file: !7995, line: 405, type: !111)
!8149 = !DILocation(line: 0, scope: !8138)
!8150 = !DILocation(line: 388, column: 34, scope: !8138)
!8151 = !DILocation(line: 390, column: 13, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8138, file: !7995, line: 390, column: 6)
!8153 = !DILocation(line: 390, column: 6, scope: !8138)
!8154 = !DILocation(line: 438, column: 6, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8138, file: !7995, line: 438, column: 6)
!8156 = !DILocation(line: 438, column: 6, scope: !8138)
!8157 = !DILocation(line: 442, column: 3, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8155, file: !7995, line: 440, column: 22)
!8159 = !DILocation(line: 455, column: 1, scope: !8138)
!8160 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7995, file: !7995, line: 530, type: !8161, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !8163)
!8161 = !DISubroutineType(types: !8162)
!8162 = !{null, !7998, !160, !310}
!8163 = !{!8164, !8165, !8166}
!8164 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8160, file: !7995, line: 530, type: !7998)
!8165 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8160, file: !7995, line: 530, type: !160)
!8166 = !DILocalVariable(name: "_main", arg: 3, scope: !8160, file: !7995, line: 531, type: !310)
!8167 = !DILocation(line: 0, scope: !8160)
!8168 = !DILocation(line: 535, column: 11, scope: !8160)
!8169 = !DILocation(line: 560, column: 2, scope: !8160)
!8170 = !DILocation(line: 576, column: 2, scope: !8160)
!8171 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8172 = !DILocation(line: 603, column: 2, scope: !8160)
!8173 = distinct !DISubprogram(name: "z_arm_fault", scope: !8174, file: !8174, line: 1036, type: !8175, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !8190)
!8174 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8175 = !DISubroutineType(types: !8176)
!8176 = !{null, !111, !111, !111, !8177}
!8177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8178, size: 32)
!8178 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !248, line: 37, baseType: !8179)
!8179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !8180)
!8180 = !{!8181, !8182, !8183, !8184, !8185, !8186, !8187, !8188, !8189}
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8179, file: !248, line: 26, baseType: !111, size: 32)
!8182 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8179, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!8183 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8179, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8179, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8179, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!8186 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8179, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!8187 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8179, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8179, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8179, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!8190 = !{!8191, !8192, !8193, !8194, !8195, !8196, !8197, !8198, !8199, !8200}
!8191 = !DILocalVariable(name: "msp", arg: 1, scope: !8173, file: !8174, line: 1036, type: !111)
!8192 = !DILocalVariable(name: "psp", arg: 2, scope: !8173, file: !8174, line: 1036, type: !111)
!8193 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8173, file: !8174, line: 1036, type: !111)
!8194 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8173, file: !8174, line: 1037, type: !8177)
!8195 = !DILocalVariable(name: "reason", scope: !8173, file: !8174, line: 1039, type: !111)
!8196 = !DILocalVariable(name: "fault", scope: !8173, file: !8174, line: 1040, type: !103)
!8197 = !DILocalVariable(name: "recoverable", scope: !8173, file: !8174, line: 1041, type: !122)
!8198 = !DILocalVariable(name: "nested_exc", scope: !8173, file: !8174, line: 1041, type: !122)
!8199 = !DILocalVariable(name: "esf", scope: !8173, file: !8174, line: 1042, type: !3293)
!8200 = !DILocalVariable(name: "esf_copy", scope: !8173, file: !8174, line: 1047, type: !3294)
!8201 = !DILocation(line: 0, scope: !8173)
!8202 = !DILocation(line: 1040, column: 19, scope: !8173)
!8203 = !DILocation(line: 1041, column: 2, scope: !8173)
!8204 = !DILocation(line: 1047, column: 2, scope: !8173)
!8205 = !DILocation(line: 1047, column: 15, scope: !8173)
!8206 = !DILocalVariable(name: "key", arg: 1, scope: !8207, file: !7544, line: 84, type: !32)
!8207 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7544, file: !7544, line: 84, type: !7555, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !8208)
!8208 = !{!8206}
!8209 = !DILocation(line: 0, scope: !8207, inlinedAt: !8210)
!8210 = distinct !DILocation(line: 1050, column: 2, scope: !8173)
!8211 = !DILocation(line: 95, column: 2, scope: !8207, inlinedAt: !8210)
!8212 = !{i64 2258772}
!8213 = !DILocation(line: 1055, column: 9, scope: !8173)
!8214 = !DILocation(line: 1056, column: 2, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !8174, line: 1056, column: 2)
!8216 = distinct !DILexicalBlock(scope: !8173, file: !8174, line: 1056, column: 2)
!8217 = !DILocation(line: 1056, column: 2, scope: !8216)
!8218 = !DILocation(line: 1056, column: 2, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8215, file: !8174, line: 1056, column: 2)
!8220 = !DILocation(line: 1040, column: 24, scope: !8173)
!8221 = !DILocation(line: 1063, column: 11, scope: !8173)
!8222 = !DILocation(line: 1064, column: 6, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8173, file: !8174, line: 1064, column: 6)
!8224 = !{i8 0, i8 2}
!8225 = !DILocation(line: 1064, column: 6, scope: !8173)
!8226 = !DILocation(line: 1070, column: 20, scope: !8173)
!8227 = !DILocation(line: 1070, column: 2, scope: !8173)
!8228 = !DILocation(line: 1089, column: 6, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8173, file: !8174, line: 1089, column: 6)
!8230 = !DILocation(line: 0, scope: !8229)
!8231 = !DILocation(line: 1089, column: 6, scope: !8173)
!8232 = !DILocation(line: 1090, column: 28, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !8174, line: 1090, column: 7)
!8234 = distinct !DILexicalBlock(scope: !8229, file: !8174, line: 1089, column: 18)
!8235 = !DILocation(line: 1090, column: 44, scope: !8233)
!8236 = !DILocation(line: 1090, column: 7, scope: !8234)
!8237 = !DILocation(line: 1091, column: 24, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8233, file: !8174, line: 1090, column: 50)
!8239 = !DILocation(line: 1092, column: 3, scope: !8238)
!8240 = !DILocation(line: 1094, column: 23, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8229, file: !8174, line: 1093, column: 9)
!8242 = !DILocation(line: 1097, column: 2, scope: !8173)
!8243 = !DILocation(line: 1098, column: 1, scope: !8173)
!8244 = distinct !DISubprogram(name: "get_esf", scope: !8174, file: !8174, line: 894, type: !8245, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !8248)
!8245 = !DISubroutineType(types: !8246)
!8246 = !{!3293, !111, !111, !111, !8247}
!8247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!8248 = !{!8249, !8250, !8251, !8252, !8253, !8254}
!8249 = !DILocalVariable(name: "msp", arg: 1, scope: !8244, file: !8174, line: 894, type: !111)
!8250 = !DILocalVariable(name: "psp", arg: 2, scope: !8244, file: !8174, line: 894, type: !111)
!8251 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8244, file: !8174, line: 894, type: !111)
!8252 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8244, file: !8174, line: 895, type: !8247)
!8253 = !DILocalVariable(name: "alternative_state_exc", scope: !8244, file: !8174, line: 897, type: !122)
!8254 = !DILocalVariable(name: "ptr_esf", scope: !8244, file: !8174, line: 898, type: !3293)
!8255 = !DILocation(line: 0, scope: !8244)
!8256 = !DILocation(line: 900, column: 14, scope: !8244)
!8257 = !DILocation(line: 902, column: 49, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8244, file: !8174, line: 902, column: 6)
!8259 = !DILocation(line: 902, column: 6, scope: !8244)
!8260 = !DILocation(line: 983, column: 44, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8244, file: !8174, line: 983, column: 6)
!8262 = !DILocation(line: 985, column: 3, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8264, file: !8174, line: 985, column: 3)
!8264 = distinct !DILexicalBlock(scope: !8265, file: !8174, line: 985, column: 3)
!8265 = distinct !DILexicalBlock(scope: !8266, file: !8174, line: 985, column: 3)
!8266 = distinct !DILexicalBlock(scope: !8267, file: !8174, line: 985, column: 3)
!8267 = distinct !DILexicalBlock(scope: !8261, file: !8174, line: 984, column: 47)
!8268 = !DILocation(line: 986, column: 3, scope: !8267)
!8269 = !DILocation(line: 983, column: 18, scope: !8261)
!8270 = !DILocation(line: 991, column: 7, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8272, file: !8174, line: 990, column: 30)
!8272 = distinct !DILexicalBlock(scope: !8244, file: !8174, line: 990, column: 6)
!8273 = !DILocation(line: 998, column: 16, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8275, file: !8174, line: 995, column: 10)
!8275 = distinct !DILexicalBlock(scope: !8271, file: !8174, line: 991, column: 7)
!8276 = !DILocation(line: 1002, column: 2, scope: !8244)
!8277 = !DILocation(line: 1003, column: 1, scope: !8244)
!8278 = distinct !DISubprogram(name: "fault_handle", scope: !8174, file: !8174, line: 786, type: !8279, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !8281)
!8279 = !DISubroutineType(types: !8280)
!8280 = !{!111, !3293, !103, !8247}
!8281 = !{!8282, !8283, !8284, !8285}
!8282 = !DILocalVariable(name: "esf", arg: 1, scope: !8278, file: !8174, line: 786, type: !3293)
!8283 = !DILocalVariable(name: "fault", arg: 2, scope: !8278, file: !8174, line: 786, type: !103)
!8284 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8278, file: !8174, line: 786, type: !8247)
!8285 = !DILocalVariable(name: "reason", scope: !8278, file: !8174, line: 788, type: !111)
!8286 = !DILocation(line: 0, scope: !8278)
!8287 = !DILocation(line: 790, column: 15, scope: !8278)
!8288 = !DILocation(line: 792, column: 2, scope: !8278)
!8289 = !DILocation(line: 794, column: 12, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8278, file: !8174, line: 792, column: 17)
!8291 = !DILocation(line: 795, column: 3, scope: !8290)
!8292 = !DILocation(line: 800, column: 12, scope: !8290)
!8293 = !DILocation(line: 801, column: 3, scope: !8290)
!8294 = !DILocation(line: 803, column: 12, scope: !8290)
!8295 = !DILocation(line: 804, column: 3, scope: !8290)
!8296 = !DILocation(line: 806, column: 12, scope: !8290)
!8297 = !DILocation(line: 807, column: 3, scope: !8290)
!8298 = !DILocation(line: 814, column: 3, scope: !8290)
!8299 = !DILocation(line: 815, column: 3, scope: !8290)
!8300 = !DILocation(line: 820, column: 3, scope: !8290)
!8301 = !DILocation(line: 821, column: 3, scope: !8290)
!8302 = !DILocation(line: 829, column: 2, scope: !8278)
!8303 = distinct !DISubprogram(name: "hard_fault", scope: !8174, file: !8174, line: 709, type: !8304, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !8306)
!8304 = !DISubroutineType(types: !8305)
!8305 = !{!111, !3293, !8247}
!8306 = !{!8307, !8308, !8309}
!8307 = !DILocalVariable(name: "esf", arg: 1, scope: !8303, file: !8174, line: 709, type: !3293)
!8308 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8303, file: !8174, line: 709, type: !8247)
!8309 = !DILocalVariable(name: "reason", scope: !8303, file: !8174, line: 711, type: !111)
!8310 = !DILocation(line: 0, scope: !8303)
!8311 = !DILocation(line: 713, column: 2, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8313, file: !8174, line: 713, column: 2)
!8313 = distinct !DILexicalBlock(scope: !8314, file: !8174, line: 713, column: 2)
!8314 = distinct !DILexicalBlock(scope: !8315, file: !8174, line: 713, column: 2)
!8315 = distinct !DILexicalBlock(scope: !8303, file: !8174, line: 713, column: 2)
!8316 = !DILocation(line: 732, column: 15, scope: !8303)
!8317 = !DILocation(line: 734, column: 12, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8303, file: !8174, line: 734, column: 6)
!8319 = !DILocation(line: 734, column: 17, scope: !8318)
!8320 = !DILocation(line: 734, column: 41, scope: !8318)
!8321 = !DILocation(line: 734, column: 6, scope: !8303)
!8322 = !DILocation(line: 735, column: 3, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8324, file: !8174, line: 735, column: 3)
!8324 = distinct !DILexicalBlock(scope: !8325, file: !8174, line: 735, column: 3)
!8325 = distinct !DILexicalBlock(scope: !8326, file: !8174, line: 735, column: 3)
!8326 = distinct !DILexicalBlock(scope: !8327, file: !8174, line: 735, column: 3)
!8327 = distinct !DILexicalBlock(scope: !8318, file: !8174, line: 734, column: 47)
!8328 = !DILocation(line: 736, column: 2, scope: !8327)
!8329 = !DILocation(line: 736, column: 19, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8318, file: !8174, line: 736, column: 13)
!8331 = !DILocation(line: 736, column: 49, scope: !8330)
!8332 = !DILocation(line: 736, column: 13, scope: !8318)
!8333 = !DILocation(line: 737, column: 3, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !8174, line: 737, column: 3)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !8174, line: 737, column: 3)
!8336 = distinct !DILexicalBlock(scope: !8337, file: !8174, line: 737, column: 3)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !8174, line: 737, column: 3)
!8338 = distinct !DILexicalBlock(scope: !8330, file: !8174, line: 736, column: 55)
!8339 = !DILocation(line: 738, column: 2, scope: !8338)
!8340 = !DILocation(line: 738, column: 19, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8330, file: !8174, line: 738, column: 13)
!8342 = !DILocation(line: 738, column: 24, scope: !8341)
!8343 = !DILocation(line: 738, column: 47, scope: !8341)
!8344 = !DILocation(line: 738, column: 13, scope: !8330)
!8345 = !DILocation(line: 739, column: 3, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8347, file: !8174, line: 739, column: 3)
!8347 = distinct !DILexicalBlock(scope: !8348, file: !8174, line: 739, column: 3)
!8348 = distinct !DILexicalBlock(scope: !8349, file: !8174, line: 739, column: 3)
!8349 = distinct !DILexicalBlock(scope: !8350, file: !8174, line: 739, column: 3)
!8350 = distinct !DILexicalBlock(scope: !8341, file: !8174, line: 738, column: 53)
!8351 = !DILocation(line: 740, column: 7, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8350, file: !8174, line: 740, column: 7)
!8353 = !DILocation(line: 740, column: 7, scope: !8350)
!8354 = !DILocation(line: 741, column: 4, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8356, file: !8174, line: 741, column: 4)
!8356 = distinct !DILexicalBlock(scope: !8357, file: !8174, line: 741, column: 4)
!8357 = distinct !DILexicalBlock(scope: !8358, file: !8174, line: 741, column: 4)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !8174, line: 741, column: 4)
!8359 = distinct !DILexicalBlock(scope: !8352, file: !8174, line: 740, column: 38)
!8360 = !DILocation(line: 742, column: 24, scope: !8359)
!8361 = !DILocation(line: 743, column: 3, scope: !8359)
!8362 = !DILocation(line: 743, column: 20, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8352, file: !8174, line: 743, column: 14)
!8364 = !DILocation(line: 743, column: 25, scope: !8363)
!8365 = !DILocation(line: 743, column: 52, scope: !8363)
!8366 = !DILocation(line: 743, column: 14, scope: !8352)
!8367 = !DILocation(line: 744, column: 13, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8363, file: !8174, line: 743, column: 58)
!8369 = !DILocation(line: 745, column: 3, scope: !8368)
!8370 = !DILocation(line: 745, column: 20, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8363, file: !8174, line: 745, column: 14)
!8372 = !DILocation(line: 745, column: 25, scope: !8371)
!8373 = !DILocation(line: 745, column: 52, scope: !8371)
!8374 = !DILocation(line: 745, column: 14, scope: !8363)
!8375 = !DILocation(line: 746, column: 13, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8371, file: !8174, line: 745, column: 58)
!8377 = !DILocation(line: 747, column: 3, scope: !8376)
!8378 = !DILocation(line: 747, column: 20, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8371, file: !8174, line: 747, column: 14)
!8380 = !DILocation(line: 747, column: 52, scope: !8379)
!8381 = !DILocation(line: 747, column: 14, scope: !8371)
!8382 = !DILocation(line: 748, column: 13, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8379, file: !8174, line: 747, column: 58)
!8384 = !DILocation(line: 754, column: 4, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8386, file: !8174, line: 754, column: 4)
!8386 = distinct !DILexicalBlock(scope: !8387, file: !8174, line: 754, column: 4)
!8387 = distinct !DILexicalBlock(scope: !8388, file: !8174, line: 754, column: 4)
!8388 = distinct !DILexicalBlock(scope: !8379, file: !8174, line: 753, column: 10)
!8389 = !DILocation(line: 758, column: 3, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !8174, line: 758, column: 3)
!8391 = distinct !DILexicalBlock(scope: !8392, file: !8174, line: 758, column: 3)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !8174, line: 758, column: 3)
!8393 = distinct !DILexicalBlock(scope: !8341, file: !8174, line: 757, column: 9)
!8394 = !DILocation(line: 766, column: 2, scope: !8303)
!8395 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8174, file: !8174, line: 229, type: !8279, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !8396)
!8396 = !{!8397, !8398, !8399, !8400, !8401, !8402, !8405}
!8397 = !DILocalVariable(name: "esf", arg: 1, scope: !8395, file: !8174, line: 229, type: !3293)
!8398 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8395, file: !8174, line: 229, type: !103)
!8399 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8395, file: !8174, line: 230, type: !8247)
!8400 = !DILocalVariable(name: "reason", scope: !8395, file: !8174, line: 232, type: !111)
!8401 = !DILocalVariable(name: "mmfar", scope: !8395, file: !8174, line: 233, type: !111)
!8402 = !DILocalVariable(name: "temp", scope: !8403, file: !8174, line: 254, type: !111)
!8403 = distinct !DILexicalBlock(scope: !8404, file: !8174, line: 244, column: 48)
!8404 = distinct !DILexicalBlock(scope: !8395, file: !8174, line: 244, column: 6)
!8405 = !DILocalVariable(name: "min_stack_ptr", scope: !8406, file: !8174, line: 309, type: !111)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !8174, line: 308, column: 43)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !8174, line: 308, column: 7)
!8408 = distinct !DILexicalBlock(scope: !8409, file: !8174, line: 289, column: 40)
!8409 = distinct !DILexicalBlock(scope: !8395, file: !8174, line: 288, column: 6)
!8410 = !DILocation(line: 0, scope: !8395)
!8411 = !DILocation(line: 235, column: 2, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8413, file: !8174, line: 235, column: 2)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !8174, line: 235, column: 2)
!8414 = distinct !DILexicalBlock(scope: !8415, file: !8174, line: 235, column: 2)
!8415 = distinct !DILexicalBlock(scope: !8395, file: !8174, line: 235, column: 2)
!8416 = !DILocation(line: 237, column: 12, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8395, file: !8174, line: 237, column: 6)
!8418 = !DILocation(line: 237, column: 17, scope: !8417)
!8419 = !DILocation(line: 237, column: 41, scope: !8417)
!8420 = !DILocation(line: 237, column: 6, scope: !8395)
!8421 = !DILocation(line: 238, column: 3, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !8174, line: 238, column: 3)
!8423 = distinct !DILexicalBlock(scope: !8424, file: !8174, line: 238, column: 3)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !8174, line: 238, column: 3)
!8425 = distinct !DILexicalBlock(scope: !8426, file: !8174, line: 238, column: 3)
!8426 = distinct !DILexicalBlock(scope: !8417, file: !8174, line: 237, column: 47)
!8427 = !DILocation(line: 240, column: 2, scope: !8426)
!8428 = !DILocation(line: 241, column: 12, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8395, file: !8174, line: 241, column: 6)
!8430 = !DILocation(line: 241, column: 17, scope: !8429)
!8431 = !DILocation(line: 241, column: 43, scope: !8429)
!8432 = !DILocation(line: 241, column: 6, scope: !8395)
!8433 = !DILocation(line: 242, column: 3, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8435, file: !8174, line: 242, column: 3)
!8435 = distinct !DILexicalBlock(scope: !8436, file: !8174, line: 242, column: 3)
!8436 = distinct !DILexicalBlock(scope: !8437, file: !8174, line: 242, column: 3)
!8437 = distinct !DILexicalBlock(scope: !8438, file: !8174, line: 242, column: 3)
!8438 = distinct !DILexicalBlock(scope: !8429, file: !8174, line: 241, column: 49)
!8439 = !DILocation(line: 243, column: 2, scope: !8438)
!8440 = !DILocation(line: 244, column: 12, scope: !8404)
!8441 = !DILocation(line: 244, column: 17, scope: !8404)
!8442 = !DILocation(line: 244, column: 42, scope: !8404)
!8443 = !DILocation(line: 244, column: 6, scope: !8395)
!8444 = !DILocation(line: 245, column: 3, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !8174, line: 245, column: 3)
!8446 = distinct !DILexicalBlock(scope: !8447, file: !8174, line: 245, column: 3)
!8447 = distinct !DILexicalBlock(scope: !8448, file: !8174, line: 245, column: 3)
!8448 = distinct !DILexicalBlock(scope: !8403, file: !8174, line: 245, column: 3)
!8449 = !DILocation(line: 254, column: 24, scope: !8403)
!8450 = !DILocation(line: 0, scope: !8403)
!8451 = !DILocation(line: 256, column: 13, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8403, file: !8174, line: 256, column: 7)
!8453 = !DILocation(line: 256, column: 18, scope: !8452)
!8454 = !DILocation(line: 256, column: 44, scope: !8452)
!8455 = !DILocation(line: 256, column: 7, scope: !8403)
!8456 = !DILocation(line: 258, column: 4, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !8174, line: 258, column: 4)
!8458 = distinct !DILexicalBlock(scope: !8459, file: !8174, line: 258, column: 4)
!8459 = distinct !DILexicalBlock(scope: !8460, file: !8174, line: 258, column: 4)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !8174, line: 258, column: 4)
!8461 = distinct !DILexicalBlock(scope: !8452, file: !8174, line: 256, column: 50)
!8462 = !DILocation(line: 259, column: 24, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8461, file: !8174, line: 259, column: 8)
!8464 = !DILocation(line: 259, column: 8, scope: !8461)
!8465 = !DILocation(line: 261, column: 15, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8463, file: !8174, line: 259, column: 30)
!8467 = !DILocation(line: 262, column: 4, scope: !8466)
!8468 = !DILocation(line: 265, column: 12, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8395, file: !8174, line: 265, column: 6)
!8470 = !DILocation(line: 265, column: 17, scope: !8469)
!8471 = !DILocation(line: 265, column: 42, scope: !8469)
!8472 = !DILocation(line: 265, column: 6, scope: !8395)
!8473 = !DILocation(line: 266, column: 3, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !8174, line: 266, column: 3)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !8174, line: 266, column: 3)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !8174, line: 266, column: 3)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !8174, line: 266, column: 3)
!8478 = distinct !DILexicalBlock(scope: !8469, file: !8174, line: 265, column: 48)
!8479 = !DILocation(line: 267, column: 2, scope: !8478)
!8480 = !DILocation(line: 269, column: 12, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8395, file: !8174, line: 269, column: 6)
!8482 = !DILocation(line: 269, column: 17, scope: !8481)
!8483 = !DILocation(line: 269, column: 41, scope: !8481)
!8484 = !DILocation(line: 269, column: 6, scope: !8395)
!8485 = !DILocation(line: 270, column: 3, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8487, file: !8174, line: 270, column: 3)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !8174, line: 270, column: 3)
!8488 = distinct !DILexicalBlock(scope: !8489, file: !8174, line: 270, column: 3)
!8489 = distinct !DILexicalBlock(scope: !8490, file: !8174, line: 270, column: 3)
!8490 = distinct !DILexicalBlock(scope: !8481, file: !8174, line: 269, column: 47)
!8491 = !DILocation(line: 272, column: 2, scope: !8490)
!8492 = !DILocation(line: 288, column: 12, scope: !8409)
!8493 = !DILocation(line: 288, column: 17, scope: !8409)
!8494 = !DILocation(line: 288, column: 41, scope: !8409)
!8495 = !DILocation(line: 289, column: 9, scope: !8409)
!8496 = !DILocation(line: 289, column: 14, scope: !8409)
!8497 = !DILocation(line: 288, column: 6, scope: !8395)
!8498 = !DILocation(line: 308, column: 12, scope: !8407)
!8499 = !DILocation(line: 308, column: 17, scope: !8407)
!8500 = !DILocation(line: 308, column: 7, scope: !8408)
!8501 = !DILocation(line: 310, column: 6, scope: !8406)
!8502 = !DILocation(line: 309, column: 29, scope: !8406)
!8503 = !DILocation(line: 0, scope: !8406)
!8504 = !DILocation(line: 312, column: 8, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8406, file: !8174, line: 312, column: 8)
!8506 = !DILocation(line: 312, column: 8, scope: !8406)
!8507 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8508, file: !7865, line: 1099, type: !111)
!8508 = distinct !DISubprogram(name: "__set_PSP", scope: !7865, file: !7865, line: 1099, type: !7962, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !8509)
!8509 = !{!8507}
!8510 = !DILocation(line: 0, scope: !8508, inlinedAt: !8511)
!8511 = distinct !DILocation(line: 338, column: 5, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8505, file: !8174, line: 312, column: 23)
!8513 = !DILocation(line: 1101, column: 3, scope: !8508, inlinedAt: !8511)
!8514 = !{i64 3577175}
!8515 = !DILocation(line: 341, column: 4, scope: !8512)
!8516 = !DILocation(line: 342, column: 5, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8518, file: !8174, line: 342, column: 5)
!8518 = distinct !DILexicalBlock(scope: !8519, file: !8174, line: 342, column: 5)
!8519 = distinct !DILexicalBlock(scope: !8505, file: !8174, line: 341, column: 11)
!8520 = !DILocation(line: 342, column: 5, scope: !8518)
!8521 = !DILocation(line: 342, column: 5, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8517, file: !8174, line: 342, column: 5)
!8523 = !DILocation(line: 360, column: 12, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8395, file: !8174, line: 360, column: 6)
!8525 = !DILocation(line: 360, column: 17, scope: !8524)
!8526 = !DILocation(line: 360, column: 41, scope: !8524)
!8527 = !DILocation(line: 360, column: 6, scope: !8395)
!8528 = !DILocation(line: 361, column: 14, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8524, file: !8174, line: 360, column: 47)
!8530 = !DILocation(line: 362, column: 2, scope: !8529)
!8531 = !DILocation(line: 366, column: 12, scope: !8395)
!8532 = !DILocation(line: 369, column: 15, scope: !8395)
!8533 = !DILocation(line: 371, column: 2, scope: !8395)
!8534 = distinct !DISubprogram(name: "bus_fault", scope: !8174, file: !8174, line: 383, type: !8535, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !8537)
!8535 = !DISubroutineType(types: !8536)
!8536 = !{!103, !3293, !103, !8247}
!8537 = !{!8538, !8539, !8540, !8541, !8542}
!8538 = !DILocalVariable(name: "esf", arg: 1, scope: !8534, file: !8174, line: 383, type: !3293)
!8539 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8534, file: !8174, line: 383, type: !103)
!8540 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8534, file: !8174, line: 383, type: !8247)
!8541 = !DILocalVariable(name: "reason", scope: !8534, file: !8174, line: 385, type: !111)
!8542 = !DILocalVariable(name: "bfar", scope: !8543, file: !8174, line: 405, type: !111)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !8174, line: 395, column: 42)
!8544 = distinct !DILexicalBlock(scope: !8534, file: !8174, line: 395, column: 6)
!8545 = !DILocation(line: 0, scope: !8534)
!8546 = !DILocation(line: 387, column: 2, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8548, file: !8174, line: 387, column: 2)
!8548 = distinct !DILexicalBlock(scope: !8549, file: !8174, line: 387, column: 2)
!8549 = distinct !DILexicalBlock(scope: !8550, file: !8174, line: 387, column: 2)
!8550 = distinct !DILexicalBlock(scope: !8534, file: !8174, line: 387, column: 2)
!8551 = !DILocation(line: 389, column: 11, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8534, file: !8174, line: 389, column: 6)
!8553 = !DILocation(line: 389, column: 16, scope: !8552)
!8554 = !DILocation(line: 389, column: 6, scope: !8534)
!8555 = !DILocation(line: 390, column: 3, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8557, file: !8174, line: 390, column: 3)
!8557 = distinct !DILexicalBlock(scope: !8558, file: !8174, line: 390, column: 3)
!8558 = distinct !DILexicalBlock(scope: !8559, file: !8174, line: 390, column: 3)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !8174, line: 390, column: 3)
!8560 = distinct !DILexicalBlock(scope: !8552, file: !8174, line: 389, column: 39)
!8561 = !DILocation(line: 391, column: 2, scope: !8560)
!8562 = !DILocation(line: 392, column: 11, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8534, file: !8174, line: 392, column: 6)
!8564 = !DILocation(line: 392, column: 16, scope: !8563)
!8565 = !DILocation(line: 392, column: 6, scope: !8534)
!8566 = !DILocation(line: 393, column: 3, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8568, file: !8174, line: 393, column: 3)
!8568 = distinct !DILexicalBlock(scope: !8569, file: !8174, line: 393, column: 3)
!8569 = distinct !DILexicalBlock(scope: !8570, file: !8174, line: 393, column: 3)
!8570 = distinct !DILexicalBlock(scope: !8571, file: !8174, line: 393, column: 3)
!8571 = distinct !DILexicalBlock(scope: !8563, file: !8174, line: 392, column: 41)
!8572 = !DILocation(line: 394, column: 2, scope: !8571)
!8573 = !DILocation(line: 395, column: 11, scope: !8544)
!8574 = !DILocation(line: 395, column: 16, scope: !8544)
!8575 = !DILocation(line: 395, column: 6, scope: !8534)
!8576 = !DILocation(line: 396, column: 3, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8578, file: !8174, line: 396, column: 3)
!8578 = distinct !DILexicalBlock(scope: !8579, file: !8174, line: 396, column: 3)
!8579 = distinct !DILexicalBlock(scope: !8580, file: !8174, line: 396, column: 3)
!8580 = distinct !DILexicalBlock(scope: !8543, file: !8174, line: 396, column: 3)
!8581 = !DILocation(line: 405, column: 3, scope: !8543)
!8582 = !DILocation(line: 0, scope: !8543)
!8583 = !DILocation(line: 407, column: 13, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8543, file: !8174, line: 407, column: 7)
!8585 = !DILocation(line: 407, column: 18, scope: !8584)
!8586 = !DILocation(line: 407, column: 44, scope: !8584)
!8587 = !DILocation(line: 407, column: 7, scope: !8543)
!8588 = !DILocation(line: 408, column: 4, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8590, file: !8174, line: 408, column: 4)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !8174, line: 408, column: 4)
!8591 = distinct !DILexicalBlock(scope: !8592, file: !8174, line: 408, column: 4)
!8592 = distinct !DILexicalBlock(scope: !8593, file: !8174, line: 408, column: 4)
!8593 = distinct !DILexicalBlock(scope: !8584, file: !8174, line: 407, column: 50)
!8594 = !DILocation(line: 409, column: 24, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8593, file: !8174, line: 409, column: 8)
!8596 = !DILocation(line: 409, column: 8, scope: !8593)
!8597 = !DILocation(line: 411, column: 15, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8595, file: !8174, line: 409, column: 30)
!8599 = !DILocation(line: 412, column: 4, scope: !8598)
!8600 = !DILocation(line: 415, column: 11, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8534, file: !8174, line: 415, column: 6)
!8602 = !DILocation(line: 415, column: 16, scope: !8601)
!8603 = !DILocation(line: 415, column: 6, scope: !8534)
!8604 = !DILocation(line: 416, column: 3, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8606, file: !8174, line: 416, column: 3)
!8606 = distinct !DILexicalBlock(scope: !8607, file: !8174, line: 416, column: 3)
!8607 = distinct !DILexicalBlock(scope: !8608, file: !8174, line: 416, column: 3)
!8608 = distinct !DILexicalBlock(scope: !8609, file: !8174, line: 416, column: 3)
!8609 = distinct !DILexicalBlock(scope: !8601, file: !8174, line: 415, column: 44)
!8610 = !DILocation(line: 417, column: 2, scope: !8609)
!8611 = !DILocation(line: 418, column: 12, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8534, file: !8174, line: 418, column: 6)
!8613 = !DILocation(line: 418, column: 17, scope: !8612)
!8614 = !DILocation(line: 418, column: 41, scope: !8612)
!8615 = !DILocation(line: 418, column: 6, scope: !8534)
!8616 = !DILocation(line: 423, column: 18, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8612, file: !8174, line: 423, column: 13)
!8618 = !DILocation(line: 423, column: 23, scope: !8617)
!8619 = !DILocation(line: 423, column: 13, scope: !8612)
!8620 = !DILocation(line: 0, scope: !8612)
!8621 = !DILocation(line: 524, column: 12, scope: !8534)
!8622 = !DILocation(line: 526, column: 15, scope: !8534)
!8623 = !DILocation(line: 528, column: 2, scope: !8534)
!8624 = distinct !DISubprogram(name: "usage_fault", scope: !8174, file: !8174, line: 539, type: !8625, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !8629)
!8625 = !DISubroutineType(types: !8626)
!8626 = !{!111, !8627}
!8627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8628, size: 32)
!8628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3294)
!8629 = !{!8630, !8631}
!8630 = !DILocalVariable(name: "esf", arg: 1, scope: !8624, file: !8174, line: 539, type: !8627)
!8631 = !DILocalVariable(name: "reason", scope: !8624, file: !8174, line: 541, type: !111)
!8632 = !DILocation(line: 0, scope: !8624)
!8633 = !DILocation(line: 543, column: 2, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !8174, line: 543, column: 2)
!8635 = distinct !DILexicalBlock(scope: !8636, file: !8174, line: 543, column: 2)
!8636 = distinct !DILexicalBlock(scope: !8637, file: !8174, line: 543, column: 2)
!8637 = distinct !DILexicalBlock(scope: !8624, file: !8174, line: 543, column: 2)
!8638 = !DILocation(line: 546, column: 12, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8624, file: !8174, line: 546, column: 6)
!8640 = !DILocation(line: 546, column: 17, scope: !8639)
!8641 = !DILocation(line: 546, column: 43, scope: !8639)
!8642 = !DILocation(line: 546, column: 6, scope: !8624)
!8643 = !DILocation(line: 547, column: 3, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8645, file: !8174, line: 547, column: 3)
!8645 = distinct !DILexicalBlock(scope: !8646, file: !8174, line: 547, column: 3)
!8646 = distinct !DILexicalBlock(scope: !8647, file: !8174, line: 547, column: 3)
!8647 = distinct !DILexicalBlock(scope: !8648, file: !8174, line: 547, column: 3)
!8648 = distinct !DILexicalBlock(scope: !8639, file: !8174, line: 546, column: 49)
!8649 = !DILocation(line: 548, column: 2, scope: !8648)
!8650 = !DILocation(line: 549, column: 12, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8624, file: !8174, line: 549, column: 6)
!8652 = !DILocation(line: 549, column: 17, scope: !8651)
!8653 = !DILocation(line: 549, column: 43, scope: !8651)
!8654 = !DILocation(line: 549, column: 6, scope: !8624)
!8655 = !DILocation(line: 550, column: 3, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !8174, line: 550, column: 3)
!8657 = distinct !DILexicalBlock(scope: !8658, file: !8174, line: 550, column: 3)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !8174, line: 550, column: 3)
!8659 = distinct !DILexicalBlock(scope: !8660, file: !8174, line: 550, column: 3)
!8660 = distinct !DILexicalBlock(scope: !8651, file: !8174, line: 549, column: 49)
!8661 = !DILocation(line: 551, column: 2, scope: !8660)
!8662 = !DILocation(line: 567, column: 12, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8624, file: !8174, line: 567, column: 6)
!8664 = !DILocation(line: 567, column: 17, scope: !8663)
!8665 = !DILocation(line: 567, column: 38, scope: !8663)
!8666 = !DILocation(line: 567, column: 6, scope: !8624)
!8667 = !DILocation(line: 568, column: 3, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8669, file: !8174, line: 568, column: 3)
!8669 = distinct !DILexicalBlock(scope: !8670, file: !8174, line: 568, column: 3)
!8670 = distinct !DILexicalBlock(scope: !8671, file: !8174, line: 568, column: 3)
!8671 = distinct !DILexicalBlock(scope: !8672, file: !8174, line: 568, column: 3)
!8672 = distinct !DILexicalBlock(scope: !8663, file: !8174, line: 567, column: 44)
!8673 = !DILocation(line: 569, column: 2, scope: !8672)
!8674 = !DILocation(line: 570, column: 12, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8624, file: !8174, line: 570, column: 6)
!8676 = !DILocation(line: 570, column: 17, scope: !8675)
!8677 = !DILocation(line: 570, column: 39, scope: !8675)
!8678 = !DILocation(line: 570, column: 6, scope: !8624)
!8679 = !DILocation(line: 571, column: 3, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8681, file: !8174, line: 571, column: 3)
!8681 = distinct !DILexicalBlock(scope: !8682, file: !8174, line: 571, column: 3)
!8682 = distinct !DILexicalBlock(scope: !8683, file: !8174, line: 571, column: 3)
!8683 = distinct !DILexicalBlock(scope: !8684, file: !8174, line: 571, column: 3)
!8684 = distinct !DILexicalBlock(scope: !8675, file: !8174, line: 570, column: 45)
!8685 = !DILocation(line: 572, column: 2, scope: !8684)
!8686 = !DILocation(line: 573, column: 12, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8624, file: !8174, line: 573, column: 6)
!8688 = !DILocation(line: 573, column: 17, scope: !8687)
!8689 = !DILocation(line: 573, column: 42, scope: !8687)
!8690 = !DILocation(line: 573, column: 6, scope: !8624)
!8691 = !DILocation(line: 574, column: 3, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8693, file: !8174, line: 574, column: 3)
!8693 = distinct !DILexicalBlock(scope: !8694, file: !8174, line: 574, column: 3)
!8694 = distinct !DILexicalBlock(scope: !8695, file: !8174, line: 574, column: 3)
!8695 = distinct !DILexicalBlock(scope: !8696, file: !8174, line: 574, column: 3)
!8696 = distinct !DILexicalBlock(scope: !8687, file: !8174, line: 573, column: 48)
!8697 = !DILocation(line: 575, column: 2, scope: !8696)
!8698 = !DILocation(line: 576, column: 12, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8624, file: !8174, line: 576, column: 6)
!8700 = !DILocation(line: 576, column: 17, scope: !8699)
!8701 = !DILocation(line: 576, column: 44, scope: !8699)
!8702 = !DILocation(line: 576, column: 6, scope: !8624)
!8703 = !DILocation(line: 577, column: 3, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !8174, line: 577, column: 3)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !8174, line: 577, column: 3)
!8706 = distinct !DILexicalBlock(scope: !8707, file: !8174, line: 577, column: 3)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !8174, line: 577, column: 3)
!8708 = distinct !DILexicalBlock(scope: !8699, file: !8174, line: 576, column: 50)
!8709 = !DILocation(line: 578, column: 2, scope: !8708)
!8710 = !DILocation(line: 581, column: 12, scope: !8624)
!8711 = !DILocation(line: 583, column: 2, scope: !8624)
!8712 = distinct !DISubprogram(name: "debug_monitor", scope: !8174, file: !8174, line: 632, type: !8713, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !8715)
!8713 = !DISubroutineType(types: !8714)
!8714 = !{null, !3293, !8247}
!8715 = !{!8716, !8717}
!8716 = !DILocalVariable(name: "esf", arg: 1, scope: !8712, file: !8174, line: 632, type: !3293)
!8717 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8712, file: !8174, line: 632, type: !8247)
!8718 = !DILocation(line: 0, scope: !8712)
!8719 = !DILocation(line: 634, column: 15, scope: !8712)
!8720 = !DILocation(line: 636, column: 2, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8722, file: !8174, line: 636, column: 2)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !8174, line: 636, column: 2)
!8723 = distinct !DILexicalBlock(scope: !8724, file: !8174, line: 636, column: 2)
!8724 = distinct !DILexicalBlock(scope: !8712, file: !8174, line: 636, column: 2)
!8725 = !DILocation(line: 652, column: 1, scope: !8712)
!8726 = distinct !DISubprogram(name: "reserved_exception", scope: !8174, file: !8174, line: 776, type: !8727, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !8729)
!8727 = !DISubroutineType(types: !8728)
!8728 = !{null, !8627, !103}
!8729 = !{!8730, !8731}
!8730 = !DILocalVariable(name: "esf", arg: 1, scope: !8726, file: !8174, line: 776, type: !8627)
!8731 = !DILocalVariable(name: "fault", arg: 2, scope: !8726, file: !8174, line: 776, type: !103)
!8732 = !DILocation(line: 0, scope: !8726)
!8733 = !DILocation(line: 780, column: 2, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !8174, line: 780, column: 2)
!8735 = distinct !DILexicalBlock(scope: !8736, file: !8174, line: 780, column: 2)
!8736 = distinct !DILexicalBlock(scope: !8737, file: !8174, line: 780, column: 2)
!8737 = distinct !DILexicalBlock(scope: !8726, file: !8174, line: 780, column: 2)
!8738 = !DILocation(line: 783, column: 1, scope: !8726)
!8739 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8174, file: !8174, line: 658, type: !8740, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !8742)
!8740 = !DISubroutineType(types: !8741)
!8741 = !{!122, !3293}
!8742 = !{!8743, !8744, !8745}
!8743 = !DILocalVariable(name: "esf", arg: 1, scope: !8739, file: !8174, line: 658, type: !3293)
!8744 = !DILocalVariable(name: "ret_addr", scope: !8739, file: !8174, line: 660, type: !3065)
!8745 = !DILocalVariable(name: "fault_insn", scope: !8739, file: !8174, line: 686, type: !181)
!8746 = !DILocation(line: 0, scope: !8739)
!8747 = !DILocation(line: 660, column: 46, scope: !8739)
!8748 = !DILocation(line: 660, column: 23, scope: !8739)
!8749 = !DILocation(line: 682, column: 11, scope: !8739)
!8750 = !DILocation(line: 271, column: 3, scope: !8751, inlinedAt: !8752)
!8751 = distinct !DISubprogram(name: "__DSB", scope: !7865, file: !7865, line: 269, type: !323, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !2501)
!8752 = distinct !DILocation(line: 683, column: 2, scope: !8739)
!8753 = !{i64 3553310}
!8754 = !DILocation(line: 260, column: 3, scope: !8755, inlinedAt: !8756)
!8755 = distinct !DISubprogram(name: "__ISB", scope: !7865, file: !7865, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !2501)
!8756 = distinct !DILocation(line: 684, column: 2, scope: !8739)
!8757 = !{i64 3553027}
!8758 = !DILocation(line: 686, column: 35, scope: !8739)
!8759 = !DILocation(line: 686, column: 24, scope: !8739)
!8760 = !DILocation(line: 688, column: 11, scope: !8739)
!8761 = !DILocation(line: 271, column: 3, scope: !8751, inlinedAt: !8762)
!8762 = distinct !DILocation(line: 689, column: 2, scope: !8739)
!8763 = !DILocation(line: 260, column: 3, scope: !8755, inlinedAt: !8764)
!8764 = distinct !DILocation(line: 690, column: 2, scope: !8739)
!8765 = !DILocation(line: 693, column: 45, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8739, file: !8174, line: 693, column: 6)
!8767 = !DILocation(line: 699, column: 1, scope: !8739)
!8768 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8174, file: !8174, line: 1107, type: !323, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3265, retainedNodes: !2501)
!8769 = !DILocation(line: 1111, column: 11, scope: !8768)
!8770 = !DILocation(line: 1136, column: 1, scope: !8768)
!8771 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8772, file: !8772, line: 26, type: !323, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3336, retainedNodes: !8773)
!8772 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8773 = !{!8774}
!8774 = !DILocalVariable(name: "irq", scope: !8771, file: !8772, line: 28, type: !103)
!8775 = !DILocation(line: 0, scope: !8771)
!8776 = !DILocation(line: 30, column: 2, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8771, file: !8772, line: 30, column: 2)
!8778 = !DILocation(line: 31, column: 3, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8780, file: !8772, line: 30, column: 39)
!8780 = distinct !DILexicalBlock(scope: !8777, file: !8772, line: 30, column: 2)
!8781 = !DILocation(line: 30, column: 35, scope: !8780)
!8782 = !DILocation(line: 30, column: 13, scope: !8780)
!8783 = distinct !{!8783, !8776, !8784}
!8784 = !DILocation(line: 32, column: 2, scope: !8777)
!8785 = !DILocation(line: 33, column: 1, scope: !8771)
!8786 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !992, file: !992, line: 1814, type: !7905, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3336, retainedNodes: !8787)
!8787 = !{!8788, !8789}
!8788 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8786, file: !992, line: 1814, type: !1260)
!8789 = !DILocalVariable(name: "priority", arg: 2, scope: !8786, file: !992, line: 1814, type: !111)
!8790 = !DILocation(line: 0, scope: !8786)
!8791 = !DILocation(line: 1816, column: 7, scope: !8786)
!8792 = !DILocation(line: 0, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8786, file: !992, line: 1816, column: 7)
!8794 = !DILocation(line: 1824, column: 1, scope: !8786)
!8795 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8796, file: !8796, line: 27, type: !8797, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3381, retainedNodes: !8902)
!8796 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8797 = !DISubroutineType(types: !8798)
!8798 = !{null, !8799}
!8799 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !8800)
!8800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8801, size: 32)
!8801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !8802)
!8802 = !{!8803, !8861, !8873, !8874, !8875, !8876, !8882, !8897}
!8803 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8801, file: !199, line: 247, baseType: !8804, size: 384)
!8804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !8805)
!8805 = !{!8806, !8830, !8837, !8838, !8839, !8848, !8849, !8850}
!8806 = !DIDerivedType(tag: DW_TAG_member, scope: !8804, file: !199, line: 60, baseType: !8807, size: 64)
!8807 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8804, file: !199, line: 60, size: 64, elements: !8808)
!8808 = !{!8809, !8824}
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8807, file: !199, line: 61, baseType: !8810, size: 64)
!8810 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !8811)
!8811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !8812)
!8812 = !{!8813, !8819}
!8813 = !DIDerivedType(tag: DW_TAG_member, scope: !8811, file: !136, line: 38, baseType: !8814, size: 32)
!8814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8811, file: !136, line: 38, size: 32, elements: !8815)
!8815 = !{!8816, !8818}
!8816 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8814, file: !136, line: 39, baseType: !8817, size: 32)
!8817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8811, size: 32)
!8818 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8814, file: !136, line: 40, baseType: !8817, size: 32)
!8819 = !DIDerivedType(tag: DW_TAG_member, scope: !8811, file: !136, line: 42, baseType: !8820, size: 32, offset: 32)
!8820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8811, file: !136, line: 42, size: 32, elements: !8821)
!8821 = !{!8822, !8823}
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8820, file: !136, line: 43, baseType: !8817, size: 32)
!8823 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8820, file: !136, line: 44, baseType: !8817, size: 32)
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8807, file: !199, line: 62, baseType: !8825, size: 64)
!8825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !8826)
!8826 = !{!8827}
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8825, file: !211, line: 50, baseType: !8828, size: 64)
!8828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8829, size: 64, elements: !216)
!8829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8825, size: 32)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8804, file: !199, line: 68, baseType: !8831, size: 32, offset: 64)
!8831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8832, size: 32)
!8832 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !8833)
!8833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !8834)
!8834 = !{!8835}
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8833, file: !131, line: 232, baseType: !8836, size: 64)
!8836 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !8811)
!8837 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8804, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!8838 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8804, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!8839 = !DIDerivedType(tag: DW_TAG_member, scope: !8804, file: !199, line: 90, baseType: !8840, size: 16, offset: 112)
!8840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8804, file: !199, line: 90, size: 16, elements: !8841)
!8841 = !{!8842, !8847}
!8842 = !DIDerivedType(tag: DW_TAG_member, scope: !8840, file: !199, line: 91, baseType: !8843, size: 16)
!8843 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8840, file: !199, line: 91, size: 16, elements: !8844)
!8844 = !{!8845, !8846}
!8845 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8843, file: !199, line: 96, baseType: !229, size: 8)
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8843, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!8847 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8840, file: !199, line: 100, baseType: !181, size: 16)
!8848 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8804, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!8849 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8804, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!8850 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8804, file: !199, line: 131, baseType: !8851, size: 192, offset: 192)
!8851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !8852)
!8852 = !{!8853, !8854, !8860}
!8853 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8851, file: !131, line: 245, baseType: !8810, size: 64)
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8851, file: !131, line: 246, baseType: !8855, size: 32, offset: 64)
!8855 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !8856)
!8856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8857, size: 32)
!8857 = !DISubroutineType(types: !8858)
!8858 = !{null, !8859}
!8859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8851, size: 32)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8851, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8801, file: !199, line: 250, baseType: !8862, size: 288, offset: 384)
!8862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !8863)
!8863 = !{!8864, !8865, !8866, !8867, !8868, !8869, !8870, !8871, !8872}
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8862, file: !248, line: 26, baseType: !111, size: 32)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8862, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8862, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!8867 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8862, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8862, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!8869 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8862, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!8870 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8862, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!8871 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8862, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8862, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8801, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8801, file: !199, line: 256, baseType: !8832, size: 64, offset: 704)
!8875 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8801, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!8876 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8801, file: !199, line: 300, baseType: !8877, size: 96, offset: 800)
!8877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !8878)
!8878 = !{!8879, !8880, !8881}
!8879 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8877, file: !199, line: 153, baseType: !22, size: 32)
!8880 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8877, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!8881 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8877, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!8882 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8801, file: !199, line: 325, baseType: !8883, size: 32, offset: 896)
!8883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8884, size: 32)
!8884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !8885)
!8885 = !{!8886, !8892, !8893}
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8884, file: !127, line: 5074, baseType: !8887, size: 96)
!8887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !8888)
!8888 = !{!8889, !8890, !8891}
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8887, file: !274, line: 57, baseType: !277, size: 32)
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8887, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8887, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8884, file: !127, line: 5075, baseType: !8832, size: 64, offset: 96)
!8893 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8884, file: !127, line: 5076, baseType: !8894, size: 32, offset: 160)
!8894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !8895)
!8895 = !{!8896}
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8894, file: !152, line: 52, baseType: !22, size: 32)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8801, file: !199, line: 343, baseType: !8898, size: 64, offset: 928)
!8898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !8899)
!8899 = !{!8900, !8901}
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8898, file: !248, line: 63, baseType: !111, size: 32)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8898, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!8902 = !{!8903}
!8903 = !DILocalVariable(name: "thread", arg: 1, scope: !8795, file: !8796, line: 27, type: !8799)
!8904 = !DILocation(line: 0, scope: !8795)
!8905 = !DILocation(line: 29, column: 6, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8795, file: !8796, line: 29, column: 6)
!8907 = !DILocation(line: 29, column: 15, scope: !8906)
!8908 = !DILocation(line: 29, column: 6, scope: !8795)
!8909 = !DILocation(line: 1031, column: 3, scope: !8910, inlinedAt: !8913)
!8910 = distinct !DISubprogram(name: "__get_IPSR", scope: !7865, file: !7865, line: 1027, type: !7952, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3381, retainedNodes: !8911)
!8911 = !{!8912}
!8912 = !DILocalVariable(name: "result", scope: !8910, file: !7865, line: 1029, type: !111)
!8913 = distinct !DILocation(line: 48, column: 10, scope: !8914, inlinedAt: !8918)
!8914 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8915, file: !8915, line: 46, type: !8916, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3381, retainedNodes: !2501)
!8915 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8916 = !DISubroutineType(types: !8917)
!8917 = !{!122}
!8918 = distinct !DILocation(line: 30, column: 7, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8920, file: !8796, line: 30, column: 7)
!8920 = distinct !DILexicalBlock(scope: !8906, file: !8796, line: 29, column: 26)
!8921 = !{i64 3542158}
!8922 = !DILocation(line: 0, scope: !8910, inlinedAt: !8913)
!8923 = !DILocation(line: 48, column: 9, scope: !8914, inlinedAt: !8918)
!8924 = !DILocation(line: 30, column: 7, scope: !8920)
!8925 = !DILocation(line: 42, column: 14, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8919, file: !8796, line: 30, column: 25)
!8927 = !DILocation(line: 48, column: 15, scope: !8926)
!8928 = !DILocation(line: 49, column: 3, scope: !8926)
!8929 = !DILocation(line: 52, column: 2, scope: !8795)
!8930 = !DILocation(line: 53, column: 1, scope: !8795)
!8931 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !854, file: !854, line: 127, type: !323, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !847, retainedNodes: !2501)
!8932 = !DILocation(line: 134, column: 2, scope: !8931)
!8933 = !DILocation(line: 156, column: 1, scope: !8931)
!8934 = !DILocation(line: 0, scope: !853)
!8935 = !DILocation(line: 289, column: 36, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !853, file: !854, line: 285, column: 2)
!8937 = !DILocation(line: 289, column: 42, scope: !8936)
!8938 = !DILocation(line: 300, column: 36, scope: !853)
!8939 = !DILocation(line: 301, column: 35, scope: !853)
!8940 = !DILocation(line: 302, column: 37, scope: !853)
!8941 = !DILocation(line: 311, column: 2, scope: !853)
!8942 = !DILocation(line: 316, column: 1, scope: !853)
!8943 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !1020, file: !1020, line: 180, type: !323, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !2501)
!8944 = !DILocation(line: 188, column: 12, scope: !8943)
!8945 = !DILocation(line: 271, column: 3, scope: !8946, inlinedAt: !8947)
!8946 = distinct !DISubprogram(name: "__DSB", scope: !7865, file: !7865, line: 269, type: !323, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !2501)
!8947 = distinct !DILocation(line: 192, column: 2, scope: !8943)
!8948 = !{i64 3705824}
!8949 = !DILocation(line: 260, column: 3, scope: !8950, inlinedAt: !8951)
!8950 = distinct !DISubprogram(name: "__ISB", scope: !7865, file: !7865, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !2501)
!8951 = distinct !DILocation(line: 193, column: 2, scope: !8943)
!8952 = !{i64 3705541}
!8953 = !DILocation(line: 194, column: 1, scope: !8943)
!8954 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !1020, file: !1020, line: 199, type: !323, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !2501)
!8955 = !DILocation(line: 282, column: 3, scope: !8956, inlinedAt: !8957)
!8956 = distinct !DISubprogram(name: "__DMB", scope: !7865, file: !7865, line: 280, type: !323, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !2501)
!8957 = distinct !DILocation(line: 202, column: 2, scope: !8954)
!8958 = !{i64 3706100}
!8959 = !DILocation(line: 205, column: 12, scope: !8954)
!8960 = !DILocation(line: 206, column: 1, scope: !8954)
!8961 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !1020, file: !1020, line: 275, type: !8962, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !8975)
!8962 = !DISubroutineType(types: !8963)
!8963 = !{null, !8964, !2286, !8141, !8141}
!8964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8965, size: 32)
!8965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8966)
!8966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !966, line: 52, size: 96, elements: !8967)
!8967 = !{!8968, !8969, !8970}
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8966, file: !966, line: 53, baseType: !22, size: 32)
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8966, file: !966, line: 54, baseType: !156, size: 32, offset: 32)
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8966, file: !966, line: 55, baseType: !8971, size: 32, offset: 64)
!8971 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !972, line: 151, baseType: !8972)
!8972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !972, line: 149, size: 32, elements: !8973)
!8973 = !{!8974}
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8972, file: !972, line: 150, baseType: !111, size: 32)
!8975 = !{!8976, !8977, !8978, !8979}
!8976 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8961, file: !1020, line: 276, type: !8964)
!8977 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8961, file: !1020, line: 276, type: !2286)
!8978 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8961, file: !1020, line: 277, type: !8141)
!8979 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8961, file: !1020, line: 277, type: !8141)
!8980 = !DILocation(line: 0, scope: !8961)
!8981 = !DILocation(line: 279, column: 6, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8961, file: !1020, line: 279, column: 6)
!8983 = !DILocation(line: 280, column: 57, scope: !8982)
!8984 = !DILocation(line: 279, column: 6, scope: !8961)
!8985 = !DILocation(line: 282, column: 3, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8987, file: !1020, line: 282, column: 3)
!8987 = distinct !DILexicalBlock(scope: !8988, file: !1020, line: 282, column: 3)
!8988 = distinct !DILexicalBlock(scope: !8989, file: !1020, line: 282, column: 3)
!8989 = distinct !DILexicalBlock(scope: !8982, file: !1020, line: 280, column: 69)
!8990 = !DILocation(line: 285, column: 1, scope: !8961)
!8991 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8992, file: !8992, line: 220, type: !8993, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !8995)
!8992 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8993 = !DISubroutineType(types: !8994)
!8994 = !{!103, !8964, !2286, !8141, !8141}
!8995 = !{!8996, !8997, !8998, !8999, !9000}
!8996 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8991, file: !8992, line: 221, type: !8964)
!8997 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8991, file: !8992, line: 221, type: !2286)
!8998 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8991, file: !8992, line: 222, type: !8141)
!8999 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8991, file: !8992, line: 223, type: !8141)
!9000 = !DILocalVariable(name: "mpu_reg_index", scope: !8991, file: !8992, line: 225, type: !103)
!9001 = !DILocation(line: 0, scope: !8991)
!9002 = !DILocation(line: 225, column: 22, scope: !8991)
!9003 = !DILocation(line: 233, column: 18, scope: !8991)
!9004 = !DILocation(line: 236, column: 23, scope: !8991)
!9005 = !DILocation(line: 236, column: 21, scope: !8991)
!9006 = !DILocation(line: 238, column: 2, scope: !8991)
!9007 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !1020, file: !1020, line: 105, type: !9008, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9010)
!9008 = !DISubroutineType(types: !9009)
!9009 = !{!103, !8964, !166, !166, !122}
!9010 = !{!9011, !9012, !9013, !9014, !9015, !9016}
!9011 = !DILocalVariable(name: "regions", arg: 1, scope: !9007, file: !1020, line: 106, type: !8964)
!9012 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9007, file: !1020, line: 106, type: !166)
!9013 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !9007, file: !1020, line: 106, type: !166)
!9014 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !9007, file: !1020, line: 107, type: !122)
!9015 = !DILocalVariable(name: "i", scope: !9007, file: !1020, line: 109, type: !103)
!9016 = !DILocalVariable(name: "reg_index", scope: !9007, file: !1020, line: 110, type: !103)
!9017 = !DILocation(line: 0, scope: !9007)
!9018 = !DILocation(line: 110, column: 18, scope: !9007)
!9019 = !DILocation(line: 112, column: 16, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9021, file: !1020, line: 112, column: 2)
!9021 = distinct !DILexicalBlock(scope: !9007, file: !1020, line: 112, column: 2)
!9022 = !DILocation(line: 112, column: 2, scope: !9021)
!9023 = !DILocation(line: 113, column: 7, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !1020, line: 113, column: 7)
!9025 = distinct !DILexicalBlock(scope: !9020, file: !1020, line: 112, column: 36)
!9026 = !DILocation(line: 113, column: 18, scope: !9024)
!9027 = !DILocation(line: 113, column: 23, scope: !9024)
!9028 = !DILocation(line: 113, column: 7, scope: !9025)
!9029 = !DILocation(line: 118, column: 23, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9025, file: !1020, line: 118, column: 7)
!9031 = !DILocation(line: 119, column: 7, scope: !9030)
!9032 = !DILocation(line: 118, column: 7, scope: !9025)
!9033 = !DILocation(line: 120, column: 4, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !1020, line: 120, column: 4)
!9035 = distinct !DILexicalBlock(scope: !9036, file: !1020, line: 120, column: 4)
!9036 = distinct !DILexicalBlock(scope: !9037, file: !1020, line: 120, column: 4)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !1020, line: 120, column: 4)
!9038 = distinct !DILexicalBlock(scope: !9030, file: !1020, line: 119, column: 45)
!9039 = !DILocation(line: 121, column: 4, scope: !9038)
!9040 = !DILocation(line: 124, column: 36, scope: !9025)
!9041 = !DILocation(line: 124, column: 15, scope: !9025)
!9042 = !DILocation(line: 126, column: 17, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9025, file: !1020, line: 126, column: 7)
!9044 = !DILocation(line: 126, column: 7, scope: !9025)
!9045 = !DILocation(line: 131, column: 12, scope: !9025)
!9046 = !DILocation(line: 132, column: 2, scope: !9025)
!9047 = !DILocation(line: 112, column: 32, scope: !9020)
!9048 = distinct !{!9048, !9022, !9049}
!9049 = !DILocation(line: 132, column: 2, scope: !9021)
!9050 = !DILocation(line: 135, column: 1, scope: !9007)
!9051 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8992, file: !8992, line: 63, type: !9052, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9054)
!9052 = !DISubroutineType(types: !9053)
!9053 = !{!103, !8964}
!9054 = !{!9055, !9056}
!9055 = !DILocalVariable(name: "part", arg: 1, scope: !9051, file: !8992, line: 63, type: !8964)
!9056 = !DILocalVariable(name: "partition_is_valid", scope: !9051, file: !8992, line: 70, type: !103)
!9057 = !DILocation(line: 0, scope: !9051)
!9058 = !DILocation(line: 71, column: 11, scope: !9051)
!9059 = !DILocation(line: 71, column: 37, scope: !9051)
!9060 = !DILocation(line: 72, column: 3, scope: !9051)
!9061 = !DILocation(line: 71, column: 30, scope: !9051)
!9062 = !DILocation(line: 75, column: 11, scope: !9051)
!9063 = !DILocation(line: 75, column: 17, scope: !9051)
!9064 = !DILocation(line: 75, column: 38, scope: !9051)
!9065 = !DILocation(line: 77, column: 2, scope: !9051)
!9066 = distinct !DISubprogram(name: "mpu_configure_region", scope: !1020, file: !1020, line: 79, type: !9067, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9069)
!9067 = !DISubroutineType(types: !9068)
!9068 = !{!103, !2286, !8964}
!9069 = !{!9070, !9071, !9072}
!9070 = !DILocalVariable(name: "index", arg: 1, scope: !9066, file: !1020, line: 79, type: !2286)
!9071 = !DILocalVariable(name: "new_region", arg: 2, scope: !9066, file: !1020, line: 80, type: !8964)
!9072 = !DILocalVariable(name: "region_conf", scope: !9066, file: !1020, line: 82, type: !1009)
!9073 = !DILocation(line: 0, scope: !9066)
!9074 = !DILocation(line: 82, column: 2, scope: !9066)
!9075 = !DILocation(line: 82, column: 24, scope: !9066)
!9076 = !DILocation(line: 87, column: 33, scope: !9066)
!9077 = !DILocation(line: 87, column: 14, scope: !9066)
!9078 = !DILocation(line: 87, column: 19, scope: !9066)
!9079 = !DILocation(line: 91, column: 55, scope: !9066)
!9080 = !DILocation(line: 92, column: 16, scope: !9066)
!9081 = !DILocation(line: 92, column: 53, scope: !9066)
!9082 = !DILocation(line: 91, column: 2, scope: !9066)
!9083 = !DILocation(line: 95, column: 9, scope: !9066)
!9084 = !DILocation(line: 97, column: 1, scope: !9066)
!9085 = !DILocation(line: 95, column: 2, scope: !9066)
!9086 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8992, file: !8992, line: 113, type: !9087, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9092)
!9087 = !DISubroutineType(types: !9088)
!9088 = !{null, !9089, !9090, !111, !111}
!9089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!9090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9091, size: 32)
!9091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8971)
!9092 = !{!9093, !9094, !9095, !9096}
!9093 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9086, file: !8992, line: 114, type: !9089)
!9094 = !DILocalVariable(name: "attr", arg: 2, scope: !9086, file: !8992, line: 115, type: !9090)
!9095 = !DILocalVariable(name: "base", arg: 3, scope: !9086, file: !8992, line: 115, type: !111)
!9096 = !DILocalVariable(name: "size", arg: 4, scope: !9086, file: !8992, line: 115, type: !111)
!9097 = !DILocation(line: 0, scope: !9086)
!9098 = !DILocation(line: 127, column: 23, scope: !9086)
!9099 = !DILocation(line: 127, column: 35, scope: !9086)
!9100 = !DILocation(line: 127, column: 33, scope: !9086)
!9101 = !DILocation(line: 127, column: 10, scope: !9086)
!9102 = !DILocation(line: 127, column: 15, scope: !9086)
!9103 = !DILocation(line: 129, column: 1, scope: !9086)
!9104 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !1020, file: !1020, line: 57, type: !9105, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9107)
!9105 = !DISubroutineType(types: !9106)
!9106 = !{!103, !2286, !1007}
!9107 = !{!9108, !9109}
!9108 = !DILocalVariable(name: "index", arg: 1, scope: !9104, file: !1020, line: 57, type: !2286)
!9109 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9104, file: !1020, line: 58, type: !1007)
!9110 = !DILocation(line: 0, scope: !9104)
!9111 = !DILocation(line: 61, column: 6, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9104, file: !1020, line: 61, column: 6)
!9113 = !DILocation(line: 61, column: 12, scope: !9112)
!9114 = !DILocation(line: 61, column: 6, scope: !9104)
!9115 = !DILocation(line: 64, column: 3, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9117, file: !1020, line: 64, column: 3)
!9117 = distinct !DILexicalBlock(scope: !9118, file: !1020, line: 64, column: 3)
!9118 = distinct !DILexicalBlock(scope: !9119, file: !1020, line: 64, column: 3)
!9119 = distinct !DILexicalBlock(scope: !9120, file: !1020, line: 64, column: 3)
!9120 = distinct !DILexicalBlock(scope: !9112, file: !1020, line: 61, column: 40)
!9121 = !DILocation(line: 65, column: 3, scope: !9120)
!9122 = !DILocation(line: 71, column: 2, scope: !9104)
!9123 = !DILocation(line: 73, column: 2, scope: !9104)
!9124 = !DILocation(line: 74, column: 1, scope: !9104)
!9125 = distinct !DISubprogram(name: "region_init", scope: !8992, file: !8992, line: 29, type: !9126, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9128)
!9126 = !DISubroutineType(types: !9127)
!9127 = !{null, !8141, !1007}
!9128 = !{!9129, !9130}
!9129 = !DILocalVariable(name: "index", arg: 1, scope: !9125, file: !8992, line: 29, type: !8141)
!9130 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9125, file: !8992, line: 30, type: !1007)
!9131 = !DILocation(line: 0, scope: !9125)
!9132 = !DILocation(line: 33, column: 2, scope: !9125)
!9133 = !DILocation(line: 47, column: 28, scope: !9125)
!9134 = !DILocation(line: 47, column: 33, scope: !9125)
!9135 = !DILocation(line: 48, column: 26, scope: !9125)
!9136 = !DILocation(line: 47, column: 12, scope: !9125)
!9137 = !DILocation(line: 49, column: 32, scope: !9125)
!9138 = !DILocation(line: 49, column: 37, scope: !9125)
!9139 = !DILocation(line: 49, column: 12, scope: !9125)
!9140 = !DILocation(line: 53, column: 1, scope: !9125)
!9141 = distinct !DISubprogram(name: "set_region_number", scope: !9142, file: !9142, line: 32, type: !7962, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9143)
!9142 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9143 = !{!9144}
!9144 = !DILocalVariable(name: "index", arg: 1, scope: !9141, file: !9142, line: 32, type: !111)
!9145 = !DILocation(line: 0, scope: !9141)
!9146 = !DILocation(line: 34, column: 11, scope: !9141)
!9147 = !DILocation(line: 35, column: 1, scope: !9141)
!9148 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8992, file: !8992, line: 88, type: !9149, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9151)
!9149 = !DISubroutineType(types: !9150)
!9150 = !{!111, !111}
!9151 = !{!9152}
!9152 = !DILocalVariable(name: "size", arg: 1, scope: !9148, file: !8992, line: 88, type: !111)
!9153 = !DILocation(line: 0, scope: !9148)
!9154 = !DILocation(line: 91, column: 11, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9148, file: !8992, line: 91, column: 6)
!9156 = !DILocation(line: 91, column: 6, scope: !9148)
!9157 = !DILocation(line: 100, column: 11, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9148, file: !8992, line: 100, column: 6)
!9159 = !DILocation(line: 100, column: 6, scope: !9148)
!9160 = !DILocation(line: 104, column: 35, scope: !9148)
!9161 = !DILocation(line: 104, column: 16, scope: !9148)
!9162 = !DILocation(line: 104, column: 50, scope: !9148)
!9163 = !DILocation(line: 104, column: 72, scope: !9148)
!9164 = !DILocation(line: 104, column: 2, scope: !9148)
!9165 = !DILocation(line: 106, column: 1, scope: !9148)
!9166 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !1020, file: !1020, line: 307, type: !9167, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9169)
!9167 = !DISubroutineType(types: !9168)
!9168 = !{null, !8964, !166}
!9169 = !{!9170, !9171}
!9170 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9166, file: !1020, line: 308, type: !8964)
!9171 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9166, file: !1020, line: 308, type: !166)
!9172 = !DILocation(line: 0, scope: !9166)
!9173 = !DILocation(line: 310, column: 6, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9166, file: !1020, line: 310, column: 6)
!9175 = !DILocation(line: 311, column: 3, scope: !9174)
!9176 = !DILocation(line: 310, column: 6, scope: !9166)
!9177 = !DILocation(line: 313, column: 3, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9179, file: !1020, line: 313, column: 3)
!9179 = distinct !DILexicalBlock(scope: !9180, file: !1020, line: 313, column: 3)
!9180 = distinct !DILexicalBlock(scope: !9181, file: !1020, line: 313, column: 3)
!9181 = distinct !DILexicalBlock(scope: !9174, file: !1020, line: 311, column: 15)
!9182 = !DILocation(line: 316, column: 1, scope: !9166)
!9183 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8992, file: !8992, line: 249, type: !9184, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9186)
!9184 = !DISubroutineType(types: !9185)
!9185 = !{!103, !8964, !166}
!9186 = !{!9187, !9188, !9189, !9190}
!9187 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9183, file: !8992, line: 250, type: !8964)
!9188 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9183, file: !8992, line: 250, type: !166)
!9189 = !DILocalVariable(name: "mpu_reg_index", scope: !9183, file: !8992, line: 252, type: !103)
!9190 = !DILocalVariable(name: "i", scope: !9191, file: !8992, line: 264, type: !103)
!9191 = distinct !DILexicalBlock(scope: !9192, file: !8992, line: 264, column: 3)
!9192 = distinct !DILexicalBlock(scope: !9193, file: !8992, line: 261, column: 32)
!9193 = distinct !DILexicalBlock(scope: !9183, file: !8992, line: 261, column: 6)
!9194 = !DILocation(line: 0, scope: !9183)
!9195 = !DILocation(line: 252, column: 22, scope: !9183)
!9196 = !DILocation(line: 258, column: 18, scope: !9183)
!9197 = !DILocation(line: 261, column: 20, scope: !9193)
!9198 = !DILocation(line: 261, column: 6, scope: !9183)
!9199 = !DILocation(line: 0, scope: !9191)
!9200 = !DILocation(line: 265, column: 4, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9202, file: !8992, line: 264, column: 59)
!9202 = distinct !DILexicalBlock(scope: !9191, file: !8992, line: 264, column: 3)
!9203 = !DILocation(line: 264, column: 55, scope: !9202)
!9204 = !DILocation(line: 264, column: 33, scope: !9202)
!9205 = !DILocation(line: 264, column: 3, scope: !9191)
!9206 = distinct !{!9206, !9205, !9207}
!9207 = !DILocation(line: 266, column: 3, scope: !9191)
!9208 = !DILocation(line: 269, column: 2, scope: !9183)
!9209 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9210, file: !9210, line: 218, type: !7962, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9211)
!9210 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9211 = !{!9212}
!9212 = !DILocalVariable(name: "rnr", arg: 1, scope: !9209, file: !9210, line: 218, type: !111)
!9213 = !DILocation(line: 0, scope: !9209)
!9214 = !DILocation(line: 220, column: 12, scope: !9209)
!9215 = !DILocation(line: 221, column: 13, scope: !9209)
!9216 = !DILocation(line: 222, column: 1, scope: !9209)
!9217 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !1020, file: !1020, line: 326, type: !9218, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9220)
!9218 = !DISubroutineType(types: !9219)
!9219 = !{!103}
!9220 = !{!9221}
!9221 = !DILocalVariable(name: "r_index", scope: !9217, file: !1020, line: 328, type: !111)
!9222 = !DILocation(line: 330, column: 17, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9217, file: !1020, line: 330, column: 6)
!9224 = !DILocation(line: 330, column: 29, scope: !9223)
!9225 = !DILocation(line: 330, column: 6, scope: !9217)
!9226 = !DILocation(line: 337, column: 3, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9228, file: !1020, line: 337, column: 3)
!9228 = distinct !DILexicalBlock(scope: !9229, file: !1020, line: 337, column: 3)
!9229 = distinct !DILexicalBlock(scope: !9230, file: !1020, line: 337, column: 3)
!9230 = distinct !DILexicalBlock(scope: !9223, file: !1020, line: 330, column: 50)
!9231 = !DILocation(line: 347, column: 2, scope: !9217)
!9232 = !DILocation(line: 0, scope: !9217)
!9233 = !DILocation(line: 364, column: 29, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9235, file: !1020, line: 364, column: 2)
!9235 = distinct !DILexicalBlock(scope: !9217, file: !1020, line: 364, column: 2)
!9236 = !DILocation(line: 364, column: 2, scope: !9235)
!9237 = !DILocation(line: 365, column: 25, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9234, file: !1020, line: 364, column: 66)
!9239 = !DILocation(line: 365, column: 3, scope: !9238)
!9240 = !DILocation(line: 364, column: 62, scope: !9234)
!9241 = distinct !{!9241, !9236, !9242}
!9242 = !DILocation(line: 366, column: 2, scope: !9235)
!9243 = !DILocation(line: 369, column: 23, scope: !9217)
!9244 = !DILocation(line: 369, column: 21, scope: !9217)
!9245 = !DILocation(line: 372, column: 2, scope: !9217)
!9246 = !DILocation(line: 433, column: 2, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9248, file: !1020, line: 433, column: 2)
!9248 = distinct !DILexicalBlock(scope: !9217, file: !1020, line: 433, column: 2)
!9249 = !DILocation(line: 433, column: 2, scope: !9248)
!9250 = !DILocation(line: 433, column: 2, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9247, file: !1020, line: 433, column: 2)
!9252 = !DILocation(line: 444, column: 1, scope: !9217)
!9253 = distinct !DISubprogram(name: "strcpy", scope: !9254, file: !9254, line: 20, type: !9255, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9259)
!9254 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9255 = !DISubroutineType(types: !9256)
!9256 = !{!160, !9257, !9258}
!9257 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !160)
!9258 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !108)
!9259 = !{!9260, !9261, !9262}
!9260 = !DILocalVariable(name: "d", arg: 1, scope: !9253, file: !9254, line: 20, type: !9257)
!9261 = !DILocalVariable(name: "s", arg: 2, scope: !9253, file: !9254, line: 20, type: !9258)
!9262 = !DILocalVariable(name: "dest", scope: !9253, file: !9254, line: 22, type: !160)
!9263 = !DILocation(line: 0, scope: !9253)
!9264 = !DILocation(line: 24, column: 9, scope: !9253)
!9265 = !DILocation(line: 24, column: 12, scope: !9253)
!9266 = !DILocation(line: 24, column: 2, scope: !9253)
!9267 = !DILocation(line: 25, column: 6, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9253, file: !9254, line: 24, column: 21)
!9269 = !DILocation(line: 26, column: 4, scope: !9268)
!9270 = !DILocation(line: 27, column: 4, scope: !9268)
!9271 = distinct !{!9271, !9266, !9272}
!9272 = !DILocation(line: 28, column: 2, scope: !9253)
!9273 = !DILocation(line: 30, column: 5, scope: !9253)
!9274 = !DILocation(line: 32, column: 2, scope: !9253)
!9275 = distinct !DISubprogram(name: "strncpy", scope: !9254, file: !9254, line: 42, type: !9276, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9278)
!9276 = !DISubroutineType(types: !9277)
!9277 = !{!160, !9257, !9258, !156}
!9278 = !{!9279, !9280, !9281, !9282}
!9279 = !DILocalVariable(name: "d", arg: 1, scope: !9275, file: !9254, line: 42, type: !9257)
!9280 = !DILocalVariable(name: "s", arg: 2, scope: !9275, file: !9254, line: 42, type: !9258)
!9281 = !DILocalVariable(name: "n", arg: 3, scope: !9275, file: !9254, line: 42, type: !156)
!9282 = !DILocalVariable(name: "dest", scope: !9275, file: !9254, line: 44, type: !160)
!9283 = !DILocation(line: 0, scope: !9275)
!9284 = !DILocation(line: 46, column: 12, scope: !9275)
!9285 = !DILocation(line: 46, column: 17, scope: !9275)
!9286 = !DILocation(line: 46, column: 20, scope: !9275)
!9287 = !DILocation(line: 46, column: 23, scope: !9275)
!9288 = !DILocation(line: 46, column: 2, scope: !9275)
!9289 = !DILocation(line: 47, column: 6, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9275, file: !9254, line: 46, column: 32)
!9291 = !DILocation(line: 48, column: 4, scope: !9290)
!9292 = !DILocation(line: 49, column: 4, scope: !9290)
!9293 = !DILocation(line: 50, column: 4, scope: !9290)
!9294 = distinct !{!9294, !9288, !9295}
!9295 = !DILocation(line: 51, column: 2, scope: !9275)
!9296 = !DILocation(line: 54, column: 6, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9275, file: !9254, line: 53, column: 16)
!9298 = !DILocation(line: 55, column: 4, scope: !9297)
!9299 = !DILocation(line: 56, column: 4, scope: !9297)
!9300 = !DILocation(line: 53, column: 11, scope: !9275)
!9301 = !DILocation(line: 53, column: 2, scope: !9275)
!9302 = distinct !{!9302, !9301, !9303}
!9303 = !DILocation(line: 57, column: 2, scope: !9275)
!9304 = !DILocation(line: 59, column: 2, scope: !9275)
!9305 = distinct !DISubprogram(name: "strchr", scope: !9254, file: !9254, line: 69, type: !9306, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9308)
!9306 = !DISubroutineType(types: !9307)
!9307 = !{!160, !108, !103}
!9308 = !{!9309, !9310, !9311}
!9309 = !DILocalVariable(name: "s", arg: 1, scope: !9305, file: !9254, line: 69, type: !108)
!9310 = !DILocalVariable(name: "c", arg: 2, scope: !9305, file: !9254, line: 69, type: !103)
!9311 = !DILocalVariable(name: "tmp", scope: !9305, file: !9254, line: 71, type: !110)
!9312 = !DILocation(line: 0, scope: !9305)
!9313 = !DILocation(line: 73, column: 2, scope: !9305)
!9314 = !DILocation(line: 73, column: 10, scope: !9305)
!9315 = !DILocation(line: 73, column: 13, scope: !9305)
!9316 = !DILocation(line: 73, column: 21, scope: !9305)
!9317 = !DILocation(line: 74, column: 4, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9305, file: !9254, line: 73, column: 38)
!9319 = distinct !{!9319, !9313, !9320}
!9320 = !DILocation(line: 75, column: 2, scope: !9305)
!9321 = !DILocation(line: 77, column: 9, scope: !9305)
!9322 = !DILocation(line: 77, column: 2, scope: !9305)
!9323 = distinct !DISubprogram(name: "strrchr", scope: !9254, file: !9254, line: 87, type: !9306, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9324)
!9324 = !{!9325, !9326, !9327}
!9325 = !DILocalVariable(name: "s", arg: 1, scope: !9323, file: !9254, line: 87, type: !108)
!9326 = !DILocalVariable(name: "c", arg: 2, scope: !9323, file: !9254, line: 87, type: !103)
!9327 = !DILocalVariable(name: "match", scope: !9323, file: !9254, line: 89, type: !160)
!9328 = !DILocation(line: 0, scope: !9323)
!9329 = !DILocation(line: 91, column: 2, scope: !9323)
!9330 = !DILocation(line: 92, column: 7, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9332, file: !9254, line: 92, column: 7)
!9332 = distinct !DILexicalBlock(scope: !9323, file: !9254, line: 91, column: 5)
!9333 = !DILocation(line: 92, column: 10, scope: !9331)
!9334 = !DILocation(line: 92, column: 7, scope: !9332)
!9335 = !DILocation(line: 95, column: 13, scope: !9323)
!9336 = !DILocation(line: 95, column: 2, scope: !9332)
!9337 = distinct !{!9337, !9329, !9338}
!9338 = !DILocation(line: 95, column: 15, scope: !9323)
!9339 = !DILocation(line: 97, column: 2, scope: !9323)
!9340 = distinct !DISubprogram(name: "strlen", scope: !9254, file: !9254, line: 107, type: !9341, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9343)
!9341 = !DISubroutineType(types: !9342)
!9342 = !{!156, !108}
!9343 = !{!9344, !9345}
!9344 = !DILocalVariable(name: "s", arg: 1, scope: !9340, file: !9254, line: 107, type: !108)
!9345 = !DILocalVariable(name: "n", scope: !9340, file: !9254, line: 109, type: !156)
!9346 = !DILocation(line: 0, scope: !9340)
!9347 = !DILocation(line: 111, column: 9, scope: !9340)
!9348 = !DILocation(line: 111, column: 12, scope: !9340)
!9349 = !DILocation(line: 111, column: 2, scope: !9340)
!9350 = !DILocation(line: 112, column: 4, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9340, file: !9254, line: 111, column: 21)
!9352 = !DILocation(line: 113, column: 4, scope: !9351)
!9353 = distinct !{!9353, !9349, !9354}
!9354 = !DILocation(line: 114, column: 2, scope: !9340)
!9355 = !DILocation(line: 116, column: 2, scope: !9340)
!9356 = distinct !DISubprogram(name: "strnlen", scope: !9254, file: !9254, line: 126, type: !9357, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9359)
!9357 = !DISubroutineType(types: !9358)
!9358 = !{!156, !108, !156}
!9359 = !{!9360, !9361, !9362}
!9360 = !DILocalVariable(name: "s", arg: 1, scope: !9356, file: !9254, line: 126, type: !108)
!9361 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9356, file: !9254, line: 126, type: !156)
!9362 = !DILocalVariable(name: "n", scope: !9356, file: !9254, line: 128, type: !156)
!9363 = !DILocation(line: 0, scope: !9356)
!9364 = !DILocation(line: 130, column: 9, scope: !9356)
!9365 = !DILocation(line: 130, column: 12, scope: !9356)
!9366 = !DILocation(line: 130, column: 20, scope: !9356)
!9367 = !DILocation(line: 130, column: 2, scope: !9356)
!9368 = !DILocation(line: 131, column: 4, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9356, file: !9254, line: 130, column: 35)
!9370 = !DILocation(line: 132, column: 4, scope: !9369)
!9371 = distinct !{!9371, !9367, !9372}
!9372 = !DILocation(line: 133, column: 2, scope: !9356)
!9373 = !DILocation(line: 135, column: 2, scope: !9356)
!9374 = distinct !DISubprogram(name: "strcmp", scope: !9254, file: !9254, line: 145, type: !9375, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9377)
!9375 = !DISubroutineType(types: !9376)
!9376 = !{!103, !108, !108}
!9377 = !{!9378, !9379}
!9378 = !DILocalVariable(name: "s1", arg: 1, scope: !9374, file: !9254, line: 145, type: !108)
!9379 = !DILocalVariable(name: "s2", arg: 2, scope: !9374, file: !9254, line: 145, type: !108)
!9380 = !DILocation(line: 0, scope: !9374)
!9381 = !DILocation(line: 147, column: 10, scope: !9374)
!9382 = !DILocation(line: 147, column: 17, scope: !9374)
!9383 = !DILocation(line: 147, column: 14, scope: !9374)
!9384 = !DILocation(line: 147, column: 22, scope: !9374)
!9385 = !DILocation(line: 148, column: 5, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9374, file: !9254, line: 147, column: 40)
!9387 = !DILocation(line: 149, column: 5, scope: !9386)
!9388 = distinct !{!9388, !9389, !9390}
!9389 = !DILocation(line: 147, column: 2, scope: !9374)
!9390 = !DILocation(line: 150, column: 2, scope: !9374)
!9391 = !DILocation(line: 152, column: 9, scope: !9374)
!9392 = !DILocation(line: 152, column: 15, scope: !9374)
!9393 = !DILocation(line: 152, column: 13, scope: !9374)
!9394 = !DILocation(line: 152, column: 2, scope: !9374)
!9395 = distinct !DISubprogram(name: "strncmp", scope: !9254, file: !9254, line: 162, type: !9396, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9398)
!9396 = !DISubroutineType(types: !9397)
!9397 = !{!103, !108, !108, !156}
!9398 = !{!9399, !9400, !9401}
!9399 = !DILocalVariable(name: "s1", arg: 1, scope: !9395, file: !9254, line: 162, type: !108)
!9400 = !DILocalVariable(name: "s2", arg: 2, scope: !9395, file: !9254, line: 162, type: !108)
!9401 = !DILocalVariable(name: "n", arg: 3, scope: !9395, file: !9254, line: 162, type: !156)
!9402 = !DILocation(line: 0, scope: !9395)
!9403 = !DILocation(line: 164, column: 17, scope: !9395)
!9404 = !DILocation(line: 164, column: 21, scope: !9395)
!9405 = !DILocation(line: 164, column: 28, scope: !9395)
!9406 = !DILocation(line: 164, column: 25, scope: !9395)
!9407 = !DILocation(line: 164, column: 33, scope: !9395)
!9408 = !DILocation(line: 165, column: 5, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9395, file: !9254, line: 164, column: 51)
!9410 = !DILocation(line: 166, column: 5, scope: !9409)
!9411 = !DILocation(line: 167, column: 4, scope: !9409)
!9412 = distinct !{!9412, !9413, !9414}
!9413 = !DILocation(line: 164, column: 2, scope: !9395)
!9414 = !DILocation(line: 168, column: 2, scope: !9395)
!9415 = !DILocation(line: 170, column: 25, scope: !9395)
!9416 = !DILocation(line: 170, column: 31, scope: !9395)
!9417 = !DILocation(line: 170, column: 29, scope: !9395)
!9418 = !DILocation(line: 170, column: 9, scope: !9395)
!9419 = !DILocation(line: 170, column: 2, scope: !9395)
!9420 = distinct !DISubprogram(name: "strtok_r", scope: !9254, file: !9254, line: 180, type: !9421, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9423)
!9421 = !DISubroutineType(types: !9422)
!9422 = !{!160, !160, !108, !748}
!9423 = !{!9424, !9425, !9426, !9427, !9428}
!9424 = !DILocalVariable(name: "str", arg: 1, scope: !9420, file: !9254, line: 180, type: !160)
!9425 = !DILocalVariable(name: "sep", arg: 2, scope: !9420, file: !9254, line: 180, type: !108)
!9426 = !DILocalVariable(name: "state", arg: 3, scope: !9420, file: !9254, line: 180, type: !748)
!9427 = !DILocalVariable(name: "start", scope: !9420, file: !9254, line: 182, type: !160)
!9428 = !DILocalVariable(name: "end", scope: !9420, file: !9254, line: 182, type: !160)
!9429 = !DILocation(line: 0, scope: !9420)
!9430 = !DILocation(line: 184, column: 10, scope: !9420)
!9431 = !DILocation(line: 184, column: 22, scope: !9420)
!9432 = !DILocation(line: 187, column: 9, scope: !9420)
!9433 = !DILocation(line: 187, column: 16, scope: !9420)
!9434 = !DILocation(line: 187, column: 19, scope: !9420)
!9435 = !DILocation(line: 187, column: 2, scope: !9420)
!9436 = !DILocation(line: 188, column: 8, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9420, file: !9254, line: 187, column: 40)
!9438 = distinct !{!9438, !9435, !9439}
!9439 = !DILocation(line: 189, column: 2, scope: !9420)
!9440 = !DILocation(line: 198, column: 9, scope: !9420)
!9441 = !DILocation(line: 198, column: 18, scope: !9420)
!9442 = !DILocation(line: 198, column: 17, scope: !9420)
!9443 = !DILocation(line: 198, column: 2, scope: !9420)
!9444 = !DILocation(line: 199, column: 6, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9420, file: !9254, line: 198, column: 37)
!9446 = !DILocation(line: 198, column: 14, scope: !9420)
!9447 = distinct !{!9447, !9443, !9448}
!9448 = !DILocation(line: 200, column: 2, scope: !9420)
!9449 = !DILocation(line: 203, column: 8, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9451, file: !9254, line: 202, column: 20)
!9451 = distinct !DILexicalBlock(scope: !9420, file: !9254, line: 202, column: 6)
!9452 = !DILocation(line: 204, column: 16, scope: !9450)
!9453 = !DILocation(line: 205, column: 2, scope: !9450)
!9454 = !DILocation(line: 210, column: 1, scope: !9420)
!9455 = distinct !DISubprogram(name: "strcat", scope: !9254, file: !9254, line: 212, type: !9255, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9456)
!9456 = !{!9457, !9458}
!9457 = !DILocalVariable(name: "dest", arg: 1, scope: !9455, file: !9254, line: 212, type: !9257)
!9458 = !DILocalVariable(name: "src", arg: 2, scope: !9455, file: !9254, line: 212, type: !9258)
!9459 = !DILocation(line: 0, scope: !9455)
!9460 = !DILocation(line: 214, column: 16, scope: !9455)
!9461 = !DILocation(line: 214, column: 14, scope: !9455)
!9462 = !DILocation(line: 214, column: 2, scope: !9455)
!9463 = !DILocation(line: 215, column: 2, scope: !9455)
!9464 = distinct !DISubprogram(name: "strncat", scope: !9254, file: !9254, line: 218, type: !9276, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9465)
!9465 = !{!9466, !9467, !9468, !9469, !9470}
!9466 = !DILocalVariable(name: "dest", arg: 1, scope: !9464, file: !9254, line: 218, type: !9257)
!9467 = !DILocalVariable(name: "src", arg: 2, scope: !9464, file: !9254, line: 218, type: !9258)
!9468 = !DILocalVariable(name: "n", arg: 3, scope: !9464, file: !9254, line: 219, type: !156)
!9469 = !DILocalVariable(name: "orig_dest", scope: !9464, file: !9254, line: 221, type: !160)
!9470 = !DILocalVariable(name: "len", scope: !9464, file: !9254, line: 222, type: !156)
!9471 = !DILocation(line: 0, scope: !9464)
!9472 = !DILocation(line: 222, column: 15, scope: !9464)
!9473 = !DILocation(line: 224, column: 7, scope: !9464)
!9474 = !DILocation(line: 225, column: 14, scope: !9464)
!9475 = !DILocation(line: 225, column: 19, scope: !9464)
!9476 = !DILocation(line: 225, column: 11, scope: !9464)
!9477 = !DILocation(line: 225, column: 23, scope: !9464)
!9478 = !DILocation(line: 225, column: 28, scope: !9464)
!9479 = !DILocation(line: 225, column: 2, scope: !9464)
!9480 = !DILocation(line: 226, column: 17, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9464, file: !9254, line: 225, column: 38)
!9482 = !DILocation(line: 226, column: 8, scope: !9481)
!9483 = !DILocation(line: 226, column: 11, scope: !9481)
!9484 = distinct !{!9484, !9479, !9485}
!9485 = !DILocation(line: 227, column: 2, scope: !9464)
!9486 = !DILocation(line: 228, column: 8, scope: !9464)
!9487 = !DILocation(line: 230, column: 2, scope: !9464)
!9488 = distinct !DISubprogram(name: "memcmp", scope: !9254, file: !9254, line: 239, type: !9489, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9491)
!9489 = !DISubroutineType(types: !9490)
!9490 = !{!103, !13, !13, !156}
!9491 = !{!9492, !9493, !9494, !9495, !9496}
!9492 = !DILocalVariable(name: "m1", arg: 1, scope: !9488, file: !9254, line: 239, type: !13)
!9493 = !DILocalVariable(name: "m2", arg: 2, scope: !9488, file: !9254, line: 239, type: !13)
!9494 = !DILocalVariable(name: "n", arg: 3, scope: !9488, file: !9254, line: 239, type: !156)
!9495 = !DILocalVariable(name: "c1", scope: !9488, file: !9254, line: 241, type: !108)
!9496 = !DILocalVariable(name: "c2", scope: !9488, file: !9254, line: 242, type: !108)
!9497 = !DILocation(line: 0, scope: !9488)
!9498 = !DILocation(line: 244, column: 7, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9488, file: !9254, line: 244, column: 6)
!9500 = !DILocation(line: 244, column: 6, scope: !9488)
!9501 = !DILocation(line: 248, column: 10, scope: !9488)
!9502 = !DILocation(line: 248, column: 14, scope: !9488)
!9503 = !DILocation(line: 248, column: 19, scope: !9488)
!9504 = !DILocation(line: 248, column: 2, scope: !9488)
!9505 = !DILocation(line: 248, column: 23, scope: !9488)
!9506 = !DILocation(line: 248, column: 30, scope: !9488)
!9507 = !DILocation(line: 248, column: 27, scope: !9488)
!9508 = !DILocation(line: 249, column: 5, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9488, file: !9254, line: 248, column: 36)
!9510 = !DILocation(line: 250, column: 5, scope: !9509)
!9511 = distinct !{!9511, !9504, !9512}
!9512 = !DILocation(line: 251, column: 2, scope: !9488)
!9513 = !DILocation(line: 253, column: 9, scope: !9488)
!9514 = !DILocation(line: 253, column: 15, scope: !9488)
!9515 = !DILocation(line: 253, column: 13, scope: !9488)
!9516 = !DILocation(line: 253, column: 2, scope: !9488)
!9517 = !DILocation(line: 254, column: 1, scope: !9488)
!9518 = distinct !DISubprogram(name: "memmove", scope: !9254, file: !9254, line: 263, type: !9519, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9521)
!9519 = !DISubroutineType(types: !9520)
!9520 = !{!102, !102, !13, !156}
!9521 = !{!9522, !9523, !9524, !9525, !9526}
!9522 = !DILocalVariable(name: "d", arg: 1, scope: !9518, file: !9254, line: 263, type: !102)
!9523 = !DILocalVariable(name: "s", arg: 2, scope: !9518, file: !9254, line: 263, type: !13)
!9524 = !DILocalVariable(name: "n", arg: 3, scope: !9518, file: !9254, line: 263, type: !156)
!9525 = !DILocalVariable(name: "dest", scope: !9518, file: !9254, line: 265, type: !160)
!9526 = !DILocalVariable(name: "src", scope: !9518, file: !9254, line: 266, type: !108)
!9527 = !DILocation(line: 0, scope: !9518)
!9528 = !DILocation(line: 268, column: 21, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9518, file: !9254, line: 268, column: 6)
!9530 = !DILocation(line: 268, column: 28, scope: !9529)
!9531 = !DILocation(line: 268, column: 6, scope: !9518)
!9532 = !DILocation(line: 280, column: 12, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9529, file: !9254, line: 278, column: 9)
!9534 = !DILocation(line: 280, column: 3, scope: !9533)
!9535 = !DILocation(line: 275, column: 5, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9537, file: !9254, line: 274, column: 17)
!9537 = distinct !DILexicalBlock(scope: !9529, file: !9254, line: 268, column: 33)
!9538 = !DILocation(line: 276, column: 14, scope: !9536)
!9539 = !DILocation(line: 276, column: 4, scope: !9536)
!9540 = !DILocation(line: 276, column: 12, scope: !9536)
!9541 = !DILocation(line: 274, column: 12, scope: !9537)
!9542 = !DILocation(line: 274, column: 3, scope: !9537)
!9543 = distinct !{!9543, !9542, !9544}
!9544 = !DILocation(line: 277, column: 3, scope: !9537)
!9545 = !DILocation(line: 281, column: 12, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9533, file: !9254, line: 280, column: 17)
!9547 = !DILocation(line: 281, column: 10, scope: !9546)
!9548 = !DILocation(line: 282, column: 8, scope: !9546)
!9549 = !DILocation(line: 283, column: 7, scope: !9546)
!9550 = !DILocation(line: 284, column: 5, scope: !9546)
!9551 = distinct !{!9551, !9534, !9552}
!9552 = !DILocation(line: 285, column: 3, scope: !9533)
!9553 = !DILocation(line: 288, column: 2, scope: !9518)
!9554 = distinct !DISubprogram(name: "memcpy", scope: !9254, file: !9254, line: 298, type: !9555, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9559)
!9555 = !DISubroutineType(types: !9556)
!9556 = !{!102, !9557, !9558, !156}
!9557 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9558 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9559 = !{!9560, !9561, !9562, !9563, !9564}
!9560 = !DILocalVariable(name: "d", arg: 1, scope: !9554, file: !9254, line: 298, type: !9557)
!9561 = !DILocalVariable(name: "s", arg: 2, scope: !9554, file: !9254, line: 298, type: !9558)
!9562 = !DILocalVariable(name: "n", arg: 3, scope: !9554, file: !9254, line: 298, type: !156)
!9563 = !DILocalVariable(name: "d_byte", scope: !9554, file: !9254, line: 302, type: !1459)
!9564 = !DILocalVariable(name: "s_byte", scope: !9554, file: !9254, line: 303, type: !3412)
!9565 = !DILocation(line: 0, scope: !9554)
!9566 = !DILocation(line: 337, column: 11, scope: !9554)
!9567 = !DILocation(line: 337, column: 2, scope: !9554)
!9568 = !DILocation(line: 338, column: 25, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9554, file: !9254, line: 337, column: 16)
!9570 = !DILocation(line: 338, column: 17, scope: !9569)
!9571 = !DILocation(line: 338, column: 11, scope: !9569)
!9572 = !DILocation(line: 338, column: 15, scope: !9569)
!9573 = !DILocation(line: 339, column: 4, scope: !9569)
!9574 = distinct !{!9574, !9567, !9575}
!9575 = !DILocation(line: 340, column: 2, scope: !9554)
!9576 = !DILocation(line: 342, column: 2, scope: !9554)
!9577 = distinct !DISubprogram(name: "memset", scope: !9254, file: !9254, line: 352, type: !9578, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9580)
!9578 = !DISubroutineType(types: !9579)
!9579 = !{!102, !102, !103, !156}
!9580 = !{!9581, !9582, !9583, !9584, !9585}
!9581 = !DILocalVariable(name: "buf", arg: 1, scope: !9577, file: !9254, line: 352, type: !102)
!9582 = !DILocalVariable(name: "c", arg: 2, scope: !9577, file: !9254, line: 352, type: !103)
!9583 = !DILocalVariable(name: "n", arg: 3, scope: !9577, file: !9254, line: 352, type: !156)
!9584 = !DILocalVariable(name: "d_byte", scope: !9577, file: !9254, line: 356, type: !1459)
!9585 = !DILocalVariable(name: "c_byte", scope: !9577, file: !9254, line: 357, type: !167)
!9586 = !DILocation(line: 0, scope: !9577)
!9587 = !DILocation(line: 357, column: 25, scope: !9577)
!9588 = !DILocation(line: 389, column: 11, scope: !9577)
!9589 = !DILocation(line: 389, column: 2, scope: !9577)
!9590 = !DILocation(line: 390, column: 11, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9577, file: !9254, line: 389, column: 16)
!9592 = !DILocation(line: 390, column: 15, scope: !9591)
!9593 = !DILocation(line: 391, column: 4, scope: !9591)
!9594 = distinct !{!9594, !9589, !9595}
!9595 = !DILocation(line: 392, column: 2, scope: !9577)
!9596 = !DILocation(line: 394, column: 2, scope: !9577)
!9597 = distinct !DISubprogram(name: "memchr", scope: !9254, file: !9254, line: 404, type: !9598, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !9600)
!9598 = !DISubroutineType(types: !9599)
!9599 = !{!102, !13, !103, !156}
!9600 = !{!9601, !9602, !9603, !9604}
!9601 = !DILocalVariable(name: "s", arg: 1, scope: !9597, file: !9254, line: 404, type: !13)
!9602 = !DILocalVariable(name: "c", arg: 2, scope: !9597, file: !9254, line: 404, type: !103)
!9603 = !DILocalVariable(name: "n", arg: 3, scope: !9597, file: !9254, line: 404, type: !156)
!9604 = !DILocalVariable(name: "p", scope: !9605, file: !9254, line: 407, type: !3412)
!9605 = distinct !DILexicalBlock(scope: !9606, file: !9254, line: 406, column: 14)
!9606 = distinct !DILexicalBlock(scope: !9597, file: !9254, line: 406, column: 6)
!9607 = !DILocation(line: 0, scope: !9597)
!9608 = !DILocation(line: 406, column: 8, scope: !9606)
!9609 = !DILocation(line: 406, column: 6, scope: !9597)
!9610 = !DILocation(line: 409, column: 3, scope: !9605)
!9611 = !DILocation(line: 0, scope: !9605)
!9612 = !DILocation(line: 410, column: 8, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !9254, line: 410, column: 8)
!9614 = distinct !DILexicalBlock(scope: !9605, file: !9254, line: 409, column: 6)
!9615 = !DILocation(line: 410, column: 13, scope: !9613)
!9616 = !DILocation(line: 410, column: 8, scope: !9614)
!9617 = distinct !{!9617, !9610, !9618}
!9618 = !DILocation(line: 414, column: 20, scope: !9605)
!9619 = !DILocation(line: 417, column: 2, scope: !9597)
!9620 = !DILocation(line: 418, column: 1, scope: !9597)
!9621 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !1030, file: !1030, line: 23, type: !4982, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9622)
!9622 = !{!9623}
!9623 = !DILocalVariable(name: "hook", arg: 1, scope: !9621, file: !1030, line: 23, type: !763)
!9624 = !DILocation(line: 0, scope: !9621)
!9625 = !DILocation(line: 25, column: 15, scope: !9621)
!9626 = !DILocation(line: 26, column: 1, scope: !9621)
!9627 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !1030, file: !1030, line: 14, type: !764, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9628)
!9628 = !{!9629}
!9629 = !DILocalVariable(name: "c", arg: 1, scope: !9627, file: !1030, line: 14, type: !103)
!9630 = !DILocation(line: 0, scope: !9627)
!9631 = !DILocation(line: 18, column: 2, scope: !9627)
!9632 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !1030, file: !1030, line: 28, type: !9633, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9635)
!9633 = !DISubroutineType(types: !9634)
!9634 = !{!103, !103, !1026}
!9635 = !{!9636, !9637}
!9636 = !DILocalVariable(name: "c", arg: 1, scope: !9632, file: !1030, line: 28, type: !103)
!9637 = !DILocalVariable(name: "stream", arg: 2, scope: !9632, file: !1030, line: 28, type: !1026)
!9638 = !DILocation(line: 0, scope: !9632)
!9639 = !DILocation(line: 30, column: 27, scope: !9632)
!9640 = !DILocation(line: 30, column: 50, scope: !9632)
!9641 = !DILocation(line: 30, column: 9, scope: !9632)
!9642 = !DILocation(line: 30, column: 2, scope: !9632)
!9643 = distinct !DISubprogram(name: "fputc", scope: !1030, file: !1030, line: 41, type: !9633, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9644)
!9644 = !{!9645, !9646}
!9645 = !DILocalVariable(name: "c", arg: 1, scope: !9643, file: !1030, line: 41, type: !103)
!9646 = !DILocalVariable(name: "stream", arg: 2, scope: !9643, file: !1030, line: 41, type: !1026)
!9647 = !DILocation(line: 0, scope: !9643)
!9648 = !DILocation(line: 43, column: 9, scope: !9643)
!9649 = !DILocation(line: 43, column: 2, scope: !9643)
!9650 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9651, file: !9651, line: 72, type: !9633, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9652)
!9651 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!9652 = !{!9653, !9654}
!9653 = !DILocalVariable(name: "c", arg: 1, scope: !9650, file: !9651, line: 72, type: !103)
!9654 = !DILocalVariable(name: "stream", arg: 2, scope: !9650, file: !9651, line: 72, type: !1026)
!9655 = !DILocation(line: 0, scope: !9650)
!9656 = !DILocation(line: 81, column: 2, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9650, file: !9651, line: 81, column: 2)
!9658 = !{i64 2154911804}
!9659 = !DILocation(line: 82, column: 9, scope: !9650)
!9660 = !DILocation(line: 82, column: 2, scope: !9650)
!9661 = distinct !DISubprogram(name: "fputs", scope: !1030, file: !1030, line: 46, type: !9662, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9665)
!9662 = !DISubroutineType(types: !9663)
!9663 = !{!103, !9258, !9664}
!9664 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1026)
!9665 = !{!9666, !9667, !9668, !9669}
!9666 = !DILocalVariable(name: "s", arg: 1, scope: !9661, file: !1030, line: 46, type: !9258)
!9667 = !DILocalVariable(name: "stream", arg: 2, scope: !9661, file: !1030, line: 46, type: !9664)
!9668 = !DILocalVariable(name: "len", scope: !9661, file: !1030, line: 48, type: !103)
!9669 = !DILocalVariable(name: "ret", scope: !9661, file: !1030, line: 49, type: !103)
!9670 = !DILocation(line: 0, scope: !9661)
!9671 = !DILocation(line: 48, column: 12, scope: !9661)
!9672 = !DILocation(line: 51, column: 8, scope: !9661)
!9673 = !DILocation(line: 53, column: 13, scope: !9661)
!9674 = !DILocation(line: 53, column: 9, scope: !9661)
!9675 = !DILocation(line: 53, column: 2, scope: !9661)
!9676 = distinct !DISubprogram(name: "fwrite", scope: !1030, file: !1030, line: 99, type: !9677, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9679)
!9677 = !DISubroutineType(types: !9678)
!9678 = !{!156, !9558, !156, !156, !9664}
!9679 = !{!9680, !9681, !9682, !9683}
!9680 = !DILocalVariable(name: "ptr", arg: 1, scope: !9676, file: !1030, line: 99, type: !9558)
!9681 = !DILocalVariable(name: "size", arg: 2, scope: !9676, file: !1030, line: 99, type: !156)
!9682 = !DILocalVariable(name: "nitems", arg: 3, scope: !9676, file: !1030, line: 99, type: !156)
!9683 = !DILocalVariable(name: "stream", arg: 4, scope: !9676, file: !1030, line: 100, type: !9664)
!9684 = !DILocation(line: 0, scope: !9676)
!9685 = !DILocation(line: 102, column: 9, scope: !9676)
!9686 = !DILocation(line: 102, column: 2, scope: !9676)
!9687 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9651, file: !9651, line: 96, type: !9677, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9688)
!9688 = !{!9689, !9690, !9691, !9692}
!9689 = !DILocalVariable(name: "ptr", arg: 1, scope: !9687, file: !9651, line: 96, type: !9558)
!9690 = !DILocalVariable(name: "size", arg: 2, scope: !9687, file: !9651, line: 96, type: !156)
!9691 = !DILocalVariable(name: "nitems", arg: 3, scope: !9687, file: !9651, line: 96, type: !156)
!9692 = !DILocalVariable(name: "stream", arg: 4, scope: !9687, file: !9651, line: 96, type: !9664)
!9693 = !DILocation(line: 0, scope: !9687)
!9694 = !DILocation(line: 107, column: 2, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9687, file: !9651, line: 107, column: 2)
!9696 = !{i64 2154911908}
!9697 = !DILocation(line: 108, column: 9, scope: !9687)
!9698 = !DILocation(line: 108, column: 2, scope: !9687)
!9699 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !1030, file: !1030, line: 56, type: !9677, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9700)
!9700 = !{!9701, !9702, !9703, !9704, !9705, !9706, !9707, !9708}
!9701 = !DILocalVariable(name: "ptr", arg: 1, scope: !9699, file: !1030, line: 56, type: !9558)
!9702 = !DILocalVariable(name: "size", arg: 2, scope: !9699, file: !1030, line: 56, type: !156)
!9703 = !DILocalVariable(name: "nitems", arg: 3, scope: !9699, file: !1030, line: 57, type: !156)
!9704 = !DILocalVariable(name: "stream", arg: 4, scope: !9699, file: !1030, line: 57, type: !9664)
!9705 = !DILocalVariable(name: "i", scope: !9699, file: !1030, line: 59, type: !156)
!9706 = !DILocalVariable(name: "j", scope: !9699, file: !1030, line: 60, type: !156)
!9707 = !DILocalVariable(name: "p", scope: !9699, file: !1030, line: 61, type: !3412)
!9708 = !DILabel(scope: !9699, name: "done", file: !1030, line: 82)
!9709 = !DILocation(line: 0, scope: !9699)
!9710 = !DILocation(line: 63, column: 14, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9699, file: !1030, line: 63, column: 6)
!9712 = !DILocation(line: 63, column: 24, scope: !9711)
!9713 = !DILocation(line: 72, column: 3, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9699, file: !1030, line: 70, column: 5)
!9715 = !DILocation(line: 0, scope: !9714)
!9716 = !DILocation(line: 73, column: 8, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9718, file: !1030, line: 73, column: 8)
!9718 = distinct !DILexicalBlock(scope: !9714, file: !1030, line: 72, column: 6)
!9719 = !DILocation(line: 73, column: 29, scope: !9717)
!9720 = !DILocation(line: 73, column: 27, scope: !9717)
!9721 = !DILocation(line: 73, column: 21, scope: !9717)
!9722 = !DILocation(line: 73, column: 33, scope: !9717)
!9723 = !DILocation(line: 73, column: 8, scope: !9718)
!9724 = !DILocation(line: 76, column: 5, scope: !9718)
!9725 = !DILocation(line: 77, column: 14, scope: !9714)
!9726 = !DILocation(line: 77, column: 3, scope: !9718)
!9727 = distinct !{!9727, !9713, !9728}
!9728 = !DILocation(line: 77, column: 17, scope: !9714)
!9729 = !DILocation(line: 79, column: 4, scope: !9714)
!9730 = !DILocation(line: 80, column: 13, scope: !9699)
!9731 = !DILocation(line: 80, column: 2, scope: !9714)
!9732 = distinct !{!9732, !9733, !9734}
!9733 = !DILocation(line: 70, column: 2, scope: !9699)
!9734 = !DILocation(line: 80, column: 16, scope: !9699)
!9735 = !DILocation(line: 82, column: 1, scope: !9699)
!9736 = !DILocation(line: 83, column: 17, scope: !9699)
!9737 = !DILocation(line: 83, column: 2, scope: !9699)
!9738 = !DILocation(line: 84, column: 1, scope: !9699)
!9739 = distinct !DISubprogram(name: "puts", scope: !1030, file: !1030, line: 106, type: !9740, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9742)
!9740 = !DISubroutineType(types: !9741)
!9741 = !{!103, !108}
!9742 = !{!9743}
!9743 = !DILocalVariable(name: "s", arg: 1, scope: !9739, file: !1030, line: 106, type: !108)
!9744 = !DILocation(line: 0, scope: !9739)
!9745 = !DILocation(line: 108, column: 6, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9739, file: !1030, line: 108, column: 6)
!9747 = !DILocation(line: 108, column: 23, scope: !9746)
!9748 = !DILocation(line: 108, column: 6, scope: !9739)
!9749 = !DILocation(line: 112, column: 9, scope: !9739)
!9750 = !DILocation(line: 112, column: 29, scope: !9739)
!9751 = !DILocation(line: 112, column: 2, scope: !9739)
!9752 = !DILocation(line: 113, column: 1, scope: !9739)
!9753 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !1062, file: !1062, line: 12, type: !9754, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !9760)
!9754 = !DISubroutineType(types: !9755)
!9755 = !{!9756, !112}
!9756 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !9757)
!9757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !9758)
!9758 = !{!9759}
!9759 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9757, file: !105, line: 66, baseType: !104, size: 64)
!9760 = !{!9761, !9762}
!9761 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9753, file: !1062, line: 12, type: !112)
!9762 = !DILocalVariable(name: "now_ticks", scope: !9753, file: !1062, line: 14, type: !106)
!9763 = !DILocation(line: 0, scope: !9753)
!9764 = !DILocation(line: 14, column: 22, scope: !9753)
!9765 = !DILocation(line: 16, column: 9, scope: !9753)
!9766 = !DILocation(line: 17, column: 1, scope: !9753)
!9767 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !1062, file: !1062, line: 103, type: !9768, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !9917)
!9768 = !DISubroutineType(types: !9769)
!9769 = !{!103, !9770, !13, !9756}
!9770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9771, size: 32)
!9771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9772)
!9772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !9773)
!9773 = !{!9774, !9775, !9776, !9777, !9778, !9779, !9889}
!9774 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9772, file: !119, line: 32, baseType: !178, size: 32)
!9775 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9772, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!9776 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9772, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9772, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!9778 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9772, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!9779 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9772, file: !119, line: 56, baseType: !9780, size: 32, offset: 160)
!9780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9781, size: 32)
!9781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !9782)
!9782 = !{!9783, !9802, !9887, !9888}
!9783 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9781, file: !127, line: 2722, baseType: !9784, size: 64)
!9784 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !9785)
!9785 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !9786)
!9786 = !{!9787}
!9787 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9785, file: !131, line: 232, baseType: !9788, size: 64)
!9788 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !9789)
!9789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !9790)
!9790 = !{!9791, !9797}
!9791 = !DIDerivedType(tag: DW_TAG_member, scope: !9789, file: !136, line: 38, baseType: !9792, size: 32)
!9792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9789, file: !136, line: 38, size: 32, elements: !9793)
!9793 = !{!9794, !9796}
!9794 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9792, file: !136, line: 39, baseType: !9795, size: 32)
!9795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9789, size: 32)
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9792, file: !136, line: 40, baseType: !9795, size: 32)
!9797 = !DIDerivedType(tag: DW_TAG_member, scope: !9789, file: !136, line: 42, baseType: !9798, size: 32, offset: 32)
!9798 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9789, file: !136, line: 42, size: 32, elements: !9799)
!9799 = !{!9800, !9801}
!9800 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9798, file: !136, line: 43, baseType: !9795, size: 32)
!9801 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9798, file: !136, line: 44, baseType: !9795, size: 32)
!9802 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9781, file: !127, line: 2724, baseType: !9803, size: 32, offset: 64)
!9803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9804, size: 32)
!9804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !9805)
!9805 = !{!9806, !9846, !9858, !9859, !9860, !9861, !9867, !9882}
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9804, file: !199, line: 247, baseType: !9807, size: 384)
!9807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !9808)
!9808 = !{!9809, !9820, !9822, !9823, !9824, !9833, !9834, !9835}
!9809 = !DIDerivedType(tag: DW_TAG_member, scope: !9807, file: !199, line: 60, baseType: !9810, size: 64)
!9810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9807, file: !199, line: 60, size: 64, elements: !9811)
!9811 = !{!9812, !9814}
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9810, file: !199, line: 61, baseType: !9813, size: 64)
!9813 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !9789)
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9810, file: !199, line: 62, baseType: !9815, size: 64)
!9815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !9816)
!9816 = !{!9817}
!9817 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9815, file: !211, line: 50, baseType: !9818, size: 64)
!9818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9819, size: 64, elements: !216)
!9819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9815, size: 32)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9807, file: !199, line: 68, baseType: !9821, size: 32, offset: 64)
!9821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9784, size: 32)
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9807, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9807, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!9824 = !DIDerivedType(tag: DW_TAG_member, scope: !9807, file: !199, line: 90, baseType: !9825, size: 16, offset: 112)
!9825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9807, file: !199, line: 90, size: 16, elements: !9826)
!9826 = !{!9827, !9832}
!9827 = !DIDerivedType(tag: DW_TAG_member, scope: !9825, file: !199, line: 91, baseType: !9828, size: 16)
!9828 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9825, file: !199, line: 91, size: 16, elements: !9829)
!9829 = !{!9830, !9831}
!9830 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9828, file: !199, line: 96, baseType: !229, size: 8)
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9828, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!9832 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9825, file: !199, line: 100, baseType: !181, size: 16)
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9807, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!9834 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9807, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9807, file: !199, line: 131, baseType: !9836, size: 192, offset: 192)
!9836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !9837)
!9837 = !{!9838, !9839, !9845}
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9836, file: !131, line: 245, baseType: !9813, size: 64)
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9836, file: !131, line: 246, baseType: !9840, size: 32, offset: 64)
!9840 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !9841)
!9841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9842, size: 32)
!9842 = !DISubroutineType(types: !9843)
!9843 = !{null, !9844}
!9844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9836, size: 32)
!9845 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9836, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!9846 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9804, file: !199, line: 250, baseType: !9847, size: 288, offset: 384)
!9847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !9848)
!9848 = !{!9849, !9850, !9851, !9852, !9853, !9854, !9855, !9856, !9857}
!9849 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9847, file: !248, line: 26, baseType: !111, size: 32)
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9847, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!9851 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9847, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!9852 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9847, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9847, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9847, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9847, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9847, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9847, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9804, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9804, file: !199, line: 256, baseType: !9784, size: 64, offset: 704)
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9804, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9804, file: !199, line: 300, baseType: !9862, size: 96, offset: 800)
!9862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !9863)
!9863 = !{!9864, !9865, !9866}
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9862, file: !199, line: 153, baseType: !22, size: 32)
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9862, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9862, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9804, file: !199, line: 325, baseType: !9868, size: 32, offset: 896)
!9868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9869, size: 32)
!9869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !9870)
!9870 = !{!9871, !9877, !9878}
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9869, file: !127, line: 5074, baseType: !9872, size: 96)
!9872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !9873)
!9873 = !{!9874, !9875, !9876}
!9874 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9872, file: !274, line: 57, baseType: !277, size: 32)
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9872, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!9876 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9872, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!9877 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9869, file: !127, line: 5075, baseType: !9784, size: 64, offset: 96)
!9878 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9869, file: !127, line: 5076, baseType: !9879, size: 32, offset: 160)
!9879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !9880)
!9880 = !{!9881}
!9881 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9879, file: !152, line: 52, baseType: !22, size: 32)
!9882 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9804, file: !199, line: 343, baseType: !9883, size: 64, offset: 928)
!9883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !9884)
!9884 = !{!9885, !9886}
!9885 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9883, file: !248, line: 63, baseType: !111, size: 32)
!9886 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9883, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!9887 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9781, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9781, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!9889 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9772, file: !119, line: 67, baseType: !9890, size: 32, offset: 192)
!9890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9891, size: 32)
!9891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9892)
!9892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9893, size: 32)
!9893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9894)
!9894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !9895)
!9895 = !{!9896, !9897, !9912}
!9896 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9894, file: !119, line: 91, baseType: !122, size: 8)
!9897 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9894, file: !119, line: 93, baseType: !9898, size: 32, offset: 32)
!9898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9899)
!9899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9900, size: 32)
!9900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !9901)
!9901 = !{!9902, !9903, !9904, !9905, !9906, !9907, !9908, !9909, !9910, !9911}
!9902 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9900, file: !127, line: 4206, baseType: !9784, size: 64)
!9903 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9900, file: !127, line: 4208, baseType: !9879, size: 32, offset: 64)
!9904 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9900, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!9905 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9900, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!9906 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9900, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!9907 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9900, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!9908 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9900, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!9909 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9900, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!9910 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9900, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!9911 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9900, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!9912 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9894, file: !119, line: 96, baseType: !9913, size: 32, offset: 64)
!9913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9914)
!9914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9915, size: 32)
!9915 = !DISubroutineType(types: !9916)
!9916 = !{null, !9770}
!9917 = !{!9918, !9919, !9920, !9921, !9922}
!9918 = !DILocalVariable(name: "chan", arg: 1, scope: !9767, file: !1062, line: 103, type: !9770)
!9919 = !DILocalVariable(name: "msg", arg: 2, scope: !9767, file: !1062, line: 103, type: !13)
!9920 = !DILocalVariable(name: "timeout", arg: 3, scope: !9767, file: !1062, line: 103, type: !9756)
!9921 = !DILocalVariable(name: "err", scope: !9767, file: !1062, line: 105, type: !103)
!9922 = !DILocalVariable(name: "end_ticks", scope: !9767, file: !1062, line: 106, type: !112)
!9923 = !DILocation(line: 0, scope: !9767)
!9924 = !DILocation(line: 106, column: 23, scope: !9767)
!9925 = !DILocation(line: 108, column: 2, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9927, file: !1062, line: 108, column: 2)
!9927 = distinct !DILexicalBlock(scope: !9767, file: !1062, line: 108, column: 2)
!9928 = !DILocation(line: 108, column: 2, scope: !9927)
!9929 = !DILocation(line: 108, column: 2, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9926, file: !1062, line: 108, column: 2)
!9931 = !DILocation(line: 109, column: 2, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9933, file: !1062, line: 109, column: 2)
!9933 = distinct !DILexicalBlock(scope: !9767, file: !1062, line: 109, column: 2)
!9934 = !DILocation(line: 109, column: 2, scope: !9933)
!9935 = !DILocation(line: 109, column: 2, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9932, file: !1062, line: 109, column: 2)
!9937 = !DILocation(line: 110, column: 2, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9939, file: !1062, line: 110, column: 2)
!9939 = distinct !DILexicalBlock(scope: !9767, file: !1062, line: 110, column: 2)
!9940 = !DILocation(line: 110, column: 2, scope: !9939)
!9941 = !DILocation(line: 110, column: 2, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9938, file: !1062, line: 110, column: 2)
!9943 = !DILocation(line: 112, column: 12, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9767, file: !1062, line: 112, column: 6)
!9945 = !DILocation(line: 112, column: 22, scope: !9944)
!9946 = !DILocation(line: 112, column: 30, scope: !9944)
!9947 = !DILocation(line: 112, column: 61, scope: !9944)
!9948 = !DILocation(line: 112, column: 55, scope: !9944)
!9949 = !DILocation(line: 112, column: 34, scope: !9944)
!9950 = !DILocation(line: 112, column: 6, scope: !9767)
!9951 = !DILocation(line: 116, column: 27, scope: !9767)
!9952 = !DILocation(line: 116, column: 8, scope: !9767)
!9953 = !DILocation(line: 117, column: 6, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9767, file: !1062, line: 117, column: 6)
!9955 = !DILocation(line: 117, column: 6, scope: !9767)
!9956 = !DILocation(line: 121, column: 15, scope: !9767)
!9957 = !DILocation(line: 121, column: 35, scope: !9767)
!9958 = !DILocation(line: 121, column: 29, scope: !9767)
!9959 = !DILocation(line: 121, column: 2, scope: !9767)
!9960 = !DILocation(line: 123, column: 8, scope: !9767)
!9961 = !DILocation(line: 125, column: 23, scope: !9767)
!9962 = !DILocation(line: 125, column: 2, scope: !9767)
!9963 = !DILocation(line: 127, column: 2, scope: !9767)
!9964 = !DILocation(line: 128, column: 1, scope: !9767)
!9965 = distinct !DISubprogram(name: "k_mutex_lock", scope: !5275, file: !5275, line: 927, type: !9966, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !9968)
!9966 = !DISubroutineType(types: !9967)
!9967 = !{!103, !9780, !9756}
!9968 = !{!9969, !9970}
!9969 = !DILocalVariable(name: "mutex", arg: 1, scope: !9965, file: !5275, line: 927, type: !9780)
!9970 = !DILocalVariable(name: "timeout", arg: 2, scope: !9965, file: !5275, line: 927, type: !9756)
!9971 = !DILocation(line: 0, scope: !9965)
!9972 = !DILocation(line: 936, column: 2, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9965, file: !5275, line: 936, column: 2)
!9974 = !{i64 2154853449}
!9975 = !DILocation(line: 937, column: 9, scope: !9965)
!9976 = !DILocation(line: 937, column: 2, scope: !9965)
!9977 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !1062, file: !1062, line: 66, type: !9978, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !9980)
!9978 = !DISubroutineType(types: !9979)
!9979 = !{!103, !9770, !112}
!9980 = !{!9981, !9982, !9983, !9984, !9985, !9987}
!9981 = !DILocalVariable(name: "chan", arg: 1, scope: !9977, file: !1062, line: 66, type: !9770)
!9982 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9977, file: !1062, line: 66, type: !112)
!9983 = !DILocalVariable(name: "last_error", scope: !9977, file: !1062, line: 68, type: !103)
!9984 = !DILocalVariable(name: "err", scope: !9977, file: !1062, line: 68, type: !103)
!9985 = !DILocalVariable(name: "obs", scope: !9986, file: !1062, line: 70, type: !9890)
!9986 = distinct !DILexicalBlock(scope: !9977, file: !1062, line: 70, column: 2)
!9987 = !DILocalVariable(name: "obs", scope: !9988, file: !1062, line: 81, type: !9890)
!9988 = distinct !DILexicalBlock(scope: !9977, file: !1062, line: 81, column: 2)
!9989 = !DILocation(line: 0, scope: !9977)
!9990 = !DILocation(line: 70, column: 54, scope: !9986)
!9991 = !DILocation(line: 0, scope: !9986)
!9992 = !DILocation(line: 70, column: 65, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9986, file: !1062, line: 70, column: 2)
!9994 = !DILocation(line: 70, column: 70, scope: !9993)
!9995 = !DILocation(line: 70, column: 2, scope: !9986)
!9996 = !DILocation(line: 81, column: 54, scope: !9988)
!9997 = !DILocation(line: 81, column: 65, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9988, file: !1062, line: 81, column: 2)
!9999 = !DILocation(line: 0, scope: !9988)
!10000 = !DILocation(line: 81, column: 70, scope: !9998)
!10001 = !DILocation(line: 81, column: 2, scope: !9988)
!10002 = !DILocation(line: 71, column: 15, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !10004, file: !1062, line: 71, column: 7)
!10004 = distinct !DILexicalBlock(scope: !9993, file: !1062, line: 70, column: 86)
!10005 = !DILocation(line: 71, column: 23, scope: !10003)
!10006 = !DILocation(line: 71, column: 35, scope: !10003)
!10007 = !DILocation(line: 71, column: 44, scope: !10003)
!10008 = !DILocation(line: 71, column: 7, scope: !10004)
!10009 = !DILocation(line: 72, column: 4, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10003, file: !1062, line: 71, column: 54)
!10011 = !DILocation(line: 73, column: 3, scope: !10010)
!10012 = !DILocation(line: 70, column: 79, scope: !9993)
!10013 = distinct !{!10013, !9995, !10014}
!10014 = !DILocation(line: 74, column: 2, scope: !9986)
!10015 = !DILocation(line: 100, column: 2, scope: !9977)
!10016 = !DILocation(line: 82, column: 15, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10018, file: !1062, line: 82, column: 7)
!10018 = distinct !DILexicalBlock(scope: !9998, file: !1062, line: 81, column: 86)
!10019 = !DILocation(line: 82, column: 23, scope: !10017)
!10020 = !DILocation(line: 82, column: 35, scope: !10017)
!10021 = !DILocation(line: 82, column: 41, scope: !10017)
!10022 = !DILocation(line: 82, column: 7, scope: !10018)
!10023 = !DILocation(line: 83, column: 43, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10017, file: !1062, line: 82, column: 51)
!10025 = !DILocation(line: 83, column: 10, scope: !10024)
!10026 = !DILocation(line: 84, column: 4, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10028, file: !1062, line: 84, column: 4)
!10028 = distinct !DILexicalBlock(scope: !10024, file: !1062, line: 84, column: 4)
!10029 = !DILocation(line: 84, column: 4, scope: !10028)
!10030 = !DILocation(line: 84, column: 4, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10027, file: !1062, line: 84, column: 4)
!10032 = !DILocation(line: 81, column: 79, scope: !9998)
!10033 = distinct !{!10033, !10001, !10034}
!10034 = !DILocation(line: 92, column: 2, scope: !9988)
!10035 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !5275, file: !5275, line: 944, type: !10036, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10038)
!10036 = !DISubroutineType(types: !10037)
!10037 = !{!103, !9780}
!10038 = !{!10039}
!10039 = !DILocalVariable(name: "mutex", arg: 1, scope: !10035, file: !5275, line: 944, type: !9780)
!10040 = !DILocation(line: 0, scope: !10035)
!10041 = !DILocation(line: 952, column: 2, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10035, file: !5275, line: 952, column: 2)
!10043 = !{i64 2154853517}
!10044 = !DILocation(line: 953, column: 9, scope: !10035)
!10045 = !DILocation(line: 953, column: 2, scope: !10035)
!10046 = distinct !DISubprogram(name: "k_msgq_put", scope: !5275, file: !5275, line: 1129, type: !10047, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10049)
!10047 = !DISubroutineType(types: !10048)
!10048 = !{!103, !9899, !13, !9756}
!10049 = !{!10050, !10051, !10052}
!10050 = !DILocalVariable(name: "msgq", arg: 1, scope: !10046, file: !5275, line: 1129, type: !9899)
!10051 = !DILocalVariable(name: "data", arg: 2, scope: !10046, file: !5275, line: 1129, type: !13)
!10052 = !DILocalVariable(name: "timeout", arg: 3, scope: !10046, file: !5275, line: 1129, type: !9756)
!10053 = !DILocation(line: 0, scope: !10046)
!10054 = !DILocation(line: 1139, column: 2, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10046, file: !5275, line: 1139, column: 2)
!10056 = !{i64 2154854265}
!10057 = !DILocation(line: 1140, column: 9, scope: !10046)
!10058 = !DILocation(line: 1140, column: 2, scope: !10046)
!10059 = distinct !DISubprogram(name: "zbus_chan_read", scope: !1062, file: !1062, line: 130, type: !10060, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10062)
!10060 = !DISubroutineType(types: !10061)
!10061 = !{!103, !9770, !102, !9756}
!10062 = !{!10063, !10064, !10065, !10066}
!10063 = !DILocalVariable(name: "chan", arg: 1, scope: !10059, file: !1062, line: 130, type: !9770)
!10064 = !DILocalVariable(name: "msg", arg: 2, scope: !10059, file: !1062, line: 130, type: !102)
!10065 = !DILocalVariable(name: "timeout", arg: 3, scope: !10059, file: !1062, line: 130, type: !9756)
!10066 = !DILocalVariable(name: "err", scope: !10059, file: !1062, line: 132, type: !103)
!10067 = !DILocation(line: 0, scope: !10059)
!10068 = !DILocation(line: 134, column: 2, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10070, file: !1062, line: 134, column: 2)
!10070 = distinct !DILexicalBlock(scope: !10059, file: !1062, line: 134, column: 2)
!10071 = !DILocation(line: 134, column: 2, scope: !10070)
!10072 = !DILocation(line: 134, column: 2, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10069, file: !1062, line: 134, column: 2)
!10074 = !DILocation(line: 135, column: 2, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10076, file: !1062, line: 135, column: 2)
!10076 = distinct !DILexicalBlock(scope: !10059, file: !1062, line: 135, column: 2)
!10077 = !DILocation(line: 135, column: 2, scope: !10076)
!10078 = !DILocation(line: 135, column: 2, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10075, file: !1062, line: 135, column: 2)
!10080 = !DILocation(line: 136, column: 2, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10082, file: !1062, line: 136, column: 2)
!10082 = distinct !DILexicalBlock(scope: !10059, file: !1062, line: 136, column: 2)
!10083 = !DILocation(line: 136, column: 2, scope: !10082)
!10084 = !DILocation(line: 136, column: 2, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10081, file: !1062, line: 136, column: 2)
!10086 = !DILocation(line: 138, column: 27, scope: !10059)
!10087 = !DILocation(line: 138, column: 8, scope: !10059)
!10088 = !DILocation(line: 139, column: 6, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10059, file: !1062, line: 139, column: 6)
!10090 = !DILocation(line: 139, column: 6, scope: !10059)
!10091 = !DILocation(line: 143, column: 20, scope: !10059)
!10092 = !DILocation(line: 143, column: 35, scope: !10059)
!10093 = !DILocation(line: 143, column: 29, scope: !10059)
!10094 = !DILocation(line: 143, column: 2, scope: !10059)
!10095 = !DILocation(line: 145, column: 30, scope: !10059)
!10096 = !DILocation(line: 145, column: 9, scope: !10059)
!10097 = !DILocation(line: 145, column: 2, scope: !10059)
!10098 = !DILocation(line: 146, column: 1, scope: !10059)
!10099 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !1062, file: !1062, line: 148, type: !10100, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10102)
!10100 = !DISubroutineType(types: !10101)
!10101 = !{!103, !9770, !9756}
!10102 = !{!10103, !10104, !10105, !10106}
!10103 = !DILocalVariable(name: "chan", arg: 1, scope: !10099, file: !1062, line: 148, type: !9770)
!10104 = !DILocalVariable(name: "timeout", arg: 2, scope: !10099, file: !1062, line: 148, type: !9756)
!10105 = !DILocalVariable(name: "err", scope: !10099, file: !1062, line: 150, type: !103)
!10106 = !DILocalVariable(name: "end_ticks", scope: !10099, file: !1062, line: 151, type: !112)
!10107 = !DILocation(line: 0, scope: !10099)
!10108 = !DILocation(line: 151, column: 23, scope: !10099)
!10109 = !DILocation(line: 153, column: 2, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10111, file: !1062, line: 153, column: 2)
!10111 = distinct !DILexicalBlock(scope: !10099, file: !1062, line: 153, column: 2)
!10112 = !DILocation(line: 153, column: 2, scope: !10111)
!10113 = !DILocation(line: 153, column: 2, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10110, file: !1062, line: 153, column: 2)
!10115 = !DILocation(line: 154, column: 2, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10117, file: !1062, line: 154, column: 2)
!10117 = distinct !DILexicalBlock(scope: !10099, file: !1062, line: 154, column: 2)
!10118 = !DILocation(line: 154, column: 2, scope: !10117)
!10119 = !DILocation(line: 154, column: 2, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10116, file: !1062, line: 154, column: 2)
!10121 = !DILocation(line: 156, column: 27, scope: !10099)
!10122 = !DILocation(line: 156, column: 8, scope: !10099)
!10123 = !DILocation(line: 157, column: 6, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10099, file: !1062, line: 157, column: 6)
!10125 = !DILocation(line: 157, column: 6, scope: !10099)
!10126 = !DILocation(line: 161, column: 8, scope: !10099)
!10127 = !DILocation(line: 163, column: 23, scope: !10099)
!10128 = !DILocation(line: 163, column: 2, scope: !10099)
!10129 = !DILocation(line: 165, column: 2, scope: !10099)
!10130 = !DILocation(line: 166, column: 1, scope: !10099)
!10131 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !1062, file: !1062, line: 168, type: !10100, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10132)
!10132 = !{!10133, !10134, !10135}
!10133 = !DILocalVariable(name: "chan", arg: 1, scope: !10131, file: !1062, line: 168, type: !9770)
!10134 = !DILocalVariable(name: "timeout", arg: 2, scope: !10131, file: !1062, line: 168, type: !9756)
!10135 = !DILocalVariable(name: "err", scope: !10131, file: !1062, line: 173, type: !103)
!10136 = !DILocation(line: 0, scope: !10131)
!10137 = !DILocation(line: 170, column: 2, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10139, file: !1062, line: 170, column: 2)
!10139 = distinct !DILexicalBlock(scope: !10131, file: !1062, line: 170, column: 2)
!10140 = !DILocation(line: 170, column: 2, scope: !10139)
!10141 = !DILocation(line: 170, column: 2, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10138, file: !1062, line: 170, column: 2)
!10143 = !DILocation(line: 171, column: 2, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10145, file: !1062, line: 171, column: 2)
!10145 = distinct !DILexicalBlock(scope: !10131, file: !1062, line: 171, column: 2)
!10146 = !DILocation(line: 171, column: 2, scope: !10145)
!10147 = !DILocation(line: 171, column: 2, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10144, file: !1062, line: 171, column: 2)
!10149 = !DILocation(line: 173, column: 31, scope: !10131)
!10150 = !DILocation(line: 173, column: 12, scope: !10131)
!10151 = !DILocation(line: 180, column: 1, scope: !10131)
!10152 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !1062, file: !1062, line: 182, type: !10153, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10155)
!10153 = !DISubroutineType(types: !10154)
!10154 = !{!103, !9770}
!10155 = !{!10156, !10157}
!10156 = !DILocalVariable(name: "chan", arg: 1, scope: !10152, file: !1062, line: 182, type: !9770)
!10157 = !DILocalVariable(name: "err", scope: !10152, file: !1062, line: 187, type: !103)
!10158 = !DILocation(line: 0, scope: !10152)
!10159 = !DILocation(line: 184, column: 2, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !1062, line: 184, column: 2)
!10161 = distinct !DILexicalBlock(scope: !10152, file: !1062, line: 184, column: 2)
!10162 = !DILocation(line: 184, column: 2, scope: !10161)
!10163 = !DILocation(line: 184, column: 2, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10160, file: !1062, line: 184, column: 2)
!10165 = !DILocation(line: 185, column: 2, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10167, file: !1062, line: 185, column: 2)
!10167 = distinct !DILexicalBlock(scope: !10152, file: !1062, line: 185, column: 2)
!10168 = !DILocation(line: 185, column: 2, scope: !10167)
!10169 = !DILocation(line: 185, column: 2, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10166, file: !1062, line: 185, column: 2)
!10171 = !DILocation(line: 187, column: 33, scope: !10152)
!10172 = !DILocation(line: 187, column: 12, scope: !10152)
!10173 = !DILocation(line: 189, column: 2, scope: !10152)
!10174 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !1062, file: !1062, line: 192, type: !10175, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10178)
!10175 = !DISubroutineType(types: !10176)
!10176 = !{!103, !9892, !10177, !9756}
!10177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9770, size: 32)
!10178 = !{!10179, !10180, !10181}
!10179 = !DILocalVariable(name: "sub", arg: 1, scope: !10174, file: !1062, line: 192, type: !9892)
!10180 = !DILocalVariable(name: "chan", arg: 2, scope: !10174, file: !1062, line: 192, type: !10177)
!10181 = !DILocalVariable(name: "timeout", arg: 3, scope: !10174, file: !1062, line: 193, type: !9756)
!10182 = !DILocation(line: 0, scope: !10174)
!10183 = !DILocation(line: 195, column: 2, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10185, file: !1062, line: 195, column: 2)
!10185 = distinct !DILexicalBlock(scope: !10174, file: !1062, line: 195, column: 2)
!10186 = !DILocation(line: 195, column: 2, scope: !10185)
!10187 = !DILocation(line: 195, column: 2, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10184, file: !1062, line: 195, column: 2)
!10189 = !DILocation(line: 196, column: 2, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10191, file: !1062, line: 196, column: 2)
!10191 = distinct !DILexicalBlock(scope: !10174, file: !1062, line: 196, column: 2)
!10192 = !DILocation(line: 196, column: 2, scope: !10191)
!10193 = !DILocation(line: 196, column: 2, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10190, file: !1062, line: 196, column: 2)
!10195 = !DILocation(line: 197, column: 2, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10197, file: !1062, line: 197, column: 2)
!10197 = distinct !DILexicalBlock(scope: !10174, file: !1062, line: 197, column: 2)
!10198 = !DILocation(line: 197, column: 2, scope: !10197)
!10199 = !DILocation(line: 197, column: 2, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10196, file: !1062, line: 197, column: 2)
!10201 = !DILocation(line: 199, column: 11, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10174, file: !1062, line: 199, column: 6)
!10203 = !DILocation(line: 199, column: 17, scope: !10202)
!10204 = !DILocation(line: 199, column: 6, scope: !10174)
!10205 = !DILocation(line: 203, column: 32, scope: !10174)
!10206 = !DILocation(line: 203, column: 9, scope: !10174)
!10207 = !DILocation(line: 203, column: 2, scope: !10174)
!10208 = !DILocation(line: 204, column: 1, scope: !10174)
!10209 = distinct !DISubprogram(name: "k_msgq_get", scope: !5275, file: !5275, line: 1147, type: !10210, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10212)
!10210 = !DISubroutineType(types: !10211)
!10211 = !{!103, !9899, !102, !9756}
!10212 = !{!10213, !10214, !10215}
!10213 = !DILocalVariable(name: "msgq", arg: 1, scope: !10209, file: !5275, line: 1147, type: !9899)
!10214 = !DILocalVariable(name: "data", arg: 2, scope: !10209, file: !5275, line: 1147, type: !102)
!10215 = !DILocalVariable(name: "timeout", arg: 3, scope: !10209, file: !5275, line: 1147, type: !9756)
!10216 = !DILocation(line: 0, scope: !10209)
!10217 = !DILocation(line: 1157, column: 2, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10209, file: !5275, line: 1157, column: 2)
!10219 = !{i64 2154854333}
!10220 = !DILocation(line: 1158, column: 9, scope: !10209)
!10221 = !DILocation(line: 1158, column: 2, scope: !10209)
!10222 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !1175, file: !1175, line: 368, type: !1228, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10223)
!10223 = !{!10224}
!10224 = !DILocalVariable(name: "dev", arg: 1, scope: !10222, file: !1175, line: 368, type: !1204)
!10225 = !DILocation(line: 0, scope: !10222)
!10226 = !DILocation(line: 370, column: 2, scope: !10222)
!10227 = !DILocation(line: 371, column: 1, scope: !10222)
!10228 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !1175, file: !1175, line: 243, type: !10229, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10231)
!10229 = !DISubroutineType(types: !10230)
!10230 = !{null, !103, !103, !1204}
!10231 = !{!10232, !10233, !10234, !10235, !10237}
!10232 = !DILocalVariable(name: "min", arg: 1, scope: !10228, file: !1175, line: 243, type: !103)
!10233 = !DILocalVariable(name: "max", arg: 2, scope: !10228, file: !1175, line: 243, type: !103)
!10234 = !DILocalVariable(name: "dev", arg: 3, scope: !10228, file: !1175, line: 243, type: !1204)
!10235 = !DILocalVariable(name: "data", scope: !10228, file: !1175, line: 245, type: !10236)
!10236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!10237 = !DILocalVariable(name: "line", scope: !10228, file: !1175, line: 246, type: !103)
!10238 = !DILocation(line: 0, scope: !10228)
!10239 = !DILocation(line: 245, column: 38, scope: !10228)
!10240 = !DILocation(line: 249, column: 24, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10242, file: !1175, line: 249, column: 2)
!10242 = distinct !DILexicalBlock(scope: !10228, file: !1175, line: 249, column: 2)
!10243 = !DILocation(line: 249, column: 2, scope: !10242)
!10244 = !DILocation(line: 251, column: 7, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10246, file: !1175, line: 251, column: 7)
!10246 = distinct !DILexicalBlock(scope: !10241, file: !1175, line: 249, column: 39)
!10247 = !DILocation(line: 251, column: 7, scope: !10246)
!10248 = !DILocation(line: 253, column: 4, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10245, file: !1175, line: 251, column: 36)
!10250 = !DILocation(line: 256, column: 24, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10249, file: !1175, line: 256, column: 8)
!10252 = !DILocation(line: 256, column: 9, scope: !10251)
!10253 = !DILocation(line: 256, column: 8, scope: !10249)
!10254 = !DILocation(line: 260, column: 43, scope: !10249)
!10255 = !DILocation(line: 260, column: 4, scope: !10249)
!10256 = !DILocation(line: 261, column: 3, scope: !10249)
!10257 = !DILocation(line: 249, column: 35, scope: !10241)
!10258 = distinct !{!10258, !10243, !10259}
!10259 = !DILocation(line: 262, column: 2, scope: !10242)
!10260 = !DILocation(line: 263, column: 1, scope: !10228)
!10261 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !1175, file: !1175, line: 158, type: !764, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10262)
!10262 = !{!10263}
!10263 = !DILocalVariable(name: "line", arg: 1, scope: !10261, file: !1175, line: 158, type: !103)
!10264 = !DILocation(line: 0, scope: !10261)
!10265 = !DILocation(line: 170, column: 38, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10267, file: !1175, line: 160, column: 17)
!10267 = distinct !DILexicalBlock(scope: !10261, file: !1175, line: 160, column: 6)
!10268 = !DILocation(line: 170, column: 10, scope: !10266)
!10269 = !DILocation(line: 176, column: 1, scope: !10261)
!10270 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !1175, file: !1175, line: 183, type: !10271, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10273)
!10271 = !DISubroutineType(types: !10272)
!10272 = !{null, !103}
!10273 = !{!10274}
!10274 = !DILocalVariable(name: "line", arg: 1, scope: !10270, file: !1175, line: 183, type: !103)
!10275 = !DILocation(line: 0, scope: !10270)
!10276 = !DILocation(line: 195, column: 28, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10278, file: !1175, line: 185, column: 17)
!10278 = distinct !DILexicalBlock(scope: !10270, file: !1175, line: 185, column: 6)
!10279 = !DILocation(line: 195, column: 3, scope: !10277)
!10280 = !DILocation(line: 200, column: 1, scope: !10270)
!10281 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !10282, file: !10282, line: 910, type: !7962, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10283)
!10282 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10283 = !{!10284}
!10284 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10281, file: !10282, line: 910, type: !111)
!10285 = !DILocation(line: 0, scope: !10281)
!10286 = !DILocation(line: 912, column: 3, scope: !10281)
!10287 = !DILocation(line: 913, column: 1, scope: !10281)
!10288 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !10282, file: !10282, line: 834, type: !9149, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10289)
!10289 = !{!10290}
!10290 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10288, file: !10282, line: 834, type: !111)
!10291 = !DILocation(line: 0, scope: !10288)
!10292 = !DILocation(line: 836, column: 11, scope: !10288)
!10293 = !DILocation(line: 836, column: 40, scope: !10288)
!10294 = !DILocation(line: 836, column: 3, scope: !10288)
!10295 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !1175, file: !1175, line: 304, type: !1228, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10296)
!10296 = !{!10297}
!10297 = !DILocalVariable(name: "dev", arg: 1, scope: !10295, file: !1175, line: 304, type: !1204)
!10298 = !DILocation(line: 0, scope: !10295)
!10299 = !DILocation(line: 306, column: 2, scope: !10295)
!10300 = !DILocation(line: 307, column: 1, scope: !10295)
!10301 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !1175, file: !1175, line: 299, type: !1228, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10302)
!10302 = !{!10303}
!10303 = !DILocalVariable(name: "dev", arg: 1, scope: !10301, file: !1175, line: 299, type: !1204)
!10304 = !DILocation(line: 0, scope: !10301)
!10305 = !DILocation(line: 301, column: 2, scope: !10301)
!10306 = !DILocation(line: 302, column: 1, scope: !10301)
!10307 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !1175, file: !1175, line: 294, type: !1228, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10308)
!10308 = !{!10309}
!10309 = !DILocalVariable(name: "dev", arg: 1, scope: !10307, file: !1175, line: 294, type: !1204)
!10310 = !DILocation(line: 0, scope: !10307)
!10311 = !DILocation(line: 296, column: 2, scope: !10307)
!10312 = !DILocation(line: 297, column: 1, scope: !10307)
!10313 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !1175, file: !1175, line: 397, type: !1228, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10314)
!10314 = !{!10315}
!10315 = !DILocalVariable(name: "dev", arg: 1, scope: !10313, file: !1175, line: 397, type: !1204)
!10316 = !DILocation(line: 0, scope: !10313)
!10317 = !DILocation(line: 399, column: 2, scope: !10313)
!10318 = !DILocation(line: 400, column: 1, scope: !10313)
!10319 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !1175, file: !1175, line: 392, type: !1228, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10320)
!10320 = !{!10321}
!10321 = !DILocalVariable(name: "dev", arg: 1, scope: !10319, file: !1175, line: 392, type: !1204)
!10322 = !DILocation(line: 0, scope: !10319)
!10323 = !DILocation(line: 394, column: 2, scope: !10319)
!10324 = !DILocation(line: 395, column: 1, scope: !10319)
!10325 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !1175, file: !1175, line: 289, type: !1228, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10326)
!10326 = !{!10327}
!10327 = !DILocalVariable(name: "dev", arg: 1, scope: !10325, file: !1175, line: 289, type: !1204)
!10328 = !DILocation(line: 0, scope: !10325)
!10329 = !DILocation(line: 291, column: 2, scope: !10325)
!10330 = !DILocation(line: 292, column: 1, scope: !10325)
!10331 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !1175, file: !1175, line: 387, type: !1228, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10332)
!10332 = !{!10333}
!10333 = !DILocalVariable(name: "dev", arg: 1, scope: !10331, file: !1175, line: 387, type: !1204)
!10334 = !DILocation(line: 0, scope: !10331)
!10335 = !DILocation(line: 389, column: 2, scope: !10331)
!10336 = !DILocation(line: 390, column: 1, scope: !10331)
!10337 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !1175, file: !1175, line: 382, type: !1228, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10338)
!10338 = !{!10339}
!10339 = !DILocalVariable(name: "dev", arg: 1, scope: !10337, file: !1175, line: 382, type: !1204)
!10340 = !DILocation(line: 0, scope: !10337)
!10341 = !DILocation(line: 384, column: 2, scope: !10337)
!10342 = !DILocation(line: 385, column: 1, scope: !10337)
!10343 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !1175, file: !1175, line: 373, type: !1228, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10344)
!10344 = !{!10345}
!10345 = !DILocalVariable(name: "dev", arg: 1, scope: !10343, file: !1175, line: 373, type: !1204)
!10346 = !DILocation(line: 0, scope: !10343)
!10347 = !DILocation(line: 375, column: 2, scope: !10343)
!10348 = !DILocation(line: 376, column: 1, scope: !10343)
!10349 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !1175, file: !1175, line: 284, type: !1228, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10350)
!10350 = !{!10351}
!10351 = !DILocalVariable(name: "dev", arg: 1, scope: !10349, file: !1175, line: 284, type: !1204)
!10352 = !DILocation(line: 0, scope: !10349)
!10353 = !DILocation(line: 286, column: 2, scope: !10349)
!10354 = !DILocation(line: 287, column: 1, scope: !10349)
!10355 = distinct !DISubprogram(name: "stm32_exti_init", scope: !1175, file: !1175, line: 416, type: !1202, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10356)
!10356 = !{!10357}
!10357 = !DILocalVariable(name: "dev", arg: 1, scope: !10355, file: !1175, line: 416, type: !1204)
!10358 = !DILocation(line: 0, scope: !10355)
!10359 = !DILocation(line: 418, column: 2, scope: !10355)
!10360 = !DILocation(line: 420, column: 2, scope: !10355)
!10361 = !DILocation(line: 0, scope: !1227)
!10362 = !DILocation(line: 493, column: 2, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !1227, file: !1175, line: 493, column: 2)
!10364 = !DILocation(line: 497, column: 2, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !1227, file: !1175, line: 497, column: 2)
!10366 = !DILocation(line: 507, column: 2, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !1227, file: !1175, line: 507, column: 2)
!10368 = !DILocation(line: 512, column: 2, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !1227, file: !1175, line: 512, column: 2)
!10370 = !DILocation(line: 516, column: 2, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !1227, file: !1175, line: 516, column: 2)
!10372 = !DILocation(line: 523, column: 2, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !1227, file: !1175, line: 523, column: 2)
!10374 = !DILocation(line: 527, column: 2, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !1227, file: !1175, line: 527, column: 2)
!10376 = !DILocation(line: 581, column: 2, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !1227, file: !1175, line: 581, column: 2)
!10378 = !DILocation(line: 586, column: 2, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !1227, file: !1175, line: 586, column: 2)
!10380 = !DILocation(line: 591, column: 2, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !1227, file: !1175, line: 591, column: 2)
!10382 = !DILocation(line: 595, column: 2, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !1227, file: !1175, line: 595, column: 2)
!10384 = !DILocation(line: 607, column: 1, scope: !1227)
!10385 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !1175, file: !1175, line: 112, type: !10271, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10386)
!10386 = !{!10387, !10388}
!10387 = !DILocalVariable(name: "line", arg: 1, scope: !10385, file: !1175, line: 112, type: !103)
!10388 = !DILocalVariable(name: "irqnum", scope: !10385, file: !1175, line: 114, type: !103)
!10389 = !DILocation(line: 0, scope: !10385)
!10390 = !DILocation(line: 122, column: 13, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10385, file: !1175, line: 122, column: 6)
!10392 = !DILocation(line: 122, column: 6, scope: !10385)
!10393 = !DILocation(line: 123, column: 3, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10395, file: !1175, line: 123, column: 3)
!10395 = distinct !DILexicalBlock(scope: !10396, file: !1175, line: 123, column: 3)
!10396 = distinct !DILexicalBlock(scope: !10397, file: !1175, line: 123, column: 3)
!10397 = distinct !DILexicalBlock(scope: !10391, file: !1175, line: 122, column: 22)
!10398 = !DILocation(line: 121, column: 11, scope: !10385)
!10399 = !DILocation(line: 130, column: 26, scope: !10385)
!10400 = !DILocation(line: 130, column: 2, scope: !10385)
!10401 = !DILocation(line: 134, column: 2, scope: !10385)
!10402 = !DILocation(line: 135, column: 1, scope: !10385)
!10403 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !10282, file: !10282, line: 268, type: !7962, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10404)
!10404 = !{!10405}
!10405 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10403, file: !10282, line: 268, type: !111)
!10406 = !DILocation(line: 0, scope: !10403)
!10407 = !DILocation(line: 270, column: 3, scope: !10403)
!10408 = !DILocation(line: 271, column: 1, scope: !10403)
!10409 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !1175, file: !1175, line: 137, type: !10271, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10410)
!10410 = !{!10411}
!10411 = !DILocalVariable(name: "line", arg: 1, scope: !10409, file: !1175, line: 137, type: !103)
!10412 = !DILocation(line: 0, scope: !10409)
!10413 = !DILocation(line: 141, column: 11, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10409, file: !1175, line: 141, column: 6)
!10415 = !DILocation(line: 141, column: 6, scope: !10409)
!10416 = !DILocation(line: 145, column: 28, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10414, file: !1175, line: 141, column: 17)
!10418 = !DILocation(line: 145, column: 3, scope: !10417)
!10419 = !DILocation(line: 147, column: 2, scope: !10417)
!10420 = !DILocation(line: 151, column: 1, scope: !10409)
!10421 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !10282, file: !10282, line: 309, type: !7962, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10422)
!10422 = !{!10423}
!10423 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10421, file: !10282, line: 309, type: !111)
!10424 = !DILocation(line: 0, scope: !10421)
!10425 = !DILocation(line: 311, column: 3, scope: !10421)
!10426 = !DILocation(line: 312, column: 1, scope: !10421)
!10427 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !1175, file: !1175, line: 202, type: !10428, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10430)
!10428 = !DISubroutineType(types: !10429)
!10429 = !{null, !103, !103}
!10430 = !{!10431, !10432}
!10431 = !DILocalVariable(name: "line", arg: 1, scope: !10427, file: !1175, line: 202, type: !103)
!10432 = !DILocalVariable(name: "trigger", arg: 2, scope: !10427, file: !1175, line: 202, type: !103)
!10433 = !DILocation(line: 0, scope: !10427)
!10434 = !DILocation(line: 211, column: 2, scope: !10427)
!10435 = !DILocation(line: 213, column: 36, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10427, file: !1175, line: 211, column: 19)
!10437 = !DILocation(line: 213, column: 3, scope: !10436)
!10438 = !DILocation(line: 214, column: 3, scope: !10436)
!10439 = !DILocation(line: 215, column: 3, scope: !10436)
!10440 = !DILocation(line: 217, column: 35, scope: !10436)
!10441 = !DILocation(line: 217, column: 3, scope: !10436)
!10442 = !DILocation(line: 218, column: 3, scope: !10436)
!10443 = !DILocation(line: 219, column: 3, scope: !10436)
!10444 = !DILocation(line: 221, column: 36, scope: !10436)
!10445 = !DILocation(line: 221, column: 3, scope: !10436)
!10446 = !DILocation(line: 222, column: 3, scope: !10436)
!10447 = !DILocation(line: 223, column: 3, scope: !10436)
!10448 = !DILocation(line: 225, column: 35, scope: !10436)
!10449 = !DILocation(line: 225, column: 3, scope: !10436)
!10450 = !DILocation(line: 226, column: 3, scope: !10436)
!10451 = !DILocation(line: 227, column: 3, scope: !10436)
!10452 = !DILocation(line: 232, column: 1, scope: !10427)
!10453 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !10282, file: !10282, line: 573, type: !7962, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10454)
!10454 = !{!10455}
!10455 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10453, file: !10282, line: 573, type: !111)
!10456 = !DILocation(line: 0, scope: !10453)
!10457 = !DILocation(line: 575, column: 3, scope: !10453)
!10458 = !DILocation(line: 577, column: 1, scope: !10453)
!10459 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !10282, file: !10282, line: 703, type: !7962, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10460)
!10460 = !{!10461}
!10461 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10459, file: !10282, line: 703, type: !111)
!10462 = !DILocation(line: 0, scope: !10459)
!10463 = !DILocation(line: 705, column: 3, scope: !10459)
!10464 = !DILocation(line: 706, column: 1, scope: !10459)
!10465 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !10282, file: !10282, line: 529, type: !7962, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10466)
!10466 = !{!10467}
!10467 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10465, file: !10282, line: 529, type: !111)
!10468 = !DILocation(line: 0, scope: !10465)
!10469 = !DILocation(line: 531, column: 3, scope: !10465)
!10470 = !DILocation(line: 533, column: 1, scope: !10465)
!10471 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !10282, file: !10282, line: 661, type: !7962, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10472)
!10472 = !{!10473}
!10473 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10471, file: !10282, line: 661, type: !111)
!10474 = !DILocation(line: 0, scope: !10471)
!10475 = !DILocation(line: 663, column: 3, scope: !10471)
!10476 = !DILocation(line: 664, column: 1, scope: !10471)
!10477 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !1175, file: !1175, line: 433, type: !10478, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10480)
!10478 = !DISubroutineType(types: !10479)
!10479 = !{!103, !103, !1215, !102}
!10480 = !{!10481, !10482, !10483, !10484, !10486}
!10481 = !DILocalVariable(name: "line", arg: 1, scope: !10477, file: !1175, line: 433, type: !103)
!10482 = !DILocalVariable(name: "cb", arg: 2, scope: !10477, file: !1175, line: 433, type: !1215)
!10483 = !DILocalVariable(name: "arg", arg: 3, scope: !10477, file: !1175, line: 433, type: !102)
!10484 = !DILocalVariable(name: "dev", scope: !10477, file: !1175, line: 435, type: !10485)
!10485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1204)
!10486 = !DILocalVariable(name: "data", scope: !10477, file: !1175, line: 436, type: !10236)
!10487 = !DILocation(line: 0, scope: !10477)
!10488 = !DILocation(line: 438, column: 21, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10477, file: !1175, line: 438, column: 6)
!10490 = !DILocation(line: 438, column: 6, scope: !10489)
!10491 = !DILocation(line: 438, column: 6, scope: !10477)
!10492 = !DILocation(line: 442, column: 20, scope: !10477)
!10493 = !DILocation(line: 443, column: 17, scope: !10477)
!10494 = !DILocation(line: 443, column: 22, scope: !10477)
!10495 = !DILocation(line: 445, column: 2, scope: !10477)
!10496 = !DILocation(line: 446, column: 1, scope: !10477)
!10497 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !1175, file: !1175, line: 448, type: !10271, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10498)
!10498 = !{!10499, !10500, !10501}
!10499 = !DILocalVariable(name: "line", arg: 1, scope: !10497, file: !1175, line: 448, type: !103)
!10500 = !DILocalVariable(name: "dev", scope: !10497, file: !1175, line: 450, type: !10485)
!10501 = !DILocalVariable(name: "data", scope: !10497, file: !1175, line: 451, type: !10236)
!10502 = !DILocation(line: 0, scope: !10497)
!10503 = !DILocation(line: 453, column: 17, scope: !10497)
!10504 = !DILocation(line: 453, column: 20, scope: !10497)
!10505 = !DILocation(line: 454, column: 17, scope: !10497)
!10506 = !DILocation(line: 454, column: 22, scope: !10497)
!10507 = !DILocation(line: 455, column: 1, scope: !10497)
!10508 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1358, file: !1358, line: 183, type: !1396, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !10509)
!10509 = !{!10510, !10511, !10512, !10513, !10514}
!10510 = !DILocalVariable(name: "dev", arg: 1, scope: !10508, file: !1358, line: 183, type: !1387)
!10511 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10508, file: !1358, line: 184, type: !1398)
!10512 = !DILocalVariable(name: "pclken", scope: !10508, file: !1358, line: 186, type: !1348)
!10513 = !DILocalVariable(name: "reg", scope: !10508, file: !1358, line: 187, type: !1948)
!10514 = !DILocalVariable(name: "reg_val", scope: !10508, file: !1358, line: 188, type: !111)
!10515 = !DILocation(line: 0, scope: !10508)
!10516 = !DILocation(line: 192, column: 6, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10508, file: !1358, line: 192, column: 6)
!10518 = !DILocation(line: 192, column: 6, scope: !10508)
!10519 = !DILocation(line: 197, column: 52, scope: !10508)
!10520 = !DILocation(line: 197, column: 8, scope: !10508)
!10521 = !DILocation(line: 198, column: 12, scope: !10508)
!10522 = !DILocation(line: 199, column: 21, scope: !10508)
!10523 = !DILocation(line: 199, column: 10, scope: !10508)
!10524 = !DILocation(line: 200, column: 7, scope: !10508)
!10525 = !DILocation(line: 202, column: 2, scope: !10508)
!10526 = !DILocation(line: 203, column: 1, scope: !10508)
!10527 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1358, file: !1358, line: 205, type: !1396, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !10528)
!10528 = !{!10529, !10530, !10531, !10532, !10533}
!10529 = !DILocalVariable(name: "dev", arg: 1, scope: !10527, file: !1358, line: 205, type: !1387)
!10530 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10527, file: !1358, line: 206, type: !1398)
!10531 = !DILocalVariable(name: "pclken", scope: !10527, file: !1358, line: 208, type: !1348)
!10532 = !DILocalVariable(name: "reg", scope: !10527, file: !1358, line: 209, type: !1948)
!10533 = !DILocalVariable(name: "reg_val", scope: !10527, file: !1358, line: 210, type: !111)
!10534 = !DILocation(line: 0, scope: !10527)
!10535 = !DILocation(line: 214, column: 6, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10527, file: !1358, line: 214, column: 6)
!10537 = !DILocation(line: 214, column: 6, scope: !10527)
!10538 = !DILocation(line: 219, column: 52, scope: !10527)
!10539 = !DILocation(line: 219, column: 8, scope: !10527)
!10540 = !DILocation(line: 220, column: 12, scope: !10527)
!10541 = !DILocation(line: 221, column: 22, scope: !10527)
!10542 = !DILocation(line: 221, column: 13, scope: !10527)
!10543 = !DILocation(line: 221, column: 10, scope: !10527)
!10544 = !DILocation(line: 222, column: 7, scope: !10527)
!10545 = !DILocation(line: 224, column: 2, scope: !10527)
!10546 = !DILocation(line: 225, column: 1, scope: !10527)
!10547 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1358, file: !1358, line: 262, type: !1412, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !10548)
!10548 = !{!10549, !10550, !10551, !10552, !10553, !10554, !10555, !10556}
!10549 = !DILocalVariable(name: "clock", arg: 1, scope: !10547, file: !1358, line: 262, type: !1387)
!10550 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10547, file: !1358, line: 263, type: !1398)
!10551 = !DILocalVariable(name: "rate", arg: 3, scope: !10547, file: !1358, line: 264, type: !1354)
!10552 = !DILocalVariable(name: "pclken", scope: !10547, file: !1358, line: 266, type: !1348)
!10553 = !DILocalVariable(name: "ahb_clock", scope: !10547, file: !1358, line: 273, type: !111)
!10554 = !DILocalVariable(name: "apb1_clock", scope: !10547, file: !1358, line: 274, type: !111)
!10555 = !DILocalVariable(name: "apb2_clock", scope: !10547, file: !1358, line: 276, type: !111)
!10556 = !DILocalVariable(name: "ahb3_clock", scope: !10547, file: !1358, line: 286, type: !111)
!10557 = !DILocation(line: 0, scope: !10547)
!10558 = !DILocation(line: 273, column: 23, scope: !10547)
!10559 = !DILocation(line: 299, column: 18, scope: !10547)
!10560 = !DILocation(line: 299, column: 2, scope: !10547)
!10561 = !DILocation(line: 274, column: 24, scope: !10547)
!10562 = !DILocation(line: 319, column: 3, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10547, file: !1358, line: 299, column: 23)
!10564 = !DILocation(line: 276, column: 24, scope: !10547)
!10565 = !DILocation(line: 323, column: 3, scope: !10563)
!10566 = !DILocation(line: 346, column: 33, scope: !10563)
!10567 = !DILocation(line: 346, column: 11, scope: !10563)
!10568 = !DILocation(line: 350, column: 3, scope: !10563)
!10569 = !DILocation(line: 354, column: 33, scope: !10563)
!10570 = !DILocation(line: 354, column: 11, scope: !10563)
!10571 = !DILocation(line: 358, column: 3, scope: !10563)
!10572 = !DILocation(line: 374, column: 3, scope: !10563)
!10573 = !DILocation(line: 379, column: 3, scope: !10563)
!10574 = !DILocation(line: 0, scope: !10563)
!10575 = !DILocation(line: 396, column: 1, scope: !10547)
!10576 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1358, file: !1358, line: 227, type: !1428, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !10577)
!10577 = !{!10578, !10579, !10580, !10581, !10582, !10583, !10584, !10585}
!10578 = !DILocalVariable(name: "dev", arg: 1, scope: !10576, file: !1358, line: 227, type: !1387)
!10579 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10576, file: !1358, line: 228, type: !1398)
!10580 = !DILocalVariable(name: "data", arg: 3, scope: !10576, file: !1358, line: 229, type: !102)
!10581 = !DILocalVariable(name: "pclken", scope: !10576, file: !1358, line: 233, type: !1348)
!10582 = !DILocalVariable(name: "reg", scope: !10576, file: !1358, line: 234, type: !1948)
!10583 = !DILocalVariable(name: "reg_val", scope: !10576, file: !1358, line: 235, type: !111)
!10584 = !DILocalVariable(name: "dt_val", scope: !10576, file: !1358, line: 235, type: !111)
!10585 = !DILocalVariable(name: "err", scope: !10576, file: !1358, line: 236, type: !103)
!10586 = !DILocation(line: 0, scope: !10576)
!10587 = !DILocation(line: 241, column: 30, scope: !10576)
!10588 = !DILocation(line: 241, column: 8, scope: !10576)
!10589 = !DILocation(line: 242, column: 10, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10576, file: !1358, line: 242, column: 6)
!10591 = !DILocation(line: 242, column: 6, scope: !10576)
!10592 = !DILocation(line: 247, column: 11, scope: !10576)
!10593 = !DILocation(line: 248, column: 6, scope: !10576)
!10594 = !DILocation(line: 247, column: 44, scope: !10576)
!10595 = !DILocation(line: 250, column: 6, scope: !10576)
!10596 = !DILocation(line: 249, column: 52, scope: !10576)
!10597 = !DILocation(line: 249, column: 8, scope: !10576)
!10598 = !DILocation(line: 251, column: 12, scope: !10576)
!10599 = !DILocation(line: 252, column: 10, scope: !10576)
!10600 = !DILocation(line: 253, column: 7, scope: !10576)
!10601 = !DILocation(line: 255, column: 2, scope: !10576)
!10602 = !DILocation(line: 260, column: 1, scope: !10576)
!10603 = distinct !DISubprogram(name: "enabled_clock", scope: !1358, file: !1358, line: 100, type: !10604, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !10606)
!10604 = !DISubroutineType(types: !10605)
!10605 = !{!103, !111}
!10606 = !{!10607, !10608}
!10607 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10603, file: !1358, line: 100, type: !111)
!10608 = !DILocalVariable(name: "r", scope: !10603, file: !1358, line: 102, type: !103)
!10609 = !DILocation(line: 0, scope: !10603)
!10610 = !DILocation(line: 104, column: 2, scope: !10603)
!10611 = !DILocation(line: 180, column: 2, scope: !10603)
!10612 = !DILocation(line: 181, column: 1, scope: !10603)
!10613 = distinct !DISubprogram(name: "get_bus_clock", scope: !1358, file: !1358, line: 79, type: !10614, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !10616)
!10614 = !DISubroutineType(types: !10615)
!10615 = !{!111, !111, !111}
!10616 = !{!10617, !10618}
!10617 = !DILocalVariable(name: "clock", arg: 1, scope: !10613, file: !1358, line: 79, type: !111)
!10618 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10613, file: !1358, line: 79, type: !111)
!10619 = !DILocation(line: 0, scope: !10613)
!10620 = !DILocation(line: 81, column: 15, scope: !10613)
!10621 = !DILocation(line: 81, column: 2, scope: !10613)
!10622 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1358, file: !1358, line: 68, type: !10623, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !10625)
!10623 = !DISubroutineType(types: !10624)
!10624 = !{!111, !111, !103, !103, !103}
!10625 = !{!10626, !10627, !10628, !10629}
!10626 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10622, file: !1358, line: 68, type: !111)
!10627 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10622, file: !1358, line: 69, type: !103)
!10628 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10622, file: !1358, line: 70, type: !103)
!10629 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10622, file: !1358, line: 71, type: !103)
!10630 = !DILocation(line: 0, scope: !10622)
!10631 = !DILocation(line: 75, column: 22, scope: !10622)
!10632 = !DILocation(line: 76, column: 13, scope: !10622)
!10633 = !DILocation(line: 75, column: 34, scope: !10622)
!10634 = !DILocation(line: 75, column: 2, scope: !10622)
!10635 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1358, file: !1358, line: 641, type: !1385, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !10636)
!10636 = !{!10637, !10638, !10639}
!10637 = !DILocalVariable(name: "dev", arg: 1, scope: !10635, file: !1358, line: 641, type: !1387)
!10638 = !DILocalVariable(name: "old_flash_freq", scope: !10635, file: !1358, line: 664, type: !111)
!10639 = !DILocalVariable(name: "new_flash_freq", scope: !10635, file: !1358, line: 665, type: !111)
!10640 = !DILocation(line: 0, scope: !10635)
!10641 = !DILocation(line: 646, column: 2, scope: !10635)
!10642 = !DILocation(line: 667, column: 19, scope: !10635)
!10643 = !DILocation(line: 674, column: 21, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10635, file: !1358, line: 674, column: 6)
!10645 = !DILocation(line: 674, column: 6, scope: !10635)
!10646 = !DILocation(line: 675, column: 3, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10644, file: !1358, line: 674, column: 59)
!10648 = !DILocation(line: 676, column: 2, scope: !10647)
!10649 = !DILocation(line: 680, column: 2, scope: !10635)
!10650 = !DILocation(line: 683, column: 2, scope: !10635)
!10651 = !DILocation(line: 690, column: 3, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10653, file: !1358, line: 689, column: 9)
!10653 = distinct !DILexicalBlock(scope: !10635, file: !1358, line: 685, column: 6)
!10654 = !DILocation(line: 695, column: 2, scope: !10635)
!10655 = !DILocation(line: 696, column: 2, scope: !10635)
!10656 = !DILocation(line: 696, column: 9, scope: !10635)
!10657 = !DILocation(line: 696, column: 34, scope: !10635)
!10658 = distinct !{!10658, !10655, !10659}
!10659 = !DILocation(line: 697, column: 2, scope: !10635)
!10660 = !DILocation(line: 720, column: 21, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10635, file: !1358, line: 720, column: 6)
!10662 = !DILocation(line: 720, column: 6, scope: !10635)
!10663 = !DILocation(line: 721, column: 3, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10661, file: !1358, line: 720, column: 60)
!10665 = !DILocation(line: 722, column: 2, scope: !10664)
!10666 = !DILocation(line: 725, column: 18, scope: !10635)
!10667 = !DILocation(line: 728, column: 2, scope: !10635)
!10668 = !DILocation(line: 730, column: 2, scope: !10635)
!10669 = !DILocation(line: 745, column: 2, scope: !10635)
!10670 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10671, file: !10671, line: 3275, type: !7952, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10671 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10672 = !DILocation(line: 3277, column: 21, scope: !10670)
!10673 = !DILocation(line: 3277, column: 3, scope: !10670)
!10674 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1358, file: !1358, line: 507, type: !323, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10675 = !DILocation(line: 516, column: 4, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10677, file: !1358, line: 515, column: 10)
!10677 = distinct !DILexicalBlock(scope: !10678, file: !1358, line: 513, column: 7)
!10678 = distinct !DILexicalBlock(scope: !10679, file: !1358, line: 510, column: 37)
!10679 = distinct !DILexicalBlock(scope: !10674, file: !1358, line: 510, column: 6)
!10680 = !DILocation(line: 526, column: 3, scope: !10678)
!10681 = !DILocation(line: 527, column: 3, scope: !10678)
!10682 = !DILocation(line: 527, column: 10, scope: !10678)
!10683 = !DILocation(line: 527, column: 31, scope: !10678)
!10684 = distinct !{!10684, !10681, !10685}
!10685 = !DILocation(line: 529, column: 3, scope: !10678)
!10686 = !DILocation(line: 583, column: 3, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10688, file: !1358, line: 577, column: 37)
!10688 = distinct !DILexicalBlock(scope: !10674, file: !1358, line: 577, column: 6)
!10689 = !DILocation(line: 584, column: 3, scope: !10687)
!10690 = !DILocation(line: 584, column: 10, scope: !10687)
!10691 = !DILocation(line: 584, column: 31, scope: !10687)
!10692 = distinct !{!10692, !10689, !10693}
!10693 = !DILocation(line: 585, column: 3, scope: !10687)
!10694 = !DILocation(line: 627, column: 1, scope: !10674)
!10695 = distinct !DISubprogram(name: "set_up_plls", scope: !1358, file: !1358, line: 448, type: !323, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10696 = !DILocation(line: 460, column: 6, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10695, file: !1358, line: 460, column: 6)
!10698 = !DILocation(line: 460, column: 31, scope: !10697)
!10699 = !DILocation(line: 460, column: 6, scope: !10695)
!10700 = !DILocation(line: 461, column: 3, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10697, file: !1358, line: 460, column: 67)
!10702 = !DILocation(line: 462, column: 3, scope: !10701)
!10703 = !DILocation(line: 463, column: 2, scope: !10701)
!10704 = !DILocation(line: 464, column: 2, scope: !10695)
!10705 = !DILocation(line: 488, column: 2, scope: !10695)
!10706 = !DILocation(line: 492, column: 2, scope: !10695)
!10707 = !DILocation(line: 496, column: 2, scope: !10695)
!10708 = !DILocation(line: 499, column: 2, scope: !10695)
!10709 = !DILocation(line: 500, column: 2, scope: !10695)
!10710 = !DILocation(line: 500, column: 9, scope: !10695)
!10711 = !DILocation(line: 500, column: 30, scope: !10695)
!10712 = distinct !{!10712, !10709, !10713}
!10713 = !DILocation(line: 502, column: 2, scope: !10695)
!10714 = !DILocation(line: 505, column: 1, scope: !10695)
!10715 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10671, file: !10671, line: 3224, type: !7962, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !10716)
!10716 = !{!10717}
!10717 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10715, file: !10671, line: 3224, type: !111)
!10718 = !DILocation(line: 0, scope: !10715)
!10719 = !DILocation(line: 3226, column: 3, scope: !10715)
!10720 = !DILocation(line: 3227, column: 1, scope: !10715)
!10721 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10671, file: !10671, line: 3188, type: !7962, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !10722)
!10722 = !{!10723}
!10723 = !DILocalVariable(name: "Source", arg: 1, scope: !10721, file: !10671, line: 3188, type: !111)
!10724 = !DILocation(line: 0, scope: !10721)
!10725 = !DILocation(line: 3190, column: 3, scope: !10721)
!10726 = !DILocation(line: 3191, column: 1, scope: !10721)
!10727 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10671, file: !10671, line: 3204, type: !7952, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10728 = !DILocation(line: 3206, column: 21, scope: !10727)
!10729 = !DILocation(line: 3206, column: 3, scope: !10727)
!10730 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10671, file: !10671, line: 3240, type: !7962, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !10731)
!10731 = !{!10732}
!10732 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10730, file: !10671, line: 3240, type: !111)
!10733 = !DILocation(line: 0, scope: !10730)
!10734 = !DILocation(line: 3242, column: 3, scope: !10730)
!10735 = !DILocation(line: 3243, column: 1, scope: !10730)
!10736 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10671, file: !10671, line: 3256, type: !7962, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !10737)
!10737 = !{!10738}
!10738 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10736, file: !10671, line: 3256, type: !111)
!10739 = !DILocation(line: 0, scope: !10736)
!10740 = !DILocation(line: 3258, column: 3, scope: !10736)
!10741 = !DILocation(line: 3259, column: 1, scope: !10736)
!10742 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1358, file: !1358, line: 409, type: !323, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10743 = !DILocation(line: 412, column: 6, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10742, file: !1358, line: 412, column: 6)
!10745 = !DILocation(line: 412, column: 27, scope: !10744)
!10746 = !DILocation(line: 412, column: 6, scope: !10742)
!10747 = !DILocation(line: 414, column: 3, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10744, file: !1358, line: 412, column: 33)
!10749 = !DILocation(line: 415, column: 3, scope: !10748)
!10750 = !DILocation(line: 415, column: 10, scope: !10748)
!10751 = !DILocation(line: 415, column: 31, scope: !10748)
!10752 = distinct !{!10752, !10749, !10753}
!10753 = !DILocation(line: 417, column: 3, scope: !10748)
!10754 = !DILocation(line: 421, column: 2, scope: !10742)
!10755 = !DILocation(line: 422, column: 2, scope: !10742)
!10756 = !DILocation(line: 422, column: 9, scope: !10742)
!10757 = !DILocation(line: 422, column: 34, scope: !10742)
!10758 = distinct !{!10758, !10755, !10759}
!10759 = !DILocation(line: 423, column: 2, scope: !10742)
!10760 = !DILocation(line: 424, column: 1, scope: !10742)
!10761 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10671, file: !10671, line: 4195, type: !323, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10762 = !DILocation(line: 4197, column: 3, scope: !10761)
!10763 = !DILocation(line: 4198, column: 1, scope: !10761)
!10764 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10671, file: !10671, line: 4184, type: !323, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10765 = !DILocation(line: 4186, column: 3, scope: !10764)
!10766 = !DILocation(line: 4187, column: 1, scope: !10764)
!10767 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10671, file: !10671, line: 4205, type: !7952, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10768 = !DILocation(line: 4207, column: 11, scope: !10767)
!10769 = !DILocation(line: 4207, column: 44, scope: !10767)
!10770 = !DILocation(line: 4207, column: 3, scope: !10767)
!10771 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10671, file: !10671, line: 3007, type: !7952, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10772 = !DILocation(line: 3009, column: 11, scope: !10771)
!10773 = !DILocation(line: 3009, column: 44, scope: !10771)
!10774 = !DILocation(line: 3009, column: 3, scope: !10771)
!10775 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10671, file: !10671, line: 2987, type: !323, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10776 = !DILocation(line: 2989, column: 3, scope: !10775)
!10777 = !DILocation(line: 2990, column: 1, scope: !10775)
!10778 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10671, file: !10671, line: 2939, type: !323, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10779 = !DILocation(line: 2941, column: 3, scope: !10778)
!10780 = !DILocation(line: 2942, column: 1, scope: !10778)
!10781 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10671, file: !10671, line: 2949, type: !323, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10782 = !DILocation(line: 2951, column: 3, scope: !10781)
!10783 = !DILocation(line: 2952, column: 1, scope: !10781)
!10784 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10671, file: !10671, line: 2969, type: !7952, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10785 = !DILocation(line: 2971, column: 11, scope: !10784)
!10786 = !DILocation(line: 2971, column: 44, scope: !10784)
!10787 = !DILocation(line: 2971, column: 3, scope: !10784)
!10788 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10671, file: !10671, line: 3143, type: !323, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10789 = !DILocation(line: 3145, column: 3, scope: !10788)
!10790 = !DILocation(line: 3146, column: 1, scope: !10788)
!10791 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10671, file: !10671, line: 3163, type: !7952, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2501)
!10792 = !DILocation(line: 3165, column: 11, scope: !10791)
!10793 = !DILocation(line: 3165, column: 46, scope: !10791)
!10794 = !DILocation(line: 3165, column: 3, scope: !10791)
!10795 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10796, file: !10796, line: 40, type: !7952, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3414, retainedNodes: !2501)
!10796 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10797 = !DILocation(line: 45, column: 3, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10799, file: !10796, line: 44, column: 44)
!10799 = distinct !DILexicalBlock(scope: !10800, file: !10796, line: 44, column: 13)
!10800 = distinct !DILexicalBlock(scope: !10795, file: !10796, line: 42, column: 6)
!10801 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10796, file: !10796, line: 56, type: !323, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3414, retainedNodes: !2501)
!10802 = !DILocation(line: 58, column: 2, scope: !10801)
!10803 = !DILocation(line: 62, column: 1, scope: !10801)
!10804 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10671, file: !10671, line: 4304, type: !10805, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3414, retainedNodes: !10807)
!10805 = !DISubroutineType(types: !10806)
!10806 = !{null, !111, !111, !111, !111}
!10807 = !{!10808, !10809, !10810, !10811}
!10808 = !DILocalVariable(name: "Source", arg: 1, scope: !10804, file: !10671, line: 4304, type: !111)
!10809 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10804, file: !10671, line: 4304, type: !111)
!10810 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10804, file: !10671, line: 4304, type: !111)
!10811 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10804, file: !10671, line: 4304, type: !111)
!10812 = !DILocation(line: 0, scope: !10804)
!10813 = !DILocation(line: 4306, column: 3, scope: !10804)
!10814 = !DILocation(line: 4308, column: 3, scope: !10804)
!10815 = !DILocation(line: 4312, column: 1, scope: !10804)
!10816 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10796, file: !10796, line: 69, type: !323, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3414, retainedNodes: !2501)
!10817 = !DILocation(line: 72, column: 2, scope: !10816)
!10818 = !DILocation(line: 73, column: 1, scope: !10816)
!10819 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10820, file: !10820, line: 1185, type: !7962, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3414, retainedNodes: !10821)
!10820 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10821 = !{!10822, !10823}
!10822 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10819, file: !10820, line: 1185, type: !111)
!10823 = !DILocalVariable(name: "tmpreg", scope: !10819, file: !10820, line: 1187, type: !777)
!10824 = !DILocation(line: 0, scope: !10819)
!10825 = !DILocation(line: 1187, column: 3, scope: !10819)
!10826 = !DILocation(line: 1187, column: 17, scope: !10819)
!10827 = !DILocation(line: 1188, column: 3, scope: !10819)
!10828 = !DILocation(line: 1190, column: 12, scope: !10819)
!10829 = !DILocation(line: 1190, column: 10, scope: !10819)
!10830 = !DILocation(line: 1191, column: 9, scope: !10819)
!10831 = !DILocation(line: 1192, column: 1, scope: !10819)
!10832 = distinct !DISubprogram(name: "uart_console_init", scope: !1489, file: !1489, line: 588, type: !1466, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1432, retainedNodes: !10833)
!10833 = !{!10834}
!10834 = !DILocalVariable(name: "arg", arg: 1, scope: !10832, file: !1489, line: 588, type: !1444)
!10835 = !DILocation(line: 0, scope: !10832)
!10836 = !DILocation(line: 593, column: 7, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10832, file: !1489, line: 593, column: 6)
!10838 = !DILocation(line: 593, column: 6, scope: !10832)
!10839 = !DILocation(line: 597, column: 2, scope: !10832)
!10840 = !DILocation(line: 599, column: 2, scope: !10832)
!10841 = !DILocation(line: 600, column: 1, scope: !10832)
!10842 = distinct !DISubprogram(name: "device_is_ready", scope: !10843, file: !10843, line: 47, type: !10844, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1432, retainedNodes: !10846)
!10843 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!10844 = !DISubroutineType(types: !10845)
!10845 = !{!122, !1444}
!10846 = !{!10847}
!10847 = !DILocalVariable(name: "dev", arg: 1, scope: !10842, file: !10843, line: 47, type: !1444)
!10848 = !DILocation(line: 0, scope: !10842)
!10849 = !DILocation(line: 55, column: 2, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10842, file: !10843, line: 55, column: 2)
!10851 = !{i64 2155054806}
!10852 = !DILocation(line: 56, column: 9, scope: !10842)
!10853 = !DILocation(line: 56, column: 2, scope: !10842)
!10854 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1489, file: !1489, line: 573, type: !323, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1432, retainedNodes: !2501)
!10855 = !DILocation(line: 576, column: 2, scope: !10854)
!10856 = !DILocation(line: 579, column: 2, scope: !10854)
!10857 = !DILocation(line: 581, column: 1, scope: !10854)
!10858 = distinct !DISubprogram(name: "console_out", scope: !1489, file: !1489, line: 77, type: !764, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1432, retainedNodes: !10859)
!10859 = !{!10860}
!10860 = !DILocalVariable(name: "c", arg: 1, scope: !10858, file: !1489, line: 77, type: !103)
!10861 = !DILocation(line: 0, scope: !10858)
!10862 = !DILocation(line: 89, column: 11, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10858, file: !1489, line: 89, column: 6)
!10864 = !DILocation(line: 89, column: 6, scope: !10858)
!10865 = !DILocation(line: 90, column: 3, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10863, file: !1489, line: 89, column: 17)
!10867 = !DILocation(line: 91, column: 2, scope: !10866)
!10868 = !DILocation(line: 92, column: 34, scope: !10858)
!10869 = !DILocation(line: 92, column: 2, scope: !10858)
!10870 = !DILocation(line: 94, column: 2, scope: !10858)
!10871 = distinct !DISubprogram(name: "uart_poll_out", scope: !10872, file: !10872, line: 95, type: !1462, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1432, retainedNodes: !10873)
!10872 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/dyn_channel")
!10873 = !{!10874, !10875}
!10874 = !DILocalVariable(name: "dev", arg: 1, scope: !10871, file: !10872, line: 95, type: !1444)
!10875 = !DILocalVariable(name: "out_char", arg: 2, scope: !10871, file: !10872, line: 95, type: !167)
!10876 = !DILocation(line: 0, scope: !10871)
!10877 = !DILocation(line: 105, column: 2, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10871, file: !10872, line: 105, column: 2)
!10879 = !{i64 2155138197}
!10880 = !DILocation(line: 106, column: 2, scope: !10871)
!10881 = !DILocation(line: 107, column: 1, scope: !10871)
!10882 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1438, file: !1438, line: 574, type: !1462, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1432, retainedNodes: !10883)
!10883 = !{!10884, !10885, !10886}
!10884 = !DILocalVariable(name: "dev", arg: 1, scope: !10882, file: !1438, line: 574, type: !1444)
!10885 = !DILocalVariable(name: "out_char", arg: 2, scope: !10882, file: !1438, line: 575, type: !167)
!10886 = !DILocalVariable(name: "api", scope: !10882, file: !1438, line: 577, type: !1435)
!10887 = !DILocation(line: 0, scope: !10882)
!10888 = !DILocation(line: 578, column: 40, scope: !10882)
!10889 = !DILocation(line: 580, column: 7, scope: !10882)
!10890 = !DILocation(line: 580, column: 2, scope: !10882)
!10891 = !DILocation(line: 581, column: 1, scope: !10882)
!10892 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !797, file: !797, line: 730, type: !10844, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1432, retainedNodes: !10893)
!10893 = !{!10894}
!10894 = !DILocalVariable(name: "dev", arg: 1, scope: !10892, file: !797, line: 730, type: !1444)
!10895 = !DILocation(line: 0, scope: !10892)
!10896 = !DILocation(line: 732, column: 9, scope: !10892)
!10897 = !DILocation(line: 732, column: 2, scope: !10892)
!10898 = distinct !DISubprogram(name: "uart_register_input", scope: !1489, file: !1489, line: 560, type: !10899, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1432, retainedNodes: !10946)
!10899 = !DISubroutineType(types: !10900)
!10900 = !{null, !10901, !10901, !10943}
!10901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10902, size: 32)
!10902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !127, line: 2208, size: 160, elements: !10903)
!10903 = !{!10904}
!10904 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10902, file: !127, line: 2209, baseType: !10905, size: 160)
!10905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !127, line: 1709, size: 160, elements: !10906)
!10906 = !{!10907, !10920, !10924}
!10907 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10905, file: !127, line: 1710, baseType: !10908, size: 64)
!10908 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10909, line: 46, baseType: !10910)
!10909 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10909, line: 41, size: 64, elements: !10911)
!10911 = !{!10912, !10919}
!10912 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10910, file: !10909, line: 42, baseType: !10913, size: 32)
!10913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10914, size: 32)
!10914 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10909, line: 39, baseType: !10915)
!10915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10909, line: 35, size: 32, elements: !10916)
!10916 = !{!10917}
!10917 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10915, file: !10909, line: 36, baseType: !10918, size: 32)
!10918 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10909, line: 32, baseType: !111)
!10919 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10910, file: !10909, line: 43, baseType: !10913, size: 32, offset: 32)
!10920 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10905, file: !127, line: 1711, baseType: !10921, size: 32, offset: 64)
!10921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !10922)
!10922 = !{!10923}
!10923 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !10921, file: !152, line: 52, baseType: !22, size: 32)
!10924 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10905, file: !127, line: 1712, baseType: !10925, size: 64, offset: 96)
!10925 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !10926)
!10926 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !10927)
!10927 = !{!10928}
!10928 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10926, file: !131, line: 232, baseType: !10929, size: 64)
!10929 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !10930)
!10930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !10931)
!10931 = !{!10932, !10938}
!10932 = !DIDerivedType(tag: DW_TAG_member, scope: !10930, file: !136, line: 38, baseType: !10933, size: 32)
!10933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10930, file: !136, line: 38, size: 32, elements: !10934)
!10934 = !{!10935, !10937}
!10935 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10933, file: !136, line: 39, baseType: !10936, size: 32)
!10936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10930, size: 32)
!10937 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10933, file: !136, line: 40, baseType: !10936, size: 32)
!10938 = !DIDerivedType(tag: DW_TAG_member, scope: !10930, file: !136, line: 42, baseType: !10939, size: 32, offset: 32)
!10939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10930, file: !136, line: 42, size: 32, elements: !10940)
!10940 = !{!10941, !10942}
!10941 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10939, file: !136, line: 43, baseType: !10936, size: 32)
!10942 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10939, file: !136, line: 44, baseType: !10936, size: 32)
!10943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10944, size: 32)
!10944 = !DISubroutineType(types: !10945)
!10945 = !{!166, !160, !166}
!10946 = !{!10947, !10948, !10949}
!10947 = !DILocalVariable(name: "avail", arg: 1, scope: !10898, file: !1489, line: 560, type: !10901)
!10948 = !DILocalVariable(name: "lines", arg: 2, scope: !10898, file: !1489, line: 560, type: !10901)
!10949 = !DILocalVariable(name: "completion", arg: 3, scope: !10898, file: !1489, line: 561, type: !10943)
!10950 = !DILocation(line: 0, scope: !10898)
!10951 = !DILocation(line: 566, column: 1, scope: !10898)
!10952 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1667, file: !1667, line: 523, type: !1525, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !10953)
!10953 = !{!10954, !10955, !10956, !10957, !10958}
!10954 = !DILocalVariable(name: "dev", arg: 1, scope: !10952, file: !1667, line: 523, type: !1527)
!10955 = !DILocalVariable(name: "pin", arg: 2, scope: !10952, file: !1667, line: 524, type: !1542)
!10956 = !DILocalVariable(name: "flags", arg: 3, scope: !10952, file: !1667, line: 524, type: !1543)
!10957 = !DILocalVariable(name: "err", scope: !10952, file: !1667, line: 526, type: !103)
!10958 = !DILocalVariable(name: "pincfg", scope: !10952, file: !1667, line: 527, type: !103)
!10959 = !DILocation(line: 0, scope: !10952)
!10960 = !DILocation(line: 527, column: 2, scope: !10952)
!10961 = !DILocation(line: 532, column: 8, scope: !10952)
!10962 = !DILocation(line: 533, column: 10, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10952, file: !1667, line: 533, column: 6)
!10964 = !DILocation(line: 533, column: 6, scope: !10952)
!10965 = !DILocation(line: 543, column: 13, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10952, file: !1667, line: 543, column: 6)
!10967 = !DILocation(line: 543, column: 28, scope: !10966)
!10968 = !DILocation(line: 543, column: 6, scope: !10952)
!10969 = !DILocation(line: 544, column: 14, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10971, file: !1667, line: 544, column: 7)
!10971 = distinct !DILexicalBlock(scope: !10966, file: !1667, line: 543, column: 34)
!10972 = !DILocation(line: 544, column: 39, scope: !10970)
!10973 = !DILocation(line: 544, column: 7, scope: !10971)
!10974 = !DILocation(line: 545, column: 38, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10970, file: !1667, line: 544, column: 45)
!10976 = !DILocation(line: 545, column: 4, scope: !10975)
!10977 = !DILocation(line: 546, column: 3, scope: !10975)
!10978 = !DILocation(line: 546, column: 21, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10970, file: !1667, line: 546, column: 14)
!10980 = !DILocation(line: 546, column: 45, scope: !10979)
!10981 = !DILocation(line: 546, column: 14, scope: !10970)
!10982 = !DILocation(line: 547, column: 40, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10979, file: !1667, line: 546, column: 51)
!10984 = !DILocation(line: 547, column: 4, scope: !10983)
!10985 = !DILocation(line: 548, column: 3, scope: !10983)
!10986 = !DILocation(line: 551, column: 32, scope: !10952)
!10987 = !DILocation(line: 551, column: 37, scope: !10952)
!10988 = !DILocation(line: 551, column: 2, scope: !10952)
!10989 = !DILocation(line: 554, column: 6, scope: !10952)
!10990 = !DILocation(line: 562, column: 1, scope: !10952)
!10991 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1667, file: !1667, line: 410, type: !10992, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !10994)
!10992 = !DISubroutineType(types: !10993)
!10993 = !{!103, !1527, !1354}
!10994 = !{!10995, !10996, !10997, !10999}
!10995 = !DILocalVariable(name: "dev", arg: 1, scope: !10991, file: !1667, line: 410, type: !1527)
!10996 = !DILocalVariable(name: "value", arg: 2, scope: !10991, file: !1667, line: 410, type: !1354)
!10997 = !DILocalVariable(name: "cfg", scope: !10991, file: !1667, line: 412, type: !10998)
!10998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!10999 = !DILocalVariable(name: "gpio", scope: !10991, file: !1667, line: 413, type: !1600)
!11000 = !DILocation(line: 0, scope: !10991)
!11001 = !DILocation(line: 412, column: 45, scope: !10991)
!11002 = !DILocation(line: 413, column: 44, scope: !10991)
!11003 = !DILocation(line: 415, column: 11, scope: !10991)
!11004 = !DILocation(line: 415, column: 9, scope: !10991)
!11005 = !DILocation(line: 417, column: 2, scope: !10991)
!11006 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1667, file: !1667, line: 420, type: !1552, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11007)
!11007 = !{!11008, !11009, !11010, !11011, !11012, !11013}
!11008 = !DILocalVariable(name: "dev", arg: 1, scope: !11006, file: !1667, line: 420, type: !1527)
!11009 = !DILocalVariable(name: "mask", arg: 2, scope: !11006, file: !1667, line: 421, type: !1554)
!11010 = !DILocalVariable(name: "value", arg: 3, scope: !11006, file: !1667, line: 422, type: !1549)
!11011 = !DILocalVariable(name: "cfg", scope: !11006, file: !1667, line: 424, type: !10998)
!11012 = !DILocalVariable(name: "gpio", scope: !11006, file: !1667, line: 425, type: !1600)
!11013 = !DILocalVariable(name: "port_value", scope: !11006, file: !1667, line: 426, type: !111)
!11014 = !DILocation(line: 0, scope: !11006)
!11015 = !DILocation(line: 424, column: 45, scope: !11006)
!11016 = !DILocation(line: 425, column: 44, scope: !11006)
!11017 = !DILocation(line: 430, column: 15, scope: !11006)
!11018 = !DILocation(line: 431, column: 46, scope: !11006)
!11019 = !DILocation(line: 431, column: 44, scope: !11006)
!11020 = !DILocation(line: 431, column: 61, scope: !11006)
!11021 = !DILocation(line: 431, column: 53, scope: !11006)
!11022 = !DILocation(line: 431, column: 2, scope: !11006)
!11023 = !DILocation(line: 435, column: 2, scope: !11006)
!11024 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1667, file: !1667, line: 438, type: !1557, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11025)
!11025 = !{!11026, !11027, !11028, !11029}
!11026 = !DILocalVariable(name: "dev", arg: 1, scope: !11024, file: !1667, line: 438, type: !1527)
!11027 = !DILocalVariable(name: "pins", arg: 2, scope: !11024, file: !1667, line: 439, type: !1554)
!11028 = !DILocalVariable(name: "cfg", scope: !11024, file: !1667, line: 441, type: !10998)
!11029 = !DILocalVariable(name: "gpio", scope: !11024, file: !1667, line: 442, type: !1600)
!11030 = !DILocation(line: 0, scope: !11024)
!11031 = !DILocation(line: 441, column: 45, scope: !11024)
!11032 = !DILocation(line: 442, column: 44, scope: !11024)
!11033 = !DILocation(line: 448, column: 2, scope: !11024)
!11034 = !DILocation(line: 450, column: 2, scope: !11024)
!11035 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1667, file: !1667, line: 453, type: !1557, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11036)
!11036 = !{!11037, !11038, !11039, !11040}
!11037 = !DILocalVariable(name: "dev", arg: 1, scope: !11035, file: !1667, line: 453, type: !1527)
!11038 = !DILocalVariable(name: "pins", arg: 2, scope: !11035, file: !1667, line: 454, type: !1554)
!11039 = !DILocalVariable(name: "cfg", scope: !11035, file: !1667, line: 456, type: !10998)
!11040 = !DILocalVariable(name: "gpio", scope: !11035, file: !1667, line: 457, type: !1600)
!11041 = !DILocation(line: 0, scope: !11035)
!11042 = !DILocation(line: 456, column: 45, scope: !11035)
!11043 = !DILocation(line: 457, column: 44, scope: !11035)
!11044 = !DILocation(line: 467, column: 2, scope: !11035)
!11045 = !DILocation(line: 470, column: 2, scope: !11035)
!11046 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1667, file: !1667, line: 473, type: !1557, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11047)
!11047 = !{!11048, !11049, !11050, !11051}
!11048 = !DILocalVariable(name: "dev", arg: 1, scope: !11046, file: !1667, line: 473, type: !1527)
!11049 = !DILocalVariable(name: "pins", arg: 2, scope: !11046, file: !1667, line: 474, type: !1554)
!11050 = !DILocalVariable(name: "cfg", scope: !11046, file: !1667, line: 476, type: !10998)
!11051 = !DILocalVariable(name: "gpio", scope: !11046, file: !1667, line: 477, type: !1600)
!11052 = !DILocation(line: 0, scope: !11046)
!11053 = !DILocation(line: 476, column: 45, scope: !11046)
!11054 = !DILocation(line: 477, column: 44, scope: !11046)
!11055 = !DILocation(line: 484, column: 2, scope: !11046)
!11056 = !DILocation(line: 487, column: 2, scope: !11046)
!11057 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1667, file: !1667, line: 594, type: !1563, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11058)
!11058 = !{!11059, !11060, !11061, !11062, !11063, !11064, !11066, !11067, !11068}
!11059 = !DILocalVariable(name: "dev", arg: 1, scope: !11057, file: !1667, line: 594, type: !1527)
!11060 = !DILocalVariable(name: "pin", arg: 2, scope: !11057, file: !1667, line: 595, type: !1542)
!11061 = !DILocalVariable(name: "mode", arg: 3, scope: !11057, file: !1667, line: 596, type: !1501)
!11062 = !DILocalVariable(name: "trig", arg: 4, scope: !11057, file: !1667, line: 597, type: !1507)
!11063 = !DILocalVariable(name: "cfg", scope: !11057, file: !1667, line: 599, type: !10998)
!11064 = !DILocalVariable(name: "data", scope: !11057, file: !1667, line: 600, type: !11065)
!11065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!11066 = !DILocalVariable(name: "edge", scope: !11057, file: !1667, line: 601, type: !103)
!11067 = !DILocalVariable(name: "err", scope: !11057, file: !1667, line: 602, type: !103)
!11068 = !DILabel(scope: !11057, name: "exit", file: !1667, line: 643)
!11069 = !DILocation(line: 0, scope: !11057)
!11070 = !DILocation(line: 599, column: 45, scope: !11057)
!11071 = !DILocation(line: 604, column: 6, scope: !11057)
!11072 = !DILocation(line: 605, column: 34, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !1667, line: 605, column: 7)
!11074 = distinct !DILexicalBlock(scope: !11075, file: !1667, line: 604, column: 38)
!11075 = distinct !DILexicalBlock(scope: !11057, file: !1667, line: 604, column: 6)
!11076 = !DILocation(line: 605, column: 7, scope: !11073)
!11077 = !DILocation(line: 605, column: 47, scope: !11073)
!11078 = !DILocation(line: 605, column: 39, scope: !11073)
!11079 = !DILocation(line: 605, column: 7, scope: !11074)
!11080 = !DILocation(line: 606, column: 4, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11073, file: !1667, line: 605, column: 53)
!11082 = !DILocation(line: 607, column: 4, scope: !11081)
!11083 = !DILocation(line: 608, column: 4, scope: !11081)
!11084 = !DILocation(line: 609, column: 3, scope: !11081)
!11085 = !DILocation(line: 600, column: 38, scope: !11057)
!11086 = !DILocation(line: 620, column: 30, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11057, file: !1667, line: 620, column: 6)
!11088 = !DILocation(line: 620, column: 6, scope: !11087)
!11089 = !DILocation(line: 620, column: 57, scope: !11087)
!11090 = !DILocation(line: 620, column: 6, scope: !11057)
!11091 = !DILocation(line: 625, column: 29, scope: !11057)
!11092 = !DILocation(line: 625, column: 2, scope: !11057)
!11093 = !DILocation(line: 627, column: 2, scope: !11057)
!11094 = !DILocation(line: 630, column: 3, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11057, file: !1667, line: 627, column: 16)
!11096 = !DILocation(line: 633, column: 3, scope: !11095)
!11097 = !DILocation(line: 636, column: 3, scope: !11095)
!11098 = !DILocation(line: 639, column: 2, scope: !11057)
!11099 = !DILocation(line: 641, column: 2, scope: !11057)
!11100 = !DILocation(line: 643, column: 1, scope: !11057)
!11101 = !DILocation(line: 644, column: 2, scope: !11057)
!11102 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1667, file: !1667, line: 647, type: !1567, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11103)
!11103 = !{!11104, !11105, !11106, !11107}
!11104 = !DILocalVariable(name: "dev", arg: 1, scope: !11102, file: !1667, line: 647, type: !1527)
!11105 = !DILocalVariable(name: "callback", arg: 2, scope: !11102, file: !1667, line: 648, type: !1569)
!11106 = !DILocalVariable(name: "set", arg: 3, scope: !11102, file: !1667, line: 649, type: !122)
!11107 = !DILocalVariable(name: "data", scope: !11102, file: !1667, line: 651, type: !11065)
!11108 = !DILocation(line: 0, scope: !11102)
!11109 = !DILocation(line: 651, column: 38, scope: !11102)
!11110 = !DILocation(line: 653, column: 37, scope: !11102)
!11111 = !DILocation(line: 653, column: 9, scope: !11102)
!11112 = !DILocation(line: 653, column: 2, scope: !11102)
!11113 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !11114, file: !11114, line: 38, type: !11115, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11118)
!11114 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11115 = !DISubroutineType(types: !11116)
!11116 = !{!103, !11117, !1569, !122}
!11117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!11118 = !{!11119, !11120, !11121}
!11119 = !DILocalVariable(name: "callbacks", arg: 1, scope: !11113, file: !11114, line: 38, type: !11117)
!11120 = !DILocalVariable(name: "callback", arg: 2, scope: !11113, file: !11114, line: 39, type: !1569)
!11121 = !DILocalVariable(name: "set", arg: 3, scope: !11113, file: !11114, line: 40, type: !122)
!11122 = !DILocation(line: 0, scope: !11113)
!11123 = !DILocation(line: 42, column: 2, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11125, file: !11114, line: 42, column: 2)
!11125 = distinct !DILexicalBlock(scope: !11113, file: !11114, line: 42, column: 2)
!11126 = !DILocation(line: 42, column: 2, scope: !11125)
!11127 = !DILocation(line: 42, column: 2, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11124, file: !11114, line: 42, column: 2)
!11129 = !DILocation(line: 43, column: 2, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11131, file: !11114, line: 43, column: 2)
!11131 = distinct !DILexicalBlock(scope: !11113, file: !11114, line: 43, column: 2)
!11132 = !DILocation(line: 43, column: 2, scope: !11131)
!11133 = !DILocation(line: 43, column: 2, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11130, file: !11114, line: 43, column: 2)
!11135 = !DILocation(line: 45, column: 7, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11113, file: !11114, line: 45, column: 6)
!11137 = !DILocation(line: 45, column: 6, scope: !11113)
!11138 = !DILocation(line: 46, column: 56, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !11114, line: 46, column: 7)
!11140 = distinct !DILexicalBlock(scope: !11136, file: !11114, line: 45, column: 38)
!11141 = !DILocation(line: 46, column: 8, scope: !11139)
!11142 = !DILocation(line: 46, column: 7, scope: !11140)
!11143 = !DILocation(line: 51, column: 13, scope: !11136)
!11144 = !DILocation(line: 56, column: 43, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11146, file: !11114, line: 55, column: 11)
!11146 = distinct !DILexicalBlock(scope: !11113, file: !11114, line: 55, column: 6)
!11147 = !DILocation(line: 56, column: 3, scope: !11145)
!11148 = !DILocation(line: 57, column: 2, scope: !11145)
!11149 = !DILocation(line: 60, column: 1, scope: !11113)
!11150 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1574, file: !1574, line: 261, type: !11151, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11153)
!11151 = !DISubroutineType(types: !11152)
!11152 = !{!122, !11117}
!11153 = !{!11154}
!11154 = !DILocalVariable(name: "list", arg: 1, scope: !11150, file: !1574, line: 261, type: !11117)
!11155 = !DILocation(line: 0, scope: !11150)
!11156 = !DILocation(line: 261, column: 1, scope: !11150)
!11157 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1574, file: !1574, line: 417, type: !11158, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11160)
!11158 = !DISubroutineType(types: !11159)
!11159 = !{!122, !11117, !1746}
!11160 = !{!11161, !11162, !11163, !11164}
!11161 = !DILocalVariable(name: "list", arg: 1, scope: !11157, file: !1574, line: 417, type: !11117)
!11162 = !DILocalVariable(name: "node", arg: 2, scope: !11157, file: !1574, line: 417, type: !1746)
!11163 = !DILocalVariable(name: "prev", scope: !11157, file: !1574, line: 417, type: !1746)
!11164 = !DILocalVariable(name: "test", scope: !11157, file: !1574, line: 417, type: !1746)
!11165 = !DILocation(line: 0, scope: !11157)
!11166 = !DILocation(line: 417, column: 1, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11157, file: !1574, line: 417, column: 1)
!11168 = !DILocation(line: 417, column: 1, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11167, file: !1574, line: 417, column: 1)
!11170 = !DILocation(line: 417, column: 1, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11172, file: !1574, line: 417, column: 1)
!11172 = distinct !DILexicalBlock(scope: !11169, file: !1574, line: 417, column: 1)
!11173 = !DILocation(line: 417, column: 1, scope: !11172)
!11174 = distinct !{!11174, !11166, !11166}
!11175 = !DILocation(line: 417, column: 1, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11171, file: !1574, line: 417, column: 1)
!11177 = !DILocation(line: 417, column: 1, scope: !11157)
!11178 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1574, file: !1574, line: 298, type: !11179, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11181)
!11179 = !DISubroutineType(types: !11180)
!11180 = !{null, !11117, !1746}
!11181 = !{!11182, !11183}
!11182 = !DILocalVariable(name: "list", arg: 1, scope: !11178, file: !1574, line: 298, type: !11117)
!11183 = !DILocalVariable(name: "node", arg: 2, scope: !11178, file: !1574, line: 298, type: !1746)
!11184 = !DILocation(line: 0, scope: !11178)
!11185 = !DILocation(line: 298, column: 1, scope: !11178)
!11186 = !DILocation(line: 298, column: 1, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11178, file: !1574, line: 298, column: 1)
!11188 = !DILocation(line: 298, column: 1, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11187, file: !1574, line: 298, column: 1)
!11190 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1574, file: !1574, line: 231, type: !11191, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11193)
!11191 = !DISubroutineType(types: !11192)
!11192 = !{!1746, !11117}
!11193 = !{!11194}
!11194 = !DILocalVariable(name: "list", arg: 1, scope: !11190, file: !1574, line: 231, type: !11117)
!11195 = !DILocation(line: 0, scope: !11190)
!11196 = !DILocation(line: 233, column: 15, scope: !11190)
!11197 = !DILocation(line: 233, column: 2, scope: !11190)
!11198 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1574, file: !1574, line: 209, type: !11199, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11201)
!11199 = !DISubroutineType(types: !11200)
!11200 = !{null, !1746, !1746}
!11201 = !{!11202, !11203}
!11202 = !DILocalVariable(name: "parent", arg: 1, scope: !11198, file: !1574, line: 209, type: !1746)
!11203 = !DILocalVariable(name: "child", arg: 2, scope: !11198, file: !1574, line: 209, type: !1746)
!11204 = !DILocation(line: 0, scope: !11198)
!11205 = !DILocation(line: 211, column: 10, scope: !11198)
!11206 = !DILocation(line: 211, column: 15, scope: !11198)
!11207 = !DILocation(line: 212, column: 1, scope: !11198)
!11208 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1574, file: !1574, line: 214, type: !11179, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11209)
!11209 = !{!11210, !11211}
!11210 = !DILocalVariable(name: "list", arg: 1, scope: !11208, file: !1574, line: 214, type: !11117)
!11211 = !DILocalVariable(name: "node", arg: 2, scope: !11208, file: !1574, line: 214, type: !1746)
!11212 = !DILocation(line: 0, scope: !11208)
!11213 = !DILocation(line: 216, column: 8, scope: !11208)
!11214 = !DILocation(line: 216, column: 13, scope: !11208)
!11215 = !DILocation(line: 217, column: 1, scope: !11208)
!11216 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1574, file: !1574, line: 243, type: !11191, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11217)
!11217 = !{!11218}
!11218 = !DILocalVariable(name: "list", arg: 1, scope: !11216, file: !1574, line: 243, type: !11117)
!11219 = !DILocation(line: 0, scope: !11216)
!11220 = !DILocation(line: 245, column: 15, scope: !11216)
!11221 = !DILocation(line: 245, column: 2, scope: !11216)
!11222 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1574, file: !1574, line: 219, type: !11179, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11223)
!11223 = !{!11224, !11225}
!11224 = !DILocalVariable(name: "list", arg: 1, scope: !11222, file: !1574, line: 219, type: !11117)
!11225 = !DILocalVariable(name: "node", arg: 2, scope: !11222, file: !1574, line: 219, type: !1746)
!11226 = !DILocation(line: 0, scope: !11222)
!11227 = !DILocation(line: 221, column: 8, scope: !11222)
!11228 = !DILocation(line: 221, column: 13, scope: !11222)
!11229 = !DILocation(line: 222, column: 1, scope: !11222)
!11230 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1574, file: !1574, line: 401, type: !11231, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11233)
!11231 = !DISubroutineType(types: !11232)
!11232 = !{null, !11117, !1746, !1746}
!11233 = !{!11234, !11235, !11236}
!11234 = !DILocalVariable(name: "list", arg: 1, scope: !11230, file: !1574, line: 401, type: !11117)
!11235 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11230, file: !1574, line: 401, type: !1746)
!11236 = !DILocalVariable(name: "node", arg: 3, scope: !11230, file: !1574, line: 401, type: !1746)
!11237 = !DILocation(line: 0, scope: !11230)
!11238 = !DILocation(line: 401, column: 1, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11230, file: !1574, line: 401, column: 1)
!11240 = !DILocation(line: 0, scope: !11239)
!11241 = !DILocation(line: 401, column: 1, scope: !11230)
!11242 = !DILocation(line: 401, column: 1, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11239, file: !1574, line: 401, column: 1)
!11244 = !DILocation(line: 401, column: 1, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11243, file: !1574, line: 401, column: 1)
!11246 = !DILocation(line: 401, column: 1, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11245, file: !1574, line: 401, column: 1)
!11248 = !DILocation(line: 401, column: 1, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11239, file: !1574, line: 401, column: 1)
!11250 = !DILocation(line: 401, column: 1, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11249, file: !1574, line: 401, column: 1)
!11252 = !DILocation(line: 401, column: 1, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11251, file: !1574, line: 401, column: 1)
!11254 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1574, file: !1574, line: 285, type: !11255, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11257)
!11255 = !DISubroutineType(types: !11256)
!11256 = !{!1746, !1746}
!11257 = !{!11258}
!11258 = !DILocalVariable(name: "node", arg: 1, scope: !11254, file: !1574, line: 285, type: !1746)
!11259 = !DILocation(line: 0, scope: !11254)
!11260 = !DILocation(line: 285, column: 1, scope: !11254)
!11261 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1574, file: !1574, line: 274, type: !11255, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11262)
!11262 = !{!11263}
!11263 = !DILocalVariable(name: "node", arg: 1, scope: !11261, file: !1574, line: 274, type: !1746)
!11264 = !DILocation(line: 0, scope: !11261)
!11265 = !DILocation(line: 274, column: 1, scope: !11261)
!11266 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1574, file: !1574, line: 204, type: !11255, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11267)
!11267 = !{!11268}
!11268 = !DILocalVariable(name: "node", arg: 1, scope: !11266, file: !1574, line: 204, type: !1746)
!11269 = !DILocation(line: 0, scope: !11266)
!11270 = !DILocation(line: 206, column: 15, scope: !11266)
!11271 = !DILocation(line: 206, column: 2, scope: !11266)
!11272 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1667, file: !1667, line: 342, type: !764, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11273)
!11273 = !{!11274, !11275, !11276}
!11274 = !DILocalVariable(name: "pin", arg: 1, scope: !11272, file: !1667, line: 342, type: !103)
!11275 = !DILocalVariable(name: "line", scope: !11272, file: !1667, line: 344, type: !111)
!11276 = !DILocalVariable(name: "port", scope: !11272, file: !1667, line: 345, type: !103)
!11277 = !DILocation(line: 0, scope: !11272)
!11278 = !DILocation(line: 344, column: 18, scope: !11272)
!11279 = !{i32 983040, i32 0}
!11280 = !DILocation(line: 356, column: 9, scope: !11272)
!11281 = !DILocation(line: 370, column: 2, scope: !11272)
!11282 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1667, file: !1667, line: 37, type: !1218, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11283)
!11283 = !{!11284, !11285, !11286}
!11284 = !DILocalVariable(name: "line", arg: 1, scope: !11282, file: !1667, line: 37, type: !103)
!11285 = !DILocalVariable(name: "arg", arg: 2, scope: !11282, file: !1667, line: 37, type: !102)
!11286 = !DILocalVariable(name: "data", scope: !11282, file: !1667, line: 39, type: !11065)
!11287 = !DILocation(line: 0, scope: !11282)
!11288 = !DILocation(line: 41, column: 29, scope: !11282)
!11289 = !DILocation(line: 41, column: 39, scope: !11282)
!11290 = !DILocation(line: 41, column: 44, scope: !11282)
!11291 = !DILocation(line: 41, column: 2, scope: !11282)
!11292 = !DILocation(line: 42, column: 1, scope: !11282)
!11293 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1667, file: !1667, line: 376, type: !11294, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11296)
!11294 = !DISubroutineType(types: !11295)
!11295 = !{!103, !103, !103}
!11296 = !{!11297, !11298, !11299, !11301, !11302}
!11297 = !DILocalVariable(name: "port", arg: 1, scope: !11293, file: !1667, line: 376, type: !103)
!11298 = !DILocalVariable(name: "pin", arg: 2, scope: !11293, file: !1667, line: 376, type: !103)
!11299 = !DILocalVariable(name: "clk", scope: !11293, file: !1667, line: 386, type: !11300)
!11300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1527)
!11301 = !DILocalVariable(name: "pclken", scope: !11293, file: !1667, line: 387, type: !1793)
!11302 = !DILocalVariable(name: "ret", scope: !11293, file: !1667, line: 396, type: !103)
!11303 = !DILocation(line: 0, scope: !11293)
!11304 = !DILocation(line: 387, column: 2, scope: !11293)
!11305 = !DILocation(line: 387, column: 22, scope: !11293)
!11306 = !DILocation(line: 399, column: 8, scope: !11293)
!11307 = !DILocation(line: 400, column: 10, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11293, file: !1667, line: 400, column: 6)
!11309 = !DILocation(line: 400, column: 6, scope: !11293)
!11310 = !DILocation(line: 405, column: 2, scope: !11293)
!11311 = !DILocation(line: 407, column: 2, scope: !11293)
!11312 = !DILocation(line: 408, column: 1, scope: !11293)
!11313 = distinct !DISubprogram(name: "clock_control_on", scope: !1306, file: !1306, line: 123, type: !1632, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11314)
!11314 = !{!11315, !11316, !11317}
!11315 = !DILocalVariable(name: "dev", arg: 1, scope: !11313, file: !1306, line: 123, type: !1527)
!11316 = !DILocalVariable(name: "sys", arg: 2, scope: !11313, file: !1306, line: 124, type: !1398)
!11317 = !DILocalVariable(name: "api", scope: !11313, file: !1306, line: 126, type: !1625)
!11318 = !DILocation(line: 0, scope: !11313)
!11319 = !DILocation(line: 127, column: 49, scope: !11313)
!11320 = !DILocation(line: 129, column: 14, scope: !11313)
!11321 = !DILocation(line: 129, column: 9, scope: !11313)
!11322 = !DILocation(line: 129, column: 2, scope: !11313)
!11323 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1667, file: !1667, line: 311, type: !10428, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11324)
!11324 = !{!11325, !11326, !11327}
!11325 = !DILocalVariable(name: "port", arg: 1, scope: !11323, file: !1667, line: 311, type: !103)
!11326 = !DILocalVariable(name: "pin", arg: 2, scope: !11323, file: !1667, line: 311, type: !103)
!11327 = !DILocalVariable(name: "line", scope: !11323, file: !1667, line: 313, type: !111)
!11328 = !DILocation(line: 0, scope: !11323)
!11329 = !DILocation(line: 313, column: 18, scope: !11323)
!11330 = !DILocation(line: 337, column: 2, scope: !11323)
!11331 = !DILocation(line: 340, column: 1, scope: !11323)
!11332 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1667, file: !1667, line: 295, type: !11333, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11335)
!11333 = !DISubroutineType(types: !11334)
!11334 = !{!111, !103}
!11335 = !{!11336}
!11336 = !DILocalVariable(name: "pin", arg: 1, scope: !11332, file: !1667, line: 295, type: !103)
!11337 = !DILocation(line: 0, scope: !11332)
!11338 = !DILocation(line: 307, column: 46, scope: !11332)
!11339 = !DILocation(line: 307, column: 27, scope: !11332)
!11340 = !DILocation(line: 307, column: 32, scope: !11332)
!11341 = !DILocation(line: 307, column: 14, scope: !11332)
!11342 = !DILocation(line: 307, column: 39, scope: !11332)
!11343 = !DILocation(line: 307, column: 2, scope: !11332)
!11344 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7565, file: !7565, line: 671, type: !11345, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11347)
!11345 = !DISubroutineType(types: !11346)
!11346 = !{null, !111, !111}
!11347 = !{!11348, !11349}
!11348 = !DILocalVariable(name: "Port", arg: 1, scope: !11344, file: !7565, line: 671, type: !111)
!11349 = !DILocalVariable(name: "Line", arg: 2, scope: !11344, file: !7565, line: 671, type: !111)
!11350 = !DILocation(line: 0, scope: !11344)
!11351 = !DILocation(line: 673, column: 3, scope: !11344)
!11352 = !DILocalVariable(name: "value", arg: 1, scope: !11353, file: !7865, line: 373, type: !111)
!11353 = distinct !DISubprogram(name: "__RBIT", scope: !7865, file: !7865, line: 373, type: !9149, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11354)
!11354 = !{!11352, !11355}
!11355 = !DILocalVariable(name: "result", scope: !11353, file: !7865, line: 375, type: !111)
!11356 = !DILocation(line: 0, scope: !11353, inlinedAt: !11357)
!11357 = distinct !DILocation(line: 673, column: 3, scope: !11344)
!11358 = !DILocation(line: 380, column: 4, scope: !11353, inlinedAt: !11357)
!11359 = !{i64 3549458}
!11360 = !DILocalVariable(name: "value", arg: 1, scope: !11361, file: !7865, line: 403, type: !111)
!11361 = distinct !DISubprogram(name: "__CLZ", scope: !7865, file: !7865, line: 403, type: !11362, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11364)
!11362 = !DISubroutineType(types: !11363)
!11363 = !{!166, !111}
!11364 = !{!11360}
!11365 = !DILocation(line: 0, scope: !11361, inlinedAt: !11366)
!11366 = distinct !DILocation(line: 673, column: 3, scope: !11344)
!11367 = !DILocation(line: 414, column: 7, scope: !11361, inlinedAt: !11366)
!11368 = !DILocation(line: 674, column: 1, scope: !11344)
!11369 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !11114, file: !11114, line: 69, type: !11370, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11372)
!11370 = !DISubroutineType(types: !11371)
!11371 = !{null, !11117, !1527, !111}
!11372 = !{!11373, !11374, !11375, !11376, !11377}
!11373 = !DILocalVariable(name: "list", arg: 1, scope: !11369, file: !11114, line: 69, type: !11117)
!11374 = !DILocalVariable(name: "port", arg: 2, scope: !11369, file: !11114, line: 70, type: !1527)
!11375 = !DILocalVariable(name: "pins", arg: 3, scope: !11369, file: !11114, line: 71, type: !111)
!11376 = !DILocalVariable(name: "cb", scope: !11369, file: !11114, line: 73, type: !1569)
!11377 = !DILocalVariable(name: "tmp", scope: !11369, file: !11114, line: 73, type: !1569)
!11378 = !DILocation(line: 0, scope: !11369)
!11379 = !DILocation(line: 75, column: 2, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11369, file: !11114, line: 75, column: 2)
!11381 = !DILocation(line: 0, scope: !11380)
!11382 = !DILocation(line: 76, column: 11, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11384, file: !11114, line: 76, column: 7)
!11384 = distinct !DILexicalBlock(scope: !11385, file: !11114, line: 75, column: 57)
!11385 = distinct !DILexicalBlock(scope: !11380, file: !11114, line: 75, column: 2)
!11386 = !DILocation(line: 76, column: 20, scope: !11383)
!11387 = !DILocation(line: 76, column: 7, scope: !11384)
!11388 = !DILocation(line: 77, column: 4, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11390, file: !11114, line: 77, column: 4)
!11390 = distinct !DILexicalBlock(scope: !11391, file: !11114, line: 77, column: 4)
!11391 = distinct !DILexicalBlock(scope: !11383, file: !11114, line: 76, column: 28)
!11392 = !DILocation(line: 77, column: 4, scope: !11390)
!11393 = !DILocation(line: 77, column: 4, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11389, file: !11114, line: 77, column: 4)
!11395 = !DILocation(line: 78, column: 4, scope: !11391)
!11396 = !DILocation(line: 79, column: 3, scope: !11391)
!11397 = !DILocation(line: 75, column: 2, scope: !11385)
!11398 = !DILocation(line: 81, column: 1, scope: !11369)
!11399 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7565, file: !7565, line: 710, type: !9149, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11400)
!11400 = !{!11401}
!11401 = !DILocalVariable(name: "Line", arg: 1, scope: !11399, file: !7565, line: 710, type: !111)
!11402 = !DILocation(line: 0, scope: !11399)
!11403 = !DILocation(line: 712, column: 21, scope: !11399)
!11404 = !DILocation(line: 0, scope: !11353, inlinedAt: !11405)
!11405 = distinct !DILocation(line: 712, column: 76, scope: !11399)
!11406 = !DILocation(line: 380, column: 4, scope: !11353, inlinedAt: !11405)
!11407 = !DILocation(line: 0, scope: !11361, inlinedAt: !11408)
!11408 = distinct !DILocation(line: 712, column: 76, scope: !11399)
!11409 = !DILocation(line: 414, column: 7, scope: !11361, inlinedAt: !11408)
!11410 = !DILocation(line: 712, column: 73, scope: !11399)
!11411 = !DILocation(line: 712, column: 3, scope: !11399)
!11412 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !11413, file: !11413, line: 910, type: !11414, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11416)
!11413 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11414 = !DISubroutineType(types: !11415)
!11415 = !{null, !1600, !111}
!11416 = !{!11417, !11418}
!11417 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11412, file: !11413, line: 910, type: !1600)
!11418 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11412, file: !11413, line: 910, type: !111)
!11419 = !DILocation(line: 0, scope: !11412)
!11420 = !DILocation(line: 912, column: 3, scope: !11412)
!11421 = !DILocation(line: 913, column: 1, scope: !11412)
!11422 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !11413, file: !11413, line: 823, type: !11423, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11425)
!11423 = !DISubroutineType(types: !11424)
!11424 = !{!111, !1600}
!11425 = !{!11426}
!11426 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11422, file: !11413, line: 823, type: !1600)
!11427 = !DILocation(line: 0, scope: !11422)
!11428 = !DILocation(line: 825, column: 21, scope: !11422)
!11429 = !DILocation(line: 825, column: 3, scope: !11422)
!11430 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !11413, file: !11413, line: 812, type: !11414, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11431)
!11431 = !{!11432, !11433}
!11432 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11430, file: !11413, line: 812, type: !1600)
!11433 = !DILocalVariable(name: "PortValue", arg: 2, scope: !11430, file: !11413, line: 812, type: !111)
!11434 = !DILocation(line: 0, scope: !11430)
!11435 = !DILocation(line: 814, column: 3, scope: !11430)
!11436 = !DILocation(line: 815, column: 1, scope: !11430)
!11437 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !11413, file: !11413, line: 771, type: !11423, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11438)
!11438 = !{!11439}
!11439 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11437, file: !11413, line: 771, type: !1600)
!11440 = !DILocation(line: 0, scope: !11437)
!11441 = !DILocation(line: 773, column: 21, scope: !11437)
!11442 = !DILocation(line: 773, column: 3, scope: !11437)
!11443 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1667, file: !1667, line: 47, type: !11444, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11446)
!11444 = !DISubroutineType(types: !11445)
!11445 = !{!103, !1543, !744}
!11446 = !{!11447, !11448}
!11447 = !DILocalVariable(name: "flags", arg: 1, scope: !11443, file: !1667, line: 47, type: !1543)
!11448 = !DILocalVariable(name: "pincfg", arg: 2, scope: !11443, file: !1667, line: 47, type: !744)
!11449 = !DILocation(line: 0, scope: !11443)
!11450 = !DILocation(line: 50, column: 13, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11443, file: !1667, line: 50, column: 6)
!11452 = !DILocation(line: 50, column: 28, scope: !11451)
!11453 = !DILocation(line: 50, column: 6, scope: !11443)
!11454 = !DILocation(line: 53, column: 11, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11451, file: !1667, line: 50, column: 34)
!11456 = !DILocation(line: 55, column: 14, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11455, file: !1667, line: 55, column: 7)
!11458 = !DILocation(line: 55, column: 35, scope: !11457)
!11459 = !DILocation(line: 55, column: 7, scope: !11455)
!11460 = !DILocation(line: 56, column: 14, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !1667, line: 56, column: 8)
!11462 = distinct !DILexicalBlock(scope: !11457, file: !1667, line: 55, column: 41)
!11463 = !DILocation(line: 56, column: 8, scope: !11462)
!11464 = !DILocation(line: 0, scope: !11457)
!11465 = !DILocation(line: 66, column: 14, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11455, file: !1667, line: 66, column: 7)
!11467 = !DILocation(line: 66, column: 30, scope: !11466)
!11468 = !DILocation(line: 66, column: 7, scope: !11455)
!11469 = !DILocation(line: 67, column: 12, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11466, file: !1667, line: 66, column: 36)
!11471 = !DILocation(line: 68, column: 3, scope: !11470)
!11472 = !DILocation(line: 68, column: 21, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11466, file: !1667, line: 68, column: 14)
!11474 = !DILocation(line: 68, column: 39, scope: !11473)
!11475 = !DILocation(line: 68, column: 14, scope: !11466)
!11476 = !DILocation(line: 69, column: 12, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11473, file: !1667, line: 68, column: 45)
!11478 = !DILocation(line: 70, column: 3, scope: !11477)
!11479 = !DILocation(line: 72, column: 21, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11451, file: !1667, line: 72, column: 14)
!11481 = !DILocation(line: 72, column: 35, scope: !11480)
!11482 = !DILocation(line: 72, column: 14, scope: !11451)
!11483 = !DILocation(line: 77, column: 14, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11485, file: !1667, line: 77, column: 7)
!11485 = distinct !DILexicalBlock(scope: !11480, file: !1667, line: 72, column: 41)
!11486 = !DILocation(line: 77, column: 30, scope: !11484)
!11487 = !DILocation(line: 77, column: 7, scope: !11485)
!11488 = !DILocation(line: 0, scope: !11451)
!11489 = !DILocation(line: 90, column: 1, scope: !11443)
!11490 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1667, file: !1667, line: 157, type: !11491, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11493)
!11491 = !DISubroutineType(types: !11492)
!11492 = !{null, !1527, !103, !103, !103}
!11493 = !{!11494, !11495, !11496, !11497, !11498, !11499, !11500, !11501, !11502, !11503, !11504}
!11494 = !DILocalVariable(name: "dev", arg: 1, scope: !11490, file: !1667, line: 157, type: !1527)
!11495 = !DILocalVariable(name: "pin", arg: 2, scope: !11490, file: !1667, line: 157, type: !103)
!11496 = !DILocalVariable(name: "conf", arg: 3, scope: !11490, file: !1667, line: 158, type: !103)
!11497 = !DILocalVariable(name: "func", arg: 4, scope: !11490, file: !1667, line: 158, type: !103)
!11498 = !DILocalVariable(name: "cfg", scope: !11490, file: !1667, line: 160, type: !10998)
!11499 = !DILocalVariable(name: "gpio", scope: !11490, file: !1667, line: 161, type: !1600)
!11500 = !DILocalVariable(name: "pin_ll", scope: !11490, file: !1667, line: 163, type: !103)
!11501 = !DILocalVariable(name: "mode", scope: !11490, file: !1667, line: 227, type: !32)
!11502 = !DILocalVariable(name: "otype", scope: !11490, file: !1667, line: 227, type: !32)
!11503 = !DILocalVariable(name: "ospeed", scope: !11490, file: !1667, line: 227, type: !32)
!11504 = !DILocalVariable(name: "pupd", scope: !11490, file: !1667, line: 227, type: !32)
!11505 = !DILocation(line: 0, scope: !11490)
!11506 = !DILocation(line: 160, column: 45, scope: !11490)
!11507 = !DILocation(line: 161, column: 44, scope: !11490)
!11508 = !DILocation(line: 163, column: 15, scope: !11490)
!11509 = !DILocation(line: 229, column: 14, scope: !11490)
!11510 = !DILocation(line: 246, column: 47, scope: !11490)
!11511 = !DILocation(line: 246, column: 2, scope: !11490)
!11512 = !DILocation(line: 248, column: 43, scope: !11490)
!11513 = !DILocation(line: 248, column: 2, scope: !11490)
!11514 = !DILocation(line: 250, column: 40, scope: !11490)
!11515 = !DILocation(line: 250, column: 2, scope: !11490)
!11516 = !DILocation(line: 252, column: 11, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11490, file: !1667, line: 252, column: 6)
!11518 = !DILocation(line: 252, column: 6, scope: !11490)
!11519 = !DILocation(line: 253, column: 11, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11521, file: !1667, line: 253, column: 7)
!11521 = distinct !DILexicalBlock(scope: !11517, file: !1667, line: 252, column: 36)
!11522 = !DILocation(line: 253, column: 7, scope: !11521)
!11523 = !DILocation(line: 254, column: 4, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11520, file: !1667, line: 253, column: 16)
!11525 = !DILocation(line: 255, column: 3, scope: !11524)
!11526 = !DILocation(line: 256, column: 4, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11520, file: !1667, line: 255, column: 10)
!11528 = !DILocation(line: 260, column: 40, scope: !11490)
!11529 = !DILocation(line: 260, column: 2, scope: !11490)
!11530 = !DILocation(line: 265, column: 1, scope: !11490)
!11531 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1667, file: !1667, line: 137, type: !11333, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11532)
!11532 = !{!11533, !11534}
!11533 = !DILocalVariable(name: "pin", arg: 1, scope: !11531, file: !1667, line: 137, type: !103)
!11534 = !DILocalVariable(name: "pinval", scope: !11531, file: !1667, line: 139, type: !111)
!11535 = !DILocation(line: 0, scope: !11531)
!11536 = !DILocation(line: 149, column: 13, scope: !11531)
!11537 = !DILocation(line: 151, column: 2, scope: !11531)
!11538 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !11413, file: !11413, line: 342, type: !11539, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11541)
!11539 = !DISubroutineType(types: !11540)
!11540 = !{null, !1600, !111, !111}
!11541 = !{!11542, !11543, !11544}
!11542 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11538, file: !11413, line: 342, type: !1600)
!11543 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11538, file: !11413, line: 342, type: !111)
!11544 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11538, file: !11413, line: 342, type: !111)
!11545 = !DILocation(line: 0, scope: !11538)
!11546 = !DILocation(line: 344, column: 3, scope: !11538)
!11547 = !DILocation(line: 345, column: 1, scope: !11538)
!11548 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !11413, file: !11413, line: 413, type: !11539, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11549)
!11549 = !{!11550, !11551, !11552}
!11550 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11548, file: !11413, line: 413, type: !1600)
!11551 = !DILocalVariable(name: "Pin", arg: 2, scope: !11548, file: !11413, line: 413, type: !111)
!11552 = !DILocalVariable(name: "Speed", arg: 3, scope: !11548, file: !11413, line: 413, type: !111)
!11553 = !DILocation(line: 0, scope: !11548)
!11554 = !DILocation(line: 415, column: 3, scope: !11548)
!11555 = !DILocation(line: 0, scope: !11353, inlinedAt: !11556)
!11556 = distinct !DILocation(line: 415, column: 3, scope: !11548)
!11557 = !DILocation(line: 380, column: 4, scope: !11353, inlinedAt: !11556)
!11558 = !DILocation(line: 0, scope: !11361, inlinedAt: !11559)
!11559 = distinct !DILocation(line: 415, column: 3, scope: !11548)
!11560 = !DILocation(line: 414, column: 7, scope: !11361, inlinedAt: !11559)
!11561 = !DILocation(line: 0, scope: !11353, inlinedAt: !11562)
!11562 = distinct !DILocation(line: 415, column: 3, scope: !11548)
!11563 = !DILocation(line: 0, scope: !11361, inlinedAt: !11564)
!11564 = distinct !DILocation(line: 415, column: 3, scope: !11548)
!11565 = !DILocation(line: 417, column: 1, scope: !11548)
!11566 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !11413, file: !11413, line: 484, type: !11539, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11567)
!11567 = !{!11568, !11569, !11570}
!11568 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11566, file: !11413, line: 484, type: !1600)
!11569 = !DILocalVariable(name: "Pin", arg: 2, scope: !11566, file: !11413, line: 484, type: !111)
!11570 = !DILocalVariable(name: "Pull", arg: 3, scope: !11566, file: !11413, line: 484, type: !111)
!11571 = !DILocation(line: 0, scope: !11566)
!11572 = !DILocation(line: 486, column: 3, scope: !11566)
!11573 = !DILocation(line: 0, scope: !11353, inlinedAt: !11574)
!11574 = distinct !DILocation(line: 486, column: 3, scope: !11566)
!11575 = !DILocation(line: 380, column: 4, scope: !11353, inlinedAt: !11574)
!11576 = !DILocation(line: 0, scope: !11361, inlinedAt: !11577)
!11577 = distinct !DILocation(line: 486, column: 3, scope: !11566)
!11578 = !DILocation(line: 414, column: 7, scope: !11361, inlinedAt: !11577)
!11579 = !DILocation(line: 0, scope: !11353, inlinedAt: !11580)
!11580 = distinct !DILocation(line: 486, column: 3, scope: !11566)
!11581 = !DILocation(line: 0, scope: !11361, inlinedAt: !11582)
!11582 = distinct !DILocation(line: 486, column: 3, scope: !11566)
!11583 = !DILocation(line: 487, column: 1, scope: !11566)
!11584 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !11413, file: !11413, line: 556, type: !11539, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11585)
!11585 = !{!11586, !11587, !11588}
!11586 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11584, file: !11413, line: 556, type: !1600)
!11587 = !DILocalVariable(name: "Pin", arg: 2, scope: !11584, file: !11413, line: 556, type: !111)
!11588 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11584, file: !11413, line: 556, type: !111)
!11589 = !DILocation(line: 0, scope: !11584)
!11590 = !DILocation(line: 558, column: 3, scope: !11584)
!11591 = !DILocation(line: 0, scope: !11353, inlinedAt: !11592)
!11592 = distinct !DILocation(line: 558, column: 3, scope: !11584)
!11593 = !DILocation(line: 380, column: 4, scope: !11353, inlinedAt: !11592)
!11594 = !DILocation(line: 0, scope: !11361, inlinedAt: !11595)
!11595 = distinct !DILocation(line: 558, column: 3, scope: !11584)
!11596 = !DILocation(line: 414, column: 7, scope: !11361, inlinedAt: !11595)
!11597 = !DILocation(line: 0, scope: !11353, inlinedAt: !11598)
!11598 = distinct !DILocation(line: 558, column: 3, scope: !11584)
!11599 = !DILocation(line: 0, scope: !11361, inlinedAt: !11600)
!11600 = distinct !DILocation(line: 558, column: 3, scope: !11584)
!11601 = !DILocation(line: 560, column: 1, scope: !11584)
!11602 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !11413, file: !11413, line: 633, type: !11539, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11603)
!11603 = !{!11604, !11605, !11606}
!11604 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11602, file: !11413, line: 633, type: !1600)
!11605 = !DILocalVariable(name: "Pin", arg: 2, scope: !11602, file: !11413, line: 633, type: !111)
!11606 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11602, file: !11413, line: 633, type: !111)
!11607 = !DILocation(line: 0, scope: !11602)
!11608 = !DILocation(line: 635, column: 3, scope: !11602)
!11609 = !DILocation(line: 0, scope: !11353, inlinedAt: !11610)
!11610 = distinct !DILocation(line: 635, column: 3, scope: !11602)
!11611 = !DILocation(line: 380, column: 4, scope: !11353, inlinedAt: !11610)
!11612 = !DILocation(line: 0, scope: !11361, inlinedAt: !11613)
!11613 = distinct !DILocation(line: 635, column: 3, scope: !11602)
!11614 = !DILocation(line: 414, column: 7, scope: !11361, inlinedAt: !11613)
!11615 = !DILocation(line: 0, scope: !11353, inlinedAt: !11616)
!11616 = distinct !DILocation(line: 635, column: 3, scope: !11602)
!11617 = !DILocation(line: 0, scope: !11361, inlinedAt: !11618)
!11618 = distinct !DILocation(line: 635, column: 3, scope: !11602)
!11619 = !DILocation(line: 637, column: 1, scope: !11602)
!11620 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !11413, file: !11413, line: 273, type: !11539, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11621)
!11621 = !{!11622, !11623, !11624}
!11622 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11620, file: !11413, line: 273, type: !1600)
!11623 = !DILocalVariable(name: "Pin", arg: 2, scope: !11620, file: !11413, line: 273, type: !111)
!11624 = !DILocalVariable(name: "Mode", arg: 3, scope: !11620, file: !11413, line: 273, type: !111)
!11625 = !DILocation(line: 0, scope: !11620)
!11626 = !DILocation(line: 275, column: 3, scope: !11620)
!11627 = !DILocation(line: 0, scope: !11353, inlinedAt: !11628)
!11628 = distinct !DILocation(line: 275, column: 3, scope: !11620)
!11629 = !DILocation(line: 380, column: 4, scope: !11353, inlinedAt: !11628)
!11630 = !DILocation(line: 0, scope: !11361, inlinedAt: !11631)
!11631 = distinct !DILocation(line: 275, column: 3, scope: !11620)
!11632 = !DILocation(line: 414, column: 7, scope: !11361, inlinedAt: !11631)
!11633 = !DILocation(line: 0, scope: !11353, inlinedAt: !11634)
!11634 = distinct !DILocation(line: 275, column: 3, scope: !11620)
!11635 = !DILocation(line: 0, scope: !11361, inlinedAt: !11636)
!11636 = distinct !DILocation(line: 275, column: 3, scope: !11620)
!11637 = !DILocation(line: 276, column: 1, scope: !11620)
!11638 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1667, file: !1667, line: 698, type: !1680, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11639)
!11639 = !{!11640, !11641, !11642}
!11640 = !DILocalVariable(name: "dev", arg: 1, scope: !11638, file: !1667, line: 698, type: !1527)
!11641 = !DILocalVariable(name: "data", scope: !11638, file: !1667, line: 700, type: !11065)
!11642 = !DILocalVariable(name: "ret", scope: !11638, file: !1667, line: 701, type: !103)
!11643 = !DILocation(line: 0, scope: !11638)
!11644 = !DILocation(line: 700, column: 38, scope: !11638)
!11645 = !DILocation(line: 703, column: 8, scope: !11638)
!11646 = !DILocation(line: 703, column: 12, scope: !11638)
!11647 = !DILocation(line: 705, column: 7, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11638, file: !1667, line: 705, column: 6)
!11649 = !DILocation(line: 705, column: 6, scope: !11638)
!11650 = !DILocation(line: 722, column: 8, scope: !11638)
!11651 = !DILocation(line: 723, column: 10, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11638, file: !1667, line: 723, column: 6)
!11653 = !DILocation(line: 723, column: 6, scope: !11638)
!11654 = !DILocation(line: 731, column: 1, scope: !11638)
!11655 = distinct !DISubprogram(name: "device_is_ready", scope: !10843, file: !10843, line: 47, type: !11656, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11658)
!11656 = !DISubroutineType(types: !11657)
!11657 = !{!122, !1527}
!11658 = !{!11659}
!11659 = !DILocalVariable(name: "dev", arg: 1, scope: !11655, file: !10843, line: 47, type: !1527)
!11660 = !DILocation(line: 0, scope: !11655)
!11661 = !DILocation(line: 55, column: 2, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11655, file: !10843, line: 55, column: 2)
!11663 = !{i64 2155046013}
!11664 = !DILocation(line: 56, column: 9, scope: !11655)
!11665 = !DILocation(line: 56, column: 2, scope: !11655)
!11666 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1667, file: !1667, line: 270, type: !11667, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11669)
!11667 = !DISubroutineType(types: !11668)
!11668 = !{!103, !1527, !122}
!11669 = !{!11670, !11671, !11672, !11673, !11674}
!11670 = !DILocalVariable(name: "dev", arg: 1, scope: !11666, file: !1667, line: 270, type: !1527)
!11671 = !DILocalVariable(name: "on", arg: 2, scope: !11666, file: !1667, line: 270, type: !122)
!11672 = !DILocalVariable(name: "cfg", scope: !11666, file: !1667, line: 272, type: !10998)
!11673 = !DILocalVariable(name: "ret", scope: !11666, file: !1667, line: 273, type: !103)
!11674 = !DILocalVariable(name: "clk", scope: !11666, file: !1667, line: 278, type: !11300)
!11675 = !DILocation(line: 0, scope: !11666)
!11676 = !DILocation(line: 272, column: 45, scope: !11666)
!11677 = !DILocation(line: 282, column: 38, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11679, file: !1667, line: 280, column: 10)
!11679 = distinct !DILexicalBlock(scope: !11666, file: !1667, line: 280, column: 6)
!11680 = !DILocation(line: 282, column: 6, scope: !11678)
!11681 = !DILocation(line: 281, column: 9, scope: !11678)
!11682 = !DILocation(line: 293, column: 1, scope: !11666)
!11683 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !797, file: !797, line: 730, type: !11656, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11684)
!11684 = !{!11685}
!11685 = !DILocalVariable(name: "dev", arg: 1, scope: !11683, file: !797, line: 730, type: !1527)
!11686 = !DILocation(line: 0, scope: !11683)
!11687 = !DILocation(line: 732, column: 9, scope: !11683)
!11688 = !DILocation(line: 732, column: 2, scope: !11683)
!11689 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1667, file: !1667, line: 496, type: !11690, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1498, retainedNodes: !11692)
!11690 = !DISubroutineType(types: !11691)
!11691 = !{!103, !1527, !103, !103, !103}
!11692 = !{!11693, !11694, !11695, !11696, !11697, !11698}
!11693 = !DILocalVariable(name: "dev", arg: 1, scope: !11689, file: !1667, line: 496, type: !1527)
!11694 = !DILocalVariable(name: "pin", arg: 2, scope: !11689, file: !1667, line: 496, type: !103)
!11695 = !DILocalVariable(name: "conf", arg: 3, scope: !11689, file: !1667, line: 496, type: !103)
!11696 = !DILocalVariable(name: "func", arg: 4, scope: !11689, file: !1667, line: 496, type: !103)
!11697 = !DILocalVariable(name: "ret", scope: !11689, file: !1667, line: 498, type: !103)
!11698 = !DILocalVariable(name: "gpio_out", scope: !11699, file: !1667, line: 508, type: !111)
!11699 = distinct !DILexicalBlock(scope: !11700, file: !1667, line: 507, column: 27)
!11700 = distinct !DILexicalBlock(scope: !11689, file: !1667, line: 507, column: 6)
!11701 = !DILocation(line: 0, scope: !11689)
!11702 = !DILocation(line: 505, column: 2, scope: !11689)
!11703 = !DILocation(line: 507, column: 11, scope: !11700)
!11704 = !DILocation(line: 507, column: 6, scope: !11689)
!11705 = !DILocation(line: 508, column: 28, scope: !11699)
!11706 = !DILocation(line: 0, scope: !11699)
!11707 = !DILocation(line: 510, column: 16, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11699, file: !1667, line: 510, column: 7)
!11709 = !DILocation(line: 0, scope: !11708)
!11710 = !DILocation(line: 510, column: 7, scope: !11699)
!11711 = !DILocation(line: 511, column: 4, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11708, file: !1667, line: 510, column: 32)
!11713 = !DILocation(line: 512, column: 3, scope: !11712)
!11714 = !DILocation(line: 513, column: 4, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11716, file: !1667, line: 512, column: 39)
!11716 = distinct !DILexicalBlock(scope: !11708, file: !1667, line: 512, column: 14)
!11717 = !DILocation(line: 514, column: 3, scope: !11715)
!11718 = !DILocation(line: 518, column: 1, scope: !11689)
!11719 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1952, file: !1952, line: 526, type: !1855, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !11720)
!11720 = !{!11721, !11722, !11723}
!11721 = !DILocalVariable(name: "dev", arg: 1, scope: !11719, file: !1952, line: 526, type: !1857)
!11722 = !DILocalVariable(name: "c", arg: 2, scope: !11719, file: !1952, line: 526, type: !1459)
!11723 = !DILocalVariable(name: "config", scope: !11719, file: !1952, line: 528, type: !11724)
!11724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!11725 = !DILocation(line: 0, scope: !11719)
!11726 = !DILocation(line: 528, column: 48, scope: !11719)
!11727 = !DILocation(line: 531, column: 40, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11719, file: !1952, line: 531, column: 6)
!11729 = !DILocation(line: 531, column: 6, scope: !11728)
!11730 = !DILocation(line: 531, column: 6, scope: !11719)
!11731 = !DILocation(line: 532, column: 34, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11728, file: !1952, line: 531, column: 48)
!11733 = !DILocation(line: 532, column: 3, scope: !11732)
!11734 = !DILocation(line: 533, column: 2, scope: !11732)
!11735 = !DILocation(line: 539, column: 42, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11719, file: !1952, line: 539, column: 6)
!11737 = !DILocation(line: 539, column: 7, scope: !11736)
!11738 = !DILocation(line: 539, column: 6, scope: !11719)
!11739 = !DILocation(line: 543, column: 52, scope: !11719)
!11740 = !DILocation(line: 543, column: 22, scope: !11719)
!11741 = !DILocation(line: 543, column: 5, scope: !11719)
!11742 = !DILocation(line: 545, column: 2, scope: !11719)
!11743 = !DILocation(line: 546, column: 1, scope: !11719)
!11744 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1952, file: !1952, line: 548, type: !1874, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !11745)
!11745 = !{!11746, !11747, !11748, !11749}
!11746 = !DILocalVariable(name: "dev", arg: 1, scope: !11744, file: !1952, line: 548, type: !1857)
!11747 = !DILocalVariable(name: "c", arg: 2, scope: !11744, file: !1952, line: 549, type: !167)
!11748 = !DILocalVariable(name: "config", scope: !11744, file: !1952, line: 551, type: !11724)
!11749 = !DILocalVariable(name: "key", scope: !11744, file: !1952, line: 555, type: !32)
!11750 = !DILocation(line: 0, scope: !11744)
!11751 = !DILocation(line: 551, column: 48, scope: !11744)
!11752 = !DILocation(line: 562, column: 2, scope: !11744)
!11753 = !DILocation(line: 563, column: 41, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11755, file: !1952, line: 563, column: 7)
!11755 = distinct !DILexicalBlock(scope: !11744, file: !1952, line: 562, column: 12)
!11756 = !DILocation(line: 563, column: 7, scope: !11754)
!11757 = !DILocation(line: 563, column: 7, scope: !11755)
!11758 = !DILocation(line: 55, column: 2, scope: !11759, inlinedAt: !11763)
!11759 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7544, file: !7544, line: 42, type: !7545, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !11760)
!11760 = !{!11761, !11762}
!11761 = !DILocalVariable(name: "key", scope: !11759, file: !7544, line: 44, type: !32)
!11762 = !DILocalVariable(name: "tmp", scope: !11759, file: !7544, line: 53, type: !32)
!11763 = distinct !DILocation(line: 564, column: 10, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11754, file: !1952, line: 563, column: 49)
!11765 = !{i64 2275129}
!11766 = !DILocation(line: 0, scope: !11759, inlinedAt: !11763)
!11767 = !DILocation(line: 565, column: 42, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11764, file: !1952, line: 565, column: 8)
!11769 = !DILocation(line: 565, column: 8, scope: !11768)
!11770 = !DILocation(line: 565, column: 8, scope: !11764)
!11771 = !DILocalVariable(name: "key", arg: 1, scope: !11772, file: !7544, line: 84, type: !32)
!11772 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7544, file: !7544, line: 84, type: !7555, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !11773)
!11773 = !{!11771}
!11774 = !DILocation(line: 0, scope: !11772, inlinedAt: !11775)
!11775 = distinct !DILocation(line: 568, column: 4, scope: !11764)
!11776 = !DILocation(line: 95, column: 2, scope: !11772, inlinedAt: !11775)
!11777 = !{i64 2275946}
!11778 = !DILocation(line: 569, column: 3, scope: !11764)
!11779 = distinct !{!11779, !11752, !11780}
!11780 = !DILocation(line: 570, column: 2, scope: !11744)
!11781 = !DILocation(line: 592, column: 33, scope: !11744)
!11782 = !DILocation(line: 592, column: 2, scope: !11744)
!11783 = !DILocation(line: 0, scope: !11772, inlinedAt: !11784)
!11784 = distinct !DILocation(line: 593, column: 2, scope: !11744)
!11785 = !DILocation(line: 95, column: 2, scope: !11772, inlinedAt: !11784)
!11786 = !DILocation(line: 594, column: 1, scope: !11744)
!11787 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1952, file: !1952, line: 596, type: !1878, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !11788)
!11788 = !{!11789, !11790, !11791}
!11789 = !DILocalVariable(name: "dev", arg: 1, scope: !11787, file: !1952, line: 596, type: !1857)
!11790 = !DILocalVariable(name: "config", scope: !11787, file: !1952, line: 598, type: !11724)
!11791 = !DILocalVariable(name: "err", scope: !11787, file: !1952, line: 599, type: !111)
!11792 = !DILocation(line: 0, scope: !11787)
!11793 = !DILocation(line: 598, column: 48, scope: !11787)
!11794 = !DILocation(line: 606, column: 40, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11787, file: !1952, line: 606, column: 6)
!11796 = !DILocation(line: 606, column: 6, scope: !11795)
!11797 = !DILocation(line: 606, column: 6, scope: !11787)
!11798 = !DILocation(line: 610, column: 39, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11787, file: !1952, line: 610, column: 6)
!11800 = !DILocation(line: 610, column: 6, scope: !11799)
!11801 = !DILocation(line: 610, column: 6, scope: !11787)
!11802 = !DILocation(line: 614, column: 39, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11787, file: !1952, line: 614, column: 6)
!11804 = !DILocation(line: 614, column: 6, scope: !11803)
!11805 = !DILocation(line: 614, column: 6, scope: !11787)
!11806 = !DILocation(line: 619, column: 40, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11787, file: !1952, line: 619, column: 6)
!11808 = !DILocation(line: 619, column: 6, scope: !11807)
!11809 = !DILocation(line: 619, column: 6, scope: !11787)
!11810 = !DILocation(line: 623, column: 10, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11787, file: !1952, line: 623, column: 6)
!11812 = !DILocation(line: 623, column: 6, scope: !11787)
!11813 = !DILocation(line: 624, column: 34, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11811, file: !1952, line: 623, column: 24)
!11815 = !DILocation(line: 624, column: 3, scope: !11814)
!11816 = !DILocation(line: 625, column: 2, scope: !11814)
!11817 = !DILocation(line: 632, column: 10, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11787, file: !1952, line: 632, column: 6)
!11819 = !DILocation(line: 632, column: 6, scope: !11787)
!11820 = !DILocation(line: 633, column: 34, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11818, file: !1952, line: 632, column: 32)
!11822 = !DILocation(line: 633, column: 3, scope: !11821)
!11823 = !DILocation(line: 634, column: 2, scope: !11821)
!11824 = !DILocation(line: 636, column: 10, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11787, file: !1952, line: 636, column: 6)
!11826 = !DILocation(line: 636, column: 6, scope: !11787)
!11827 = !DILocation(line: 637, column: 33, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11825, file: !1952, line: 636, column: 31)
!11829 = !DILocation(line: 637, column: 3, scope: !11828)
!11830 = !DILocation(line: 638, column: 2, scope: !11828)
!11831 = !DILocation(line: 640, column: 10, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11787, file: !1952, line: 640, column: 6)
!11833 = !DILocation(line: 640, column: 6, scope: !11787)
!11834 = !DILocation(line: 641, column: 33, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11832, file: !1952, line: 640, column: 32)
!11836 = !DILocation(line: 641, column: 3, scope: !11835)
!11837 = !DILocation(line: 642, column: 2, scope: !11835)
!11838 = !DILocation(line: 646, column: 32, scope: !11787)
!11839 = !DILocation(line: 646, column: 2, scope: !11787)
!11840 = !DILocation(line: 648, column: 2, scope: !11787)
!11841 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1952, file: !1952, line: 419, type: !1882, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !11842)
!11842 = !{!11843, !11844, !11845, !11846, !11848, !11849, !11850, !11851}
!11843 = !DILocalVariable(name: "dev", arg: 1, scope: !11841, file: !1952, line: 419, type: !1857)
!11844 = !DILocalVariable(name: "cfg", arg: 2, scope: !11841, file: !1952, line: 420, type: !1884)
!11845 = !DILocalVariable(name: "config", scope: !11841, file: !1952, line: 422, type: !11724)
!11846 = !DILocalVariable(name: "data", scope: !11841, file: !1952, line: 423, type: !11847)
!11847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!11848 = !DILocalVariable(name: "parity", scope: !11841, file: !1952, line: 424, type: !8141)
!11849 = !DILocalVariable(name: "stopbits", scope: !11841, file: !1952, line: 425, type: !8141)
!11850 = !DILocalVariable(name: "databits", scope: !11841, file: !1952, line: 426, type: !8141)
!11851 = !DILocalVariable(name: "flowctrl", scope: !11841, file: !1952, line: 428, type: !8141)
!11852 = !DILocation(line: 0, scope: !11841)
!11853 = !DILocation(line: 422, column: 48, scope: !11841)
!11854 = !DILocation(line: 423, column: 38, scope: !11841)
!11855 = !DILocation(line: 424, column: 56, scope: !11841)
!11856 = !DILocation(line: 424, column: 51, scope: !11841)
!11857 = !DILocation(line: 424, column: 26, scope: !11841)
!11858 = !DILocation(line: 425, column: 60, scope: !11841)
!11859 = !DILocation(line: 425, column: 55, scope: !11841)
!11860 = !DILocation(line: 425, column: 28, scope: !11841)
!11861 = !DILocation(line: 426, column: 60, scope: !11841)
!11862 = !DILocation(line: 426, column: 55, scope: !11841)
!11863 = !DILocation(line: 426, column: 28, scope: !11841)
!11864 = !DILocation(line: 428, column: 58, scope: !11841)
!11865 = !DILocation(line: 428, column: 53, scope: !11841)
!11866 = !DILocation(line: 428, column: 28, scope: !11841)
!11867 = !DILocation(line: 431, column: 44, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11841, file: !1952, line: 431, column: 6)
!11869 = !DILocation(line: 438, column: 22, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11841, file: !1952, line: 437, column: 6)
!11871 = !DILocation(line: 437, column: 6, scope: !11841)
!11872 = !DILocation(line: 448, column: 6, scope: !11841)
!11873 = !DILocation(line: 465, column: 47, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11841, file: !1952, line: 465, column: 6)
!11875 = !DILocation(line: 475, column: 21, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11841, file: !1952, line: 475, column: 6)
!11877 = !DILocation(line: 475, column: 6, scope: !11841)
!11878 = !DILocation(line: 476, column: 8, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11880, file: !1952, line: 476, column: 7)
!11880 = distinct !DILexicalBlock(scope: !11876, file: !1952, line: 475, column: 49)
!11881 = !DILocation(line: 477, column: 34, scope: !11879)
!11882 = !DILocation(line: 476, column: 7, scope: !11880)
!11883 = !DILocation(line: 482, column: 27, scope: !11841)
!11884 = !DILocation(line: 482, column: 2, scope: !11841)
!11885 = !DILocation(line: 484, column: 16, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11841, file: !1952, line: 484, column: 6)
!11887 = !DILocation(line: 484, column: 13, scope: !11886)
!11888 = !DILocation(line: 484, column: 6, scope: !11841)
!11889 = !DILocation(line: 485, column: 3, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11886, file: !1952, line: 484, column: 44)
!11891 = !DILocation(line: 486, column: 2, scope: !11890)
!11892 = !DILocation(line: 488, column: 18, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11841, file: !1952, line: 488, column: 6)
!11894 = !DILocation(line: 488, column: 15, scope: !11893)
!11895 = !DILocation(line: 488, column: 6, scope: !11841)
!11896 = !DILocation(line: 489, column: 3, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11893, file: !1952, line: 488, column: 48)
!11898 = !DILocation(line: 490, column: 2, scope: !11897)
!11899 = !DILocation(line: 492, column: 18, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11841, file: !1952, line: 492, column: 6)
!11901 = !DILocation(line: 492, column: 15, scope: !11900)
!11902 = !DILocation(line: 492, column: 6, scope: !11841)
!11903 = !DILocation(line: 493, column: 3, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11900, file: !1952, line: 492, column: 48)
!11905 = !DILocation(line: 494, column: 2, scope: !11904)
!11906 = !DILocation(line: 496, column: 18, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11841, file: !1952, line: 496, column: 6)
!11908 = !DILocation(line: 496, column: 15, scope: !11907)
!11909 = !DILocation(line: 496, column: 6, scope: !11841)
!11910 = !DILocation(line: 497, column: 3, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11907, file: !1952, line: 496, column: 46)
!11912 = !DILocation(line: 498, column: 2, scope: !11911)
!11913 = !DILocation(line: 500, column: 11, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11841, file: !1952, line: 500, column: 6)
!11915 = !DILocation(line: 500, column: 29, scope: !11914)
!11916 = !DILocation(line: 500, column: 20, scope: !11914)
!11917 = !DILocation(line: 500, column: 6, scope: !11841)
!11918 = !DILocation(line: 501, column: 3, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11914, file: !1952, line: 500, column: 40)
!11920 = !DILocation(line: 502, column: 26, scope: !11919)
!11921 = !DILocation(line: 502, column: 19, scope: !11919)
!11922 = !DILocation(line: 503, column: 2, scope: !11919)
!11923 = !DILocation(line: 505, column: 26, scope: !11841)
!11924 = !DILocation(line: 505, column: 2, scope: !11841)
!11925 = !DILocation(line: 506, column: 2, scope: !11841)
!11926 = !DILocation(line: 507, column: 1, scope: !11841)
!11927 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1952, file: !1952, line: 509, type: !1895, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !11928)
!11928 = !{!11929, !11930, !11931}
!11929 = !DILocalVariable(name: "dev", arg: 1, scope: !11927, file: !1952, line: 509, type: !1857)
!11930 = !DILocalVariable(name: "cfg", arg: 2, scope: !11927, file: !1952, line: 510, type: !1897)
!11931 = !DILocalVariable(name: "data", scope: !11927, file: !1952, line: 512, type: !11847)
!11932 = !DILocation(line: 0, scope: !11927)
!11933 = !DILocation(line: 512, column: 38, scope: !11927)
!11934 = !DILocation(line: 514, column: 24, scope: !11927)
!11935 = !DILocation(line: 514, column: 7, scope: !11927)
!11936 = !DILocation(line: 514, column: 16, scope: !11927)
!11937 = !DILocation(line: 515, column: 41, scope: !11927)
!11938 = !{i32 0, i32 1537}
!11939 = !DILocation(line: 515, column: 16, scope: !11927)
!11940 = !DILocation(line: 515, column: 7, scope: !11927)
!11941 = !DILocation(line: 515, column: 14, scope: !11927)
!11942 = !DILocation(line: 517, column: 3, scope: !11927)
!11943 = !{i32 0, i32 12289}
!11944 = !DILocation(line: 516, column: 19, scope: !11927)
!11945 = !DILocation(line: 516, column: 7, scope: !11927)
!11946 = !DILocation(line: 516, column: 17, scope: !11927)
!11947 = !DILocation(line: 519, column: 3, scope: !11927)
!11948 = !DILocation(line: 519, column: 33, scope: !11927)
!11949 = !DILocation(line: 518, column: 19, scope: !11927)
!11950 = !DILocation(line: 518, column: 7, scope: !11927)
!11951 = !DILocation(line: 518, column: 17, scope: !11927)
!11952 = !DILocation(line: 521, column: 3, scope: !11927)
!11953 = !{i32 0, i32 769}
!11954 = !DILocation(line: 520, column: 19, scope: !11927)
!11955 = !DILocation(line: 520, column: 7, scope: !11927)
!11956 = !DILocation(line: 520, column: 17, scope: !11927)
!11957 = !DILocation(line: 522, column: 2, scope: !11927)
!11958 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1952, file: !1952, line: 205, type: !11959, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !11961)
!11959 = !DISubroutineType(types: !11960)
!11960 = !{!111, !1857}
!11961 = !{!11962, !11963}
!11962 = !DILocalVariable(name: "dev", arg: 1, scope: !11958, file: !1952, line: 205, type: !1857)
!11963 = !DILocalVariable(name: "config", scope: !11958, file: !1952, line: 207, type: !11724)
!11964 = !DILocation(line: 0, scope: !11958)
!11965 = !DILocation(line: 207, column: 48, scope: !11958)
!11966 = !DILocation(line: 209, column: 36, scope: !11958)
!11967 = !DILocation(line: 209, column: 9, scope: !11958)
!11968 = !DILocation(line: 209, column: 2, scope: !11958)
!11969 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1952, file: !1952, line: 270, type: !11970, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !11972)
!11970 = !DISubroutineType(types: !11971)
!11971 = !{!1823, !111}
!11972 = !{!11973}
!11973 = !DILocalVariable(name: "parity", arg: 1, scope: !11969, file: !1952, line: 270, type: !111)
!11974 = !DILocation(line: 0, scope: !11969)
!11975 = !DILocation(line: 272, column: 2, scope: !11969)
!11976 = !DILocation(line: 281, column: 1, scope: !11969)
!11977 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1952, file: !1952, line: 220, type: !11959, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !11978)
!11978 = !{!11979, !11980}
!11979 = !DILocalVariable(name: "dev", arg: 1, scope: !11977, file: !1952, line: 220, type: !1857)
!11980 = !DILocalVariable(name: "config", scope: !11977, file: !1952, line: 222, type: !11724)
!11981 = !DILocation(line: 0, scope: !11977)
!11982 = !DILocation(line: 222, column: 48, scope: !11977)
!11983 = !DILocation(line: 224, column: 44, scope: !11977)
!11984 = !DILocation(line: 224, column: 9, scope: !11977)
!11985 = !DILocation(line: 224, column: 2, scope: !11977)
!11986 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1952, file: !1952, line: 304, type: !11987, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !11989)
!11987 = !DISubroutineType(types: !11988)
!11988 = !{!1837, !111}
!11989 = !{!11990}
!11990 = !DILocalVariable(name: "sb", arg: 1, scope: !11986, file: !1952, line: 304, type: !111)
!11991 = !DILocation(line: 0, scope: !11986)
!11992 = !DILocation(line: 306, column: 2, scope: !11986)
!11993 = !DILocation(line: 0, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11986, file: !1952, line: 306, column: 14)
!11995 = !DILocation(line: 323, column: 1, scope: !11986)
!11996 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1952, file: !1952, line: 235, type: !11959, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !11997)
!11997 = !{!11998, !11999}
!11998 = !DILocalVariable(name: "dev", arg: 1, scope: !11996, file: !1952, line: 235, type: !1857)
!11999 = !DILocalVariable(name: "config", scope: !11996, file: !1952, line: 237, type: !11724)
!12000 = !DILocation(line: 0, scope: !11996)
!12001 = !DILocation(line: 237, column: 48, scope: !11996)
!12002 = !DILocation(line: 239, column: 39, scope: !11996)
!12003 = !DILocation(line: 239, column: 9, scope: !11996)
!12004 = !DILocation(line: 239, column: 2, scope: !11996)
!12005 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1952, file: !1952, line: 355, type: !12006, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12008)
!12006 = !DISubroutineType(types: !12007)
!12007 = !{!1830, !111, !111}
!12008 = !{!12009, !12010}
!12009 = !DILocalVariable(name: "db", arg: 1, scope: !12005, file: !1952, line: 355, type: !111)
!12010 = !DILocalVariable(name: "p", arg: 2, scope: !12005, file: !1952, line: 356, type: !111)
!12011 = !DILocation(line: 0, scope: !12005)
!12012 = !DILocation(line: 358, column: 2, scope: !12005)
!12013 = !DILocation(line: 384, column: 1, scope: !12005)
!12014 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1952, file: !1952, line: 250, type: !11959, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12015)
!12015 = !{!12016, !12017}
!12016 = !DILocalVariable(name: "dev", arg: 1, scope: !12014, file: !1952, line: 250, type: !1857)
!12017 = !DILocalVariable(name: "config", scope: !12014, file: !1952, line: 252, type: !11724)
!12018 = !DILocation(line: 0, scope: !12014)
!12019 = !DILocation(line: 252, column: 48, scope: !12014)
!12020 = !DILocation(line: 254, column: 40, scope: !12014)
!12021 = !DILocation(line: 254, column: 9, scope: !12014)
!12022 = !DILocation(line: 254, column: 2, scope: !12014)
!12023 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1952, file: !1952, line: 409, type: !12024, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12026)
!12024 = !DISubroutineType(types: !12025)
!12025 = !{!1843, !111}
!12026 = !{!12027}
!12027 = !DILocalVariable(name: "fc", arg: 1, scope: !12023, file: !1952, line: 409, type: !111)
!12028 = !DILocation(line: 0, scope: !12023)
!12029 = !DILocation(line: 411, column: 9, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12023, file: !1952, line: 411, column: 6)
!12031 = !DILocation(line: 416, column: 1, scope: !12023)
!12032 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !12033, file: !12033, line: 967, type: !12034, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12036)
!12033 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12034 = !DISubroutineType(types: !12035)
!12035 = !{!111, !1898}
!12036 = !{!12037}
!12037 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12032, file: !12033, line: 967, type: !1898)
!12038 = !DILocation(line: 0, scope: !12032)
!12039 = !DILocation(line: 969, column: 21, scope: !12032)
!12040 = !DILocation(line: 969, column: 3, scope: !12032)
!12041 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !12033, file: !12033, line: 601, type: !12034, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12042)
!12042 = !{!12043}
!12043 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12041, file: !12033, line: 601, type: !1898)
!12044 = !DILocation(line: 0, scope: !12041)
!12045 = !DILocation(line: 603, column: 21, scope: !12041)
!12046 = !DILocation(line: 603, column: 3, scope: !12041)
!12047 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !12033, file: !12033, line: 820, type: !12034, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12048)
!12048 = !{!12049}
!12049 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12047, file: !12033, line: 820, type: !1898)
!12050 = !DILocation(line: 0, scope: !12047)
!12051 = !DILocation(line: 822, column: 21, scope: !12047)
!12052 = !DILocation(line: 822, column: 3, scope: !12047)
!12053 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !12033, file: !12033, line: 547, type: !12034, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12054)
!12054 = !{!12055}
!12055 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12053, file: !12033, line: 547, type: !1898)
!12056 = !DILocation(line: 0, scope: !12053)
!12057 = !DILocation(line: 549, column: 21, scope: !12053)
!12058 = !DILocation(line: 549, column: 3, scope: !12053)
!12059 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1952, file: !1952, line: 257, type: !12060, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12062)
!12060 = !DISubroutineType(types: !12061)
!12061 = !{!111, !1823}
!12062 = !{!12063}
!12063 = !DILocalVariable(name: "parity", arg: 1, scope: !12059, file: !1952, line: 257, type: !1823)
!12064 = !DILocation(line: 0, scope: !12059)
!12065 = !DILocation(line: 259, column: 2, scope: !12059)
!12066 = !DILocation(line: 268, column: 1, scope: !12059)
!12067 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1952, file: !1952, line: 283, type: !12068, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12070)
!12068 = !DISubroutineType(types: !12069)
!12069 = !{!111, !1837}
!12070 = !{!12071}
!12071 = !DILocalVariable(name: "sb", arg: 1, scope: !12067, file: !1952, line: 283, type: !1837)
!12072 = !DILocation(line: 0, scope: !12067)
!12073 = !DILocation(line: 285, column: 2, scope: !12067)
!12074 = !DILocation(line: 0, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12067, file: !1952, line: 285, column: 14)
!12076 = !DILocation(line: 302, column: 1, scope: !12067)
!12077 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1952, file: !1952, line: 325, type: !12078, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12080)
!12078 = !DISubroutineType(types: !12079)
!12079 = !{!111, !1830, !1823}
!12080 = !{!12081, !12082}
!12081 = !DILocalVariable(name: "db", arg: 1, scope: !12077, file: !1952, line: 325, type: !1830)
!12082 = !DILocalVariable(name: "p", arg: 2, scope: !12077, file: !1952, line: 326, type: !1823)
!12083 = !DILocation(line: 0, scope: !12077)
!12084 = !DILocation(line: 328, column: 2, scope: !12077)
!12085 = !DILocation(line: 353, column: 1, scope: !12077)
!12086 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1952, file: !1952, line: 393, type: !12087, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12089)
!12087 = !DISubroutineType(types: !12088)
!12088 = !{!111, !1843}
!12089 = !{!12090}
!12090 = !DILocalVariable(name: "fc", arg: 1, scope: !12086, file: !1952, line: 393, type: !1843)
!12091 = !DILocation(line: 0, scope: !12086)
!12092 = !DILocation(line: 395, column: 9, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12086, file: !1952, line: 395, column: 6)
!12094 = !DILocation(line: 400, column: 1, scope: !12086)
!12095 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !12033, file: !12033, line: 424, type: !12096, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12098)
!12096 = !DISubroutineType(types: !12097)
!12097 = !{null, !1898}
!12098 = !{!12099}
!12099 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12095, file: !12033, line: 424, type: !1898)
!12100 = !DILocation(line: 0, scope: !12095)
!12101 = !DILocation(line: 426, column: 3, scope: !12095)
!12102 = !DILocation(line: 427, column: 1, scope: !12095)
!12103 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1952, file: !1952, line: 197, type: !12104, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12106)
!12104 = !DISubroutineType(types: !12105)
!12105 = !{null, !1857, !111}
!12106 = !{!12107, !12108, !12109}
!12107 = !DILocalVariable(name: "dev", arg: 1, scope: !12103, file: !1952, line: 197, type: !1857)
!12108 = !DILocalVariable(name: "parity", arg: 2, scope: !12103, file: !1952, line: 198, type: !111)
!12109 = !DILocalVariable(name: "config", scope: !12103, file: !1952, line: 200, type: !11724)
!12110 = !DILocation(line: 0, scope: !12103)
!12111 = !DILocation(line: 200, column: 48, scope: !12103)
!12112 = !DILocation(line: 202, column: 29, scope: !12103)
!12113 = !DILocation(line: 202, column: 2, scope: !12103)
!12114 = !DILocation(line: 203, column: 1, scope: !12103)
!12115 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1952, file: !1952, line: 212, type: !12104, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12116)
!12116 = !{!12117, !12118, !12119}
!12117 = !DILocalVariable(name: "dev", arg: 1, scope: !12115, file: !1952, line: 212, type: !1857)
!12118 = !DILocalVariable(name: "stopbits", arg: 2, scope: !12115, file: !1952, line: 213, type: !111)
!12119 = !DILocalVariable(name: "config", scope: !12115, file: !1952, line: 215, type: !11724)
!12120 = !DILocation(line: 0, scope: !12115)
!12121 = !DILocation(line: 215, column: 48, scope: !12115)
!12122 = !DILocation(line: 217, column: 37, scope: !12115)
!12123 = !DILocation(line: 217, column: 2, scope: !12115)
!12124 = !DILocation(line: 218, column: 1, scope: !12115)
!12125 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1952, file: !1952, line: 227, type: !12104, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12126)
!12126 = !{!12127, !12128, !12129}
!12127 = !DILocalVariable(name: "dev", arg: 1, scope: !12125, file: !1952, line: 227, type: !1857)
!12128 = !DILocalVariable(name: "databits", arg: 2, scope: !12125, file: !1952, line: 228, type: !111)
!12129 = !DILocalVariable(name: "config", scope: !12125, file: !1952, line: 230, type: !11724)
!12130 = !DILocation(line: 0, scope: !12125)
!12131 = !DILocation(line: 230, column: 48, scope: !12125)
!12132 = !DILocation(line: 232, column: 32, scope: !12125)
!12133 = !DILocation(line: 232, column: 2, scope: !12125)
!12134 = !DILocation(line: 233, column: 1, scope: !12125)
!12135 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1952, file: !1952, line: 242, type: !12104, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12136)
!12136 = !{!12137, !12138, !12139}
!12137 = !DILocalVariable(name: "dev", arg: 1, scope: !12135, file: !1952, line: 242, type: !1857)
!12138 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !12135, file: !1952, line: 243, type: !111)
!12139 = !DILocalVariable(name: "config", scope: !12135, file: !1952, line: 245, type: !11724)
!12140 = !DILocation(line: 0, scope: !12135)
!12141 = !DILocation(line: 245, column: 48, scope: !12135)
!12142 = !DILocation(line: 247, column: 33, scope: !12135)
!12143 = !DILocation(line: 247, column: 2, scope: !12135)
!12144 = !DILocation(line: 248, column: 1, scope: !12135)
!12145 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1952, file: !1952, line: 107, type: !12104, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12146)
!12146 = !{!12147, !12148, !12149, !12150, !12151}
!12147 = !DILocalVariable(name: "dev", arg: 1, scope: !12145, file: !1952, line: 107, type: !1857)
!12148 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !12145, file: !1952, line: 107, type: !111)
!12149 = !DILocalVariable(name: "config", scope: !12145, file: !1952, line: 109, type: !11724)
!12150 = !DILocalVariable(name: "data", scope: !12145, file: !1952, line: 110, type: !11847)
!12151 = !DILocalVariable(name: "clock_rate", scope: !12145, file: !1952, line: 112, type: !111)
!12152 = !DILocation(line: 0, scope: !12145)
!12153 = !DILocation(line: 109, column: 48, scope: !12145)
!12154 = !DILocation(line: 110, column: 38, scope: !12145)
!12155 = !DILocation(line: 112, column: 2, scope: !12145)
!12156 = !DILocation(line: 123, column: 36, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12158, file: !1952, line: 123, column: 7)
!12158 = distinct !DILexicalBlock(scope: !12159, file: !1952, line: 122, column: 9)
!12159 = distinct !DILexicalBlock(scope: !12145, file: !1952, line: 115, column: 6)
!12160 = !DILocation(line: 124, column: 42, scope: !12157)
!12161 = !DILocation(line: 123, column: 7, scope: !12157)
!12162 = !DILocation(line: 125, column: 22, scope: !12157)
!12163 = !DILocation(line: 123, column: 7, scope: !12158)
!12164 = !DILocation(line: 126, column: 4, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12166, file: !1952, line: 126, column: 4)
!12166 = distinct !DILexicalBlock(scope: !12167, file: !1952, line: 126, column: 4)
!12167 = distinct !DILexicalBlock(scope: !12168, file: !1952, line: 126, column: 4)
!12168 = distinct !DILexicalBlock(scope: !12169, file: !1952, line: 126, column: 4)
!12169 = distinct !DILexicalBlock(scope: !12157, file: !1952, line: 125, column: 27)
!12170 = !DILocation(line: 127, column: 4, scope: !12169)
!12171 = !DILocation(line: 176, column: 36, scope: !12145)
!12172 = !DILocation(line: 176, column: 3, scope: !12145)
!12173 = !DILocation(line: 179, column: 32, scope: !12145)
!12174 = !DILocation(line: 180, column: 10, scope: !12145)
!12175 = !DILocation(line: 179, column: 3, scope: !12145)
!12176 = !DILocation(line: 189, column: 3, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12178, file: !1952, line: 189, column: 3)
!12178 = distinct !DILexicalBlock(scope: !12145, file: !1952, line: 189, column: 3)
!12179 = !DILocation(line: 189, column: 3, scope: !12178)
!12180 = !DILocation(line: 189, column: 3, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12177, file: !1952, line: 189, column: 3)
!12182 = !DILocation(line: 195, column: 1, scope: !12145)
!12183 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !12033, file: !12033, line: 410, type: !12096, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12184)
!12184 = !{!12185}
!12185 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12183, file: !12033, line: 410, type: !1898)
!12186 = !DILocation(line: 0, scope: !12183)
!12187 = !DILocation(line: 412, column: 3, scope: !12183)
!12188 = !DILocation(line: 413, column: 1, scope: !12183)
!12189 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1306, file: !1306, line: 216, type: !1931, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12190)
!12190 = !{!12191, !12192, !12193, !12194}
!12191 = !DILocalVariable(name: "dev", arg: 1, scope: !12189, file: !1306, line: 216, type: !1857)
!12192 = !DILocalVariable(name: "sys", arg: 2, scope: !12189, file: !1306, line: 217, type: !1398)
!12193 = !DILocalVariable(name: "rate", arg: 3, scope: !12189, file: !1306, line: 218, type: !1354)
!12194 = !DILocalVariable(name: "api", scope: !12189, file: !1306, line: 220, type: !1909)
!12195 = !DILocation(line: 0, scope: !12189)
!12196 = !DILocation(line: 221, column: 49, scope: !12189)
!12197 = !DILocation(line: 223, column: 11, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12189, file: !1306, line: 223, column: 6)
!12199 = !DILocation(line: 223, column: 20, scope: !12198)
!12200 = !DILocation(line: 223, column: 6, scope: !12189)
!12201 = !DILocation(line: 227, column: 9, scope: !12189)
!12202 = !DILocation(line: 227, column: 2, scope: !12189)
!12203 = !DILocation(line: 228, column: 1, scope: !12189)
!12204 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7622, file: !7622, line: 175, type: !7623, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12205)
!12205 = !{!12206}
!12206 = !DILocalVariable(name: "level", arg: 1, scope: !12204, file: !7622, line: 175, type: !103)
!12207 = !DILocation(line: 0, scope: !12204)
!12208 = !DILocation(line: 177, column: 2, scope: !12204)
!12209 = !DILocation(line: 189, column: 1, scope: !12204)
!12210 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !12033, file: !12033, line: 615, type: !12211, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12213)
!12211 = !DISubroutineType(types: !12212)
!12212 = !{null, !1898, !111}
!12213 = !{!12214, !12215}
!12214 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12210, file: !12033, line: 615, type: !1898)
!12215 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !12210, file: !12033, line: 615, type: !111)
!12216 = !DILocation(line: 0, scope: !12210)
!12217 = !DILocation(line: 617, column: 3, scope: !12210)
!12218 = !DILocation(line: 618, column: 1, scope: !12210)
!12219 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !12033, file: !12033, line: 1020, type: !12220, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12222)
!12220 = !DISubroutineType(types: !12221)
!12221 = !{null, !1898, !111, !111, !111}
!12222 = !{!12223, !12224, !12225, !12226}
!12223 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12219, file: !12033, line: 1020, type: !1898)
!12224 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !12219, file: !12033, line: 1020, type: !111)
!12225 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !12219, file: !12033, line: 1020, type: !111)
!12226 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !12219, file: !12033, line: 1021, type: !111)
!12227 = !DILocation(line: 0, scope: !12219)
!12228 = !DILocation(line: 1029, column: 30, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12230, file: !12033, line: 1028, column: 3)
!12230 = distinct !DILexicalBlock(scope: !12219, file: !12033, line: 1023, column: 7)
!12231 = !DILocation(line: 1029, column: 19, scope: !12229)
!12232 = !DILocation(line: 1029, column: 13, scope: !12229)
!12233 = !DILocation(line: 1029, column: 17, scope: !12229)
!12234 = !DILocation(line: 1031, column: 1, scope: !12219)
!12235 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !12033, file: !12033, line: 949, type: !12211, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12236)
!12236 = !{!12237, !12238}
!12237 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12235, file: !12033, line: 949, type: !1898)
!12238 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !12235, file: !12033, line: 949, type: !111)
!12239 = !DILocation(line: 0, scope: !12235)
!12240 = !DILocation(line: 951, column: 3, scope: !12235)
!12241 = !DILocation(line: 952, column: 1, scope: !12235)
!12242 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !12033, file: !12033, line: 588, type: !12211, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12243)
!12243 = !{!12244, !12245}
!12244 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12242, file: !12033, line: 588, type: !1898)
!12245 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12242, file: !12033, line: 588, type: !111)
!12246 = !DILocation(line: 0, scope: !12242)
!12247 = !DILocation(line: 590, column: 3, scope: !12242)
!12248 = !DILocation(line: 591, column: 1, scope: !12242)
!12249 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !12033, file: !12033, line: 805, type: !12211, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12250)
!12250 = !{!12251, !12252}
!12251 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12249, file: !12033, line: 805, type: !1898)
!12252 = !DILocalVariable(name: "StopBits", arg: 2, scope: !12249, file: !12033, line: 805, type: !111)
!12253 = !DILocation(line: 0, scope: !12249)
!12254 = !DILocation(line: 807, column: 3, scope: !12249)
!12255 = !DILocation(line: 808, column: 1, scope: !12249)
!12256 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !12033, file: !12033, line: 532, type: !12211, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12257)
!12257 = !{!12258, !12259}
!12258 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12256, file: !12033, line: 532, type: !1898)
!12259 = !DILocalVariable(name: "Parity", arg: 2, scope: !12256, file: !12033, line: 532, type: !111)
!12260 = !DILocation(line: 0, scope: !12256)
!12261 = !DILocation(line: 534, column: 3, scope: !12256)
!12262 = !DILocation(line: 535, column: 1, scope: !12256)
!12263 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !12033, file: !12033, line: 1770, type: !12034, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12264)
!12264 = !{!12265}
!12265 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12263, file: !12033, line: 1770, type: !1898)
!12266 = !DILocation(line: 0, scope: !12263)
!12267 = !DILocation(line: 1772, column: 11, scope: !12263)
!12268 = !DILocation(line: 1772, column: 46, scope: !12263)
!12269 = !DILocation(line: 1772, column: 3, scope: !12263)
!12270 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !12033, file: !12033, line: 1737, type: !12034, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12271)
!12271 = !{!12272}
!12272 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12270, file: !12033, line: 1737, type: !1898)
!12273 = !DILocation(line: 0, scope: !12270)
!12274 = !DILocation(line: 1739, column: 11, scope: !12270)
!12275 = !DILocation(line: 1739, column: 3, scope: !12270)
!12276 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !12033, file: !12033, line: 1748, type: !12034, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12277)
!12277 = !{!12278}
!12278 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12276, file: !12033, line: 1748, type: !1898)
!12279 = !DILocation(line: 0, scope: !12276)
!12280 = !DILocation(line: 1750, column: 11, scope: !12276)
!12281 = !DILocation(line: 1750, column: 45, scope: !12276)
!12282 = !DILocation(line: 1750, column: 3, scope: !12276)
!12283 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !12033, file: !12033, line: 1827, type: !12034, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12284)
!12284 = !{!12285}
!12285 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12283, file: !12033, line: 1827, type: !1898)
!12286 = !DILocation(line: 0, scope: !12283)
!12287 = !DILocation(line: 1829, column: 11, scope: !12283)
!12288 = !DILocation(line: 1829, column: 46, scope: !12283)
!12289 = !DILocation(line: 1829, column: 3, scope: !12283)
!12290 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !12033, file: !12033, line: 1992, type: !12096, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12291)
!12291 = !{!12292}
!12292 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12290, file: !12033, line: 1992, type: !1898)
!12293 = !DILocation(line: 0, scope: !12290)
!12294 = !DILocation(line: 1994, column: 3, scope: !12290)
!12295 = !DILocation(line: 1995, column: 1, scope: !12290)
!12296 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !12033, file: !12033, line: 1934, type: !12096, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12297)
!12297 = !{!12298, !12299}
!12298 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12296, file: !12033, line: 1934, type: !1898)
!12299 = !DILocalVariable(name: "tmpreg", scope: !12296, file: !12033, line: 1936, type: !777)
!12300 = !DILocation(line: 0, scope: !12296)
!12301 = !DILocation(line: 1936, column: 3, scope: !12296)
!12302 = !DILocation(line: 1936, column: 17, scope: !12296)
!12303 = !DILocation(line: 1937, column: 20, scope: !12296)
!12304 = !DILocation(line: 1937, column: 10, scope: !12296)
!12305 = !DILocation(line: 1938, column: 10, scope: !12296)
!12306 = !DILocation(line: 1939, column: 20, scope: !12296)
!12307 = !DILocation(line: 1939, column: 10, scope: !12296)
!12308 = !DILocation(line: 1940, column: 10, scope: !12296)
!12309 = !DILocation(line: 1941, column: 1, scope: !12296)
!12310 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !12033, file: !12033, line: 1877, type: !12096, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12311)
!12311 = !{!12312, !12313}
!12312 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12310, file: !12033, line: 1877, type: !1898)
!12313 = !DILocalVariable(name: "tmpreg", scope: !12310, file: !12033, line: 1879, type: !777)
!12314 = !DILocation(line: 0, scope: !12310)
!12315 = !DILocation(line: 1879, column: 3, scope: !12310)
!12316 = !DILocation(line: 1879, column: 17, scope: !12310)
!12317 = !DILocation(line: 1880, column: 20, scope: !12310)
!12318 = !DILocation(line: 1880, column: 10, scope: !12310)
!12319 = !DILocation(line: 1881, column: 10, scope: !12310)
!12320 = !DILocation(line: 1882, column: 20, scope: !12310)
!12321 = !DILocation(line: 1882, column: 10, scope: !12310)
!12322 = !DILocation(line: 1883, column: 10, scope: !12310)
!12323 = !DILocation(line: 1884, column: 1, scope: !12310)
!12324 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !12033, file: !12033, line: 1896, type: !12096, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12325)
!12325 = !{!12326, !12327}
!12326 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12324, file: !12033, line: 1896, type: !1898)
!12327 = !DILocalVariable(name: "tmpreg", scope: !12324, file: !12033, line: 1898, type: !777)
!12328 = !DILocation(line: 0, scope: !12324)
!12329 = !DILocation(line: 1898, column: 3, scope: !12324)
!12330 = !DILocation(line: 1898, column: 17, scope: !12324)
!12331 = !DILocation(line: 1899, column: 20, scope: !12324)
!12332 = !DILocation(line: 1899, column: 10, scope: !12324)
!12333 = !DILocation(line: 1900, column: 10, scope: !12324)
!12334 = !DILocation(line: 1901, column: 20, scope: !12324)
!12335 = !DILocation(line: 1901, column: 10, scope: !12324)
!12336 = !DILocation(line: 1902, column: 10, scope: !12324)
!12337 = !DILocation(line: 1903, column: 1, scope: !12324)
!12338 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !12033, file: !12033, line: 1915, type: !12096, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12339)
!12339 = !{!12340, !12341}
!12340 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12338, file: !12033, line: 1915, type: !1898)
!12341 = !DILocalVariable(name: "tmpreg", scope: !12338, file: !12033, line: 1917, type: !777)
!12342 = !DILocation(line: 0, scope: !12338)
!12343 = !DILocation(line: 1917, column: 3, scope: !12338)
!12344 = !DILocation(line: 1917, column: 17, scope: !12338)
!12345 = !DILocation(line: 1918, column: 20, scope: !12338)
!12346 = !DILocation(line: 1918, column: 10, scope: !12338)
!12347 = !DILocation(line: 1919, column: 10, scope: !12338)
!12348 = !DILocation(line: 1920, column: 20, scope: !12338)
!12349 = !DILocation(line: 1920, column: 10, scope: !12338)
!12350 = !DILocation(line: 1921, column: 10, scope: !12338)
!12351 = !DILocation(line: 1922, column: 1, scope: !12338)
!12352 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !12033, file: !12033, line: 1814, type: !12034, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12353)
!12353 = !{!12354}
!12354 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12352, file: !12033, line: 1814, type: !1898)
!12355 = !DILocation(line: 0, scope: !12352)
!12356 = !DILocation(line: 1816, column: 11, scope: !12352)
!12357 = !DILocation(line: 1816, column: 46, scope: !12352)
!12358 = !DILocation(line: 1816, column: 3, scope: !12352)
!12359 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !12033, file: !12033, line: 2426, type: !12360, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12362)
!12360 = !DISubroutineType(types: !12361)
!12361 = !{null, !1898, !166}
!12362 = !{!12363, !12364}
!12363 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12359, file: !12033, line: 2426, type: !1898)
!12364 = !DILocalVariable(name: "Value", arg: 2, scope: !12359, file: !12033, line: 2426, type: !166)
!12365 = !DILocation(line: 0, scope: !12359)
!12366 = !DILocation(line: 2428, column: 16, scope: !12359)
!12367 = !DILocation(line: 2428, column: 11, scope: !12359)
!12368 = !DILocation(line: 2428, column: 14, scope: !12359)
!12369 = !DILocation(line: 2429, column: 1, scope: !12359)
!12370 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !12033, file: !12033, line: 1792, type: !12034, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12371)
!12371 = !{!12372}
!12372 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12370, file: !12033, line: 1792, type: !1898)
!12373 = !DILocation(line: 0, scope: !12370)
!12374 = !DILocation(line: 1794, column: 11, scope: !12370)
!12375 = !DILocation(line: 1794, column: 47, scope: !12370)
!12376 = !DILocation(line: 1794, column: 3, scope: !12370)
!12377 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !12033, file: !12033, line: 2403, type: !12378, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12380)
!12378 = !DISubroutineType(types: !12379)
!12379 = !{!166, !1898}
!12380 = !{!12381}
!12381 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12377, file: !12033, line: 2403, type: !1898)
!12382 = !DILocation(line: 0, scope: !12377)
!12383 = !DILocation(line: 2405, column: 20, scope: !12377)
!12384 = !DILocation(line: 2405, column: 10, scope: !12377)
!12385 = !DILocation(line: 2405, column: 3, scope: !12377)
!12386 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1952, file: !1952, line: 1583, type: !1878, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12387)
!12387 = !{!12388, !12389, !12390, !12391, !12392, !12393}
!12388 = !DILocalVariable(name: "dev", arg: 1, scope: !12386, file: !1952, line: 1583, type: !1857)
!12389 = !DILocalVariable(name: "config", scope: !12386, file: !1952, line: 1585, type: !11724)
!12390 = !DILocalVariable(name: "data", scope: !12386, file: !1952, line: 1586, type: !11847)
!12391 = !DILocalVariable(name: "ll_parity", scope: !12386, file: !1952, line: 1587, type: !111)
!12392 = !DILocalVariable(name: "ll_datawidth", scope: !12386, file: !1952, line: 1588, type: !111)
!12393 = !DILocalVariable(name: "err", scope: !12386, file: !1952, line: 1589, type: !103)
!12394 = !DILocation(line: 0, scope: !12386)
!12395 = !DILocation(line: 1585, column: 48, scope: !12386)
!12396 = !DILocation(line: 1586, column: 38, scope: !12386)
!12397 = !DILocation(line: 1591, column: 2, scope: !12386)
!12398 = !DILocation(line: 1593, column: 29, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12386, file: !1952, line: 1593, column: 6)
!12400 = !DILocation(line: 1593, column: 7, scope: !12399)
!12401 = !DILocation(line: 1593, column: 6, scope: !12386)
!12402 = !DILocation(line: 1594, column: 3, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12404, file: !1952, line: 1594, column: 3)
!12404 = distinct !DILexicalBlock(scope: !12405, file: !1952, line: 1594, column: 3)
!12405 = distinct !DILexicalBlock(scope: !12406, file: !1952, line: 1594, column: 3)
!12406 = distinct !DILexicalBlock(scope: !12407, file: !1952, line: 1594, column: 3)
!12407 = distinct !DILexicalBlock(scope: !12399, file: !1952, line: 1593, column: 37)
!12408 = !DILocation(line: 1595, column: 3, scope: !12407)
!12409 = !DILocation(line: 1599, column: 31, scope: !12386)
!12410 = !DILocation(line: 1599, column: 71, scope: !12386)
!12411 = !DILocation(line: 1599, column: 8, scope: !12386)
!12412 = !DILocation(line: 1600, column: 10, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12386, file: !1952, line: 1600, column: 6)
!12414 = !DILocation(line: 1600, column: 6, scope: !12386)
!12415 = !DILocation(line: 1601, column: 3, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12417, file: !1952, line: 1601, column: 3)
!12417 = distinct !DILexicalBlock(scope: !12418, file: !1952, line: 1601, column: 3)
!12418 = distinct !DILexicalBlock(scope: !12419, file: !1952, line: 1601, column: 3)
!12419 = distinct !DILexicalBlock(scope: !12420, file: !1952, line: 1601, column: 3)
!12420 = distinct !DILexicalBlock(scope: !12413, file: !1952, line: 1600, column: 16)
!12421 = !DILocation(line: 1602, column: 3, scope: !12420)
!12422 = !DILocation(line: 1616, column: 36, scope: !12386)
!12423 = !DILocation(line: 1616, column: 8, scope: !12386)
!12424 = !DILocation(line: 1617, column: 10, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12386, file: !1952, line: 1617, column: 6)
!12426 = !DILocation(line: 1617, column: 6, scope: !12386)
!12427 = !DILocation(line: 1621, column: 27, scope: !12386)
!12428 = !DILocation(line: 1621, column: 2, scope: !12386)
!12429 = !DILocation(line: 1624, column: 40, scope: !12386)
!12430 = !DILocation(line: 1624, column: 2, scope: !12386)
!12431 = !DILocation(line: 1630, column: 14, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12386, file: !1952, line: 1630, column: 6)
!12433 = !DILocation(line: 1630, column: 6, scope: !12386)
!12434 = !DILocation(line: 1640, column: 4, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12436, file: !1952, line: 1640, column: 4)
!12436 = distinct !DILexicalBlock(scope: !12437, file: !1952, line: 1640, column: 4)
!12437 = distinct !DILexicalBlock(scope: !12438, file: !1952, line: 1640, column: 4)
!12438 = distinct !DILexicalBlock(scope: !12439, file: !1952, line: 1640, column: 4)
!12439 = distinct !DILexicalBlock(scope: !12440, file: !1952, line: 1639, column: 28)
!12440 = distinct !DILexicalBlock(scope: !12441, file: !1952, line: 1639, column: 7)
!12441 = distinct !DILexicalBlock(scope: !12442, file: !1952, line: 1638, column: 9)
!12442 = distinct !DILexicalBlock(scope: !12432, file: !1952, line: 1634, column: 13)
!12443 = !DILocation(line: 0, scope: !12432)
!12444 = !DILocation(line: 1649, column: 35, scope: !12386)
!12445 = !DILocation(line: 1649, column: 2, scope: !12386)
!12446 = !DILocation(line: 1654, column: 14, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12386, file: !1952, line: 1654, column: 6)
!12448 = !DILocation(line: 1654, column: 6, scope: !12386)
!12449 = !DILocation(line: 1655, column: 3, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12447, file: !1952, line: 1654, column: 31)
!12451 = !DILocation(line: 1656, column: 2, scope: !12450)
!12452 = !DILocation(line: 1659, column: 37, scope: !12386)
!12453 = !DILocation(line: 1659, column: 2, scope: !12386)
!12454 = !DILocation(line: 1662, column: 14, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12386, file: !1952, line: 1662, column: 6)
!12456 = !DILocation(line: 1662, column: 6, scope: !12386)
!12457 = !DILocation(line: 1663, column: 37, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12455, file: !1952, line: 1662, column: 27)
!12459 = !DILocation(line: 1663, column: 3, scope: !12458)
!12460 = !DILocation(line: 1664, column: 2, scope: !12458)
!12461 = !DILocation(line: 1684, column: 26, scope: !12386)
!12462 = !DILocation(line: 1684, column: 2, scope: !12386)
!12463 = !DILocation(line: 1722, column: 2, scope: !12386)
!12464 = !DILocation(line: 1724, column: 1, scope: !12386)
!12465 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1952, file: !1952, line: 651, type: !12466, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12468)
!12466 = !DISubroutineType(types: !12467)
!12467 = !{null, !1857}
!12468 = !{!12469, !12470, !12471}
!12469 = !DILocalVariable(name: "dev", arg: 1, scope: !12465, file: !1952, line: 651, type: !1857)
!12470 = !DILocalVariable(name: "data", scope: !12465, file: !1952, line: 653, type: !11847)
!12471 = !DILocalVariable(name: "clk", scope: !12465, file: !1952, line: 654, type: !12472)
!12472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!12473 = !DILocation(line: 0, scope: !12465)
!12474 = !DILocation(line: 653, column: 38, scope: !12465)
!12475 = !DILocation(line: 656, column: 8, scope: !12465)
!12476 = !DILocation(line: 656, column: 14, scope: !12465)
!12477 = !DILocation(line: 657, column: 1, scope: !12465)
!12478 = distinct !DISubprogram(name: "device_is_ready", scope: !10843, file: !10843, line: 47, type: !12479, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12481)
!12479 = !DISubroutineType(types: !12480)
!12480 = !{!122, !1857}
!12481 = !{!12482}
!12482 = !DILocalVariable(name: "dev", arg: 1, scope: !12478, file: !10843, line: 47, type: !1857)
!12483 = !DILocation(line: 0, scope: !12478)
!12484 = !DILocation(line: 55, column: 2, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12478, file: !10843, line: 55, column: 2)
!12486 = !{i64 2155137176}
!12487 = !DILocation(line: 56, column: 9, scope: !12478)
!12488 = !DILocation(line: 56, column: 2, scope: !12478)
!12489 = distinct !DISubprogram(name: "clock_control_on", scope: !1306, file: !1306, line: 123, type: !1916, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12490)
!12490 = !{!12491, !12492, !12493}
!12491 = !DILocalVariable(name: "dev", arg: 1, scope: !12489, file: !1306, line: 123, type: !1857)
!12492 = !DILocalVariable(name: "sys", arg: 2, scope: !12489, file: !1306, line: 124, type: !1398)
!12493 = !DILocalVariable(name: "api", scope: !12489, file: !1306, line: 126, type: !1909)
!12494 = !DILocation(line: 0, scope: !12489)
!12495 = !DILocation(line: 127, column: 49, scope: !12489)
!12496 = !DILocation(line: 129, column: 14, scope: !12489)
!12497 = !DILocation(line: 129, column: 9, scope: !12489)
!12498 = !DILocation(line: 129, column: 2, scope: !12489)
!12499 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1992, file: !1992, line: 342, type: !12500, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12502)
!12500 = !DISubroutineType(types: !12501)
!12501 = !{!103, !1989, !166}
!12502 = !{!12503, !12504, !12505, !12506}
!12503 = !DILocalVariable(name: "config", arg: 1, scope: !12499, file: !1992, line: 342, type: !1989)
!12504 = !DILocalVariable(name: "id", arg: 2, scope: !12499, file: !1992, line: 343, type: !166)
!12505 = !DILocalVariable(name: "ret", scope: !12499, file: !1992, line: 345, type: !103)
!12506 = !DILocalVariable(name: "state", scope: !12499, file: !1992, line: 346, type: !1995)
!12507 = !DILocation(line: 0, scope: !12499)
!12508 = !DILocation(line: 346, column: 2, scope: !12499)
!12509 = !DILocation(line: 348, column: 8, scope: !12499)
!12510 = !DILocation(line: 349, column: 10, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12499, file: !1992, line: 349, column: 6)
!12512 = !DILocation(line: 349, column: 6, scope: !12499)
!12513 = !DILocation(line: 353, column: 44, scope: !12499)
!12514 = !DILocation(line: 353, column: 9, scope: !12499)
!12515 = !DILocation(line: 353, column: 2, scope: !12499)
!12516 = !DILocation(line: 354, column: 1, scope: !12499)
!12517 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !12033, file: !12033, line: 497, type: !12211, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12518)
!12518 = !{!12519, !12520, !12521}
!12519 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12517, file: !12033, line: 497, type: !1898)
!12520 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12517, file: !12033, line: 497, type: !111)
!12521 = !DILocalVariable(name: "val", scope: !12522, file: !12033, line: 499, type: !111)
!12522 = distinct !DILexicalBlock(scope: !12517, file: !12033, line: 499, column: 3)
!12523 = !DILocation(line: 0, scope: !12517)
!12524 = !DILocation(line: 499, column: 3, scope: !12522)
!12525 = !DILocalVariable(name: "addr", arg: 1, scope: !12526, file: !7865, line: 476, type: !1948)
!12526 = distinct !DISubprogram(name: "__LDREXW", scope: !7865, file: !7865, line: 476, type: !12527, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12529)
!12527 = !DISubroutineType(types: !12528)
!12528 = !{!111, !1948}
!12529 = !{!12525, !12530}
!12530 = !DILocalVariable(name: "result", scope: !12526, file: !7865, line: 478, type: !111)
!12531 = !DILocation(line: 0, scope: !12526, inlinedAt: !12532)
!12532 = distinct !DILocation(line: 499, column: 3, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12522, file: !12033, line: 499, column: 3)
!12534 = !DILocation(line: 480, column: 4, scope: !12526, inlinedAt: !12532)
!12535 = !{i64 3577065}
!12536 = !DILocation(line: 499, column: 3, scope: !12533)
!12537 = !DILocation(line: 0, scope: !12522)
!12538 = !DILocalVariable(name: "value", arg: 1, scope: !12539, file: !7865, line: 527, type: !111)
!12539 = distinct !DISubprogram(name: "__STREXW", scope: !7865, file: !7865, line: 527, type: !12540, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12542)
!12540 = !DISubroutineType(types: !12541)
!12541 = !{!111, !111, !1948}
!12542 = !{!12538, !12543, !12544}
!12543 = !DILocalVariable(name: "addr", arg: 2, scope: !12539, file: !7865, line: 527, type: !1948)
!12544 = !DILocalVariable(name: "result", scope: !12539, file: !7865, line: 529, type: !111)
!12545 = !DILocation(line: 0, scope: !12539, inlinedAt: !12546)
!12546 = distinct !DILocation(line: 499, column: 3, scope: !12522)
!12547 = !DILocation(line: 531, column: 4, scope: !12539, inlinedAt: !12546)
!12548 = !{i64 3578501}
!12549 = distinct !{!12549, !12524, !12524}
!12550 = !DILocation(line: 500, column: 1, scope: !12517)
!12551 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !12033, file: !12033, line: 850, type: !12220, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12552)
!12552 = !{!12553, !12554, !12555, !12556}
!12553 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12551, file: !12033, line: 850, type: !1898)
!12554 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12551, file: !12033, line: 850, type: !111)
!12555 = !DILocalVariable(name: "Parity", arg: 3, scope: !12551, file: !12033, line: 850, type: !111)
!12556 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12551, file: !12033, line: 851, type: !111)
!12557 = !DILocation(line: 0, scope: !12551)
!12558 = !DILocation(line: 853, column: 3, scope: !12551)
!12559 = !DILocation(line: 854, column: 3, scope: !12551)
!12560 = !DILocation(line: 855, column: 1, scope: !12551)
!12561 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !12033, file: !12033, line: 1337, type: !12096, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12562)
!12562 = !{!12563}
!12563 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12561, file: !12033, line: 1337, type: !1898)
!12564 = !DILocation(line: 0, scope: !12561)
!12565 = !DILocation(line: 1339, column: 3, scope: !12561)
!12566 = !DILocation(line: 1340, column: 1, scope: !12561)
!12567 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1992, file: !1992, line: 316, type: !12568, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12570)
!12568 = !DISubroutineType(types: !12569)
!12569 = !{!103, !1989, !1995}
!12570 = !{!12571, !12572, !12573}
!12571 = !DILocalVariable(name: "config", arg: 1, scope: !12567, file: !1992, line: 317, type: !1989)
!12572 = !DILocalVariable(name: "state", arg: 2, scope: !12567, file: !1992, line: 318, type: !1995)
!12573 = !DILocalVariable(name: "reg", scope: !12567, file: !1992, line: 320, type: !22)
!12574 = !DILocation(line: 0, scope: !12567)
!12575 = !DILocation(line: 329, column: 39, scope: !12567)
!12576 = !DILocation(line: 329, column: 52, scope: !12567)
!12577 = !DILocation(line: 329, column: 9, scope: !12567)
!12578 = !DILocation(line: 329, column: 2, scope: !12567)
!12579 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !797, file: !797, line: 730, type: !12479, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1813, retainedNodes: !12580)
!12580 = !{!12581}
!12581 = !DILocalVariable(name: "dev", arg: 1, scope: !12579, file: !797, line: 730, type: !1857)
!12582 = !DILocation(line: 0, scope: !12579)
!12583 = !DILocation(line: 732, column: 9, scope: !12579)
!12584 = !DILocation(line: 732, column: 2, scope: !12579)
!12585 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2115, file: !2115, line: 270, type: !2121, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2037, retainedNodes: !12586)
!12586 = !{!12587}
!12587 = !DILocalVariable(name: "dev", arg: 1, scope: !12585, file: !2115, line: 270, type: !2123)
!12588 = !DILocation(line: 0, scope: !12585)
!12589 = !DILocation(line: 274, column: 2, scope: !12585)
!12590 = !DILocation(line: 275, column: 12, scope: !12585)
!12591 = !DILocation(line: 276, column: 15, scope: !12585)
!12592 = !DILocation(line: 277, column: 16, scope: !12585)
!12593 = !DILocation(line: 278, column: 15, scope: !12585)
!12594 = !DILocation(line: 279, column: 16, scope: !12585)
!12595 = !DILocation(line: 282, column: 2, scope: !12585)
!12596 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !992, file: !992, line: 1814, type: !7905, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2037, retainedNodes: !12597)
!12597 = !{!12598, !12599}
!12598 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12596, file: !992, line: 1814, type: !1260)
!12599 = !DILocalVariable(name: "priority", arg: 2, scope: !12596, file: !992, line: 1814, type: !111)
!12600 = !DILocation(line: 0, scope: !12596)
!12601 = !DILocation(line: 1822, column: 46, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12603, file: !992, line: 1821, column: 3)
!12603 = distinct !DILexicalBlock(scope: !12596, file: !992, line: 1816, column: 7)
!12604 = !DILocation(line: 1824, column: 1, scope: !12596)
!12605 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2115, file: !2115, line: 118, type: !7802, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2037, retainedNodes: !12606)
!12606 = !{!12607, !12608}
!12607 = !DILocalVariable(name: "arg", arg: 1, scope: !12605, file: !2115, line: 118, type: !102)
!12608 = !DILocalVariable(name: "dticks", scope: !12605, file: !2115, line: 121, type: !111)
!12609 = !DILocation(line: 0, scope: !12605)
!12610 = !DILocation(line: 124, column: 2, scope: !12605)
!12611 = !DILocation(line: 129, column: 17, scope: !12605)
!12612 = !DILocation(line: 129, column: 14, scope: !12605)
!12613 = !DILocation(line: 130, column: 15, scope: !12605)
!12614 = !DILocation(line: 145, column: 27, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12616, file: !2115, line: 132, column: 16)
!12616 = distinct !DILexicalBlock(scope: !12605, file: !2115, line: 132, column: 6)
!12617 = !DILocation(line: 145, column: 25, scope: !12615)
!12618 = !DILocation(line: 145, column: 45, scope: !12615)
!12619 = !DILocation(line: 146, column: 30, scope: !12615)
!12620 = !DILocation(line: 146, column: 20, scope: !12615)
!12621 = !DILocation(line: 147, column: 3, scope: !12615)
!12622 = !DILocation(line: 151, column: 2, scope: !12605)
!12623 = !DILocation(line: 152, column: 1, scope: !12605)
!12624 = distinct !DISubprogram(name: "elapsed", scope: !2115, file: !2115, line: 85, type: !7952, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2037, retainedNodes: !12625)
!12625 = !{!12626, !12627, !12628}
!12626 = !DILocalVariable(name: "val1", scope: !12624, file: !2115, line: 87, type: !111)
!12627 = !DILocalVariable(name: "ctrl", scope: !12624, file: !2115, line: 88, type: !111)
!12628 = !DILocalVariable(name: "val2", scope: !12624, file: !2115, line: 89, type: !111)
!12629 = !DILocation(line: 87, column: 27, scope: !12624)
!12630 = !DILocation(line: 0, scope: !12624)
!12631 = !DILocation(line: 88, column: 27, scope: !12624)
!12632 = !DILocation(line: 89, column: 27, scope: !12624)
!12633 = !DILocation(line: 105, column: 12, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12624, file: !2115, line: 105, column: 6)
!12635 = !DILocation(line: 106, column: 6, scope: !12634)
!12636 = !DILocation(line: 107, column: 16, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12634, file: !2115, line: 106, column: 24)
!12638 = !DILocation(line: 111, column: 18, scope: !12637)
!12639 = !DILocation(line: 112, column: 2, scope: !12637)
!12640 = !DILocation(line: 114, column: 20, scope: !12624)
!12641 = !DILocation(line: 114, column: 30, scope: !12624)
!12642 = !DILocation(line: 114, column: 28, scope: !12624)
!12643 = !DILocation(line: 114, column: 2, scope: !12624)
!12644 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2115, file: !2115, line: 154, type: !12645, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2037, retainedNodes: !12647)
!12645 = !DISubroutineType(types: !12646)
!12646 = !{null, !320, !122}
!12647 = !{!12648, !12649, !12650, !12651, !12652, !12653, !12654, !12659, !12660}
!12648 = !DILocalVariable(name: "ticks", arg: 1, scope: !12644, file: !2115, line: 154, type: !320)
!12649 = !DILocalVariable(name: "idle", arg: 2, scope: !12644, file: !2115, line: 154, type: !122)
!12650 = !DILocalVariable(name: "delay", scope: !12644, file: !2115, line: 169, type: !111)
!12651 = !DILocalVariable(name: "val1", scope: !12644, file: !2115, line: 170, type: !111)
!12652 = !DILocalVariable(name: "val2", scope: !12644, file: !2115, line: 170, type: !111)
!12653 = !DILocalVariable(name: "last_load_", scope: !12644, file: !2115, line: 171, type: !111)
!12654 = !DILocalVariable(name: "key", scope: !12644, file: !2115, line: 176, type: !12655)
!12655 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !12656)
!12656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !12657)
!12657 = !{!12658}
!12658 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12656, file: !152, line: 33, baseType: !103, size: 32)
!12659 = !DILocalVariable(name: "pending", scope: !12644, file: !2115, line: 178, type: !111)
!12660 = !DILocalVariable(name: "unannounced", scope: !12644, file: !2115, line: 185, type: !111)
!12661 = !DILocation(line: 0, scope: !12644)
!12662 = !DILocation(line: 162, column: 49, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12644, file: !2115, line: 162, column: 6)
!12664 = !DILocation(line: 163, column: 17, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12663, file: !2115, line: 162, column: 78)
!12666 = !DILocation(line: 164, column: 13, scope: !12665)
!12667 = !DILocation(line: 165, column: 3, scope: !12665)
!12668 = !DILocation(line: 171, column: 24, scope: !12644)
!12669 = !DILocation(line: 173, column: 10, scope: !12644)
!12670 = !DILocation(line: 174, column: 10, scope: !12644)
!12671 = !DILocalVariable(name: "l", arg: 1, scope: !12672, file: !152, line: 136, type: !12675)
!12672 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !12673, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2037, retainedNodes: !12676)
!12673 = !DISubroutineType(types: !12674)
!12674 = !{!12655, !12675}
!12675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!12676 = !{!12671, !12677}
!12677 = !DILocalVariable(name: "k", scope: !12672, file: !152, line: 139, type: !12655)
!12678 = !DILocation(line: 0, scope: !12672, inlinedAt: !12679)
!12679 = distinct !DILocation(line: 176, column: 25, scope: !12644)
!12680 = !DILocation(line: 55, column: 2, scope: !12681, inlinedAt: !12685)
!12681 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7544, file: !7544, line: 42, type: !7545, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2037, retainedNodes: !12682)
!12682 = !{!12683, !12684}
!12683 = !DILocalVariable(name: "key", scope: !12681, file: !7544, line: 44, type: !32)
!12684 = !DILocalVariable(name: "tmp", scope: !12681, file: !7544, line: 53, type: !32)
!12685 = distinct !DILocation(line: 145, column: 10, scope: !12672, inlinedAt: !12679)
!12686 = !{i64 2200263}
!12687 = !DILocation(line: 0, scope: !12681, inlinedAt: !12685)
!12688 = !DILocation(line: 148, column: 2, scope: !12689, inlinedAt: !12679)
!12689 = distinct !DILexicalBlock(scope: !12690, file: !152, line: 148, column: 2)
!12690 = distinct !DILexicalBlock(scope: !12672, file: !152, line: 148, column: 2)
!12691 = !DILocation(line: 148, column: 2, scope: !12690, inlinedAt: !12679)
!12692 = !DILocation(line: 148, column: 2, scope: !12693, inlinedAt: !12679)
!12693 = distinct !DILexicalBlock(scope: !12689, file: !152, line: 148, column: 2)
!12694 = !DILocation(line: 160, column: 2, scope: !12672, inlinedAt: !12679)
!12695 = !DILocation(line: 178, column: 21, scope: !12644)
!12696 = !DILocation(line: 180, column: 18, scope: !12644)
!12697 = !DILocation(line: 182, column: 14, scope: !12644)
!12698 = !DILocation(line: 183, column: 15, scope: !12644)
!12699 = !DILocation(line: 185, column: 39, scope: !12644)
!12700 = !DILocation(line: 185, column: 37, scope: !12644)
!12701 = !DILocation(line: 187, column: 27, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12644, file: !2115, line: 187, column: 6)
!12703 = !DILocation(line: 187, column: 6, scope: !12644)
!12704 = !DILocation(line: 202, column: 27, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12702, file: !2115, line: 195, column: 9)
!12706 = !DILocation(line: 202, column: 48, scope: !12705)
!12707 = !DILocation(line: 203, column: 9, scope: !12705)
!12708 = !DILocation(line: 204, column: 11, scope: !12705)
!12709 = !DILocation(line: 205, column: 13, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12705, file: !2115, line: 205, column: 7)
!12711 = !DILocation(line: 205, column: 7, scope: !12705)
!12712 = !DILocation(line: 0, scope: !12702)
!12713 = !DILocation(line: 212, column: 18, scope: !12644)
!12714 = !DILocation(line: 214, column: 28, scope: !12644)
!12715 = !DILocation(line: 214, column: 16, scope: !12644)
!12716 = !DILocation(line: 215, column: 15, scope: !12644)
!12717 = !DILocation(line: 227, column: 11, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12644, file: !2115, line: 227, column: 6)
!12719 = !DILocation(line: 227, column: 6, scope: !12644)
!12720 = !DILocation(line: 228, column: 15, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12718, file: !2115, line: 227, column: 19)
!12722 = !DILocation(line: 228, column: 38, scope: !12721)
!12723 = !DILocation(line: 228, column: 24, scope: !12721)
!12724 = !DILocation(line: 229, column: 2, scope: !12721)
!12725 = !DILocation(line: 230, column: 24, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12718, file: !2115, line: 229, column: 9)
!12727 = !DILocation(line: 230, column: 15, scope: !12726)
!12728 = !DILocation(line: 0, scope: !12718)
!12729 = !DILocalVariable(name: "key", arg: 2, scope: !12730, file: !152, line: 190, type: !12655)
!12730 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !12731, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2037, retainedNodes: !12733)
!12731 = !DISubroutineType(types: !12732)
!12732 = !{null, !12675, !12655}
!12733 = !{!12734, !12729}
!12734 = !DILocalVariable(name: "l", arg: 1, scope: !12730, file: !152, line: 189, type: !12675)
!12735 = !DILocation(line: 0, scope: !12730, inlinedAt: !12736)
!12736 = distinct !DILocation(line: 232, column: 2, scope: !12644)
!12737 = !DILocation(line: 194, column: 2, scope: !12738, inlinedAt: !12736)
!12738 = distinct !DILexicalBlock(scope: !12739, file: !152, line: 194, column: 2)
!12739 = distinct !DILexicalBlock(scope: !12730, file: !152, line: 194, column: 2)
!12740 = !DILocation(line: 194, column: 2, scope: !12739, inlinedAt: !12736)
!12741 = !DILocation(line: 194, column: 2, scope: !12742, inlinedAt: !12736)
!12742 = distinct !DILexicalBlock(scope: !12738, file: !152, line: 194, column: 2)
!12743 = !DILocalVariable(name: "key", arg: 1, scope: !12744, file: !7544, line: 84, type: !32)
!12744 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7544, file: !7544, line: 84, type: !7555, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2037, retainedNodes: !12745)
!12745 = !{!12743}
!12746 = !DILocation(line: 0, scope: !12744, inlinedAt: !12747)
!12747 = distinct !DILocation(line: 215, column: 2, scope: !12730, inlinedAt: !12736)
!12748 = !DILocation(line: 95, column: 2, scope: !12744, inlinedAt: !12747)
!12749 = !{i64 2201080}
!12750 = !DILocation(line: 234, column: 1, scope: !12644)
!12751 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2115, file: !2115, line: 236, type: !7952, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2037, retainedNodes: !12752)
!12752 = !{!12753, !12754}
!12753 = !DILocalVariable(name: "key", scope: !12751, file: !2115, line: 242, type: !12655)
!12754 = !DILocalVariable(name: "cyc", scope: !12751, file: !2115, line: 243, type: !111)
!12755 = !DILocation(line: 0, scope: !12672, inlinedAt: !12756)
!12756 = distinct !DILocation(line: 242, column: 25, scope: !12751)
!12757 = !DILocation(line: 55, column: 2, scope: !12681, inlinedAt: !12758)
!12758 = distinct !DILocation(line: 145, column: 10, scope: !12672, inlinedAt: !12756)
!12759 = !DILocation(line: 0, scope: !12681, inlinedAt: !12758)
!12760 = !DILocation(line: 148, column: 2, scope: !12689, inlinedAt: !12756)
!12761 = !DILocation(line: 148, column: 2, scope: !12690, inlinedAt: !12756)
!12762 = !DILocation(line: 148, column: 2, scope: !12693, inlinedAt: !12756)
!12763 = !DILocation(line: 160, column: 2, scope: !12672, inlinedAt: !12756)
!12764 = !DILocation(line: 0, scope: !12751)
!12765 = !DILocation(line: 243, column: 17, scope: !12751)
!12766 = !DILocation(line: 243, column: 29, scope: !12751)
!12767 = !DILocation(line: 243, column: 43, scope: !12751)
!12768 = !DILocation(line: 0, scope: !12730, inlinedAt: !12769)
!12769 = distinct !DILocation(line: 245, column: 2, scope: !12751)
!12770 = !DILocation(line: 194, column: 2, scope: !12738, inlinedAt: !12769)
!12771 = !DILocation(line: 194, column: 2, scope: !12739, inlinedAt: !12769)
!12772 = !DILocation(line: 194, column: 2, scope: !12742, inlinedAt: !12769)
!12773 = !DILocation(line: 243, column: 27, scope: !12751)
!12774 = !DILocation(line: 243, column: 41, scope: !12751)
!12775 = !DILocation(line: 0, scope: !12744, inlinedAt: !12776)
!12776 = distinct !DILocation(line: 215, column: 2, scope: !12730, inlinedAt: !12769)
!12777 = !DILocation(line: 95, column: 2, scope: !12744, inlinedAt: !12776)
!12778 = !DILocation(line: 246, column: 13, scope: !12751)
!12779 = !DILocation(line: 246, column: 2, scope: !12751)
!12780 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2115, file: !2115, line: 249, type: !7952, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2037, retainedNodes: !12781)
!12781 = !{!12782, !12783}
!12782 = !DILocalVariable(name: "key", scope: !12780, file: !2115, line: 251, type: !12655)
!12783 = !DILocalVariable(name: "ret", scope: !12780, file: !2115, line: 252, type: !111)
!12784 = !DILocation(line: 0, scope: !12672, inlinedAt: !12785)
!12785 = distinct !DILocation(line: 251, column: 25, scope: !12780)
!12786 = !DILocation(line: 55, column: 2, scope: !12681, inlinedAt: !12787)
!12787 = distinct !DILocation(line: 145, column: 10, scope: !12672, inlinedAt: !12785)
!12788 = !DILocation(line: 0, scope: !12681, inlinedAt: !12787)
!12789 = !DILocation(line: 148, column: 2, scope: !12689, inlinedAt: !12785)
!12790 = !DILocation(line: 148, column: 2, scope: !12690, inlinedAt: !12785)
!12791 = !DILocation(line: 148, column: 2, scope: !12693, inlinedAt: !12785)
!12792 = !DILocation(line: 160, column: 2, scope: !12672, inlinedAt: !12785)
!12793 = !DILocation(line: 0, scope: !12780)
!12794 = !DILocation(line: 252, column: 17, scope: !12780)
!12795 = !DILocation(line: 252, column: 29, scope: !12780)
!12796 = !DILocation(line: 0, scope: !12730, inlinedAt: !12797)
!12797 = distinct !DILocation(line: 254, column: 2, scope: !12780)
!12798 = !DILocation(line: 194, column: 2, scope: !12738, inlinedAt: !12797)
!12799 = !DILocation(line: 194, column: 2, scope: !12739, inlinedAt: !12797)
!12800 = !DILocation(line: 194, column: 2, scope: !12742, inlinedAt: !12797)
!12801 = !DILocation(line: 252, column: 27, scope: !12780)
!12802 = !DILocation(line: 0, scope: !12744, inlinedAt: !12803)
!12803 = distinct !DILocation(line: 215, column: 2, scope: !12730, inlinedAt: !12797)
!12804 = !DILocation(line: 95, column: 2, scope: !12744, inlinedAt: !12803)
!12805 = !DILocation(line: 255, column: 2, scope: !12780)
!12806 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2115, file: !2115, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2037, retainedNodes: !2501)
!12807 = !DILocation(line: 260, column: 6, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12806, file: !2115, line: 260, column: 6)
!12809 = !DILocation(line: 260, column: 16, scope: !12808)
!12810 = !DILocation(line: 260, column: 6, scope: !12806)
!12811 = !DILocation(line: 261, column: 17, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12808, file: !2115, line: 260, column: 34)
!12813 = !DILocation(line: 262, column: 2, scope: !12812)
!12814 = !DILocation(line: 263, column: 1, scope: !12806)
!12815 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2115, file: !2115, line: 265, type: !323, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2037, retainedNodes: !2501)
!12816 = !DILocation(line: 267, column: 16, scope: !12815)
!12817 = !DILocation(line: 268, column: 1, scope: !12815)
!12818 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12819, file: !12819, line: 9, type: !12820, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3451, retainedNodes: !12843)
!12819 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12820 = !DISubroutineType(types: !12821)
!12821 = !{!103, !12822, !166, !12842}
!12822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12823, size: 32)
!12823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12824)
!12824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1992, line: 60, size: 64, elements: !12825)
!12825 = !{!12826, !12841}
!12826 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12824, file: !1992, line: 69, baseType: !12827, size: 32)
!12827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12828, size: 32)
!12828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12829)
!12829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1992, line: 50, size: 64, elements: !12830)
!12830 = !{!12831, !12839, !12840}
!12831 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12829, file: !1992, line: 52, baseType: !12832, size: 32)
!12832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12833, size: 32)
!12833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12834)
!12834 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2003, line: 37, baseType: !12835)
!12835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2003, line: 32, size: 64, elements: !12836)
!12836 = !{!12837, !12838}
!12837 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12835, file: !2003, line: 34, baseType: !111, size: 32)
!12838 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12835, file: !2003, line: 36, baseType: !111, size: 32, offset: 32)
!12839 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12829, file: !1992, line: 54, baseType: !166, size: 8, offset: 32)
!12840 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12829, file: !1992, line: 56, baseType: !166, size: 8, offset: 40)
!12841 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12824, file: !1992, line: 71, baseType: !166, size: 8, offset: 32)
!12842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12827, size: 32)
!12843 = !{!12844, !12845, !12846}
!12844 = !DILocalVariable(name: "config", arg: 1, scope: !12818, file: !12819, line: 9, type: !12822)
!12845 = !DILocalVariable(name: "id", arg: 2, scope: !12818, file: !12819, line: 9, type: !166)
!12846 = !DILocalVariable(name: "state", arg: 3, scope: !12818, file: !12819, line: 10, type: !12842)
!12847 = !DILocation(line: 0, scope: !12818)
!12848 = !DILocation(line: 12, column: 20, scope: !12818)
!12849 = !DILocation(line: 13, column: 27, scope: !12818)
!12850 = !DILocation(line: 13, column: 42, scope: !12818)
!12851 = !DILocation(line: 13, column: 19, scope: !12818)
!12852 = !DILocation(line: 13, column: 16, scope: !12818)
!12853 = !DILocation(line: 13, column: 2, scope: !12818)
!12854 = distinct !{!12854, !12853, !12855}
!12855 = !DILocation(line: 19, column: 2, scope: !12818)
!12856 = !DILocation(line: 14, column: 23, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !12819, line: 14, column: 7)
!12858 = distinct !DILexicalBlock(scope: !12818, file: !12819, line: 13, column: 54)
!12859 = !DILocation(line: 14, column: 10, scope: !12857)
!12860 = !DILocation(line: 18, column: 11, scope: !12858)
!12861 = !DILocation(line: 14, column: 7, scope: !12858)
!12862 = !DILocation(line: 22, column: 1, scope: !12818)
!12863 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2234, file: !2234, line: 193, type: !12864, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2152, retainedNodes: !12873)
!12864 = !DISubroutineType(types: !12865)
!12865 = !{!103, !12866, !166, !22}
!12866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12867, size: 32)
!12867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12868)
!12868 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2003, line: 37, baseType: !12869)
!12869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2003, line: 32, size: 64, elements: !12870)
!12870 = !{!12871, !12872}
!12871 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12869, file: !2003, line: 34, baseType: !111, size: 32)
!12872 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12869, file: !2003, line: 36, baseType: !111, size: 32, offset: 32)
!12873 = !{!12874, !12875, !12876, !12877, !12878, !12879, !12880, !12881, !12883}
!12874 = !DILocalVariable(name: "pins", arg: 1, scope: !12863, file: !2234, line: 193, type: !12866)
!12875 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12863, file: !2234, line: 193, type: !166)
!12876 = !DILocalVariable(name: "reg", arg: 3, scope: !12863, file: !2234, line: 194, type: !22)
!12877 = !DILocalVariable(name: "pin", scope: !12863, file: !2234, line: 196, type: !111)
!12878 = !DILocalVariable(name: "mux", scope: !12863, file: !2234, line: 196, type: !111)
!12879 = !DILocalVariable(name: "pin_cgf", scope: !12863, file: !2234, line: 197, type: !111)
!12880 = !DILocalVariable(name: "ret", scope: !12863, file: !2234, line: 198, type: !103)
!12881 = !DILocalVariable(name: "i", scope: !12882, file: !2234, line: 209, type: !166)
!12882 = distinct !DILexicalBlock(scope: !12863, file: !2234, line: 209, column: 2)
!12883 = !DILocalVariable(name: "gpio_out", scope: !12884, file: !2234, line: 239, type: !111)
!12884 = distinct !DILexicalBlock(scope: !12885, file: !2234, line: 238, column: 55)
!12885 = distinct !DILexicalBlock(scope: !12886, file: !2234, line: 238, column: 14)
!12886 = distinct !DILexicalBlock(scope: !12887, file: !2234, line: 236, column: 14)
!12887 = distinct !DILexicalBlock(scope: !12888, file: !2234, line: 234, column: 7)
!12888 = distinct !DILexicalBlock(scope: !12889, file: !2234, line: 209, column: 41)
!12889 = distinct !DILexicalBlock(scope: !12882, file: !2234, line: 209, column: 2)
!12890 = !DILocation(line: 0, scope: !12863)
!12891 = !DILocation(line: 0, scope: !12882)
!12892 = !DILocation(line: 209, column: 25, scope: !12889)
!12893 = !DILocation(line: 209, column: 2, scope: !12882)
!12894 = distinct !{!12894, !12893, !12895}
!12895 = !DILocation(line: 259, column: 2, scope: !12882)
!12896 = !DILocation(line: 210, column: 17, scope: !12888)
!12897 = !DILocation(line: 234, column: 7, scope: !12887)
!12898 = !DILocation(line: 234, column: 33, scope: !12887)
!12899 = !DILocation(line: 234, column: 7, scope: !12888)
!12900 = !DILocation(line: 235, column: 22, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12887, file: !2234, line: 234, column: 49)
!12902 = !DILocation(line: 235, column: 29, scope: !12901)
!12903 = !DILocation(line: 236, column: 3, scope: !12901)
!12904 = !DILocation(line: 236, column: 14, scope: !12887)
!12905 = !DILocation(line: 239, column: 32, scope: !12884)
!12906 = !DILocation(line: 0, scope: !12884)
!12907 = !DILocation(line: 241, column: 8, scope: !12884)
!12908 = !DILocation(line: 246, column: 3, scope: !12884)
!12909 = !DILocation(line: 252, column: 9, scope: !12888)
!12910 = !DILocation(line: 255, column: 9, scope: !12888)
!12911 = !DILocation(line: 256, column: 11, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12888, file: !2234, line: 256, column: 7)
!12913 = !DILocation(line: 209, column: 37, scope: !12889)
!12914 = !DILocation(line: 256, column: 7, scope: !12888)
!12915 = !DILocation(line: 262, column: 1, scope: !12863)
!12916 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2234, file: !2234, line: 176, type: !12917, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2152, retainedNodes: !12919)
!12917 = !DISubroutineType(types: !12918)
!12918 = !{!103, !111, !111, !111}
!12919 = !{!12920, !12921, !12922, !12923}
!12920 = !DILocalVariable(name: "pin", arg: 1, scope: !12916, file: !2234, line: 176, type: !111)
!12921 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12916, file: !2234, line: 176, type: !111)
!12922 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12916, file: !2234, line: 176, type: !111)
!12923 = !DILocalVariable(name: "port_device", scope: !12916, file: !2234, line: 178, type: !2164)
!12924 = !DILocation(line: 0, scope: !12916)
!12925 = !DILocation(line: 180, column: 22, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12916, file: !2234, line: 180, column: 6)
!12927 = !DILocation(line: 180, column: 6, scope: !12916)
!12928 = !DILocation(line: 180, column: 6, scope: !12926)
!12929 = !DILocation(line: 184, column: 16, scope: !12916)
!12930 = !DILocation(line: 186, column: 19, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12916, file: !2234, line: 186, column: 6)
!12932 = !DILocation(line: 186, column: 28, scope: !12931)
!12933 = !DILocation(line: 186, column: 33, scope: !12931)
!12934 = !DILocation(line: 186, column: 6, scope: !12916)
!12935 = !DILocation(line: 190, column: 43, scope: !12916)
!12936 = !DILocation(line: 190, column: 9, scope: !12916)
!12937 = !DILocation(line: 190, column: 2, scope: !12916)
!12938 = !DILocation(line: 191, column: 1, scope: !12916)
!12939 = distinct !DISubprogram(name: "device_is_ready", scope: !10843, file: !10843, line: 47, type: !12940, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2152, retainedNodes: !12942)
!12940 = !DISubroutineType(types: !12941)
!12941 = !{!122, !2164}
!12942 = !{!12943}
!12943 = !DILocalVariable(name: "dev", arg: 1, scope: !12939, file: !10843, line: 47, type: !2164)
!12944 = !DILocation(line: 0, scope: !12939)
!12945 = !DILocation(line: 55, column: 2, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12939, file: !10843, line: 55, column: 2)
!12947 = !{i64 2149438330}
!12948 = !DILocation(line: 56, column: 9, scope: !12939)
!12949 = !DILocation(line: 56, column: 2, scope: !12939)
!12950 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !797, file: !797, line: 730, type: !12940, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2152, retainedNodes: !12951)
!12951 = !{!12952}
!12952 = !DILocalVariable(name: "dev", arg: 1, scope: !12950, file: !797, line: 730, type: !2164)
!12953 = !DILocation(line: 0, scope: !12950)
!12954 = !DILocation(line: 732, column: 9, scope: !12950)
!12955 = !DILocation(line: 732, column: 2, scope: !12950)
!12956 = distinct !DISubprogram(name: "SystemInit", scope: !2282, file: !2282, line: 167, type: !323, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2242, retainedNodes: !2501)
!12957 = !DILocation(line: 182, column: 1, scope: !12956)
!12958 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2282, file: !2282, line: 220, type: !323, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2242, retainedNodes: !12959)
!12959 = !{!12960, !12961, !12962, !12963, !12964}
!12960 = !DILocalVariable(name: "tmp", scope: !12958, file: !2282, line: 222, type: !111)
!12961 = !DILocalVariable(name: "pllvco", scope: !12958, file: !2282, line: 222, type: !111)
!12962 = !DILocalVariable(name: "pllp", scope: !12958, file: !2282, line: 222, type: !111)
!12963 = !DILocalVariable(name: "pllsource", scope: !12958, file: !2282, line: 222, type: !111)
!12964 = !DILocalVariable(name: "pllm", scope: !12958, file: !2282, line: 222, type: !111)
!12965 = !DILocation(line: 0, scope: !12958)
!12966 = !DILocation(line: 225, column: 14, scope: !12958)
!12967 = !DILocation(line: 225, column: 19, scope: !12958)
!12968 = !DILocation(line: 227, column: 3, scope: !12958)
!12969 = !DILocation(line: 234, column: 7, scope: !12970)
!12970 = distinct !DILexicalBlock(scope: !12958, file: !2282, line: 228, column: 3)
!12971 = !DILocation(line: 240, column: 25, scope: !12970)
!12972 = !DILocation(line: 241, column: 19, scope: !12970)
!12973 = !DILocation(line: 241, column: 27, scope: !12970)
!12974 = !DILocation(line: 243, column: 21, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12970, file: !2282, line: 243, column: 11)
!12976 = !DILocation(line: 0, scope: !12975)
!12977 = !DILocation(line: 254, column: 22, scope: !12970)
!12978 = !DILocation(line: 254, column: 62, scope: !12970)
!12979 = !DILocation(line: 255, column: 31, scope: !12970)
!12980 = !DILocation(line: 256, column: 7, scope: !12970)
!12981 = !DILocation(line: 0, scope: !12970)
!12982 = !DILocation(line: 263, column: 30, scope: !12958)
!12983 = !DILocation(line: 263, column: 52, scope: !12958)
!12984 = !DILocation(line: 263, column: 9, scope: !12958)
!12985 = !DILocation(line: 265, column: 19, scope: !12958)
!12986 = !DILocation(line: 266, column: 1, scope: !12958)
!12987 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12988, file: !12988, line: 200, type: !12989, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !2501)
!12988 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12989 = !DISubroutineType(types: !12990)
!12990 = !{!12991}
!12991 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3457, line: 44, baseType: !3456)
!12992 = !DILocation(line: 202, column: 3, scope: !12987)
!12993 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12988, file: !12988, line: 219, type: !12994, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !13018)
!12994 = !DISubroutineType(types: !12995)
!12995 = !{!12991, !12996}
!12996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12997, size: 32)
!12997 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12998, line: 70, baseType: !12999)
!12998 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12998, line: 49, size: 384, elements: !13000)
!13000 = !{!13001, !13002, !13003, !13004, !13005, !13006, !13007}
!13001 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12999, file: !12998, line: 51, baseType: !111, size: 32)
!13002 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12999, file: !12998, line: 54, baseType: !111, size: 32, offset: 32)
!13003 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12999, file: !12998, line: 57, baseType: !111, size: 32, offset: 64)
!13004 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12999, file: !12998, line: 60, baseType: !111, size: 32, offset: 96)
!13005 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12999, file: !12998, line: 63, baseType: !111, size: 32, offset: 128)
!13006 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12999, file: !12998, line: 66, baseType: !111, size: 32, offset: 160)
!13007 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12999, file: !12998, line: 69, baseType: !13008, size: 192, offset: 192)
!13008 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !13009, line: 73, baseType: !13010)
!13009 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13010 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13009, line: 45, size: 192, elements: !13011)
!13011 = !{!13012, !13013, !13014, !13015, !13016, !13017}
!13012 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13010, file: !13009, line: 47, baseType: !111, size: 32)
!13013 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13010, file: !13009, line: 50, baseType: !111, size: 32, offset: 32)
!13014 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13010, file: !13009, line: 53, baseType: !111, size: 32, offset: 64)
!13015 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13010, file: !13009, line: 56, baseType: !111, size: 32, offset: 96)
!13016 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13010, file: !13009, line: 60, baseType: !111, size: 32, offset: 128)
!13017 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !13010, file: !13009, line: 63, baseType: !111, size: 32, offset: 160)
!13018 = !{!13019, !13020, !13021, !13022, !13026}
!13019 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12993, file: !12988, line: 219, type: !12996)
!13020 = !DILocalVariable(name: "tickstart", scope: !12993, file: !12988, line: 221, type: !111)
!13021 = !DILocalVariable(name: "pll_config", scope: !12993, file: !12988, line: 221, type: !111)
!13022 = !DILocalVariable(name: "pwrclkchanged", scope: !13023, file: !12988, line: 391, type: !13025)
!13023 = distinct !DILexicalBlock(scope: !13024, file: !12988, line: 390, column: 3)
!13024 = distinct !DILexicalBlock(scope: !12993, file: !12988, line: 389, column: 6)
!13025 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1301, line: 188, baseType: !3463)
!13026 = !DILocalVariable(name: "tmpreg", scope: !13027, file: !12988, line: 400, type: !777)
!13027 = distinct !DILexicalBlock(scope: !13028, file: !12988, line: 400, column: 7)
!13028 = distinct !DILexicalBlock(scope: !13029, file: !12988, line: 399, column: 5)
!13029 = distinct !DILexicalBlock(scope: !13023, file: !12988, line: 398, column: 8)
!13030 = !DILocation(line: 0, scope: !12993)
!13031 = !DILocation(line: 224, column: 24, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !12993, file: !12988, line: 224, column: 6)
!13033 = !DILocation(line: 224, column: 6, scope: !12993)
!13034 = !DILocation(line: 232, column: 27, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !12993, file: !12988, line: 232, column: 6)
!13036 = !DILocation(line: 232, column: 43, scope: !13035)
!13037 = !DILocation(line: 232, column: 69, scope: !13035)
!13038 = !DILocation(line: 232, column: 6, scope: !12993)
!13039 = !DILocation(line: 237, column: 9, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13041, file: !12988, line: 237, column: 8)
!13041 = distinct !DILexicalBlock(scope: !13035, file: !12988, line: 233, column: 3)
!13042 = !DILocation(line: 237, column: 39, scope: !13040)
!13043 = !DILocation(line: 237, column: 60, scope: !13040)
!13044 = !DILocation(line: 238, column: 9, scope: !13040)
!13045 = !DILocation(line: 238, column: 39, scope: !13040)
!13046 = !DILocation(line: 238, column: 60, scope: !13040)
!13047 = !DILocation(line: 238, column: 70, scope: !13040)
!13048 = !DILocation(line: 238, column: 78, scope: !13040)
!13049 = !DILocation(line: 238, column: 100, scope: !13040)
!13050 = !DILocation(line: 237, column: 8, scope: !13041)
!13051 = !DILocation(line: 240, column: 11, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13053, file: !12988, line: 240, column: 10)
!13053 = distinct !DILexicalBlock(scope: !13040, file: !12988, line: 239, column: 5)
!13054 = !DILocation(line: 240, column: 57, scope: !13052)
!13055 = !DILocation(line: 240, column: 80, scope: !13052)
!13056 = !DILocation(line: 240, column: 89, scope: !13052)
!13057 = !DILocation(line: 240, column: 10, scope: !13053)
!13058 = !DILocation(line: 248, column: 7, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13060, file: !12988, line: 248, column: 7)
!13060 = distinct !DILexicalBlock(scope: !13061, file: !12988, line: 248, column: 7)
!13061 = distinct !DILexicalBlock(scope: !13040, file: !12988, line: 246, column: 5)
!13062 = !DILocation(line: 248, column: 7, scope: !13060)
!13063 = !DILocation(line: 248, column: 7, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !13059, file: !12988, line: 248, column: 7)
!13065 = !DILocation(line: 248, column: 7, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13067, file: !12988, line: 248, column: 7)
!13067 = distinct !DILexicalBlock(scope: !13059, file: !12988, line: 248, column: 7)
!13068 = !DILocation(line: 248, column: 7, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13067, file: !12988, line: 248, column: 7)
!13070 = !DILocation(line: 0, scope: !13059)
!13071 = !DILocation(line: 251, column: 30, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13061, file: !12988, line: 251, column: 10)
!13073 = !DILocation(line: 251, column: 40, scope: !13072)
!13074 = !DILocation(line: 0, scope: !13072)
!13075 = !DILocation(line: 251, column: 10, scope: !13061)
!13076 = !DILocation(line: 257, column: 15, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13072, file: !12988, line: 252, column: 7)
!13078 = !DILocation(line: 257, column: 51, scope: !13077)
!13079 = !DILocation(line: 257, column: 9, scope: !13077)
!13080 = !DILocation(line: 259, column: 15, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13082, file: !12988, line: 259, column: 14)
!13082 = distinct !DILexicalBlock(scope: !13077, file: !12988, line: 258, column: 9)
!13083 = !DILocation(line: 259, column: 29, scope: !13081)
!13084 = !DILocation(line: 259, column: 43, scope: !13081)
!13085 = !DILocation(line: 259, column: 14, scope: !13082)
!13086 = distinct !{!13086, !13079, !13087}
!13087 = !DILocation(line: 263, column: 9, scope: !13077)
!13088 = !DILocation(line: 271, column: 15, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13072, file: !12988, line: 266, column: 7)
!13090 = !DILocation(line: 271, column: 9, scope: !13089)
!13091 = !DILocation(line: 273, column: 15, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13093, file: !12988, line: 273, column: 14)
!13093 = distinct !DILexicalBlock(scope: !13089, file: !12988, line: 272, column: 9)
!13094 = !DILocation(line: 273, column: 29, scope: !13092)
!13095 = !DILocation(line: 273, column: 43, scope: !13092)
!13096 = !DILocation(line: 273, column: 14, scope: !13093)
!13097 = distinct !{!13097, !13090, !13098}
!13098 = !DILocation(line: 277, column: 9, scope: !13089)
!13099 = !DILocation(line: 282, column: 27, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !12993, file: !12988, line: 282, column: 6)
!13101 = !DILocation(line: 282, column: 43, scope: !13100)
!13102 = !DILocation(line: 282, column: 69, scope: !13100)
!13103 = !DILocation(line: 282, column: 6, scope: !12993)
!13104 = !DILocation(line: 289, column: 9, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13106, file: !12988, line: 289, column: 8)
!13106 = distinct !DILexicalBlock(scope: !13100, file: !12988, line: 283, column: 3)
!13107 = !DILocation(line: 289, column: 39, scope: !13105)
!13108 = !DILocation(line: 289, column: 60, scope: !13105)
!13109 = !DILocation(line: 290, column: 9, scope: !13105)
!13110 = !DILocation(line: 290, column: 39, scope: !13105)
!13111 = !DILocation(line: 290, column: 60, scope: !13105)
!13112 = !DILocation(line: 290, column: 70, scope: !13105)
!13113 = !DILocation(line: 290, column: 78, scope: !13105)
!13114 = !DILocation(line: 290, column: 100, scope: !13105)
!13115 = !DILocation(line: 289, column: 8, scope: !13106)
!13116 = !DILocation(line: 293, column: 11, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13118, file: !12988, line: 293, column: 10)
!13118 = distinct !DILexicalBlock(scope: !13105, file: !12988, line: 291, column: 5)
!13119 = !DILocation(line: 293, column: 57, scope: !13117)
!13120 = !DILocation(line: 293, column: 80, scope: !13117)
!13121 = !DILocation(line: 293, column: 89, scope: !13117)
!13122 = !DILocation(line: 293, column: 10, scope: !13118)
!13123 = !DILocation(line: 307, column: 30, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13125, file: !12988, line: 307, column: 10)
!13125 = distinct !DILexicalBlock(scope: !13105, file: !12988, line: 305, column: 5)
!13126 = !DILocation(line: 307, column: 39, scope: !13124)
!13127 = !DILocation(line: 307, column: 10, scope: !13125)
!13128 = !DILocation(line: 310, column: 9, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13124, file: !12988, line: 308, column: 7)
!13130 = !DILocation(line: 313, column: 21, scope: !13129)
!13131 = !DILocation(line: 316, column: 9, scope: !13129)
!13132 = !DILocation(line: 316, column: 15, scope: !13129)
!13133 = !DILocation(line: 316, column: 51, scope: !13129)
!13134 = !DILocation(line: 318, column: 15, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13136, file: !12988, line: 318, column: 14)
!13136 = distinct !DILexicalBlock(scope: !13129, file: !12988, line: 317, column: 9)
!13137 = !DILocation(line: 318, column: 29, scope: !13135)
!13138 = !DILocation(line: 318, column: 43, scope: !13135)
!13139 = !DILocation(line: 318, column: 14, scope: !13136)
!13140 = distinct !{!13140, !13131, !13141}
!13141 = !DILocation(line: 322, column: 9, scope: !13129)
!13142 = !DILocation(line: 330, column: 9, scope: !13143)
!13143 = distinct !DILexicalBlock(scope: !13124, file: !12988, line: 328, column: 7)
!13144 = !DILocation(line: 333, column: 21, scope: !13143)
!13145 = !DILocation(line: 336, column: 9, scope: !13143)
!13146 = !DILocation(line: 336, column: 15, scope: !13143)
!13147 = !DILocation(line: 338, column: 15, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13149, file: !12988, line: 338, column: 14)
!13149 = distinct !DILexicalBlock(scope: !13143, file: !12988, line: 337, column: 9)
!13150 = !DILocation(line: 338, column: 29, scope: !13148)
!13151 = !DILocation(line: 338, column: 43, scope: !13148)
!13152 = !DILocation(line: 338, column: 14, scope: !13149)
!13153 = distinct !{!13153, !13145, !13154}
!13154 = !DILocation(line: 342, column: 9, scope: !13143)
!13155 = !DILocation(line: 0, scope: !13105)
!13156 = !DILocation(line: 347, column: 27, scope: !13157)
!13157 = distinct !DILexicalBlock(scope: !12993, file: !12988, line: 347, column: 6)
!13158 = !DILocation(line: 347, column: 43, scope: !13157)
!13159 = !DILocation(line: 347, column: 69, scope: !13157)
!13160 = !DILocation(line: 347, column: 6, scope: !12993)
!13161 = !DILocation(line: 353, column: 28, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13163, file: !12988, line: 353, column: 8)
!13163 = distinct !DILexicalBlock(scope: !13157, file: !12988, line: 348, column: 3)
!13164 = !DILocation(line: 353, column: 37, scope: !13162)
!13165 = !DILocation(line: 353, column: 8, scope: !13163)
!13166 = !DILocation(line: 356, column: 7, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13162, file: !12988, line: 354, column: 5)
!13168 = !DILocation(line: 359, column: 19, scope: !13167)
!13169 = !DILocation(line: 362, column: 7, scope: !13167)
!13170 = !DILocation(line: 362, column: 13, scope: !13167)
!13171 = !DILocation(line: 362, column: 49, scope: !13167)
!13172 = !DILocation(line: 364, column: 13, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13174, file: !12988, line: 364, column: 12)
!13174 = distinct !DILexicalBlock(scope: !13167, file: !12988, line: 363, column: 7)
!13175 = !DILocation(line: 364, column: 27, scope: !13173)
!13176 = !DILocation(line: 364, column: 41, scope: !13173)
!13177 = !DILocation(line: 364, column: 12, scope: !13174)
!13178 = distinct !{!13178, !13169, !13179}
!13179 = !DILocation(line: 368, column: 7, scope: !13167)
!13180 = !DILocation(line: 373, column: 7, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !13162, file: !12988, line: 371, column: 5)
!13182 = !DILocation(line: 376, column: 19, scope: !13181)
!13183 = !DILocation(line: 379, column: 7, scope: !13181)
!13184 = !DILocation(line: 379, column: 13, scope: !13181)
!13185 = !DILocation(line: 381, column: 13, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13187, file: !12988, line: 381, column: 12)
!13187 = distinct !DILexicalBlock(scope: !13181, file: !12988, line: 380, column: 7)
!13188 = !DILocation(line: 381, column: 27, scope: !13186)
!13189 = !DILocation(line: 381, column: 41, scope: !13186)
!13190 = !DILocation(line: 381, column: 12, scope: !13187)
!13191 = distinct !{!13191, !13183, !13192}
!13192 = !DILocation(line: 385, column: 7, scope: !13181)
!13193 = !DILocation(line: 389, column: 27, scope: !13024)
!13194 = !DILocation(line: 389, column: 43, scope: !13024)
!13195 = !DILocation(line: 389, column: 69, scope: !13024)
!13196 = !DILocation(line: 389, column: 6, scope: !12993)
!13197 = !DILocation(line: 0, scope: !13023)
!13198 = !DILocation(line: 398, column: 8, scope: !13029)
!13199 = !DILocation(line: 398, column: 8, scope: !13023)
!13200 = !DILocation(line: 400, column: 7, scope: !13027)
!13201 = !DILocation(line: 400, column: 7, scope: !13028)
!13202 = !DILocation(line: 402, column: 5, scope: !13028)
!13203 = !DILocation(line: 404, column: 8, scope: !13204)
!13204 = distinct !DILexicalBlock(scope: !13023, file: !12988, line: 404, column: 8)
!13205 = !DILocation(line: 404, column: 8, scope: !13023)
!13206 = !DILocation(line: 407, column: 7, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13204, file: !12988, line: 405, column: 5)
!13208 = !DILocation(line: 410, column: 19, scope: !13207)
!13209 = !DILocation(line: 412, column: 7, scope: !13207)
!13210 = !DILocation(line: 412, column: 13, scope: !13207)
!13211 = !DILocation(line: 414, column: 13, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13213, file: !12988, line: 414, column: 12)
!13213 = distinct !DILexicalBlock(scope: !13207, file: !12988, line: 413, column: 7)
!13214 = !DILocation(line: 414, column: 27, scope: !13212)
!13215 = !DILocation(line: 414, column: 40, scope: !13212)
!13216 = !DILocation(line: 414, column: 12, scope: !13213)
!13217 = distinct !{!13217, !13209, !13218}
!13218 = !DILocation(line: 418, column: 7, scope: !13207)
!13219 = !DILocation(line: 422, column: 5, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13221, file: !12988, line: 422, column: 5)
!13221 = distinct !DILexicalBlock(scope: !13023, file: !12988, line: 422, column: 5)
!13222 = !DILocation(line: 422, column: 5, scope: !13221)
!13223 = !DILocation(line: 422, column: 5, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13220, file: !12988, line: 422, column: 5)
!13225 = !DILocation(line: 422, column: 5, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13227, file: !12988, line: 422, column: 5)
!13227 = distinct !DILexicalBlock(scope: !13220, file: !12988, line: 422, column: 5)
!13228 = !DILocation(line: 422, column: 5, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13227, file: !12988, line: 422, column: 5)
!13230 = !DILocation(line: 0, scope: !13220)
!13231 = !DILocation(line: 424, column: 28, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13023, file: !12988, line: 424, column: 8)
!13233 = !DILocation(line: 424, column: 38, scope: !13232)
!13234 = !DILocation(line: 0, scope: !13232)
!13235 = !DILocation(line: 424, column: 8, scope: !13023)
!13236 = !DILocation(line: 430, column: 13, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13232, file: !12988, line: 425, column: 5)
!13238 = !DILocation(line: 430, column: 49, scope: !13237)
!13239 = !DILocation(line: 430, column: 7, scope: !13237)
!13240 = !DILocation(line: 432, column: 13, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13242, file: !12988, line: 432, column: 12)
!13242 = distinct !DILexicalBlock(scope: !13237, file: !12988, line: 431, column: 7)
!13243 = !DILocation(line: 432, column: 27, scope: !13241)
!13244 = !DILocation(line: 432, column: 41, scope: !13241)
!13245 = !DILocation(line: 432, column: 12, scope: !13242)
!13246 = distinct !{!13246, !13239, !13247}
!13247 = !DILocation(line: 436, column: 7, scope: !13237)
!13248 = !DILocation(line: 444, column: 13, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13232, file: !12988, line: 439, column: 5)
!13250 = !DILocation(line: 444, column: 7, scope: !13249)
!13251 = !DILocation(line: 446, column: 13, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13253, file: !12988, line: 446, column: 12)
!13253 = distinct !DILexicalBlock(scope: !13249, file: !12988, line: 445, column: 7)
!13254 = !DILocation(line: 446, column: 27, scope: !13252)
!13255 = !DILocation(line: 446, column: 41, scope: !13252)
!13256 = !DILocation(line: 446, column: 12, scope: !13253)
!13257 = distinct !{!13257, !13250, !13258}
!13258 = !DILocation(line: 450, column: 7, scope: !13249)
!13259 = !DILocation(line: 454, column: 8, scope: !13023)
!13260 = !DILocation(line: 456, column: 7, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13262, file: !12988, line: 455, column: 5)
!13262 = distinct !DILexicalBlock(scope: !13023, file: !12988, line: 454, column: 8)
!13263 = !DILocation(line: 457, column: 5, scope: !13261)
!13264 = !DILocation(line: 462, column: 31, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !12993, file: !12988, line: 462, column: 7)
!13266 = !DILocation(line: 462, column: 41, scope: !13265)
!13267 = !DILocation(line: 462, column: 7, scope: !12993)
!13268 = !DILocation(line: 465, column: 8, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13270, file: !12988, line: 465, column: 8)
!13270 = distinct !DILexicalBlock(scope: !13265, file: !12988, line: 463, column: 3)
!13271 = !DILocation(line: 465, column: 38, scope: !13269)
!13272 = !DILocation(line: 465, column: 8, scope: !13270)
!13273 = !DILocation(line: 467, column: 44, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13275, file: !12988, line: 467, column: 10)
!13275 = distinct !DILexicalBlock(scope: !13269, file: !12988, line: 466, column: 5)
!13276 = !DILocation(line: 0, scope: !13274)
!13277 = !DILocation(line: 467, column: 10, scope: !13275)
!13278 = !DILocation(line: 483, column: 15, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13274, file: !12988, line: 468, column: 7)
!13280 = !DILocation(line: 483, column: 9, scope: !13279)
!13281 = !DILocation(line: 485, column: 15, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !13283, file: !12988, line: 485, column: 14)
!13283 = distinct !DILexicalBlock(scope: !13279, file: !12988, line: 484, column: 9)
!13284 = !DILocation(line: 485, column: 29, scope: !13282)
!13285 = !DILocation(line: 485, column: 43, scope: !13282)
!13286 = !DILocation(line: 485, column: 14, scope: !13283)
!13287 = distinct !{!13287, !13280, !13288}
!13288 = !DILocation(line: 489, column: 9, scope: !13279)
!13289 = !DILocation(line: 492, column: 9, scope: !13279)
!13290 = !DILocation(line: 498, column: 9, scope: !13279)
!13291 = !DILocation(line: 501, column: 21, scope: !13279)
!13292 = !DILocation(line: 504, column: 9, scope: !13279)
!13293 = !DILocation(line: 504, column: 15, scope: !13279)
!13294 = !DILocation(line: 504, column: 51, scope: !13279)
!13295 = !DILocation(line: 506, column: 15, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13297, file: !12988, line: 506, column: 14)
!13297 = distinct !DILexicalBlock(scope: !13279, file: !12988, line: 505, column: 9)
!13298 = !DILocation(line: 506, column: 29, scope: !13296)
!13299 = !DILocation(line: 506, column: 43, scope: !13296)
!13300 = !DILocation(line: 506, column: 14, scope: !13297)
!13301 = distinct !{!13301, !13292, !13302}
!13302 = !DILocation(line: 510, column: 9, scope: !13279)
!13303 = !DILocation(line: 521, column: 15, scope: !13304)
!13304 = distinct !DILexicalBlock(scope: !13274, file: !12988, line: 513, column: 7)
!13305 = !DILocation(line: 521, column: 9, scope: !13304)
!13306 = !DILocation(line: 523, column: 15, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13308, file: !12988, line: 523, column: 14)
!13308 = distinct !DILexicalBlock(scope: !13304, file: !12988, line: 522, column: 9)
!13309 = !DILocation(line: 523, column: 29, scope: !13307)
!13310 = !DILocation(line: 523, column: 43, scope: !13307)
!13311 = !DILocation(line: 523, column: 14, scope: !13308)
!13312 = distinct !{!13312, !13305, !13313}
!13313 = !DILocation(line: 527, column: 9, scope: !13304)
!13314 = !DILocation(line: 533, column: 44, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13316, file: !12988, line: 533, column: 10)
!13316 = distinct !DILexicalBlock(scope: !13269, file: !12988, line: 531, column: 5)
!13317 = !DILocation(line: 533, column: 10, scope: !13316)
!13318 = !DILocation(line: 540, column: 27, scope: !13319)
!13319 = distinct !DILexicalBlock(scope: !13315, file: !12988, line: 538, column: 7)
!13320 = !DILocation(line: 551, column: 14, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13319, file: !12988, line: 550, column: 13)
!13322 = !DILocation(line: 551, column: 81, scope: !13321)
!13323 = !DILocation(line: 551, column: 55, scope: !13321)
!13324 = !DILocation(line: 551, column: 92, scope: !13321)
!13325 = !DILocation(line: 552, column: 14, scope: !13321)
!13326 = !DILocation(line: 552, column: 80, scope: !13321)
!13327 = !DILocation(line: 552, column: 53, scope: !13321)
!13328 = !DILocation(line: 552, column: 111, scope: !13321)
!13329 = !DILocation(line: 553, column: 14, scope: !13321)
!13330 = !DILocation(line: 553, column: 80, scope: !13321)
!13331 = !DILocation(line: 553, column: 86, scope: !13321)
!13332 = !DILocation(line: 553, column: 53, scope: !13321)
!13333 = !DILocation(line: 553, column: 111, scope: !13321)
!13334 = !DILocation(line: 554, column: 14, scope: !13321)
!13335 = !DILocation(line: 554, column: 82, scope: !13321)
!13336 = !DILocation(line: 554, column: 101, scope: !13321)
!13337 = !DILocation(line: 554, column: 53, scope: !13321)
!13338 = !DILocation(line: 554, column: 126, scope: !13321)
!13339 = !DILocation(line: 555, column: 14, scope: !13321)
!13340 = !DILocation(line: 555, column: 80, scope: !13321)
!13341 = !DILocation(line: 555, column: 85, scope: !13321)
!13342 = !DILocation(line: 555, column: 53, scope: !13321)
!13343 = !DILocation(line: 550, column: 13, scope: !13319)
!13344 = !DILocation(line: 563, column: 3, scope: !12993)
!13345 = !DILocation(line: 564, column: 1, scope: !12993)
!13346 = !DISubprogram(name: "HAL_GetTick", scope: !13347, file: !13347, line: 234, type: !7952, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2501)
!13347 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13348 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12988, file: !12988, line: 591, type: !13349, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !13360)
!13349 = !DISubroutineType(types: !13350)
!13350 = !{!12991, !13351, !111}
!13351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13352, size: 32)
!13352 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12998, line: 92, baseType: !13353)
!13353 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12998, line: 75, size: 160, elements: !13354)
!13354 = !{!13355, !13356, !13357, !13358, !13359}
!13355 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !13353, file: !12998, line: 77, baseType: !111, size: 32)
!13356 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !13353, file: !12998, line: 80, baseType: !111, size: 32, offset: 32)
!13357 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13353, file: !12998, line: 83, baseType: !111, size: 32, offset: 64)
!13358 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13353, file: !12998, line: 86, baseType: !111, size: 32, offset: 96)
!13359 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13353, file: !12998, line: 89, baseType: !111, size: 32, offset: 128)
!13360 = !{!13361, !13362, !13363}
!13361 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13348, file: !12988, line: 591, type: !13351)
!13362 = !DILocalVariable(name: "FLatency", arg: 2, scope: !13348, file: !12988, line: 591, type: !111)
!13363 = !DILocalVariable(name: "tickstart", scope: !13348, file: !12988, line: 593, type: !111)
!13364 = !DILocation(line: 0, scope: !13348)
!13365 = !DILocation(line: 596, column: 24, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13348, file: !12988, line: 596, column: 6)
!13367 = !DILocation(line: 596, column: 6, scope: !13348)
!13368 = !DILocation(line: 610, column: 17, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13348, file: !12988, line: 610, column: 6)
!13370 = !DILocation(line: 610, column: 15, scope: !13369)
!13371 = !DILocation(line: 610, column: 6, scope: !13348)
!13372 = !DILocation(line: 613, column: 5, scope: !13373)
!13373 = distinct !DILexicalBlock(scope: !13369, file: !12988, line: 611, column: 3)
!13374 = !DILocation(line: 617, column: 8, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13373, file: !12988, line: 617, column: 8)
!13376 = !DILocation(line: 617, column: 34, scope: !13375)
!13377 = !DILocation(line: 617, column: 8, scope: !13373)
!13378 = !DILocation(line: 624, column: 27, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13348, file: !12988, line: 624, column: 6)
!13380 = !DILocation(line: 624, column: 38, scope: !13379)
!13381 = !DILocation(line: 624, column: 60, scope: !13379)
!13382 = !DILocation(line: 624, column: 6, scope: !13348)
!13383 = !DILocation(line: 628, column: 40, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13385, file: !12988, line: 628, column: 8)
!13385 = distinct !DILexicalBlock(scope: !13379, file: !12988, line: 625, column: 3)
!13386 = !DILocation(line: 628, column: 63, scope: !13384)
!13387 = !DILocation(line: 628, column: 8, scope: !13385)
!13388 = !DILocation(line: 630, column: 7, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13384, file: !12988, line: 629, column: 5)
!13390 = !DILocation(line: 633, column: 29, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13385, file: !12988, line: 633, column: 8)
!13392 = !DILocation(line: 631, column: 5, scope: !13389)
!13393 = !DILocation(line: 633, column: 40, scope: !13391)
!13394 = !DILocation(line: 633, column: 63, scope: !13391)
!13395 = !DILocation(line: 633, column: 8, scope: !13385)
!13396 = !DILocation(line: 635, column: 7, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13391, file: !12988, line: 634, column: 5)
!13398 = !DILocation(line: 636, column: 5, scope: !13397)
!13399 = !DILocation(line: 639, column: 5, scope: !13385)
!13400 = !DILocation(line: 643, column: 27, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13348, file: !12988, line: 643, column: 6)
!13402 = !DILocation(line: 640, column: 3, scope: !13385)
!13403 = !DILocation(line: 643, column: 38, scope: !13401)
!13404 = !DILocation(line: 643, column: 62, scope: !13401)
!13405 = !DILocation(line: 643, column: 6, scope: !13348)
!13406 = !DILocation(line: 648, column: 27, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13408, file: !12988, line: 648, column: 8)
!13408 = distinct !DILexicalBlock(scope: !13401, file: !12988, line: 644, column: 3)
!13409 = !DILocation(line: 648, column: 8, scope: !13408)
!13410 = !DILocation(line: 651, column: 10, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13412, file: !12988, line: 651, column: 10)
!13412 = distinct !DILexicalBlock(scope: !13407, file: !12988, line: 649, column: 5)
!13413 = !DILocation(line: 651, column: 46, scope: !13411)
!13414 = !DILocation(line: 651, column: 10, scope: !13412)
!13415 = !DILocation(line: 661, column: 10, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13417, file: !12988, line: 661, column: 10)
!13417 = distinct !DILexicalBlock(scope: !13418, file: !12988, line: 659, column: 5)
!13418 = distinct !DILexicalBlock(scope: !13407, file: !12988, line: 657, column: 13)
!13419 = !DILocation(line: 661, column: 46, scope: !13416)
!13420 = !DILocation(line: 661, column: 10, scope: !13417)
!13421 = !DILocation(line: 670, column: 10, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13423, file: !12988, line: 670, column: 10)
!13423 = distinct !DILexicalBlock(scope: !13418, file: !12988, line: 668, column: 5)
!13424 = !DILocation(line: 670, column: 46, scope: !13422)
!13425 = !DILocation(line: 670, column: 10, scope: !13423)
!13426 = !DILocation(line: 676, column: 5, scope: !13408)
!13427 = !DILocation(line: 679, column: 17, scope: !13408)
!13428 = !DILocation(line: 681, column: 5, scope: !13408)
!13429 = !DILocation(line: 681, column: 12, scope: !13408)
!13430 = !DILocation(line: 681, column: 65, scope: !13408)
!13431 = !DILocation(line: 681, column: 78, scope: !13408)
!13432 = !DILocation(line: 681, column: 42, scope: !13408)
!13433 = !DILocation(line: 683, column: 12, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13435, file: !12988, line: 683, column: 11)
!13435 = distinct !DILexicalBlock(scope: !13408, file: !12988, line: 682, column: 5)
!13436 = !DILocation(line: 683, column: 26, scope: !13434)
!13437 = !DILocation(line: 683, column: 39, scope: !13434)
!13438 = !DILocation(line: 683, column: 11, scope: !13435)
!13439 = distinct !{!13439, !13428, !13440}
!13440 = !DILocation(line: 687, column: 5, scope: !13408)
!13441 = !DILocation(line: 691, column: 17, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13348, file: !12988, line: 691, column: 6)
!13443 = !DILocation(line: 691, column: 15, scope: !13442)
!13444 = !DILocation(line: 691, column: 6, scope: !13348)
!13445 = !DILocation(line: 694, column: 5, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13442, file: !12988, line: 692, column: 3)
!13447 = !DILocation(line: 698, column: 8, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13446, file: !12988, line: 698, column: 8)
!13449 = !DILocation(line: 698, column: 34, scope: !13448)
!13450 = !DILocation(line: 698, column: 8, scope: !13446)
!13451 = !DILocation(line: 705, column: 27, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13348, file: !12988, line: 705, column: 6)
!13453 = !DILocation(line: 705, column: 38, scope: !13452)
!13454 = !DILocation(line: 705, column: 61, scope: !13452)
!13455 = !DILocation(line: 705, column: 6, scope: !13348)
!13456 = !DILocation(line: 708, column: 5, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13452, file: !12988, line: 706, column: 3)
!13458 = !DILocation(line: 712, column: 27, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13348, file: !12988, line: 712, column: 6)
!13460 = !DILocation(line: 709, column: 3, scope: !13457)
!13461 = !DILocation(line: 712, column: 38, scope: !13459)
!13462 = !DILocation(line: 712, column: 61, scope: !13459)
!13463 = !DILocation(line: 712, column: 6, scope: !13348)
!13464 = !DILocation(line: 715, column: 5, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13459, file: !12988, line: 713, column: 3)
!13466 = !DILocation(line: 716, column: 3, scope: !13465)
!13467 = !DILocation(line: 719, column: 21, scope: !13348)
!13468 = !DILocation(line: 719, column: 70, scope: !13348)
!13469 = !DILocation(line: 719, column: 91, scope: !13348)
!13470 = !DILocation(line: 719, column: 50, scope: !13348)
!13471 = !DILocation(line: 719, column: 47, scope: !13348)
!13472 = !DILocation(line: 719, column: 19, scope: !13348)
!13473 = !DILocation(line: 722, column: 17, scope: !13348)
!13474 = !DILocation(line: 722, column: 3, scope: !13348)
!13475 = !DILocation(line: 724, column: 3, scope: !13348)
!13476 = !DILocation(line: 725, column: 1, scope: !13348)
!13477 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12988, file: !12988, line: 885, type: !7952, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !13478)
!13478 = !{!13479, !13480, !13481, !13482}
!13479 = !DILocalVariable(name: "pllm", scope: !13477, file: !12988, line: 887, type: !111)
!13480 = !DILocalVariable(name: "pllvco", scope: !13477, file: !12988, line: 887, type: !111)
!13481 = !DILocalVariable(name: "pllp", scope: !13477, file: !12988, line: 887, type: !111)
!13482 = !DILocalVariable(name: "sysclockfreq", scope: !13477, file: !12988, line: 888, type: !111)
!13483 = !DILocation(line: 0, scope: !13477)
!13484 = !DILocation(line: 891, column: 16, scope: !13477)
!13485 = !DILocation(line: 891, column: 21, scope: !13477)
!13486 = !DILocation(line: 891, column: 3, scope: !13477)
!13487 = !DILocation(line: 901, column: 7, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13489, file: !12988, line: 899, column: 5)
!13489 = distinct !DILexicalBlock(scope: !13477, file: !12988, line: 892, column: 3)
!13490 = !DILocation(line: 907, column: 19, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13489, file: !12988, line: 904, column: 5)
!13492 = !DILocation(line: 907, column: 27, scope: !13491)
!13493 = !DILocation(line: 908, column: 10, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13491, file: !12988, line: 908, column: 10)
!13495 = !DILocation(line: 908, column: 40, scope: !13494)
!13496 = !DILocation(line: 0, scope: !13494)
!13497 = !DILocation(line: 918, column: 23, scope: !13491)
!13498 = !DILocation(line: 918, column: 82, scope: !13491)
!13499 = !DILocation(line: 920, column: 28, scope: !13491)
!13500 = !DILocation(line: 921, column: 7, scope: !13491)
!13501 = !DILocation(line: 0, scope: !13489)
!13502 = !DILocation(line: 929, column: 3, scope: !13477)
!13503 = !DISubprogram(name: "HAL_InitTick", scope: !13347, file: !13347, line: 223, type: !13504, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2501)
!13504 = !DISubroutineType(types: !13505)
!13505 = !{!12991, !111}
!13506 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12988, file: !12988, line: 775, type: !13507, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !13509)
!13507 = !DISubroutineType(types: !13508)
!13508 = !{null, !111, !111, !111}
!13509 = !{!13510, !13511, !13512, !13513, !13523, !13527}
!13510 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !13506, file: !12988, line: 775, type: !111)
!13511 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !13506, file: !12988, line: 775, type: !111)
!13512 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !13506, file: !12988, line: 775, type: !111)
!13513 = !DILocalVariable(name: "GPIO_InitStruct", scope: !13506, file: !12988, line: 777, type: !13514)
!13514 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !13515, line: 62, baseType: !13516)
!13515 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13515, line: 46, size: 160, elements: !13517)
!13517 = !{!13518, !13519, !13520, !13521, !13522}
!13518 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !13516, file: !13515, line: 48, baseType: !111, size: 32)
!13519 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !13516, file: !13515, line: 51, baseType: !111, size: 32, offset: 32)
!13520 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !13516, file: !13515, line: 54, baseType: !111, size: 32, offset: 64)
!13521 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !13516, file: !13515, line: 57, baseType: !111, size: 32, offset: 96)
!13522 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !13516, file: !13515, line: 60, baseType: !111, size: 32, offset: 128)
!13523 = !DILocalVariable(name: "tmpreg", scope: !13524, file: !12988, line: 787, type: !777)
!13524 = distinct !DILexicalBlock(scope: !13525, file: !12988, line: 787, column: 5)
!13525 = distinct !DILexicalBlock(scope: !13526, file: !12988, line: 783, column: 3)
!13526 = distinct !DILexicalBlock(scope: !13506, file: !12988, line: 782, column: 6)
!13527 = !DILocalVariable(name: "tmpreg", scope: !13528, file: !12988, line: 811, type: !777)
!13528 = distinct !DILexicalBlock(scope: !13529, file: !12988, line: 811, column: 5)
!13529 = distinct !DILexicalBlock(scope: !13526, file: !12988, line: 807, column: 3)
!13530 = !DILocation(line: 0, scope: !13506)
!13531 = !DILocation(line: 777, column: 3, scope: !13506)
!13532 = !DILocation(line: 777, column: 20, scope: !13506)
!13533 = !DILocation(line: 782, column: 15, scope: !13526)
!13534 = !DILocation(line: 782, column: 6, scope: !13506)
!13535 = !DILocation(line: 787, column: 5, scope: !13524)
!13536 = !DILocation(line: 787, column: 5, scope: !13525)
!13537 = !DILocation(line: 790, column: 21, scope: !13525)
!13538 = !DILocation(line: 790, column: 25, scope: !13525)
!13539 = !DILocation(line: 791, column: 21, scope: !13525)
!13540 = !DILocation(line: 791, column: 26, scope: !13525)
!13541 = !DILocation(line: 792, column: 21, scope: !13525)
!13542 = !DILocation(line: 792, column: 27, scope: !13525)
!13543 = !DILocation(line: 793, column: 21, scope: !13525)
!13544 = !DILocation(line: 793, column: 26, scope: !13525)
!13545 = !DILocation(line: 794, column: 21, scope: !13525)
!13546 = !DILocation(line: 794, column: 31, scope: !13525)
!13547 = !DILocation(line: 795, column: 5, scope: !13525)
!13548 = !DILocation(line: 798, column: 5, scope: !13525)
!13549 = !DILocation(line: 804, column: 3, scope: !13525)
!13550 = !DILocation(line: 811, column: 5, scope: !13528)
!13551 = !DILocation(line: 811, column: 5, scope: !13529)
!13552 = !DILocation(line: 814, column: 21, scope: !13529)
!13553 = !DILocation(line: 814, column: 25, scope: !13529)
!13554 = !DILocation(line: 815, column: 21, scope: !13529)
!13555 = !DILocation(line: 815, column: 26, scope: !13529)
!13556 = !DILocation(line: 816, column: 21, scope: !13529)
!13557 = !DILocation(line: 816, column: 27, scope: !13529)
!13558 = !DILocation(line: 817, column: 21, scope: !13529)
!13559 = !DILocation(line: 817, column: 26, scope: !13529)
!13560 = !DILocation(line: 818, column: 21, scope: !13529)
!13561 = !DILocation(line: 818, column: 31, scope: !13529)
!13562 = !DILocation(line: 819, column: 5, scope: !13529)
!13563 = !DILocation(line: 822, column: 5, scope: !13529)
!13564 = !DILocation(line: 0, scope: !13526)
!13565 = !DILocation(line: 830, column: 1, scope: !13506)
!13566 = !DISubprogram(name: "HAL_GPIO_Init", scope: !13515, file: !13515, line: 224, type: !13567, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2501)
!13567 = !DISubroutineType(types: !13568)
!13568 = !{null, !3524, !13569}
!13569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13514, size: 32)
!13570 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12988, file: !12988, line: 841, type: !323, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !2501)
!13571 = !DILocation(line: 843, column: 38, scope: !13570)
!13572 = !DILocation(line: 844, column: 1, scope: !13570)
!13573 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12988, file: !12988, line: 850, type: !323, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !2501)
!13574 = !DILocation(line: 852, column: 38, scope: !13573)
!13575 = !DILocation(line: 853, column: 1, scope: !13573)
!13576 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12988, file: !12988, line: 941, type: !7952, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !2501)
!13577 = !DILocation(line: 943, column: 10, scope: !13576)
!13578 = !DILocation(line: 943, column: 3, scope: !13576)
!13579 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12988, file: !12988, line: 952, type: !7952, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !2501)
!13580 = !DILocation(line: 955, column: 11, scope: !13579)
!13581 = !DILocation(line: 955, column: 56, scope: !13579)
!13582 = !DILocation(line: 955, column: 78, scope: !13579)
!13583 = !DILocation(line: 955, column: 36, scope: !13579)
!13584 = !DILocation(line: 955, column: 33, scope: !13579)
!13585 = !DILocation(line: 955, column: 3, scope: !13579)
!13586 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12988, file: !12988, line: 964, type: !7952, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !2501)
!13587 = !DILocation(line: 967, column: 11, scope: !13586)
!13588 = !DILocation(line: 967, column: 55, scope: !13586)
!13589 = !DILocation(line: 967, column: 77, scope: !13586)
!13590 = !DILocation(line: 967, column: 35, scope: !13586)
!13591 = !DILocation(line: 967, column: 32, scope: !13586)
!13592 = !DILocation(line: 967, column: 3, scope: !13586)
!13593 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12988, file: !12988, line: 977, type: !13594, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !13596)
!13594 = !DISubroutineType(types: !13595)
!13595 = !{null, !12996}
!13596 = !{!13597}
!13597 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13593, file: !12988, line: 977, type: !12996)
!13598 = !DILocation(line: 0, scope: !13593)
!13599 = !DILocation(line: 980, column: 22, scope: !13593)
!13600 = !DILocation(line: 980, column: 37, scope: !13593)
!13601 = !DILocation(line: 983, column: 12, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13593, file: !12988, line: 983, column: 6)
!13603 = !DILocation(line: 983, column: 15, scope: !13602)
!13604 = !DILocation(line: 983, column: 31, scope: !13602)
!13605 = !DILocation(line: 983, column: 6, scope: !13593)
!13606 = !DILocation(line: 985, column: 24, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13602, file: !12988, line: 984, column: 3)
!13608 = !DILocation(line: 985, column: 33, scope: !13607)
!13609 = !DILocation(line: 986, column: 3, scope: !13607)
!13610 = !DILocation(line: 987, column: 17, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13602, file: !12988, line: 987, column: 11)
!13612 = !DILocation(line: 987, column: 20, scope: !13611)
!13613 = !DILocation(line: 987, column: 35, scope: !13611)
!13614 = !DILocation(line: 0, scope: !13611)
!13615 = !DILocation(line: 987, column: 11, scope: !13602)
!13616 = !DILocation(line: 989, column: 33, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13611, file: !12988, line: 988, column: 3)
!13618 = !DILocation(line: 990, column: 3, scope: !13617)
!13619 = !DILocation(line: 993, column: 33, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13611, file: !12988, line: 992, column: 3)
!13621 = !DILocation(line: 997, column: 12, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13593, file: !12988, line: 997, column: 6)
!13623 = !DILocation(line: 997, column: 15, scope: !13622)
!13624 = !DILocation(line: 1003, column: 24, scope: !13625)
!13625 = distinct !DILexicalBlock(scope: !13622, file: !12988, line: 1002, column: 3)
!13626 = !DILocation(line: 1003, column: 33, scope: !13625)
!13627 = !DILocation(line: 1006, column: 61, scope: !13593)
!13628 = !DILocation(line: 1006, column: 81, scope: !13593)
!13629 = !DILocation(line: 1006, column: 22, scope: !13593)
!13630 = !DILocation(line: 1006, column: 42, scope: !13593)
!13631 = !DILocation(line: 1009, column: 12, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13593, file: !12988, line: 1009, column: 6)
!13633 = !DILocation(line: 1009, column: 17, scope: !13632)
!13634 = !DILocation(line: 1009, column: 35, scope: !13632)
!13635 = !DILocation(line: 1009, column: 6, scope: !13593)
!13636 = !DILocation(line: 1011, column: 24, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13632, file: !12988, line: 1010, column: 3)
!13638 = !DILocation(line: 1011, column: 33, scope: !13637)
!13639 = !DILocation(line: 1012, column: 3, scope: !13637)
!13640 = !DILocation(line: 1013, column: 17, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13632, file: !12988, line: 1013, column: 11)
!13642 = !DILocation(line: 1013, column: 22, scope: !13641)
!13643 = !DILocation(line: 1013, column: 39, scope: !13641)
!13644 = !DILocation(line: 0, scope: !13641)
!13645 = !DILocation(line: 1013, column: 11, scope: !13632)
!13646 = !DILocation(line: 1015, column: 33, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13641, file: !12988, line: 1014, column: 3)
!13648 = !DILocation(line: 1016, column: 3, scope: !13647)
!13649 = !DILocation(line: 1019, column: 33, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13641, file: !12988, line: 1018, column: 3)
!13651 = !DILocation(line: 1023, column: 12, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13593, file: !12988, line: 1023, column: 6)
!13653 = !DILocation(line: 1023, column: 16, scope: !13652)
!13654 = !DILocation(line: 1029, column: 24, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13652, file: !12988, line: 1028, column: 3)
!13656 = !DILocation(line: 1029, column: 33, scope: !13655)
!13657 = !DILocation(line: 1033, column: 12, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13593, file: !12988, line: 1033, column: 6)
!13659 = !DILocation(line: 1033, column: 15, scope: !13658)
!13660 = !DILocation(line: 1033, column: 30, scope: !13658)
!13661 = !DILocation(line: 1033, column: 6, scope: !13593)
!13662 = !DILocation(line: 1039, column: 28, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13658, file: !12988, line: 1038, column: 3)
!13664 = !DILocation(line: 1039, column: 37, scope: !13663)
!13665 = !DILocation(line: 1041, column: 54, scope: !13593)
!13666 = !DILocation(line: 1041, column: 62, scope: !13593)
!13667 = !DILocation(line: 1041, column: 26, scope: !13593)
!13668 = !DILocation(line: 1041, column: 36, scope: !13593)
!13669 = !DILocation(line: 1042, column: 49, scope: !13593)
!13670 = !DILocation(line: 1042, column: 57, scope: !13593)
!13671 = !DILocation(line: 1042, column: 26, scope: !13593)
!13672 = !DILocation(line: 1042, column: 31, scope: !13593)
!13673 = !DILocation(line: 1043, column: 50, scope: !13593)
!13674 = !DILocation(line: 1043, column: 78, scope: !13593)
!13675 = !DILocation(line: 1043, column: 26, scope: !13593)
!13676 = !DILocation(line: 1043, column: 31, scope: !13593)
!13677 = !DILocation(line: 1044, column: 52, scope: !13593)
!13678 = !DILocation(line: 1044, column: 102, scope: !13593)
!13679 = !DILocation(line: 1044, column: 109, scope: !13593)
!13680 = !DILocation(line: 1044, column: 26, scope: !13593)
!13681 = !DILocation(line: 1044, column: 31, scope: !13593)
!13682 = !DILocation(line: 1045, column: 50, scope: !13593)
!13683 = !DILocation(line: 1045, column: 78, scope: !13593)
!13684 = !DILocation(line: 1045, column: 26, scope: !13593)
!13685 = !DILocation(line: 1045, column: 31, scope: !13593)
!13686 = !DILocation(line: 1046, column: 1, scope: !13593)
!13687 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12988, file: !12988, line: 1056, type: !13688, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !13690)
!13688 = !DISubroutineType(types: !13689)
!13689 = !{null, !13351, !1354}
!13690 = !{!13691, !13692}
!13691 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13687, file: !12988, line: 1056, type: !13351)
!13692 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13687, file: !12988, line: 1056, type: !1354)
!13693 = !DILocation(line: 0, scope: !13687)
!13694 = !DILocation(line: 1059, column: 22, scope: !13687)
!13695 = !DILocation(line: 1059, column: 32, scope: !13687)
!13696 = !DILocation(line: 1062, column: 53, scope: !13687)
!13697 = !DILocation(line: 1062, column: 58, scope: !13687)
!13698 = !DILocation(line: 1062, column: 22, scope: !13687)
!13699 = !DILocation(line: 1062, column: 35, scope: !13687)
!13700 = !DILocation(line: 1065, column: 54, scope: !13687)
!13701 = !DILocation(line: 1065, column: 59, scope: !13687)
!13702 = !DILocation(line: 1065, column: 22, scope: !13687)
!13703 = !DILocation(line: 1065, column: 36, scope: !13687)
!13704 = !DILocation(line: 1068, column: 55, scope: !13687)
!13705 = !DILocation(line: 1068, column: 60, scope: !13687)
!13706 = !DILocation(line: 1068, column: 22, scope: !13687)
!13707 = !DILocation(line: 1068, column: 37, scope: !13687)
!13708 = !DILocation(line: 1071, column: 56, scope: !13687)
!13709 = !DILocation(line: 1071, column: 79, scope: !13687)
!13710 = !DILocation(line: 1071, column: 22, scope: !13687)
!13711 = !DILocation(line: 1071, column: 37, scope: !13687)
!13712 = !DILocation(line: 1074, column: 34, scope: !13687)
!13713 = !DILocation(line: 1074, column: 38, scope: !13687)
!13714 = !DILocation(line: 1074, column: 14, scope: !13687)
!13715 = !DILocation(line: 1075, column: 1, scope: !13687)
!13716 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12988, file: !12988, line: 1082, type: !323, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !2501)
!13717 = !DILocation(line: 1085, column: 6, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13716, file: !12988, line: 1085, column: 6)
!13719 = !DILocation(line: 1085, column: 6, scope: !13716)
!13720 = !DILocation(line: 1088, column: 5, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13718, file: !12988, line: 1086, column: 3)
!13722 = !DILocation(line: 1091, column: 5, scope: !13721)
!13723 = !DILocation(line: 1092, column: 3, scope: !13721)
!13724 = !DILocation(line: 1093, column: 1, scope: !13716)
!13725 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12988, file: !12988, line: 1099, type: !323, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !2501)
!13726 = !DILocation(line: 1104, column: 1, scope: !13725)
!13727 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13728, file: !13728, line: 257, type: !7962, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !13729)
!13728 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13729 = !{!13730}
!13730 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13727, file: !13728, line: 257, type: !111)
!13731 = !DILocation(line: 0, scope: !13727)
!13732 = !DILocation(line: 260, column: 3, scope: !13727)
!13733 = !DILocation(line: 261, column: 1, scope: !13727)
!13734 = distinct !DISubprogram(name: "LL_InitTick", scope: !13735, file: !13735, line: 260, type: !11345, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !13736)
!13735 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13736 = !{!13737, !13738}
!13737 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13734, file: !13735, line: 260, type: !111)
!13738 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13734, file: !13735, line: 260, type: !111)
!13739 = !DILocation(line: 0, scope: !13734)
!13740 = !DILocation(line: 263, column: 46, scope: !13734)
!13741 = !DILocation(line: 263, column: 55, scope: !13734)
!13742 = !DILocation(line: 263, column: 18, scope: !13734)
!13743 = !DILocation(line: 264, column: 18, scope: !13734)
!13744 = !DILocation(line: 265, column: 18, scope: !13734)
!13745 = !DILocation(line: 267, column: 1, scope: !13734)
!13746 = distinct !DISubprogram(name: "LL_mDelay", scope: !13728, file: !13728, line: 273, type: !7962, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !13747)
!13747 = !{!13748, !13749}
!13748 = !DILocalVariable(name: "Delay", arg: 1, scope: !13746, file: !13728, line: 273, type: !111)
!13749 = !DILocalVariable(name: "tmp", scope: !13746, file: !13728, line: 275, type: !777)
!13750 = !DILocation(line: 0, scope: !13746)
!13751 = !DILocation(line: 275, column: 3, scope: !13746)
!13752 = !DILocation(line: 275, column: 18, scope: !13746)
!13753 = !DILocation(line: 275, column: 33, scope: !13746)
!13754 = !DILocation(line: 277, column: 10, scope: !13746)
!13755 = !DILocation(line: 280, column: 12, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13746, file: !13728, line: 280, column: 6)
!13757 = !DILocation(line: 285, column: 3, scope: !13746)
!13758 = !DILocation(line: 287, column: 18, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13760, file: !13728, line: 287, column: 8)
!13760 = distinct !DILexicalBlock(scope: !13746, file: !13728, line: 286, column: 3)
!13761 = !DILocation(line: 292, column: 1, scope: !13746)
!13762 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13728, file: !13728, line: 323, type: !7962, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !13763)
!13763 = !{!13764}
!13764 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13762, file: !13728, line: 323, type: !111)
!13765 = !DILocation(line: 0, scope: !13762)
!13766 = !DILocation(line: 326, column: 19, scope: !13762)
!13767 = !DILocation(line: 327, column: 1, scope: !13762)
!13768 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13728, file: !13728, line: 338, type: !13769, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !13772)
!13769 = !DISubroutineType(types: !13770)
!13770 = !{!13771, !111}
!13771 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1301, line: 201, baseType: !1300)
!13772 = !{!13773, !13774, !13775, !13776, !13777}
!13773 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13768, file: !13728, line: 338, type: !111)
!13774 = !DILocalVariable(name: "timeout", scope: !13768, file: !13728, line: 340, type: !111)
!13775 = !DILocalVariable(name: "getlatency", scope: !13768, file: !13728, line: 341, type: !111)
!13776 = !DILocalVariable(name: "latency", scope: !13768, file: !13728, line: 342, type: !111)
!13777 = !DILocalVariable(name: "status", scope: !13768, file: !13728, line: 343, type: !13771)
!13778 = !DILocation(line: 0, scope: !13768)
!13779 = !DILocation(line: 347, column: 21, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13768, file: !13728, line: 347, column: 6)
!13781 = !DILocation(line: 347, column: 6, scope: !13768)
!13782 = !DILocation(line: 353, column: 8, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13784, file: !13728, line: 353, column: 8)
!13784 = distinct !DILexicalBlock(scope: !13780, file: !13728, line: 352, column: 3)
!13785 = !DILocation(line: 353, column: 40, scope: !13783)
!13786 = !DILocation(line: 353, column: 8, scope: !13784)
!13787 = !DILocation(line: 356, column: 26, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13789, file: !13728, line: 356, column: 10)
!13789 = distinct !DILexicalBlock(scope: !13783, file: !13728, line: 354, column: 5)
!13790 = !DILocation(line: 356, column: 55, scope: !13788)
!13791 = !DILocation(line: 362, column: 55, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13789, file: !13728, line: 362, column: 10)
!13793 = !DILocation(line: 368, column: 55, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13789, file: !13728, line: 368, column: 10)
!13795 = !DILocation(line: 374, column: 26, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13789, file: !13728, line: 374, column: 10)
!13797 = !DILocation(line: 374, column: 55, scope: !13796)
!13798 = !DILocation(line: 380, column: 28, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13800, file: !13728, line: 380, column: 12)
!13800 = distinct !DILexicalBlock(scope: !13796, file: !13728, line: 379, column: 7)
!13801 = !DILocation(line: 380, column: 57, scope: !13799)
!13802 = !DILocation(line: 387, column: 8, scope: !13803)
!13803 = distinct !DILexicalBlock(scope: !13784, file: !13728, line: 387, column: 8)
!13804 = !DILocation(line: 387, column: 40, scope: !13803)
!13805 = !DILocation(line: 387, column: 8, scope: !13784)
!13806 = !DILocation(line: 396, column: 26, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13808, file: !13728, line: 396, column: 10)
!13808 = distinct !DILexicalBlock(scope: !13803, file: !13728, line: 388, column: 5)
!13809 = !DILocation(line: 396, column: 55, scope: !13807)
!13810 = !DILocation(line: 402, column: 26, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13808, file: !13728, line: 402, column: 10)
!13812 = !DILocation(line: 402, column: 55, scope: !13811)
!13813 = !DILocation(line: 407, column: 26, scope: !13814)
!13814 = distinct !DILexicalBlock(scope: !13808, file: !13728, line: 407, column: 10)
!13815 = !DILocation(line: 407, column: 55, scope: !13814)
!13816 = !DILocation(line: 413, column: 28, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13818, file: !13728, line: 413, column: 12)
!13818 = distinct !DILexicalBlock(scope: !13814, file: !13728, line: 412, column: 7)
!13819 = !DILocation(line: 413, column: 57, scope: !13817)
!13820 = !DILocation(line: 0, scope: !13784)
!13821 = !DILocation(line: 444, column: 5, scope: !13784)
!13822 = !DILocation(line: 448, column: 5, scope: !13784)
!13823 = !DILocation(line: 451, column: 18, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13784, file: !13728, line: 449, column: 5)
!13825 = !DILocation(line: 452, column: 12, scope: !13824)
!13826 = !DILocation(line: 453, column: 26, scope: !13784)
!13827 = !DILocation(line: 453, column: 38, scope: !13784)
!13828 = !DILocation(line: 453, column: 5, scope: !13824)
!13829 = distinct !{!13829, !13822, !13830}
!13830 = !DILocation(line: 453, column: 54, scope: !13784)
!13831 = !DILocation(line: 0, scope: !13780)
!13832 = !DILocation(line: 464, column: 3, scope: !13768)
!13833 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13834, file: !13834, line: 519, type: !7952, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !2501)
!13834 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13835 = !DILocation(line: 521, column: 21, scope: !13833)
!13836 = !DILocation(line: 521, column: 3, scope: !13833)
!13837 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7565, file: !7565, line: 1543, type: !7962, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !13838)
!13838 = !{!13839}
!13839 = !DILocalVariable(name: "Latency", arg: 1, scope: !13837, file: !7565, line: 1543, type: !111)
!13840 = !DILocation(line: 0, scope: !13837)
!13841 = !DILocation(line: 1545, column: 3, scope: !13837)
!13842 = !DILocation(line: 1546, column: 1, scope: !13837)
!13843 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7565, file: !7565, line: 1569, type: !7952, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !2501)
!13844 = !DILocation(line: 1571, column: 21, scope: !13843)
!13845 = !DILocation(line: 1571, column: 3, scope: !13843)
!13846 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13728, file: !13728, line: 483, type: !13847, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !13863)
!13847 = !DISubroutineType(types: !13848)
!13848 = !{!13771, !13849, !13856}
!13849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13850, size: 32)
!13850 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13735, line: 114, baseType: !13851)
!13851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13735, line: 94, size: 96, elements: !13852)
!13852 = !{!13853, !13854, !13855}
!13853 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13851, file: !13735, line: 96, baseType: !111, size: 32)
!13854 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13851, file: !13735, line: 102, baseType: !111, size: 32, offset: 32)
!13855 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13851, file: !13735, line: 109, baseType: !111, size: 32, offset: 64)
!13856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13857, size: 32)
!13857 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13735, line: 139, baseType: !13858)
!13858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13735, line: 119, size: 96, elements: !13859)
!13859 = !{!13860, !13861, !13862}
!13860 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13858, file: !13735, line: 121, baseType: !111, size: 32)
!13861 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13858, file: !13735, line: 127, baseType: !111, size: 32, offset: 32)
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13858, file: !13735, line: 133, baseType: !111, size: 32, offset: 64)
!13863 = !{!13864, !13865, !13866, !13867}
!13864 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13846, file: !13728, line: 483, type: !13849)
!13865 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13846, file: !13728, line: 484, type: !13856)
!13866 = !DILocalVariable(name: "status", scope: !13846, file: !13728, line: 486, type: !13771)
!13867 = !DILocalVariable(name: "pllfreq", scope: !13846, file: !13728, line: 487, type: !111)
!13868 = !DILocation(line: 0, scope: !13846)
!13869 = !DILocation(line: 490, column: 6, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13846, file: !13728, line: 490, column: 6)
!13871 = !DILocation(line: 490, column: 25, scope: !13870)
!13872 = !DILocation(line: 490, column: 6, scope: !13846)
!13873 = !DILocation(line: 493, column: 15, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13870, file: !13728, line: 491, column: 3)
!13875 = !DILocation(line: 496, column: 8, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13874, file: !13728, line: 496, column: 8)
!13877 = !DILocation(line: 496, column: 29, scope: !13876)
!13878 = !DILocation(line: 496, column: 8, scope: !13874)
!13879 = !DILocation(line: 498, column: 7, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13876, file: !13728, line: 497, column: 5)
!13881 = !DILocation(line: 499, column: 7, scope: !13880)
!13882 = !DILocation(line: 499, column: 14, scope: !13880)
!13883 = !DILocation(line: 499, column: 35, scope: !13880)
!13884 = distinct !{!13884, !13881, !13885}
!13885 = !DILocation(line: 502, column: 7, scope: !13880)
!13886 = !DILocation(line: 506, column: 76, scope: !13874)
!13887 = !DILocation(line: 506, column: 103, scope: !13874)
!13888 = !DILocation(line: 507, column: 54, scope: !13874)
!13889 = !DILocation(line: 506, column: 5, scope: !13874)
!13890 = !DILocation(line: 510, column: 14, scope: !13874)
!13891 = !DILocation(line: 511, column: 3, scope: !13874)
!13892 = !DILocation(line: 0, scope: !13870)
!13893 = !DILocation(line: 518, column: 3, scope: !13846)
!13894 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13728, file: !13728, line: 642, type: !13895, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !13897)
!13895 = !DISubroutineType(types: !13896)
!13896 = !{!13771}
!13897 = !{!13898}
!13898 = !DILocalVariable(name: "status", scope: !13894, file: !13728, line: 644, type: !13771)
!13899 = !DILocation(line: 0, scope: !13894)
!13900 = !DILocation(line: 647, column: 6, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13894, file: !13728, line: 647, column: 6)
!13902 = !DILocation(line: 647, column: 27, scope: !13901)
!13903 = !DILocation(line: 663, column: 6, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13894, file: !13728, line: 663, column: 6)
!13905 = !DILocation(line: 663, column: 30, scope: !13904)
!13906 = !DILocation(line: 663, column: 6, scope: !13894)
!13907 = !DILocation(line: 669, column: 3, scope: !13894)
!13908 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13728, file: !13728, line: 611, type: !13909, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !13911)
!13909 = !DISubroutineType(types: !13910)
!13910 = !{!111, !111, !13849}
!13911 = !{!13912, !13913, !13914}
!13912 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13908, file: !13728, line: 611, type: !111)
!13913 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13908, file: !13728, line: 611, type: !13849)
!13914 = !DILocalVariable(name: "pllfreq", scope: !13908, file: !13728, line: 613, type: !111)
!13915 = !DILocation(line: 0, scope: !13908)
!13916 = !DILocation(line: 622, column: 56, scope: !13908)
!13917 = !DILocation(line: 622, column: 61, scope: !13908)
!13918 = !DILocation(line: 622, column: 32, scope: !13908)
!13919 = !DILocation(line: 626, column: 45, scope: !13908)
!13920 = !DILocation(line: 626, column: 50, scope: !13908)
!13921 = !DILocation(line: 626, column: 21, scope: !13908)
!13922 = !DILocation(line: 630, column: 47, scope: !13908)
!13923 = !DILocation(line: 630, column: 82, scope: !13908)
!13924 = !DILocation(line: 630, column: 21, scope: !13908)
!13925 = !DILocation(line: 633, column: 3, scope: !13908)
!13926 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10671, file: !10671, line: 3007, type: !7952, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !2501)
!13927 = !DILocation(line: 3009, column: 11, scope: !13926)
!13928 = !DILocation(line: 3009, column: 44, scope: !13926)
!13929 = !DILocation(line: 3009, column: 3, scope: !13926)
!13930 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10671, file: !10671, line: 2987, type: !323, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !2501)
!13931 = !DILocation(line: 2989, column: 3, scope: !13930)
!13932 = !DILocation(line: 2990, column: 1, scope: !13930)
!13933 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10671, file: !10671, line: 4304, type: !10805, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !13934)
!13934 = !{!13935, !13936, !13937, !13938}
!13935 = !DILocalVariable(name: "Source", arg: 1, scope: !13933, file: !10671, line: 4304, type: !111)
!13936 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13933, file: !10671, line: 4304, type: !111)
!13937 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13933, file: !10671, line: 4304, type: !111)
!13938 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13933, file: !10671, line: 4304, type: !111)
!13939 = !DILocation(line: 0, scope: !13933)
!13940 = !DILocation(line: 4306, column: 3, scope: !13933)
!13941 = !DILocation(line: 4308, column: 3, scope: !13933)
!13942 = !DILocation(line: 4312, column: 1, scope: !13933)
!13943 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13728, file: !13728, line: 681, type: !13944, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !13946)
!13944 = !DISubroutineType(types: !13945)
!13945 = !{!13771, !111, !13856}
!13946 = !{!13947, !13948, !13949, !13950}
!13947 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13943, file: !13728, line: 681, type: !111)
!13948 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13943, file: !13728, line: 681, type: !13856)
!13949 = !DILocalVariable(name: "status", scope: !13943, file: !13728, line: 683, type: !13771)
!13950 = !DILocalVariable(name: "hclk_frequency", scope: !13943, file: !13728, line: 684, type: !111)
!13951 = !DILocation(line: 0, scope: !13943)
!13952 = !DILocation(line: 691, column: 20, scope: !13943)
!13953 = !DILocation(line: 694, column: 6, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13943, file: !13728, line: 694, column: 6)
!13955 = !DILocation(line: 694, column: 22, scope: !13954)
!13956 = !DILocation(line: 694, column: 6, scope: !13943)
!13957 = !DILocation(line: 697, column: 14, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13954, file: !13728, line: 695, column: 3)
!13959 = !DILocation(line: 701, column: 13, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13943, file: !13728, line: 701, column: 6)
!13961 = !DILocation(line: 701, column: 6, scope: !13943)
!13962 = !DILocation(line: 704, column: 5, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !13960, file: !13728, line: 702, column: 3)
!13964 = !DILocation(line: 705, column: 5, scope: !13963)
!13965 = !DILocation(line: 705, column: 12, scope: !13963)
!13966 = !DILocation(line: 705, column: 33, scope: !13963)
!13967 = distinct !{!13967, !13964, !13968}
!13968 = !DILocation(line: 708, column: 5, scope: !13963)
!13969 = !DILocation(line: 711, column: 49, scope: !13963)
!13970 = !DILocation(line: 711, column: 5, scope: !13963)
!13971 = !DILocation(line: 712, column: 5, scope: !13963)
!13972 = !DILocation(line: 713, column: 5, scope: !13963)
!13973 = !DILocation(line: 713, column: 12, scope: !13963)
!13974 = !DILocation(line: 713, column: 37, scope: !13963)
!13975 = distinct !{!13975, !13972, !13976}
!13976 = !DILocation(line: 716, column: 5, scope: !13963)
!13977 = !DILocation(line: 719, column: 50, scope: !13963)
!13978 = !DILocation(line: 719, column: 5, scope: !13963)
!13979 = !DILocation(line: 720, column: 50, scope: !13963)
!13980 = !DILocation(line: 720, column: 5, scope: !13963)
!13981 = !DILocation(line: 721, column: 3, scope: !13963)
!13982 = !DILocation(line: 724, column: 6, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !13943, file: !13728, line: 724, column: 6)
!13984 = !DILocation(line: 724, column: 22, scope: !13983)
!13985 = !DILocation(line: 724, column: 6, scope: !13943)
!13986 = !DILocation(line: 727, column: 14, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13983, file: !13728, line: 725, column: 3)
!13988 = !DILocation(line: 728, column: 3, scope: !13987)
!13989 = !DILocation(line: 731, column: 13, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13943, file: !13728, line: 731, column: 6)
!13991 = !DILocation(line: 731, column: 6, scope: !13943)
!13992 = !DILocation(line: 733, column: 5, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13990, file: !13728, line: 732, column: 3)
!13994 = !DILocation(line: 734, column: 3, scope: !13993)
!13995 = !DILocation(line: 736, column: 3, scope: !13943)
!13996 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10671, file: !10671, line: 4184, type: !323, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !2501)
!13997 = !DILocation(line: 4186, column: 3, scope: !13996)
!13998 = !DILocation(line: 4187, column: 1, scope: !13996)
!13999 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10671, file: !10671, line: 4205, type: !7952, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !2501)
!14000 = !DILocation(line: 4207, column: 11, scope: !13999)
!14001 = !DILocation(line: 4207, column: 44, scope: !13999)
!14002 = !DILocation(line: 4207, column: 3, scope: !13999)
!14003 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10671, file: !10671, line: 3224, type: !7962, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !14004)
!14004 = !{!14005}
!14005 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14003, file: !10671, line: 3224, type: !111)
!14006 = !DILocation(line: 0, scope: !14003)
!14007 = !DILocation(line: 3226, column: 3, scope: !14003)
!14008 = !DILocation(line: 3227, column: 1, scope: !14003)
!14009 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10671, file: !10671, line: 3188, type: !7962, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !14010)
!14010 = !{!14011}
!14011 = !DILocalVariable(name: "Source", arg: 1, scope: !14009, file: !10671, line: 3188, type: !111)
!14012 = !DILocation(line: 0, scope: !14009)
!14013 = !DILocation(line: 3190, column: 3, scope: !14009)
!14014 = !DILocation(line: 3191, column: 1, scope: !14009)
!14015 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10671, file: !10671, line: 3204, type: !7952, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !2501)
!14016 = !DILocation(line: 3206, column: 21, scope: !14015)
!14017 = !DILocation(line: 3206, column: 3, scope: !14015)
!14018 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10671, file: !10671, line: 3240, type: !7962, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !14019)
!14019 = !{!14020}
!14020 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14018, file: !10671, line: 3240, type: !111)
!14021 = !DILocation(line: 0, scope: !14018)
!14022 = !DILocation(line: 3242, column: 3, scope: !14018)
!14023 = !DILocation(line: 3243, column: 1, scope: !14018)
!14024 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10671, file: !10671, line: 3256, type: !7962, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !14025)
!14025 = !{!14026}
!14026 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14024, file: !10671, line: 3256, type: !111)
!14027 = !DILocation(line: 0, scope: !14024)
!14028 = !DILocation(line: 3258, column: 3, scope: !14024)
!14029 = !DILocation(line: 3259, column: 1, scope: !14024)
!14030 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10671, file: !10671, line: 5153, type: !7952, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !2501)
!14031 = !DILocation(line: 5155, column: 11, scope: !14030)
!14032 = !DILocation(line: 5155, column: 47, scope: !14030)
!14033 = !DILocation(line: 5155, column: 3, scope: !14030)
!14034 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13728, file: !13728, line: 540, type: !14035, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !14037)
!14035 = !DISubroutineType(types: !14036)
!14036 = !{!13771, !111, !111, !13849, !13856}
!14037 = !{!14038, !14039, !14040, !14041, !14042, !14043}
!14038 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14034, file: !13728, line: 540, type: !111)
!14039 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14034, file: !13728, line: 540, type: !111)
!14040 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14034, file: !13728, line: 541, type: !13849)
!14041 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14034, file: !13728, line: 541, type: !13856)
!14042 = !DILocalVariable(name: "status", scope: !14034, file: !13728, line: 543, type: !13771)
!14043 = !DILocalVariable(name: "pllfreq", scope: !14034, file: !13728, line: 544, type: !111)
!14044 = !DILocation(line: 0, scope: !14034)
!14045 = !DILocation(line: 551, column: 6, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14034, file: !13728, line: 551, column: 6)
!14047 = !DILocation(line: 551, column: 25, scope: !14046)
!14048 = !DILocation(line: 551, column: 6, scope: !14034)
!14049 = !DILocation(line: 554, column: 15, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14046, file: !13728, line: 552, column: 3)
!14051 = !DILocation(line: 557, column: 8, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !14050, file: !13728, line: 557, column: 8)
!14053 = !DILocation(line: 557, column: 29, scope: !14052)
!14054 = !DILocation(line: 557, column: 8, scope: !14050)
!14055 = !DILocation(line: 560, column: 20, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !14057, file: !13728, line: 560, column: 10)
!14057 = distinct !DILexicalBlock(scope: !14052, file: !13728, line: 558, column: 5)
!14058 = !DILocation(line: 560, column: 10, scope: !14057)
!14059 = !DILocation(line: 562, column: 9, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14056, file: !13728, line: 561, column: 7)
!14061 = !DILocation(line: 563, column: 7, scope: !14060)
!14062 = !DILocation(line: 566, column: 9, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14056, file: !13728, line: 565, column: 7)
!14064 = !DILocation(line: 570, column: 7, scope: !14057)
!14065 = !DILocation(line: 571, column: 7, scope: !14057)
!14066 = !DILocation(line: 571, column: 14, scope: !14057)
!14067 = !DILocation(line: 571, column: 35, scope: !14057)
!14068 = distinct !{!14068, !14065, !14069}
!14069 = !DILocation(line: 574, column: 7, scope: !14057)
!14070 = !DILocation(line: 578, column: 76, scope: !14050)
!14071 = !DILocation(line: 578, column: 103, scope: !14050)
!14072 = !DILocation(line: 579, column: 54, scope: !14050)
!14073 = !DILocation(line: 578, column: 5, scope: !14050)
!14074 = !DILocation(line: 582, column: 14, scope: !14050)
!14075 = !DILocation(line: 583, column: 3, scope: !14050)
!14076 = !DILocation(line: 0, scope: !14046)
!14077 = !DILocation(line: 590, column: 3, scope: !14034)
!14078 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10671, file: !10671, line: 2969, type: !7952, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !2501)
!14079 = !DILocation(line: 2971, column: 11, scope: !14078)
!14080 = !DILocation(line: 2971, column: 44, scope: !14078)
!14081 = !DILocation(line: 2971, column: 3, scope: !14078)
!14082 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10671, file: !10671, line: 2929, type: !323, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !2501)
!14083 = !DILocation(line: 2931, column: 3, scope: !14082)
!14084 = !DILocation(line: 2932, column: 1, scope: !14082)
!14085 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10671, file: !10671, line: 2939, type: !323, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !2501)
!14086 = !DILocation(line: 2941, column: 3, scope: !14085)
!14087 = !DILocation(line: 2942, column: 1, scope: !14085)
!14088 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10671, file: !10671, line: 2949, type: !323, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !2501)
!14089 = !DILocation(line: 2951, column: 3, scope: !14088)
!14090 = !DILocation(line: 2952, column: 1, scope: !14088)
!14091 = distinct !DISubprogram(name: "z_device_state_init", scope: !14092, file: !14092, line: 23, type: !323, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3600, retainedNodes: !14093)
!14092 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14093 = !{!14094}
!14094 = !DILocalVariable(name: "dev", scope: !14091, file: !14092, line: 25, type: !14095)
!14095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14096, size: 32)
!14096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14097)
!14097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !14098)
!14098 = !{!14099, !14100, !14101, !14102, !14108, !14109}
!14099 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14097, file: !797, line: 380, baseType: !108, size: 32)
!14100 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14097, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!14101 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !14097, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!14102 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14097, file: !797, line: 386, baseType: !14103, size: 32, offset: 96)
!14103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14104, size: 32)
!14104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !14105)
!14105 = !{!14106, !14107}
!14106 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14104, file: !797, line: 359, baseType: !166, size: 8)
!14107 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14104, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14108 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14097, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!14109 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !14097, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!14110 = !DILocation(line: 0, scope: !14091)
!14111 = !DILocation(line: 31, column: 1, scope: !14091)
!14112 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !14092, file: !14092, line: 33, type: !14113, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3600, retainedNodes: !14115)
!14113 = !DISubroutineType(types: !14114)
!14114 = !{!14095, !108}
!14115 = !{!14116, !14117}
!14116 = !DILocalVariable(name: "name", arg: 1, scope: !14112, file: !14092, line: 33, type: !108)
!14117 = !DILocalVariable(name: "dev", scope: !14112, file: !14092, line: 35, type: !14095)
!14118 = !DILocation(line: 0, scope: !14112)
!14119 = !DILocation(line: 40, column: 12, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !14112, file: !14092, line: 40, column: 6)
!14121 = !DILocation(line: 40, column: 21, scope: !14120)
!14122 = !DILocation(line: 40, column: 25, scope: !14120)
!14123 = !DILocation(line: 40, column: 33, scope: !14120)
!14124 = !DILocation(line: 40, column: 6, scope: !14112)
!14125 = !DILocation(line: 55, column: 2, scope: !14126)
!14126 = distinct !DILexicalBlock(scope: !14112, file: !14092, line: 55, column: 2)
!14127 = !DILocation(line: 50, column: 7, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14129, file: !14092, line: 50, column: 7)
!14129 = distinct !DILexicalBlock(scope: !14130, file: !14092, line: 49, column: 57)
!14130 = distinct !DILexicalBlock(scope: !14131, file: !14092, line: 49, column: 2)
!14131 = distinct !DILexicalBlock(scope: !14112, file: !14092, line: 49, column: 2)
!14132 = !DILocation(line: 50, column: 30, scope: !14128)
!14133 = !DILocation(line: 50, column: 39, scope: !14128)
!14134 = !DILocation(line: 50, column: 44, scope: !14128)
!14135 = !DILocation(line: 50, column: 7, scope: !14129)
!14136 = !DILocation(line: 49, column: 53, scope: !14130)
!14137 = !DILocation(line: 49, column: 33, scope: !14130)
!14138 = !DILocation(line: 49, column: 2, scope: !14131)
!14139 = distinct !{!14139, !14138, !14140}
!14140 = !DILocation(line: 53, column: 2, scope: !14131)
!14141 = !DILocation(line: 56, column: 7, scope: !14142)
!14142 = distinct !DILexicalBlock(scope: !14143, file: !14092, line: 56, column: 7)
!14143 = distinct !DILexicalBlock(scope: !14144, file: !14092, line: 55, column: 57)
!14144 = distinct !DILexicalBlock(scope: !14126, file: !14092, line: 55, column: 2)
!14145 = !DILocation(line: 56, column: 30, scope: !14142)
!14146 = !DILocation(line: 56, column: 52, scope: !14142)
!14147 = !DILocation(line: 56, column: 34, scope: !14142)
!14148 = !DILocation(line: 56, column: 58, scope: !14142)
!14149 = !DILocation(line: 56, column: 7, scope: !14143)
!14150 = !DILocation(line: 55, column: 53, scope: !14144)
!14151 = !DILocation(line: 55, column: 33, scope: !14144)
!14152 = distinct !{!14152, !14125, !14153}
!14153 = !DILocation(line: 59, column: 2, scope: !14126)
!14154 = !DILocation(line: 62, column: 1, scope: !14112)
!14155 = distinct !DISubprogram(name: "z_device_is_ready", scope: !14092, file: !14092, line: 93, type: !14156, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3600, retainedNodes: !14158)
!14156 = !DISubroutineType(types: !14157)
!14157 = !{!122, !14095}
!14158 = !{!14159}
!14159 = !DILocalVariable(name: "dev", arg: 1, scope: !14155, file: !14092, line: 93, type: !14095)
!14160 = !DILocation(line: 0, scope: !14155)
!14161 = !DILocation(line: 99, column: 10, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14155, file: !14092, line: 99, column: 6)
!14163 = !DILocation(line: 99, column: 6, scope: !14155)
!14164 = !DILocation(line: 103, column: 14, scope: !14155)
!14165 = !DILocation(line: 103, column: 21, scope: !14155)
!14166 = !DILocation(line: 103, column: 33, scope: !14155)
!14167 = !DILocation(line: 103, column: 49, scope: !14155)
!14168 = !DILocation(line: 103, column: 58, scope: !14155)
!14169 = !DILocation(line: 104, column: 1, scope: !14155)
!14170 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !14092, file: !14092, line: 87, type: !14171, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3600, retainedNodes: !14174)
!14171 = !DISubroutineType(types: !14172)
!14172 = !{!156, !14173}
!14173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14095, size: 32)
!14174 = !{!14175}
!14175 = !DILocalVariable(name: "devices", arg: 1, scope: !14170, file: !14092, line: 87, type: !14173)
!14176 = !DILocation(line: 0, scope: !14170)
!14177 = !DILocation(line: 89, column: 11, scope: !14170)
!14178 = !DILocation(line: 90, column: 2, scope: !14170)
!14179 = distinct !DISubprogram(name: "device_required_foreach", scope: !14092, file: !14092, line: 125, type: !14180, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3600, retainedNodes: !14186)
!14180 = !DISubroutineType(types: !14181)
!14181 = !{!103, !14095, !14182, !102}
!14182 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !797, line: 471, baseType: !14183)
!14183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14184, size: 32)
!14184 = !DISubroutineType(types: !14185)
!14185 = !{!103, !14095, !102}
!14186 = !{!14187, !14188, !14189, !14190, !14191}
!14187 = !DILocalVariable(name: "dev", arg: 1, scope: !14179, file: !14092, line: 125, type: !14095)
!14188 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14179, file: !14092, line: 126, type: !14182)
!14189 = !DILocalVariable(name: "context", arg: 3, scope: !14179, file: !14092, line: 127, type: !102)
!14190 = !DILocalVariable(name: "handle_count", scope: !14179, file: !14092, line: 129, type: !156)
!14191 = !DILocalVariable(name: "handles", scope: !14179, file: !14092, line: 130, type: !810)
!14192 = !DILocation(line: 0, scope: !14179)
!14193 = !DILocation(line: 129, column: 2, scope: !14179)
!14194 = !DILocation(line: 129, column: 9, scope: !14179)
!14195 = !DILocation(line: 130, column: 35, scope: !14179)
!14196 = !DILocation(line: 132, column: 33, scope: !14179)
!14197 = !DILocation(line: 132, column: 9, scope: !14179)
!14198 = !DILocation(line: 133, column: 1, scope: !14179)
!14199 = !DILocation(line: 132, column: 2, scope: !14179)
!14200 = distinct !DISubprogram(name: "device_required_handles_get", scope: !797, file: !797, line: 493, type: !14201, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3600, retainedNodes: !14203)
!14201 = !DISubroutineType(types: !14202)
!14202 = !{!810, !14095, !3097}
!14203 = !{!14204, !14205, !14206, !14207}
!14204 = !DILocalVariable(name: "dev", arg: 1, scope: !14200, file: !797, line: 493, type: !14095)
!14205 = !DILocalVariable(name: "count", arg: 2, scope: !14200, file: !797, line: 493, type: !3097)
!14206 = !DILocalVariable(name: "rv", scope: !14200, file: !797, line: 495, type: !810)
!14207 = !DILocalVariable(name: "i", scope: !14208, file: !797, line: 498, type: !156)
!14208 = distinct !DILexicalBlock(scope: !14209, file: !797, line: 497, column: 18)
!14209 = distinct !DILexicalBlock(scope: !14200, file: !797, line: 497, column: 6)
!14210 = !DILocation(line: 0, scope: !14200)
!14211 = !DILocation(line: 495, column: 35, scope: !14200)
!14212 = !DILocation(line: 497, column: 9, scope: !14209)
!14213 = !DILocation(line: 497, column: 6, scope: !14200)
!14214 = !DILocation(line: 0, scope: !14208)
!14215 = !DILocation(line: 500, column: 11, scope: !14208)
!14216 = !DILocation(line: 500, column: 40, scope: !14208)
!14217 = !DILocation(line: 502, column: 4, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14208, file: !797, line: 501, column: 40)
!14219 = distinct !{!14219, !14220, !14221}
!14220 = !DILocation(line: 500, column: 3, scope: !14208)
!14221 = !DILocation(line: 503, column: 3, scope: !14208)
!14222 = !DILocation(line: 504, column: 10, scope: !14208)
!14223 = !DILocation(line: 505, column: 2, scope: !14208)
!14224 = !DILocation(line: 507, column: 2, scope: !14200)
!14225 = distinct !DISubprogram(name: "device_visitor", scope: !14092, file: !14092, line: 106, type: !14226, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3600, retainedNodes: !14228)
!14226 = !DISubroutineType(types: !14227)
!14227 = !{!103, !810, !156, !14182, !102}
!14228 = !{!14229, !14230, !14231, !14232, !14233, !14235, !14238, !14239}
!14229 = !DILocalVariable(name: "handles", arg: 1, scope: !14225, file: !14092, line: 106, type: !810)
!14230 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14225, file: !14092, line: 107, type: !156)
!14231 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14225, file: !14092, line: 108, type: !14182)
!14232 = !DILocalVariable(name: "context", arg: 4, scope: !14225, file: !14092, line: 109, type: !102)
!14233 = !DILocalVariable(name: "i", scope: !14234, file: !14092, line: 112, type: !156)
!14234 = distinct !DILexicalBlock(scope: !14225, file: !14092, line: 112, column: 2)
!14235 = !DILocalVariable(name: "dh", scope: !14236, file: !14092, line: 113, type: !812)
!14236 = distinct !DILexicalBlock(scope: !14237, file: !14092, line: 112, column: 44)
!14237 = distinct !DILexicalBlock(scope: !14234, file: !14092, line: 112, column: 2)
!14238 = !DILocalVariable(name: "rdev", scope: !14236, file: !14092, line: 114, type: !14095)
!14239 = !DILocalVariable(name: "rc", scope: !14236, file: !14092, line: 115, type: !103)
!14240 = !DILocation(line: 0, scope: !14225)
!14241 = !DILocation(line: 0, scope: !14234)
!14242 = !DILocation(line: 112, column: 23, scope: !14237)
!14243 = !DILocation(line: 112, column: 2, scope: !14234)
!14244 = distinct !{!14244, !14243, !14245}
!14245 = !DILocation(line: 120, column: 2, scope: !14234)
!14246 = !DILocation(line: 113, column: 24, scope: !14236)
!14247 = !DILocation(line: 0, scope: !14236)
!14248 = !DILocation(line: 114, column: 31, scope: !14236)
!14249 = !DILocation(line: 115, column: 12, scope: !14236)
!14250 = !DILocation(line: 117, column: 10, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14236, file: !14092, line: 117, column: 7)
!14252 = !DILocation(line: 112, column: 39, scope: !14237)
!14253 = !DILocation(line: 123, column: 1, scope: !14225)
!14254 = distinct !DISubprogram(name: "device_from_handle", scope: !797, file: !797, line: 439, type: !14255, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3600, retainedNodes: !14257)
!14255 = !DISubroutineType(types: !14256)
!14256 = !{!14095, !812}
!14257 = !{!14258, !14259, !14260}
!14258 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14254, file: !797, line: 439, type: !812)
!14259 = !DILocalVariable(name: "dev", scope: !14254, file: !797, line: 443, type: !14095)
!14260 = !DILocalVariable(name: "numdev", scope: !14254, file: !797, line: 444, type: !156)
!14261 = !DILocation(line: 0, scope: !14254)
!14262 = !DILocation(line: 446, column: 7, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14254, file: !797, line: 446, column: 6)
!14264 = !DILocation(line: 446, column: 18, scope: !14263)
!14265 = !DILocation(line: 446, column: 23, scope: !14263)
!14266 = !DILocation(line: 450, column: 2, scope: !14254)
!14267 = distinct !DISubprogram(name: "device_supported_foreach", scope: !14092, file: !14092, line: 135, type: !14180, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3600, retainedNodes: !14268)
!14268 = !{!14269, !14270, !14271, !14272, !14273}
!14269 = !DILocalVariable(name: "dev", arg: 1, scope: !14267, file: !14092, line: 135, type: !14095)
!14270 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14267, file: !14092, line: 136, type: !14182)
!14271 = !DILocalVariable(name: "context", arg: 3, scope: !14267, file: !14092, line: 137, type: !102)
!14272 = !DILocalVariable(name: "handle_count", scope: !14267, file: !14092, line: 139, type: !156)
!14273 = !DILocalVariable(name: "handles", scope: !14267, file: !14092, line: 140, type: !810)
!14274 = !DILocation(line: 0, scope: !14267)
!14275 = !DILocation(line: 139, column: 2, scope: !14267)
!14276 = !DILocation(line: 139, column: 9, scope: !14267)
!14277 = !DILocation(line: 140, column: 35, scope: !14267)
!14278 = !DILocation(line: 142, column: 33, scope: !14267)
!14279 = !DILocation(line: 142, column: 9, scope: !14267)
!14280 = !DILocation(line: 143, column: 1, scope: !14267)
!14281 = !DILocation(line: 142, column: 2, scope: !14267)
!14282 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !797, file: !797, line: 573, type: !14201, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3600, retainedNodes: !14283)
!14283 = !{!14284, !14285, !14286, !14287, !14288}
!14284 = !DILocalVariable(name: "dev", arg: 1, scope: !14282, file: !797, line: 573, type: !14095)
!14285 = !DILocalVariable(name: "count", arg: 2, scope: !14282, file: !797, line: 573, type: !3097)
!14286 = !DILocalVariable(name: "rv", scope: !14282, file: !797, line: 575, type: !810)
!14287 = !DILocalVariable(name: "region", scope: !14282, file: !797, line: 576, type: !156)
!14288 = !DILocalVariable(name: "i", scope: !14282, file: !797, line: 577, type: !156)
!14289 = !DILocation(line: 0, scope: !14282)
!14290 = !DILocation(line: 575, column: 35, scope: !14282)
!14291 = !DILocation(line: 579, column: 9, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14282, file: !797, line: 579, column: 6)
!14293 = !DILocation(line: 579, column: 6, scope: !14282)
!14294 = !DILocation(line: 582, column: 8, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14296, file: !797, line: 582, column: 8)
!14296 = distinct !DILexicalBlock(scope: !14297, file: !797, line: 581, column: 23)
!14297 = distinct !DILexicalBlock(scope: !14292, file: !797, line: 579, column: 18)
!14298 = !DILocation(line: 582, column: 12, scope: !14295)
!14299 = !DILocation(line: 585, column: 6, scope: !14296)
!14300 = !DILocation(line: 0, scope: !14297)
!14301 = !DILocation(line: 581, column: 17, scope: !14297)
!14302 = !DILocation(line: 581, column: 3, scope: !14297)
!14303 = !DILocation(line: 588, column: 10, scope: !14297)
!14304 = !DILocation(line: 588, column: 16, scope: !14297)
!14305 = !DILocation(line: 589, column: 4, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14297, file: !797, line: 588, column: 39)
!14307 = !DILocation(line: 588, column: 3, scope: !14297)
!14308 = distinct !{!14308, !14307, !14309}
!14309 = !DILocation(line: 590, column: 3, scope: !14297)
!14310 = !DILocation(line: 591, column: 10, scope: !14297)
!14311 = !DILocation(line: 592, column: 2, scope: !14297)
!14312 = !DILocation(line: 575, column: 25, scope: !14282)
!14313 = !DILocation(line: 594, column: 2, scope: !14282)
!14314 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2293, file: !2293, line: 49, type: !14315, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2290, retainedNodes: !2501)
!14315 = !DISubroutineType(types: !14316)
!14316 = !{!744}
!14317 = !DILocation(line: 51, column: 10, scope: !14314)
!14318 = !DILocation(line: 51, column: 20, scope: !14314)
!14319 = !DILocation(line: 51, column: 2, scope: !14314)
!14320 = distinct !DISubprogram(name: "coredump", scope: !3607, file: !3607, line: 209, type: !14321, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14469)
!14321 = !DISubroutineType(types: !14322)
!14322 = !{null, !32, !14323, !14367}
!14323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14324, size: 32)
!14324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14325)
!14325 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3227, line: 141, baseType: !14326)
!14326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3227, line: 97, size: 256, elements: !14327)
!14327 = !{!14328}
!14328 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14326, file: !3227, line: 107, baseType: !14329, size: 256)
!14329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3227, line: 98, size: 256, elements: !14330)
!14330 = !{!14331, !14336, !14341, !14346, !14351, !14356, !14361, !14366}
!14331 = !DIDerivedType(tag: DW_TAG_member, scope: !14329, file: !3227, line: 99, baseType: !14332, size: 32)
!14332 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14329, file: !3227, line: 99, size: 32, elements: !14333)
!14333 = !{!14334, !14335}
!14334 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14332, file: !3227, line: 99, baseType: !111, size: 32)
!14335 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14332, file: !3227, line: 99, baseType: !111, size: 32)
!14336 = !DIDerivedType(tag: DW_TAG_member, scope: !14329, file: !3227, line: 100, baseType: !14337, size: 32, offset: 32)
!14337 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14329, file: !3227, line: 100, size: 32, elements: !14338)
!14338 = !{!14339, !14340}
!14339 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14337, file: !3227, line: 100, baseType: !111, size: 32)
!14340 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14337, file: !3227, line: 100, baseType: !111, size: 32)
!14341 = !DIDerivedType(tag: DW_TAG_member, scope: !14329, file: !3227, line: 101, baseType: !14342, size: 32, offset: 64)
!14342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14329, file: !3227, line: 101, size: 32, elements: !14343)
!14343 = !{!14344, !14345}
!14344 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14342, file: !3227, line: 101, baseType: !111, size: 32)
!14345 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14342, file: !3227, line: 101, baseType: !111, size: 32)
!14346 = !DIDerivedType(tag: DW_TAG_member, scope: !14329, file: !3227, line: 102, baseType: !14347, size: 32, offset: 96)
!14347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14329, file: !3227, line: 102, size: 32, elements: !14348)
!14348 = !{!14349, !14350}
!14349 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14347, file: !3227, line: 102, baseType: !111, size: 32)
!14350 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14347, file: !3227, line: 102, baseType: !111, size: 32)
!14351 = !DIDerivedType(tag: DW_TAG_member, scope: !14329, file: !3227, line: 103, baseType: !14352, size: 32, offset: 128)
!14352 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14329, file: !3227, line: 103, size: 32, elements: !14353)
!14353 = !{!14354, !14355}
!14354 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14352, file: !3227, line: 103, baseType: !111, size: 32)
!14355 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14352, file: !3227, line: 103, baseType: !111, size: 32)
!14356 = !DIDerivedType(tag: DW_TAG_member, scope: !14329, file: !3227, line: 104, baseType: !14357, size: 32, offset: 160)
!14357 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14329, file: !3227, line: 104, size: 32, elements: !14358)
!14358 = !{!14359, !14360}
!14359 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14357, file: !3227, line: 104, baseType: !111, size: 32)
!14360 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14357, file: !3227, line: 104, baseType: !111, size: 32)
!14361 = !DIDerivedType(tag: DW_TAG_member, scope: !14329, file: !3227, line: 105, baseType: !14362, size: 32, offset: 192)
!14362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14329, file: !3227, line: 105, size: 32, elements: !14363)
!14363 = !{!14364, !14365}
!14364 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14362, file: !3227, line: 105, baseType: !111, size: 32)
!14365 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14362, file: !3227, line: 105, baseType: !111, size: 32)
!14366 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14329, file: !3227, line: 106, baseType: !111, size: 32, offset: 224)
!14367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14368, size: 32)
!14368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !14369)
!14369 = !{!14370, !14428, !14440, !14441, !14442, !14443, !14449, !14464}
!14370 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14368, file: !199, line: 247, baseType: !14371, size: 384)
!14371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !14372)
!14372 = !{!14373, !14397, !14404, !14405, !14406, !14415, !14416, !14417}
!14373 = !DIDerivedType(tag: DW_TAG_member, scope: !14371, file: !199, line: 60, baseType: !14374, size: 64)
!14374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14371, file: !199, line: 60, size: 64, elements: !14375)
!14375 = !{!14376, !14391}
!14376 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14374, file: !199, line: 61, baseType: !14377, size: 64)
!14377 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !14378)
!14378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !14379)
!14379 = !{!14380, !14386}
!14380 = !DIDerivedType(tag: DW_TAG_member, scope: !14378, file: !136, line: 38, baseType: !14381, size: 32)
!14381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14378, file: !136, line: 38, size: 32, elements: !14382)
!14382 = !{!14383, !14385}
!14383 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14381, file: !136, line: 39, baseType: !14384, size: 32)
!14384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14378, size: 32)
!14385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14381, file: !136, line: 40, baseType: !14384, size: 32)
!14386 = !DIDerivedType(tag: DW_TAG_member, scope: !14378, file: !136, line: 42, baseType: !14387, size: 32, offset: 32)
!14387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14378, file: !136, line: 42, size: 32, elements: !14388)
!14388 = !{!14389, !14390}
!14389 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14387, file: !136, line: 43, baseType: !14384, size: 32)
!14390 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14387, file: !136, line: 44, baseType: !14384, size: 32)
!14391 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14374, file: !199, line: 62, baseType: !14392, size: 64)
!14392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !14393)
!14393 = !{!14394}
!14394 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14392, file: !211, line: 50, baseType: !14395, size: 64)
!14395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14396, size: 64, elements: !216)
!14396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14392, size: 32)
!14397 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14371, file: !199, line: 68, baseType: !14398, size: 32, offset: 64)
!14398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14399, size: 32)
!14399 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !14400)
!14400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !14401)
!14401 = !{!14402}
!14402 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14400, file: !131, line: 232, baseType: !14403, size: 64)
!14403 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !14378)
!14404 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14371, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!14405 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14371, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!14406 = !DIDerivedType(tag: DW_TAG_member, scope: !14371, file: !199, line: 90, baseType: !14407, size: 16, offset: 112)
!14407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14371, file: !199, line: 90, size: 16, elements: !14408)
!14408 = !{!14409, !14414}
!14409 = !DIDerivedType(tag: DW_TAG_member, scope: !14407, file: !199, line: 91, baseType: !14410, size: 16)
!14410 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14407, file: !199, line: 91, size: 16, elements: !14411)
!14411 = !{!14412, !14413}
!14412 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14410, file: !199, line: 96, baseType: !229, size: 8)
!14413 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14410, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!14414 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14407, file: !199, line: 100, baseType: !181, size: 16)
!14415 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14371, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!14416 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14371, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!14417 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14371, file: !199, line: 131, baseType: !14418, size: 192, offset: 192)
!14418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !14419)
!14419 = !{!14420, !14421, !14427}
!14420 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14418, file: !131, line: 245, baseType: !14377, size: 64)
!14421 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14418, file: !131, line: 246, baseType: !14422, size: 32, offset: 64)
!14422 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !14423)
!14423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14424, size: 32)
!14424 = !DISubroutineType(types: !14425)
!14425 = !{null, !14426}
!14426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14418, size: 32)
!14427 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14418, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!14428 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14368, file: !199, line: 250, baseType: !14429, size: 288, offset: 384)
!14429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !14430)
!14430 = !{!14431, !14432, !14433, !14434, !14435, !14436, !14437, !14438, !14439}
!14431 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14429, file: !248, line: 26, baseType: !111, size: 32)
!14432 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14429, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!14433 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14429, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!14434 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14429, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!14435 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14429, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!14436 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14429, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!14437 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14429, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!14438 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14429, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!14439 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14429, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!14440 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14368, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!14441 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14368, file: !199, line: 256, baseType: !14399, size: 64, offset: 704)
!14442 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14368, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!14443 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14368, file: !199, line: 300, baseType: !14444, size: 96, offset: 800)
!14444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !14445)
!14445 = !{!14446, !14447, !14448}
!14446 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14444, file: !199, line: 153, baseType: !22, size: 32)
!14447 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14444, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!14448 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14444, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!14449 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14368, file: !199, line: 325, baseType: !14450, size: 32, offset: 896)
!14450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14451, size: 32)
!14451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !14452)
!14452 = !{!14453, !14459, !14460}
!14453 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14451, file: !127, line: 5074, baseType: !14454, size: 96)
!14454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !14455)
!14455 = !{!14456, !14457, !14458}
!14456 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14454, file: !274, line: 57, baseType: !277, size: 32)
!14457 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14454, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!14458 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14454, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!14459 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14451, file: !127, line: 5075, baseType: !14399, size: 64, offset: 96)
!14460 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14451, file: !127, line: 5076, baseType: !14461, size: 32, offset: 160)
!14461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !14462)
!14462 = !{!14463}
!14463 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !14461, file: !152, line: 52, baseType: !22, size: 32)
!14464 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14368, file: !199, line: 343, baseType: !14465, size: 64, offset: 928)
!14465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !14466)
!14466 = !{!14467, !14468}
!14467 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14465, file: !248, line: 63, baseType: !111, size: 32)
!14468 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14465, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!14469 = !{!14470, !14471, !14472}
!14470 = !DILocalVariable(name: "reason", arg: 1, scope: !14320, file: !3607, line: 209, type: !32)
!14471 = !DILocalVariable(name: "esf", arg: 2, scope: !14320, file: !3607, line: 209, type: !14323)
!14472 = !DILocalVariable(name: "thread", arg: 3, scope: !14320, file: !3607, line: 210, type: !14367)
!14473 = !DILocation(line: 0, scope: !14320)
!14474 = !DILocation(line: 212, column: 1, scope: !14320)
!14475 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3607, file: !3607, line: 214, type: !14476, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14478)
!14476 = !DISubroutineType(types: !14477)
!14477 = !{null, !22, !22}
!14478 = !{!14479, !14480}
!14479 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14475, file: !3607, line: 214, type: !22)
!14480 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14475, file: !3607, line: 214, type: !22)
!14481 = !DILocation(line: 0, scope: !14475)
!14482 = !DILocation(line: 216, column: 1, scope: !14475)
!14483 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3607, file: !3607, line: 218, type: !14484, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14486)
!14484 = !DISubroutineType(types: !14485)
!14485 = !{null, !550, !156}
!14486 = !{!14487, !14488}
!14487 = !DILocalVariable(name: "buf", arg: 1, scope: !14483, file: !3607, line: 218, type: !550)
!14488 = !DILocalVariable(name: "buflen", arg: 2, scope: !14483, file: !3607, line: 218, type: !156)
!14489 = !DILocation(line: 0, scope: !14483)
!14490 = !DILocation(line: 220, column: 1, scope: !14483)
!14491 = distinct !DISubprogram(name: "coredump_query", scope: !3607, file: !3607, line: 222, type: !14492, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14494)
!14492 = !DISubroutineType(types: !14493)
!14493 = !{!103, !3606, !102}
!14494 = !{!14495, !14496}
!14495 = !DILocalVariable(name: "query_id", arg: 1, scope: !14491, file: !3607, line: 222, type: !3606)
!14496 = !DILocalVariable(name: "arg", arg: 2, scope: !14491, file: !3607, line: 222, type: !102)
!14497 = !DILocation(line: 0, scope: !14491)
!14498 = !DILocation(line: 224, column: 2, scope: !14491)
!14499 = distinct !DISubprogram(name: "coredump_cmd", scope: !3607, file: !3607, line: 227, type: !14500, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14502)
!14500 = !DISubroutineType(types: !14501)
!14501 = !{!103, !3613, !102}
!14502 = !{!14503, !14504}
!14503 = !DILocalVariable(name: "query_id", arg: 1, scope: !14499, file: !3607, line: 227, type: !3613)
!14504 = !DILocalVariable(name: "arg", arg: 2, scope: !14499, file: !3607, line: 227, type: !102)
!14505 = !DILocation(line: 0, scope: !14499)
!14506 = !DILocation(line: 229, column: 2, scope: !14499)
!14507 = distinct !DISubprogram(name: "arch_system_halt", scope: !14508, file: !14508, line: 23, type: !7555, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14509)
!14508 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14509 = !{!14510}
!14510 = !DILocalVariable(name: "reason", arg: 1, scope: !14507, file: !14508, line: 23, type: !32)
!14511 = !DILocation(line: 0, scope: !14507)
!14512 = !DILocation(line: 55, column: 2, scope: !14513, inlinedAt: !14517)
!14513 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7544, file: !7544, line: 42, type: !7545, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14514)
!14514 = !{!14515, !14516}
!14515 = !DILocalVariable(name: "key", scope: !14513, file: !7544, line: 44, type: !32)
!14516 = !DILocalVariable(name: "tmp", scope: !14513, file: !7544, line: 53, type: !32)
!14517 = distinct !DILocation(line: 31, column: 8, scope: !14507)
!14518 = !{i64 2227689}
!14519 = !DILocation(line: 0, scope: !14513, inlinedAt: !14517)
!14520 = !DILocation(line: 32, column: 2, scope: !14507)
!14521 = !DILocation(line: 32, column: 2, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14523, file: !14508, line: 32, column: 2)
!14523 = distinct !DILexicalBlock(scope: !14507, file: !14508, line: 32, column: 2)
!14524 = distinct !{!14524, !14525, !14526}
!14525 = !DILocation(line: 32, column: 2, scope: !14523)
!14526 = !DILocation(line: 34, column: 2, scope: !14523)
!14527 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14508, file: !14508, line: 39, type: !14528, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14530)
!14528 = !DISubroutineType(types: !14529)
!14529 = !{null, !32, !14323}
!14530 = !{!14531, !14532}
!14531 = !DILocalVariable(name: "reason", arg: 1, scope: !14527, file: !14508, line: 39, type: !32)
!14532 = !DILocalVariable(name: "esf", arg: 2, scope: !14527, file: !14508, line: 40, type: !14323)
!14533 = !DILocation(line: 0, scope: !14527)
!14534 = !DILocation(line: 45, column: 2, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !14536, file: !14508, line: 45, column: 2)
!14536 = distinct !DILexicalBlock(scope: !14537, file: !14508, line: 45, column: 2)
!14537 = distinct !DILexicalBlock(scope: !14538, file: !14508, line: 45, column: 2)
!14538 = distinct !DILexicalBlock(scope: !14527, file: !14508, line: 45, column: 2)
!14539 = !DILocation(line: 46, column: 2, scope: !14527)
!14540 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14508, file: !14508, line: 81, type: !7555, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14541)
!14541 = !{!14542}
!14542 = !DILocalVariable(name: "reason", arg: 1, scope: !14540, file: !14508, line: 81, type: !32)
!14543 = !DILocation(line: 0, scope: !14540)
!14544 = !DILocation(line: 83, column: 2, scope: !14540)
!14545 = distinct !DISubprogram(name: "z_fatal_error", scope: !14508, file: !14508, line: 96, type: !14528, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14546)
!14546 = !{!14547, !14548, !14549, !14550}
!14547 = !DILocalVariable(name: "reason", arg: 1, scope: !14545, file: !14508, line: 96, type: !32)
!14548 = !DILocalVariable(name: "esf", arg: 2, scope: !14545, file: !14508, line: 96, type: !14323)
!14549 = !DILocalVariable(name: "key", scope: !14545, file: !14508, line: 102, type: !32)
!14550 = !DILocalVariable(name: "thread", scope: !14545, file: !14508, line: 103, type: !14367)
!14551 = !DILocation(line: 0, scope: !14545)
!14552 = !DILocation(line: 55, column: 2, scope: !14513, inlinedAt: !14553)
!14553 = distinct !DILocation(line: 102, column: 21, scope: !14545)
!14554 = !DILocation(line: 0, scope: !14513, inlinedAt: !14553)
!14555 = !DILocation(line: 104, column: 4, scope: !14545)
!14556 = !DILocation(line: 109, column: 2, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !14508, line: 109, column: 2)
!14558 = distinct !DILexicalBlock(scope: !14559, file: !14508, line: 109, column: 2)
!14559 = distinct !DILexicalBlock(scope: !14560, file: !14508, line: 109, column: 2)
!14560 = distinct !DILexicalBlock(scope: !14545, file: !14508, line: 109, column: 2)
!14561 = !DILocation(line: 119, column: 11, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14545, file: !14508, line: 119, column: 6)
!14563 = !DILocation(line: 119, column: 20, scope: !14562)
!14564 = !DILocalVariable(name: "esf", arg: 1, scope: !14565, file: !8915, line: 71, type: !14323)
!14565 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8915, file: !8915, line: 71, type: !14566, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14568)
!14566 = !DISubroutineType(types: !14567)
!14567 = !{!122, !14323}
!14568 = !{!14564}
!14569 = !DILocation(line: 0, scope: !14565, inlinedAt: !14570)
!14570 = distinct !DILocation(line: 119, column: 23, scope: !14562)
!14571 = !DILocation(line: 73, column: 21, scope: !14565, inlinedAt: !14570)
!14572 = !DILocation(line: 73, column: 26, scope: !14565, inlinedAt: !14570)
!14573 = !DILocation(line: 73, column: 9, scope: !14565, inlinedAt: !14570)
!14574 = !DILocation(line: 119, column: 6, scope: !14545)
!14575 = !DILocation(line: 120, column: 3, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14577, file: !14508, line: 120, column: 3)
!14577 = distinct !DILexicalBlock(scope: !14578, file: !14508, line: 120, column: 3)
!14578 = distinct !DILexicalBlock(scope: !14579, file: !14508, line: 120, column: 3)
!14579 = distinct !DILexicalBlock(scope: !14580, file: !14508, line: 120, column: 3)
!14580 = distinct !DILexicalBlock(scope: !14562, file: !14508, line: 119, column: 57)
!14581 = !DILocation(line: 121, column: 2, scope: !14580)
!14582 = !DILocation(line: 124, column: 2, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14584, file: !14508, line: 124, column: 2)
!14584 = distinct !DILexicalBlock(scope: !14585, file: !14508, line: 124, column: 2)
!14585 = distinct !DILexicalBlock(scope: !14586, file: !14508, line: 124, column: 2)
!14586 = distinct !DILexicalBlock(scope: !14545, file: !14508, line: 124, column: 2)
!14587 = !DILocation(line: 131, column: 2, scope: !14545)
!14588 = !DILocation(line: 147, column: 3, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14590, file: !14508, line: 147, column: 3)
!14590 = distinct !DILexicalBlock(scope: !14591, file: !14508, line: 147, column: 3)
!14591 = distinct !DILexicalBlock(scope: !14592, file: !14508, line: 146, column: 32)
!14592 = distinct !DILexicalBlock(scope: !14545, file: !14508, line: 146, column: 6)
!14593 = !DILocation(line: 147, column: 3, scope: !14590)
!14594 = !DILocation(line: 147, column: 3, scope: !14595)
!14595 = distinct !DILexicalBlock(scope: !14589, file: !14508, line: 147, column: 3)
!14596 = !DILocalVariable(name: "key", arg: 1, scope: !14597, file: !7544, line: 84, type: !32)
!14597 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7544, file: !7544, line: 84, type: !7555, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14598)
!14598 = !{!14596}
!14599 = !DILocation(line: 0, scope: !14597, inlinedAt: !14600)
!14600 = distinct !DILocation(line: 186, column: 2, scope: !14545)
!14601 = !DILocation(line: 95, column: 2, scope: !14597, inlinedAt: !14600)
!14602 = !{i64 2228506}
!14603 = !DILocation(line: 189, column: 3, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14605, file: !14508, line: 188, column: 41)
!14605 = distinct !DILexicalBlock(scope: !14545, file: !14508, line: 188, column: 6)
!14606 = !DILocation(line: 191, column: 1, scope: !14545)
!14607 = distinct !DISubprogram(name: "k_current_get", scope: !127, file: !127, line: 530, type: !14608, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !2501)
!14608 = !DISubroutineType(types: !14609)
!14609 = !{!14610}
!14610 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !14367)
!14611 = !DILocation(line: 535, column: 9, scope: !14607)
!14612 = !DILocation(line: 535, column: 2, scope: !14607)
!14613 = distinct !DISubprogram(name: "reason_to_str", scope: !14508, file: !14508, line: 62, type: !14614, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14616)
!14614 = !DISubroutineType(types: !14615)
!14615 = !{!108, !32}
!14616 = !{!14617}
!14617 = !DILocalVariable(name: "reason", arg: 1, scope: !14613, file: !14508, line: 62, type: !32)
!14618 = !DILocation(line: 0, scope: !14613)
!14619 = !DILocation(line: 64, column: 2, scope: !14613)
!14620 = !DILocation(line: 0, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14613, file: !14508, line: 64, column: 18)
!14622 = !DILocation(line: 78, column: 1, scope: !14613)
!14623 = distinct !DISubprogram(name: "thread_name_get", scope: !14508, file: !14508, line: 51, type: !14624, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14626)
!14624 = !DISubroutineType(types: !14625)
!14625 = !{!108, !14367}
!14626 = !{!14627, !14628}
!14627 = !DILocalVariable(name: "thread", arg: 1, scope: !14623, file: !14508, line: 51, type: !14367)
!14628 = !DILocalVariable(name: "thread_name", scope: !14623, file: !14508, line: 53, type: !108)
!14629 = !DILocation(line: 0, scope: !14623)
!14630 = !DILocation(line: 53, column: 36, scope: !14623)
!14631 = !DILocation(line: 53, column: 28, scope: !14623)
!14632 = !DILocation(line: 53, column: 47, scope: !14623)
!14633 = !DILocation(line: 55, column: 19, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14623, file: !14508, line: 55, column: 6)
!14635 = !DILocation(line: 55, column: 28, scope: !14634)
!14636 = !DILocation(line: 55, column: 32, scope: !14634)
!14637 = !DILocation(line: 55, column: 47, scope: !14634)
!14638 = !DILocation(line: 55, column: 6, scope: !14623)
!14639 = !DILocation(line: 57, column: 2, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14634, file: !14508, line: 55, column: 57)
!14641 = !DILocation(line: 59, column: 2, scope: !14623)
!14642 = distinct !DISubprogram(name: "k_thread_abort", scope: !5275, file: !5275, line: 188, type: !14643, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !14645)
!14643 = !DISubroutineType(types: !14644)
!14644 = !{null, !14610}
!14645 = !{!14646}
!14646 = !DILocalVariable(name: "thread", arg: 1, scope: !14642, file: !5275, line: 188, type: !14610)
!14647 = !DILocation(line: 0, scope: !14642)
!14648 = !DILocation(line: 197, column: 2, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14642, file: !5275, line: 197, column: 2)
!14650 = !{i64 2154850044}
!14651 = !DILocation(line: 198, column: 2, scope: !14642)
!14652 = !DILocation(line: 199, column: 1, scope: !14642)
!14653 = distinct !DISubprogram(name: "z_current_get", scope: !5275, file: !5275, line: 173, type: !14608, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3603, retainedNodes: !2501)
!14654 = !DILocation(line: 180, column: 2, scope: !14655)
!14655 = distinct !DILexicalBlock(scope: !14653, file: !5275, line: 180, column: 2)
!14656 = !{i64 2154849976}
!14657 = !DILocation(line: 181, column: 9, scope: !14653)
!14658 = !DILocation(line: 181, column: 2, scope: !14653)
!14659 = distinct !DISubprogram(name: "z_early_memset", scope: !2301, file: !2301, line: 108, type: !14660, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14662)
!14660 = !DISubroutineType(types: !14661)
!14661 = !{null, !102, !103, !156}
!14662 = !{!14663, !14664, !14665}
!14663 = !DILocalVariable(name: "dst", arg: 1, scope: !14659, file: !2301, line: 108, type: !102)
!14664 = !DILocalVariable(name: "c", arg: 2, scope: !14659, file: !2301, line: 108, type: !103)
!14665 = !DILocalVariable(name: "n", arg: 3, scope: !14659, file: !2301, line: 108, type: !156)
!14666 = !DILocation(line: 0, scope: !14659)
!14667 = !DILocation(line: 110, column: 9, scope: !14659)
!14668 = !DILocation(line: 111, column: 1, scope: !14659)
!14669 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2301, file: !2301, line: 121, type: !14670, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14672)
!14670 = !DISubroutineType(types: !14671)
!14671 = !{null, !102, !13, !156}
!14672 = !{!14673, !14674, !14675}
!14673 = !DILocalVariable(name: "dst", arg: 1, scope: !14669, file: !2301, line: 121, type: !102)
!14674 = !DILocalVariable(name: "src", arg: 2, scope: !14669, file: !2301, line: 121, type: !13)
!14675 = !DILocalVariable(name: "n", arg: 3, scope: !14669, file: !2301, line: 121, type: !156)
!14676 = !DILocation(line: 0, scope: !14669)
!14677 = !DILocation(line: 123, column: 9, scope: !14669)
!14678 = !DILocation(line: 124, column: 1, scope: !14669)
!14679 = distinct !DISubprogram(name: "z_bss_zero", scope: !2301, file: !2301, line: 132, type: !323, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !2501)
!14680 = !DILocation(line: 143, column: 2, scope: !14679)
!14681 = !DILocation(line: 145, column: 2, scope: !14679)
!14682 = !DILocation(line: 168, column: 1, scope: !14679)
!14683 = distinct !DISubprogram(name: "z_init_cpu", scope: !2301, file: !2301, line: 372, type: !10271, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14684)
!14684 = !{!14685}
!14685 = !DILocalVariable(name: "id", arg: 1, scope: !14683, file: !2301, line: 372, type: !103)
!14686 = !DILocation(line: 0, scope: !14683)
!14687 = !DILocation(line: 374, column: 2, scope: !14683)
!14688 = !DILocation(line: 375, column: 34, scope: !14683)
!14689 = !DILocation(line: 375, column: 19, scope: !14683)
!14690 = !DILocation(line: 375, column: 31, scope: !14683)
!14691 = !DILocation(line: 376, column: 24, scope: !14683)
!14692 = !DILocation(line: 376, column: 19, scope: !14683)
!14693 = !DILocation(line: 376, column: 22, scope: !14683)
!14694 = !DILocation(line: 378, column: 26, scope: !14683)
!14695 = !DILocation(line: 378, column: 4, scope: !14683)
!14696 = !DILocation(line: 378, column: 50, scope: !14683)
!14697 = !DILocation(line: 377, column: 19, scope: !14683)
!14698 = !DILocation(line: 377, column: 29, scope: !14683)
!14699 = !DILocation(line: 384, column: 1, scope: !14683)
!14700 = distinct !DISubprogram(name: "init_idle_thread", scope: !2301, file: !2301, line: 343, type: !10271, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14701)
!14701 = !{!14702, !14703, !14704, !14707}
!14702 = !DILocalVariable(name: "i", arg: 1, scope: !14700, file: !2301, line: 343, type: !103)
!14703 = !DILocalVariable(name: "thread", scope: !14700, file: !2301, line: 345, type: !2393)
!14704 = !DILocalVariable(name: "stack", scope: !14700, file: !2301, line: 346, type: !14705)
!14705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14706, size: 32)
!14706 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !2510)
!14707 = !DILocalVariable(name: "tname", scope: !14700, file: !2301, line: 358, type: !160)
!14708 = !DILocation(line: 0, scope: !14700)
!14709 = !DILocation(line: 345, column: 29, scope: !14700)
!14710 = !DILocation(line: 346, column: 28, scope: !14700)
!14711 = !DILocation(line: 362, column: 37, scope: !14700)
!14712 = !DILocation(line: 362, column: 36, scope: !14700)
!14713 = !DILocation(line: 361, column: 2, scope: !14700)
!14714 = !DILocation(line: 365, column: 2, scope: !14700)
!14715 = !DILocation(line: 370, column: 1, scope: !14700)
!14716 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !305, file: !305, line: 331, type: !14717, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14719)
!14717 = !DISubroutineType(types: !14718)
!14718 = !{!160, !14705}
!14719 = !{!14720}
!14720 = !DILocalVariable(name: "sym", arg: 1, scope: !14716, file: !305, line: 331, type: !14705)
!14721 = !DILocation(line: 0, scope: !14716)
!14722 = !DILocation(line: 333, column: 21, scope: !14716)
!14723 = !DILocation(line: 333, column: 2, scope: !14716)
!14724 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14725, file: !14725, line: 155, type: !14726, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14728)
!14725 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14726 = !DISubroutineType(types: !14727)
!14727 = !{null, !2393}
!14728 = !{!14729}
!14729 = !DILocalVariable(name: "thread", arg: 1, scope: !14724, file: !14725, line: 155, type: !2393)
!14730 = !DILocation(line: 0, scope: !14724)
!14731 = !DILocation(line: 157, column: 15, scope: !14724)
!14732 = !DILocation(line: 157, column: 28, scope: !14724)
!14733 = !DILocation(line: 158, column: 1, scope: !14724)
!14734 = distinct !DISubprogram(name: "z_cstart", scope: !2301, file: !2301, line: 501, type: !323, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14735)
!14735 = !{!14736}
!14736 = !DILocalVariable(name: "dummy_thread", scope: !14734, file: !2301, line: 518, type: !2394)
!14737 = !DILocation(line: 507, column: 2, scope: !14734)
!14738 = !DILocation(line: 43, column: 14, scope: !14739, inlinedAt: !14743)
!14739 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14740, file: !14740, line: 40, type: !323, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14741)
!14740 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14741 = !{!14742}
!14742 = !DILocalVariable(name: "msp", scope: !14739, file: !14740, line: 42, type: !111)
!14743 = distinct !DILocation(line: 44, column: 2, scope: !14744, inlinedAt: !14746)
!14744 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14745, file: !14745, line: 42, type: !323, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !2501)
!14745 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14746 = distinct !DILocation(line: 510, column: 2, scope: !14734)
!14747 = !DILocation(line: 43, column: 3, scope: !14739, inlinedAt: !14743)
!14748 = !DILocation(line: 43, column: 60, scope: !14739, inlinedAt: !14743)
!14749 = !DILocation(line: 0, scope: !14739, inlinedAt: !14743)
!14750 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14751, file: !7865, line: 1153, type: !111)
!14751 = distinct !DISubprogram(name: "__set_MSP", scope: !7865, file: !7865, line: 1153, type: !7962, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14752)
!14752 = !{!14750}
!14753 = !DILocation(line: 0, scope: !14751, inlinedAt: !14754)
!14754 = distinct !DILocation(line: 46, column: 2, scope: !14739, inlinedAt: !14743)
!14755 = !DILocation(line: 1155, column: 3, scope: !14751, inlinedAt: !14754)
!14756 = !{i64 3564807}
!14757 = !DILocation(line: 62, column: 11, scope: !14739, inlinedAt: !14743)
!14758 = !DILocation(line: 102, column: 2, scope: !14759, inlinedAt: !14760)
!14759 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8915, file: !8915, line: 97, type: !323, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !2501)
!14760 = distinct !DILocation(line: 45, column: 2, scope: !14744, inlinedAt: !14746)
!14761 = !DILocation(line: 108, column: 2, scope: !14759, inlinedAt: !14760)
!14762 = !DILocation(line: 112, column: 2, scope: !14759, inlinedAt: !14760)
!14763 = !DILocation(line: 113, column: 2, scope: !14759, inlinedAt: !14760)
!14764 = !DILocation(line: 114, column: 2, scope: !14759, inlinedAt: !14760)
!14765 = !DILocation(line: 116, column: 2, scope: !14759, inlinedAt: !14760)
!14766 = !DILocation(line: 123, column: 13, scope: !14759, inlinedAt: !14760)
!14767 = !DILocation(line: 46, column: 2, scope: !14744, inlinedAt: !14746)
!14768 = !DILocation(line: 47, column: 2, scope: !14744, inlinedAt: !14746)
!14769 = !DILocation(line: 174, column: 12, scope: !14770, inlinedAt: !14771)
!14770 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8915, file: !8915, line: 169, type: !323, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !2501)
!14771 = distinct !DILocation(line: 48, column: 2, scope: !14744, inlinedAt: !14746)
!14772 = !DILocation(line: 179, column: 12, scope: !14770, inlinedAt: !14771)
!14773 = !DILocation(line: 50, column: 2, scope: !14744, inlinedAt: !14746)
!14774 = !DILocation(line: 57, column: 2, scope: !14744, inlinedAt: !14746)
!14775 = !DILocation(line: 518, column: 2, scope: !14734)
!14776 = !DILocation(line: 518, column: 18, scope: !14734)
!14777 = !DILocation(line: 520, column: 2, scope: !14734)
!14778 = !DILocation(line: 523, column: 2, scope: !14734)
!14779 = !DILocation(line: 526, column: 2, scope: !14734)
!14780 = !DILocation(line: 527, column: 2, scope: !14734)
!14781 = !DILocation(line: 543, column: 24, scope: !14734)
!14782 = !DILocation(line: 543, column: 2, scope: !14734)
!14783 = !DILocation(line: 0, scope: !2532)
!14784 = !DILocation(line: 246, column: 15, scope: !2550)
!14785 = !DILocation(line: 246, column: 36, scope: !2549)
!14786 = !DILocation(line: 246, column: 2, scope: !2550)
!14787 = !DILocation(line: 247, column: 37, scope: !2548)
!14788 = !DILocation(line: 0, scope: !2548)
!14789 = !DILocation(line: 248, column: 19, scope: !2548)
!14790 = !DILocation(line: 248, column: 12, scope: !2548)
!14791 = !DILocation(line: 250, column: 11, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !2548, file: !2301, line: 250, column: 7)
!14793 = !DILocation(line: 250, column: 7, scope: !2548)
!14794 = !DILocation(line: 254, column: 11, scope: !14795)
!14795 = distinct !DILexicalBlock(scope: !14796, file: !2301, line: 254, column: 8)
!14796 = distinct !DILexicalBlock(scope: !14792, file: !2301, line: 250, column: 20)
!14797 = !DILocation(line: 254, column: 8, scope: !14796)
!14798 = !DILocation(line: 255, column: 9, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14795, file: !2301, line: 254, column: 17)
!14800 = !DILocation(line: 258, column: 9, scope: !14799)
!14801 = !DILocation(line: 261, column: 28, scope: !14799)
!14802 = !DILocation(line: 261, column: 10, scope: !14799)
!14803 = !DILocation(line: 261, column: 17, scope: !14799)
!14804 = !DILocation(line: 261, column: 26, scope: !14799)
!14805 = !DILocation(line: 262, column: 4, scope: !14799)
!14806 = !DILocation(line: 263, column: 9, scope: !14796)
!14807 = !DILocation(line: 263, column: 16, scope: !14796)
!14808 = !DILocation(line: 263, column: 28, scope: !14796)
!14809 = !DILocation(line: 264, column: 3, scope: !14796)
!14810 = !DILocation(line: 246, column: 60, scope: !2549)
!14811 = distinct !{!14811, !14786, !14812}
!14812 = !DILocation(line: 265, column: 2, scope: !2550)
!14813 = !DILocation(line: 266, column: 1, scope: !2532)
!14814 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !992, file: !992, line: 1814, type: !7905, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14815)
!14815 = !{!14816, !14817}
!14816 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14814, file: !992, line: 1814, type: !1260)
!14817 = !DILocalVariable(name: "priority", arg: 2, scope: !14814, file: !992, line: 1814, type: !111)
!14818 = !DILocation(line: 0, scope: !14814)
!14819 = !DILocation(line: 1822, column: 48, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14821, file: !992, line: 1821, column: 3)
!14821 = distinct !DILexicalBlock(scope: !14814, file: !992, line: 1816, column: 7)
!14822 = !DILocation(line: 1822, column: 32, scope: !14820)
!14823 = !DILocation(line: 1822, column: 40, scope: !14820)
!14824 = !DILocation(line: 1822, column: 5, scope: !14820)
!14825 = !DILocation(line: 1822, column: 46, scope: !14820)
!14826 = !DILocation(line: 1824, column: 1, scope: !14814)
!14827 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14745, file: !14745, line: 32, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2501)
!14828 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14829, file: !14829, line: 215, type: !14726, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14830)
!14829 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14830 = !{!14831}
!14831 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14828, file: !14829, line: 215, type: !2393)
!14832 = !DILocation(line: 0, scope: !14828)
!14833 = !DILocation(line: 217, column: 21, scope: !14828)
!14834 = !DILocation(line: 217, column: 34, scope: !14828)
!14835 = !DILocation(line: 221, column: 21, scope: !14828)
!14836 = !DILocation(line: 221, column: 34, scope: !14828)
!14837 = !DILocation(line: 223, column: 27, scope: !14828)
!14838 = !DILocation(line: 223, column: 33, scope: !14828)
!14839 = !DILocation(line: 224, column: 27, scope: !14828)
!14840 = !DILocation(line: 224, column: 32, scope: !14828)
!14841 = !DILocation(line: 230, column: 2, scope: !14828)
!14842 = !DILocation(line: 239, column: 24, scope: !14828)
!14843 = !DILocation(line: 240, column: 1, scope: !14828)
!14844 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2301, file: !2301, line: 399, type: !14845, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14847)
!14845 = !DISubroutineType(types: !14846)
!14846 = !{!160}
!14847 = !{!14848}
!14848 = !DILocalVariable(name: "stack_ptr", scope: !14844, file: !2301, line: 401, type: !160)
!14849 = !DILocation(line: 404, column: 2, scope: !14844)
!14850 = !DILocation(line: 416, column: 24, scope: !14844)
!14851 = !DILocation(line: 418, column: 14, scope: !14844)
!14852 = !DILocation(line: 0, scope: !14844)
!14853 = !DILocation(line: 423, column: 2, scope: !14844)
!14854 = !DILocation(line: 424, column: 2, scope: !14844)
!14855 = !DILocation(line: 426, column: 2, scope: !14844)
!14856 = !DILocation(line: 428, column: 2, scope: !14844)
!14857 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2301, file: !2301, line: 432, type: !14858, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14860)
!14858 = !DISubroutineType(types: !14859)
!14859 = !{null, !160}
!14860 = !{!14861}
!14861 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14857, file: !2301, line: 432, type: !160)
!14862 = !DILocation(line: 0, scope: !14857)
!14863 = !DILocation(line: 435, column: 2, scope: !14857)
!14864 = !DILocation(line: 445, column: 2, scope: !14857)
!14865 = distinct !DISubprogram(name: "bg_thread_main", scope: !2301, file: !2301, line: 277, type: !312, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !14866)
!14866 = !{!14867, !14868, !14869}
!14867 = !DILocalVariable(name: "unused1", arg: 1, scope: !14865, file: !2301, line: 277, type: !102)
!14868 = !DILocalVariable(name: "unused2", arg: 2, scope: !14865, file: !2301, line: 277, type: !102)
!14869 = !DILocalVariable(name: "unused3", arg: 3, scope: !14865, file: !2301, line: 277, type: !102)
!14870 = !DILocation(line: 0, scope: !14865)
!14871 = !DILocation(line: 291, column: 20, scope: !14865)
!14872 = !DILocation(line: 293, column: 2, scope: !14865)
!14873 = !DILocation(line: 297, column: 2, scope: !14865)
!14874 = !DILocation(line: 305, column: 2, scope: !14865)
!14875 = !DILocation(line: 307, column: 2, scope: !14865)
!14876 = !DILocation(line: 330, column: 8, scope: !14865)
!14877 = !DILocation(line: 333, column: 34, scope: !14865)
!14878 = !DILocation(line: 339, column: 1, scope: !14865)
!14879 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2561, file: !2561, line: 45, type: !14880, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !14888)
!14880 = !DISubroutineType(types: !14881)
!14881 = !{null, !14882, !102}
!14882 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !127, line: 103, baseType: !14883)
!14883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14884, size: 32)
!14884 = !DISubroutineType(types: !14885)
!14885 = !{null, !14886, !102}
!14886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14887, size: 32)
!14887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2566)
!14888 = !{!14889, !14890}
!14889 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14879, file: !2561, line: 45, type: !14882)
!14890 = !DILocalVariable(name: "user_data", arg: 2, scope: !14879, file: !2561, line: 45, type: !102)
!14891 = !DILocation(line: 0, scope: !14879)
!14892 = !DILocation(line: 71, column: 1, scope: !14879)
!14893 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2561, file: !2561, line: 73, type: !14880, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !14894)
!14894 = !{!14895, !14896}
!14895 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14893, file: !2561, line: 73, type: !14882)
!14896 = !DILocalVariable(name: "user_data", arg: 2, scope: !14893, file: !2561, line: 73, type: !102)
!14897 = !DILocation(line: 0, scope: !14893)
!14898 = !DILocation(line: 95, column: 1, scope: !14893)
!14899 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2561, file: !2561, line: 97, type: !8916, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !2501)
!14900 = !DILocation(line: 1031, column: 3, scope: !14901, inlinedAt: !14904)
!14901 = distinct !DISubprogram(name: "__get_IPSR", scope: !7865, file: !7865, line: 1027, type: !7952, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !14902)
!14902 = !{!14903}
!14903 = !DILocalVariable(name: "result", scope: !14901, file: !7865, line: 1029, type: !111)
!14904 = distinct !DILocation(line: 48, column: 10, scope: !14905, inlinedAt: !14906)
!14905 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8915, file: !8915, line: 46, type: !8916, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !2501)
!14906 = distinct !DILocation(line: 99, column: 9, scope: !14899)
!14907 = !{i64 3570458}
!14908 = !DILocation(line: 0, scope: !14901, inlinedAt: !14904)
!14909 = !DILocation(line: 48, column: 9, scope: !14905, inlinedAt: !14906)
!14910 = !DILocation(line: 99, column: 2, scope: !14899)
!14911 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2561, file: !2561, line: 106, type: !323, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !2501)
!14912 = !DILocation(line: 108, column: 2, scope: !14911)
!14913 = !DILocation(line: 108, column: 17, scope: !14911)
!14914 = !DILocation(line: 108, column: 30, scope: !14911)
!14915 = !DILocation(line: 109, column: 1, scope: !14911)
!14916 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2561, file: !2561, line: 116, type: !323, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !2501)
!14917 = !DILocation(line: 118, column: 2, scope: !14916)
!14918 = !DILocation(line: 118, column: 17, scope: !14916)
!14919 = !DILocation(line: 118, column: 30, scope: !14916)
!14920 = !DILocation(line: 119, column: 1, scope: !14916)
!14921 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2561, file: !2561, line: 126, type: !8916, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !2501)
!14922 = !DILocation(line: 128, column: 10, scope: !14921)
!14923 = !DILocation(line: 128, column: 25, scope: !14921)
!14924 = !DILocation(line: 128, column: 38, scope: !14921)
!14925 = !DILocation(line: 128, column: 53, scope: !14921)
!14926 = !DILocation(line: 128, column: 2, scope: !14921)
!14927 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2561, file: !2561, line: 187, type: !14928, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !14930)
!14928 = !DISubroutineType(types: !14929)
!14929 = !{!103, !2565, !108}
!14930 = !{!14931, !14932}
!14931 = !DILocalVariable(name: "thread", arg: 1, scope: !14927, file: !2561, line: 187, type: !2565)
!14932 = !DILocalVariable(name: "value", arg: 2, scope: !14927, file: !2561, line: 187, type: !108)
!14933 = !DILocation(line: 0, scope: !14927)
!14934 = !DILocation(line: 206, column: 2, scope: !14927)
!14935 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2561, file: !2561, line: 238, type: !14936, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !14938)
!14936 = !DISubroutineType(types: !14937)
!14937 = !{!108, !2565}
!14938 = !{!14939}
!14939 = !DILocalVariable(name: "thread", arg: 1, scope: !14935, file: !2561, line: 238, type: !2565)
!14940 = !DILocation(line: 0, scope: !14935)
!14941 = !DILocation(line: 244, column: 2, scope: !14935)
!14942 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2561, file: !2561, line: 248, type: !14943, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !14945)
!14943 = !DISubroutineType(types: !14944)
!14944 = !{!103, !2564, !160, !156}
!14945 = !{!14946, !14947, !14948}
!14946 = !DILocalVariable(name: "thread", arg: 1, scope: !14942, file: !2561, line: 248, type: !2564)
!14947 = !DILocalVariable(name: "buf", arg: 2, scope: !14942, file: !2561, line: 248, type: !160)
!14948 = !DILocalVariable(name: "size", arg: 3, scope: !14942, file: !2561, line: 248, type: !156)
!14949 = !DILocation(line: 0, scope: !14942)
!14950 = !DILocation(line: 257, column: 2, scope: !14942)
!14951 = !DILocation(line: 0, scope: !2560)
!14952 = !DILocation(line: 281, column: 11, scope: !14953)
!14953 = distinct !DILexicalBlock(scope: !2560, file: !2561, line: 281, column: 6)
!14954 = !DILocation(line: 281, column: 20, scope: !14953)
!14955 = !DILocation(line: 275, column: 45, scope: !2560)
!14956 = !DILocation(line: 285, column: 10, scope: !2560)
!14957 = !DILocation(line: 0, scope: !2683)
!14958 = !DILocation(line: 293, column: 39, scope: !14959)
!14959 = distinct !DILexicalBlock(scope: !2683, file: !2561, line: 293, column: 2)
!14960 = !DILocation(line: 293, column: 2, scope: !2683)
!14961 = !DILocation(line: 273, column: 14, scope: !2560)
!14962 = !DILocation(line: 309, column: 2, scope: !2560)
!14963 = !DILocation(line: 309, column: 11, scope: !2560)
!14964 = !DILocation(line: 311, column: 2, scope: !2560)
!14965 = !DILocation(line: 293, column: 26, scope: !14959)
!14966 = !DILocation(line: 294, column: 9, scope: !14967)
!14967 = distinct !DILexicalBlock(scope: !14959, file: !2561, line: 293, column: 54)
!14968 = !DILocation(line: 295, column: 21, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14967, file: !2561, line: 295, column: 7)
!14970 = !DILocation(line: 295, column: 28, scope: !14969)
!14971 = !DILocation(line: 295, column: 7, scope: !14967)
!14972 = !DILocation(line: 299, column: 25, scope: !14967)
!14973 = !DILocation(line: 299, column: 41, scope: !14967)
!14974 = !DILocation(line: 300, column: 7, scope: !14967)
!14975 = !DILocation(line: 300, column: 26, scope: !14967)
!14976 = !DILocation(line: 299, column: 10, scope: !14967)
!14977 = !DILocation(line: 299, column: 7, scope: !14967)
!14978 = !DILocation(line: 302, column: 16, scope: !14967)
!14979 = !DILocation(line: 304, column: 20, scope: !14980)
!14980 = distinct !DILexicalBlock(scope: !14967, file: !2561, line: 304, column: 7)
!14981 = !DILocation(line: 304, column: 7, scope: !14967)
!14982 = !DILocation(line: 305, column: 26, scope: !14983)
!14983 = distinct !DILexicalBlock(scope: !14980, file: !2561, line: 304, column: 26)
!14984 = !DILocation(line: 305, column: 42, scope: !14983)
!14985 = !DILocation(line: 305, column: 11, scope: !14983)
!14986 = !DILocation(line: 305, column: 8, scope: !14983)
!14987 = !DILocation(line: 306, column: 3, scope: !14983)
!14988 = !DILocation(line: 293, column: 50, scope: !14959)
!14989 = !DILocation(line: 312, column: 1, scope: !2560)
!14990 = distinct !DISubprogram(name: "copy_bytes", scope: !2561, file: !2561, line: 261, type: !14991, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !14993)
!14991 = !DISubroutineType(types: !14992)
!14992 = !{!156, !160, !156, !108, !156}
!14993 = !{!14994, !14995, !14996, !14997, !14998}
!14994 = !DILocalVariable(name: "dest", arg: 1, scope: !14990, file: !2561, line: 261, type: !160)
!14995 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14990, file: !2561, line: 261, type: !156)
!14996 = !DILocalVariable(name: "src", arg: 3, scope: !14990, file: !2561, line: 261, type: !108)
!14997 = !DILocalVariable(name: "src_size", arg: 4, scope: !14990, file: !2561, line: 261, type: !156)
!14998 = !DILocalVariable(name: "bytes_to_copy", scope: !14990, file: !2561, line: 263, type: !156)
!14999 = !DILocation(line: 0, scope: !14990)
!15000 = !DILocation(line: 265, column: 18, scope: !14990)
!15001 = !DILocation(line: 266, column: 2, scope: !14990)
!15002 = !DILocation(line: 268, column: 2, scope: !14990)
!15003 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2561, file: !2561, line: 383, type: !15004, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15006)
!15004 = !DISubroutineType(types: !15005)
!15005 = !{null, !2565}
!15006 = !{!15007}
!15007 = !DILocalVariable(name: "thread", arg: 1, scope: !15003, file: !2561, line: 383, type: !2565)
!15008 = !DILocation(line: 0, scope: !15003)
!15009 = !DILocation(line: 387, column: 2, scope: !15003)
!15010 = !DILocation(line: 388, column: 1, scope: !15003)
!15011 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2561, file: !2561, line: 528, type: !15012, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15019)
!15012 = !DISubroutineType(types: !15013)
!15013 = !{!160, !2565, !15014, !156, !310, !102, !102, !102, !103, !111, !108}
!15014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15015, size: 32)
!15015 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !15016)
!15016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !15017)
!15017 = !{!15018}
!15018 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15016, file: !305, line: 48, baseType: !110, size: 8)
!15019 = !{!15020, !15021, !15022, !15023, !15024, !15025, !15026, !15027, !15028, !15029, !15030}
!15020 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15011, file: !2561, line: 528, type: !2565)
!15021 = !DILocalVariable(name: "stack", arg: 2, scope: !15011, file: !2561, line: 529, type: !15014)
!15022 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15011, file: !2561, line: 529, type: !156)
!15023 = !DILocalVariable(name: "entry", arg: 4, scope: !15011, file: !2561, line: 530, type: !310)
!15024 = !DILocalVariable(name: "p1", arg: 5, scope: !15011, file: !2561, line: 531, type: !102)
!15025 = !DILocalVariable(name: "p2", arg: 6, scope: !15011, file: !2561, line: 531, type: !102)
!15026 = !DILocalVariable(name: "p3", arg: 7, scope: !15011, file: !2561, line: 531, type: !102)
!15027 = !DILocalVariable(name: "prio", arg: 8, scope: !15011, file: !2561, line: 532, type: !103)
!15028 = !DILocalVariable(name: "options", arg: 9, scope: !15011, file: !2561, line: 532, type: !111)
!15029 = !DILocalVariable(name: "name", arg: 10, scope: !15011, file: !2561, line: 532, type: !108)
!15030 = !DILocalVariable(name: "stack_ptr", scope: !15011, file: !2561, line: 534, type: !160)
!15031 = !DILocation(line: 0, scope: !15011)
!15032 = !DILocation(line: 536, column: 2, scope: !15033)
!15033 = distinct !DILexicalBlock(scope: !15034, file: !2561, line: 536, column: 2)
!15034 = distinct !DILexicalBlock(scope: !15035, file: !2561, line: 536, column: 2)
!15035 = distinct !DILexicalBlock(scope: !15011, file: !2561, line: 536, column: 2)
!15036 = !DILocation(line: 536, column: 2, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !15033, file: !2561, line: 536, column: 2)
!15038 = !DILocation(line: 550, column: 28, scope: !15011)
!15039 = !DILocation(line: 550, column: 2, scope: !15011)
!15040 = !DILocation(line: 553, column: 34, scope: !15011)
!15041 = !DILocation(line: 553, column: 2, scope: !15011)
!15042 = !DILocation(line: 554, column: 14, scope: !15011)
!15043 = !DILocation(line: 564, column: 2, scope: !15011)
!15044 = !DILocation(line: 567, column: 14, scope: !15011)
!15045 = !DILocation(line: 567, column: 24, scope: !15011)
!15046 = !DILocation(line: 612, column: 7, scope: !15047)
!15047 = distinct !DILexicalBlock(scope: !15011, file: !2561, line: 612, column: 6)
!15048 = !DILocation(line: 612, column: 6, scope: !15011)
!15049 = !DILocation(line: 627, column: 40, scope: !15011)
!15050 = !DILocation(line: 637, column: 2, scope: !15011)
!15051 = !DILocation(line: 613, column: 15, scope: !15052)
!15052 = distinct !DILexicalBlock(scope: !15047, file: !2561, line: 612, column: 17)
!15053 = !DILocation(line: 613, column: 29, scope: !15052)
!15054 = !DILocation(line: 638, column: 1, scope: !15011)
!15055 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !14725, file: !14725, line: 78, type: !15056, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15058)
!15056 = !DISubroutineType(types: !15057)
!15057 = !{!122, !102}
!15058 = !{!15059}
!15059 = !DILocalVariable(name: "entry_point", arg: 1, scope: !15055, file: !14725, line: 78, type: !102)
!15060 = !DILocation(line: 0, scope: !15055)
!15061 = !DILocation(line: 80, column: 21, scope: !15055)
!15062 = !DILocation(line: 80, column: 2, scope: !15055)
!15063 = distinct !DISubprogram(name: "z_waitq_init", scope: !15064, file: !15064, line: 47, type: !15065, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15067)
!15064 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15065 = !DISubroutineType(types: !15066)
!15066 = !{null, !2596}
!15067 = !{!15068}
!15068 = !DILocalVariable(name: "w", arg: 1, scope: !15063, file: !15064, line: 47, type: !2596)
!15069 = !DILocation(line: 0, scope: !15063)
!15070 = !DILocation(line: 49, column: 21, scope: !15063)
!15071 = !DILocation(line: 49, column: 2, scope: !15063)
!15072 = !DILocation(line: 50, column: 1, scope: !15063)
!15073 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2561, file: !2561, line: 791, type: !15074, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15077)
!15074 = !DISubroutineType(types: !15075)
!15075 = !{null, !15076, !103, !111, !32}
!15076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 32)
!15077 = !{!15078, !15079, !15080, !15081}
!15078 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15073, file: !2561, line: 791, type: !15076)
!15079 = !DILocalVariable(name: "priority", arg: 2, scope: !15073, file: !2561, line: 791, type: !103)
!15080 = !DILocalVariable(name: "initial_state", arg: 3, scope: !15073, file: !2561, line: 792, type: !111)
!15081 = !DILocalVariable(name: "options", arg: 4, scope: !15073, file: !2561, line: 792, type: !32)
!15082 = !DILocation(line: 0, scope: !15073)
!15083 = !DILocation(line: 795, column: 15, scope: !15073)
!15084 = !DILocation(line: 795, column: 25, scope: !15073)
!15085 = !DILocation(line: 796, column: 30, scope: !15073)
!15086 = !DILocation(line: 796, column: 15, scope: !15073)
!15087 = !DILocation(line: 796, column: 28, scope: !15073)
!15088 = !DILocation(line: 797, column: 30, scope: !15073)
!15089 = !DILocation(line: 797, column: 15, scope: !15073)
!15090 = !DILocation(line: 797, column: 28, scope: !15073)
!15091 = !DILocation(line: 799, column: 22, scope: !15073)
!15092 = !DILocation(line: 799, column: 15, scope: !15073)
!15093 = !DILocation(line: 799, column: 20, scope: !15073)
!15094 = !DILocation(line: 801, column: 15, scope: !15073)
!15095 = !DILocation(line: 801, column: 28, scope: !15073)
!15096 = !DILocation(line: 814, column: 2, scope: !15073)
!15097 = !DILocation(line: 815, column: 1, scope: !15073)
!15098 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2561, file: !2561, line: 449, type: !15099, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15101)
!15099 = !DISubroutineType(types: !15100)
!15100 = !{!160, !2565, !15014, !156}
!15101 = !{!15102, !15103, !15104, !15105, !15106, !15107, !15108, !15109}
!15102 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15098, file: !2561, line: 449, type: !2565)
!15103 = !DILocalVariable(name: "stack", arg: 2, scope: !15098, file: !2561, line: 450, type: !15014)
!15104 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15098, file: !2561, line: 450, type: !156)
!15105 = !DILocalVariable(name: "stack_obj_size", scope: !15098, file: !2561, line: 452, type: !156)
!15106 = !DILocalVariable(name: "stack_buf_size", scope: !15098, file: !2561, line: 452, type: !156)
!15107 = !DILocalVariable(name: "stack_ptr", scope: !15098, file: !2561, line: 453, type: !160)
!15108 = !DILocalVariable(name: "stack_buf_start", scope: !15098, file: !2561, line: 453, type: !160)
!15109 = !DILocalVariable(name: "delta", scope: !15098, file: !2561, line: 454, type: !156)
!15110 = !DILocation(line: 0, scope: !15098)
!15111 = !DILocation(line: 465, column: 20, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15098, file: !2561, line: 463, column: 2)
!15113 = !DILocation(line: 466, column: 21, scope: !15112)
!15114 = !DILocation(line: 473, column: 28, scope: !15098)
!15115 = !DILocation(line: 514, column: 33, scope: !15098)
!15116 = !DILocation(line: 514, column: 25, scope: !15098)
!15117 = !DILocation(line: 514, column: 31, scope: !15098)
!15118 = !DILocation(line: 515, column: 25, scope: !15098)
!15119 = !DILocation(line: 515, column: 30, scope: !15098)
!15120 = !DILocation(line: 516, column: 25, scope: !15098)
!15121 = !DILocation(line: 516, column: 31, scope: !15098)
!15122 = !DILocation(line: 520, column: 2, scope: !15098)
!15123 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !305, file: !305, line: 331, type: !15124, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15126)
!15124 = !DISubroutineType(types: !15125)
!15125 = !{!160, !15014}
!15126 = !{!15127}
!15127 = !DILocalVariable(name: "sym", arg: 1, scope: !15123, file: !305, line: 331, type: !15014)
!15128 = !DILocation(line: 0, scope: !15123)
!15129 = !DILocation(line: 333, column: 21, scope: !15123)
!15130 = !DILocation(line: 333, column: 2, scope: !15123)
!15131 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !15132, file: !15132, line: 40, type: !15133, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15135)
!15132 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15133 = !DISubroutineType(types: !15134)
!15134 = !{null, !15076}
!15135 = !{!15136}
!15136 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15131, file: !15132, line: 40, type: !15076)
!15137 = !DILocation(line: 0, scope: !15131)
!15138 = !DILocation(line: 42, column: 31, scope: !15131)
!15139 = !DILocation(line: 42, column: 2, scope: !15131)
!15140 = !DILocation(line: 43, column: 1, scope: !15131)
!15141 = distinct !DISubprogram(name: "z_init_timeout", scope: !15132, file: !15132, line: 25, type: !2622, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15142)
!15142 = !{!15143}
!15143 = !DILocalVariable(name: "to", arg: 1, scope: !15141, file: !15132, line: 25, type: !2624)
!15144 = !DILocation(line: 0, scope: !15141)
!15145 = !DILocation(line: 27, column: 22, scope: !15141)
!15146 = !DILocation(line: 27, column: 2, scope: !15141)
!15147 = !DILocation(line: 28, column: 1, scope: !15141)
!15148 = distinct !DISubprogram(name: "sys_dnode_init", scope: !136, file: !136, line: 211, type: !15149, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15151)
!15149 = !DISubroutineType(types: !15150)
!15150 = !{null, !2670}
!15151 = !{!15152}
!15152 = !DILocalVariable(name: "node", arg: 1, scope: !15148, file: !136, line: 211, type: !2670)
!15153 = !DILocation(line: 0, scope: !15148)
!15154 = !DILocation(line: 213, column: 8, scope: !15148)
!15155 = !DILocation(line: 213, column: 13, scope: !15148)
!15156 = !DILocation(line: 214, column: 8, scope: !15148)
!15157 = !DILocation(line: 214, column: 13, scope: !15148)
!15158 = !DILocation(line: 215, column: 1, scope: !15148)
!15159 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !15160, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15163)
!15160 = !DISubroutineType(types: !15161)
!15161 = !{null, !15162}
!15162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 32)
!15163 = !{!15164}
!15164 = !DILocalVariable(name: "list", arg: 1, scope: !15159, file: !136, line: 197, type: !15162)
!15165 = !DILocation(line: 0, scope: !15159)
!15166 = !DILocation(line: 199, column: 8, scope: !15159)
!15167 = !DILocation(line: 199, column: 13, scope: !15159)
!15168 = !DILocation(line: 200, column: 8, scope: !15159)
!15169 = !DILocation(line: 200, column: 13, scope: !15159)
!15170 = !DILocation(line: 201, column: 1, scope: !15159)
!15171 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2561, file: !2561, line: 641, type: !15172, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15178)
!15172 = !DISubroutineType(types: !15173)
!15173 = !{!2564, !2565, !15014, !156, !310, !102, !102, !102, !103, !111, !15174}
!15174 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15175)
!15175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15176)
!15176 = !{!15177}
!15177 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15175, file: !105, line: 66, baseType: !104, size: 64)
!15178 = !{!15179, !15180, !15181, !15182, !15183, !15184, !15185, !15186, !15187, !15188}
!15179 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15171, file: !2561, line: 641, type: !2565)
!15180 = !DILocalVariable(name: "stack", arg: 2, scope: !15171, file: !2561, line: 642, type: !15014)
!15181 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15171, file: !2561, line: 643, type: !156)
!15182 = !DILocalVariable(name: "entry", arg: 4, scope: !15171, file: !2561, line: 643, type: !310)
!15183 = !DILocalVariable(name: "p1", arg: 5, scope: !15171, file: !2561, line: 644, type: !102)
!15184 = !DILocalVariable(name: "p2", arg: 6, scope: !15171, file: !2561, line: 644, type: !102)
!15185 = !DILocalVariable(name: "p3", arg: 7, scope: !15171, file: !2561, line: 644, type: !102)
!15186 = !DILocalVariable(name: "prio", arg: 8, scope: !15171, file: !2561, line: 645, type: !103)
!15187 = !DILocalVariable(name: "options", arg: 9, scope: !15171, file: !2561, line: 645, type: !111)
!15188 = !DILocalVariable(name: "delay", arg: 10, scope: !15171, file: !2561, line: 645, type: !15174)
!15189 = !DILocation(line: 0, scope: !15171)
!15190 = !DILocation(line: 1031, column: 3, scope: !14901, inlinedAt: !15191)
!15191 = distinct !DILocation(line: 48, column: 10, scope: !14905, inlinedAt: !15192)
!15192 = distinct !DILocation(line: 647, column: 2, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15194, file: !2561, line: 647, column: 2)
!15194 = distinct !DILexicalBlock(scope: !15171, file: !2561, line: 647, column: 2)
!15195 = !DILocation(line: 0, scope: !14901, inlinedAt: !15191)
!15196 = !DILocation(line: 48, column: 9, scope: !14905, inlinedAt: !15192)
!15197 = !DILocation(line: 647, column: 2, scope: !15194)
!15198 = !DILocation(line: 647, column: 2, scope: !15199)
!15199 = distinct !DILexicalBlock(scope: !15193, file: !2561, line: 647, column: 2)
!15200 = !DILocation(line: 649, column: 2, scope: !15171)
!15201 = !DILocation(line: 652, column: 7, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15171, file: !2561, line: 652, column: 6)
!15203 = !DILocation(line: 652, column: 6, scope: !15171)
!15204 = !DILocation(line: 653, column: 3, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !15202, file: !2561, line: 652, column: 39)
!15206 = !DILocation(line: 654, column: 2, scope: !15205)
!15207 = !DILocation(line: 656, column: 2, scope: !15171)
!15208 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2561, file: !2561, line: 401, type: !15209, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15211)
!15209 = !DISubroutineType(types: !15210)
!15210 = !{null, !2565, !15174}
!15211 = !{!15212, !15213}
!15212 = !DILocalVariable(name: "thread", arg: 1, scope: !15208, file: !2561, line: 401, type: !2565)
!15213 = !DILocalVariable(name: "delay", arg: 2, scope: !15208, file: !2561, line: 401, type: !15174)
!15214 = !DILocation(line: 0, scope: !15208)
!15215 = !DILocation(line: 404, column: 6, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15208, file: !2561, line: 404, column: 6)
!15217 = !DILocation(line: 404, column: 6, scope: !15208)
!15218 = !DILocation(line: 405, column: 3, scope: !15219)
!15219 = distinct !DILexicalBlock(scope: !15216, file: !2561, line: 404, column: 38)
!15220 = !DILocation(line: 406, column: 2, scope: !15219)
!15221 = !DILocation(line: 407, column: 3, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15216, file: !2561, line: 406, column: 9)
!15223 = !DILocation(line: 413, column: 1, scope: !15208)
!15224 = distinct !DISubprogram(name: "k_thread_start", scope: !5275, file: !5275, line: 205, type: !15225, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15227)
!15225 = !DISubroutineType(types: !15226)
!15226 = !{null, !2564}
!15227 = !{!15228}
!15228 = !DILocalVariable(name: "thread", arg: 1, scope: !15224, file: !5275, line: 205, type: !2564)
!15229 = !DILocation(line: 0, scope: !15224)
!15230 = !DILocation(line: 214, column: 2, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15224, file: !5275, line: 214, column: 2)
!15232 = !{i64 2154875268}
!15233 = !DILocation(line: 215, column: 2, scope: !15224)
!15234 = !DILocation(line: 216, column: 1, scope: !15224)
!15235 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15132, file: !15132, line: 47, type: !15209, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15236)
!15236 = !{!15237, !15238}
!15237 = !DILocalVariable(name: "thread", arg: 1, scope: !15235, file: !15132, line: 47, type: !2565)
!15238 = !DILocalVariable(name: "ticks", arg: 2, scope: !15235, file: !15132, line: 47, type: !15174)
!15239 = !DILocation(line: 0, scope: !15235)
!15240 = !DILocation(line: 49, column: 30, scope: !15235)
!15241 = !DILocation(line: 49, column: 2, scope: !15235)
!15242 = !DILocation(line: 50, column: 1, scope: !15235)
!15243 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2561, file: !2561, line: 748, type: !323, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15244)
!15244 = !{!15245, !15262}
!15245 = !DILocalVariable(name: "thread_data", scope: !15246, file: !2561, line: 750, type: !15247)
!15246 = distinct !DILexicalBlock(scope: !15243, file: !2561, line: 750, column: 2)
!15247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15248, size: 32)
!15248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !127, line: 620, size: 384, elements: !15249)
!15249 = !{!15250, !15251, !15252, !15253, !15254, !15255, !15256, !15257, !15258, !15259, !15260, !15261}
!15250 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !15248, file: !127, line: 621, baseType: !2565, size: 32)
!15251 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !15248, file: !127, line: 622, baseType: !15014, size: 32, offset: 32)
!15252 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !15248, file: !127, line: 623, baseType: !32, size: 32, offset: 64)
!15253 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !15248, file: !127, line: 624, baseType: !310, size: 32, offset: 96)
!15254 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !15248, file: !127, line: 625, baseType: !102, size: 32, offset: 128)
!15255 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !15248, file: !127, line: 626, baseType: !102, size: 32, offset: 160)
!15256 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !15248, file: !127, line: 627, baseType: !102, size: 32, offset: 192)
!15257 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !15248, file: !127, line: 628, baseType: !103, size: 32, offset: 224)
!15258 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !15248, file: !127, line: 629, baseType: !111, size: 32, offset: 256)
!15259 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !15248, file: !127, line: 630, baseType: !320, size: 32, offset: 288)
!15260 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !15248, file: !127, line: 631, baseType: !322, size: 32, offset: 320)
!15261 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !15248, file: !127, line: 632, baseType: !108, size: 32, offset: 352)
!15262 = !DILocalVariable(name: "thread_data", scope: !15263, file: !2561, line: 781, type: !15247)
!15263 = distinct !DILexicalBlock(scope: !15243, file: !2561, line: 781, column: 2)
!15264 = !DILocation(line: 0, scope: !15246)
!15265 = !DILocation(line: 750, column: 2, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15267, file: !2561, line: 750, column: 2)
!15267 = distinct !DILexicalBlock(scope: !15268, file: !2561, line: 750, column: 2)
!15268 = distinct !DILexicalBlock(scope: !15246, file: !2561, line: 750, column: 2)
!15269 = !DILocation(line: 750, column: 2, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15271, file: !2561, line: 750, column: 2)
!15271 = distinct !DILexicalBlock(scope: !15266, file: !2561, line: 750, column: 2)
!15272 = !DILocation(line: 750, column: 2, scope: !15267)
!15273 = !DILocation(line: 750, column: 2, scope: !15246)
!15274 = !DILocation(line: 780, column: 2, scope: !15243)
!15275 = !DILocation(line: 0, scope: !15263)
!15276 = !DILocation(line: 781, column: 2, scope: !15277)
!15277 = distinct !DILexicalBlock(scope: !15278, file: !2561, line: 781, column: 2)
!15278 = distinct !DILexicalBlock(scope: !15279, file: !2561, line: 781, column: 2)
!15279 = distinct !DILexicalBlock(scope: !15263, file: !2561, line: 781, column: 2)
!15280 = !DILocation(line: 752, column: 17, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15268, file: !2561, line: 750, column: 38)
!15282 = !DILocation(line: 753, column: 17, scope: !15281)
!15283 = !DILocation(line: 754, column: 17, scope: !15281)
!15284 = !DILocation(line: 755, column: 17, scope: !15281)
!15285 = !DILocation(line: 756, column: 17, scope: !15281)
!15286 = !DILocation(line: 757, column: 17, scope: !15281)
!15287 = !DILocation(line: 758, column: 17, scope: !15281)
!15288 = !DILocation(line: 759, column: 17, scope: !15281)
!15289 = !DILocation(line: 760, column: 17, scope: !15281)
!15290 = !DILocation(line: 751, column: 3, scope: !15281)
!15291 = !DILocation(line: 763, column: 16, scope: !15281)
!15292 = !DILocation(line: 763, column: 29, scope: !15281)
!15293 = !DILocation(line: 763, column: 39, scope: !15281)
!15294 = !DILocation(line: 750, column: 2, scope: !15268)
!15295 = !DILocation(line: 750, column: 2, scope: !15271)
!15296 = distinct !{!15296, !15273, !15297}
!15297 = !DILocation(line: 764, column: 2, scope: !15246)
!15298 = !DILocation(line: 781, column: 2, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15300, file: !2561, line: 781, column: 2)
!15300 = distinct !DILexicalBlock(scope: !15277, file: !2561, line: 781, column: 2)
!15301 = !DILocation(line: 781, column: 2, scope: !15278)
!15302 = !DILocation(line: 781, column: 2, scope: !15263)
!15303 = !DILocation(line: 787, column: 2, scope: !15243)
!15304 = !DILocation(line: 788, column: 1, scope: !15243)
!15305 = !DILocation(line: 782, column: 20, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15307, file: !2561, line: 782, column: 7)
!15307 = distinct !DILexicalBlock(scope: !15279, file: !2561, line: 781, column: 38)
!15308 = !DILocation(line: 782, column: 31, scope: !15306)
!15309 = !DILocation(line: 782, column: 7, scope: !15307)
!15310 = !DILocation(line: 783, column: 37, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15306, file: !2561, line: 782, column: 51)
!15312 = !DILocation(line: 784, column: 10, scope: !15311)
!15313 = !DILocation(line: 783, column: 4, scope: !15311)
!15314 = !DILocation(line: 785, column: 3, scope: !15311)
!15315 = !DILocation(line: 781, column: 2, scope: !15279)
!15316 = !DILocation(line: 781, column: 2, scope: !15300)
!15317 = distinct !{!15317, !15302, !15318}
!15318 = !DILocation(line: 786, column: 2, scope: !15263)
!15319 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3915, file: !3915, line: 403, type: !3916, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15320)
!15320 = !{!15321}
!15321 = !DILocalVariable(name: "t", arg: 1, scope: !15319, file: !3915, line: 403, type: !112)
!15322 = !DILocation(line: 0, scope: !15319)
!15323 = !DILocalVariable(name: "t", arg: 1, scope: !15324, file: !3915, line: 102, type: !112)
!15324 = distinct !DISubprogram(name: "z_tmcvt", scope: !3915, file: !3915, line: 102, type: !3923, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15325)
!15325 = !{!15323, !15326, !15327, !15328, !15329, !15330, !15331, !15332, !15333, !15334, !15335}
!15326 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15324, file: !3915, line: 102, type: !111)
!15327 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15324, file: !3915, line: 103, type: !111)
!15328 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15324, file: !3915, line: 103, type: !122)
!15329 = !DILocalVariable(name: "result32", arg: 5, scope: !15324, file: !3915, line: 104, type: !122)
!15330 = !DILocalVariable(name: "round_up", arg: 6, scope: !15324, file: !3915, line: 104, type: !122)
!15331 = !DILocalVariable(name: "round_off", arg: 7, scope: !15324, file: !3915, line: 105, type: !122)
!15332 = !DILocalVariable(name: "mul_ratio", scope: !15324, file: !3915, line: 107, type: !122)
!15333 = !DILocalVariable(name: "div_ratio", scope: !15324, file: !3915, line: 109, type: !122)
!15334 = !DILocalVariable(name: "off", scope: !15324, file: !3915, line: 116, type: !112)
!15335 = !DILocalVariable(name: "rdivisor", scope: !15336, file: !3915, line: 119, type: !111)
!15336 = distinct !DILexicalBlock(scope: !15337, file: !3915, line: 118, column: 18)
!15337 = distinct !DILexicalBlock(scope: !15324, file: !3915, line: 118, column: 6)
!15338 = !DILocation(line: 0, scope: !15324, inlinedAt: !15339)
!15339 = distinct !DILocation(line: 406, column: 9, scope: !15319)
!15340 = !DILocation(line: 145, column: 13, scope: !15341, inlinedAt: !15339)
!15341 = distinct !DILexicalBlock(scope: !15342, file: !3915, line: 144, column: 10)
!15342 = distinct !DILexicalBlock(scope: !15343, file: !3915, line: 142, column: 7)
!15343 = distinct !DILexicalBlock(scope: !15344, file: !3915, line: 141, column: 24)
!15344 = distinct !DILexicalBlock(scope: !15345, file: !3915, line: 141, column: 13)
!15345 = distinct !DILexicalBlock(scope: !15324, file: !3915, line: 134, column: 6)
!15346 = !DILocation(line: 406, column: 2, scope: !15319)
!15347 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2561, file: !2561, line: 817, type: !5154, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15348)
!15348 = !{!15349, !15350, !15351, !15352}
!15349 = !DILocalVariable(name: "entry", arg: 1, scope: !15347, file: !2561, line: 817, type: !310)
!15350 = !DILocalVariable(name: "p1", arg: 2, scope: !15347, file: !2561, line: 818, type: !102)
!15351 = !DILocalVariable(name: "p2", arg: 3, scope: !15347, file: !2561, line: 818, type: !102)
!15352 = !DILocalVariable(name: "p3", arg: 4, scope: !15347, file: !2561, line: 818, type: !102)
!15353 = !DILocation(line: 0, scope: !15347)
!15354 = !DILocation(line: 822, column: 2, scope: !15347)
!15355 = !DILocation(line: 822, column: 17, scope: !15347)
!15356 = !DILocation(line: 822, column: 30, scope: !15347)
!15357 = !DILocation(line: 823, column: 2, scope: !15347)
!15358 = !DILocation(line: 845, column: 2, scope: !15347)
!15359 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2561, file: !2561, line: 853, type: !15360, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15363)
!15360 = !DISubroutineType(types: !15361)
!15361 = !{!122, !15362}
!15362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 32)
!15363 = !{!15364, !15365}
!15364 = !DILocalVariable(name: "l", arg: 1, scope: !15359, file: !2561, line: 853, type: !15362)
!15365 = !DILocalVariable(name: "thread_cpu", scope: !15359, file: !2561, line: 855, type: !22)
!15366 = !DILocation(line: 0, scope: !15359)
!15367 = !DILocation(line: 855, column: 28, scope: !15359)
!15368 = !DILocation(line: 857, column: 17, scope: !15369)
!15369 = distinct !DILexicalBlock(scope: !15359, file: !2561, line: 857, column: 6)
!15370 = !DILocation(line: 857, column: 6, scope: !15359)
!15371 = !DILocation(line: 858, column: 19, scope: !15372)
!15372 = distinct !DILexicalBlock(scope: !15373, file: !2561, line: 858, column: 7)
!15373 = distinct !DILexicalBlock(scope: !15369, file: !2561, line: 857, column: 24)
!15374 = !DILocation(line: 858, column: 42, scope: !15372)
!15375 = !DILocation(line: 858, column: 28, scope: !15372)
!15376 = !DILocation(line: 858, column: 25, scope: !15372)
!15377 = !DILocation(line: 858, column: 7, scope: !15373)
!15378 = !DILocation(line: 862, column: 2, scope: !15359)
!15379 = !DILocation(line: 863, column: 1, scope: !15359)
!15380 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2561, file: !2561, line: 865, type: !15360, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15381)
!15381 = !{!15382}
!15382 = !DILocalVariable(name: "l", arg: 1, scope: !15380, file: !2561, line: 865, type: !15362)
!15383 = !DILocation(line: 0, scope: !15380)
!15384 = !DILocation(line: 867, column: 9, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !15380, file: !2561, line: 867, column: 6)
!15386 = !DILocation(line: 867, column: 38, scope: !15385)
!15387 = !DILocation(line: 867, column: 24, scope: !15385)
!15388 = !DILocation(line: 867, column: 54, scope: !15385)
!15389 = !DILocation(line: 867, column: 43, scope: !15385)
!15390 = !DILocation(line: 867, column: 41, scope: !15385)
!15391 = !DILocation(line: 867, column: 20, scope: !15385)
!15392 = !DILocation(line: 867, column: 6, scope: !15380)
!15393 = !DILocation(line: 870, column: 16, scope: !15380)
!15394 = !DILocation(line: 871, column: 2, scope: !15380)
!15395 = !DILocation(line: 872, column: 1, scope: !15380)
!15396 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2561, file: !2561, line: 874, type: !15397, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15399)
!15397 = !DISubroutineType(types: !15398)
!15398 = !{null, !15362}
!15399 = !{!15400}
!15400 = !DILocalVariable(name: "l", arg: 1, scope: !15396, file: !2561, line: 874, type: !15362)
!15401 = !DILocation(line: 0, scope: !15396)
!15402 = !DILocation(line: 876, column: 32, scope: !15396)
!15403 = !DILocation(line: 876, column: 18, scope: !15396)
!15404 = !DILocation(line: 876, column: 48, scope: !15396)
!15405 = !DILocation(line: 876, column: 37, scope: !15396)
!15406 = !DILocation(line: 876, column: 35, scope: !15396)
!15407 = !DILocation(line: 876, column: 5, scope: !15396)
!15408 = !DILocation(line: 876, column: 16, scope: !15396)
!15409 = !DILocation(line: 877, column: 1, scope: !15396)
!15410 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2561, file: !2561, line: 888, type: !15411, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15413)
!15411 = !DISubroutineType(types: !15412)
!15412 = !{!103, !2565}
!15413 = !{!15414}
!15414 = !DILocalVariable(name: "thread", arg: 1, scope: !15410, file: !2561, line: 888, type: !2565)
!15415 = !DILocation(line: 0, scope: !15410)
!15416 = !DILocation(line: 893, column: 2, scope: !15410)
!15417 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2561, file: !2561, line: 897, type: !15418, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15420)
!15418 = !DISubroutineType(types: !15419)
!15419 = !{!103, !2565, !32}
!15420 = !{!15421, !15422}
!15421 = !DILocalVariable(name: "thread", arg: 1, scope: !15417, file: !2561, line: 897, type: !2565)
!15422 = !DILocalVariable(name: "options", arg: 2, scope: !15417, file: !2561, line: 897, type: !32)
!15423 = !DILocation(line: 0, scope: !15417)
!15424 = !DILocation(line: 902, column: 2, scope: !15417)
!15425 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2561, file: !2561, line: 1072, type: !15426, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15431)
!15426 = !DISubroutineType(types: !15427)
!15427 = !{!103, !2564, !15428}
!15428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15429, size: 32)
!15429 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !199, line: 234, baseType: !15430)
!15430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !199, line: 192, elements: !2501)
!15431 = !{!15432, !15433}
!15432 = !DILocalVariable(name: "thread", arg: 1, scope: !15425, file: !2561, line: 1072, type: !2564)
!15433 = !DILocalVariable(name: "stats", arg: 2, scope: !15425, file: !2561, line: 1073, type: !15428)
!15434 = !DILocation(line: 0, scope: !15425)
!15435 = !DILocation(line: 1075, column: 14, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15425, file: !2561, line: 1075, column: 6)
!15437 = !DILocation(line: 1075, column: 23, scope: !15436)
!15438 = !DILocation(line: 1086, column: 1, scope: !15425)
!15439 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2561, file: !2561, line: 1088, type: !15440, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !15442)
!15440 = !DISubroutineType(types: !15441)
!15441 = !{!103, !15428}
!15442 = !{!15443}
!15443 = !DILocalVariable(name: "stats", arg: 1, scope: !15439, file: !2561, line: 1088, type: !15428)
!15444 = !DILocation(line: 0, scope: !15439)
!15445 = !DILocation(line: 1094, column: 12, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15439, file: !2561, line: 1094, column: 6)
!15447 = !DILocation(line: 1120, column: 1, scope: !15439)
!15448 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15449, file: !15449, line: 20, type: !323, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3621, retainedNodes: !2501)
!15449 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15450 = !DILocation(line: 30, column: 2, scope: !15448)
!15451 = !DILocation(line: 31, column: 1, scope: !15448)
!15452 = distinct !DISubprogram(name: "idle", scope: !15449, file: !15449, line: 33, type: !312, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3621, retainedNodes: !15453)
!15453 = !{!15454, !15455, !15456}
!15454 = !DILocalVariable(name: "unused1", arg: 1, scope: !15452, file: !15449, line: 33, type: !102)
!15455 = !DILocalVariable(name: "unused2", arg: 2, scope: !15452, file: !15449, line: 33, type: !102)
!15456 = !DILocalVariable(name: "unused3", arg: 3, scope: !15452, file: !15449, line: 33, type: !102)
!15457 = !DILocation(line: 0, scope: !15452)
!15458 = !DILocation(line: 39, column: 2, scope: !15459)
!15459 = distinct !DILexicalBlock(scope: !15460, file: !15449, line: 39, column: 2)
!15460 = distinct !DILexicalBlock(scope: !15452, file: !15449, line: 39, column: 2)
!15461 = !DILocation(line: 39, column: 2, scope: !15460)
!15462 = !DILocation(line: 39, column: 2, scope: !15463)
!15463 = distinct !DILexicalBlock(scope: !15459, file: !15449, line: 39, column: 2)
!15464 = !DILocation(line: 55, column: 2, scope: !15465, inlinedAt: !15469)
!15465 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7544, file: !7544, line: 42, type: !7545, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3621, retainedNodes: !15466)
!15466 = !{!15467, !15468}
!15467 = !DILocalVariable(name: "key", scope: !15465, file: !7544, line: 44, type: !32)
!15468 = !DILocalVariable(name: "tmp", scope: !15465, file: !7544, line: 53, type: !32)
!15469 = distinct !DILocation(line: 62, column: 10, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15452, file: !15449, line: 41, column: 15)
!15471 = !{i64 2226031}
!15472 = !DILocation(line: 0, scope: !15465, inlinedAt: !15469)
!15473 = !DILocation(line: 86, column: 3, scope: !15470)
!15474 = !DILocation(line: 41, column: 2, scope: !15452)
!15475 = distinct !{!15475, !15474, !15476}
!15476 = !DILocation(line: 105, column: 2, scope: !15452)
!15477 = distinct !DISubprogram(name: "k_cpu_idle", scope: !127, file: !127, line: 5627, type: !323, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3621, retainedNodes: !2501)
!15478 = !DILocation(line: 5629, column: 2, scope: !15477)
!15479 = !DILocation(line: 5630, column: 1, scope: !15477)
!15480 = !DISubprogram(name: "arch_cpu_idle", scope: !303, file: !303, line: 167, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2501)
!15481 = distinct !DISubprogram(name: "k_msgq_init", scope: !15482, file: !15482, line: 35, type: !15483, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15498)
!15482 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15483 = !DISubroutineType(types: !15484)
!15484 = !{null, !15485, !160, !156, !111}
!15485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15486, size: 32)
!15486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !15487)
!15487 = !{!15488, !15489, !15490, !15491, !15492, !15493, !15494, !15495, !15496, !15497}
!15488 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15486, file: !127, line: 4206, baseType: !3659, size: 64)
!15489 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15486, file: !127, line: 4208, baseType: !3721, size: 32, offset: 64)
!15490 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15486, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!15491 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15486, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!15492 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !15486, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!15493 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !15486, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!15494 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !15486, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!15495 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !15486, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!15496 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15486, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!15497 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15486, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!15498 = !{!15499, !15500, !15501, !15502}
!15499 = !DILocalVariable(name: "msgq", arg: 1, scope: !15481, file: !15482, line: 35, type: !15485)
!15500 = !DILocalVariable(name: "buffer", arg: 2, scope: !15481, file: !15482, line: 35, type: !160)
!15501 = !DILocalVariable(name: "msg_size", arg: 3, scope: !15481, file: !15482, line: 35, type: !156)
!15502 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !15481, file: !15482, line: 36, type: !111)
!15503 = !DILocation(line: 0, scope: !15481)
!15504 = !DILocation(line: 38, column: 8, scope: !15481)
!15505 = !DILocation(line: 38, column: 17, scope: !15481)
!15506 = !DILocation(line: 39, column: 8, scope: !15481)
!15507 = !DILocation(line: 39, column: 17, scope: !15481)
!15508 = !DILocation(line: 40, column: 8, scope: !15481)
!15509 = !DILocation(line: 40, column: 21, scope: !15481)
!15510 = !DILocation(line: 41, column: 40, scope: !15481)
!15511 = !DILocation(line: 41, column: 28, scope: !15481)
!15512 = !DILocation(line: 41, column: 8, scope: !15481)
!15513 = !DILocation(line: 41, column: 19, scope: !15481)
!15514 = !DILocation(line: 42, column: 8, scope: !15481)
!15515 = !DILocation(line: 42, column: 17, scope: !15481)
!15516 = !DILocation(line: 43, column: 8, scope: !15481)
!15517 = !DILocation(line: 43, column: 18, scope: !15481)
!15518 = !DILocation(line: 44, column: 8, scope: !15481)
!15519 = !DILocation(line: 44, column: 18, scope: !15481)
!15520 = !DILocation(line: 45, column: 8, scope: !15481)
!15521 = !DILocation(line: 45, column: 14, scope: !15481)
!15522 = !DILocation(line: 46, column: 22, scope: !15481)
!15523 = !DILocation(line: 46, column: 2, scope: !15481)
!15524 = !DILocation(line: 47, column: 15, scope: !15481)
!15525 = !DILocation(line: 55, column: 1, scope: !15481)
!15526 = distinct !DISubprogram(name: "z_waitq_init", scope: !15064, file: !15064, line: 47, type: !15527, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15529)
!15527 = !DISubroutineType(types: !15528)
!15528 = !{null, !3658}
!15529 = !{!15530}
!15530 = !DILocalVariable(name: "w", arg: 1, scope: !15526, file: !15064, line: 47, type: !3658)
!15531 = !DILocation(line: 0, scope: !15526)
!15532 = !DILocation(line: 49, column: 21, scope: !15526)
!15533 = !DILocation(line: 49, column: 2, scope: !15526)
!15534 = !DILocation(line: 50, column: 1, scope: !15526)
!15535 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !15536, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15539)
!15536 = !DISubroutineType(types: !15537)
!15537 = !{null, !15538}
!15538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 32)
!15539 = !{!15540}
!15540 = !DILocalVariable(name: "list", arg: 1, scope: !15535, file: !136, line: 197, type: !15538)
!15541 = !DILocation(line: 0, scope: !15535)
!15542 = !DILocation(line: 199, column: 8, scope: !15535)
!15543 = !DILocation(line: 199, column: 13, scope: !15535)
!15544 = !DILocation(line: 200, column: 8, scope: !15535)
!15545 = !DILocation(line: 200, column: 13, scope: !15535)
!15546 = !DILocation(line: 201, column: 1, scope: !15535)
!15547 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !15482, file: !15482, line: 57, type: !15548, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15550)
!15548 = !DISubroutineType(types: !15549)
!15549 = !{!103, !15485, !156, !111}
!15550 = !{!15551, !15552, !15553, !15554, !15555, !15556}
!15551 = !DILocalVariable(name: "msgq", arg: 1, scope: !15547, file: !15482, line: 57, type: !15485)
!15552 = !DILocalVariable(name: "msg_size", arg: 2, scope: !15547, file: !15482, line: 57, type: !156)
!15553 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !15547, file: !15482, line: 58, type: !111)
!15554 = !DILocalVariable(name: "buffer", scope: !15547, file: !15482, line: 60, type: !102)
!15555 = !DILocalVariable(name: "ret", scope: !15547, file: !15482, line: 61, type: !103)
!15556 = !DILocalVariable(name: "total_size", scope: !15547, file: !15482, line: 62, type: !156)
!15557 = !DILocation(line: 0, scope: !15547)
!15558 = !DILocation(line: 62, column: 2, scope: !15547)
!15559 = !DILocation(line: 66, column: 6, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15547, file: !15482, line: 66, column: 6)
!15561 = !DILocation(line: 66, column: 6, scope: !15547)
!15562 = !DILocation(line: 69, column: 28, scope: !15563)
!15563 = distinct !DILexicalBlock(scope: !15560, file: !15482, line: 68, column: 9)
!15564 = !DILocation(line: 69, column: 12, scope: !15563)
!15565 = !DILocation(line: 70, column: 14, scope: !15566)
!15566 = distinct !DILexicalBlock(scope: !15563, file: !15482, line: 70, column: 7)
!15567 = !DILocation(line: 70, column: 7, scope: !15563)
!15568 = !DILocation(line: 71, column: 4, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15566, file: !15482, line: 70, column: 23)
!15570 = !DILocation(line: 72, column: 10, scope: !15569)
!15571 = !DILocation(line: 72, column: 16, scope: !15569)
!15572 = !DILocation(line: 74, column: 3, scope: !15569)
!15573 = !DILocation(line: 0, scope: !15560)
!15574 = !DILocation(line: 82, column: 1, scope: !15547)
!15575 = !DILocation(line: 81, column: 2, scope: !15547)
!15576 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15577, file: !15577, line: 105, type: !15578, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15580)
!15577 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15578 = !DISubroutineType(types: !15579)
!15579 = !{!122, !156, !156, !3097}
!15580 = !{!15581, !15582, !15583}
!15581 = !DILocalVariable(name: "a", arg: 1, scope: !15576, file: !15577, line: 105, type: !156)
!15582 = !DILocalVariable(name: "b", arg: 2, scope: !15576, file: !15577, line: 105, type: !156)
!15583 = !DILocalVariable(name: "result", arg: 3, scope: !15576, file: !15577, line: 105, type: !3097)
!15584 = !DILocation(line: 0, scope: !15576)
!15585 = !DILocation(line: 107, column: 9, scope: !15576)
!15586 = !DILocation(line: 107, column: 2, scope: !15576)
!15587 = distinct !DISubprogram(name: "z_thread_malloc", scope: !15588, file: !15588, line: 102, type: !15589, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15590)
!15588 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15589 = !DISubroutineType(types: !3602)
!15590 = !{!15591}
!15591 = !DILocalVariable(name: "size", arg: 1, scope: !15587, file: !15588, line: 102, type: !156)
!15592 = !DILocation(line: 0, scope: !15587)
!15593 = !DILocation(line: 104, column: 9, scope: !15587)
!15594 = !DILocation(line: 104, column: 2, scope: !15587)
!15595 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !15482, file: !15482, line: 95, type: !15596, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15598)
!15596 = !DISubroutineType(types: !15597)
!15597 = !{!103, !15485}
!15598 = !{!15599}
!15599 = !DILocalVariable(name: "msgq", arg: 1, scope: !15595, file: !15482, line: 95, type: !15485)
!15600 = !DILocation(line: 0, scope: !15595)
!15601 = !DILocation(line: 99, column: 2, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15595, file: !15482, line: 99, column: 2)
!15603 = !DILocation(line: 99, column: 2, scope: !15595)
!15604 = !DILocation(line: 105, column: 13, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15595, file: !15482, line: 105, column: 6)
!15606 = !DILocation(line: 105, column: 19, scope: !15605)
!15607 = !DILocation(line: 105, column: 40, scope: !15605)
!15608 = !DILocation(line: 105, column: 6, scope: !15595)
!15609 = !DILocation(line: 106, column: 16, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15605, file: !15482, line: 105, column: 47)
!15611 = !DILocation(line: 106, column: 3, scope: !15610)
!15612 = !DILocation(line: 107, column: 15, scope: !15610)
!15613 = !DILocation(line: 108, column: 2, scope: !15610)
!15614 = !DILocation(line: 113, column: 1, scope: !15595)
!15615 = distinct !DISubprogram(name: "z_waitq_head", scope: !15064, file: !15064, line: 52, type: !15616, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15618)
!15616 = !DISubroutineType(types: !15617)
!15617 = !{!3641, !3658}
!15618 = !{!15619}
!15619 = !DILocalVariable(name: "w", arg: 1, scope: !15615, file: !15064, line: 52, type: !3658)
!15620 = !DILocation(line: 0, scope: !15615)
!15621 = !DILocation(line: 54, column: 52, scope: !15615)
!15622 = !DILocation(line: 54, column: 28, scope: !15615)
!15623 = !DILocation(line: 54, column: 9, scope: !15615)
!15624 = !DILocation(line: 54, column: 2, scope: !15615)
!15625 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !15626, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15628)
!15626 = !DISubroutineType(types: !15627)
!15627 = !{!3626, !15538}
!15628 = !{!15629}
!15629 = !DILocalVariable(name: "list", arg: 1, scope: !15625, file: !136, line: 294, type: !15538)
!15630 = !DILocation(line: 0, scope: !15625)
!15631 = !DILocation(line: 296, column: 9, scope: !15625)
!15632 = !DILocation(line: 296, column: 49, scope: !15625)
!15633 = !DILocation(line: 296, column: 2, scope: !15625)
!15634 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !15635, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15637)
!15635 = !DISubroutineType(types: !15636)
!15636 = !{!122, !15538}
!15637 = !{!15638}
!15638 = !DILocalVariable(name: "list", arg: 1, scope: !15634, file: !136, line: 266, type: !15538)
!15639 = !DILocation(line: 0, scope: !15634)
!15640 = !DILocation(line: 268, column: 15, scope: !15634)
!15641 = !DILocation(line: 268, column: 20, scope: !15634)
!15642 = !DILocation(line: 268, column: 2, scope: !15634)
!15643 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !15482, file: !15482, line: 116, type: !15644, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15650)
!15644 = !DISubroutineType(types: !15645)
!15645 = !{!103, !15485, !13, !15646}
!15646 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15647)
!15647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15648)
!15648 = !{!15649}
!15649 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15647, file: !105, line: 66, baseType: !104, size: 64)
!15650 = !{!15651, !15652, !15653, !15654, !15655, !15660}
!15651 = !DILocalVariable(name: "msgq", arg: 1, scope: !15643, file: !15482, line: 116, type: !15485)
!15652 = !DILocalVariable(name: "data", arg: 2, scope: !15643, file: !15482, line: 116, type: !13)
!15653 = !DILocalVariable(name: "timeout", arg: 3, scope: !15643, file: !15482, line: 116, type: !15646)
!15654 = !DILocalVariable(name: "pending_thread", scope: !15643, file: !15482, line: 120, type: !3641)
!15655 = !DILocalVariable(name: "key", scope: !15643, file: !15482, line: 121, type: !15656)
!15656 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !15657)
!15657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !15658)
!15658 = !{!15659}
!15659 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15657, file: !152, line: 33, baseType: !103, size: 32)
!15660 = !DILocalVariable(name: "result", scope: !15643, file: !15482, line: 122, type: !103)
!15661 = !DILocation(line: 0, scope: !15643)
!15662 = !DILocation(line: 1031, column: 3, scope: !15663, inlinedAt: !15666)
!15663 = distinct !DISubprogram(name: "__get_IPSR", scope: !7865, file: !7865, line: 1027, type: !7952, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15664)
!15664 = !{!15665}
!15665 = !DILocalVariable(name: "result", scope: !15663, file: !7865, line: 1029, type: !111)
!15666 = distinct !DILocation(line: 48, column: 10, scope: !15667, inlinedAt: !15668)
!15667 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8915, file: !8915, line: 46, type: !8916, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !2501)
!15668 = distinct !DILocation(line: 118, column: 2, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15670, file: !15482, line: 118, column: 2)
!15670 = distinct !DILexicalBlock(scope: !15643, file: !15482, line: 118, column: 2)
!15671 = !{i64 3549781}
!15672 = !DILocation(line: 0, scope: !15663, inlinedAt: !15666)
!15673 = !DILocation(line: 48, column: 9, scope: !15667, inlinedAt: !15668)
!15674 = !DILocation(line: 118, column: 2, scope: !15669)
!15675 = !DILocation(line: 118, column: 2, scope: !15676)
!15676 = distinct !DILexicalBlock(scope: !15669, file: !15482, line: 118, column: 2)
!15677 = !DILocation(line: 124, column: 27, scope: !15643)
!15678 = !DILocalVariable(name: "l", arg: 1, scope: !15679, file: !152, line: 136, type: !15682)
!15679 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !15680, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15683)
!15680 = !DISubroutineType(types: !15681)
!15681 = !{!15656, !15682}
!15682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3721, size: 32)
!15683 = !{!15678, !15684}
!15684 = !DILocalVariable(name: "k", scope: !15679, file: !152, line: 139, type: !15656)
!15685 = !DILocation(line: 0, scope: !15679, inlinedAt: !15686)
!15686 = distinct !DILocation(line: 124, column: 8, scope: !15643)
!15687 = !DILocation(line: 55, column: 2, scope: !15688, inlinedAt: !15692)
!15688 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7544, file: !7544, line: 42, type: !7545, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15689)
!15689 = !{!15690, !15691}
!15690 = !DILocalVariable(name: "key", scope: !15688, file: !7544, line: 44, type: !32)
!15691 = !DILocalVariable(name: "tmp", scope: !15688, file: !7544, line: 53, type: !32)
!15692 = distinct !DILocation(line: 145, column: 10, scope: !15679, inlinedAt: !15686)
!15693 = !{i64 2232168}
!15694 = !DILocation(line: 0, scope: !15688, inlinedAt: !15692)
!15695 = !DILocation(line: 148, column: 2, scope: !15696, inlinedAt: !15686)
!15696 = distinct !DILexicalBlock(scope: !15697, file: !152, line: 148, column: 2)
!15697 = distinct !DILexicalBlock(scope: !15679, file: !152, line: 148, column: 2)
!15698 = !DILocation(line: 148, column: 2, scope: !15697, inlinedAt: !15686)
!15699 = !DILocation(line: 148, column: 2, scope: !15700, inlinedAt: !15686)
!15700 = distinct !DILexicalBlock(scope: !15696, file: !152, line: 148, column: 2)
!15701 = !DILocation(line: 160, column: 2, scope: !15679, inlinedAt: !15686)
!15702 = !DILocation(line: 128, column: 12, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15643, file: !15482, line: 128, column: 6)
!15704 = !DILocation(line: 128, column: 30, scope: !15703)
!15705 = !DILocation(line: 128, column: 22, scope: !15703)
!15706 = !DILocation(line: 128, column: 6, scope: !15643)
!15707 = !DILocation(line: 130, column: 49, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15703, file: !15482, line: 128, column: 40)
!15709 = !DILocation(line: 130, column: 20, scope: !15708)
!15710 = !DILocation(line: 131, column: 22, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15708, file: !15482, line: 131, column: 7)
!15712 = !DILocation(line: 131, column: 7, scope: !15708)
!15713 = !DILocation(line: 135, column: 38, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15711, file: !15482, line: 131, column: 31)
!15715 = !DILocation(line: 136, column: 17, scope: !15714)
!15716 = !DILocation(line: 135, column: 10, scope: !15714)
!15717 = !DILocalVariable(name: "thread", arg: 1, scope: !15718, file: !14745, line: 65, type: !3641)
!15718 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14745, file: !14745, line: 65, type: !15719, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15721)
!15719 = !DISubroutineType(types: !15720)
!15720 = !{null, !3641, !32}
!15721 = !{!15717, !15722}
!15722 = !DILocalVariable(name: "value", arg: 2, scope: !15718, file: !14745, line: 65, type: !32)
!15723 = !DILocation(line: 0, scope: !15718, inlinedAt: !15724)
!15724 = distinct !DILocation(line: 138, column: 4, scope: !15714)
!15725 = !DILocation(line: 67, column: 15, scope: !15718, inlinedAt: !15724)
!15726 = !DILocation(line: 67, column: 33, scope: !15718, inlinedAt: !15724)
!15727 = !DILocation(line: 139, column: 4, scope: !15714)
!15728 = !DILocation(line: 140, column: 4, scope: !15714)
!15729 = !DILocation(line: 141, column: 4, scope: !15714)
!15730 = !DILocation(line: 144, column: 23, scope: !15731)
!15731 = distinct !DILexicalBlock(scope: !15711, file: !15482, line: 142, column: 10)
!15732 = !DILocation(line: 144, column: 46, scope: !15731)
!15733 = !DILocation(line: 144, column: 10, scope: !15731)
!15734 = !DILocation(line: 145, column: 29, scope: !15731)
!15735 = !DILocation(line: 145, column: 20, scope: !15731)
!15736 = !DILocation(line: 146, column: 33, scope: !15737)
!15737 = distinct !DILexicalBlock(scope: !15731, file: !15482, line: 146, column: 8)
!15738 = !DILocation(line: 146, column: 24, scope: !15737)
!15739 = !DILocation(line: 146, column: 8, scope: !15731)
!15740 = !DILocation(line: 147, column: 29, scope: !15741)
!15741 = distinct !DILexicalBlock(scope: !15737, file: !15482, line: 146, column: 45)
!15742 = !DILocation(line: 147, column: 21, scope: !15741)
!15743 = !DILocation(line: 148, column: 4, scope: !15741)
!15744 = !DILocation(line: 149, column: 19, scope: !15731)
!15745 = !DILocation(line: 155, column: 2, scope: !15708)
!15746 = !DILocation(line: 155, column: 13, scope: !15703)
!15747 = !DILocation(line: 162, column: 3, scope: !15748)
!15748 = distinct !DILexicalBlock(scope: !15749, file: !15482, line: 158, column: 9)
!15749 = distinct !DILexicalBlock(scope: !15703, file: !15482, line: 155, column: 13)
!15750 = !DILocation(line: 162, column: 18, scope: !15748)
!15751 = !DILocation(line: 162, column: 28, scope: !15748)
!15752 = !DILocation(line: 164, column: 49, scope: !15748)
!15753 = !DILocation(line: 164, column: 12, scope: !15748)
!15754 = !DILocation(line: 166, column: 3, scope: !15748)
!15755 = !DILocation(line: 0, scope: !15703)
!15756 = !DILocalVariable(name: "key", arg: 2, scope: !15757, file: !152, line: 190, type: !15656)
!15757 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !15758, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15760)
!15758 = !DISubroutineType(types: !15759)
!15759 = !{null, !15682, !15656}
!15760 = !{!15761, !15756}
!15761 = !DILocalVariable(name: "l", arg: 1, scope: !15757, file: !152, line: 189, type: !15682)
!15762 = !DILocation(line: 0, scope: !15757, inlinedAt: !15763)
!15763 = distinct !DILocation(line: 171, column: 2, scope: !15643)
!15764 = !DILocation(line: 194, column: 2, scope: !15765, inlinedAt: !15763)
!15765 = distinct !DILexicalBlock(scope: !15766, file: !152, line: 194, column: 2)
!15766 = distinct !DILexicalBlock(scope: !15757, file: !152, line: 194, column: 2)
!15767 = !DILocation(line: 194, column: 2, scope: !15766, inlinedAt: !15763)
!15768 = !DILocation(line: 194, column: 2, scope: !15769, inlinedAt: !15763)
!15769 = distinct !DILexicalBlock(scope: !15765, file: !152, line: 194, column: 2)
!15770 = !DILocalVariable(name: "key", arg: 1, scope: !15771, file: !7544, line: 84, type: !32)
!15771 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7544, file: !7544, line: 84, type: !7555, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15772)
!15772 = !{!15770}
!15773 = !DILocation(line: 0, scope: !15771, inlinedAt: !15774)
!15774 = distinct !DILocation(line: 215, column: 2, scope: !15757, inlinedAt: !15763)
!15775 = !DILocation(line: 95, column: 2, scope: !15771, inlinedAt: !15774)
!15776 = !{i64 2232985}
!15777 = !DILocation(line: 173, column: 2, scope: !15643)
!15778 = !DILocation(line: 174, column: 1, scope: !15643)
!15779 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !15482, file: !15482, line: 188, type: !15780, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15788)
!15780 = !DISubroutineType(types: !15781)
!15781 = !{null, !15485, !15782}
!15782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15783, size: 32)
!15783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !127, line: 4259, size: 96, elements: !15784)
!15784 = !{!15785, !15786, !15787}
!15785 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15783, file: !127, line: 4261, baseType: !156, size: 32)
!15786 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15783, file: !127, line: 4263, baseType: !111, size: 32, offset: 32)
!15787 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15783, file: !127, line: 4265, baseType: !111, size: 32, offset: 64)
!15788 = !{!15789, !15790}
!15789 = !DILocalVariable(name: "msgq", arg: 1, scope: !15779, file: !15482, line: 188, type: !15485)
!15790 = !DILocalVariable(name: "attrs", arg: 2, scope: !15779, file: !15482, line: 188, type: !15782)
!15791 = !DILocation(line: 0, scope: !15779)
!15792 = !DILocation(line: 190, column: 26, scope: !15779)
!15793 = !DILocation(line: 190, column: 9, scope: !15779)
!15794 = !DILocation(line: 190, column: 18, scope: !15779)
!15795 = !DILocation(line: 191, column: 26, scope: !15779)
!15796 = !DILocation(line: 191, column: 9, scope: !15779)
!15797 = !DILocation(line: 191, column: 18, scope: !15779)
!15798 = !DILocation(line: 192, column: 27, scope: !15779)
!15799 = !DILocation(line: 192, column: 9, scope: !15779)
!15800 = !DILocation(line: 192, column: 19, scope: !15779)
!15801 = !DILocation(line: 193, column: 1, scope: !15779)
!15802 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !15482, file: !15482, line: 206, type: !15803, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15805)
!15803 = !DISubroutineType(types: !15804)
!15804 = !{!103, !15485, !102, !15646}
!15805 = !{!15806, !15807, !15808, !15809, !15810, !15811}
!15806 = !DILocalVariable(name: "msgq", arg: 1, scope: !15802, file: !15482, line: 206, type: !15485)
!15807 = !DILocalVariable(name: "data", arg: 2, scope: !15802, file: !15482, line: 206, type: !102)
!15808 = !DILocalVariable(name: "timeout", arg: 3, scope: !15802, file: !15482, line: 206, type: !15646)
!15809 = !DILocalVariable(name: "key", scope: !15802, file: !15482, line: 210, type: !15656)
!15810 = !DILocalVariable(name: "pending_thread", scope: !15802, file: !15482, line: 211, type: !3641)
!15811 = !DILocalVariable(name: "result", scope: !15802, file: !15482, line: 212, type: !103)
!15812 = !DILocation(line: 0, scope: !15802)
!15813 = !DILocation(line: 1031, column: 3, scope: !15663, inlinedAt: !15814)
!15814 = distinct !DILocation(line: 48, column: 10, scope: !15667, inlinedAt: !15815)
!15815 = distinct !DILocation(line: 208, column: 2, scope: !15816)
!15816 = distinct !DILexicalBlock(scope: !15817, file: !15482, line: 208, column: 2)
!15817 = distinct !DILexicalBlock(scope: !15802, file: !15482, line: 208, column: 2)
!15818 = !DILocation(line: 0, scope: !15663, inlinedAt: !15814)
!15819 = !DILocation(line: 48, column: 9, scope: !15667, inlinedAt: !15815)
!15820 = !DILocation(line: 208, column: 2, scope: !15816)
!15821 = !DILocation(line: 208, column: 2, scope: !15822)
!15822 = distinct !DILexicalBlock(scope: !15816, file: !15482, line: 208, column: 2)
!15823 = !DILocation(line: 214, column: 27, scope: !15802)
!15824 = !DILocation(line: 0, scope: !15679, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 214, column: 8, scope: !15802)
!15826 = !DILocation(line: 55, column: 2, scope: !15688, inlinedAt: !15827)
!15827 = distinct !DILocation(line: 145, column: 10, scope: !15679, inlinedAt: !15825)
!15828 = !DILocation(line: 0, scope: !15688, inlinedAt: !15827)
!15829 = !DILocation(line: 148, column: 2, scope: !15696, inlinedAt: !15825)
!15830 = !DILocation(line: 148, column: 2, scope: !15697, inlinedAt: !15825)
!15831 = !DILocation(line: 148, column: 2, scope: !15700, inlinedAt: !15825)
!15832 = !DILocation(line: 160, column: 2, scope: !15679, inlinedAt: !15825)
!15833 = !DILocation(line: 218, column: 12, scope: !15834)
!15834 = distinct !DILexicalBlock(scope: !15802, file: !15482, line: 218, column: 6)
!15835 = !DILocation(line: 218, column: 22, scope: !15834)
!15836 = !DILocation(line: 218, column: 6, scope: !15802)
!15837 = !DILocation(line: 220, column: 28, scope: !15838)
!15838 = distinct !DILexicalBlock(scope: !15834, file: !15482, line: 218, column: 28)
!15839 = !DILocation(line: 220, column: 44, scope: !15838)
!15840 = !DILocation(line: 220, column: 9, scope: !15838)
!15841 = !DILocation(line: 221, column: 27, scope: !15838)
!15842 = !DILocation(line: 221, column: 18, scope: !15838)
!15843 = !DILocation(line: 222, column: 31, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15838, file: !15482, line: 222, column: 7)
!15845 = !DILocation(line: 222, column: 22, scope: !15844)
!15846 = !DILocation(line: 222, column: 7, scope: !15838)
!15847 = !DILocation(line: 223, column: 27, scope: !15848)
!15848 = distinct !DILexicalBlock(scope: !15844, file: !15482, line: 222, column: 43)
!15849 = !DILocation(line: 223, column: 19, scope: !15848)
!15850 = !DILocation(line: 224, column: 3, scope: !15848)
!15851 = !DILocation(line: 225, column: 18, scope: !15838)
!15852 = !DILocation(line: 228, column: 49, scope: !15838)
!15853 = !DILocation(line: 228, column: 20, scope: !15838)
!15854 = !DILocation(line: 229, column: 22, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15838, file: !15482, line: 229, column: 7)
!15856 = !DILocation(line: 229, column: 7, scope: !15838)
!15857 = !DILocation(line: 233, column: 23, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15855, file: !15482, line: 229, column: 31)
!15859 = !DILocation(line: 233, column: 55, scope: !15858)
!15860 = !DILocation(line: 234, column: 17, scope: !15858)
!15861 = !DILocation(line: 233, column: 10, scope: !15858)
!15862 = !DILocation(line: 235, column: 29, scope: !15858)
!15863 = !DILocation(line: 235, column: 20, scope: !15858)
!15864 = !DILocation(line: 236, column: 33, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15858, file: !15482, line: 236, column: 8)
!15866 = !DILocation(line: 236, column: 24, scope: !15865)
!15867 = !DILocation(line: 236, column: 8, scope: !15858)
!15868 = !DILocation(line: 237, column: 29, scope: !15869)
!15869 = distinct !DILexicalBlock(scope: !15865, file: !15482, line: 236, column: 45)
!15870 = !DILocation(line: 237, column: 21, scope: !15869)
!15871 = !DILocation(line: 238, column: 4, scope: !15869)
!15872 = !DILocation(line: 239, column: 19, scope: !15858)
!15873 = !DILocation(line: 0, scope: !15718, inlinedAt: !15874)
!15874 = distinct !DILocation(line: 242, column: 4, scope: !15858)
!15875 = !DILocation(line: 67, column: 15, scope: !15718, inlinedAt: !15874)
!15876 = !DILocation(line: 67, column: 33, scope: !15718, inlinedAt: !15874)
!15877 = !DILocation(line: 243, column: 4, scope: !15858)
!15878 = !DILocation(line: 244, column: 4, scope: !15858)
!15879 = !DILocation(line: 248, column: 4, scope: !15858)
!15880 = !DILocation(line: 251, column: 13, scope: !15834)
!15881 = !DILocation(line: 258, column: 3, scope: !15882)
!15882 = distinct !DILexicalBlock(scope: !15883, file: !15482, line: 254, column: 9)
!15883 = distinct !DILexicalBlock(scope: !15834, file: !15482, line: 251, column: 13)
!15884 = !DILocation(line: 258, column: 18, scope: !15882)
!15885 = !DILocation(line: 258, column: 28, scope: !15882)
!15886 = !DILocation(line: 260, column: 49, scope: !15882)
!15887 = !DILocation(line: 260, column: 12, scope: !15882)
!15888 = !DILocation(line: 262, column: 3, scope: !15882)
!15889 = !DILocation(line: 0, scope: !15834)
!15890 = !DILocation(line: 0, scope: !15757, inlinedAt: !15891)
!15891 = distinct !DILocation(line: 267, column: 2, scope: !15802)
!15892 = !DILocation(line: 194, column: 2, scope: !15765, inlinedAt: !15891)
!15893 = !DILocation(line: 194, column: 2, scope: !15766, inlinedAt: !15891)
!15894 = !DILocation(line: 194, column: 2, scope: !15769, inlinedAt: !15891)
!15895 = !DILocation(line: 0, scope: !15771, inlinedAt: !15896)
!15896 = distinct !DILocation(line: 215, column: 2, scope: !15757, inlinedAt: !15891)
!15897 = !DILocation(line: 95, column: 2, scope: !15771, inlinedAt: !15896)
!15898 = !DILocation(line: 269, column: 2, scope: !15802)
!15899 = !DILocation(line: 270, column: 1, scope: !15802)
!15900 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !15482, file: !15482, line: 284, type: !15901, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15903)
!15901 = !DISubroutineType(types: !15902)
!15902 = !{!103, !15485, !102}
!15903 = !{!15904, !15905, !15906, !15907}
!15904 = !DILocalVariable(name: "msgq", arg: 1, scope: !15900, file: !15482, line: 284, type: !15485)
!15905 = !DILocalVariable(name: "data", arg: 2, scope: !15900, file: !15482, line: 284, type: !102)
!15906 = !DILocalVariable(name: "key", scope: !15900, file: !15482, line: 286, type: !15656)
!15907 = !DILocalVariable(name: "result", scope: !15900, file: !15482, line: 287, type: !103)
!15908 = !DILocation(line: 0, scope: !15900)
!15909 = !DILocation(line: 289, column: 27, scope: !15900)
!15910 = !DILocation(line: 0, scope: !15679, inlinedAt: !15911)
!15911 = distinct !DILocation(line: 289, column: 8, scope: !15900)
!15912 = !DILocation(line: 55, column: 2, scope: !15688, inlinedAt: !15913)
!15913 = distinct !DILocation(line: 145, column: 10, scope: !15679, inlinedAt: !15911)
!15914 = !DILocation(line: 0, scope: !15688, inlinedAt: !15913)
!15915 = !DILocation(line: 148, column: 2, scope: !15696, inlinedAt: !15911)
!15916 = !DILocation(line: 148, column: 2, scope: !15697, inlinedAt: !15911)
!15917 = !DILocation(line: 148, column: 2, scope: !15700, inlinedAt: !15911)
!15918 = !DILocation(line: 160, column: 2, scope: !15679, inlinedAt: !15911)
!15919 = !DILocation(line: 291, column: 12, scope: !15920)
!15920 = distinct !DILexicalBlock(scope: !15900, file: !15482, line: 291, column: 6)
!15921 = !DILocation(line: 291, column: 22, scope: !15920)
!15922 = !DILocation(line: 291, column: 6, scope: !15900)
!15923 = !DILocation(line: 293, column: 28, scope: !15924)
!15924 = distinct !DILexicalBlock(scope: !15920, file: !15482, line: 291, column: 28)
!15925 = !DILocation(line: 293, column: 44, scope: !15924)
!15926 = !DILocation(line: 293, column: 9, scope: !15924)
!15927 = !DILocation(line: 295, column: 2, scope: !15924)
!15928 = !DILocation(line: 0, scope: !15920)
!15929 = !DILocation(line: 0, scope: !15757, inlinedAt: !15930)
!15930 = distinct !DILocation(line: 302, column: 2, scope: !15900)
!15931 = !DILocation(line: 194, column: 2, scope: !15765, inlinedAt: !15930)
!15932 = !DILocation(line: 194, column: 2, scope: !15766, inlinedAt: !15930)
!15933 = !DILocation(line: 194, column: 2, scope: !15769, inlinedAt: !15930)
!15934 = !DILocation(line: 0, scope: !15771, inlinedAt: !15935)
!15935 = distinct !DILocation(line: 215, column: 2, scope: !15757, inlinedAt: !15930)
!15936 = !DILocation(line: 95, column: 2, scope: !15771, inlinedAt: !15935)
!15937 = !DILocation(line: 304, column: 2, scope: !15900)
!15938 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !15482, file: !15482, line: 318, type: !15939, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3623, retainedNodes: !15941)
!15939 = !DISubroutineType(types: !15940)
!15940 = !{null, !15485}
!15941 = !{!15942, !15943, !15944}
!15942 = !DILocalVariable(name: "msgq", arg: 1, scope: !15938, file: !15482, line: 318, type: !15485)
!15943 = !DILocalVariable(name: "key", scope: !15938, file: !15482, line: 320, type: !15656)
!15944 = !DILocalVariable(name: "pending_thread", scope: !15938, file: !15482, line: 321, type: !3641)
!15945 = !DILocation(line: 0, scope: !15938)
!15946 = !DILocation(line: 323, column: 27, scope: !15938)
!15947 = !DILocation(line: 0, scope: !15679, inlinedAt: !15948)
!15948 = distinct !DILocation(line: 323, column: 8, scope: !15938)
!15949 = !DILocation(line: 55, column: 2, scope: !15688, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 145, column: 10, scope: !15679, inlinedAt: !15948)
!15951 = !DILocation(line: 0, scope: !15688, inlinedAt: !15950)
!15952 = !DILocation(line: 148, column: 2, scope: !15696, inlinedAt: !15948)
!15953 = !DILocation(line: 148, column: 2, scope: !15697, inlinedAt: !15948)
!15954 = !DILocation(line: 148, column: 2, scope: !15700, inlinedAt: !15948)
!15955 = !DILocation(line: 160, column: 2, scope: !15679, inlinedAt: !15948)
!15956 = !DILocation(line: 328, column: 27, scope: !15938)
!15957 = !DILocation(line: 328, column: 65, scope: !15938)
!15958 = !DILocation(line: 328, column: 2, scope: !15938)
!15959 = !DILocation(line: 0, scope: !15718, inlinedAt: !15960)
!15960 = distinct !DILocation(line: 329, column: 3, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15938, file: !15482, line: 328, column: 74)
!15962 = !DILocation(line: 67, column: 15, scope: !15718, inlinedAt: !15960)
!15963 = !DILocation(line: 67, column: 33, scope: !15718, inlinedAt: !15960)
!15964 = !DILocation(line: 330, column: 3, scope: !15961)
!15965 = distinct !{!15965, !15958, !15966}
!15966 = !DILocation(line: 331, column: 2, scope: !15938)
!15967 = !DILocation(line: 333, column: 8, scope: !15938)
!15968 = !DILocation(line: 333, column: 18, scope: !15938)
!15969 = !DILocation(line: 334, column: 25, scope: !15938)
!15970 = !DILocation(line: 334, column: 8, scope: !15938)
!15971 = !DILocation(line: 334, column: 17, scope: !15938)
!15972 = !DILocation(line: 336, column: 2, scope: !15938)
!15973 = !DILocation(line: 337, column: 1, scope: !15938)
!15974 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2794, file: !2794, line: 49, type: !15975, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !15984)
!15975 = !DISubroutineType(types: !15976)
!15976 = !{!103, !15977}
!15977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15978, size: 32)
!15978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !15979)
!15979 = !{!15980, !15981, !15982, !15983}
!15980 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15978, file: !127, line: 2722, baseType: !2723, size: 64)
!15981 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !15978, file: !127, line: 2724, baseType: !2705, size: 32, offset: 64)
!15982 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !15978, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!15983 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !15978, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!15984 = !{!15985}
!15985 = !DILocalVariable(name: "mutex", arg: 1, scope: !15974, file: !2794, line: 49, type: !15977)
!15986 = !DILocation(line: 0, scope: !15974)
!15987 = !DILocation(line: 51, column: 9, scope: !15974)
!15988 = !DILocation(line: 51, column: 15, scope: !15974)
!15989 = !DILocation(line: 52, column: 9, scope: !15974)
!15990 = !DILocation(line: 52, column: 20, scope: !15974)
!15991 = !DILocation(line: 54, column: 23, scope: !15974)
!15992 = !DILocation(line: 54, column: 2, scope: !15974)
!15993 = !DILocation(line: 60, column: 2, scope: !15974)
!15994 = distinct !DISubprogram(name: "z_waitq_init", scope: !15064, file: !15064, line: 47, type: !15995, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !15997)
!15995 = !DISubroutineType(types: !15996)
!15996 = !{null, !2722}
!15997 = !{!15998}
!15998 = !DILocalVariable(name: "w", arg: 1, scope: !15994, file: !15064, line: 47, type: !2722)
!15999 = !DILocation(line: 0, scope: !15994)
!16000 = !DILocation(line: 49, column: 21, scope: !15994)
!16001 = !DILocation(line: 49, column: 2, scope: !15994)
!16002 = !DILocation(line: 50, column: 1, scope: !15994)
!16003 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !16004, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16007)
!16004 = !DISubroutineType(types: !16005)
!16005 = !{null, !16006}
!16006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 32)
!16007 = !{!16008}
!16008 = !DILocalVariable(name: "list", arg: 1, scope: !16003, file: !136, line: 197, type: !16006)
!16009 = !DILocation(line: 0, scope: !16003)
!16010 = !DILocation(line: 199, column: 8, scope: !16003)
!16011 = !DILocation(line: 199, column: 13, scope: !16003)
!16012 = !DILocation(line: 200, column: 8, scope: !16003)
!16013 = !DILocation(line: 200, column: 13, scope: !16003)
!16014 = !DILocation(line: 201, column: 1, scope: !16003)
!16015 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2794, file: !2794, line: 95, type: !16016, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16022)
!16016 = !DISubroutineType(types: !16017)
!16017 = !{!103, !15977, !16018}
!16018 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16019)
!16019 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16020)
!16020 = !{!16021}
!16021 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16019, file: !105, line: 66, baseType: !104, size: 64)
!16022 = !{!16023, !16024, !16025, !16026, !16031, !16032, !16033}
!16023 = !DILocalVariable(name: "mutex", arg: 1, scope: !16015, file: !2794, line: 95, type: !15977)
!16024 = !DILocalVariable(name: "timeout", arg: 2, scope: !16015, file: !2794, line: 95, type: !16018)
!16025 = !DILocalVariable(name: "new_prio", scope: !16015, file: !2794, line: 97, type: !103)
!16026 = !DILocalVariable(name: "key", scope: !16015, file: !2794, line: 98, type: !16027)
!16027 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !16028)
!16028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !16029)
!16029 = !{!16030}
!16030 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16028, file: !152, line: 33, baseType: !103, size: 32)
!16031 = !DILocalVariable(name: "resched", scope: !16015, file: !2794, line: 99, type: !122)
!16032 = !DILocalVariable(name: "got_mutex", scope: !16015, file: !2794, line: 146, type: !103)
!16033 = !DILocalVariable(name: "waiter", scope: !16034, file: !2794, line: 169, type: !2705)
!16034 = distinct !DILexicalBlock(scope: !16035, file: !2794, line: 168, column: 36)
!16035 = distinct !DILexicalBlock(scope: !16015, file: !2794, line: 168, column: 6)
!16036 = !DILocation(line: 0, scope: !16015)
!16037 = !DILocation(line: 1031, column: 3, scope: !16038, inlinedAt: !16041)
!16038 = distinct !DISubprogram(name: "__get_IPSR", scope: !7865, file: !7865, line: 1027, type: !7952, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16039)
!16039 = !{!16040}
!16040 = !DILocalVariable(name: "result", scope: !16038, file: !7865, line: 1029, type: !111)
!16041 = distinct !DILocation(line: 48, column: 10, scope: !16042, inlinedAt: !16043)
!16042 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8915, file: !8915, line: 46, type: !8916, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !2501)
!16043 = distinct !DILocation(line: 101, column: 2, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !16045, file: !2794, line: 101, column: 2)
!16045 = distinct !DILexicalBlock(scope: !16015, file: !2794, line: 101, column: 2)
!16046 = !{i64 3548052}
!16047 = !DILocation(line: 0, scope: !16038, inlinedAt: !16041)
!16048 = !DILocation(line: 48, column: 9, scope: !16042, inlinedAt: !16043)
!16049 = !DILocation(line: 101, column: 2, scope: !16045)
!16050 = !DILocation(line: 101, column: 2, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16044, file: !2794, line: 101, column: 2)
!16052 = !DILocalVariable(name: "l", arg: 1, scope: !16053, file: !152, line: 136, type: !16056)
!16053 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !16054, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16057)
!16054 = !DISubroutineType(types: !16055)
!16055 = !{!16027, !16056}
!16056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 32)
!16057 = !{!16052, !16058}
!16058 = !DILocalVariable(name: "k", scope: !16053, file: !152, line: 139, type: !16027)
!16059 = !DILocation(line: 0, scope: !16053, inlinedAt: !16060)
!16060 = distinct !DILocation(line: 105, column: 8, scope: !16015)
!16061 = !DILocation(line: 55, column: 2, scope: !16062, inlinedAt: !16066)
!16062 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7544, file: !7544, line: 42, type: !7545, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16063)
!16063 = !{!16064, !16065}
!16064 = !DILocalVariable(name: "key", scope: !16062, file: !7544, line: 44, type: !32)
!16065 = !DILocalVariable(name: "tmp", scope: !16062, file: !7544, line: 53, type: !32)
!16066 = distinct !DILocation(line: 145, column: 10, scope: !16053, inlinedAt: !16060)
!16067 = !{i64 2230439}
!16068 = !DILocation(line: 0, scope: !16062, inlinedAt: !16066)
!16069 = !DILocation(line: 148, column: 2, scope: !16070, inlinedAt: !16060)
!16070 = distinct !DILexicalBlock(scope: !16071, file: !152, line: 148, column: 2)
!16071 = distinct !DILexicalBlock(scope: !16053, file: !152, line: 148, column: 2)
!16072 = !DILocation(line: 148, column: 2, scope: !16071, inlinedAt: !16060)
!16073 = !DILocation(line: 148, column: 2, scope: !16074, inlinedAt: !16060)
!16074 = distinct !DILexicalBlock(scope: !16070, file: !152, line: 148, column: 2)
!16075 = !DILocation(line: 160, column: 2, scope: !16053, inlinedAt: !16060)
!16076 = !DILocation(line: 107, column: 6, scope: !16077)
!16077 = distinct !DILexicalBlock(scope: !16015, file: !2794, line: 107, column: 6)
!16078 = !DILocation(line: 107, column: 6, scope: !16015)
!16079 = !{!"branch_weights", i32 2000, i32 1}
!16080 = !DILocation(line: 110, column: 6, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16077, file: !2794, line: 107, column: 71)
!16082 = !DILocation(line: 110, column: 21, scope: !16081)
!16083 = !DILocation(line: 109, column: 28, scope: !16081)
!16084 = !DILocation(line: 111, column: 13, scope: !16081)
!16085 = !DILocation(line: 114, column: 18, scope: !16081)
!16086 = !DILocation(line: 109, column: 10, scope: !16081)
!16087 = !DILocation(line: 109, column: 26, scope: !16081)
!16088 = !DILocation(line: 113, column: 20, scope: !16081)
!16089 = !DILocation(line: 114, column: 10, scope: !16081)
!16090 = !DILocation(line: 114, column: 16, scope: !16081)
!16091 = !DILocalVariable(name: "key", arg: 2, scope: !16092, file: !152, line: 190, type: !16027)
!16092 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !16093, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16095)
!16093 = !DISubroutineType(types: !16094)
!16094 = !{null, !16056, !16027}
!16095 = !{!16096, !16091}
!16096 = !DILocalVariable(name: "l", arg: 1, scope: !16092, file: !152, line: 189, type: !16056)
!16097 = !DILocation(line: 0, scope: !16092, inlinedAt: !16098)
!16098 = distinct !DILocation(line: 120, column: 3, scope: !16081)
!16099 = !DILocation(line: 194, column: 2, scope: !16100, inlinedAt: !16098)
!16100 = distinct !DILexicalBlock(scope: !16101, file: !152, line: 194, column: 2)
!16101 = distinct !DILexicalBlock(scope: !16092, file: !152, line: 194, column: 2)
!16102 = !DILocation(line: 194, column: 2, scope: !16101, inlinedAt: !16098)
!16103 = !DILocation(line: 194, column: 2, scope: !16104, inlinedAt: !16098)
!16104 = distinct !DILexicalBlock(scope: !16100, file: !152, line: 194, column: 2)
!16105 = !DILocalVariable(name: "key", arg: 1, scope: !16106, file: !7544, line: 84, type: !32)
!16106 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7544, file: !7544, line: 84, type: !7555, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16107)
!16107 = !{!16105}
!16108 = !DILocation(line: 0, scope: !16106, inlinedAt: !16109)
!16109 = distinct !DILocation(line: 215, column: 2, scope: !16092, inlinedAt: !16098)
!16110 = !DILocation(line: 95, column: 2, scope: !16106, inlinedAt: !16109)
!16111 = !{i64 2231256}
!16112 = !DILocation(line: 124, column: 3, scope: !16081)
!16113 = !DILocation(line: 127, column: 6, scope: !16114)
!16114 = distinct !DILexicalBlock(scope: !16015, file: !2794, line: 127, column: 6)
!16115 = !DILocation(line: 127, column: 6, scope: !16015)
!16116 = !{!"branch_weights", i32 1, i32 2000}
!16117 = !DILocation(line: 0, scope: !16092, inlinedAt: !16118)
!16118 = distinct !DILocation(line: 128, column: 3, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16114, file: !2794, line: 127, column: 50)
!16120 = !DILocation(line: 194, column: 2, scope: !16100, inlinedAt: !16118)
!16121 = !DILocation(line: 194, column: 2, scope: !16101, inlinedAt: !16118)
!16122 = !DILocation(line: 194, column: 2, scope: !16104, inlinedAt: !16118)
!16123 = !DILocation(line: 0, scope: !16106, inlinedAt: !16124)
!16124 = distinct !DILocation(line: 215, column: 2, scope: !16092, inlinedAt: !16118)
!16125 = !DILocation(line: 95, column: 2, scope: !16106, inlinedAt: !16124)
!16126 = !DILocation(line: 132, column: 3, scope: !16119)
!16127 = !DILocation(line: 137, column: 53, scope: !16015)
!16128 = !DILocation(line: 137, column: 38, scope: !16015)
!16129 = !DILocation(line: 138, column: 29, scope: !16015)
!16130 = !DILocation(line: 138, column: 10, scope: !16015)
!16131 = !DILocation(line: 137, column: 13, scope: !16015)
!16132 = !DILocation(line: 142, column: 6, scope: !16133)
!16133 = distinct !DILexicalBlock(scope: !16015, file: !2794, line: 142, column: 6)
!16134 = !DILocation(line: 142, column: 6, scope: !16015)
!16135 = !DILocation(line: 143, column: 13, scope: !16136)
!16136 = distinct !DILexicalBlock(scope: !16133, file: !2794, line: 142, column: 59)
!16137 = !DILocation(line: 144, column: 2, scope: !16136)
!16138 = !DILocation(line: 146, column: 50, scope: !16015)
!16139 = !DILocation(line: 146, column: 18, scope: !16015)
!16140 = !DILocation(line: 153, column: 16, scope: !16141)
!16141 = distinct !DILexicalBlock(scope: !16015, file: !2794, line: 153, column: 6)
!16142 = !DILocation(line: 153, column: 6, scope: !16015)
!16143 = !DILocation(line: 0, scope: !16053, inlinedAt: !16144)
!16144 = distinct !DILocation(line: 162, column: 8, scope: !16015)
!16145 = !DILocation(line: 55, column: 2, scope: !16062, inlinedAt: !16146)
!16146 = distinct !DILocation(line: 145, column: 10, scope: !16053, inlinedAt: !16144)
!16147 = !DILocation(line: 0, scope: !16062, inlinedAt: !16146)
!16148 = !DILocation(line: 148, column: 2, scope: !16070, inlinedAt: !16144)
!16149 = !DILocation(line: 148, column: 2, scope: !16071, inlinedAt: !16144)
!16150 = !DILocation(line: 148, column: 2, scope: !16074, inlinedAt: !16144)
!16151 = !DILocation(line: 160, column: 2, scope: !16053, inlinedAt: !16144)
!16152 = !DILocation(line: 168, column: 6, scope: !16035)
!16153 = !DILocation(line: 168, column: 6, scope: !16015)
!16154 = !DILocation(line: 169, column: 29, scope: !16034)
!16155 = !DILocation(line: 0, scope: !16034)
!16156 = !DILocation(line: 171, column: 22, scope: !16034)
!16157 = !DILocation(line: 171, column: 14, scope: !16034)
!16158 = !DILocation(line: 172, column: 42, scope: !16034)
!16159 = !DILocation(line: 172, column: 29, scope: !16034)
!16160 = !DILocation(line: 172, column: 55, scope: !16034)
!16161 = !DILocation(line: 172, column: 4, scope: !16034)
!16162 = !DILocation(line: 173, column: 11, scope: !16034)
!16163 = !DILocation(line: 177, column: 13, scope: !16034)
!16164 = !DILocation(line: 177, column: 48, scope: !16034)
!16165 = !DILocation(line: 180, column: 6, scope: !16015)
!16166 = !DILocation(line: 181, column: 3, scope: !16167)
!16167 = distinct !DILexicalBlock(scope: !16168, file: !2794, line: 180, column: 15)
!16168 = distinct !DILexicalBlock(scope: !16015, file: !2794, line: 180, column: 6)
!16169 = !DILocation(line: 182, column: 2, scope: !16167)
!16170 = !DILocation(line: 0, scope: !16092, inlinedAt: !16171)
!16171 = distinct !DILocation(line: 183, column: 3, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16168, file: !2794, line: 182, column: 9)
!16173 = !DILocation(line: 194, column: 2, scope: !16100, inlinedAt: !16171)
!16174 = !DILocation(line: 194, column: 2, scope: !16101, inlinedAt: !16171)
!16175 = !DILocation(line: 194, column: 2, scope: !16104, inlinedAt: !16171)
!16176 = !DILocation(line: 0, scope: !16106, inlinedAt: !16177)
!16177 = distinct !DILocation(line: 215, column: 2, scope: !16092, inlinedAt: !16171)
!16178 = !DILocation(line: 95, column: 2, scope: !16106, inlinedAt: !16177)
!16179 = !DILocation(line: 189, column: 1, scope: !16015)
!16180 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2794, file: !2794, line: 72, type: !16181, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16183)
!16181 = !DISubroutineType(types: !16182)
!16182 = !{!320, !320, !320}
!16183 = !{!16184, !16185, !16186}
!16184 = !DILocalVariable(name: "target", arg: 1, scope: !16180, file: !2794, line: 72, type: !320)
!16185 = !DILocalVariable(name: "limit", arg: 2, scope: !16180, file: !2794, line: 72, type: !320)
!16186 = !DILocalVariable(name: "new_prio", scope: !16180, file: !2794, line: 74, type: !103)
!16187 = !DILocation(line: 0, scope: !16180)
!16188 = !DILocation(line: 74, column: 17, scope: !16180)
!16189 = !DILocation(line: 76, column: 13, scope: !16180)
!16190 = !DILocation(line: 78, column: 2, scope: !16180)
!16191 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14725, file: !14725, line: 211, type: !16192, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16194)
!16192 = !DISubroutineType(types: !16193)
!16193 = !{!122, !103, !103}
!16194 = !{!16195, !16196}
!16195 = !DILocalVariable(name: "prio", arg: 1, scope: !16191, file: !14725, line: 211, type: !103)
!16196 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16191, file: !14725, line: 211, type: !103)
!16197 = !DILocation(line: 0, scope: !16191)
!16198 = !DILocation(line: 213, column: 9, scope: !16191)
!16199 = !DILocation(line: 213, column: 2, scope: !16191)
!16200 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2794, file: !2794, line: 81, type: !16201, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16203)
!16201 = !DISubroutineType(types: !16202)
!16202 = !{!122, !15977, !320}
!16203 = !{!16204, !16205}
!16204 = !DILocalVariable(name: "mutex", arg: 1, scope: !16200, file: !2794, line: 81, type: !15977)
!16205 = !DILocalVariable(name: "new_prio", arg: 2, scope: !16200, file: !2794, line: 81, type: !320)
!16206 = !DILocation(line: 0, scope: !16200)
!16207 = !DILocation(line: 83, column: 13, scope: !16208)
!16208 = distinct !DILexicalBlock(scope: !16200, file: !2794, line: 83, column: 6)
!16209 = !DILocation(line: 83, column: 25, scope: !16208)
!16210 = !DILocation(line: 83, column: 6, scope: !16208)
!16211 = !DILocation(line: 83, column: 30, scope: !16208)
!16212 = !DILocation(line: 83, column: 6, scope: !16200)
!16213 = !DILocation(line: 90, column: 10, scope: !16214)
!16214 = distinct !DILexicalBlock(scope: !16208, file: !2794, line: 83, column: 43)
!16215 = !DILocation(line: 90, column: 3, scope: !16214)
!16216 = !DILocation(line: 93, column: 1, scope: !16200)
!16217 = distinct !DISubprogram(name: "z_waitq_head", scope: !15064, file: !15064, line: 52, type: !16218, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16220)
!16218 = !DISubroutineType(types: !16219)
!16219 = !{!2705, !2722}
!16220 = !{!16221}
!16221 = !DILocalVariable(name: "w", arg: 1, scope: !16217, file: !15064, line: 52, type: !2722)
!16222 = !DILocation(line: 0, scope: !16217)
!16223 = !DILocation(line: 54, column: 52, scope: !16217)
!16224 = !DILocation(line: 54, column: 28, scope: !16217)
!16225 = !DILocation(line: 54, column: 9, scope: !16217)
!16226 = !DILocation(line: 54, column: 2, scope: !16217)
!16227 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !16228, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16230)
!16228 = !DISubroutineType(types: !16229)
!16229 = !{!2690, !16006}
!16230 = !{!16231}
!16231 = !DILocalVariable(name: "list", arg: 1, scope: !16227, file: !136, line: 294, type: !16006)
!16232 = !DILocation(line: 0, scope: !16227)
!16233 = !DILocation(line: 296, column: 9, scope: !16227)
!16234 = !DILocation(line: 296, column: 49, scope: !16227)
!16235 = !DILocation(line: 296, column: 2, scope: !16227)
!16236 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !16237, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16239)
!16237 = !DISubroutineType(types: !16238)
!16238 = !{!122, !16006}
!16239 = !{!16240}
!16240 = !DILocalVariable(name: "list", arg: 1, scope: !16236, file: !136, line: 266, type: !16006)
!16241 = !DILocation(line: 0, scope: !16236)
!16242 = !DILocation(line: 268, column: 15, scope: !16236)
!16243 = !DILocation(line: 268, column: 20, scope: !16236)
!16244 = !DILocation(line: 268, column: 2, scope: !16236)
!16245 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14725, file: !14725, line: 206, type: !16192, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16246)
!16246 = !{!16247, !16248}
!16247 = !DILocalVariable(name: "prio1", arg: 1, scope: !16245, file: !14725, line: 206, type: !103)
!16248 = !DILocalVariable(name: "prio2", arg: 2, scope: !16245, file: !14725, line: 206, type: !103)
!16249 = !DILocation(line: 0, scope: !16245)
!16250 = !DILocation(line: 208, column: 15, scope: !16245)
!16251 = !DILocation(line: 208, column: 2, scope: !16245)
!16252 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !14725, file: !14725, line: 186, type: !764, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16253)
!16253 = !{!16254}
!16254 = !DILocalVariable(name: "prio", arg: 1, scope: !16252, file: !14725, line: 186, type: !103)
!16255 = !DILocation(line: 0, scope: !16252)
!16256 = !DILocation(line: 188, column: 9, scope: !16252)
!16257 = !DILocation(line: 188, column: 2, scope: !16252)
!16258 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !14725, file: !14725, line: 181, type: !16259, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16261)
!16259 = !DISubroutineType(types: !16260)
!16260 = !{!122, !103}
!16261 = !{!16262}
!16262 = !DILocalVariable(name: "prio", arg: 1, scope: !16258, file: !14725, line: 181, type: !103)
!16263 = !DILocation(line: 0, scope: !16258)
!16264 = !DILocation(line: 183, column: 14, scope: !16258)
!16265 = !DILocation(line: 183, column: 2, scope: !16258)
!16266 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2794, file: !2794, line: 201, type: !15975, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16267)
!16267 = !{!16268, !16269, !16270, !16271}
!16268 = !DILocalVariable(name: "mutex", arg: 1, scope: !16266, file: !2794, line: 201, type: !15977)
!16269 = !DILocalVariable(name: "new_owner", scope: !16266, file: !2794, line: 203, type: !2705)
!16270 = !DILocalVariable(name: "key", scope: !16266, file: !2794, line: 242, type: !16027)
!16271 = !DILabel(scope: !16266, name: "k_mutex_unlock_return", file: !2794, line: 270)
!16272 = !DILocation(line: 0, scope: !16266)
!16273 = !DILocation(line: 1031, column: 3, scope: !16038, inlinedAt: !16274)
!16274 = distinct !DILocation(line: 48, column: 10, scope: !16042, inlinedAt: !16275)
!16275 = distinct !DILocation(line: 205, column: 2, scope: !16276)
!16276 = distinct !DILexicalBlock(scope: !16277, file: !2794, line: 205, column: 2)
!16277 = distinct !DILexicalBlock(scope: !16266, file: !2794, line: 205, column: 2)
!16278 = !DILocation(line: 0, scope: !16038, inlinedAt: !16274)
!16279 = !DILocation(line: 48, column: 9, scope: !16042, inlinedAt: !16275)
!16280 = !DILocation(line: 205, column: 2, scope: !16277)
!16281 = !DILocation(line: 205, column: 2, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16276, file: !2794, line: 205, column: 2)
!16283 = !DILocation(line: 209, column: 2, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16266, file: !2794, line: 209, column: 2)
!16285 = !DILocation(line: 209, column: 2, scope: !16266)
!16286 = !DILocation(line: 217, column: 2, scope: !16287)
!16287 = distinct !DILexicalBlock(scope: !16266, file: !2794, line: 217, column: 2)
!16288 = !DILocation(line: 217, column: 2, scope: !16266)
!16289 = !DILocation(line: 229, column: 2, scope: !16290)
!16290 = distinct !DILexicalBlock(scope: !16291, file: !2794, line: 229, column: 2)
!16291 = distinct !DILexicalBlock(scope: !16266, file: !2794, line: 229, column: 2)
!16292 = !DILocation(line: 229, column: 2, scope: !16291)
!16293 = !DILocation(line: 229, column: 2, scope: !16294)
!16294 = distinct !DILexicalBlock(scope: !16290, file: !2794, line: 229, column: 2)
!16295 = !DILocation(line: 238, column: 20, scope: !16296)
!16296 = distinct !DILexicalBlock(scope: !16297, file: !2794, line: 237, column: 30)
!16297 = distinct !DILexicalBlock(scope: !16266, file: !2794, line: 237, column: 6)
!16298 = !DILocation(line: 239, column: 3, scope: !16296)
!16299 = !DILocation(line: 0, scope: !16053, inlinedAt: !16300)
!16300 = distinct !DILocation(line: 242, column: 25, scope: !16266)
!16301 = !DILocation(line: 55, column: 2, scope: !16062, inlinedAt: !16302)
!16302 = distinct !DILocation(line: 145, column: 10, scope: !16053, inlinedAt: !16300)
!16303 = !DILocation(line: 0, scope: !16062, inlinedAt: !16302)
!16304 = !DILocation(line: 148, column: 2, scope: !16070, inlinedAt: !16300)
!16305 = !DILocation(line: 148, column: 2, scope: !16071, inlinedAt: !16300)
!16306 = !DILocation(line: 148, column: 2, scope: !16074, inlinedAt: !16300)
!16307 = !DILocation(line: 160, column: 2, scope: !16053, inlinedAt: !16300)
!16308 = !DILocation(line: 244, column: 34, scope: !16266)
!16309 = !DILocation(line: 244, column: 2, scope: !16266)
!16310 = !DILocation(line: 247, column: 44, scope: !16266)
!16311 = !DILocation(line: 247, column: 14, scope: !16266)
!16312 = !DILocation(line: 249, column: 15, scope: !16266)
!16313 = !DILocation(line: 254, column: 16, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16266, file: !2794, line: 254, column: 6)
!16315 = !DILocation(line: 254, column: 6, scope: !16266)
!16316 = !DILocation(line: 260, column: 44, scope: !16317)
!16317 = distinct !DILexicalBlock(scope: !16314, file: !2794, line: 254, column: 25)
!16318 = !DILocation(line: 260, column: 28, scope: !16317)
!16319 = !DILocation(line: 260, column: 26, scope: !16317)
!16320 = !DILocalVariable(name: "thread", arg: 1, scope: !16321, file: !14745, line: 65, type: !2705)
!16321 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14745, file: !14745, line: 65, type: !16322, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !16324)
!16322 = !DISubroutineType(types: !16323)
!16323 = !{null, !2705, !32}
!16324 = !{!16320, !16325}
!16325 = !DILocalVariable(name: "value", arg: 2, scope: !16321, file: !14745, line: 65, type: !32)
!16326 = !DILocation(line: 0, scope: !16321, inlinedAt: !16327)
!16327 = distinct !DILocation(line: 261, column: 3, scope: !16317)
!16328 = !DILocation(line: 67, column: 15, scope: !16321, inlinedAt: !16327)
!16329 = !DILocation(line: 67, column: 33, scope: !16321, inlinedAt: !16327)
!16330 = !DILocation(line: 262, column: 3, scope: !16317)
!16331 = !DILocation(line: 263, column: 3, scope: !16317)
!16332 = !DILocation(line: 264, column: 2, scope: !16317)
!16333 = !DILocation(line: 265, column: 21, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16314, file: !2794, line: 264, column: 9)
!16335 = !DILocation(line: 0, scope: !16092, inlinedAt: !16336)
!16336 = distinct !DILocation(line: 266, column: 3, scope: !16334)
!16337 = !DILocation(line: 194, column: 2, scope: !16100, inlinedAt: !16336)
!16338 = !DILocation(line: 194, column: 2, scope: !16101, inlinedAt: !16336)
!16339 = !DILocation(line: 194, column: 2, scope: !16104, inlinedAt: !16336)
!16340 = !DILocation(line: 0, scope: !16106, inlinedAt: !16341)
!16341 = distinct !DILocation(line: 215, column: 2, scope: !16092, inlinedAt: !16336)
!16342 = !DILocation(line: 95, column: 2, scope: !16106, inlinedAt: !16341)
!16343 = !DILocation(line: 274, column: 1, scope: !16266)
!16344 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2907, file: !2907, line: 93, type: !16345, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16347)
!16345 = !DISubroutineType(types: !16346)
!16346 = !{!320, !2800, !2800}
!16347 = !{!16348, !16349, !16350, !16351}
!16348 = !DILocalVariable(name: "thread_1", arg: 1, scope: !16344, file: !2907, line: 93, type: !2800)
!16349 = !DILocalVariable(name: "thread_2", arg: 2, scope: !16344, file: !2907, line: 94, type: !2800)
!16350 = !DILocalVariable(name: "b1", scope: !16344, file: !2907, line: 97, type: !320)
!16351 = !DILocalVariable(name: "b2", scope: !16344, file: !2907, line: 98, type: !320)
!16352 = !DILocation(line: 0, scope: !16344)
!16353 = !DILocation(line: 97, column: 30, scope: !16344)
!16354 = !DILocation(line: 98, column: 30, scope: !16344)
!16355 = !DILocation(line: 100, column: 9, scope: !16356)
!16356 = distinct !DILexicalBlock(scope: !16344, file: !2907, line: 100, column: 6)
!16357 = !DILocation(line: 100, column: 6, scope: !16344)
!16358 = !DILocation(line: 125, column: 1, scope: !16344)
!16359 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2907, file: !2907, line: 428, type: !16360, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16362)
!16360 = !DISubroutineType(types: !16361)
!16361 = !{null, !2800}
!16362 = !{!16363}
!16363 = !DILocalVariable(name: "curr", arg: 1, scope: !16359, file: !2907, line: 428, type: !2800)
!16364 = !DILocation(line: 0, scope: !16359)
!16365 = !DILocation(line: 434, column: 6, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16359, file: !2907, line: 434, column: 6)
!16367 = !DILocation(line: 434, column: 23, scope: !16366)
!16368 = !DILocation(line: 434, column: 6, scope: !16359)
!16369 = !DILocation(line: 435, column: 50, scope: !16370)
!16370 = distinct !DILexicalBlock(scope: !16366, file: !2907, line: 434, column: 29)
!16371 = !DILocation(line: 435, column: 48, scope: !16370)
!16372 = !DILocation(line: 435, column: 29, scope: !16370)
!16373 = !DILocation(line: 436, column: 24, scope: !16370)
!16374 = !DILocation(line: 436, column: 3, scope: !16370)
!16375 = !DILocation(line: 437, column: 2, scope: !16370)
!16376 = !DILocation(line: 438, column: 1, scope: !16359)
!16377 = distinct !DISubprogram(name: "slice_time", scope: !2907, file: !2907, line: 407, type: !16378, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16380)
!16378 = !DISubroutineType(types: !16379)
!16379 = !{!103, !2800}
!16380 = !{!16381, !16382}
!16381 = !DILocalVariable(name: "curr", arg: 1, scope: !16377, file: !2907, line: 407, type: !2800)
!16382 = !DILocalVariable(name: "ret", scope: !16377, file: !2907, line: 409, type: !103)
!16383 = !DILocation(line: 0, scope: !16377)
!16384 = !DILocation(line: 409, column: 12, scope: !16377)
!16385 = !DILocation(line: 416, column: 2, scope: !16377)
!16386 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2907, file: !2907, line: 440, type: !16387, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16389)
!16387 = !DISubroutineType(types: !16388)
!16388 = !{null, !320, !103}
!16389 = !{!16390, !16391, !16392, !16398}
!16390 = !DILocalVariable(name: "slice", arg: 1, scope: !16386, file: !2907, line: 440, type: !320)
!16391 = !DILocalVariable(name: "prio", arg: 2, scope: !16386, file: !2907, line: 440, type: !103)
!16392 = !DILocalVariable(name: "__i", scope: !16393, file: !2907, line: 442, type: !16394)
!16393 = distinct !DILexicalBlock(scope: !16386, file: !2907, line: 442, column: 2)
!16394 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !16395)
!16395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !16396)
!16396 = !{!16397}
!16397 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16395, file: !152, line: 33, baseType: !103, size: 32)
!16398 = !DILocalVariable(name: "__key", scope: !16393, file: !2907, line: 442, type: !16394)
!16399 = !DILocation(line: 0, scope: !16386)
!16400 = !DILocation(line: 0, scope: !16393)
!16401 = !DILocalVariable(name: "l", arg: 1, scope: !16402, file: !152, line: 136, type: !16405)
!16402 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !16403, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16406)
!16403 = !DISubroutineType(types: !16404)
!16404 = !{!16394, !16405}
!16405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 32)
!16406 = !{!16401, !16407}
!16407 = !DILocalVariable(name: "k", scope: !16402, file: !152, line: 139, type: !16394)
!16408 = !DILocation(line: 0, scope: !16402, inlinedAt: !16409)
!16409 = distinct !DILocation(line: 442, column: 2, scope: !16393)
!16410 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !16415)
!16411 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7544, file: !7544, line: 42, type: !7545, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16412)
!16412 = !{!16413, !16414}
!16413 = !DILocalVariable(name: "key", scope: !16411, file: !7544, line: 44, type: !32)
!16414 = !DILocalVariable(name: "tmp", scope: !16411, file: !7544, line: 53, type: !32)
!16415 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !16409)
!16416 = !{i64 2270002}
!16417 = !DILocation(line: 0, scope: !16411, inlinedAt: !16415)
!16418 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !16409)
!16419 = distinct !DILexicalBlock(scope: !16420, file: !152, line: 148, column: 2)
!16420 = distinct !DILexicalBlock(scope: !16402, file: !152, line: 148, column: 2)
!16421 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !16409)
!16422 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !16409)
!16423 = distinct !DILexicalBlock(scope: !16419, file: !152, line: 148, column: 2)
!16424 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !16409)
!16425 = !DILocation(line: 443, column: 29, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16427, file: !2907, line: 442, column: 26)
!16427 = distinct !DILexicalBlock(scope: !16393, file: !2907, line: 442, column: 2)
!16428 = !DILocation(line: 444, column: 17, scope: !16426)
!16429 = !DILocation(line: 445, column: 51, scope: !16430)
!16430 = distinct !DILexicalBlock(scope: !16426, file: !2907, line: 445, column: 7)
!16431 = !DILocation(line: 445, column: 7, scope: !16426)
!16432 = !DILocation(line: 0, scope: !16426)
!16433 = !DILocation(line: 451, column: 18, scope: !16426)
!16434 = !DILocation(line: 452, column: 3, scope: !16426)
!16435 = !DILocalVariable(name: "key", arg: 2, scope: !16436, file: !152, line: 190, type: !16394)
!16436 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !16437, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16439)
!16437 = !DISubroutineType(types: !16438)
!16438 = !{null, !16405, !16394}
!16439 = !{!16440, !16435}
!16440 = !DILocalVariable(name: "l", arg: 1, scope: !16436, file: !152, line: 189, type: !16405)
!16441 = !DILocation(line: 0, scope: !16436, inlinedAt: !16442)
!16442 = distinct !DILocation(line: 442, column: 2, scope: !16427)
!16443 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !16442)
!16444 = distinct !DILexicalBlock(scope: !16445, file: !152, line: 194, column: 2)
!16445 = distinct !DILexicalBlock(scope: !16436, file: !152, line: 194, column: 2)
!16446 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !16442)
!16447 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !16442)
!16448 = distinct !DILexicalBlock(scope: !16444, file: !152, line: 194, column: 2)
!16449 = !DILocalVariable(name: "key", arg: 1, scope: !16450, file: !7544, line: 84, type: !32)
!16450 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7544, file: !7544, line: 84, type: !7555, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16451)
!16451 = !{!16449}
!16452 = !DILocation(line: 0, scope: !16450, inlinedAt: !16453)
!16453 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !16442)
!16454 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !16453)
!16455 = !{i64 2270819}
!16456 = !DILocation(line: 454, column: 1, scope: !16386)
!16457 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3915, file: !3915, line: 389, type: !9149, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16458)
!16458 = !{!16459}
!16459 = !DILocalVariable(name: "t", arg: 1, scope: !16457, file: !3915, line: 389, type: !111)
!16460 = !DILocation(line: 0, scope: !16457)
!16461 = !DILocalVariable(name: "t", arg: 1, scope: !16462, file: !3915, line: 102, type: !112)
!16462 = distinct !DISubprogram(name: "z_tmcvt", scope: !3915, file: !3915, line: 102, type: !3923, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16463)
!16463 = !{!16461, !16464, !16465, !16466, !16467, !16468, !16469, !16470, !16471, !16472, !16473}
!16464 = !DILocalVariable(name: "from_hz", arg: 2, scope: !16462, file: !3915, line: 102, type: !111)
!16465 = !DILocalVariable(name: "to_hz", arg: 3, scope: !16462, file: !3915, line: 103, type: !111)
!16466 = !DILocalVariable(name: "const_hz", arg: 4, scope: !16462, file: !3915, line: 103, type: !122)
!16467 = !DILocalVariable(name: "result32", arg: 5, scope: !16462, file: !3915, line: 104, type: !122)
!16468 = !DILocalVariable(name: "round_up", arg: 6, scope: !16462, file: !3915, line: 104, type: !122)
!16469 = !DILocalVariable(name: "round_off", arg: 7, scope: !16462, file: !3915, line: 105, type: !122)
!16470 = !DILocalVariable(name: "mul_ratio", scope: !16462, file: !3915, line: 107, type: !122)
!16471 = !DILocalVariable(name: "div_ratio", scope: !16462, file: !3915, line: 109, type: !122)
!16472 = !DILocalVariable(name: "off", scope: !16462, file: !3915, line: 116, type: !112)
!16473 = !DILocalVariable(name: "rdivisor", scope: !16474, file: !3915, line: 119, type: !111)
!16474 = distinct !DILexicalBlock(scope: !16475, file: !3915, line: 118, column: 18)
!16475 = distinct !DILexicalBlock(scope: !16462, file: !3915, line: 118, column: 6)
!16476 = !DILocation(line: 0, scope: !16462, inlinedAt: !16477)
!16477 = distinct !DILocation(line: 392, column: 9, scope: !16457)
!16478 = !DILocation(line: 143, column: 25, scope: !16479, inlinedAt: !16477)
!16479 = distinct !DILexicalBlock(scope: !16480, file: !3915, line: 142, column: 17)
!16480 = distinct !DILexicalBlock(scope: !16481, file: !3915, line: 142, column: 7)
!16481 = distinct !DILexicalBlock(scope: !16482, file: !3915, line: 141, column: 24)
!16482 = distinct !DILexicalBlock(scope: !16483, file: !3915, line: 141, column: 13)
!16483 = distinct !DILexicalBlock(scope: !16462, file: !3915, line: 134, column: 6)
!16484 = !DILocation(line: 392, column: 2, scope: !16457)
!16485 = distinct !DISubprogram(name: "z_time_slice", scope: !2907, file: !2907, line: 502, type: !10271, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16486)
!16486 = !{!16487, !16488}
!16487 = !DILocalVariable(name: "ticks", arg: 1, scope: !16485, file: !2907, line: 502, type: !103)
!16488 = !DILocalVariable(name: "key", scope: !16485, file: !2907, line: 511, type: !16394)
!16489 = !DILocation(line: 0, scope: !16485)
!16490 = !DILocation(line: 0, scope: !16402, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 511, column: 25, scope: !16485)
!16492 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !16493)
!16493 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !16491)
!16494 = !DILocation(line: 0, scope: !16411, inlinedAt: !16493)
!16495 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !16491)
!16496 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !16491)
!16497 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !16491)
!16498 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !16491)
!16499 = !DILocation(line: 514, column: 6, scope: !16500)
!16500 = distinct !DILexicalBlock(scope: !16485, file: !2907, line: 514, column: 6)
!16501 = !DILocation(line: 514, column: 25, scope: !16500)
!16502 = !DILocation(line: 514, column: 22, scope: !16500)
!16503 = !DILocation(line: 514, column: 6, scope: !16485)
!16504 = !DILocation(line: 515, column: 3, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16500, file: !2907, line: 514, column: 35)
!16506 = !DILocation(line: 0, scope: !16436, inlinedAt: !16507)
!16507 = distinct !DILocation(line: 516, column: 3, scope: !16505)
!16508 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !16507)
!16509 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !16507)
!16510 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !16507)
!16511 = !DILocation(line: 0, scope: !16450, inlinedAt: !16512)
!16512 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !16507)
!16513 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !16512)
!16514 = !DILocation(line: 517, column: 3, scope: !16505)
!16515 = !DILocation(line: 519, column: 18, scope: !16485)
!16516 = !DILocation(line: 522, column: 6, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16485, file: !2907, line: 522, column: 6)
!16518 = !DILocation(line: 522, column: 27, scope: !16517)
!16519 = !DILocation(line: 522, column: 30, scope: !16517)
!16520 = !DILocation(line: 522, column: 6, scope: !16485)
!16521 = !DILocation(line: 523, column: 30, scope: !16522)
!16522 = distinct !DILexicalBlock(scope: !16523, file: !2907, line: 523, column: 7)
!16523 = distinct !DILexicalBlock(scope: !16517, file: !2907, line: 522, column: 51)
!16524 = !DILocation(line: 523, column: 13, scope: !16522)
!16525 = !DILocation(line: 523, column: 7, scope: !16523)
!16526 = !DILocation(line: 530, column: 10, scope: !16527)
!16527 = distinct !DILexicalBlock(scope: !16522, file: !2907, line: 523, column: 43)
!16528 = !DILocation(line: 531, column: 3, scope: !16527)
!16529 = !DILocation(line: 532, column: 30, scope: !16530)
!16530 = distinct !DILexicalBlock(scope: !16522, file: !2907, line: 531, column: 10)
!16531 = !DILocation(line: 535, column: 29, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16517, file: !2907, line: 534, column: 9)
!16533 = !DILocation(line: 0, scope: !16436, inlinedAt: !16534)
!16534 = distinct !DILocation(line: 537, column: 2, scope: !16485)
!16535 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !16534)
!16536 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !16534)
!16537 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !16534)
!16538 = !DILocation(line: 0, scope: !16450, inlinedAt: !16539)
!16539 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !16534)
!16540 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !16539)
!16541 = !DILocation(line: 538, column: 1, scope: !16485)
!16542 = distinct !DISubprogram(name: "sliceable", scope: !2907, file: !2907, line: 468, type: !16543, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16545)
!16543 = !DISubroutineType(types: !16544)
!16544 = !{!122, !2800}
!16545 = !{!16546, !16547}
!16546 = !DILocalVariable(name: "thread", arg: 1, scope: !16542, file: !2907, line: 468, type: !2800)
!16547 = !DILocalVariable(name: "ret", scope: !16542, file: !2907, line: 470, type: !122)
!16548 = !DILocation(line: 0, scope: !16542)
!16549 = !DILocation(line: 470, column: 13, scope: !16542)
!16550 = !DILocation(line: 471, column: 3, scope: !16542)
!16551 = !DILocation(line: 471, column: 7, scope: !16542)
!16552 = !DILocation(line: 472, column: 3, scope: !16542)
!16553 = !DILocation(line: 472, column: 37, scope: !16542)
!16554 = !DILocation(line: 472, column: 24, scope: !16542)
!16555 = !DILocation(line: 472, column: 43, scope: !16542)
!16556 = !DILocation(line: 472, column: 7, scope: !16542)
!16557 = !DILocation(line: 473, column: 3, scope: !16542)
!16558 = !DILocation(line: 473, column: 7, scope: !16542)
!16559 = !DILocation(line: 473, column: 6, scope: !16542)
!16560 = !DILocation(line: 479, column: 2, scope: !16542)
!16561 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2907, file: !2907, line: 482, type: !16562, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16564)
!16562 = !DISubroutineType(types: !16563)
!16563 = !{!16394, !16394}
!16564 = !{!16565, !16566}
!16565 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !16561, file: !2907, line: 482, type: !16394)
!16566 = !DILocalVariable(name: "curr", scope: !16561, file: !2907, line: 484, type: !2800)
!16567 = !DILocation(line: 0, scope: !16561)
!16568 = !DILocation(line: 484, column: 26, scope: !16561)
!16569 = !DILocation(line: 493, column: 7, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16561, file: !2907, line: 493, column: 6)
!16571 = !DILocation(line: 493, column: 6, scope: !16561)
!16572 = !DILocation(line: 494, column: 3, scope: !16573)
!16573 = distinct !DILexicalBlock(scope: !16570, file: !2907, line: 493, column: 49)
!16574 = !DILocation(line: 495, column: 2, scope: !16573)
!16575 = !DILocation(line: 496, column: 2, scope: !16561)
!16576 = !DILocation(line: 499, column: 1, scope: !16561)
!16577 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14725, file: !14725, line: 106, type: !16543, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16578)
!16578 = !{!16579, !16580}
!16579 = !DILocalVariable(name: "thread", arg: 1, scope: !16577, file: !14725, line: 106, type: !2800)
!16580 = !DILocalVariable(name: "state", scope: !16577, file: !14725, line: 108, type: !166)
!16581 = !DILocation(line: 0, scope: !16577)
!16582 = !DILocation(line: 108, column: 31, scope: !16577)
!16583 = !DILocation(line: 110, column: 16, scope: !16577)
!16584 = !DILocation(line: 111, column: 41, scope: !16577)
!16585 = !DILocation(line: 110, column: 2, scope: !16577)
!16586 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2907, file: !2907, line: 393, type: !16360, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16587)
!16587 = !{!16588}
!16588 = !DILocalVariable(name: "thread", arg: 1, scope: !16586, file: !2907, line: 393, type: !2800)
!16589 = !DILocation(line: 0, scope: !16586)
!16590 = !DILocation(line: 395, column: 6, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16586, file: !2907, line: 395, column: 6)
!16592 = !DILocation(line: 395, column: 6, scope: !16586)
!16593 = !DILocalVariable(name: "thread", arg: 1, scope: !16594, file: !2907, line: 264, type: !2800)
!16594 = distinct !DISubprogram(name: "dequeue_thread", scope: !2907, file: !2907, line: 264, type: !16360, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16595)
!16595 = !{!16593}
!16596 = !DILocation(line: 0, scope: !16594, inlinedAt: !16597)
!16597 = distinct !DILocation(line: 396, column: 3, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16591, file: !2907, line: 395, column: 34)
!16599 = !DILocation(line: 266, column: 15, scope: !16594, inlinedAt: !16597)
!16600 = !DILocation(line: 266, column: 28, scope: !16594, inlinedAt: !16597)
!16601 = !DILocalVariable(name: "thread", arg: 1, scope: !16602, file: !2907, line: 232, type: !2800)
!16602 = distinct !DISubprogram(name: "runq_remove", scope: !2907, file: !2907, line: 232, type: !16360, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16603)
!16603 = !{!16601}
!16604 = !DILocation(line: 0, scope: !16602, inlinedAt: !16605)
!16605 = distinct !DILocation(line: 268, column: 3, scope: !16606, inlinedAt: !16597)
!16606 = distinct !DILexicalBlock(scope: !16607, file: !2907, line: 267, column: 35)
!16607 = distinct !DILexicalBlock(scope: !16594, file: !2907, line: 267, column: 6)
!16608 = !DILocation(line: 234, column: 2, scope: !16602, inlinedAt: !16605)
!16609 = !DILocation(line: 397, column: 2, scope: !16598)
!16610 = !DILocalVariable(name: "thread", arg: 1, scope: !16611, file: !2907, line: 250, type: !2800)
!16611 = distinct !DISubprogram(name: "queue_thread", scope: !2907, file: !2907, line: 250, type: !16360, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16612)
!16612 = !{!16610}
!16613 = !DILocation(line: 0, scope: !16611, inlinedAt: !16614)
!16614 = distinct !DILocation(line: 398, column: 2, scope: !16586)
!16615 = !DILocation(line: 252, column: 15, scope: !16611, inlinedAt: !16614)
!16616 = !DILocation(line: 252, column: 28, scope: !16611, inlinedAt: !16614)
!16617 = !DILocalVariable(name: "thread", arg: 1, scope: !16618, file: !2907, line: 227, type: !2800)
!16618 = distinct !DISubprogram(name: "runq_add", scope: !2907, file: !2907, line: 227, type: !16360, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16619)
!16619 = !{!16617}
!16620 = !DILocation(line: 0, scope: !16618, inlinedAt: !16621)
!16621 = distinct !DILocation(line: 254, column: 3, scope: !16622, inlinedAt: !16614)
!16622 = distinct !DILexicalBlock(scope: !16623, file: !2907, line: 253, column: 35)
!16623 = distinct !DILexicalBlock(scope: !16611, file: !2907, line: 253, column: 6)
!16624 = !DILocalVariable(name: "pq", arg: 1, scope: !16625, file: !2907, line: 181, type: !16628)
!16625 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2907, file: !2907, line: 181, type: !16626, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16629)
!16626 = !DISubroutineType(types: !16627)
!16627 = !{null, !16628, !2800}
!16628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 32)
!16629 = !{!16624, !16630, !16631}
!16630 = !DILocalVariable(name: "thread", arg: 2, scope: !16625, file: !2907, line: 182, type: !2800)
!16631 = !DILocalVariable(name: "t", scope: !16625, file: !2907, line: 184, type: !2800)
!16632 = !DILocation(line: 0, scope: !16625, inlinedAt: !16633)
!16633 = distinct !DILocation(line: 229, column: 2, scope: !16618, inlinedAt: !16621)
!16634 = !DILocation(line: 186, column: 2, scope: !16635, inlinedAt: !16633)
!16635 = distinct !DILexicalBlock(scope: !16636, file: !2907, line: 186, column: 2)
!16636 = distinct !DILexicalBlock(scope: !16625, file: !2907, line: 186, column: 2)
!16637 = !DILocation(line: 186, column: 2, scope: !16636, inlinedAt: !16633)
!16638 = !DILocation(line: 186, column: 2, scope: !16639, inlinedAt: !16633)
!16639 = distinct !DILexicalBlock(scope: !16635, file: !2907, line: 186, column: 2)
!16640 = !DILocation(line: 188, column: 2, scope: !16641, inlinedAt: !16633)
!16641 = distinct !DILexicalBlock(scope: !16625, file: !2907, line: 188, column: 2)
!16642 = !DILocation(line: 188, column: 2, scope: !16643, inlinedAt: !16633)
!16643 = distinct !DILexicalBlock(scope: !16641, file: !2907, line: 188, column: 2)
!16644 = !DILocation(line: 0, scope: !16641, inlinedAt: !16633)
!16645 = !DILocation(line: 189, column: 7, scope: !16646, inlinedAt: !16633)
!16646 = distinct !DILexicalBlock(scope: !16647, file: !2907, line: 189, column: 7)
!16647 = distinct !DILexicalBlock(scope: !16643, file: !2907, line: 188, column: 56)
!16648 = !DILocation(line: 189, column: 35, scope: !16646, inlinedAt: !16633)
!16649 = !DILocation(line: 189, column: 7, scope: !16647, inlinedAt: !16633)
!16650 = !DILocation(line: 191, column: 21, scope: !16651, inlinedAt: !16633)
!16651 = distinct !DILexicalBlock(scope: !16646, file: !2907, line: 189, column: 40)
!16652 = !DILocation(line: 190, column: 4, scope: !16651, inlinedAt: !16633)
!16653 = !DILocation(line: 192, column: 4, scope: !16651, inlinedAt: !16633)
!16654 = distinct !{!16654, !16640, !16655}
!16655 = !DILocation(line: 194, column: 2, scope: !16641, inlinedAt: !16633)
!16656 = !DILocation(line: 196, column: 37, scope: !16625, inlinedAt: !16633)
!16657 = !DILocation(line: 196, column: 2, scope: !16625, inlinedAt: !16633)
!16658 = !DILocation(line: 197, column: 1, scope: !16625, inlinedAt: !16633)
!16659 = !DILocation(line: 399, column: 25, scope: !16586)
!16660 = !DILocation(line: 399, column: 22, scope: !16586)
!16661 = !DILocation(line: 399, column: 2, scope: !16586)
!16662 = !DILocation(line: 400, column: 1, scope: !16586)
!16663 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14725, file: !14725, line: 136, type: !16543, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16664)
!16664 = !{!16665}
!16665 = !DILocalVariable(name: "thread", arg: 1, scope: !16663, file: !14725, line: 136, type: !2800)
!16666 = !DILocation(line: 0, scope: !16663)
!16667 = !DILocation(line: 138, column: 9, scope: !16663)
!16668 = !DILocation(line: 138, column: 2, scope: !16663)
!16669 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2907, file: !2907, line: 1137, type: !16626, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16670)
!16670 = !{!16671, !16672}
!16671 = !DILocalVariable(name: "pq", arg: 1, scope: !16669, file: !2907, line: 1137, type: !16628)
!16672 = !DILocalVariable(name: "thread", arg: 2, scope: !16669, file: !2907, line: 1137, type: !2800)
!16673 = !DILocation(line: 0, scope: !16669)
!16674 = !DILocation(line: 1139, column: 2, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16676, file: !2907, line: 1139, column: 2)
!16676 = distinct !DILexicalBlock(scope: !16669, file: !2907, line: 1139, column: 2)
!16677 = !DILocation(line: 1139, column: 2, scope: !16676)
!16678 = !DILocation(line: 1139, column: 2, scope: !16679)
!16679 = distinct !DILexicalBlock(scope: !16675, file: !2907, line: 1139, column: 2)
!16680 = !DILocation(line: 1141, column: 33, scope: !16669)
!16681 = !DILocation(line: 1141, column: 2, scope: !16669)
!16682 = !DILocation(line: 1142, column: 1, scope: !16669)
!16683 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14725, file: !14725, line: 83, type: !16543, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16684)
!16684 = !{!16685}
!16685 = !DILocalVariable(name: "thread", arg: 1, scope: !16683, file: !14725, line: 83, type: !2800)
!16686 = !DILocation(line: 0, scope: !16683)
!16687 = !DILocation(line: 89, column: 16, scope: !16683)
!16688 = !DILocation(line: 89, column: 2, scope: !16683)
!16689 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !16690, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16692)
!16690 = !DISubroutineType(types: !16691)
!16691 = !{!2903, !16628}
!16692 = !{!16693}
!16693 = !DILocalVariable(name: "list", arg: 1, scope: !16689, file: !136, line: 294, type: !16628)
!16694 = !DILocation(line: 0, scope: !16689)
!16695 = !DILocation(line: 296, column: 9, scope: !16689)
!16696 = !DILocation(line: 296, column: 49, scope: !16689)
!16697 = !DILocation(line: 296, column: 2, scope: !16689)
!16698 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !136, file: !136, line: 443, type: !16699, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16701)
!16699 = !DISubroutineType(types: !16700)
!16700 = !{null, !2903, !2903}
!16701 = !{!16702, !16703, !16704}
!16702 = !DILocalVariable(name: "successor", arg: 1, scope: !16698, file: !136, line: 443, type: !2903)
!16703 = !DILocalVariable(name: "node", arg: 2, scope: !16698, file: !136, line: 443, type: !2903)
!16704 = !DILocalVariable(name: "prev", scope: !16698, file: !136, line: 445, type: !16705)
!16705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2903)
!16706 = !DILocation(line: 0, scope: !16698)
!16707 = !DILocation(line: 445, column: 39, scope: !16698)
!16708 = !DILocation(line: 447, column: 8, scope: !16698)
!16709 = !DILocation(line: 447, column: 13, scope: !16698)
!16710 = !DILocation(line: 448, column: 8, scope: !16698)
!16711 = !DILocation(line: 448, column: 13, scope: !16698)
!16712 = !DILocation(line: 449, column: 8, scope: !16698)
!16713 = !DILocation(line: 449, column: 13, scope: !16698)
!16714 = !DILocation(line: 450, column: 18, scope: !16698)
!16715 = !DILocation(line: 451, column: 1, scope: !16698)
!16716 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !136, file: !136, line: 341, type: !16717, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16719)
!16717 = !DISubroutineType(types: !16718)
!16718 = !{!2903, !16628, !2903}
!16719 = !{!16720, !16721}
!16720 = !DILocalVariable(name: "list", arg: 1, scope: !16716, file: !136, line: 341, type: !16628)
!16721 = !DILocalVariable(name: "node", arg: 2, scope: !16716, file: !136, line: 342, type: !2903)
!16722 = !DILocation(line: 0, scope: !16716)
!16723 = !DILocation(line: 344, column: 15, scope: !16716)
!16724 = !DILocation(line: 344, column: 9, scope: !16716)
!16725 = !DILocation(line: 344, column: 26, scope: !16716)
!16726 = !DILocation(line: 344, column: 2, scope: !16716)
!16727 = distinct !DISubprogram(name: "sys_dlist_append", scope: !136, file: !136, line: 404, type: !16728, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16730)
!16728 = !DISubroutineType(types: !16729)
!16729 = !{null, !16628, !2903}
!16730 = !{!16731, !16732, !16733}
!16731 = !DILocalVariable(name: "list", arg: 1, scope: !16727, file: !136, line: 404, type: !16628)
!16732 = !DILocalVariable(name: "node", arg: 2, scope: !16727, file: !136, line: 404, type: !2903)
!16733 = !DILocalVariable(name: "tail", scope: !16727, file: !136, line: 406, type: !16705)
!16734 = !DILocation(line: 0, scope: !16727)
!16735 = !DILocation(line: 406, column: 34, scope: !16727)
!16736 = !DILocation(line: 408, column: 8, scope: !16727)
!16737 = !DILocation(line: 408, column: 13, scope: !16727)
!16738 = !DILocation(line: 409, column: 8, scope: !16727)
!16739 = !DILocation(line: 409, column: 13, scope: !16727)
!16740 = !DILocation(line: 411, column: 8, scope: !16727)
!16741 = !DILocation(line: 411, column: 13, scope: !16727)
!16742 = !DILocation(line: 412, column: 13, scope: !16727)
!16743 = !DILocation(line: 413, column: 1, scope: !16727)
!16744 = distinct !DISubprogram(name: "update_cache", scope: !2907, file: !2907, line: 559, type: !10271, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16745)
!16745 = !{!16746, !16747}
!16746 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16744, file: !2907, line: 559, type: !103)
!16747 = !DILocalVariable(name: "thread", scope: !16744, file: !2907, line: 562, type: !2800)
!16748 = !DILocation(line: 0, scope: !16744)
!16749 = !DILocation(line: 239, column: 9, scope: !16750, inlinedAt: !16753)
!16750 = distinct !DISubprogram(name: "runq_best", scope: !2907, file: !2907, line: 237, type: !16751, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !2501)
!16751 = !DISubroutineType(types: !16752)
!16752 = !{!2800}
!16753 = distinct !DILocation(line: 314, column: 28, scope: !16754, inlinedAt: !16757)
!16754 = distinct !DISubprogram(name: "next_up", scope: !2907, file: !2907, line: 312, type: !16751, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16755)
!16755 = !{!16756}
!16756 = !DILocalVariable(name: "thread", scope: !16754, file: !2907, line: 314, type: !2800)
!16757 = distinct !DILocation(line: 562, column: 28, scope: !16744)
!16758 = !DILocation(line: 0, scope: !16754, inlinedAt: !16757)
!16759 = !DILocation(line: 340, column: 17, scope: !16754, inlinedAt: !16757)
!16760 = !DILocation(line: 340, column: 9, scope: !16754, inlinedAt: !16757)
!16761 = !DILocalVariable(name: "thread", arg: 1, scope: !16762, file: !2907, line: 127, type: !2800)
!16762 = distinct !DISubprogram(name: "should_preempt", scope: !2907, file: !2907, line: 127, type: !16763, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16765)
!16763 = !DISubroutineType(types: !16764)
!16764 = !{!122, !2800, !103}
!16765 = !{!16761, !16766}
!16766 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16762, file: !2907, line: 128, type: !103)
!16767 = !DILocation(line: 0, scope: !16762, inlinedAt: !16768)
!16768 = distinct !DILocation(line: 564, column: 6, scope: !16769)
!16769 = distinct !DILexicalBlock(scope: !16744, file: !2907, line: 564, column: 6)
!16770 = !DILocation(line: 133, column: 17, scope: !16771, inlinedAt: !16768)
!16771 = distinct !DILexicalBlock(scope: !16762, file: !2907, line: 133, column: 6)
!16772 = !DILocation(line: 0, scope: !16769)
!16773 = !DILocation(line: 133, column: 6, scope: !16762, inlinedAt: !16768)
!16774 = !DILocation(line: 137, column: 2, scope: !16775, inlinedAt: !16768)
!16775 = distinct !DILexicalBlock(scope: !16776, file: !2907, line: 137, column: 2)
!16776 = distinct !DILexicalBlock(scope: !16762, file: !2907, line: 137, column: 2)
!16777 = !DILocation(line: 137, column: 2, scope: !16776, inlinedAt: !16768)
!16778 = !DILocation(line: 137, column: 2, scope: !16779, inlinedAt: !16768)
!16779 = distinct !DILexicalBlock(scope: !16775, file: !2907, line: 137, column: 2)
!16780 = !DILocation(line: 140, column: 6, scope: !16781, inlinedAt: !16768)
!16781 = distinct !DILexicalBlock(scope: !16762, file: !2907, line: 140, column: 6)
!16782 = !DILocation(line: 140, column: 6, scope: !16762, inlinedAt: !16768)
!16783 = !DILocation(line: 150, column: 9, scope: !16784, inlinedAt: !16768)
!16784 = distinct !DILexicalBlock(scope: !16762, file: !2907, line: 149, column: 6)
!16785 = !DILocation(line: 149, column: 6, scope: !16762, inlinedAt: !16768)
!16786 = !DILocation(line: 157, column: 6, scope: !16787, inlinedAt: !16768)
!16787 = distinct !DILexicalBlock(scope: !16762, file: !2907, line: 157, column: 6)
!16788 = !DILocation(line: 564, column: 6, scope: !16744)
!16789 = !DILocation(line: 566, column: 14, scope: !16790)
!16790 = distinct !DILexicalBlock(scope: !16791, file: !2907, line: 566, column: 7)
!16791 = distinct !DILexicalBlock(scope: !16769, file: !2907, line: 564, column: 42)
!16792 = !DILocation(line: 566, column: 7, scope: !16791)
!16793 = !DILocation(line: 567, column: 4, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16790, file: !2907, line: 566, column: 27)
!16795 = !DILocation(line: 568, column: 3, scope: !16794)
!16796 = !DILocation(line: 585, column: 1, scope: !16744)
!16797 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2907, file: !2907, line: 1144, type: !16798, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16800)
!16798 = !DISubroutineType(types: !16799)
!16799 = !{!2800, !16628}
!16800 = !{!16801, !16802, !16803}
!16801 = !DILocalVariable(name: "pq", arg: 1, scope: !16797, file: !2907, line: 1144, type: !16628)
!16802 = !DILocalVariable(name: "thread", scope: !16797, file: !2907, line: 1146, type: !2800)
!16803 = !DILocalVariable(name: "n", scope: !16797, file: !2907, line: 1147, type: !2903)
!16804 = !DILocation(line: 0, scope: !16797)
!16805 = !DILocation(line: 1147, column: 19, scope: !16797)
!16806 = !DILocation(line: 1152, column: 2, scope: !16797)
!16807 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14725, file: !14725, line: 115, type: !16543, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16808)
!16808 = !{!16809}
!16809 = !DILocalVariable(name: "thread", arg: 1, scope: !16807, file: !14725, line: 115, type: !2800)
!16810 = !DILocation(line: 0, scope: !16807)
!16811 = !DILocation(line: 117, column: 46, scope: !16807)
!16812 = !DILocation(line: 117, column: 10, scope: !16807)
!16813 = !DILocation(line: 117, column: 9, scope: !16807)
!16814 = !DILocation(line: 117, column: 2, scope: !16807)
!16815 = distinct !DISubprogram(name: "is_preempt", scope: !2907, file: !2907, line: 62, type: !16378, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16816)
!16816 = !{!16817}
!16817 = !DILocalVariable(name: "thread", arg: 1, scope: !16815, file: !2907, line: 62, type: !2800)
!16818 = !DILocation(line: 0, scope: !16815)
!16819 = !DILocation(line: 65, column: 22, scope: !16815)
!16820 = !DILocation(line: 65, column: 30, scope: !16815)
!16821 = !DILocation(line: 65, column: 2, scope: !16815)
!16822 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15132, file: !15132, line: 35, type: !16823, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16827)
!16823 = !DISubroutineType(types: !16824)
!16824 = !{!122, !16825}
!16825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16826, size: 32)
!16826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2851)
!16827 = !{!16828}
!16828 = !DILocalVariable(name: "to", arg: 1, scope: !16822, file: !15132, line: 35, type: !16825)
!16829 = !DILocation(line: 0, scope: !16822)
!16830 = !DILocation(line: 37, column: 35, scope: !16822)
!16831 = !DILocation(line: 37, column: 10, scope: !16822)
!16832 = !DILocation(line: 37, column: 9, scope: !16822)
!16833 = !DILocation(line: 37, column: 2, scope: !16822)
!16834 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !136, file: !136, line: 225, type: !16835, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16839)
!16835 = !DISubroutineType(types: !16836)
!16836 = !{!122, !16837}
!16837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16838, size: 32)
!16838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2810)
!16839 = !{!16840}
!16840 = !DILocalVariable(name: "node", arg: 1, scope: !16834, file: !136, line: 225, type: !16837)
!16841 = !DILocation(line: 0, scope: !16834)
!16842 = !DILocation(line: 227, column: 15, scope: !16834)
!16843 = !DILocation(line: 227, column: 20, scope: !16834)
!16844 = !DILocation(line: 227, column: 2, scope: !16834)
!16845 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !136, file: !136, line: 325, type: !16717, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16846)
!16846 = !{!16847, !16848}
!16847 = !DILocalVariable(name: "list", arg: 1, scope: !16845, file: !136, line: 325, type: !16628)
!16848 = !DILocalVariable(name: "node", arg: 2, scope: !16845, file: !136, line: 326, type: !2903)
!16849 = !DILocation(line: 0, scope: !16845)
!16850 = !DILocation(line: 328, column: 24, scope: !16845)
!16851 = !DILocation(line: 328, column: 15, scope: !16845)
!16852 = !DILocation(line: 328, column: 9, scope: !16845)
!16853 = !DILocation(line: 328, column: 45, scope: !16845)
!16854 = !DILocation(line: 328, column: 2, scope: !16845)
!16855 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !16856, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16858)
!16856 = !DISubroutineType(types: !16857)
!16857 = !{!122, !16628}
!16858 = !{!16859}
!16859 = !DILocalVariable(name: "list", arg: 1, scope: !16855, file: !136, line: 266, type: !16628)
!16860 = !DILocation(line: 0, scope: !16855)
!16861 = !DILocation(line: 268, column: 15, scope: !16855)
!16862 = !DILocation(line: 268, column: 20, scope: !16855)
!16863 = !DILocation(line: 268, column: 2, scope: !16855)
!16864 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !136, file: !136, line: 496, type: !16865, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16867)
!16865 = !DISubroutineType(types: !16866)
!16866 = !{null, !2903}
!16867 = !{!16868, !16869, !16870}
!16868 = !DILocalVariable(name: "node", arg: 1, scope: !16864, file: !136, line: 496, type: !2903)
!16869 = !DILocalVariable(name: "prev", scope: !16864, file: !136, line: 498, type: !16705)
!16870 = !DILocalVariable(name: "next", scope: !16864, file: !136, line: 499, type: !16705)
!16871 = !DILocation(line: 0, scope: !16864)
!16872 = !DILocation(line: 498, column: 34, scope: !16864)
!16873 = !DILocation(line: 499, column: 34, scope: !16864)
!16874 = !DILocation(line: 501, column: 8, scope: !16864)
!16875 = !DILocation(line: 501, column: 13, scope: !16864)
!16876 = !DILocation(line: 502, column: 8, scope: !16864)
!16877 = !DILocation(line: 502, column: 13, scope: !16864)
!16878 = !DILocation(line: 503, column: 2, scope: !16864)
!16879 = !DILocation(line: 504, column: 1, scope: !16864)
!16880 = distinct !DISubprogram(name: "sys_dnode_init", scope: !136, file: !136, line: 211, type: !16865, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16881)
!16881 = !{!16882}
!16882 = !DILocalVariable(name: "node", arg: 1, scope: !16880, file: !136, line: 211, type: !2903)
!16883 = !DILocation(line: 0, scope: !16880)
!16884 = !DILocation(line: 213, column: 8, scope: !16880)
!16885 = !DILocation(line: 213, column: 13, scope: !16880)
!16886 = !DILocation(line: 214, column: 8, scope: !16880)
!16887 = !DILocation(line: 214, column: 13, scope: !16880)
!16888 = !DILocation(line: 215, column: 1, scope: !16880)
!16889 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14725, file: !14725, line: 131, type: !16890, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16892)
!16890 = !DISubroutineType(types: !16891)
!16891 = !{!122, !2800, !111}
!16892 = !{!16893, !16894}
!16893 = !DILocalVariable(name: "thread", arg: 1, scope: !16889, file: !14725, line: 131, type: !2800)
!16894 = !DILocalVariable(name: "state", arg: 2, scope: !16889, file: !14725, line: 131, type: !111)
!16895 = !DILocation(line: 0, scope: !16889)
!16896 = !DILocation(line: 133, column: 23, scope: !16889)
!16897 = !DILocation(line: 133, column: 10, scope: !16889)
!16898 = !DILocation(line: 133, column: 36, scope: !16889)
!16899 = !DILocation(line: 133, column: 45, scope: !16889)
!16900 = !DILocation(line: 133, column: 2, scope: !16889)
!16901 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14725, file: !14725, line: 211, type: !16192, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16902)
!16902 = !{!16903, !16904}
!16903 = !DILocalVariable(name: "prio", arg: 1, scope: !16901, file: !14725, line: 211, type: !103)
!16904 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16901, file: !14725, line: 211, type: !103)
!16905 = !DILocation(line: 0, scope: !16901)
!16906 = !DILocation(line: 213, column: 9, scope: !16901)
!16907 = !DILocation(line: 213, column: 2, scope: !16901)
!16908 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14725, file: !14725, line: 206, type: !16192, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16909)
!16909 = !{!16910, !16911}
!16910 = !DILocalVariable(name: "prio1", arg: 1, scope: !16908, file: !14725, line: 206, type: !103)
!16911 = !DILocalVariable(name: "prio2", arg: 2, scope: !16908, file: !14725, line: 206, type: !103)
!16912 = !DILocation(line: 0, scope: !16908)
!16913 = !DILocation(line: 208, column: 15, scope: !16908)
!16914 = !DILocation(line: 208, column: 2, scope: !16908)
!16915 = distinct !DISubprogram(name: "z_ready_thread", scope: !2907, file: !2907, line: 635, type: !16360, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16916)
!16916 = !{!16917, !16918, !16920}
!16917 = !DILocalVariable(name: "thread", arg: 1, scope: !16915, file: !2907, line: 635, type: !2800)
!16918 = !DILocalVariable(name: "__i", scope: !16919, file: !2907, line: 637, type: !16394)
!16919 = distinct !DILexicalBlock(scope: !16915, file: !2907, line: 637, column: 2)
!16920 = !DILocalVariable(name: "__key", scope: !16919, file: !2907, line: 637, type: !16394)
!16921 = !DILocation(line: 0, scope: !16915)
!16922 = !DILocation(line: 0, scope: !16919)
!16923 = !DILocation(line: 0, scope: !16402, inlinedAt: !16924)
!16924 = distinct !DILocation(line: 637, column: 2, scope: !16919)
!16925 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !16926)
!16926 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !16924)
!16927 = !DILocation(line: 0, scope: !16411, inlinedAt: !16926)
!16928 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !16924)
!16929 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !16924)
!16930 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !16924)
!16931 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !16924)
!16932 = !DILocation(line: 639, column: 4, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16934, file: !2907, line: 638, column: 41)
!16934 = distinct !DILexicalBlock(scope: !16935, file: !2907, line: 638, column: 7)
!16935 = distinct !DILexicalBlock(scope: !16936, file: !2907, line: 637, column: 26)
!16936 = distinct !DILexicalBlock(scope: !16919, file: !2907, line: 637, column: 2)
!16937 = !DILocation(line: 0, scope: !16436, inlinedAt: !16938)
!16938 = distinct !DILocation(line: 637, column: 2, scope: !16936)
!16939 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !16938)
!16940 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !16938)
!16941 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !16938)
!16942 = !DILocation(line: 0, scope: !16450, inlinedAt: !16943)
!16943 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !16938)
!16944 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !16943)
!16945 = !DILocation(line: 642, column: 1, scope: !16915)
!16946 = distinct !DISubprogram(name: "ready_thread", scope: !2907, file: !2907, line: 617, type: !16360, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16947)
!16947 = !{!16948}
!16948 = !DILocalVariable(name: "thread", arg: 1, scope: !16946, file: !2907, line: 617, type: !2800)
!16949 = !DILocation(line: 0, scope: !16946)
!16950 = !DILocation(line: 626, column: 7, scope: !16951)
!16951 = distinct !DILexicalBlock(scope: !16946, file: !2907, line: 626, column: 6)
!16952 = !DILocation(line: 626, column: 34, scope: !16951)
!16953 = !DILocation(line: 626, column: 37, scope: !16951)
!16954 = !DILocation(line: 626, column: 6, scope: !16946)
!16955 = !DILocation(line: 0, scope: !16611, inlinedAt: !16956)
!16956 = distinct !DILocation(line: 629, column: 3, scope: !16957)
!16957 = distinct !DILexicalBlock(scope: !16951, file: !2907, line: 626, column: 64)
!16958 = !DILocation(line: 252, column: 15, scope: !16611, inlinedAt: !16956)
!16959 = !DILocation(line: 252, column: 28, scope: !16611, inlinedAt: !16956)
!16960 = !DILocation(line: 0, scope: !16618, inlinedAt: !16961)
!16961 = distinct !DILocation(line: 254, column: 3, scope: !16622, inlinedAt: !16956)
!16962 = !DILocation(line: 0, scope: !16625, inlinedAt: !16963)
!16963 = distinct !DILocation(line: 229, column: 2, scope: !16618, inlinedAt: !16961)
!16964 = !DILocation(line: 186, column: 2, scope: !16635, inlinedAt: !16963)
!16965 = !DILocation(line: 186, column: 2, scope: !16636, inlinedAt: !16963)
!16966 = !DILocation(line: 186, column: 2, scope: !16639, inlinedAt: !16963)
!16967 = !DILocation(line: 188, column: 2, scope: !16641, inlinedAt: !16963)
!16968 = !DILocation(line: 188, column: 2, scope: !16643, inlinedAt: !16963)
!16969 = !DILocation(line: 0, scope: !16641, inlinedAt: !16963)
!16970 = !DILocation(line: 189, column: 7, scope: !16646, inlinedAt: !16963)
!16971 = !DILocation(line: 189, column: 35, scope: !16646, inlinedAt: !16963)
!16972 = !DILocation(line: 189, column: 7, scope: !16647, inlinedAt: !16963)
!16973 = !DILocation(line: 191, column: 21, scope: !16651, inlinedAt: !16963)
!16974 = !DILocation(line: 190, column: 4, scope: !16651, inlinedAt: !16963)
!16975 = !DILocation(line: 192, column: 4, scope: !16651, inlinedAt: !16963)
!16976 = distinct !{!16976, !16967, !16977}
!16977 = !DILocation(line: 194, column: 2, scope: !16641, inlinedAt: !16963)
!16978 = !DILocation(line: 196, column: 37, scope: !16625, inlinedAt: !16963)
!16979 = !DILocation(line: 196, column: 2, scope: !16625, inlinedAt: !16963)
!16980 = !DILocation(line: 197, column: 1, scope: !16625, inlinedAt: !16963)
!16981 = !DILocation(line: 630, column: 3, scope: !16957)
!16982 = !DILocation(line: 632, column: 2, scope: !16957)
!16983 = !DILocation(line: 633, column: 1, scope: !16946)
!16984 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14725, file: !14725, line: 120, type: !16543, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16985)
!16985 = !{!16986}
!16986 = !DILocalVariable(name: "thread", arg: 1, scope: !16984, file: !14725, line: 120, type: !2800)
!16987 = !DILocation(line: 0, scope: !16984)
!16988 = !DILocation(line: 122, column: 12, scope: !16984)
!16989 = !DILocation(line: 122, column: 62, scope: !16984)
!16990 = !DILocation(line: 123, column: 4, scope: !16984)
!16991 = !DILocation(line: 122, column: 2, scope: !16984)
!16992 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2907, file: !2907, line: 644, type: !16360, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !16993)
!16993 = !{!16994, !16995, !16997}
!16994 = !DILocalVariable(name: "thread", arg: 1, scope: !16992, file: !2907, line: 644, type: !2800)
!16995 = !DILocalVariable(name: "__i", scope: !16996, file: !2907, line: 646, type: !16394)
!16996 = distinct !DILexicalBlock(scope: !16992, file: !2907, line: 646, column: 2)
!16997 = !DILocalVariable(name: "__key", scope: !16996, file: !2907, line: 646, type: !16394)
!16998 = !DILocation(line: 0, scope: !16992)
!16999 = !DILocation(line: 0, scope: !16996)
!17000 = !DILocation(line: 0, scope: !16402, inlinedAt: !17001)
!17001 = distinct !DILocation(line: 646, column: 2, scope: !16996)
!17002 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17003)
!17003 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17001)
!17004 = !DILocation(line: 0, scope: !16411, inlinedAt: !17003)
!17005 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17001)
!17006 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17001)
!17007 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17001)
!17008 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17001)
!17009 = !DILocation(line: 647, column: 3, scope: !17010)
!17010 = distinct !DILexicalBlock(scope: !17011, file: !2907, line: 646, column: 26)
!17011 = distinct !DILexicalBlock(scope: !16996, file: !2907, line: 646, column: 2)
!17012 = !DILocation(line: 0, scope: !16436, inlinedAt: !17013)
!17013 = distinct !DILocation(line: 646, column: 2, scope: !17011)
!17014 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17013)
!17015 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17013)
!17016 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17013)
!17017 = !DILocation(line: 0, scope: !16450, inlinedAt: !17018)
!17018 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17013)
!17019 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17018)
!17020 = !DILocation(line: 649, column: 1, scope: !16992)
!17021 = distinct !DISubprogram(name: "z_sched_start", scope: !2907, file: !2907, line: 651, type: !16360, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17022)
!17022 = !{!17023, !17024}
!17023 = !DILocalVariable(name: "thread", arg: 1, scope: !17021, file: !2907, line: 651, type: !2800)
!17024 = !DILocalVariable(name: "key", scope: !17021, file: !2907, line: 653, type: !16394)
!17025 = !DILocation(line: 0, scope: !17021)
!17026 = !DILocation(line: 0, scope: !16402, inlinedAt: !17027)
!17027 = distinct !DILocation(line: 653, column: 25, scope: !17021)
!17028 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17029)
!17029 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17027)
!17030 = !DILocation(line: 0, scope: !16411, inlinedAt: !17029)
!17031 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17027)
!17032 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17027)
!17033 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17027)
!17034 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17027)
!17035 = !DILocation(line: 655, column: 6, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17021, file: !2907, line: 655, column: 6)
!17037 = !DILocation(line: 655, column: 6, scope: !17021)
!17038 = !DILocation(line: 0, scope: !16436, inlinedAt: !17039)
!17039 = distinct !DILocation(line: 656, column: 3, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17036, file: !2907, line: 655, column: 36)
!17041 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17039)
!17042 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17039)
!17043 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17039)
!17044 = !DILocation(line: 0, scope: !16450, inlinedAt: !17045)
!17045 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17039)
!17046 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17045)
!17047 = !DILocation(line: 657, column: 3, scope: !17040)
!17048 = !DILocation(line: 660, column: 2, scope: !17021)
!17049 = !DILocation(line: 661, column: 2, scope: !17021)
!17050 = !DILocation(line: 662, column: 2, scope: !17021)
!17051 = !DILocation(line: 663, column: 1, scope: !17021)
!17052 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14725, file: !14725, line: 126, type: !16543, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17053)
!17053 = !{!17054}
!17054 = !DILocalVariable(name: "thread", arg: 1, scope: !17052, file: !14725, line: 126, type: !2800)
!17055 = !DILocation(line: 0, scope: !17052)
!17056 = !DILocation(line: 128, column: 23, scope: !17052)
!17057 = !DILocation(line: 128, column: 36, scope: !17052)
!17058 = !DILocation(line: 128, column: 56, scope: !17052)
!17059 = !DILocation(line: 128, column: 2, scope: !17052)
!17060 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14725, file: !14725, line: 155, type: !16360, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17061)
!17061 = !{!17062}
!17062 = !DILocalVariable(name: "thread", arg: 1, scope: !17060, file: !14725, line: 155, type: !2800)
!17063 = !DILocation(line: 0, scope: !17060)
!17064 = !DILocation(line: 157, column: 15, scope: !17060)
!17065 = !DILocation(line: 157, column: 28, scope: !17060)
!17066 = !DILocation(line: 158, column: 1, scope: !17060)
!17067 = distinct !DISubprogram(name: "z_reschedule", scope: !2907, file: !2907, line: 967, type: !16437, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17068)
!17068 = !{!17069, !17070}
!17069 = !DILocalVariable(name: "lock", arg: 1, scope: !17067, file: !2907, line: 967, type: !16405)
!17070 = !DILocalVariable(name: "key", arg: 2, scope: !17067, file: !2907, line: 967, type: !16394)
!17071 = !DILocation(line: 0, scope: !17067)
!17072 = !DILocation(line: 969, column: 6, scope: !17073)
!17073 = distinct !DILexicalBlock(scope: !17067, file: !2907, line: 969, column: 6)
!17074 = !DILocation(line: 969, column: 23, scope: !17073)
!17075 = !DILocation(line: 969, column: 26, scope: !17073)
!17076 = !DILocation(line: 969, column: 6, scope: !17067)
!17077 = !DILocalVariable(name: "key", arg: 2, scope: !17078, file: !14829, line: 193, type: !16394)
!17078 = distinct !DISubprogram(name: "z_swap", scope: !14829, file: !14829, line: 193, type: !17079, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17081)
!17079 = !DISubroutineType(types: !17080)
!17080 = !{!103, !16405, !16394}
!17081 = !{!17082, !17077}
!17082 = !DILocalVariable(name: "lock", arg: 1, scope: !17078, file: !14829, line: 193, type: !16405)
!17083 = !DILocation(line: 0, scope: !17078, inlinedAt: !17084)
!17084 = distinct !DILocation(line: 970, column: 3, scope: !17085)
!17085 = distinct !DILexicalBlock(scope: !17073, file: !2907, line: 969, column: 39)
!17086 = !DILocalVariable(name: "l", arg: 1, scope: !17087, file: !152, line: 221, type: !16405)
!17087 = distinct !DISubprogram(name: "k_spin_release", scope: !152, file: !152, line: 221, type: !17088, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17090)
!17088 = !DISubroutineType(types: !17089)
!17089 = !{null, !16405}
!17090 = !{!17086}
!17091 = !DILocation(line: 0, scope: !17087, inlinedAt: !17092)
!17092 = distinct !DILocation(line: 195, column: 2, scope: !17078, inlinedAt: !17084)
!17093 = !DILocation(line: 225, column: 2, scope: !17094, inlinedAt: !17092)
!17094 = distinct !DILexicalBlock(scope: !17095, file: !152, line: 225, column: 2)
!17095 = distinct !DILexicalBlock(scope: !17087, file: !152, line: 225, column: 2)
!17096 = !DILocation(line: 225, column: 2, scope: !17095, inlinedAt: !17092)
!17097 = !DILocation(line: 225, column: 2, scope: !17098, inlinedAt: !17092)
!17098 = distinct !DILexicalBlock(scope: !17094, file: !152, line: 225, column: 2)
!17099 = !DILocation(line: 196, column: 9, scope: !17078, inlinedAt: !17084)
!17100 = !DILocation(line: 971, column: 2, scope: !17085)
!17101 = !DILocation(line: 0, scope: !16436, inlinedAt: !17102)
!17102 = distinct !DILocation(line: 972, column: 3, scope: !17103)
!17103 = distinct !DILexicalBlock(scope: !17073, file: !2907, line: 971, column: 9)
!17104 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17102)
!17105 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17102)
!17106 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17102)
!17107 = !DILocation(line: 0, scope: !16450, inlinedAt: !17108)
!17108 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17102)
!17109 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17108)
!17110 = !DILocation(line: 975, column: 1, scope: !17067)
!17111 = distinct !DISubprogram(name: "resched", scope: !2907, file: !2907, line: 940, type: !17112, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17114)
!17112 = !DISubroutineType(types: !17113)
!17113 = !{!122, !111}
!17114 = !{!17115}
!17115 = !DILocalVariable(name: "key", arg: 1, scope: !17111, file: !2907, line: 940, type: !111)
!17116 = !DILocation(line: 0, scope: !17111)
!17117 = !DILocalVariable(name: "key", arg: 1, scope: !17118, file: !7544, line: 112, type: !32)
!17118 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7544, file: !7544, line: 112, type: !17119, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17121)
!17119 = !DISubroutineType(types: !17120)
!17120 = !{!122, !32}
!17121 = !{!17117}
!17122 = !DILocation(line: 0, scope: !17118, inlinedAt: !17123)
!17123 = distinct !DILocation(line: 946, column: 9, scope: !17111)
!17124 = !DILocation(line: 115, column: 13, scope: !17118, inlinedAt: !17123)
!17125 = !DILocation(line: 946, column: 32, scope: !17111)
!17126 = !DILocation(line: 1031, column: 3, scope: !17127, inlinedAt: !17130)
!17127 = distinct !DISubprogram(name: "__get_IPSR", scope: !7865, file: !7865, line: 1027, type: !7952, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17128)
!17128 = !{!17129}
!17129 = !DILocalVariable(name: "result", scope: !17127, file: !7865, line: 1029, type: !111)
!17130 = distinct !DILocation(line: 48, column: 10, scope: !17131, inlinedAt: !17132)
!17131 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8915, file: !8915, line: 46, type: !8916, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !2501)
!17132 = distinct !DILocation(line: 946, column: 36, scope: !17111)
!17133 = !{i64 3587615}
!17134 = !DILocation(line: 0, scope: !17127, inlinedAt: !17130)
!17135 = !DILocation(line: 48, column: 9, scope: !17131, inlinedAt: !17132)
!17136 = !DILocation(line: 946, column: 2, scope: !17111)
!17137 = distinct !DISubprogram(name: "need_swap", scope: !2907, file: !2907, line: 953, type: !8916, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17138)
!17138 = !{!17139}
!17139 = !DILocalVariable(name: "new_thread", scope: !17137, file: !2907, line: 959, type: !2800)
!17140 = !DILocation(line: 962, column: 31, scope: !17137)
!17141 = !DILocation(line: 0, scope: !17137)
!17142 = !DILocation(line: 963, column: 23, scope: !17137)
!17143 = !DILocation(line: 963, column: 20, scope: !17137)
!17144 = !DILocation(line: 963, column: 2, scope: !17137)
!17145 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14829, file: !14829, line: 181, type: !7875, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17146)
!17146 = !{!17147, !17148}
!17147 = !DILocalVariable(name: "key", arg: 1, scope: !17145, file: !14829, line: 181, type: !32)
!17148 = !DILocalVariable(name: "ret", scope: !17145, file: !14829, line: 183, type: !103)
!17149 = !DILocation(line: 0, scope: !17145)
!17150 = !DILocation(line: 185, column: 8, scope: !17145)
!17151 = !DILocation(line: 186, column: 2, scope: !17145)
!17152 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2907, file: !2907, line: 665, type: !16360, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17153)
!17153 = !{!17154, !17155, !17157}
!17154 = !DILocalVariable(name: "thread", arg: 1, scope: !17152, file: !2907, line: 665, type: !2800)
!17155 = !DILocalVariable(name: "__i", scope: !17156, file: !2907, line: 671, type: !16394)
!17156 = distinct !DILexicalBlock(scope: !17152, file: !2907, line: 671, column: 2)
!17157 = !DILocalVariable(name: "__key", scope: !17156, file: !2907, line: 671, type: !16394)
!17158 = !DILocation(line: 0, scope: !17152)
!17159 = !DILocation(line: 669, column: 8, scope: !17152)
!17160 = !DILocation(line: 0, scope: !17156)
!17161 = !DILocation(line: 0, scope: !16402, inlinedAt: !17162)
!17162 = distinct !DILocation(line: 671, column: 2, scope: !17156)
!17163 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17164)
!17164 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17162)
!17165 = !DILocation(line: 0, scope: !16411, inlinedAt: !17164)
!17166 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17162)
!17167 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17162)
!17168 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17162)
!17169 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17162)
!17170 = !DILocation(line: 672, column: 7, scope: !17171)
!17171 = distinct !DILexicalBlock(scope: !17172, file: !2907, line: 672, column: 7)
!17172 = distinct !DILexicalBlock(scope: !17173, file: !2907, line: 671, column: 26)
!17173 = distinct !DILexicalBlock(scope: !17156, file: !2907, line: 671, column: 2)
!17174 = !DILocation(line: 672, column: 7, scope: !17172)
!17175 = !DILocation(line: 0, scope: !16594, inlinedAt: !17176)
!17176 = distinct !DILocation(line: 673, column: 4, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17171, file: !2907, line: 672, column: 35)
!17178 = !DILocation(line: 266, column: 15, scope: !16594, inlinedAt: !17176)
!17179 = !DILocation(line: 266, column: 28, scope: !16594, inlinedAt: !17176)
!17180 = !DILocation(line: 0, scope: !16602, inlinedAt: !17181)
!17181 = distinct !DILocation(line: 268, column: 3, scope: !16606, inlinedAt: !17176)
!17182 = !DILocation(line: 234, column: 2, scope: !16602, inlinedAt: !17181)
!17183 = !DILocation(line: 674, column: 3, scope: !17177)
!17184 = !DILocation(line: 675, column: 3, scope: !17172)
!17185 = !DILocation(line: 676, column: 26, scope: !17172)
!17186 = !DILocation(line: 676, column: 23, scope: !17172)
!17187 = !DILocation(line: 676, column: 3, scope: !17172)
!17188 = !DILocation(line: 0, scope: !16436, inlinedAt: !17189)
!17189 = distinct !DILocation(line: 671, column: 2, scope: !17173)
!17190 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17189)
!17191 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17189)
!17192 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17189)
!17193 = !DILocation(line: 0, scope: !16450, inlinedAt: !17194)
!17194 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17189)
!17195 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17194)
!17196 = !DILocation(line: 679, column: 16, scope: !17197)
!17197 = distinct !DILexicalBlock(scope: !17152, file: !2907, line: 679, column: 6)
!17198 = !DILocation(line: 679, column: 13, scope: !17197)
!17199 = !DILocation(line: 679, column: 6, scope: !17152)
!17200 = !DILocation(line: 680, column: 3, scope: !17201)
!17201 = distinct !DILexicalBlock(scope: !17197, file: !2907, line: 679, column: 26)
!17202 = !DILocation(line: 681, column: 2, scope: !17201)
!17203 = !DILocation(line: 684, column: 1, scope: !17152)
!17204 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !15132, file: !15132, line: 52, type: !16378, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17205)
!17205 = !{!17206}
!17206 = !DILocalVariable(name: "thread", arg: 1, scope: !17204, file: !15132, line: 52, type: !2800)
!17207 = !DILocation(line: 0, scope: !17204)
!17208 = !DILocation(line: 54, column: 39, scope: !17204)
!17209 = !DILocation(line: 54, column: 9, scope: !17204)
!17210 = !DILocation(line: 54, column: 2, scope: !17204)
!17211 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14725, file: !14725, line: 141, type: !16360, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17212)
!17212 = !{!17213}
!17213 = !DILocalVariable(name: "thread", arg: 1, scope: !17211, file: !14725, line: 141, type: !2800)
!17214 = !DILocation(line: 0, scope: !17211)
!17215 = !DILocation(line: 143, column: 15, scope: !17211)
!17216 = !DILocation(line: 143, column: 28, scope: !17211)
!17217 = !DILocation(line: 146, column: 1, scope: !17211)
!17218 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14725, file: !14725, line: 73, type: !323, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !2501)
!17219 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17220)
!17220 = distinct !DILocation(line: 75, column: 30, scope: !17218)
!17221 = !DILocation(line: 0, scope: !16411, inlinedAt: !17220)
!17222 = !DILocation(line: 75, column: 9, scope: !17218)
!17223 = !DILocation(line: 76, column: 1, scope: !17218)
!17224 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2907, file: !2907, line: 977, type: !7962, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17225)
!17225 = !{!17226}
!17226 = !DILocalVariable(name: "key", arg: 1, scope: !17224, file: !2907, line: 977, type: !111)
!17227 = !DILocation(line: 0, scope: !17224)
!17228 = !DILocation(line: 979, column: 6, scope: !17229)
!17229 = distinct !DILexicalBlock(scope: !17224, file: !2907, line: 979, column: 6)
!17230 = !DILocation(line: 979, column: 6, scope: !17224)
!17231 = !DILocation(line: 980, column: 3, scope: !17232)
!17232 = distinct !DILexicalBlock(scope: !17229, file: !2907, line: 979, column: 20)
!17233 = !DILocation(line: 981, column: 2, scope: !17232)
!17234 = !DILocation(line: 0, scope: !16450, inlinedAt: !17235)
!17235 = distinct !DILocation(line: 982, column: 3, scope: !17236)
!17236 = distinct !DILexicalBlock(scope: !17229, file: !2907, line: 981, column: 9)
!17237 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17235)
!17238 = !DILocation(line: 985, column: 1, scope: !17224)
!17239 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2907, file: !2907, line: 695, type: !16360, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17240)
!17240 = !{!17241, !17242}
!17241 = !DILocalVariable(name: "thread", arg: 1, scope: !17239, file: !2907, line: 695, type: !2800)
!17242 = !DILocalVariable(name: "key", scope: !17239, file: !2907, line: 699, type: !16394)
!17243 = !DILocation(line: 0, scope: !17239)
!17244 = !DILocation(line: 0, scope: !16402, inlinedAt: !17245)
!17245 = distinct !DILocation(line: 699, column: 25, scope: !17239)
!17246 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17247)
!17247 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17245)
!17248 = !DILocation(line: 0, scope: !16411, inlinedAt: !17247)
!17249 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17245)
!17250 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17245)
!17251 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17245)
!17252 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17245)
!17253 = !DILocation(line: 702, column: 7, scope: !17254)
!17254 = distinct !DILexicalBlock(scope: !17239, file: !2907, line: 702, column: 6)
!17255 = !DILocation(line: 702, column: 6, scope: !17239)
!17256 = !DILocation(line: 0, scope: !16436, inlinedAt: !17257)
!17257 = distinct !DILocation(line: 703, column: 3, scope: !17258)
!17258 = distinct !DILexicalBlock(scope: !17254, file: !2907, line: 702, column: 38)
!17259 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17257)
!17260 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17257)
!17261 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17257)
!17262 = !DILocation(line: 0, scope: !16450, inlinedAt: !17263)
!17263 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17257)
!17264 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17263)
!17265 = !DILocation(line: 704, column: 3, scope: !17258)
!17266 = !DILocation(line: 707, column: 2, scope: !17239)
!17267 = !DILocation(line: 708, column: 2, scope: !17239)
!17268 = !DILocation(line: 710, column: 2, scope: !17239)
!17269 = !DILocation(line: 713, column: 1, scope: !17239)
!17270 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14725, file: !14725, line: 96, type: !16543, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17271)
!17271 = !{!17272}
!17272 = !DILocalVariable(name: "thread", arg: 1, scope: !17270, file: !14725, line: 96, type: !2800)
!17273 = !DILocation(line: 0, scope: !17270)
!17274 = !DILocation(line: 98, column: 23, scope: !17270)
!17275 = !DILocation(line: 98, column: 36, scope: !17270)
!17276 = !DILocation(line: 98, column: 57, scope: !17270)
!17277 = !DILocation(line: 98, column: 2, scope: !17270)
!17278 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14725, file: !14725, line: 148, type: !16360, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17279)
!17279 = !{!17280}
!17280 = !DILocalVariable(name: "thread", arg: 1, scope: !17278, file: !14725, line: 148, type: !2800)
!17281 = !DILocation(line: 0, scope: !17278)
!17282 = !DILocation(line: 150, column: 15, scope: !17278)
!17283 = !DILocation(line: 150, column: 28, scope: !17278)
!17284 = !DILocation(line: 153, column: 1, scope: !17278)
!17285 = distinct !DISubprogram(name: "z_pend_thread", scope: !2907, file: !2907, line: 770, type: !17286, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17292)
!17286 = !DISubroutineType(types: !17287)
!17287 = !{null, !2800, !2831, !17288}
!17288 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !17289)
!17289 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !17290)
!17290 = !{!17291}
!17291 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17289, file: !105, line: 66, baseType: !104, size: 64)
!17292 = !{!17293, !17294, !17295, !17296, !17298}
!17293 = !DILocalVariable(name: "thread", arg: 1, scope: !17285, file: !2907, line: 770, type: !2800)
!17294 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17285, file: !2907, line: 770, type: !2831)
!17295 = !DILocalVariable(name: "timeout", arg: 3, scope: !17285, file: !2907, line: 771, type: !17288)
!17296 = !DILocalVariable(name: "__i", scope: !17297, file: !2907, line: 774, type: !16394)
!17297 = distinct !DILexicalBlock(scope: !17285, file: !2907, line: 774, column: 2)
!17298 = !DILocalVariable(name: "__key", scope: !17297, file: !2907, line: 774, type: !16394)
!17299 = !DILocation(line: 0, scope: !17285)
!17300 = !DILocation(line: 773, column: 2, scope: !17301)
!17301 = distinct !DILexicalBlock(scope: !17302, file: !2907, line: 773, column: 2)
!17302 = distinct !DILexicalBlock(scope: !17285, file: !2907, line: 773, column: 2)
!17303 = !DILocation(line: 773, column: 2, scope: !17302)
!17304 = !DILocation(line: 773, column: 2, scope: !17305)
!17305 = distinct !DILexicalBlock(scope: !17301, file: !2907, line: 773, column: 2)
!17306 = !DILocation(line: 0, scope: !17297)
!17307 = !DILocation(line: 0, scope: !16402, inlinedAt: !17308)
!17308 = distinct !DILocation(line: 774, column: 2, scope: !17297)
!17309 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17310)
!17310 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17308)
!17311 = !DILocation(line: 0, scope: !16411, inlinedAt: !17310)
!17312 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17308)
!17313 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17308)
!17314 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17308)
!17315 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17308)
!17316 = !DILocation(line: 775, column: 3, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17318, file: !2907, line: 774, column: 26)
!17318 = distinct !DILexicalBlock(scope: !17297, file: !2907, line: 774, column: 2)
!17319 = !DILocation(line: 0, scope: !16436, inlinedAt: !17320)
!17320 = distinct !DILocation(line: 774, column: 2, scope: !17318)
!17321 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17320)
!17322 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17320)
!17323 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17320)
!17324 = !DILocation(line: 0, scope: !16450, inlinedAt: !17325)
!17325 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17320)
!17326 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17325)
!17327 = !DILocation(line: 777, column: 1, scope: !17285)
!17328 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2907, file: !2907, line: 79, type: !16543, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17329)
!17329 = !{!17330}
!17330 = !DILocalVariable(name: "thread", arg: 1, scope: !17328, file: !2907, line: 79, type: !2800)
!17331 = !DILocation(line: 0, scope: !17328)
!17332 = !DILocation(line: 81, column: 23, scope: !17328)
!17333 = !DILocation(line: 81, column: 36, scope: !17328)
!17334 = !DILocation(line: 81, column: 53, scope: !17328)
!17335 = !DILocation(line: 81, column: 2, scope: !17328)
!17336 = distinct !DISubprogram(name: "pend_locked", scope: !2907, file: !2907, line: 760, type: !17286, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17337)
!17337 = !{!17338, !17339, !17340}
!17338 = !DILocalVariable(name: "thread", arg: 1, scope: !17336, file: !2907, line: 760, type: !2800)
!17339 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17336, file: !2907, line: 760, type: !2831)
!17340 = !DILocalVariable(name: "timeout", arg: 3, scope: !17336, file: !2907, line: 761, type: !17288)
!17341 = !DILocation(line: 0, scope: !17336)
!17342 = !DILocation(line: 766, column: 2, scope: !17336)
!17343 = !DILocation(line: 767, column: 2, scope: !17336)
!17344 = !DILocation(line: 768, column: 1, scope: !17336)
!17345 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2907, file: !2907, line: 740, type: !17346, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17348)
!17346 = !DISubroutineType(types: !17347)
!17347 = !{null, !2800, !2831}
!17348 = !{!17349, !17350}
!17349 = !DILocalVariable(name: "thread", arg: 1, scope: !17345, file: !2907, line: 740, type: !2800)
!17350 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17345, file: !2907, line: 740, type: !2831)
!17351 = !DILocation(line: 0, scope: !17345)
!17352 = !DILocation(line: 742, column: 2, scope: !17345)
!17353 = !DILocation(line: 743, column: 2, scope: !17345)
!17354 = !DILocation(line: 747, column: 13, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !17345, file: !2907, line: 747, column: 6)
!17356 = !DILocation(line: 747, column: 6, scope: !17345)
!17357 = !DILocation(line: 748, column: 16, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17355, file: !2907, line: 747, column: 22)
!17359 = !DILocation(line: 748, column: 26, scope: !17358)
!17360 = !DILocation(line: 749, column: 28, scope: !17358)
!17361 = !DILocation(line: 0, scope: !16625, inlinedAt: !17362)
!17362 = distinct !DILocation(line: 749, column: 3, scope: !17358)
!17363 = !DILocation(line: 186, column: 2, scope: !16635, inlinedAt: !17362)
!17364 = !DILocation(line: 186, column: 2, scope: !16636, inlinedAt: !17362)
!17365 = !DILocation(line: 186, column: 2, scope: !16639, inlinedAt: !17362)
!17366 = !DILocation(line: 188, column: 2, scope: !16641, inlinedAt: !17362)
!17367 = !DILocation(line: 188, column: 2, scope: !16643, inlinedAt: !17362)
!17368 = !DILocation(line: 0, scope: !16641, inlinedAt: !17362)
!17369 = !DILocation(line: 189, column: 7, scope: !16646, inlinedAt: !17362)
!17370 = !DILocation(line: 189, column: 35, scope: !16646, inlinedAt: !17362)
!17371 = !DILocation(line: 189, column: 7, scope: !16647, inlinedAt: !17362)
!17372 = !DILocation(line: 191, column: 21, scope: !16651, inlinedAt: !17362)
!17373 = !DILocation(line: 190, column: 4, scope: !16651, inlinedAt: !17362)
!17374 = !DILocation(line: 192, column: 4, scope: !16651, inlinedAt: !17362)
!17375 = distinct !{!17375, !17366, !17376}
!17376 = !DILocation(line: 194, column: 2, scope: !16641, inlinedAt: !17362)
!17377 = !DILocation(line: 196, column: 37, scope: !16625, inlinedAt: !17362)
!17378 = !DILocation(line: 196, column: 2, scope: !16625, inlinedAt: !17362)
!17379 = !DILocation(line: 197, column: 1, scope: !16625, inlinedAt: !17362)
!17380 = !DILocation(line: 751, column: 1, scope: !17345)
!17381 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2907, file: !2907, line: 753, type: !17382, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17384)
!17382 = !DISubroutineType(types: !17383)
!17383 = !{null, !2800, !17288}
!17384 = !{!17385, !17386}
!17385 = !DILocalVariable(name: "thread", arg: 1, scope: !17381, file: !2907, line: 753, type: !2800)
!17386 = !DILocalVariable(name: "timeout", arg: 2, scope: !17381, file: !2907, line: 753, type: !17288)
!17387 = !DILocation(line: 0, scope: !17381)
!17388 = !DILocation(line: 755, column: 7, scope: !17389)
!17389 = distinct !DILexicalBlock(scope: !17381, file: !2907, line: 755, column: 6)
!17390 = !DILocation(line: 755, column: 6, scope: !17381)
!17391 = !DILocation(line: 756, column: 3, scope: !17392)
!17392 = distinct !DILexicalBlock(scope: !17389, file: !2907, line: 755, column: 41)
!17393 = !DILocation(line: 757, column: 2, scope: !17392)
!17394 = !DILocation(line: 758, column: 1, scope: !17381)
!17395 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15132, file: !15132, line: 47, type: !17382, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17396)
!17396 = !{!17397, !17398}
!17397 = !DILocalVariable(name: "thread", arg: 1, scope: !17395, file: !15132, line: 47, type: !2800)
!17398 = !DILocalVariable(name: "ticks", arg: 2, scope: !17395, file: !15132, line: 47, type: !17288)
!17399 = !DILocation(line: 0, scope: !17395)
!17400 = !DILocation(line: 49, column: 30, scope: !17395)
!17401 = !DILocation(line: 49, column: 2, scope: !17395)
!17402 = !DILocation(line: 50, column: 1, scope: !17395)
!17403 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2907, file: !2907, line: 795, type: !2857, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17404)
!17404 = !{!17405, !17406, !17407, !17409, !17410}
!17405 = !DILocalVariable(name: "timeout", arg: 1, scope: !17403, file: !2907, line: 795, type: !2859)
!17406 = !DILocalVariable(name: "thread", scope: !17403, file: !2907, line: 797, type: !2800)
!17407 = !DILocalVariable(name: "__i", scope: !17408, file: !2907, line: 800, type: !16394)
!17408 = distinct !DILexicalBlock(scope: !17403, file: !2907, line: 800, column: 2)
!17409 = !DILocalVariable(name: "__key", scope: !17408, file: !2907, line: 800, type: !16394)
!17410 = !DILocalVariable(name: "killed", scope: !17411, file: !2907, line: 801, type: !122)
!17411 = distinct !DILexicalBlock(scope: !17412, file: !2907, line: 800, column: 26)
!17412 = distinct !DILexicalBlock(scope: !17408, file: !2907, line: 800, column: 2)
!17413 = !DILocation(line: 0, scope: !17403)
!17414 = !DILocation(line: 797, column: 28, scope: !17403)
!17415 = !DILocation(line: 0, scope: !17408)
!17416 = !DILocation(line: 0, scope: !16402, inlinedAt: !17417)
!17417 = distinct !DILocation(line: 800, column: 2, scope: !17408)
!17418 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17419)
!17419 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17417)
!17420 = !DILocation(line: 0, scope: !16411, inlinedAt: !17419)
!17421 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17417)
!17422 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17417)
!17423 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17417)
!17424 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17417)
!17425 = !DILocation(line: 801, column: 27, scope: !17411)
!17426 = !DILocation(line: 801, column: 32, scope: !17411)
!17427 = !DILocation(line: 801, column: 61, scope: !17411)
!17428 = !DILocation(line: 0, scope: !17411)
!17429 = !DILocation(line: 804, column: 7, scope: !17411)
!17430 = !DILocation(line: 805, column: 21, scope: !17431)
!17431 = distinct !DILexicalBlock(scope: !17432, file: !2907, line: 805, column: 8)
!17432 = distinct !DILexicalBlock(scope: !17433, file: !2907, line: 804, column: 16)
!17433 = distinct !DILexicalBlock(scope: !17411, file: !2907, line: 804, column: 7)
!17434 = !DILocation(line: 805, column: 31, scope: !17431)
!17435 = !DILocation(line: 805, column: 8, scope: !17432)
!17436 = !DILocation(line: 806, column: 5, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17431, file: !2907, line: 805, column: 40)
!17438 = !DILocation(line: 807, column: 4, scope: !17437)
!17439 = !DILocation(line: 808, column: 4, scope: !17432)
!17440 = !DILocation(line: 809, column: 4, scope: !17432)
!17441 = !DILocation(line: 810, column: 4, scope: !17432)
!17442 = !DILocation(line: 811, column: 3, scope: !17432)
!17443 = !DILocation(line: 0, scope: !16436, inlinedAt: !17444)
!17444 = distinct !DILocation(line: 800, column: 2, scope: !17412)
!17445 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17444)
!17446 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17444)
!17447 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17444)
!17448 = !DILocation(line: 0, scope: !16450, inlinedAt: !17449)
!17449 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17444)
!17450 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17449)
!17451 = !DILocation(line: 813, column: 1, scope: !17403)
!17452 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2907, file: !2907, line: 779, type: !16360, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17453)
!17453 = !{!17454}
!17454 = !DILocalVariable(name: "thread", arg: 1, scope: !17452, file: !2907, line: 779, type: !2800)
!17455 = !DILocation(line: 0, scope: !17452)
!17456 = !DILocation(line: 781, column: 21, scope: !17452)
!17457 = !DILocation(line: 781, column: 2, scope: !17452)
!17458 = !DILocation(line: 782, column: 2, scope: !17452)
!17459 = !DILocation(line: 783, column: 15, scope: !17452)
!17460 = !DILocation(line: 783, column: 25, scope: !17452)
!17461 = !DILocation(line: 784, column: 1, scope: !17452)
!17462 = distinct !DISubprogram(name: "pended_on_thread", scope: !2907, file: !2907, line: 724, type: !17463, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17465)
!17463 = !DISubroutineType(types: !17464)
!17464 = !{!2831, !2800}
!17465 = !{!17466}
!17466 = !DILocalVariable(name: "thread", arg: 1, scope: !17462, file: !2907, line: 724, type: !2800)
!17467 = !DILocation(line: 0, scope: !17462)
!17468 = !DILocation(line: 726, column: 2, scope: !17469)
!17469 = distinct !DILexicalBlock(scope: !17470, file: !2907, line: 726, column: 2)
!17470 = distinct !DILexicalBlock(scope: !17462, file: !2907, line: 726, column: 2)
!17471 = !DILocation(line: 726, column: 2, scope: !17470)
!17472 = !DILocation(line: 726, column: 2, scope: !17473)
!17473 = distinct !DILexicalBlock(scope: !17469, file: !2907, line: 726, column: 2)
!17474 = !DILocation(line: 728, column: 2, scope: !17462)
!17475 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14725, file: !14725, line: 165, type: !16360, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17476)
!17476 = !{!17477}
!17477 = !DILocalVariable(name: "thread", arg: 1, scope: !17475, file: !14725, line: 165, type: !2800)
!17478 = !DILocation(line: 0, scope: !17475)
!17479 = !DILocation(line: 167, column: 15, scope: !17475)
!17480 = !DILocation(line: 167, column: 28, scope: !17475)
!17481 = !DILocation(line: 168, column: 1, scope: !17475)
!17482 = distinct !DISubprogram(name: "unready_thread", scope: !2907, file: !2907, line: 731, type: !16360, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17483)
!17483 = !{!17484}
!17484 = !DILocalVariable(name: "thread", arg: 1, scope: !17482, file: !2907, line: 731, type: !2800)
!17485 = !DILocation(line: 0, scope: !17482)
!17486 = !DILocation(line: 733, column: 6, scope: !17487)
!17487 = distinct !DILexicalBlock(scope: !17482, file: !2907, line: 733, column: 6)
!17488 = !DILocation(line: 733, column: 6, scope: !17482)
!17489 = !DILocation(line: 0, scope: !16594, inlinedAt: !17490)
!17490 = distinct !DILocation(line: 734, column: 3, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17487, file: !2907, line: 733, column: 34)
!17492 = !DILocation(line: 266, column: 15, scope: !16594, inlinedAt: !17490)
!17493 = !DILocation(line: 266, column: 28, scope: !16594, inlinedAt: !17490)
!17494 = !DILocation(line: 0, scope: !16602, inlinedAt: !17495)
!17495 = distinct !DILocation(line: 268, column: 3, scope: !16606, inlinedAt: !17490)
!17496 = !DILocation(line: 234, column: 2, scope: !16602, inlinedAt: !17495)
!17497 = !DILocation(line: 735, column: 2, scope: !17491)
!17498 = !DILocation(line: 736, column: 25, scope: !17482)
!17499 = !DILocation(line: 736, column: 22, scope: !17482)
!17500 = !DILocation(line: 736, column: 2, scope: !17482)
!17501 = !DILocation(line: 737, column: 1, scope: !17482)
!17502 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14725, file: !14725, line: 160, type: !16360, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17503)
!17503 = !{!17504}
!17504 = !DILocalVariable(name: "thread", arg: 1, scope: !17502, file: !14725, line: 160, type: !2800)
!17505 = !DILocation(line: 0, scope: !17502)
!17506 = !DILocation(line: 162, column: 15, scope: !17502)
!17507 = !DILocation(line: 162, column: 28, scope: !17502)
!17508 = !DILocation(line: 163, column: 1, scope: !17502)
!17509 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2907, file: !2907, line: 786, type: !16360, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17510)
!17510 = !{!17511, !17512, !17514}
!17511 = !DILocalVariable(name: "thread", arg: 1, scope: !17509, file: !2907, line: 786, type: !2800)
!17512 = !DILocalVariable(name: "__i", scope: !17513, file: !2907, line: 788, type: !16394)
!17513 = distinct !DILexicalBlock(scope: !17509, file: !2907, line: 788, column: 2)
!17514 = !DILocalVariable(name: "__key", scope: !17513, file: !2907, line: 788, type: !16394)
!17515 = !DILocation(line: 0, scope: !17509)
!17516 = !DILocation(line: 0, scope: !17513)
!17517 = !DILocation(line: 0, scope: !16402, inlinedAt: !17518)
!17518 = distinct !DILocation(line: 788, column: 2, scope: !17513)
!17519 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17520)
!17520 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17518)
!17521 = !DILocation(line: 0, scope: !16411, inlinedAt: !17520)
!17522 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17518)
!17523 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17518)
!17524 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17518)
!17525 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17518)
!17526 = !DILocation(line: 789, column: 3, scope: !17527)
!17527 = distinct !DILexicalBlock(scope: !17528, file: !2907, line: 788, column: 26)
!17528 = distinct !DILexicalBlock(scope: !17513, file: !2907, line: 788, column: 2)
!17529 = !DILocation(line: 0, scope: !16436, inlinedAt: !17530)
!17530 = distinct !DILocation(line: 788, column: 2, scope: !17528)
!17531 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17530)
!17532 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17530)
!17533 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17530)
!17534 = !DILocation(line: 0, scope: !16450, inlinedAt: !17535)
!17535 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17530)
!17536 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17535)
!17537 = !DILocation(line: 791, column: 1, scope: !17509)
!17538 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2907, file: !2907, line: 816, type: !17539, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17541)
!17539 = !DISubroutineType(types: !17540)
!17540 = !{!103, !111, !2831, !17288}
!17541 = !{!17542, !17543, !17544, !17545, !17546, !17548}
!17542 = !DILocalVariable(name: "key", arg: 1, scope: !17538, file: !2907, line: 816, type: !111)
!17543 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17538, file: !2907, line: 816, type: !2831)
!17544 = !DILocalVariable(name: "timeout", arg: 3, scope: !17538, file: !2907, line: 816, type: !17288)
!17545 = !DILocalVariable(name: "ret", scope: !17538, file: !2907, line: 828, type: !103)
!17546 = !DILocalVariable(name: "__i", scope: !17547, file: !2907, line: 829, type: !16394)
!17547 = distinct !DILexicalBlock(scope: !17538, file: !2907, line: 829, column: 2)
!17548 = !DILocalVariable(name: "__key", scope: !17547, file: !2907, line: 829, type: !16394)
!17549 = !DILocation(line: 0, scope: !17538)
!17550 = !DILocation(line: 823, column: 14, scope: !17538)
!17551 = !DILocation(line: 823, column: 2, scope: !17538)
!17552 = !DILocation(line: 826, column: 20, scope: !17538)
!17553 = !DILocation(line: 826, column: 18, scope: !17538)
!17554 = !DILocation(line: 828, column: 12, scope: !17538)
!17555 = !DILocation(line: 0, scope: !17547)
!17556 = !DILocation(line: 0, scope: !16402, inlinedAt: !17557)
!17557 = distinct !DILocation(line: 829, column: 2, scope: !17547)
!17558 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17559)
!17559 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17557)
!17560 = !DILocation(line: 0, scope: !16411, inlinedAt: !17559)
!17561 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17557)
!17562 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17557)
!17563 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17557)
!17564 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17557)
!17565 = !DILocation(line: 830, column: 7, scope: !17566)
!17566 = distinct !DILexicalBlock(scope: !17567, file: !2907, line: 830, column: 7)
!17567 = distinct !DILexicalBlock(scope: !17568, file: !2907, line: 829, column: 26)
!17568 = distinct !DILexicalBlock(scope: !17547, file: !2907, line: 829, column: 2)
!17569 = !DILocation(line: 830, column: 26, scope: !17566)
!17570 = !DILocation(line: 830, column: 23, scope: !17566)
!17571 = !DILocation(line: 830, column: 7, scope: !17567)
!17572 = !DILocation(line: 831, column: 20, scope: !17573)
!17573 = distinct !DILexicalBlock(scope: !17566, file: !2907, line: 830, column: 36)
!17574 = !DILocation(line: 832, column: 3, scope: !17573)
!17575 = !DILocation(line: 0, scope: !16436, inlinedAt: !17576)
!17576 = distinct !DILocation(line: 829, column: 2, scope: !17568)
!17577 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17576)
!17578 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17576)
!17579 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17576)
!17580 = !DILocation(line: 0, scope: !16450, inlinedAt: !17581)
!17581 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17576)
!17582 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17581)
!17583 = !DILocation(line: 834, column: 2, scope: !17538)
!17584 = distinct !DISubprogram(name: "z_pend_curr", scope: !2907, file: !2907, line: 840, type: !17585, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17587)
!17585 = !DISubroutineType(types: !17586)
!17586 = !{!103, !16405, !16394, !2831, !17288}
!17587 = !{!17588, !17589, !17590, !17591}
!17588 = !DILocalVariable(name: "lock", arg: 1, scope: !17584, file: !2907, line: 840, type: !16405)
!17589 = !DILocalVariable(name: "key", arg: 2, scope: !17584, file: !2907, line: 840, type: !16394)
!17590 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17584, file: !2907, line: 841, type: !2831)
!17591 = !DILocalVariable(name: "timeout", arg: 4, scope: !17584, file: !2907, line: 841, type: !17288)
!17592 = !DILocation(line: 0, scope: !17584)
!17593 = !DILocation(line: 844, column: 20, scope: !17584)
!17594 = !DILocation(line: 844, column: 18, scope: !17584)
!17595 = !DILocation(line: 846, column: 2, scope: !17596)
!17596 = distinct !DILexicalBlock(scope: !17597, file: !2907, line: 846, column: 2)
!17597 = distinct !DILexicalBlock(scope: !17584, file: !2907, line: 846, column: 2)
!17598 = !DILocation(line: 846, column: 2, scope: !17597)
!17599 = !DILocation(line: 846, column: 2, scope: !17600)
!17600 = distinct !DILexicalBlock(scope: !17596, file: !2907, line: 846, column: 2)
!17601 = !DILocation(line: 0, scope: !16402, inlinedAt: !17602)
!17602 = distinct !DILocation(line: 856, column: 9, scope: !17584)
!17603 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17604)
!17604 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17602)
!17605 = !DILocation(line: 0, scope: !16411, inlinedAt: !17604)
!17606 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17602)
!17607 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17602)
!17608 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17602)
!17609 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17602)
!17610 = !DILocation(line: 857, column: 14, scope: !17584)
!17611 = !DILocation(line: 857, column: 2, scope: !17584)
!17612 = !DILocation(line: 0, scope: !17087, inlinedAt: !17613)
!17613 = distinct !DILocation(line: 858, column: 2, scope: !17584)
!17614 = !DILocation(line: 225, column: 2, scope: !17094, inlinedAt: !17613)
!17615 = !DILocation(line: 225, column: 2, scope: !17095, inlinedAt: !17613)
!17616 = !DILocation(line: 225, column: 2, scope: !17098, inlinedAt: !17613)
!17617 = !DILocation(line: 0, scope: !17078, inlinedAt: !17618)
!17618 = distinct !DILocation(line: 859, column: 9, scope: !17584)
!17619 = !DILocation(line: 0, scope: !17087, inlinedAt: !17620)
!17620 = distinct !DILocation(line: 195, column: 2, scope: !17078, inlinedAt: !17618)
!17621 = !DILocation(line: 225, column: 2, scope: !17094, inlinedAt: !17620)
!17622 = !DILocation(line: 225, column: 2, scope: !17095, inlinedAt: !17620)
!17623 = !DILocation(line: 225, column: 2, scope: !17098, inlinedAt: !17620)
!17624 = !DILocation(line: 196, column: 9, scope: !17078, inlinedAt: !17618)
!17625 = !DILocation(line: 859, column: 2, scope: !17584)
!17626 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2907, file: !2907, line: 862, type: !17627, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17629)
!17627 = !DISubroutineType(types: !17628)
!17628 = !{!2800, !2831}
!17629 = !{!17630, !17631, !17632, !17634}
!17630 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17626, file: !2907, line: 862, type: !2831)
!17631 = !DILocalVariable(name: "thread", scope: !17626, file: !2907, line: 864, type: !2800)
!17632 = !DILocalVariable(name: "__i", scope: !17633, file: !2907, line: 866, type: !16394)
!17633 = distinct !DILexicalBlock(scope: !17626, file: !2907, line: 866, column: 2)
!17634 = !DILocalVariable(name: "__key", scope: !17633, file: !2907, line: 866, type: !16394)
!17635 = !DILocation(line: 0, scope: !17626)
!17636 = !DILocation(line: 0, scope: !17633)
!17637 = !DILocation(line: 0, scope: !16402, inlinedAt: !17638)
!17638 = distinct !DILocation(line: 866, column: 2, scope: !17633)
!17639 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17640)
!17640 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17638)
!17641 = !DILocation(line: 0, scope: !16411, inlinedAt: !17640)
!17642 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17638)
!17643 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17638)
!17644 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17638)
!17645 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17638)
!17646 = !DILocation(line: 867, column: 12, scope: !17647)
!17647 = distinct !DILexicalBlock(scope: !17648, file: !2907, line: 866, column: 26)
!17648 = distinct !DILexicalBlock(scope: !17633, file: !2907, line: 866, column: 2)
!17649 = !DILocation(line: 869, column: 14, scope: !17650)
!17650 = distinct !DILexicalBlock(scope: !17647, file: !2907, line: 869, column: 7)
!17651 = !DILocation(line: 869, column: 7, scope: !17647)
!17652 = !DILocation(line: 870, column: 4, scope: !17653)
!17653 = distinct !DILexicalBlock(scope: !17650, file: !2907, line: 869, column: 23)
!17654 = !DILocation(line: 871, column: 3, scope: !17653)
!17655 = !DILocation(line: 0, scope: !16436, inlinedAt: !17656)
!17656 = distinct !DILocation(line: 866, column: 2, scope: !17648)
!17657 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17656)
!17658 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17656)
!17659 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17656)
!17660 = !DILocation(line: 0, scope: !16450, inlinedAt: !17661)
!17661 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17656)
!17662 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17661)
!17663 = !DILocation(line: 874, column: 2, scope: !17626)
!17664 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2907, file: !2907, line: 877, type: !17627, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17665)
!17665 = !{!17666, !17667, !17668, !17670}
!17666 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17664, file: !2907, line: 877, type: !2831)
!17667 = !DILocalVariable(name: "thread", scope: !17664, file: !2907, line: 879, type: !2800)
!17668 = !DILocalVariable(name: "__i", scope: !17669, file: !2907, line: 881, type: !16394)
!17669 = distinct !DILexicalBlock(scope: !17664, file: !2907, line: 881, column: 2)
!17670 = !DILocalVariable(name: "__key", scope: !17669, file: !2907, line: 881, type: !16394)
!17671 = !DILocation(line: 0, scope: !17664)
!17672 = !DILocation(line: 0, scope: !17669)
!17673 = !DILocation(line: 0, scope: !16402, inlinedAt: !17674)
!17674 = distinct !DILocation(line: 881, column: 2, scope: !17669)
!17675 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17676)
!17676 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17674)
!17677 = !DILocation(line: 0, scope: !16411, inlinedAt: !17676)
!17678 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17674)
!17679 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17674)
!17680 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17674)
!17681 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17674)
!17682 = !DILocation(line: 882, column: 12, scope: !17683)
!17683 = distinct !DILexicalBlock(scope: !17684, file: !2907, line: 881, column: 26)
!17684 = distinct !DILexicalBlock(scope: !17669, file: !2907, line: 881, column: 2)
!17685 = !DILocation(line: 884, column: 14, scope: !17686)
!17686 = distinct !DILexicalBlock(scope: !17683, file: !2907, line: 884, column: 7)
!17687 = !DILocation(line: 884, column: 7, scope: !17683)
!17688 = !DILocation(line: 885, column: 4, scope: !17689)
!17689 = distinct !DILexicalBlock(scope: !17686, file: !2907, line: 884, column: 23)
!17690 = !DILocation(line: 886, column: 10, scope: !17689)
!17691 = !DILocation(line: 887, column: 3, scope: !17689)
!17692 = !DILocation(line: 0, scope: !16436, inlinedAt: !17693)
!17693 = distinct !DILocation(line: 881, column: 2, scope: !17684)
!17694 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17693)
!17695 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17693)
!17696 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17693)
!17697 = !DILocation(line: 0, scope: !16450, inlinedAt: !17698)
!17698 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17693)
!17699 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17698)
!17700 = !DILocation(line: 890, column: 2, scope: !17664)
!17701 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2907, file: !2907, line: 893, type: !16360, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17702)
!17702 = !{!17703}
!17703 = !DILocalVariable(name: "thread", arg: 1, scope: !17701, file: !2907, line: 893, type: !2800)
!17704 = !DILocation(line: 0, scope: !17701)
!17705 = !DILocation(line: 0, scope: !17509, inlinedAt: !17706)
!17706 = distinct !DILocation(line: 895, column: 2, scope: !17701)
!17707 = !DILocation(line: 0, scope: !17513, inlinedAt: !17706)
!17708 = !DILocation(line: 0, scope: !16402, inlinedAt: !17709)
!17709 = distinct !DILocation(line: 788, column: 2, scope: !17513, inlinedAt: !17706)
!17710 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17711)
!17711 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17709)
!17712 = !DILocation(line: 0, scope: !16411, inlinedAt: !17711)
!17713 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17709)
!17714 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17709)
!17715 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17709)
!17716 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17709)
!17717 = !DILocation(line: 789, column: 3, scope: !17527, inlinedAt: !17706)
!17718 = !DILocation(line: 0, scope: !16436, inlinedAt: !17719)
!17719 = distinct !DILocation(line: 788, column: 2, scope: !17528, inlinedAt: !17706)
!17720 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17719)
!17721 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17719)
!17722 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17719)
!17723 = !DILocation(line: 0, scope: !16450, inlinedAt: !17724)
!17724 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17719)
!17725 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17724)
!17726 = !DILocation(line: 896, column: 8, scope: !17701)
!17727 = !DILocation(line: 897, column: 1, scope: !17701)
!17728 = distinct !DISubprogram(name: "z_set_prio", scope: !2907, file: !2907, line: 902, type: !16763, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17729)
!17729 = !{!17730, !17731, !17732, !17733, !17735}
!17730 = !DILocalVariable(name: "thread", arg: 1, scope: !17728, file: !2907, line: 902, type: !2800)
!17731 = !DILocalVariable(name: "prio", arg: 2, scope: !17728, file: !2907, line: 902, type: !103)
!17732 = !DILocalVariable(name: "need_sched", scope: !17728, file: !2907, line: 904, type: !122)
!17733 = !DILocalVariable(name: "__i", scope: !17734, file: !2907, line: 906, type: !16394)
!17734 = distinct !DILexicalBlock(scope: !17728, file: !2907, line: 906, column: 2)
!17735 = !DILocalVariable(name: "__key", scope: !17734, file: !2907, line: 906, type: !16394)
!17736 = !DILocation(line: 0, scope: !17728)
!17737 = !DILocation(line: 0, scope: !17734)
!17738 = !DILocation(line: 0, scope: !16402, inlinedAt: !17739)
!17739 = distinct !DILocation(line: 906, column: 2, scope: !17734)
!17740 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17741)
!17741 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17739)
!17742 = !DILocation(line: 0, scope: !16411, inlinedAt: !17741)
!17743 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17739)
!17744 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17739)
!17745 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17739)
!17746 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17739)
!17747 = !DILocation(line: 907, column: 16, scope: !17748)
!17748 = distinct !DILexicalBlock(scope: !17749, file: !2907, line: 906, column: 26)
!17749 = distinct !DILexicalBlock(scope: !17734, file: !2907, line: 906, column: 2)
!17750 = !DILocation(line: 909, column: 7, scope: !17748)
!17751 = !DILocation(line: 0, scope: !16594, inlinedAt: !17752)
!17752 = distinct !DILocation(line: 912, column: 5, scope: !17753)
!17753 = distinct !DILexicalBlock(scope: !17754, file: !2907, line: 911, column: 63)
!17754 = distinct !DILexicalBlock(scope: !17755, file: !2907, line: 911, column: 8)
!17755 = distinct !DILexicalBlock(scope: !17756, file: !2907, line: 909, column: 19)
!17756 = distinct !DILexicalBlock(scope: !17748, file: !2907, line: 909, column: 7)
!17757 = !DILocation(line: 266, column: 28, scope: !16594, inlinedAt: !17752)
!17758 = !DILocation(line: 0, scope: !16602, inlinedAt: !17759)
!17759 = distinct !DILocation(line: 268, column: 3, scope: !16606, inlinedAt: !17752)
!17760 = !DILocation(line: 234, column: 2, scope: !16602, inlinedAt: !17759)
!17761 = !DILocation(line: 913, column: 23, scope: !17753)
!17762 = !DILocation(line: 0, scope: !16611, inlinedAt: !17763)
!17763 = distinct !DILocation(line: 914, column: 5, scope: !17753)
!17764 = !DILocation(line: 252, column: 28, scope: !16611, inlinedAt: !17763)
!17765 = !DILocation(line: 0, scope: !16618, inlinedAt: !17766)
!17766 = distinct !DILocation(line: 254, column: 3, scope: !16622, inlinedAt: !17763)
!17767 = !DILocation(line: 0, scope: !16625, inlinedAt: !17768)
!17768 = distinct !DILocation(line: 229, column: 2, scope: !16618, inlinedAt: !17766)
!17769 = !DILocation(line: 186, column: 2, scope: !16635, inlinedAt: !17768)
!17770 = !DILocation(line: 186, column: 2, scope: !16636, inlinedAt: !17768)
!17771 = !DILocation(line: 186, column: 2, scope: !16639, inlinedAt: !17768)
!17772 = !DILocation(line: 188, column: 2, scope: !16641, inlinedAt: !17768)
!17773 = !DILocation(line: 188, column: 2, scope: !16643, inlinedAt: !17768)
!17774 = !DILocation(line: 0, scope: !16641, inlinedAt: !17768)
!17775 = !DILocation(line: 189, column: 7, scope: !16646, inlinedAt: !17768)
!17776 = !DILocation(line: 189, column: 35, scope: !16646, inlinedAt: !17768)
!17777 = !DILocation(line: 189, column: 7, scope: !16647, inlinedAt: !17768)
!17778 = !DILocation(line: 190, column: 4, scope: !16651, inlinedAt: !17768)
!17779 = !DILocation(line: 192, column: 4, scope: !16651, inlinedAt: !17768)
!17780 = distinct !{!17780, !17772, !17781}
!17781 = !DILocation(line: 194, column: 2, scope: !16641, inlinedAt: !17768)
!17782 = !DILocation(line: 196, column: 2, scope: !16625, inlinedAt: !17768)
!17783 = !DILocation(line: 197, column: 1, scope: !16625, inlinedAt: !17768)
!17784 = !DILocation(line: 918, column: 4, scope: !17755)
!17785 = !DILocation(line: 919, column: 3, scope: !17755)
!17786 = !DILocation(line: 920, column: 22, scope: !17787)
!17787 = distinct !DILexicalBlock(scope: !17756, file: !2907, line: 919, column: 10)
!17788 = !DILocation(line: 0, scope: !16436, inlinedAt: !17789)
!17789 = distinct !DILocation(line: 906, column: 2, scope: !17749)
!17790 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17789)
!17791 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17789)
!17792 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17789)
!17793 = !DILocation(line: 0, scope: !16450, inlinedAt: !17794)
!17794 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17789)
!17795 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17794)
!17796 = !DILocation(line: 926, column: 2, scope: !17728)
!17797 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2907, file: !2907, line: 929, type: !17798, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17800)
!17798 = !DISubroutineType(types: !17799)
!17799 = !{null, !2800, !103}
!17800 = !{!17801, !17802, !17803}
!17801 = !DILocalVariable(name: "thread", arg: 1, scope: !17797, file: !2907, line: 929, type: !2800)
!17802 = !DILocalVariable(name: "prio", arg: 2, scope: !17797, file: !2907, line: 929, type: !103)
!17803 = !DILocalVariable(name: "need_sched", scope: !17797, file: !2907, line: 931, type: !122)
!17804 = !DILocation(line: 0, scope: !17797)
!17805 = !DILocation(line: 931, column: 20, scope: !17797)
!17806 = !DILocation(line: 935, column: 17, scope: !17807)
!17807 = distinct !DILexicalBlock(scope: !17797, file: !2907, line: 935, column: 6)
!17808 = !DILocation(line: 935, column: 20, scope: !17807)
!17809 = !DILocation(line: 935, column: 35, scope: !17807)
!17810 = !DILocation(line: 935, column: 48, scope: !17807)
!17811 = !DILocation(line: 935, column: 6, scope: !17797)
!17812 = !DILocation(line: 936, column: 3, scope: !17813)
!17813 = distinct !DILexicalBlock(scope: !17807, file: !2907, line: 935, column: 55)
!17814 = !DILocation(line: 937, column: 2, scope: !17813)
!17815 = !DILocation(line: 938, column: 1, scope: !17797)
!17816 = distinct !DISubprogram(name: "k_sched_lock", scope: !2907, file: !2907, line: 987, type: !323, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17817)
!17817 = !{!17818, !17820}
!17818 = !DILocalVariable(name: "__i", scope: !17819, file: !2907, line: 989, type: !16394)
!17819 = distinct !DILexicalBlock(scope: !17816, file: !2907, line: 989, column: 2)
!17820 = !DILocalVariable(name: "__key", scope: !17819, file: !2907, line: 989, type: !16394)
!17821 = !DILocation(line: 0, scope: !17819)
!17822 = !DILocation(line: 0, scope: !16402, inlinedAt: !17823)
!17823 = distinct !DILocation(line: 989, column: 2, scope: !17819)
!17824 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17825)
!17825 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17823)
!17826 = !DILocation(line: 0, scope: !16411, inlinedAt: !17825)
!17827 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17823)
!17828 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17823)
!17829 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17823)
!17830 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17823)
!17831 = !DILocation(line: 992, column: 3, scope: !17832)
!17832 = distinct !DILexicalBlock(scope: !17833, file: !2907, line: 989, column: 26)
!17833 = distinct !DILexicalBlock(scope: !17819, file: !2907, line: 989, column: 2)
!17834 = !DILocation(line: 0, scope: !16436, inlinedAt: !17835)
!17835 = distinct !DILocation(line: 989, column: 2, scope: !17833)
!17836 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17835)
!17837 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17835)
!17838 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17835)
!17839 = !DILocation(line: 0, scope: !16450, inlinedAt: !17840)
!17840 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17835)
!17841 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17840)
!17842 = !DILocation(line: 994, column: 1, scope: !17816)
!17843 = distinct !DISubprogram(name: "z_sched_lock", scope: !14725, file: !14725, line: 251, type: !323, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !2501)
!17844 = !DILocation(line: 1031, column: 3, scope: !17127, inlinedAt: !17845)
!17845 = distinct !DILocation(line: 48, column: 10, scope: !17131, inlinedAt: !17846)
!17846 = distinct !DILocation(line: 253, column: 2, scope: !17847)
!17847 = distinct !DILexicalBlock(scope: !17848, file: !14725, line: 253, column: 2)
!17848 = distinct !DILexicalBlock(scope: !17843, file: !14725, line: 253, column: 2)
!17849 = !DILocation(line: 0, scope: !17127, inlinedAt: !17845)
!17850 = !DILocation(line: 48, column: 9, scope: !17131, inlinedAt: !17846)
!17851 = !DILocation(line: 253, column: 2, scope: !17848)
!17852 = !DILocation(line: 253, column: 2, scope: !17853)
!17853 = distinct !DILexicalBlock(scope: !17847, file: !14725, line: 253, column: 2)
!17854 = !DILocation(line: 254, column: 2, scope: !17855)
!17855 = distinct !DILexicalBlock(scope: !17856, file: !14725, line: 254, column: 2)
!17856 = distinct !DILexicalBlock(scope: !17843, file: !14725, line: 254, column: 2)
!17857 = !DILocation(line: 254, column: 2, scope: !17856)
!17858 = !DILocation(line: 254, column: 2, scope: !17859)
!17859 = distinct !DILexicalBlock(scope: !17855, file: !14725, line: 254, column: 2)
!17860 = !DILocation(line: 256, column: 2, scope: !17843)
!17861 = !DILocation(line: 258, column: 2, scope: !17862)
!17862 = distinct !DILexicalBlock(scope: !17843, file: !14725, line: 258, column: 2)
!17863 = !{i64 2154976675}
!17864 = !DILocation(line: 259, column: 1, scope: !17843)
!17865 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2907, file: !2907, line: 996, type: !323, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17866)
!17866 = !{!17867, !17869}
!17867 = !DILocalVariable(name: "__i", scope: !17868, file: !2907, line: 998, type: !16394)
!17868 = distinct !DILexicalBlock(scope: !17865, file: !2907, line: 998, column: 2)
!17869 = !DILocalVariable(name: "__key", scope: !17868, file: !2907, line: 998, type: !16394)
!17870 = !DILocation(line: 0, scope: !17868)
!17871 = !DILocation(line: 0, scope: !16402, inlinedAt: !17872)
!17872 = distinct !DILocation(line: 998, column: 2, scope: !17868)
!17873 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17874)
!17874 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17872)
!17875 = !DILocation(line: 0, scope: !16411, inlinedAt: !17874)
!17876 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !17872)
!17877 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !17872)
!17878 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !17872)
!17879 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !17872)
!17880 = !DILocation(line: 999, column: 3, scope: !17881)
!17881 = distinct !DILexicalBlock(scope: !17882, file: !2907, line: 999, column: 3)
!17882 = distinct !DILexicalBlock(scope: !17883, file: !2907, line: 999, column: 3)
!17883 = distinct !DILexicalBlock(scope: !17884, file: !2907, line: 998, column: 26)
!17884 = distinct !DILexicalBlock(scope: !17868, file: !2907, line: 998, column: 2)
!17885 = !DILocation(line: 999, column: 3, scope: !17882)
!17886 = !DILocation(line: 999, column: 3, scope: !17887)
!17887 = distinct !DILexicalBlock(scope: !17881, file: !2907, line: 999, column: 3)
!17888 = !DILocation(line: 1031, column: 3, scope: !17127, inlinedAt: !17889)
!17889 = distinct !DILocation(line: 48, column: 10, scope: !17131, inlinedAt: !17890)
!17890 = distinct !DILocation(line: 1000, column: 3, scope: !17891)
!17891 = distinct !DILexicalBlock(scope: !17892, file: !2907, line: 1000, column: 3)
!17892 = distinct !DILexicalBlock(scope: !17883, file: !2907, line: 1000, column: 3)
!17893 = !DILocation(line: 0, scope: !17127, inlinedAt: !17889)
!17894 = !DILocation(line: 48, column: 9, scope: !17131, inlinedAt: !17890)
!17895 = !DILocation(line: 1000, column: 3, scope: !17892)
!17896 = !DILocation(line: 1000, column: 3, scope: !17897)
!17897 = distinct !DILexicalBlock(scope: !17891, file: !2907, line: 1000, column: 3)
!17898 = !DILocation(line: 1002, column: 5, scope: !17883)
!17899 = !DILocation(line: 1002, column: 20, scope: !17883)
!17900 = !DILocation(line: 1002, column: 3, scope: !17883)
!17901 = !DILocation(line: 1003, column: 3, scope: !17883)
!17902 = !DILocation(line: 0, scope: !16436, inlinedAt: !17903)
!17903 = distinct !DILocation(line: 998, column: 2, scope: !17884)
!17904 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !17903)
!17905 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !17903)
!17906 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !17903)
!17907 = !DILocation(line: 0, scope: !16450, inlinedAt: !17908)
!17908 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !17903)
!17909 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !17908)
!17910 = !DILocation(line: 1011, column: 2, scope: !17865)
!17911 = !DILocation(line: 1012, column: 1, scope: !17865)
!17912 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2907, file: !2907, line: 1014, type: !16751, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !2501)
!17913 = !DILocation(line: 1028, column: 25, scope: !17912)
!17914 = !DILocation(line: 1028, column: 2, scope: !17912)
!17915 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2907, file: !2907, line: 1155, type: !17916, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17918)
!17916 = !DISubroutineType(types: !17917)
!17917 = !{!122, !2829, !2829}
!17918 = !{!17919, !17920, !17921, !17922, !17923}
!17919 = !DILocalVariable(name: "a", arg: 1, scope: !17915, file: !2907, line: 1155, type: !2829)
!17920 = !DILocalVariable(name: "b", arg: 2, scope: !17915, file: !2907, line: 1155, type: !2829)
!17921 = !DILocalVariable(name: "thread_a", scope: !17915, file: !2907, line: 1157, type: !2800)
!17922 = !DILocalVariable(name: "thread_b", scope: !17915, file: !2907, line: 1157, type: !2800)
!17923 = !DILocalVariable(name: "cmp", scope: !17915, file: !2907, line: 1158, type: !320)
!17924 = !DILocation(line: 0, scope: !17915)
!17925 = !DILocation(line: 1160, column: 13, scope: !17915)
!17926 = !DILocation(line: 1161, column: 13, scope: !17915)
!17927 = !DILocation(line: 1163, column: 8, scope: !17915)
!17928 = !DILocation(line: 1165, column: 10, scope: !17929)
!17929 = distinct !DILexicalBlock(scope: !17915, file: !2907, line: 1165, column: 6)
!17930 = !DILocation(line: 1165, column: 6, scope: !17915)
!17931 = !DILocation(line: 1167, column: 17, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17929, file: !2907, line: 1167, column: 13)
!17933 = !DILocation(line: 1167, column: 13, scope: !17929)
!17934 = !DILocation(line: 1170, column: 25, scope: !17935)
!17935 = distinct !DILexicalBlock(scope: !17932, file: !2907, line: 1169, column: 9)
!17936 = !DILocation(line: 1170, column: 52, scope: !17935)
!17937 = !DILocation(line: 1170, column: 35, scope: !17935)
!17938 = !DILocation(line: 1170, column: 3, scope: !17935)
!17939 = !DILocation(line: 0, scope: !17929)
!17940 = !DILocation(line: 1173, column: 1, scope: !17915)
!17941 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2907, file: !2907, line: 1175, type: !17942, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !17957)
!17942 = !DISubroutineType(types: !17943)
!17943 = !{null, !17944, !2800}
!17944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17945, size: 32)
!17945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17946, line: 37, size: 128, elements: !17947)
!17946 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17947 = !{!17948, !17956}
!17948 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17945, file: !17946, line: 38, baseType: !17949, size: 96)
!17949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !211, line: 83, size: 96, elements: !17950)
!17950 = !{!17951, !17952, !17955}
!17951 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17949, file: !211, line: 84, baseType: !2829, size: 32)
!17952 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17949, file: !211, line: 85, baseType: !17953, size: 32, offset: 32)
!17953 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !211, line: 81, baseType: !17954)
!17954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17916, size: 32)
!17955 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17949, file: !211, line: 86, baseType: !103, size: 32, offset: 64)
!17956 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17945, file: !17946, line: 39, baseType: !103, size: 32, offset: 96)
!17957 = !{!17958, !17959, !17960, !17961, !17970}
!17958 = !DILocalVariable(name: "pq", arg: 1, scope: !17941, file: !2907, line: 1175, type: !17944)
!17959 = !DILocalVariable(name: "thread", arg: 2, scope: !17941, file: !2907, line: 1175, type: !2800)
!17960 = !DILocalVariable(name: "t", scope: !17941, file: !2907, line: 1177, type: !2800)
!17961 = !DILocalVariable(name: "__f", scope: !17962, file: !2907, line: 1190, type: !17965)
!17962 = distinct !DILexicalBlock(scope: !17963, file: !2907, line: 1190, column: 3)
!17963 = distinct !DILexicalBlock(scope: !17964, file: !2907, line: 1189, column: 27)
!17964 = distinct !DILexicalBlock(scope: !17941, file: !2907, line: 1189, column: 6)
!17965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !211, line: 155, size: 96, elements: !17966)
!17966 = !{!17967, !17968, !17969}
!17967 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17965, file: !211, line: 156, baseType: !2902, size: 32)
!17968 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17965, file: !211, line: 157, baseType: !550, size: 32, offset: 32)
!17969 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17965, file: !211, line: 158, baseType: !320, size: 32, offset: 64)
!17970 = !DILocalVariable(name: "n", scope: !17971, file: !2907, line: 1190, type: !2829)
!17971 = distinct !DILexicalBlock(scope: !17972, file: !2907, line: 1190, column: 3)
!17972 = distinct !DILexicalBlock(scope: !17962, file: !2907, line: 1190, column: 3)
!17973 = !DILocation(line: 0, scope: !17941)
!17974 = !DILocation(line: 1179, column: 2, scope: !17975)
!17975 = distinct !DILexicalBlock(scope: !17976, file: !2907, line: 1179, column: 2)
!17976 = distinct !DILexicalBlock(scope: !17941, file: !2907, line: 1179, column: 2)
!17977 = !DILocation(line: 1179, column: 2, scope: !17976)
!17978 = !DILocation(line: 1179, column: 2, scope: !17979)
!17979 = distinct !DILexicalBlock(scope: !17975, file: !2907, line: 1179, column: 2)
!17980 = !DILocation(line: 1181, column: 31, scope: !17941)
!17981 = !DILocation(line: 1181, column: 45, scope: !17941)
!17982 = !DILocation(line: 1181, column: 15, scope: !17941)
!17983 = !DILocation(line: 1181, column: 25, scope: !17941)
!17984 = !DILocation(line: 1189, column: 11, scope: !17964)
!17985 = !DILocation(line: 1189, column: 7, scope: !17964)
!17986 = !DILocation(line: 1189, column: 6, scope: !17941)
!17987 = !DILocation(line: 1190, column: 3, scope: !17962)
!17988 = !DILocation(line: 1190, column: 3, scope: !17971)
!17989 = !DILocation(line: 0, scope: !17971)
!17990 = !DILocation(line: 1190, column: 3, scope: !17972)
!17991 = !DILocation(line: 1193, column: 2, scope: !17963)
!17992 = !DILocation(line: 1191, column: 42, scope: !17993)
!17993 = distinct !DILexicalBlock(scope: !17972, file: !2907, line: 1190, column: 54)
!17994 = !DILocation(line: 1191, column: 12, scope: !17993)
!17995 = !DILocation(line: 1191, column: 22, scope: !17993)
!17996 = distinct !{!17996, !17987, !17997}
!17997 = !DILocation(line: 1192, column: 3, scope: !17962)
!17998 = !DILocation(line: 1195, column: 17, scope: !17941)
!17999 = !DILocation(line: 1195, column: 37, scope: !17941)
!18000 = !DILocation(line: 1195, column: 2, scope: !17941)
!18001 = !DILocation(line: 1196, column: 1, scope: !17941)
!18002 = !DISubprogram(name: "z_rb_foreach_next", scope: !211, file: !211, line: 176, type: !18003, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2501)
!18003 = !DISubroutineType(types: !18004)
!18004 = !{!2829, !18005, !18006}
!18005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17949, size: 32)
!18006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17965, size: 32)
!18007 = !DISubprogram(name: "rb_insert", scope: !211, file: !211, line: 105, type: !18008, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2501)
!18008 = !DISubroutineType(types: !18009)
!18009 = !{null, !18005, !2829}
!18010 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2907, file: !2907, line: 1198, type: !17942, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18011)
!18011 = !{!18012, !18013}
!18012 = !DILocalVariable(name: "pq", arg: 1, scope: !18010, file: !2907, line: 1198, type: !17944)
!18013 = !DILocalVariable(name: "thread", arg: 2, scope: !18010, file: !2907, line: 1198, type: !2800)
!18014 = !DILocation(line: 0, scope: !18010)
!18015 = !DILocation(line: 1200, column: 2, scope: !18016)
!18016 = distinct !DILexicalBlock(scope: !18017, file: !2907, line: 1200, column: 2)
!18017 = distinct !DILexicalBlock(scope: !18010, file: !2907, line: 1200, column: 2)
!18018 = !DILocation(line: 1200, column: 2, scope: !18017)
!18019 = !DILocation(line: 1200, column: 2, scope: !18020)
!18020 = distinct !DILexicalBlock(scope: !18016, file: !2907, line: 1200, column: 2)
!18021 = !DILocation(line: 1202, column: 17, scope: !18010)
!18022 = !DILocation(line: 1202, column: 37, scope: !18010)
!18023 = !DILocation(line: 1202, column: 2, scope: !18010)
!18024 = !DILocation(line: 1204, column: 16, scope: !18025)
!18025 = distinct !DILexicalBlock(scope: !18010, file: !2907, line: 1204, column: 6)
!18026 = !DILocation(line: 1204, column: 7, scope: !18025)
!18027 = !DILocation(line: 1204, column: 6, scope: !18010)
!18028 = !DILocation(line: 1205, column: 7, scope: !18029)
!18029 = distinct !DILexicalBlock(scope: !18025, file: !2907, line: 1204, column: 22)
!18030 = !DILocation(line: 1205, column: 22, scope: !18029)
!18031 = !DILocation(line: 1206, column: 2, scope: !18029)
!18032 = !DILocation(line: 1207, column: 1, scope: !18010)
!18033 = !DISubprogram(name: "rb_remove", scope: !211, file: !211, line: 110, type: !18008, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2501)
!18034 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2907, file: !2907, line: 1209, type: !18035, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18037)
!18035 = !DISubroutineType(types: !18036)
!18036 = !{!2800, !17944}
!18037 = !{!18038, !18039, !18040}
!18038 = !DILocalVariable(name: "pq", arg: 1, scope: !18034, file: !2907, line: 1209, type: !17944)
!18039 = !DILocalVariable(name: "thread", scope: !18034, file: !2907, line: 1211, type: !2800)
!18040 = !DILocalVariable(name: "n", scope: !18034, file: !2907, line: 1212, type: !2829)
!18041 = !DILocation(line: 0, scope: !18034)
!18042 = !DILocation(line: 1212, column: 37, scope: !18034)
!18043 = !DILocation(line: 1212, column: 21, scope: !18034)
!18044 = !DILocation(line: 1217, column: 2, scope: !18034)
!18045 = distinct !DISubprogram(name: "rb_get_min", scope: !211, file: !211, line: 115, type: !18046, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18048)
!18046 = !DISubroutineType(types: !18047)
!18047 = !{!2829, !18005}
!18048 = !{!18049}
!18049 = !DILocalVariable(name: "tree", arg: 1, scope: !18045, file: !211, line: 115, type: !18005)
!18050 = !DILocation(line: 0, scope: !18045)
!18051 = !DILocation(line: 117, column: 9, scope: !18045)
!18052 = !DILocation(line: 117, column: 2, scope: !18045)
!18053 = !DISubprogram(name: "z_rb_get_minmax", scope: !211, file: !211, line: 100, type: !18054, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2501)
!18054 = !DISubroutineType(types: !18055)
!18055 = !{!2829, !18005, !166}
!18056 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2907, file: !2907, line: 1246, type: !18057, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18067)
!18057 = !DISubroutineType(types: !18058)
!18058 = !{!2800, !18059}
!18059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18060, size: 32)
!18060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17946, line: 53, size: 2080, elements: !18061)
!18061 = !{!18062, !18066}
!18062 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !18060, file: !17946, line: 54, baseType: !18063, size: 2048)
!18063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2836, size: 2048, elements: !18064)
!18064 = !{!18065}
!18065 = !DISubrange(count: 32)
!18066 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !18060, file: !17946, line: 55, baseType: !32, size: 32, offset: 2048)
!18067 = !{!18068, !18069, !18070, !18071}
!18068 = !DILocalVariable(name: "pq", arg: 1, scope: !18056, file: !2907, line: 1246, type: !18059)
!18069 = !DILocalVariable(name: "thread", scope: !18056, file: !2907, line: 1252, type: !2800)
!18070 = !DILocalVariable(name: "l", scope: !18056, file: !2907, line: 1253, type: !16628)
!18071 = !DILocalVariable(name: "n", scope: !18056, file: !2907, line: 1254, type: !2903)
!18072 = !DILocation(line: 0, scope: !18056)
!18073 = !DILocation(line: 1248, column: 11, scope: !18074)
!18074 = distinct !DILexicalBlock(scope: !18056, file: !2907, line: 1248, column: 6)
!18075 = !DILocation(line: 1248, column: 7, scope: !18074)
!18076 = !DILocation(line: 1248, column: 6, scope: !18056)
!18077 = !DILocation(line: 1253, column: 31, scope: !18056)
!18078 = !DILocation(line: 1253, column: 20, scope: !18056)
!18079 = !DILocation(line: 1254, column: 19, scope: !18056)
!18080 = !DILocation(line: 1260, column: 1, scope: !18056)
!18081 = distinct !DISubprogram(name: "z_unpend_all", scope: !2907, file: !2907, line: 1262, type: !18082, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18084)
!18082 = !DISubroutineType(types: !18083)
!18083 = !{!103, !2831}
!18084 = !{!18085, !18086, !18087}
!18085 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18081, file: !2907, line: 1262, type: !2831)
!18086 = !DILocalVariable(name: "need_sched", scope: !18081, file: !2907, line: 1264, type: !103)
!18087 = !DILocalVariable(name: "thread", scope: !18081, file: !2907, line: 1265, type: !2800)
!18088 = !DILocation(line: 0, scope: !18081)
!18089 = !DILocation(line: 1267, column: 19, scope: !18081)
!18090 = !DILocation(line: 1267, column: 41, scope: !18081)
!18091 = !DILocation(line: 1267, column: 2, scope: !18081)
!18092 = !DILocation(line: 1268, column: 3, scope: !18093)
!18093 = distinct !DILexicalBlock(scope: !18081, file: !2907, line: 1267, column: 50)
!18094 = !DILocation(line: 1269, column: 3, scope: !18093)
!18095 = distinct !{!18095, !18091, !18096}
!18096 = !DILocation(line: 1271, column: 2, scope: !18081)
!18097 = !DILocation(line: 1273, column: 2, scope: !18081)
!18098 = distinct !DISubprogram(name: "z_waitq_head", scope: !15064, file: !15064, line: 52, type: !17627, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18099)
!18099 = !{!18100}
!18100 = !DILocalVariable(name: "w", arg: 1, scope: !18098, file: !15064, line: 52, type: !2831)
!18101 = !DILocation(line: 0, scope: !18098)
!18102 = !DILocation(line: 54, column: 52, scope: !18098)
!18103 = !DILocation(line: 54, column: 28, scope: !18098)
!18104 = !DILocation(line: 54, column: 9, scope: !18098)
!18105 = !DILocation(line: 54, column: 2, scope: !18098)
!18106 = distinct !DISubprogram(name: "init_ready_q", scope: !2907, file: !2907, line: 1276, type: !18107, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18114)
!18107 = !DISubroutineType(types: !18108)
!18108 = !{null, !18109}
!18109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18110, size: 32)
!18110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !131, line: 83, size: 96, elements: !18111)
!18111 = !{!18112, !18113}
!18112 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !18110, file: !131, line: 86, baseType: !2800, size: 32)
!18113 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !18110, file: !131, line: 90, baseType: !2836, size: 64, offset: 32)
!18114 = !{!18115}
!18115 = !DILocalVariable(name: "rq", arg: 1, scope: !18106, file: !2907, line: 1276, type: !18109)
!18116 = !DILocation(line: 0, scope: !18106)
!18117 = !DILocation(line: 1289, column: 22, scope: !18106)
!18118 = !DILocation(line: 1289, column: 2, scope: !18106)
!18119 = !DILocation(line: 1291, column: 1, scope: !18106)
!18120 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !18121, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18123)
!18121 = !DISubroutineType(types: !18122)
!18122 = !{null, !16628}
!18123 = !{!18124}
!18124 = !DILocalVariable(name: "list", arg: 1, scope: !18120, file: !136, line: 197, type: !16628)
!18125 = !DILocation(line: 0, scope: !18120)
!18126 = !DILocation(line: 199, column: 8, scope: !18120)
!18127 = !DILocation(line: 199, column: 13, scope: !18120)
!18128 = !DILocation(line: 200, column: 8, scope: !18120)
!18129 = !DILocation(line: 200, column: 13, scope: !18120)
!18130 = !DILocation(line: 201, column: 1, scope: !18120)
!18131 = distinct !DISubprogram(name: "z_sched_init", scope: !2907, file: !2907, line: 1293, type: !323, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !2501)
!18132 = !DILocation(line: 1302, column: 2, scope: !18131)
!18133 = !DILocation(line: 1306, column: 2, scope: !18131)
!18134 = !DILocation(line: 1309, column: 1, scope: !18131)
!18135 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2907, file: !2907, line: 1311, type: !18136, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18139)
!18136 = !DISubroutineType(types: !18137)
!18137 = !{!103, !18138}
!18138 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !2800)
!18139 = !{!18140}
!18140 = !DILocalVariable(name: "thread", arg: 1, scope: !18135, file: !2907, line: 1311, type: !18138)
!18141 = !DILocation(line: 0, scope: !18135)
!18142 = !DILocation(line: 1313, column: 22, scope: !18135)
!18143 = !DILocation(line: 1313, column: 9, scope: !18135)
!18144 = !DILocation(line: 1313, column: 2, scope: !18135)
!18145 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2907, file: !2907, line: 1325, type: !18146, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18148)
!18146 = !DISubroutineType(types: !18147)
!18147 = !{null, !18138, !103}
!18148 = !{!18149, !18150, !18151}
!18149 = !DILocalVariable(name: "thread", arg: 1, scope: !18145, file: !2907, line: 1325, type: !18138)
!18150 = !DILocalVariable(name: "prio", arg: 2, scope: !18145, file: !2907, line: 1325, type: !103)
!18151 = !DILocalVariable(name: "th", scope: !18145, file: !2907, line: 1334, type: !2800)
!18152 = !DILocation(line: 0, scope: !18145)
!18153 = !DILocation(line: 1331, column: 2, scope: !18154)
!18154 = distinct !DILexicalBlock(scope: !18155, file: !2907, line: 1331, column: 2)
!18155 = distinct !DILexicalBlock(scope: !18156, file: !2907, line: 1331, column: 2)
!18156 = distinct !DILexicalBlock(scope: !18145, file: !2907, line: 1331, column: 2)
!18157 = !DILocation(line: 1331, column: 2, scope: !18158)
!18158 = distinct !DILexicalBlock(scope: !18154, file: !2907, line: 1331, column: 2)
!18159 = !DILocation(line: 1031, column: 3, scope: !17127, inlinedAt: !18160)
!18160 = distinct !DILocation(line: 48, column: 10, scope: !17131, inlinedAt: !18161)
!18161 = distinct !DILocation(line: 1332, column: 2, scope: !18162)
!18162 = distinct !DILexicalBlock(scope: !18163, file: !2907, line: 1332, column: 2)
!18163 = distinct !DILexicalBlock(scope: !18145, file: !2907, line: 1332, column: 2)
!18164 = !DILocation(line: 0, scope: !17127, inlinedAt: !18160)
!18165 = !DILocation(line: 48, column: 9, scope: !17131, inlinedAt: !18161)
!18166 = !DILocation(line: 1332, column: 2, scope: !18163)
!18167 = !DILocation(line: 1332, column: 2, scope: !18168)
!18168 = distinct !DILexicalBlock(scope: !18162, file: !2907, line: 1332, column: 2)
!18169 = !DILocation(line: 1336, column: 2, scope: !18145)
!18170 = !DILocation(line: 1337, column: 1, scope: !18145)
!18171 = distinct !DISubprogram(name: "k_can_yield", scope: !2907, file: !2907, line: 1384, type: !8916, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !2501)
!18172 = !DILocation(line: 1386, column: 11, scope: !18171)
!18173 = !DILocation(line: 1386, column: 29, scope: !18171)
!18174 = !DILocation(line: 1386, column: 32, scope: !18171)
!18175 = !DILocation(line: 1386, column: 46, scope: !18171)
!18176 = !DILocation(line: 1387, column: 28, scope: !18171)
!18177 = !DILocation(line: 1387, column: 4, scope: !18171)
!18178 = !DILocation(line: 1386, column: 2, scope: !18171)
!18179 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !127, file: !127, line: 989, type: !8916, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !2501)
!18180 = !DILocation(line: 993, column: 10, scope: !18179)
!18181 = !DILocation(line: 993, column: 2, scope: !18179)
!18182 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2907, file: !2907, line: 1390, type: !323, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18183)
!18183 = !{!18184}
!18184 = !DILocalVariable(name: "key", scope: !18182, file: !2907, line: 1396, type: !16394)
!18185 = !DILocation(line: 1031, column: 3, scope: !17127, inlinedAt: !18186)
!18186 = distinct !DILocation(line: 48, column: 10, scope: !17131, inlinedAt: !18187)
!18187 = distinct !DILocation(line: 1392, column: 2, scope: !18188)
!18188 = distinct !DILexicalBlock(scope: !18189, file: !2907, line: 1392, column: 2)
!18189 = distinct !DILexicalBlock(scope: !18182, file: !2907, line: 1392, column: 2)
!18190 = !DILocation(line: 0, scope: !17127, inlinedAt: !18186)
!18191 = !DILocation(line: 48, column: 9, scope: !17131, inlinedAt: !18187)
!18192 = !DILocation(line: 1392, column: 2, scope: !18189)
!18193 = !DILocation(line: 1392, column: 2, scope: !18194)
!18194 = distinct !DILexicalBlock(scope: !18188, file: !2907, line: 1392, column: 2)
!18195 = !DILocation(line: 0, scope: !16402, inlinedAt: !18196)
!18196 = distinct !DILocation(line: 1396, column: 25, scope: !18182)
!18197 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !18198)
!18198 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !18196)
!18199 = !DILocation(line: 0, scope: !16411, inlinedAt: !18198)
!18200 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !18196)
!18201 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !18196)
!18202 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !18196)
!18203 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !18196)
!18204 = !DILocation(line: 0, scope: !18182)
!18205 = !DILocation(line: 1400, column: 18, scope: !18206)
!18206 = distinct !DILexicalBlock(scope: !18207, file: !2907, line: 1399, column: 36)
!18207 = distinct !DILexicalBlock(scope: !18182, file: !2907, line: 1398, column: 6)
!18208 = !DILocation(line: 0, scope: !16594, inlinedAt: !18209)
!18209 = distinct !DILocation(line: 1400, column: 3, scope: !18206)
!18210 = !DILocation(line: 266, column: 15, scope: !16594, inlinedAt: !18209)
!18211 = !DILocation(line: 266, column: 28, scope: !16594, inlinedAt: !18209)
!18212 = !DILocation(line: 0, scope: !16602, inlinedAt: !18213)
!18213 = distinct !DILocation(line: 268, column: 3, scope: !16606, inlinedAt: !18209)
!18214 = !DILocation(line: 234, column: 2, scope: !16602, inlinedAt: !18213)
!18215 = !DILocation(line: 1402, column: 15, scope: !18182)
!18216 = !DILocation(line: 0, scope: !16611, inlinedAt: !18217)
!18217 = distinct !DILocation(line: 1402, column: 2, scope: !18182)
!18218 = !DILocation(line: 252, column: 15, scope: !16611, inlinedAt: !18217)
!18219 = !DILocation(line: 252, column: 28, scope: !16611, inlinedAt: !18217)
!18220 = !DILocation(line: 0, scope: !16618, inlinedAt: !18221)
!18221 = distinct !DILocation(line: 254, column: 3, scope: !16622, inlinedAt: !18217)
!18222 = !DILocation(line: 0, scope: !16625, inlinedAt: !18223)
!18223 = distinct !DILocation(line: 229, column: 2, scope: !16618, inlinedAt: !18221)
!18224 = !DILocation(line: 186, column: 2, scope: !16635, inlinedAt: !18223)
!18225 = !DILocation(line: 186, column: 2, scope: !16636, inlinedAt: !18223)
!18226 = !DILocation(line: 186, column: 2, scope: !16639, inlinedAt: !18223)
!18227 = !DILocation(line: 188, column: 2, scope: !16641, inlinedAt: !18223)
!18228 = !DILocation(line: 188, column: 2, scope: !16643, inlinedAt: !18223)
!18229 = !DILocation(line: 0, scope: !16641, inlinedAt: !18223)
!18230 = !DILocation(line: 189, column: 7, scope: !16646, inlinedAt: !18223)
!18231 = !DILocation(line: 189, column: 35, scope: !16646, inlinedAt: !18223)
!18232 = !DILocation(line: 189, column: 7, scope: !16647, inlinedAt: !18223)
!18233 = !DILocation(line: 191, column: 21, scope: !16651, inlinedAt: !18223)
!18234 = !DILocation(line: 190, column: 4, scope: !16651, inlinedAt: !18223)
!18235 = !DILocation(line: 192, column: 4, scope: !16651, inlinedAt: !18223)
!18236 = distinct !{!18236, !18227, !18237}
!18237 = !DILocation(line: 194, column: 2, scope: !16641, inlinedAt: !18223)
!18238 = !DILocation(line: 196, column: 37, scope: !16625, inlinedAt: !18223)
!18239 = !DILocation(line: 196, column: 2, scope: !16625, inlinedAt: !18223)
!18240 = !DILocation(line: 197, column: 1, scope: !16625, inlinedAt: !18223)
!18241 = !DILocation(line: 1403, column: 2, scope: !18182)
!18242 = !DILocation(line: 0, scope: !17078, inlinedAt: !18243)
!18243 = distinct !DILocation(line: 1404, column: 2, scope: !18182)
!18244 = !DILocation(line: 0, scope: !17087, inlinedAt: !18245)
!18245 = distinct !DILocation(line: 195, column: 2, scope: !17078, inlinedAt: !18243)
!18246 = !DILocation(line: 225, column: 2, scope: !17094, inlinedAt: !18245)
!18247 = !DILocation(line: 225, column: 2, scope: !17095, inlinedAt: !18245)
!18248 = !DILocation(line: 225, column: 2, scope: !17098, inlinedAt: !18245)
!18249 = !DILocation(line: 196, column: 9, scope: !17078, inlinedAt: !18243)
!18250 = !DILocation(line: 1405, column: 1, scope: !18182)
!18251 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2907, file: !2907, line: 1459, type: !18252, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18254)
!18252 = !DISubroutineType(types: !18253)
!18253 = !{!320, !17288}
!18254 = !{!18255, !18256, !18257}
!18255 = !DILocalVariable(name: "timeout", arg: 1, scope: !18251, file: !2907, line: 1459, type: !17288)
!18256 = !DILocalVariable(name: "ticks", scope: !18251, file: !2907, line: 1461, type: !104)
!18257 = !DILocalVariable(name: "ret", scope: !18251, file: !2907, line: 1480, type: !320)
!18258 = !DILocation(line: 0, scope: !18251)
!18259 = !DILocation(line: 1031, column: 3, scope: !17127, inlinedAt: !18260)
!18260 = distinct !DILocation(line: 48, column: 10, scope: !17131, inlinedAt: !18261)
!18261 = distinct !DILocation(line: 1463, column: 2, scope: !18262)
!18262 = distinct !DILexicalBlock(scope: !18263, file: !2907, line: 1463, column: 2)
!18263 = distinct !DILexicalBlock(scope: !18251, file: !2907, line: 1463, column: 2)
!18264 = !DILocation(line: 0, scope: !17127, inlinedAt: !18260)
!18265 = !DILocation(line: 48, column: 9, scope: !17131, inlinedAt: !18261)
!18266 = !DILocation(line: 1463, column: 2, scope: !18263)
!18267 = !DILocation(line: 1463, column: 2, scope: !18268)
!18268 = distinct !DILexicalBlock(scope: !18262, file: !2907, line: 1463, column: 2)
!18269 = !DILocation(line: 1468, column: 6, scope: !18270)
!18270 = distinct !DILexicalBlock(scope: !18251, file: !2907, line: 1468, column: 6)
!18271 = !DILocation(line: 1468, column: 6, scope: !18251)
!18272 = !DILocation(line: 1469, column: 20, scope: !18273)
!18273 = distinct !DILexicalBlock(scope: !18270, file: !2907, line: 1468, column: 40)
!18274 = !DILocation(line: 1469, column: 3, scope: !18273)
!18275 = !DILocation(line: 1473, column: 3, scope: !18273)
!18276 = !DILocation(line: 1478, column: 10, scope: !18251)
!18277 = !DILocation(line: 1480, column: 16, scope: !18251)
!18278 = !DILocation(line: 1485, column: 1, scope: !18251)
!18279 = distinct !DISubprogram(name: "k_thread_suspend", scope: !5275, file: !5275, line: 310, type: !18280, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18282)
!18280 = !DISubroutineType(types: !18281)
!18281 = !{null, !18138}
!18282 = !{!18283}
!18283 = !DILocalVariable(name: "thread", arg: 1, scope: !18279, file: !5275, line: 310, type: !18138)
!18284 = !DILocation(line: 0, scope: !18279)
!18285 = !DILocation(line: 319, column: 2, scope: !18286)
!18286 = distinct !DILexicalBlock(scope: !18279, file: !5275, line: 319, column: 2)
!18287 = !{i64 2154892833}
!18288 = !DILocation(line: 320, column: 2, scope: !18279)
!18289 = !DILocation(line: 321, column: 1, scope: !18279)
!18290 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2907, file: !2907, line: 1415, type: !18291, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18293)
!18291 = !DISubroutineType(types: !18292)
!18292 = !{!320, !104}
!18293 = !{!18294, !18295, !18296, !18297}
!18294 = !DILocalVariable(name: "ticks", arg: 1, scope: !18290, file: !2907, line: 1415, type: !104)
!18295 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !18290, file: !2907, line: 1418, type: !111)
!18296 = !DILocalVariable(name: "timeout", scope: !18290, file: !2907, line: 1430, type: !17288)
!18297 = !DILocalVariable(name: "key", scope: !18290, file: !2907, line: 1437, type: !16394)
!18298 = !DILocation(line: 0, scope: !18290)
!18299 = !DILocation(line: 1031, column: 3, scope: !17127, inlinedAt: !18300)
!18300 = distinct !DILocation(line: 48, column: 10, scope: !17131, inlinedAt: !18301)
!18301 = distinct !DILocation(line: 1420, column: 2, scope: !18302)
!18302 = distinct !DILexicalBlock(scope: !18303, file: !2907, line: 1420, column: 2)
!18303 = distinct !DILexicalBlock(scope: !18290, file: !2907, line: 1420, column: 2)
!18304 = !DILocation(line: 0, scope: !17127, inlinedAt: !18300)
!18305 = !DILocation(line: 48, column: 9, scope: !17131, inlinedAt: !18301)
!18306 = !DILocation(line: 1420, column: 2, scope: !18303)
!18307 = !DILocation(line: 1420, column: 2, scope: !18308)
!18308 = distinct !DILexicalBlock(scope: !18302, file: !2907, line: 1420, column: 2)
!18309 = !DILocation(line: 1425, column: 12, scope: !18310)
!18310 = distinct !DILexicalBlock(scope: !18290, file: !2907, line: 1425, column: 6)
!18311 = !DILocation(line: 1425, column: 6, scope: !18290)
!18312 = !DILocation(line: 1426, column: 3, scope: !18313)
!18313 = distinct !DILexicalBlock(scope: !18310, file: !2907, line: 1425, column: 18)
!18314 = !DILocation(line: 1427, column: 3, scope: !18313)
!18315 = !DILocation(line: 1431, column: 24, scope: !18316)
!18316 = distinct !DILexicalBlock(scope: !18290, file: !2907, line: 1431, column: 6)
!18317 = !DILocation(line: 1431, column: 6, scope: !18290)
!18318 = !DILocation(line: 1432, column: 35, scope: !18319)
!18319 = distinct !DILexicalBlock(scope: !18316, file: !2907, line: 1431, column: 30)
!18320 = !DILocation(line: 1432, column: 27, scope: !18319)
!18321 = !DILocation(line: 1433, column: 2, scope: !18319)
!18322 = !DILocation(line: 1434, column: 27, scope: !18323)
!18323 = distinct !DILexicalBlock(scope: !18316, file: !2907, line: 1433, column: 9)
!18324 = !DILocation(line: 0, scope: !18316)
!18325 = !DILocation(line: 0, scope: !16402, inlinedAt: !18326)
!18326 = distinct !DILocation(line: 1437, column: 25, scope: !18290)
!18327 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !18328)
!18328 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !18326)
!18329 = !DILocation(line: 0, scope: !16411, inlinedAt: !18328)
!18330 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !18326)
!18331 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !18326)
!18332 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !18326)
!18333 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !18326)
!18334 = !DILocation(line: 1440, column: 20, scope: !18290)
!18335 = !DILocation(line: 1440, column: 18, scope: !18290)
!18336 = !DILocation(line: 1442, column: 2, scope: !18290)
!18337 = !DILocation(line: 1443, column: 23, scope: !18290)
!18338 = !DILocation(line: 1443, column: 2, scope: !18290)
!18339 = !DILocation(line: 1444, column: 29, scope: !18290)
!18340 = !DILocation(line: 1444, column: 2, scope: !18290)
!18341 = !DILocation(line: 0, scope: !17078, inlinedAt: !18342)
!18342 = distinct !DILocation(line: 1446, column: 8, scope: !18290)
!18343 = !DILocation(line: 0, scope: !17087, inlinedAt: !18344)
!18344 = distinct !DILocation(line: 195, column: 2, scope: !17078, inlinedAt: !18342)
!18345 = !DILocation(line: 225, column: 2, scope: !17094, inlinedAt: !18344)
!18346 = !DILocation(line: 225, column: 2, scope: !17095, inlinedAt: !18344)
!18347 = !DILocation(line: 225, column: 2, scope: !17098, inlinedAt: !18344)
!18348 = !DILocation(line: 196, column: 9, scope: !17078, inlinedAt: !18342)
!18349 = !DILocation(line: 1448, column: 2, scope: !18350)
!18350 = distinct !DILexicalBlock(scope: !18351, file: !2907, line: 1448, column: 2)
!18351 = distinct !DILexicalBlock(scope: !18290, file: !2907, line: 1448, column: 2)
!18352 = !DILocation(line: 1448, column: 2, scope: !18351)
!18353 = !DILocation(line: 1448, column: 2, scope: !18354)
!18354 = distinct !DILexicalBlock(scope: !18350, file: !2907, line: 1448, column: 2)
!18355 = !DILocation(line: 1450, column: 10, scope: !18290)
!18356 = !DILocation(line: 1450, column: 45, scope: !18290)
!18357 = !DILocation(line: 1450, column: 43, scope: !18290)
!18358 = !DILocation(line: 1451, column: 6, scope: !18290)
!18359 = !DILocation(line: 1457, column: 1, scope: !18290)
!18360 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3915, file: !3915, line: 1103, type: !3916, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18361)
!18361 = !{!18362}
!18362 = !DILocalVariable(name: "t", arg: 1, scope: !18360, file: !3915, line: 1103, type: !112)
!18363 = !DILocation(line: 0, scope: !18360)
!18364 = !DILocation(line: 0, scope: !16462, inlinedAt: !18365)
!18365 = distinct !DILocation(line: 1106, column: 9, scope: !18360)
!18366 = !DILocation(line: 139, column: 13, scope: !18367, inlinedAt: !18365)
!18367 = distinct !DILexicalBlock(scope: !18368, file: !3915, line: 138, column: 10)
!18368 = distinct !DILexicalBlock(scope: !18369, file: !3915, line: 136, column: 7)
!18369 = distinct !DILexicalBlock(scope: !16483, file: !3915, line: 134, column: 17)
!18370 = !DILocation(line: 1106, column: 2, scope: !18360)
!18371 = distinct !DISubprogram(name: "k_yield", scope: !5275, file: !5275, line: 140, type: !323, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !2501)
!18372 = !DILocation(line: 148, column: 2, scope: !18373)
!18373 = distinct !DILexicalBlock(scope: !18371, file: !5275, line: 148, column: 2)
!18374 = !{i64 2154892153}
!18375 = !DILocation(line: 149, column: 2, scope: !18371)
!18376 = !DILocation(line: 150, column: 1, scope: !18371)
!18377 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2907, file: !2907, line: 1495, type: !18378, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18380)
!18378 = !DISubroutineType(types: !18379)
!18379 = !{!320, !103}
!18380 = !{!18381, !18382}
!18381 = !DILocalVariable(name: "us", arg: 1, scope: !18377, file: !2907, line: 1495, type: !103)
!18382 = !DILocalVariable(name: "ticks", scope: !18377, file: !2907, line: 1497, type: !320)
!18383 = !DILocation(line: 0, scope: !18377)
!18384 = !DILocation(line: 1501, column: 31, scope: !18377)
!18385 = !DILocation(line: 1501, column: 10, scope: !18377)
!18386 = !DILocation(line: 1502, column: 23, scope: !18377)
!18387 = !DILocation(line: 1502, column: 10, scope: !18377)
!18388 = !DILocation(line: 1506, column: 31, scope: !18377)
!18389 = !DILocation(line: 1506, column: 9, scope: !18377)
!18390 = !DILocation(line: 1506, column: 2, scope: !18377)
!18391 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3915, file: !3915, line: 571, type: !3916, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18392)
!18392 = !{!18393}
!18393 = !DILocalVariable(name: "t", arg: 1, scope: !18391, file: !3915, line: 571, type: !112)
!18394 = !DILocation(line: 0, scope: !18391)
!18395 = !DILocation(line: 0, scope: !16462, inlinedAt: !18396)
!18396 = distinct !DILocation(line: 574, column: 9, scope: !18391)
!18397 = !DILocation(line: 135, column: 5, scope: !18369, inlinedAt: !18396)
!18398 = !DILocation(line: 139, column: 13, scope: !18367, inlinedAt: !18396)
!18399 = !DILocation(line: 574, column: 2, scope: !18391)
!18400 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3915, file: !3915, line: 1187, type: !3916, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18401)
!18401 = !{!18402}
!18402 = !DILocalVariable(name: "t", arg: 1, scope: !18400, file: !3915, line: 1187, type: !112)
!18403 = !DILocation(line: 0, scope: !18400)
!18404 = !DILocation(line: 0, scope: !16462, inlinedAt: !18405)
!18405 = distinct !DILocation(line: 1190, column: 9, scope: !18400)
!18406 = !DILocation(line: 145, column: 13, scope: !18407, inlinedAt: !18405)
!18407 = distinct !DILexicalBlock(scope: !16480, file: !3915, line: 144, column: 10)
!18408 = !DILocation(line: 1190, column: 2, scope: !18400)
!18409 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2907, file: !2907, line: 1517, type: !18280, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18410)
!18410 = !{!18411}
!18411 = !DILocalVariable(name: "thread", arg: 1, scope: !18409, file: !2907, line: 1517, type: !18138)
!18412 = !DILocation(line: 0, scope: !18409)
!18413 = !DILocation(line: 1521, column: 6, scope: !18414)
!18414 = distinct !DILexicalBlock(scope: !18409, file: !2907, line: 1521, column: 6)
!18415 = !DILocation(line: 1521, column: 6, scope: !18409)
!18416 = !DILocation(line: 1525, column: 6, scope: !18417)
!18417 = distinct !DILexicalBlock(scope: !18409, file: !2907, line: 1525, column: 6)
!18418 = !DILocation(line: 1525, column: 37, scope: !18417)
!18419 = !DILocation(line: 1525, column: 6, scope: !18409)
!18420 = !DILocation(line: 1527, column: 20, scope: !18421)
!18421 = distinct !DILexicalBlock(scope: !18422, file: !2907, line: 1527, column: 7)
!18422 = distinct !DILexicalBlock(scope: !18417, file: !2907, line: 1525, column: 42)
!18423 = !DILocation(line: 1527, column: 33, scope: !18421)
!18424 = !DILocation(line: 1527, column: 7, scope: !18422)
!18425 = !DILocation(line: 1532, column: 2, scope: !18409)
!18426 = !DILocation(line: 1533, column: 2, scope: !18409)
!18427 = !DILocation(line: 1031, column: 3, scope: !17127, inlinedAt: !18428)
!18428 = distinct !DILocation(line: 48, column: 10, scope: !17131, inlinedAt: !18429)
!18429 = distinct !DILocation(line: 1537, column: 7, scope: !18430)
!18430 = distinct !DILexicalBlock(scope: !18409, file: !2907, line: 1537, column: 6)
!18431 = !DILocation(line: 0, scope: !17127, inlinedAt: !18428)
!18432 = !DILocation(line: 48, column: 9, scope: !17131, inlinedAt: !18429)
!18433 = !DILocation(line: 1537, column: 6, scope: !18409)
!18434 = !DILocation(line: 1538, column: 3, scope: !18435)
!18435 = distinct !DILexicalBlock(scope: !18430, file: !2907, line: 1537, column: 25)
!18436 = !DILocation(line: 1539, column: 2, scope: !18435)
!18437 = !DILocation(line: 1540, column: 1, scope: !18409)
!18438 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14725, file: !14725, line: 101, type: !16543, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18439)
!18439 = !{!18440}
!18440 = !DILocalVariable(name: "thread", arg: 1, scope: !18438, file: !14725, line: 101, type: !2800)
!18441 = !DILocation(line: 0, scope: !18438)
!18442 = !DILocation(line: 103, column: 23, scope: !18438)
!18443 = !DILocation(line: 103, column: 36, scope: !18438)
!18444 = !DILocation(line: 103, column: 55, scope: !18438)
!18445 = !DILocation(line: 103, column: 2, scope: !18438)
!18446 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2907, file: !2907, line: 1567, type: !18447, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18449)
!18447 = !DISubroutineType(types: !18448)
!18448 = !{!18138}
!18449 = !{!18450}
!18450 = !DILocalVariable(name: "ret", scope: !18446, file: !2907, line: 1577, type: !18138)
!18451 = !DILocation(line: 1577, column: 30, scope: !18446)
!18452 = !DILocation(line: 0, scope: !18446)
!18453 = !DILocation(line: 1582, column: 2, scope: !18446)
!18454 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2907, file: !2907, line: 1593, type: !9218, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !2501)
!18455 = !DILocation(line: 1031, column: 3, scope: !17127, inlinedAt: !18456)
!18456 = distinct !DILocation(line: 48, column: 10, scope: !17131, inlinedAt: !18457)
!18457 = distinct !DILocation(line: 1595, column: 10, scope: !18454)
!18458 = !DILocation(line: 0, scope: !17127, inlinedAt: !18456)
!18459 = !DILocation(line: 48, column: 9, scope: !17131, inlinedAt: !18457)
!18460 = !DILocation(line: 1595, column: 27, scope: !18454)
!18461 = !DILocation(line: 1595, column: 41, scope: !18454)
!18462 = !DILocation(line: 1595, column: 30, scope: !18454)
!18463 = !DILocation(line: 1595, column: 2, scope: !18454)
!18464 = distinct !DISubprogram(name: "z_thread_abort", scope: !2907, file: !2907, line: 1725, type: !16360, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18465)
!18465 = !{!18466, !18467}
!18466 = !DILocalVariable(name: "thread", arg: 1, scope: !18464, file: !2907, line: 1725, type: !2800)
!18467 = !DILocalVariable(name: "key", scope: !18464, file: !2907, line: 1727, type: !16394)
!18468 = !DILocation(line: 0, scope: !18464)
!18469 = !DILocation(line: 0, scope: !16402, inlinedAt: !18470)
!18470 = distinct !DILocation(line: 1727, column: 25, scope: !18464)
!18471 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !18472)
!18472 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !18470)
!18473 = !DILocation(line: 0, scope: !16411, inlinedAt: !18472)
!18474 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !18470)
!18475 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !18470)
!18476 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !18470)
!18477 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !18470)
!18478 = !DILocation(line: 1729, column: 20, scope: !18479)
!18479 = distinct !DILexicalBlock(scope: !18464, file: !2907, line: 1729, column: 6)
!18480 = !DILocation(line: 1729, column: 33, scope: !18479)
!18481 = !DILocation(line: 1729, column: 48, scope: !18479)
!18482 = !DILocation(line: 1729, column: 6, scope: !18464)
!18483 = !DILocation(line: 0, scope: !16436, inlinedAt: !18484)
!18484 = distinct !DILocation(line: 1730, column: 3, scope: !18485)
!18485 = distinct !DILexicalBlock(scope: !18479, file: !2907, line: 1729, column: 54)
!18486 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !18484)
!18487 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !18484)
!18488 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !18484)
!18489 = !DILocation(line: 0, scope: !16450, inlinedAt: !18490)
!18490 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !18484)
!18491 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !18490)
!18492 = !DILocation(line: 1731, column: 3, scope: !18493)
!18493 = distinct !DILexicalBlock(scope: !18494, file: !2907, line: 1731, column: 3)
!18494 = distinct !DILexicalBlock(scope: !18495, file: !2907, line: 1731, column: 3)
!18495 = distinct !DILexicalBlock(scope: !18485, file: !2907, line: 1731, column: 3)
!18496 = !DILocation(line: 1736, column: 20, scope: !18497)
!18497 = distinct !DILexicalBlock(scope: !18464, file: !2907, line: 1736, column: 6)
!18498 = !DILocation(line: 1736, column: 33, scope: !18497)
!18499 = !DILocation(line: 1736, column: 49, scope: !18497)
!18500 = !DILocation(line: 1736, column: 6, scope: !18464)
!18501 = !DILocation(line: 0, scope: !16436, inlinedAt: !18502)
!18502 = distinct !DILocation(line: 1737, column: 3, scope: !18503)
!18503 = distinct !DILexicalBlock(scope: !18497, file: !2907, line: 1736, column: 56)
!18504 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !18502)
!18505 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !18502)
!18506 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !18502)
!18507 = !DILocation(line: 0, scope: !16450, inlinedAt: !18508)
!18508 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !18502)
!18509 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !18508)
!18510 = !DILocation(line: 1738, column: 3, scope: !18503)
!18511 = !DILocation(line: 1775, column: 2, scope: !18464)
!18512 = !DILocation(line: 1776, column: 16, scope: !18513)
!18513 = distinct !DILexicalBlock(scope: !18464, file: !2907, line: 1776, column: 6)
!18514 = !DILocation(line: 1776, column: 13, scope: !18513)
!18515 = !DILocation(line: 1776, column: 25, scope: !18513)
!18516 = !DILocation(line: 1031, column: 3, scope: !17127, inlinedAt: !18517)
!18517 = distinct !DILocation(line: 48, column: 10, scope: !17131, inlinedAt: !18518)
!18518 = distinct !DILocation(line: 1776, column: 29, scope: !18513)
!18519 = !DILocation(line: 0, scope: !17127, inlinedAt: !18517)
!18520 = !DILocation(line: 48, column: 9, scope: !17131, inlinedAt: !18518)
!18521 = !DILocation(line: 1776, column: 6, scope: !18464)
!18522 = !DILocation(line: 0, scope: !17078, inlinedAt: !18523)
!18523 = distinct !DILocation(line: 1777, column: 3, scope: !18524)
!18524 = distinct !DILexicalBlock(scope: !18513, file: !2907, line: 1776, column: 47)
!18525 = !DILocation(line: 0, scope: !17087, inlinedAt: !18526)
!18526 = distinct !DILocation(line: 195, column: 2, scope: !17078, inlinedAt: !18523)
!18527 = !DILocation(line: 225, column: 2, scope: !17094, inlinedAt: !18526)
!18528 = !DILocation(line: 225, column: 2, scope: !17095, inlinedAt: !18526)
!18529 = !DILocation(line: 225, column: 2, scope: !17098, inlinedAt: !18526)
!18530 = !DILocation(line: 196, column: 9, scope: !17078, inlinedAt: !18523)
!18531 = !DILocation(line: 1778, column: 3, scope: !18532)
!18532 = distinct !DILexicalBlock(scope: !18533, file: !2907, line: 1778, column: 3)
!18533 = distinct !DILexicalBlock(scope: !18534, file: !2907, line: 1778, column: 3)
!18534 = distinct !DILexicalBlock(scope: !18524, file: !2907, line: 1778, column: 3)
!18535 = !DILocation(line: 0, scope: !16436, inlinedAt: !18536)
!18536 = distinct !DILocation(line: 1780, column: 2, scope: !18464)
!18537 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !18536)
!18538 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !18536)
!18539 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !18536)
!18540 = !DILocation(line: 0, scope: !16450, inlinedAt: !18541)
!18541 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !18536)
!18542 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !18541)
!18543 = !DILocation(line: 1781, column: 1, scope: !18464)
!18544 = distinct !DISubprogram(name: "end_thread", scope: !2907, file: !2907, line: 1690, type: !16360, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18545)
!18545 = !{!18546}
!18546 = !DILocalVariable(name: "thread", arg: 1, scope: !18544, file: !2907, line: 1690, type: !2800)
!18547 = !DILocation(line: 0, scope: !18544)
!18548 = !DILocation(line: 1695, column: 20, scope: !18549)
!18549 = distinct !DILexicalBlock(scope: !18544, file: !2907, line: 1695, column: 6)
!18550 = !DILocation(line: 1695, column: 33, scope: !18549)
!18551 = !DILocation(line: 1695, column: 49, scope: !18549)
!18552 = !DILocation(line: 1695, column: 6, scope: !18544)
!18553 = !DILocation(line: 1697, column: 29, scope: !18554)
!18554 = distinct !DILexicalBlock(scope: !18549, file: !2907, line: 1695, column: 56)
!18555 = !DILocation(line: 1698, column: 7, scope: !18556)
!18556 = distinct !DILexicalBlock(scope: !18554, file: !2907, line: 1698, column: 7)
!18557 = !DILocation(line: 1698, column: 7, scope: !18554)
!18558 = !DILocation(line: 0, scope: !16594, inlinedAt: !18559)
!18559 = distinct !DILocation(line: 1699, column: 4, scope: !18560)
!18560 = distinct !DILexicalBlock(scope: !18556, file: !2907, line: 1698, column: 35)
!18561 = !DILocation(line: 266, column: 28, scope: !16594, inlinedAt: !18559)
!18562 = !DILocation(line: 0, scope: !16602, inlinedAt: !18563)
!18563 = distinct !DILocation(line: 268, column: 3, scope: !16606, inlinedAt: !18559)
!18564 = !DILocation(line: 234, column: 2, scope: !16602, inlinedAt: !18563)
!18565 = !DILocation(line: 1700, column: 3, scope: !18560)
!18566 = !DILocation(line: 1701, column: 20, scope: !18567)
!18567 = distinct !DILexicalBlock(scope: !18554, file: !2907, line: 1701, column: 7)
!18568 = !DILocation(line: 1701, column: 30, scope: !18567)
!18569 = !DILocation(line: 1701, column: 7, scope: !18554)
!18570 = !DILocation(line: 1702, column: 4, scope: !18571)
!18571 = distinct !DILexicalBlock(scope: !18567, file: !2907, line: 1701, column: 39)
!18572 = !DILocation(line: 1703, column: 3, scope: !18571)
!18573 = !DILocation(line: 1704, column: 9, scope: !18554)
!18574 = !DILocation(line: 1705, column: 23, scope: !18554)
!18575 = !DILocation(line: 1705, column: 3, scope: !18554)
!18576 = !DILocation(line: 1706, column: 3, scope: !18554)
!18577 = !DILocation(line: 1722, column: 2, scope: !18554)
!18578 = !DILocation(line: 1723, column: 1, scope: !18544)
!18579 = distinct !DISubprogram(name: "unpend_all", scope: !2907, file: !2907, line: 1674, type: !18580, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18582)
!18580 = !DISubroutineType(types: !18581)
!18581 = !{null, !2831}
!18582 = !{!18583, !18584}
!18583 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18579, file: !2907, line: 1674, type: !2831)
!18584 = !DILocalVariable(name: "thread", scope: !18579, file: !2907, line: 1676, type: !2800)
!18585 = !DILocation(line: 0, scope: !18579)
!18586 = !DILocation(line: 1678, column: 19, scope: !18579)
!18587 = !DILocation(line: 1678, column: 41, scope: !18579)
!18588 = !DILocation(line: 1678, column: 2, scope: !18579)
!18589 = !DILocation(line: 1679, column: 3, scope: !18590)
!18590 = distinct !DILexicalBlock(scope: !18579, file: !2907, line: 1678, column: 50)
!18591 = !DILocation(line: 1680, column: 9, scope: !18590)
!18592 = !DILocalVariable(name: "thread", arg: 1, scope: !18593, file: !14745, line: 65, type: !2800)
!18593 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14745, file: !14745, line: 65, type: !18594, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18596)
!18594 = !DISubroutineType(types: !18595)
!18595 = !{null, !2800, !32}
!18596 = !{!18592, !18597}
!18597 = !DILocalVariable(name: "value", arg: 2, scope: !18593, file: !14745, line: 65, type: !32)
!18598 = !DILocation(line: 0, scope: !18593, inlinedAt: !18599)
!18599 = distinct !DILocation(line: 1681, column: 3, scope: !18590)
!18600 = !DILocation(line: 67, column: 15, scope: !18593, inlinedAt: !18599)
!18601 = !DILocation(line: 67, column: 33, scope: !18593, inlinedAt: !18599)
!18602 = !DILocation(line: 1682, column: 3, scope: !18590)
!18603 = distinct !{!18603, !18588, !18604}
!18604 = !DILocation(line: 1683, column: 2, scope: !18579)
!18605 = !DILocation(line: 1684, column: 1, scope: !18579)
!18606 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2907, file: !2907, line: 1794, type: !18607, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18609)
!18607 = !DISubroutineType(types: !18608)
!18608 = !{!103, !2800, !17288}
!18609 = !{!18610, !18611, !18612, !18613}
!18610 = !DILocalVariable(name: "thread", arg: 1, scope: !18606, file: !2907, line: 1794, type: !2800)
!18611 = !DILocalVariable(name: "timeout", arg: 2, scope: !18606, file: !2907, line: 1794, type: !17288)
!18612 = !DILocalVariable(name: "key", scope: !18606, file: !2907, line: 1796, type: !16394)
!18613 = !DILocalVariable(name: "ret", scope: !18606, file: !2907, line: 1797, type: !103)
!18614 = !DILocation(line: 0, scope: !18606)
!18615 = !DILocation(line: 0, scope: !16402, inlinedAt: !18616)
!18616 = distinct !DILocation(line: 1796, column: 25, scope: !18606)
!18617 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !18618)
!18618 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !18616)
!18619 = !DILocation(line: 0, scope: !16411, inlinedAt: !18618)
!18620 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !18616)
!18621 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !18616)
!18622 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !18616)
!18623 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !18616)
!18624 = !DILocation(line: 1801, column: 20, scope: !18625)
!18625 = distinct !DILexicalBlock(scope: !18606, file: !2907, line: 1801, column: 6)
!18626 = !DILocation(line: 1801, column: 33, scope: !18625)
!18627 = !DILocation(line: 1801, column: 49, scope: !18625)
!18628 = !DILocation(line: 1801, column: 6, scope: !18606)
!18629 = !DILocation(line: 1803, column: 13, scope: !18630)
!18630 = distinct !DILexicalBlock(scope: !18625, file: !2907, line: 1803, column: 13)
!18631 = !DILocation(line: 1803, column: 13, scope: !18625)
!18632 = !DILocation(line: 1805, column: 24, scope: !18633)
!18633 = distinct !DILexicalBlock(scope: !18630, file: !2907, line: 1805, column: 13)
!18634 = !DILocation(line: 1805, column: 21, scope: !18633)
!18635 = !DILocation(line: 1805, column: 34, scope: !18633)
!18636 = !DILocation(line: 1806, column: 20, scope: !18633)
!18637 = !DILocation(line: 1806, column: 44, scope: !18633)
!18638 = !DILocation(line: 1806, column: 30, scope: !18633)
!18639 = !DILocation(line: 1805, column: 13, scope: !18630)
!18640 = !DILocation(line: 1031, column: 3, scope: !17127, inlinedAt: !18641)
!18641 = distinct !DILocation(line: 48, column: 10, scope: !17131, inlinedAt: !18642)
!18642 = distinct !DILocation(line: 1809, column: 3, scope: !18643)
!18643 = distinct !DILexicalBlock(scope: !18644, file: !2907, line: 1809, column: 3)
!18644 = distinct !DILexicalBlock(scope: !18645, file: !2907, line: 1809, column: 3)
!18645 = distinct !DILexicalBlock(scope: !18633, file: !2907, line: 1808, column: 9)
!18646 = !DILocation(line: 0, scope: !17127, inlinedAt: !18641)
!18647 = !DILocation(line: 48, column: 9, scope: !17131, inlinedAt: !18642)
!18648 = !DILocation(line: 1809, column: 3, scope: !18644)
!18649 = !DILocation(line: 1809, column: 3, scope: !18650)
!18650 = distinct !DILexicalBlock(scope: !18643, file: !2907, line: 1809, column: 3)
!18651 = !DILocation(line: 1810, column: 23, scope: !18645)
!18652 = !DILocation(line: 1810, column: 42, scope: !18645)
!18653 = !DILocation(line: 1810, column: 3, scope: !18645)
!18654 = !DILocation(line: 1811, column: 22, scope: !18645)
!18655 = !DILocation(line: 1811, column: 3, scope: !18645)
!18656 = !DILocation(line: 0, scope: !17078, inlinedAt: !18657)
!18657 = distinct !DILocation(line: 1814, column: 9, scope: !18645)
!18658 = !DILocation(line: 0, scope: !17087, inlinedAt: !18659)
!18659 = distinct !DILocation(line: 195, column: 2, scope: !17078, inlinedAt: !18657)
!18660 = !DILocation(line: 225, column: 2, scope: !17094, inlinedAt: !18659)
!18661 = !DILocation(line: 225, column: 2, scope: !17095, inlinedAt: !18659)
!18662 = !DILocation(line: 225, column: 2, scope: !17098, inlinedAt: !18659)
!18663 = !DILocation(line: 196, column: 9, scope: !17078, inlinedAt: !18657)
!18664 = !DILocation(line: 1817, column: 3, scope: !18645)
!18665 = !DILocation(line: 0, scope: !18625)
!18666 = !DILocation(line: 0, scope: !16436, inlinedAt: !18667)
!18667 = distinct !DILocation(line: 1822, column: 2, scope: !18606)
!18668 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !18667)
!18669 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !18667)
!18670 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !18667)
!18671 = !DILocation(line: 0, scope: !16450, inlinedAt: !18672)
!18672 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !18667)
!18673 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !18672)
!18674 = !DILocation(line: 1823, column: 2, scope: !18606)
!18675 = !DILocation(line: 1824, column: 1, scope: !18606)
!18676 = distinct !DISubprogram(name: "z_sched_wake", scope: !2907, file: !2907, line: 1882, type: !18677, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18679)
!18677 = !DISubroutineType(types: !18678)
!18678 = !{!122, !2831, !103, !102}
!18679 = !{!18680, !18681, !18682, !18683, !18684, !18685, !18687}
!18680 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18676, file: !2907, line: 1882, type: !2831)
!18681 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !18676, file: !2907, line: 1882, type: !103)
!18682 = !DILocalVariable(name: "swap_data", arg: 3, scope: !18676, file: !2907, line: 1882, type: !102)
!18683 = !DILocalVariable(name: "thread", scope: !18676, file: !2907, line: 1884, type: !2800)
!18684 = !DILocalVariable(name: "ret", scope: !18676, file: !2907, line: 1885, type: !122)
!18685 = !DILocalVariable(name: "__i", scope: !18686, file: !2907, line: 1887, type: !16394)
!18686 = distinct !DILexicalBlock(scope: !18676, file: !2907, line: 1887, column: 2)
!18687 = !DILocalVariable(name: "__key", scope: !18686, file: !2907, line: 1887, type: !16394)
!18688 = !DILocation(line: 0, scope: !18676)
!18689 = !DILocation(line: 0, scope: !18686)
!18690 = !DILocation(line: 0, scope: !16402, inlinedAt: !18691)
!18691 = distinct !DILocation(line: 1887, column: 2, scope: !18686)
!18692 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !18693)
!18693 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !18691)
!18694 = !DILocation(line: 0, scope: !16411, inlinedAt: !18693)
!18695 = !DILocation(line: 148, column: 2, scope: !16419, inlinedAt: !18691)
!18696 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !18691)
!18697 = !DILocation(line: 148, column: 2, scope: !16423, inlinedAt: !18691)
!18698 = !DILocation(line: 160, column: 2, scope: !16402, inlinedAt: !18691)
!18699 = !DILocation(line: 1888, column: 12, scope: !18700)
!18700 = distinct !DILexicalBlock(scope: !18701, file: !2907, line: 1887, column: 26)
!18701 = distinct !DILexicalBlock(scope: !18686, file: !2907, line: 1887, column: 2)
!18702 = !DILocation(line: 1890, column: 14, scope: !18703)
!18703 = distinct !DILexicalBlock(scope: !18700, file: !2907, line: 1890, column: 7)
!18704 = !DILocation(line: 1890, column: 7, scope: !18700)
!18705 = !DILocalVariable(name: "thread", arg: 1, scope: !18706, file: !15588, line: 134, type: !2800)
!18706 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15588, file: !15588, line: 134, type: !18707, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18709)
!18707 = !DISubroutineType(types: !18708)
!18708 = !{null, !2800, !32, !102}
!18709 = !{!18705, !18710, !18711}
!18710 = !DILocalVariable(name: "value", arg: 2, scope: !18706, file: !15588, line: 135, type: !32)
!18711 = !DILocalVariable(name: "data", arg: 3, scope: !18706, file: !15588, line: 136, type: !102)
!18712 = !DILocation(line: 0, scope: !18706, inlinedAt: !18713)
!18713 = distinct !DILocation(line: 1891, column: 4, scope: !18714)
!18714 = distinct !DILexicalBlock(scope: !18703, file: !2907, line: 1890, column: 23)
!18715 = !DILocation(line: 0, scope: !18593, inlinedAt: !18716)
!18716 = distinct !DILocation(line: 138, column: 2, scope: !18706, inlinedAt: !18713)
!18717 = !DILocation(line: 67, column: 15, scope: !18593, inlinedAt: !18716)
!18718 = !DILocation(line: 67, column: 33, scope: !18593, inlinedAt: !18716)
!18719 = !DILocation(line: 139, column: 15, scope: !18706, inlinedAt: !18713)
!18720 = !DILocation(line: 139, column: 25, scope: !18706, inlinedAt: !18713)
!18721 = !DILocation(line: 1894, column: 4, scope: !18714)
!18722 = !DILocation(line: 1895, column: 10, scope: !18714)
!18723 = !DILocation(line: 1896, column: 4, scope: !18714)
!18724 = !DILocation(line: 1898, column: 3, scope: !18714)
!18725 = !DILocation(line: 0, scope: !16436, inlinedAt: !18726)
!18726 = distinct !DILocation(line: 1887, column: 2, scope: !18701)
!18727 = !DILocation(line: 194, column: 2, scope: !16444, inlinedAt: !18726)
!18728 = !DILocation(line: 194, column: 2, scope: !16445, inlinedAt: !18726)
!18729 = !DILocation(line: 194, column: 2, scope: !16448, inlinedAt: !18726)
!18730 = !DILocation(line: 0, scope: !16450, inlinedAt: !18731)
!18731 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !18726)
!18732 = !DILocation(line: 95, column: 2, scope: !16450, inlinedAt: !18731)
!18733 = !DILocation(line: 1901, column: 2, scope: !18676)
!18734 = distinct !DISubprogram(name: "z_sched_wait", scope: !2907, file: !2907, line: 1904, type: !18735, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !18738)
!18735 = !DISubroutineType(types: !18736)
!18736 = !{!103, !16405, !16394, !2831, !17288, !18737}
!18737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!18738 = !{!18739, !18740, !18741, !18742, !18743, !18744}
!18739 = !DILocalVariable(name: "lock", arg: 1, scope: !18734, file: !2907, line: 1904, type: !16405)
!18740 = !DILocalVariable(name: "key", arg: 2, scope: !18734, file: !2907, line: 1904, type: !16394)
!18741 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18734, file: !2907, line: 1905, type: !2831)
!18742 = !DILocalVariable(name: "timeout", arg: 4, scope: !18734, file: !2907, line: 1905, type: !17288)
!18743 = !DILocalVariable(name: "data", arg: 5, scope: !18734, file: !2907, line: 1905, type: !18737)
!18744 = !DILocalVariable(name: "ret", scope: !18734, file: !2907, line: 1907, type: !103)
!18745 = !DILocation(line: 0, scope: !18734)
!18746 = !DILocation(line: 1907, column: 12, scope: !18734)
!18747 = !DILocation(line: 1909, column: 11, scope: !18748)
!18748 = distinct !DILexicalBlock(scope: !18734, file: !2907, line: 1909, column: 6)
!18749 = !DILocation(line: 1909, column: 6, scope: !18734)
!18750 = !DILocation(line: 1910, column: 11, scope: !18751)
!18751 = distinct !DILexicalBlock(scope: !18748, file: !2907, line: 1909, column: 20)
!18752 = !DILocation(line: 1910, column: 26, scope: !18751)
!18753 = !DILocation(line: 1910, column: 9, scope: !18751)
!18754 = !DILocation(line: 1911, column: 2, scope: !18751)
!18755 = !DILocation(line: 1912, column: 2, scope: !18734)
!18756 = distinct !DISubprogram(name: "z_data_copy", scope: !18757, file: !18757, line: 22, type: !323, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3729, retainedNodes: !2501)
!18757 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18758 = !DILocation(line: 24, column: 2, scope: !18756)
!18759 = !DILocation(line: 27, column: 2, scope: !18756)
!18760 = !DILocation(line: 31, column: 2, scope: !18756)
!18761 = !DILocation(line: 71, column: 1, scope: !18756)
!18762 = distinct !DISubprogram(name: "z_add_timeout", scope: !2944, file: !2944, line: 88, type: !18763, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !18769)
!18763 = !DISubroutineType(types: !18764)
!18764 = !{null, !2917, !2936, !18765}
!18765 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !18766)
!18766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !18767)
!18767 = !{!18768}
!18768 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18766, file: !105, line: 66, baseType: !104, size: 64)
!18769 = !{!18770, !18771, !18772, !18773, !18779, !18780, !18783, !18786}
!18770 = !DILocalVariable(name: "to", arg: 1, scope: !18762, file: !2944, line: 88, type: !2917)
!18771 = !DILocalVariable(name: "fn", arg: 2, scope: !18762, file: !2944, line: 88, type: !2936)
!18772 = !DILocalVariable(name: "timeout", arg: 3, scope: !18762, file: !2944, line: 89, type: !18765)
!18773 = !DILocalVariable(name: "__i", scope: !18774, file: !2944, line: 102, type: !18775)
!18774 = distinct !DILexicalBlock(scope: !18762, file: !2944, line: 102, column: 2)
!18775 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !18776)
!18776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !18777)
!18777 = !{!18778}
!18778 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18776, file: !152, line: 33, baseType: !103, size: 32)
!18779 = !DILocalVariable(name: "__key", scope: !18774, file: !2944, line: 102, type: !18775)
!18780 = !DILocalVariable(name: "t", scope: !18781, file: !2944, line: 103, type: !2917)
!18781 = distinct !DILexicalBlock(scope: !18782, file: !2944, line: 102, column: 24)
!18782 = distinct !DILexicalBlock(scope: !18774, file: !2944, line: 102, column: 2)
!18783 = !DILocalVariable(name: "ticks", scope: !18784, file: !2944, line: 107, type: !104)
!18784 = distinct !DILexicalBlock(scope: !18785, file: !2944, line: 106, column: 39)
!18785 = distinct !DILexicalBlock(scope: !18781, file: !2944, line: 105, column: 7)
!18786 = !DILocalVariable(name: "next_time", scope: !18787, file: !2944, line: 137, type: !320)
!18787 = distinct !DILexicalBlock(scope: !18788, file: !2944, line: 127, column: 22)
!18788 = distinct !DILexicalBlock(scope: !18781, file: !2944, line: 127, column: 7)
!18789 = !DILocation(line: 0, scope: !18762)
!18790 = !DILocation(line: 91, column: 6, scope: !18791)
!18791 = distinct !DILexicalBlock(scope: !18762, file: !2944, line: 91, column: 6)
!18792 = !DILocation(line: 91, column: 6, scope: !18762)
!18793 = !DILocation(line: 99, column: 2, scope: !18794)
!18794 = distinct !DILexicalBlock(scope: !18795, file: !2944, line: 99, column: 2)
!18795 = distinct !DILexicalBlock(scope: !18762, file: !2944, line: 99, column: 2)
!18796 = !DILocation(line: 99, column: 2, scope: !18795)
!18797 = !DILocation(line: 99, column: 2, scope: !18798)
!18798 = distinct !DILexicalBlock(scope: !18794, file: !2944, line: 99, column: 2)
!18799 = !DILocation(line: 100, column: 6, scope: !18762)
!18800 = !DILocation(line: 100, column: 9, scope: !18762)
!18801 = !DILocation(line: 0, scope: !18774)
!18802 = !DILocalVariable(name: "l", arg: 1, scope: !18803, file: !152, line: 136, type: !18806)
!18803 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !18804, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !18807)
!18804 = !DISubroutineType(types: !18805)
!18805 = !{!18775, !18806}
!18806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 32)
!18807 = !{!18802, !18808}
!18808 = !DILocalVariable(name: "k", scope: !18803, file: !152, line: 139, type: !18775)
!18809 = !DILocation(line: 0, scope: !18803, inlinedAt: !18810)
!18810 = distinct !DILocation(line: 102, column: 2, scope: !18774)
!18811 = !DILocation(line: 55, column: 2, scope: !18812, inlinedAt: !18816)
!18812 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7544, file: !7544, line: 42, type: !7545, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !18813)
!18813 = !{!18814, !18815}
!18814 = !DILocalVariable(name: "key", scope: !18812, file: !7544, line: 44, type: !32)
!18815 = !DILocalVariable(name: "tmp", scope: !18812, file: !7544, line: 53, type: !32)
!18816 = distinct !DILocation(line: 145, column: 10, scope: !18803, inlinedAt: !18810)
!18817 = !{i64 2231544}
!18818 = !DILocation(line: 0, scope: !18812, inlinedAt: !18816)
!18819 = !DILocation(line: 148, column: 2, scope: !18820, inlinedAt: !18810)
!18820 = distinct !DILexicalBlock(scope: !18821, file: !152, line: 148, column: 2)
!18821 = distinct !DILexicalBlock(scope: !18803, file: !152, line: 148, column: 2)
!18822 = !DILocation(line: 148, column: 2, scope: !18821, inlinedAt: !18810)
!18823 = !DILocation(line: 148, column: 2, scope: !18824, inlinedAt: !18810)
!18824 = distinct !DILexicalBlock(scope: !18820, file: !152, line: 148, column: 2)
!18825 = !DILocation(line: 160, column: 2, scope: !18803, inlinedAt: !18810)
!18826 = !DILocation(line: 106, column: 33, scope: !18785)
!18827 = !DILocation(line: 105, column: 7, scope: !18781)
!18828 = !DILocation(line: 107, column: 50, scope: !18784)
!18829 = !DILocation(line: 107, column: 48, scope: !18784)
!18830 = !DILocation(line: 0, scope: !18784)
!18831 = !DILocation(line: 109, column: 17, scope: !18784)
!18832 = !DILocation(line: 110, column: 3, scope: !18784)
!18833 = !DILocation(line: 111, column: 31, scope: !18834)
!18834 = distinct !DILexicalBlock(scope: !18785, file: !2944, line: 110, column: 10)
!18835 = !DILocation(line: 111, column: 37, scope: !18834)
!18836 = !DILocation(line: 111, column: 35, scope: !18834)
!18837 = !DILocation(line: 0, scope: !18785)
!18838 = !DILocation(line: 109, column: 8, scope: !18784)
!18839 = !DILocation(line: 109, column: 15, scope: !18784)
!18840 = !DILocation(line: 114, column: 12, scope: !18841)
!18841 = distinct !DILexicalBlock(scope: !18781, file: !2944, line: 114, column: 3)
!18842 = !DILocation(line: 0, scope: !18781)
!18843 = !DILocation(line: 114, column: 3, scope: !18841)
!18844 = !DILocation(line: 115, column: 24, scope: !18845)
!18845 = distinct !DILexicalBlock(scope: !18846, file: !2944, line: 115, column: 8)
!18846 = distinct !DILexicalBlock(scope: !18847, file: !2944, line: 114, column: 45)
!18847 = distinct !DILexicalBlock(scope: !18841, file: !2944, line: 114, column: 3)
!18848 = !DILocation(line: 115, column: 11, scope: !18845)
!18849 = !DILocation(line: 115, column: 18, scope: !18845)
!18850 = !DILocation(line: 115, column: 8, scope: !18846)
!18851 = !DILocation(line: 116, column: 15, scope: !18852)
!18852 = distinct !DILexicalBlock(scope: !18845, file: !2944, line: 115, column: 32)
!18853 = !DILocation(line: 117, column: 26, scope: !18852)
!18854 = !DILocation(line: 117, column: 5, scope: !18852)
!18855 = !DILocation(line: 123, column: 7, scope: !18781)
!18856 = !DILocation(line: 120, column: 15, scope: !18846)
!18857 = !DILocation(line: 114, column: 36, scope: !18847)
!18858 = distinct !{!18858, !18843, !18859}
!18859 = !DILocation(line: 121, column: 3, scope: !18841)
!18860 = !DILocation(line: 124, column: 4, scope: !18861)
!18861 = distinct !DILexicalBlock(scope: !18862, file: !2944, line: 123, column: 18)
!18862 = distinct !DILexicalBlock(scope: !18781, file: !2944, line: 123, column: 7)
!18863 = !DILocation(line: 125, column: 3, scope: !18861)
!18864 = !DILocation(line: 127, column: 13, scope: !18788)
!18865 = !DILocation(line: 127, column: 10, scope: !18788)
!18866 = !DILocation(line: 127, column: 7, scope: !18781)
!18867 = !DILocation(line: 137, column: 24, scope: !18787)
!18868 = !DILocation(line: 0, scope: !18787)
!18869 = !DILocation(line: 139, column: 18, scope: !18870)
!18870 = distinct !DILexicalBlock(scope: !18787, file: !2944, line: 139, column: 8)
!18871 = !DILocation(line: 139, column: 23, scope: !18870)
!18872 = !DILocation(line: 141, column: 5, scope: !18873)
!18873 = distinct !DILexicalBlock(scope: !18870, file: !2944, line: 140, column: 48)
!18874 = !DILocation(line: 142, column: 4, scope: !18873)
!18875 = !DILocalVariable(name: "key", arg: 2, scope: !18876, file: !152, line: 190, type: !18775)
!18876 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !18877, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !18879)
!18877 = !DISubroutineType(types: !18878)
!18878 = !{null, !18806, !18775}
!18879 = !{!18880, !18875}
!18880 = !DILocalVariable(name: "l", arg: 1, scope: !18876, file: !152, line: 189, type: !18806)
!18881 = !DILocation(line: 0, scope: !18876, inlinedAt: !18882)
!18882 = distinct !DILocation(line: 102, column: 2, scope: !18782)
!18883 = !DILocation(line: 194, column: 2, scope: !18884, inlinedAt: !18882)
!18884 = distinct !DILexicalBlock(scope: !18885, file: !152, line: 194, column: 2)
!18885 = distinct !DILexicalBlock(scope: !18876, file: !152, line: 194, column: 2)
!18886 = !DILocation(line: 194, column: 2, scope: !18885, inlinedAt: !18882)
!18887 = !DILocation(line: 194, column: 2, scope: !18888, inlinedAt: !18882)
!18888 = distinct !DILexicalBlock(scope: !18884, file: !152, line: 194, column: 2)
!18889 = !DILocalVariable(name: "key", arg: 1, scope: !18890, file: !7544, line: 84, type: !32)
!18890 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7544, file: !7544, line: 84, type: !7555, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !18891)
!18891 = !{!18889}
!18892 = !DILocation(line: 0, scope: !18890, inlinedAt: !18893)
!18893 = distinct !DILocation(line: 215, column: 2, scope: !18876, inlinedAt: !18882)
!18894 = !DILocation(line: 95, column: 2, scope: !18890, inlinedAt: !18893)
!18895 = !{i64 2232361}
!18896 = !DILocation(line: 148, column: 1, scope: !18762)
!18897 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !136, file: !136, line: 225, type: !18898, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !18902)
!18898 = !DISubroutineType(types: !18899)
!18899 = !{!122, !18900}
!18900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18901, size: 32)
!18901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2921)
!18902 = !{!18903}
!18903 = !DILocalVariable(name: "node", arg: 1, scope: !18897, file: !136, line: 225, type: !18900)
!18904 = !DILocation(line: 0, scope: !18897)
!18905 = !DILocation(line: 227, column: 15, scope: !18897)
!18906 = !DILocation(line: 227, column: 20, scope: !18897)
!18907 = !DILocation(line: 227, column: 2, scope: !18897)
!18908 = distinct !DISubprogram(name: "elapsed", scope: !2944, file: !2944, line: 62, type: !18909, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2501)
!18909 = !DISubroutineType(types: !18910)
!18910 = !{!320}
!18911 = !DILocation(line: 64, column: 9, scope: !18908)
!18912 = !DILocation(line: 64, column: 28, scope: !18908)
!18913 = !DILocation(line: 64, column: 35, scope: !18908)
!18914 = !DILocation(line: 64, column: 2, scope: !18908)
!18915 = distinct !DISubprogram(name: "first", scope: !2944, file: !2944, line: 39, type: !18916, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !18918)
!18916 = !DISubroutineType(types: !18917)
!18917 = !{!2917}
!18918 = !{!18919}
!18919 = !DILocalVariable(name: "t", scope: !18915, file: !2944, line: 41, type: !18920)
!18920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 32)
!18921 = !DILocation(line: 41, column: 19, scope: !18915)
!18922 = !DILocation(line: 0, scope: !18915)
!18923 = !DILocation(line: 43, column: 9, scope: !18915)
!18924 = !DILocation(line: 43, column: 2, scope: !18915)
!18925 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !136, file: !136, line: 443, type: !18926, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !18928)
!18926 = !DISubroutineType(types: !18927)
!18927 = !{null, !18920, !18920}
!18928 = !{!18929, !18930, !18931}
!18929 = !DILocalVariable(name: "successor", arg: 1, scope: !18925, file: !136, line: 443, type: !18920)
!18930 = !DILocalVariable(name: "node", arg: 2, scope: !18925, file: !136, line: 443, type: !18920)
!18931 = !DILocalVariable(name: "prev", scope: !18925, file: !136, line: 445, type: !18932)
!18932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18920)
!18933 = !DILocation(line: 0, scope: !18925)
!18934 = !DILocation(line: 445, column: 39, scope: !18925)
!18935 = !DILocation(line: 447, column: 8, scope: !18925)
!18936 = !DILocation(line: 447, column: 13, scope: !18925)
!18937 = !DILocation(line: 448, column: 8, scope: !18925)
!18938 = !DILocation(line: 448, column: 13, scope: !18925)
!18939 = !DILocation(line: 449, column: 8, scope: !18925)
!18940 = !DILocation(line: 449, column: 13, scope: !18925)
!18941 = !DILocation(line: 450, column: 18, scope: !18925)
!18942 = !DILocation(line: 451, column: 1, scope: !18925)
!18943 = distinct !DISubprogram(name: "next", scope: !2944, file: !2944, line: 46, type: !18944, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !18946)
!18944 = !DISubroutineType(types: !18945)
!18945 = !{!2917, !2917}
!18946 = !{!18947, !18948}
!18947 = !DILocalVariable(name: "t", arg: 1, scope: !18943, file: !2944, line: 46, type: !2917)
!18948 = !DILocalVariable(name: "n", scope: !18943, file: !2944, line: 48, type: !18920)
!18949 = !DILocation(line: 0, scope: !18943)
!18950 = !DILocation(line: 48, column: 58, scope: !18943)
!18951 = !DILocation(line: 48, column: 19, scope: !18943)
!18952 = !DILocation(line: 50, column: 9, scope: !18943)
!18953 = !DILocation(line: 50, column: 2, scope: !18943)
!18954 = distinct !DISubprogram(name: "sys_dlist_append", scope: !136, file: !136, line: 404, type: !18955, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !18958)
!18955 = !DISubroutineType(types: !18956)
!18956 = !{null, !18957, !18920}
!18957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 32)
!18958 = !{!18959, !18960, !18961}
!18959 = !DILocalVariable(name: "list", arg: 1, scope: !18954, file: !136, line: 404, type: !18957)
!18960 = !DILocalVariable(name: "node", arg: 2, scope: !18954, file: !136, line: 404, type: !18920)
!18961 = !DILocalVariable(name: "tail", scope: !18954, file: !136, line: 406, type: !18932)
!18962 = !DILocation(line: 0, scope: !18954)
!18963 = !DILocation(line: 406, column: 34, scope: !18954)
!18964 = !DILocation(line: 408, column: 8, scope: !18954)
!18965 = !DILocation(line: 408, column: 13, scope: !18954)
!18966 = !DILocation(line: 409, column: 8, scope: !18954)
!18967 = !DILocation(line: 409, column: 13, scope: !18954)
!18968 = !DILocation(line: 411, column: 8, scope: !18954)
!18969 = !DILocation(line: 411, column: 13, scope: !18954)
!18970 = !DILocation(line: 412, column: 13, scope: !18954)
!18971 = !DILocation(line: 413, column: 1, scope: !18954)
!18972 = distinct !DISubprogram(name: "next_timeout", scope: !2944, file: !2944, line: 67, type: !18909, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !18973)
!18973 = !{!18974, !18975, !18976}
!18974 = !DILocalVariable(name: "to", scope: !18972, file: !2944, line: 69, type: !2917)
!18975 = !DILocalVariable(name: "ticks_elapsed", scope: !18972, file: !2944, line: 70, type: !320)
!18976 = !DILocalVariable(name: "ret", scope: !18972, file: !2944, line: 71, type: !320)
!18977 = !DILocation(line: 69, column: 24, scope: !18972)
!18978 = !DILocation(line: 0, scope: !18972)
!18979 = !DILocation(line: 70, column: 26, scope: !18972)
!18980 = !DILocation(line: 73, column: 10, scope: !18981)
!18981 = distinct !DILexicalBlock(scope: !18972, file: !2944, line: 73, column: 6)
!18982 = !DILocation(line: 73, column: 19, scope: !18981)
!18983 = !DILocation(line: 74, column: 21, scope: !18981)
!18984 = !DILocation(line: 74, column: 30, scope: !18981)
!18985 = !DILocation(line: 74, column: 28, scope: !18981)
!18986 = !DILocation(line: 74, column: 45, scope: !18981)
!18987 = !DILocation(line: 73, column: 6, scope: !18972)
!18988 = !DILocation(line: 77, column: 9, scope: !18989)
!18989 = distinct !DILexicalBlock(scope: !18981, file: !2944, line: 76, column: 9)
!18990 = !DILocation(line: 0, scope: !18981)
!18991 = !DILocation(line: 81, column: 20, scope: !18992)
!18992 = distinct !DILexicalBlock(scope: !18972, file: !2944, line: 81, column: 6)
!18993 = !DILocation(line: 81, column: 6, scope: !18992)
!18994 = !DILocation(line: 81, column: 32, scope: !18992)
!18995 = !DILocation(line: 85, column: 2, scope: !18972)
!18996 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !136, file: !136, line: 341, type: !18997, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !18999)
!18997 = !DISubroutineType(types: !18998)
!18998 = !{!18920, !18957, !18920}
!18999 = !{!19000, !19001}
!19000 = !DILocalVariable(name: "list", arg: 1, scope: !18996, file: !136, line: 341, type: !18957)
!19001 = !DILocalVariable(name: "node", arg: 2, scope: !18996, file: !136, line: 342, type: !18920)
!19002 = !DILocation(line: 0, scope: !18996)
!19003 = !DILocation(line: 344, column: 15, scope: !18996)
!19004 = !DILocation(line: 344, column: 9, scope: !18996)
!19005 = !DILocation(line: 344, column: 26, scope: !18996)
!19006 = !DILocation(line: 344, column: 2, scope: !18996)
!19007 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !136, file: !136, line: 325, type: !18997, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19008)
!19008 = !{!19009, !19010}
!19009 = !DILocalVariable(name: "list", arg: 1, scope: !19007, file: !136, line: 325, type: !18957)
!19010 = !DILocalVariable(name: "node", arg: 2, scope: !19007, file: !136, line: 326, type: !18920)
!19011 = !DILocation(line: 0, scope: !19007)
!19012 = !DILocation(line: 328, column: 24, scope: !19007)
!19013 = !DILocation(line: 328, column: 15, scope: !19007)
!19014 = !DILocation(line: 328, column: 9, scope: !19007)
!19015 = !DILocation(line: 328, column: 45, scope: !19007)
!19016 = !DILocation(line: 328, column: 2, scope: !19007)
!19017 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !19018, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19020)
!19018 = !DISubroutineType(types: !19019)
!19019 = !{!18920, !18957}
!19020 = !{!19021}
!19021 = !DILocalVariable(name: "list", arg: 1, scope: !19017, file: !136, line: 294, type: !18957)
!19022 = !DILocation(line: 0, scope: !19017)
!19023 = !DILocation(line: 296, column: 9, scope: !19017)
!19024 = !DILocation(line: 296, column: 2, scope: !19017)
!19025 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !19026, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19028)
!19026 = !DISubroutineType(types: !19027)
!19027 = !{!122, !18957}
!19028 = !{!19029}
!19029 = !DILocalVariable(name: "list", arg: 1, scope: !19025, file: !136, line: 266, type: !18957)
!19030 = !DILocation(line: 0, scope: !19025)
!19031 = !DILocation(line: 268, column: 15, scope: !19025)
!19032 = !DILocation(line: 268, column: 20, scope: !19025)
!19033 = !DILocation(line: 268, column: 2, scope: !19025)
!19034 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2944, file: !2944, line: 150, type: !19035, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19037)
!19035 = !DISubroutineType(types: !19036)
!19036 = !{!103, !2917}
!19037 = !{!19038, !19039, !19040, !19042}
!19038 = !DILocalVariable(name: "to", arg: 1, scope: !19034, file: !2944, line: 150, type: !2917)
!19039 = !DILocalVariable(name: "ret", scope: !19034, file: !2944, line: 152, type: !103)
!19040 = !DILocalVariable(name: "__i", scope: !19041, file: !2944, line: 154, type: !18775)
!19041 = distinct !DILexicalBlock(scope: !19034, file: !2944, line: 154, column: 2)
!19042 = !DILocalVariable(name: "__key", scope: !19041, file: !2944, line: 154, type: !18775)
!19043 = !DILocation(line: 0, scope: !19034)
!19044 = !DILocation(line: 0, scope: !19041)
!19045 = !DILocation(line: 0, scope: !18803, inlinedAt: !19046)
!19046 = distinct !DILocation(line: 154, column: 2, scope: !19041)
!19047 = !DILocation(line: 55, column: 2, scope: !18812, inlinedAt: !19048)
!19048 = distinct !DILocation(line: 145, column: 10, scope: !18803, inlinedAt: !19046)
!19049 = !DILocation(line: 0, scope: !18812, inlinedAt: !19048)
!19050 = !DILocation(line: 148, column: 2, scope: !18820, inlinedAt: !19046)
!19051 = !DILocation(line: 148, column: 2, scope: !18821, inlinedAt: !19046)
!19052 = !DILocation(line: 148, column: 2, scope: !18824, inlinedAt: !19046)
!19053 = !DILocation(line: 160, column: 2, scope: !18803, inlinedAt: !19046)
!19054 = !DILocation(line: 155, column: 7, scope: !19055)
!19055 = distinct !DILexicalBlock(scope: !19056, file: !2944, line: 155, column: 7)
!19056 = distinct !DILexicalBlock(scope: !19057, file: !2944, line: 154, column: 24)
!19057 = distinct !DILexicalBlock(scope: !19041, file: !2944, line: 154, column: 2)
!19058 = !DILocation(line: 155, column: 7, scope: !19056)
!19059 = !DILocation(line: 156, column: 4, scope: !19060)
!19060 = distinct !DILexicalBlock(scope: !19055, file: !2944, line: 155, column: 39)
!19061 = !DILocation(line: 158, column: 3, scope: !19060)
!19062 = !DILocation(line: 0, scope: !18876, inlinedAt: !19063)
!19063 = distinct !DILocation(line: 154, column: 2, scope: !19057)
!19064 = !DILocation(line: 194, column: 2, scope: !18884, inlinedAt: !19063)
!19065 = !DILocation(line: 194, column: 2, scope: !18885, inlinedAt: !19063)
!19066 = !DILocation(line: 194, column: 2, scope: !18888, inlinedAt: !19063)
!19067 = !DILocation(line: 0, scope: !18890, inlinedAt: !19068)
!19068 = distinct !DILocation(line: 215, column: 2, scope: !18876, inlinedAt: !19063)
!19069 = !DILocation(line: 95, column: 2, scope: !18890, inlinedAt: !19068)
!19070 = !DILocation(line: 161, column: 2, scope: !19034)
!19071 = distinct !DISubprogram(name: "remove_timeout", scope: !2944, file: !2944, line: 53, type: !2938, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19072)
!19072 = !{!19073}
!19073 = !DILocalVariable(name: "t", arg: 1, scope: !19071, file: !2944, line: 53, type: !2917)
!19074 = !DILocation(line: 0, scope: !19071)
!19075 = !DILocation(line: 55, column: 6, scope: !19076)
!19076 = distinct !DILexicalBlock(scope: !19071, file: !2944, line: 55, column: 6)
!19077 = !DILocation(line: 55, column: 14, scope: !19076)
!19078 = !DILocation(line: 55, column: 6, scope: !19071)
!19079 = !DILocation(line: 56, column: 25, scope: !19080)
!19080 = distinct !DILexicalBlock(scope: !19076, file: !2944, line: 55, column: 23)
!19081 = !DILocation(line: 56, column: 12, scope: !19080)
!19082 = !DILocation(line: 56, column: 19, scope: !19080)
!19083 = !DILocation(line: 57, column: 2, scope: !19080)
!19084 = !DILocation(line: 59, column: 23, scope: !19071)
!19085 = !DILocation(line: 59, column: 2, scope: !19071)
!19086 = !DILocation(line: 60, column: 1, scope: !19071)
!19087 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !136, file: !136, line: 496, type: !19088, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19090)
!19088 = !DISubroutineType(types: !19089)
!19089 = !{null, !18920}
!19090 = !{!19091, !19092, !19093}
!19091 = !DILocalVariable(name: "node", arg: 1, scope: !19087, file: !136, line: 496, type: !18920)
!19092 = !DILocalVariable(name: "prev", scope: !19087, file: !136, line: 498, type: !18932)
!19093 = !DILocalVariable(name: "next", scope: !19087, file: !136, line: 499, type: !18932)
!19094 = !DILocation(line: 0, scope: !19087)
!19095 = !DILocation(line: 498, column: 34, scope: !19087)
!19096 = !DILocation(line: 499, column: 34, scope: !19087)
!19097 = !DILocation(line: 501, column: 8, scope: !19087)
!19098 = !DILocation(line: 501, column: 13, scope: !19087)
!19099 = !DILocation(line: 502, column: 8, scope: !19087)
!19100 = !DILocation(line: 502, column: 13, scope: !19087)
!19101 = !DILocation(line: 503, column: 2, scope: !19087)
!19102 = !DILocation(line: 504, column: 1, scope: !19087)
!19103 = distinct !DISubprogram(name: "sys_dnode_init", scope: !136, file: !136, line: 211, type: !19088, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19104)
!19104 = !{!19105}
!19105 = !DILocalVariable(name: "node", arg: 1, scope: !19103, file: !136, line: 211, type: !18920)
!19106 = !DILocation(line: 0, scope: !19103)
!19107 = !DILocation(line: 213, column: 8, scope: !19103)
!19108 = !DILocation(line: 213, column: 13, scope: !19103)
!19109 = !DILocation(line: 214, column: 8, scope: !19103)
!19110 = !DILocation(line: 214, column: 13, scope: !19103)
!19111 = !DILocation(line: 215, column: 1, scope: !19103)
!19112 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2944, file: !2944, line: 183, type: !19113, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19117)
!19113 = !DISubroutineType(types: !19114)
!19114 = !{!104, !19115}
!19115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19116, size: 32)
!19116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2918)
!19117 = !{!19118, !19119, !19120, !19122}
!19118 = !DILocalVariable(name: "timeout", arg: 1, scope: !19112, file: !2944, line: 183, type: !19115)
!19119 = !DILocalVariable(name: "ticks", scope: !19112, file: !2944, line: 185, type: !104)
!19120 = !DILocalVariable(name: "__i", scope: !19121, file: !2944, line: 187, type: !18775)
!19121 = distinct !DILexicalBlock(scope: !19112, file: !2944, line: 187, column: 2)
!19122 = !DILocalVariable(name: "__key", scope: !19121, file: !2944, line: 187, type: !18775)
!19123 = !DILocation(line: 0, scope: !19112)
!19124 = !DILocation(line: 0, scope: !19121)
!19125 = !DILocation(line: 0, scope: !18803, inlinedAt: !19126)
!19126 = distinct !DILocation(line: 187, column: 2, scope: !19121)
!19127 = !DILocation(line: 55, column: 2, scope: !18812, inlinedAt: !19128)
!19128 = distinct !DILocation(line: 145, column: 10, scope: !18803, inlinedAt: !19126)
!19129 = !DILocation(line: 0, scope: !18812, inlinedAt: !19128)
!19130 = !DILocation(line: 148, column: 2, scope: !18820, inlinedAt: !19126)
!19131 = !DILocation(line: 148, column: 2, scope: !18821, inlinedAt: !19126)
!19132 = !DILocation(line: 148, column: 2, scope: !18824, inlinedAt: !19126)
!19133 = !DILocation(line: 160, column: 2, scope: !18803, inlinedAt: !19126)
!19134 = !DILocation(line: 188, column: 11, scope: !19135)
!19135 = distinct !DILexicalBlock(scope: !19136, file: !2944, line: 187, column: 24)
!19136 = distinct !DILexicalBlock(scope: !19121, file: !2944, line: 187, column: 2)
!19137 = !DILocation(line: 0, scope: !18876, inlinedAt: !19138)
!19138 = distinct !DILocation(line: 187, column: 2, scope: !19136)
!19139 = !DILocation(line: 194, column: 2, scope: !18884, inlinedAt: !19138)
!19140 = !DILocation(line: 194, column: 2, scope: !18885, inlinedAt: !19138)
!19141 = !DILocation(line: 194, column: 2, scope: !18888, inlinedAt: !19138)
!19142 = !DILocation(line: 0, scope: !18890, inlinedAt: !19143)
!19143 = distinct !DILocation(line: 215, column: 2, scope: !18876, inlinedAt: !19138)
!19144 = !DILocation(line: 95, column: 2, scope: !18890, inlinedAt: !19143)
!19145 = !DILocation(line: 191, column: 2, scope: !19112)
!19146 = distinct !DISubprogram(name: "timeout_rem", scope: !2944, file: !2944, line: 165, type: !19113, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19147)
!19147 = !{!19148, !19149, !19150}
!19148 = !DILocalVariable(name: "timeout", arg: 1, scope: !19146, file: !2944, line: 165, type: !19115)
!19149 = !DILocalVariable(name: "ticks", scope: !19146, file: !2944, line: 167, type: !104)
!19150 = !DILocalVariable(name: "t", scope: !19151, file: !2944, line: 173, type: !2917)
!19151 = distinct !DILexicalBlock(scope: !19146, file: !2944, line: 173, column: 2)
!19152 = !DILocation(line: 0, scope: !19146)
!19153 = !DILocation(line: 169, column: 6, scope: !19154)
!19154 = distinct !DILexicalBlock(scope: !19146, file: !2944, line: 169, column: 6)
!19155 = !DILocation(line: 169, column: 6, scope: !19146)
!19156 = !DILocation(line: 173, column: 28, scope: !19151)
!19157 = !DILocation(line: 0, scope: !19151)
!19158 = !DILocation(line: 173, column: 39, scope: !19159)
!19159 = distinct !DILexicalBlock(scope: !19151, file: !2944, line: 173, column: 2)
!19160 = !DILocation(line: 173, column: 2, scope: !19151)
!19161 = !DILocation(line: 174, column: 15, scope: !19162)
!19162 = distinct !DILexicalBlock(scope: !19159, file: !2944, line: 173, column: 61)
!19163 = !DILocation(line: 174, column: 9, scope: !19162)
!19164 = !DILocation(line: 175, column: 15, scope: !19165)
!19165 = distinct !DILexicalBlock(scope: !19162, file: !2944, line: 175, column: 7)
!19166 = !DILocation(line: 175, column: 7, scope: !19162)
!19167 = !DILocation(line: 173, column: 52, scope: !19159)
!19168 = distinct !{!19168, !19160, !19169}
!19169 = !DILocation(line: 178, column: 2, scope: !19151)
!19170 = !DILocation(line: 180, column: 17, scope: !19146)
!19171 = !DILocation(line: 180, column: 15, scope: !19146)
!19172 = !DILocation(line: 180, column: 2, scope: !19146)
!19173 = !DILocation(line: 181, column: 1, scope: !19146)
!19174 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15132, file: !15132, line: 35, type: !19175, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19177)
!19175 = !DISubroutineType(types: !19176)
!19176 = !{!122, !19115}
!19177 = !{!19178}
!19178 = !DILocalVariable(name: "to", arg: 1, scope: !19174, file: !15132, line: 35, type: !19115)
!19179 = !DILocation(line: 0, scope: !19174)
!19180 = !DILocation(line: 37, column: 35, scope: !19174)
!19181 = !DILocation(line: 37, column: 10, scope: !19174)
!19182 = !DILocation(line: 37, column: 9, scope: !19174)
!19183 = !DILocation(line: 37, column: 2, scope: !19174)
!19184 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2944, file: !2944, line: 194, type: !19113, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19185)
!19185 = !{!19186, !19187, !19188, !19190}
!19186 = !DILocalVariable(name: "timeout", arg: 1, scope: !19184, file: !2944, line: 194, type: !19115)
!19187 = !DILocalVariable(name: "ticks", scope: !19184, file: !2944, line: 196, type: !104)
!19188 = !DILocalVariable(name: "__i", scope: !19189, file: !2944, line: 198, type: !18775)
!19189 = distinct !DILexicalBlock(scope: !19184, file: !2944, line: 198, column: 2)
!19190 = !DILocalVariable(name: "__key", scope: !19189, file: !2944, line: 198, type: !18775)
!19191 = !DILocation(line: 0, scope: !19184)
!19192 = !DILocation(line: 0, scope: !19189)
!19193 = !DILocation(line: 0, scope: !18803, inlinedAt: !19194)
!19194 = distinct !DILocation(line: 198, column: 2, scope: !19189)
!19195 = !DILocation(line: 55, column: 2, scope: !18812, inlinedAt: !19196)
!19196 = distinct !DILocation(line: 145, column: 10, scope: !18803, inlinedAt: !19194)
!19197 = !DILocation(line: 0, scope: !18812, inlinedAt: !19196)
!19198 = !DILocation(line: 148, column: 2, scope: !18820, inlinedAt: !19194)
!19199 = !DILocation(line: 148, column: 2, scope: !18821, inlinedAt: !19194)
!19200 = !DILocation(line: 148, column: 2, scope: !18824, inlinedAt: !19194)
!19201 = !DILocation(line: 160, column: 2, scope: !18803, inlinedAt: !19194)
!19202 = !DILocation(line: 199, column: 11, scope: !19203)
!19203 = distinct !DILexicalBlock(scope: !19204, file: !2944, line: 198, column: 24)
!19204 = distinct !DILexicalBlock(scope: !19189, file: !2944, line: 198, column: 2)
!19205 = !DILocation(line: 199, column: 23, scope: !19203)
!19206 = !DILocation(line: 0, scope: !18876, inlinedAt: !19207)
!19207 = distinct !DILocation(line: 198, column: 2, scope: !19204)
!19208 = !DILocation(line: 194, column: 2, scope: !18884, inlinedAt: !19207)
!19209 = !DILocation(line: 194, column: 2, scope: !18885, inlinedAt: !19207)
!19210 = !DILocation(line: 194, column: 2, scope: !18888, inlinedAt: !19207)
!19211 = !DILocation(line: 0, scope: !18890, inlinedAt: !19212)
!19212 = distinct !DILocation(line: 215, column: 2, scope: !18876, inlinedAt: !19207)
!19213 = !DILocation(line: 95, column: 2, scope: !18890, inlinedAt: !19212)
!19214 = !DILocation(line: 199, column: 21, scope: !19203)
!19215 = !DILocation(line: 202, column: 2, scope: !19184)
!19216 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2944, file: !2944, line: 205, type: !18909, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19217)
!19217 = !{!19218, !19219, !19221}
!19218 = !DILocalVariable(name: "ret", scope: !19216, file: !2944, line: 207, type: !320)
!19219 = !DILocalVariable(name: "__i", scope: !19220, file: !2944, line: 209, type: !18775)
!19220 = distinct !DILexicalBlock(scope: !19216, file: !2944, line: 209, column: 2)
!19221 = !DILocalVariable(name: "__key", scope: !19220, file: !2944, line: 209, type: !18775)
!19222 = !DILocation(line: 0, scope: !19216)
!19223 = !DILocation(line: 0, scope: !19220)
!19224 = !DILocation(line: 0, scope: !18803, inlinedAt: !19225)
!19225 = distinct !DILocation(line: 209, column: 2, scope: !19220)
!19226 = !DILocation(line: 55, column: 2, scope: !18812, inlinedAt: !19227)
!19227 = distinct !DILocation(line: 145, column: 10, scope: !18803, inlinedAt: !19225)
!19228 = !DILocation(line: 0, scope: !18812, inlinedAt: !19227)
!19229 = !DILocation(line: 148, column: 2, scope: !18820, inlinedAt: !19225)
!19230 = !DILocation(line: 148, column: 2, scope: !18821, inlinedAt: !19225)
!19231 = !DILocation(line: 148, column: 2, scope: !18824, inlinedAt: !19225)
!19232 = !DILocation(line: 160, column: 2, scope: !18803, inlinedAt: !19225)
!19233 = !DILocation(line: 210, column: 9, scope: !19234)
!19234 = distinct !DILexicalBlock(scope: !19235, file: !2944, line: 209, column: 24)
!19235 = distinct !DILexicalBlock(scope: !19220, file: !2944, line: 209, column: 2)
!19236 = !DILocation(line: 0, scope: !18876, inlinedAt: !19237)
!19237 = distinct !DILocation(line: 209, column: 2, scope: !19235)
!19238 = !DILocation(line: 194, column: 2, scope: !18884, inlinedAt: !19237)
!19239 = !DILocation(line: 194, column: 2, scope: !18885, inlinedAt: !19237)
!19240 = !DILocation(line: 194, column: 2, scope: !18888, inlinedAt: !19237)
!19241 = !DILocation(line: 0, scope: !18890, inlinedAt: !19242)
!19242 = distinct !DILocation(line: 215, column: 2, scope: !18876, inlinedAt: !19237)
!19243 = !DILocation(line: 95, column: 2, scope: !18890, inlinedAt: !19242)
!19244 = !DILocation(line: 212, column: 2, scope: !19216)
!19245 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2944, file: !2944, line: 215, type: !12645, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19246)
!19246 = !{!19247, !19248, !19249, !19251, !19252, !19255, !19256}
!19247 = !DILocalVariable(name: "ticks", arg: 1, scope: !19245, file: !2944, line: 215, type: !320)
!19248 = !DILocalVariable(name: "is_idle", arg: 2, scope: !19245, file: !2944, line: 215, type: !122)
!19249 = !DILocalVariable(name: "__i", scope: !19250, file: !2944, line: 217, type: !18775)
!19250 = distinct !DILexicalBlock(scope: !19245, file: !2944, line: 217, column: 2)
!19251 = !DILocalVariable(name: "__key", scope: !19250, file: !2944, line: 217, type: !18775)
!19252 = !DILocalVariable(name: "next_to", scope: !19253, file: !2944, line: 218, type: !103)
!19253 = distinct !DILexicalBlock(scope: !19254, file: !2944, line: 217, column: 24)
!19254 = distinct !DILexicalBlock(scope: !19250, file: !2944, line: 217, column: 2)
!19255 = !DILocalVariable(name: "sooner", scope: !19253, file: !2944, line: 219, type: !122)
!19256 = !DILocalVariable(name: "imminent", scope: !19253, file: !2944, line: 221, type: !122)
!19257 = !DILocation(line: 0, scope: !19245)
!19258 = !DILocation(line: 0, scope: !19250)
!19259 = !DILocation(line: 0, scope: !18803, inlinedAt: !19260)
!19260 = distinct !DILocation(line: 217, column: 2, scope: !19250)
!19261 = !DILocation(line: 55, column: 2, scope: !18812, inlinedAt: !19262)
!19262 = distinct !DILocation(line: 145, column: 10, scope: !18803, inlinedAt: !19260)
!19263 = !DILocation(line: 0, scope: !18812, inlinedAt: !19262)
!19264 = !DILocation(line: 148, column: 2, scope: !18820, inlinedAt: !19260)
!19265 = !DILocation(line: 148, column: 2, scope: !18821, inlinedAt: !19260)
!19266 = !DILocation(line: 148, column: 2, scope: !18824, inlinedAt: !19260)
!19267 = !DILocation(line: 160, column: 2, scope: !18803, inlinedAt: !19260)
!19268 = !DILocation(line: 218, column: 17, scope: !19253)
!19269 = !DILocation(line: 0, scope: !19253)
!19270 = !DILocation(line: 221, column: 27, scope: !19253)
!19271 = !DILocation(line: 233, column: 17, scope: !19272)
!19272 = distinct !DILexicalBlock(scope: !19253, file: !2944, line: 233, column: 7)
!19273 = !DILocation(line: 234, column: 26, scope: !19274)
!19274 = distinct !DILexicalBlock(scope: !19272, file: !2944, line: 233, column: 56)
!19275 = !DILocation(line: 234, column: 4, scope: !19274)
!19276 = !DILocation(line: 235, column: 3, scope: !19274)
!19277 = !DILocation(line: 0, scope: !18876, inlinedAt: !19278)
!19278 = distinct !DILocation(line: 217, column: 2, scope: !19254)
!19279 = !DILocation(line: 194, column: 2, scope: !18884, inlinedAt: !19278)
!19280 = !DILocation(line: 194, column: 2, scope: !18885, inlinedAt: !19278)
!19281 = !DILocation(line: 194, column: 2, scope: !18888, inlinedAt: !19278)
!19282 = !DILocation(line: 0, scope: !18890, inlinedAt: !19283)
!19283 = distinct !DILocation(line: 215, column: 2, scope: !18876, inlinedAt: !19278)
!19284 = !DILocation(line: 95, column: 2, scope: !18890, inlinedAt: !19283)
!19285 = !DILocation(line: 237, column: 1, scope: !19245)
!19286 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2944, file: !2944, line: 239, type: !19287, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19289)
!19287 = !DISubroutineType(types: !19288)
!19288 = !{null, !320}
!19289 = !{!19290, !19291, !19292, !19294}
!19290 = !DILocalVariable(name: "ticks", arg: 1, scope: !19286, file: !2944, line: 239, type: !320)
!19291 = !DILocalVariable(name: "key", scope: !19286, file: !2944, line: 245, type: !18775)
!19292 = !DILocalVariable(name: "t", scope: !19293, file: !2944, line: 262, type: !2917)
!19293 = distinct !DILexicalBlock(scope: !19286, file: !2944, line: 261, column: 67)
!19294 = !DILocalVariable(name: "dt", scope: !19293, file: !2944, line: 263, type: !103)
!19295 = !DILocation(line: 0, scope: !19286)
!19296 = !DILocation(line: 242, column: 2, scope: !19286)
!19297 = !DILocation(line: 0, scope: !18803, inlinedAt: !19298)
!19298 = distinct !DILocation(line: 245, column: 25, scope: !19286)
!19299 = !DILocation(line: 55, column: 2, scope: !18812, inlinedAt: !19300)
!19300 = distinct !DILocation(line: 145, column: 10, scope: !18803, inlinedAt: !19298)
!19301 = !DILocation(line: 0, scope: !18812, inlinedAt: !19300)
!19302 = !DILocation(line: 148, column: 2, scope: !18820, inlinedAt: !19298)
!19303 = !DILocation(line: 148, column: 2, scope: !18821, inlinedAt: !19298)
!19304 = !DILocation(line: 148, column: 2, scope: !18824, inlinedAt: !19298)
!19305 = !DILocation(line: 160, column: 2, scope: !18803, inlinedAt: !19298)
!19306 = !DILocation(line: 261, column: 9, scope: !19286)
!19307 = !DILocation(line: 261, column: 17, scope: !19286)
!19308 = !DILocation(line: 261, column: 25, scope: !19286)
!19309 = !DILocation(line: 261, column: 37, scope: !19286)
!19310 = !DILocation(line: 261, column: 47, scope: !19286)
!19311 = !DILocation(line: 261, column: 44, scope: !19286)
!19312 = !DILocation(line: 261, column: 2, scope: !19286)
!19313 = !DILocation(line: 0, scope: !19293)
!19314 = !DILocation(line: 263, column: 12, scope: !19293)
!19315 = !DILocation(line: 265, column: 16, scope: !19293)
!19316 = !DILocation(line: 265, column: 13, scope: !19293)
!19317 = !DILocation(line: 266, column: 13, scope: !19293)
!19318 = !DILocation(line: 267, column: 3, scope: !19293)
!19319 = !DILocation(line: 0, scope: !18876, inlinedAt: !19320)
!19320 = distinct !DILocation(line: 269, column: 3, scope: !19293)
!19321 = !DILocation(line: 194, column: 2, scope: !18884, inlinedAt: !19320)
!19322 = !DILocation(line: 194, column: 2, scope: !18885, inlinedAt: !19320)
!19323 = !DILocation(line: 194, column: 2, scope: !18888, inlinedAt: !19320)
!19324 = !DILocation(line: 0, scope: !18890, inlinedAt: !19325)
!19325 = distinct !DILocation(line: 215, column: 2, scope: !18876, inlinedAt: !19320)
!19326 = !DILocation(line: 95, column: 2, scope: !18890, inlinedAt: !19325)
!19327 = !DILocation(line: 270, column: 6, scope: !19293)
!19328 = !DILocation(line: 270, column: 3, scope: !19293)
!19329 = !DILocation(line: 0, scope: !18803, inlinedAt: !19330)
!19330 = distinct !DILocation(line: 271, column: 9, scope: !19293)
!19331 = !DILocation(line: 55, column: 2, scope: !18812, inlinedAt: !19332)
!19332 = distinct !DILocation(line: 145, column: 10, scope: !18803, inlinedAt: !19330)
!19333 = !DILocation(line: 0, scope: !18812, inlinedAt: !19332)
!19334 = !DILocation(line: 148, column: 2, scope: !18820, inlinedAt: !19330)
!19335 = !DILocation(line: 148, column: 2, scope: !18821, inlinedAt: !19330)
!19336 = !DILocation(line: 148, column: 2, scope: !18824, inlinedAt: !19330)
!19337 = !DILocation(line: 160, column: 2, scope: !18803, inlinedAt: !19330)
!19338 = !DILocation(line: 272, column: 22, scope: !19293)
!19339 = distinct !{!19339, !19312, !19340}
!19340 = !DILocation(line: 273, column: 2, scope: !19286)
!19341 = !DILocation(line: 276, column: 19, scope: !19342)
!19342 = distinct !DILexicalBlock(scope: !19343, file: !2944, line: 275, column: 23)
!19343 = distinct !DILexicalBlock(scope: !19286, file: !2944, line: 275, column: 6)
!19344 = !DILocation(line: 277, column: 2, scope: !19342)
!19345 = !DILocation(line: 279, column: 15, scope: !19286)
!19346 = !DILocation(line: 279, column: 12, scope: !19286)
!19347 = !DILocation(line: 280, column: 21, scope: !19286)
!19348 = !DILocation(line: 282, column: 24, scope: !19286)
!19349 = !DILocation(line: 282, column: 2, scope: !19286)
!19350 = !DILocation(line: 0, scope: !18876, inlinedAt: !19351)
!19351 = distinct !DILocation(line: 284, column: 2, scope: !19286)
!19352 = !DILocation(line: 194, column: 2, scope: !18884, inlinedAt: !19351)
!19353 = !DILocation(line: 194, column: 2, scope: !18885, inlinedAt: !19351)
!19354 = !DILocation(line: 194, column: 2, scope: !18888, inlinedAt: !19351)
!19355 = !DILocation(line: 0, scope: !18890, inlinedAt: !19356)
!19356 = distinct !DILocation(line: 215, column: 2, scope: !18876, inlinedAt: !19351)
!19357 = !DILocation(line: 95, column: 2, scope: !18890, inlinedAt: !19356)
!19358 = !DILocation(line: 285, column: 1, scope: !19286)
!19359 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2944, file: !2944, line: 287, type: !19360, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19362)
!19360 = !DISubroutineType(types: !19361)
!19361 = !{!106}
!19362 = !{!19363, !19364, !19366}
!19363 = !DILocalVariable(name: "t", scope: !19359, file: !2944, line: 289, type: !112)
!19364 = !DILocalVariable(name: "__i", scope: !19365, file: !2944, line: 291, type: !18775)
!19365 = distinct !DILexicalBlock(scope: !19359, file: !2944, line: 291, column: 2)
!19366 = !DILocalVariable(name: "__key", scope: !19365, file: !2944, line: 291, type: !18775)
!19367 = !DILocation(line: 0, scope: !19359)
!19368 = !DILocation(line: 0, scope: !19365)
!19369 = !DILocation(line: 0, scope: !18803, inlinedAt: !19370)
!19370 = distinct !DILocation(line: 291, column: 2, scope: !19365)
!19371 = !DILocation(line: 55, column: 2, scope: !18812, inlinedAt: !19372)
!19372 = distinct !DILocation(line: 145, column: 10, scope: !18803, inlinedAt: !19370)
!19373 = !DILocation(line: 0, scope: !18812, inlinedAt: !19372)
!19374 = !DILocation(line: 148, column: 2, scope: !18820, inlinedAt: !19370)
!19375 = !DILocation(line: 148, column: 2, scope: !18821, inlinedAt: !19370)
!19376 = !DILocation(line: 148, column: 2, scope: !18824, inlinedAt: !19370)
!19377 = !DILocation(line: 160, column: 2, scope: !18803, inlinedAt: !19370)
!19378 = !DILocation(line: 292, column: 7, scope: !19379)
!19379 = distinct !DILexicalBlock(scope: !19380, file: !2944, line: 291, column: 24)
!19380 = distinct !DILexicalBlock(scope: !19365, file: !2944, line: 291, column: 2)
!19381 = !DILocation(line: 292, column: 19, scope: !19379)
!19382 = !DILocation(line: 0, scope: !18876, inlinedAt: !19383)
!19383 = distinct !DILocation(line: 291, column: 2, scope: !19380)
!19384 = !DILocation(line: 194, column: 2, scope: !18884, inlinedAt: !19383)
!19385 = !DILocation(line: 194, column: 2, scope: !18885, inlinedAt: !19383)
!19386 = !DILocation(line: 194, column: 2, scope: !18888, inlinedAt: !19383)
!19387 = !DILocation(line: 0, scope: !18890, inlinedAt: !19388)
!19388 = distinct !DILocation(line: 215, column: 2, scope: !18876, inlinedAt: !19383)
!19389 = !DILocation(line: 95, column: 2, scope: !18890, inlinedAt: !19388)
!19390 = !DILocation(line: 292, column: 17, scope: !19379)
!19391 = !DILocation(line: 294, column: 2, scope: !19359)
!19392 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2944, file: !2944, line: 297, type: !7952, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2501)
!19393 = !DILocation(line: 300, column: 19, scope: !19392)
!19394 = !DILocation(line: 300, column: 9, scope: !19392)
!19395 = !DILocation(line: 300, column: 2, scope: !19392)
!19396 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2944, file: !2944, line: 306, type: !19360, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2501)
!19397 = !DILocation(line: 308, column: 9, scope: !19396)
!19398 = !DILocation(line: 308, column: 2, scope: !19396)
!19399 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2944, file: !2944, line: 319, type: !7962, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19400)
!19400 = !{!19401, !19402, !19403, !19404}
!19401 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !19399, file: !2944, line: 319, type: !111)
!19402 = !DILocalVariable(name: "start_cycles", scope: !19399, file: !2944, line: 328, type: !111)
!19403 = !DILocalVariable(name: "cycles_to_wait", scope: !19399, file: !2944, line: 331, type: !111)
!19404 = !DILocalVariable(name: "current_cycles", scope: !19405, file: !2944, line: 338, type: !111)
!19405 = distinct !DILexicalBlock(scope: !19406, file: !2944, line: 337, column: 11)
!19406 = distinct !DILexicalBlock(scope: !19407, file: !2944, line: 337, column: 2)
!19407 = distinct !DILexicalBlock(scope: !19399, file: !2944, line: 337, column: 2)
!19408 = !DILocation(line: 0, scope: !19399)
!19409 = !DILocation(line: 322, column: 19, scope: !19410)
!19410 = distinct !DILexicalBlock(scope: !19399, file: !2944, line: 322, column: 6)
!19411 = !DILocation(line: 322, column: 6, scope: !19399)
!19412 = !DILocation(line: 328, column: 26, scope: !19399)
!19413 = !DILocation(line: 333, column: 43, scope: !19399)
!19414 = !DILocation(line: 337, column: 2, scope: !19399)
!19415 = !DILocation(line: 338, column: 29, scope: !19405)
!19416 = !DILocation(line: 0, scope: !19405)
!19417 = !DILocation(line: 341, column: 23, scope: !19418)
!19418 = distinct !DILexicalBlock(scope: !19405, file: !2944, line: 341, column: 7)
!19419 = !DILocation(line: 341, column: 39, scope: !19418)
!19420 = !DILocation(line: 349, column: 1, scope: !19399)
!19421 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !127, file: !127, line: 1675, type: !7952, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2501)
!19422 = !DILocation(line: 1677, column: 9, scope: !19421)
!19423 = !DILocation(line: 1677, column: 2, scope: !19421)
!19424 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !19425, file: !19425, line: 24, type: !7952, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2501)
!19425 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19426 = !DILocation(line: 26, column: 9, scope: !19424)
!19427 = !DILocation(line: 26, column: 2, scope: !19424)
!19428 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2944, file: !2944, line: 364, type: !19429, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !19431)
!19429 = !DISubroutineType(types: !19430)
!19430 = !{!112, !18765}
!19431 = !{!19432, !19433}
!19432 = !DILocalVariable(name: "timeout", arg: 1, scope: !19428, file: !2944, line: 364, type: !18765)
!19433 = !DILocalVariable(name: "dt", scope: !19428, file: !2944, line: 366, type: !104)
!19434 = !DILocation(line: 0, scope: !19428)
!19435 = !DILocation(line: 368, column: 6, scope: !19428)
!19436 = !DILocation(line: 371, column: 10, scope: !19437)
!19437 = distinct !DILexicalBlock(scope: !19438, file: !2944, line: 370, column: 47)
!19438 = distinct !DILexicalBlock(scope: !19439, file: !2944, line: 370, column: 13)
!19439 = distinct !DILexicalBlock(scope: !19428, file: !2944, line: 368, column: 6)
!19440 = !DILocation(line: 371, column: 3, scope: !19437)
!19441 = !DILocation(line: 376, column: 58, scope: !19442)
!19442 = distinct !DILexicalBlock(scope: !19443, file: !2944, line: 376, column: 7)
!19443 = distinct !DILexicalBlock(scope: !19438, file: !2944, line: 372, column: 9)
!19444 = !DILocation(line: 376, column: 7, scope: !19443)
!19445 = !DILocation(line: 376, column: 43, scope: !19442)
!19446 = !DILocation(line: 377, column: 4, scope: !19447)
!19447 = distinct !DILexicalBlock(scope: !19442, file: !2944, line: 376, column: 64)
!19448 = !DILocation(line: 379, column: 10, scope: !19443)
!19449 = !DILocation(line: 379, column: 33, scope: !19443)
!19450 = !DILocation(line: 379, column: 31, scope: !19443)
!19451 = !DILocation(line: 379, column: 3, scope: !19443)
!19452 = !DILocation(line: 0, scope: !19439)
!19453 = !DILocation(line: 381, column: 1, scope: !19428)
!19454 = distinct !DISubprogram(name: "k_free", scope: !2961, file: !2961, line: 43, type: !7802, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !19455)
!19455 = !{!19456, !19457}
!19456 = !DILocalVariable(name: "ptr", arg: 1, scope: !19454, file: !2961, line: 43, type: !102)
!19457 = !DILocalVariable(name: "heap_ref", scope: !19454, file: !2961, line: 45, type: !19458)
!19458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19459, size: 32)
!19459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 32)
!19460 = !DILocation(line: 0, scope: !19454)
!19461 = !DILocation(line: 47, column: 10, scope: !19462)
!19462 = distinct !DILexicalBlock(scope: !19454, file: !2961, line: 47, column: 6)
!19463 = !DILocation(line: 47, column: 6, scope: !19454)
!19464 = !DILocation(line: 49, column: 9, scope: !19465)
!19465 = distinct !DILexicalBlock(scope: !19462, file: !2961, line: 47, column: 19)
!19466 = !DILocation(line: 53, column: 15, scope: !19465)
!19467 = !DILocation(line: 53, column: 3, scope: !19465)
!19468 = !DILocation(line: 56, column: 2, scope: !19465)
!19469 = !DILocation(line: 57, column: 1, scope: !19454)
!19470 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2961, file: !2961, line: 64, type: !19471, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !19473)
!19471 = !DISubroutineType(types: !19472)
!19472 = !{!102, !156, !156}
!19473 = !{!19474, !19475, !19476}
!19474 = !DILocalVariable(name: "align", arg: 1, scope: !19470, file: !2961, line: 64, type: !156)
!19475 = !DILocalVariable(name: "size", arg: 2, scope: !19470, file: !2961, line: 64, type: !156)
!19476 = !DILocalVariable(name: "ret", scope: !19470, file: !2961, line: 75, type: !102)
!19477 = !DILocation(line: 0, scope: !19470)
!19478 = !DILocation(line: 66, column: 2, scope: !19479)
!19479 = distinct !DILexicalBlock(scope: !19480, file: !2961, line: 66, column: 2)
!19480 = distinct !DILexicalBlock(scope: !19470, file: !2961, line: 66, column: 2)
!19481 = !DILocation(line: 66, column: 2, scope: !19482)
!19482 = distinct !DILexicalBlock(scope: !19479, file: !2961, line: 66, column: 2)
!19483 = !DILocation(line: 70, column: 2, scope: !19484)
!19484 = distinct !DILexicalBlock(scope: !19485, file: !2961, line: 70, column: 2)
!19485 = distinct !DILexicalBlock(scope: !19470, file: !2961, line: 70, column: 2)
!19486 = !DILocation(line: 70, column: 2, scope: !19485)
!19487 = !DILocation(line: 70, column: 2, scope: !19488)
!19488 = distinct !DILexicalBlock(scope: !19484, file: !2961, line: 70, column: 2)
!19489 = !DILocation(line: 75, column: 14, scope: !19470)
!19490 = !DILocation(line: 79, column: 2, scope: !19470)
!19491 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2961, file: !2961, line: 12, type: !19492, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !19494)
!19492 = !DISubroutineType(types: !19493)
!19493 = !{!102, !19459, !156, !156}
!19494 = !{!19495, !19496, !19497, !19498, !19499, !19500}
!19495 = !DILocalVariable(name: "heap", arg: 1, scope: !19491, file: !2961, line: 12, type: !19459)
!19496 = !DILocalVariable(name: "align", arg: 2, scope: !19491, file: !2961, line: 12, type: !156)
!19497 = !DILocalVariable(name: "size", arg: 3, scope: !19491, file: !2961, line: 12, type: !156)
!19498 = !DILocalVariable(name: "mem", scope: !19491, file: !2961, line: 14, type: !102)
!19499 = !DILocalVariable(name: "heap_ref", scope: !19491, file: !2961, line: 15, type: !19458)
!19500 = !DILocalVariable(name: "__align", scope: !19491, file: !2961, line: 16, type: !156)
!19501 = !DILocation(line: 0, scope: !19491)
!19502 = !DILocation(line: 24, column: 6, scope: !19503)
!19503 = distinct !DILexicalBlock(scope: !19491, file: !2961, line: 24, column: 6)
!19504 = !DILocation(line: 24, column: 6, scope: !19491)
!19505 = !DILocation(line: 27, column: 18, scope: !19491)
!19506 = !DILocation(line: 29, column: 44, scope: !19491)
!19507 = !DILocation(line: 29, column: 8, scope: !19491)
!19508 = !DILocation(line: 30, column: 10, scope: !19509)
!19509 = distinct !DILexicalBlock(scope: !19491, file: !2961, line: 30, column: 6)
!19510 = !DILocation(line: 30, column: 6, scope: !19491)
!19511 = !DILocation(line: 34, column: 13, scope: !19491)
!19512 = !DILocation(line: 35, column: 12, scope: !19491)
!19513 = !DILocation(line: 36, column: 8, scope: !19491)
!19514 = !DILocation(line: 37, column: 2, scope: !19515)
!19515 = distinct !DILexicalBlock(scope: !19516, file: !2961, line: 37, column: 2)
!19516 = distinct !DILexicalBlock(scope: !19491, file: !2961, line: 37, column: 2)
!19517 = !DILocation(line: 37, column: 2, scope: !19516)
!19518 = !DILocation(line: 37, column: 2, scope: !19519)
!19519 = distinct !DILexicalBlock(scope: !19515, file: !2961, line: 37, column: 2)
!19520 = !DILocation(line: 41, column: 1, scope: !19491)
!19521 = distinct !DISubprogram(name: "size_add_overflow", scope: !15577, file: !15577, line: 47, type: !15578, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !19522)
!19522 = !{!19523, !19524, !19525}
!19523 = !DILocalVariable(name: "a", arg: 1, scope: !19521, file: !15577, line: 47, type: !156)
!19524 = !DILocalVariable(name: "b", arg: 2, scope: !19521, file: !15577, line: 47, type: !156)
!19525 = !DILocalVariable(name: "result", arg: 3, scope: !19521, file: !15577, line: 47, type: !3097)
!19526 = !DILocation(line: 0, scope: !19521)
!19527 = !DILocation(line: 49, column: 9, scope: !19521)
!19528 = !DILocation(line: 49, column: 2, scope: !19521)
!19529 = distinct !DISubprogram(name: "k_malloc", scope: !2961, file: !2961, line: 82, type: !15589, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !19530)
!19530 = !{!19531, !19532}
!19531 = !DILocalVariable(name: "size", arg: 1, scope: !19529, file: !2961, line: 82, type: !156)
!19532 = !DILocalVariable(name: "ret", scope: !19529, file: !2961, line: 86, type: !102)
!19533 = !DILocation(line: 0, scope: !19529)
!19534 = !DILocation(line: 86, column: 14, scope: !19529)
!19535 = !DILocation(line: 90, column: 2, scope: !19529)
!19536 = distinct !DISubprogram(name: "k_calloc", scope: !2961, file: !2961, line: 93, type: !19471, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !19537)
!19537 = !{!19538, !19539, !19540, !19541}
!19538 = !DILocalVariable(name: "nmemb", arg: 1, scope: !19536, file: !2961, line: 93, type: !156)
!19539 = !DILocalVariable(name: "size", arg: 2, scope: !19536, file: !2961, line: 93, type: !156)
!19540 = !DILocalVariable(name: "ret", scope: !19536, file: !2961, line: 95, type: !102)
!19541 = !DILocalVariable(name: "bounds", scope: !19536, file: !2961, line: 96, type: !156)
!19542 = !DILocation(line: 0, scope: !19536)
!19543 = !DILocation(line: 96, column: 2, scope: !19536)
!19544 = !DILocation(line: 100, column: 6, scope: !19545)
!19545 = distinct !DILexicalBlock(scope: !19536, file: !2961, line: 100, column: 6)
!19546 = !DILocation(line: 100, column: 6, scope: !19536)
!19547 = !DILocation(line: 106, column: 17, scope: !19536)
!19548 = !DILocation(line: 106, column: 8, scope: !19536)
!19549 = !DILocation(line: 107, column: 10, scope: !19550)
!19550 = distinct !DILexicalBlock(scope: !19536, file: !2961, line: 107, column: 6)
!19551 = !DILocation(line: 107, column: 6, scope: !19536)
!19552 = !DILocation(line: 108, column: 9, scope: !19553)
!19553 = distinct !DILexicalBlock(scope: !19550, file: !2961, line: 107, column: 19)
!19554 = !DILocation(line: 109, column: 2, scope: !19553)
!19555 = !DILocation(line: 114, column: 1, scope: !19536)
!19556 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15577, file: !15577, line: 105, type: !15578, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !19557)
!19557 = !{!19558, !19559, !19560}
!19558 = !DILocalVariable(name: "a", arg: 1, scope: !19556, file: !15577, line: 105, type: !156)
!19559 = !DILocalVariable(name: "b", arg: 2, scope: !19556, file: !15577, line: 105, type: !156)
!19560 = !DILocalVariable(name: "result", arg: 3, scope: !19556, file: !15577, line: 105, type: !3097)
!19561 = !DILocation(line: 0, scope: !19556)
!19562 = !DILocation(line: 107, column: 9, scope: !19556)
!19563 = !DILocation(line: 107, column: 2, scope: !19556)
!19564 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2961, file: !2961, line: 116, type: !19565, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !19637)
!19565 = !DISubroutineType(types: !19566)
!19566 = !{null, !19567}
!19567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19568, size: 32)
!19568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !19569)
!19569 = !{!19570, !19610, !19622, !19623, !19624, !19625, !19631, !19632}
!19570 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !19568, file: !199, line: 247, baseType: !19571, size: 384)
!19571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !19572)
!19572 = !{!19573, !19584, !19586, !19587, !19588, !19597, !19598, !19599}
!19573 = !DIDerivedType(tag: DW_TAG_member, scope: !19571, file: !199, line: 60, baseType: !19574, size: 64)
!19574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !19571, file: !199, line: 60, size: 64, elements: !19575)
!19575 = !{!19576, !19578}
!19576 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !19574, file: !199, line: 61, baseType: !19577, size: 64)
!19577 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2976)
!19578 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !19574, file: !199, line: 62, baseType: !19579, size: 64)
!19579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !19580)
!19580 = !{!19581}
!19581 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !19579, file: !211, line: 50, baseType: !19582, size: 64)
!19582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19583, size: 64, elements: !216)
!19583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19579, size: 32)
!19584 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !19571, file: !199, line: 68, baseType: !19585, size: 32, offset: 64)
!19585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 32)
!19586 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !19571, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!19587 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !19571, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!19588 = !DIDerivedType(tag: DW_TAG_member, scope: !19571, file: !199, line: 90, baseType: !19589, size: 16, offset: 112)
!19589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !19571, file: !199, line: 90, size: 16, elements: !19590)
!19590 = !{!19591, !19596}
!19591 = !DIDerivedType(tag: DW_TAG_member, scope: !19589, file: !199, line: 91, baseType: !19592, size: 16)
!19592 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !19589, file: !199, line: 91, size: 16, elements: !19593)
!19593 = !{!19594, !19595}
!19594 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !19592, file: !199, line: 96, baseType: !229, size: 8)
!19595 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !19592, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!19596 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !19589, file: !199, line: 100, baseType: !181, size: 16)
!19597 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !19571, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!19598 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !19571, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!19599 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !19571, file: !199, line: 131, baseType: !19600, size: 192, offset: 192)
!19600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !19601)
!19601 = !{!19602, !19603, !19609}
!19602 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !19600, file: !131, line: 245, baseType: !19577, size: 64)
!19603 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !19600, file: !131, line: 246, baseType: !19604, size: 32, offset: 64)
!19604 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !19605)
!19605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19606, size: 32)
!19606 = !DISubroutineType(types: !19607)
!19607 = !{null, !19608}
!19608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19600, size: 32)
!19609 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !19600, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!19610 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !19568, file: !199, line: 250, baseType: !19611, size: 288, offset: 384)
!19611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !19612)
!19612 = !{!19613, !19614, !19615, !19616, !19617, !19618, !19619, !19620, !19621}
!19613 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !19611, file: !248, line: 26, baseType: !111, size: 32)
!19614 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !19611, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!19615 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !19611, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!19616 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !19611, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!19617 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !19611, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!19618 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !19611, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!19619 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !19611, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!19620 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !19611, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!19621 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !19611, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!19622 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !19568, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!19623 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !19568, file: !199, line: 256, baseType: !2971, size: 64, offset: 704)
!19624 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !19568, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!19625 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !19568, file: !199, line: 300, baseType: !19626, size: 96, offset: 800)
!19626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !19627)
!19627 = !{!19628, !19629, !19630}
!19628 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !19626, file: !199, line: 153, baseType: !22, size: 32)
!19629 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !19626, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!19630 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !19626, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!19631 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !19568, file: !199, line: 325, baseType: !19459, size: 32, offset: 896)
!19632 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !19568, file: !199, line: 343, baseType: !19633, size: 64, offset: 928)
!19633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !19634)
!19634 = !{!19635, !19636}
!19635 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !19633, file: !248, line: 63, baseType: !111, size: 32)
!19636 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !19633, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!19637 = !{!19638}
!19638 = !DILocalVariable(name: "thread", arg: 1, scope: !19564, file: !2961, line: 116, type: !19567)
!19639 = !DILocation(line: 0, scope: !19564)
!19640 = !DILocation(line: 118, column: 10, scope: !19564)
!19641 = !DILocation(line: 118, column: 24, scope: !19564)
!19642 = !DILocation(line: 119, column: 1, scope: !19564)
!19643 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2961, file: !2961, line: 124, type: !19471, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !19644)
!19644 = !{!19645, !19646, !19647, !19648}
!19645 = !DILocalVariable(name: "align", arg: 1, scope: !19643, file: !2961, line: 124, type: !156)
!19646 = !DILocalVariable(name: "size", arg: 2, scope: !19643, file: !2961, line: 124, type: !156)
!19647 = !DILocalVariable(name: "ret", scope: !19643, file: !2961, line: 126, type: !102)
!19648 = !DILocalVariable(name: "heap", scope: !19643, file: !2961, line: 127, type: !19459)
!19649 = !DILocation(line: 0, scope: !19643)
!19650 = !DILocation(line: 129, column: 6, scope: !19651)
!19651 = distinct !DILexicalBlock(scope: !19643, file: !2961, line: 129, column: 6)
!19652 = !DILocation(line: 129, column: 6, scope: !19643)
!19653 = !DILocation(line: 132, column: 10, scope: !19654)
!19654 = distinct !DILexicalBlock(scope: !19651, file: !2961, line: 131, column: 9)
!19655 = !DILocation(line: 132, column: 20, scope: !19654)
!19656 = !DILocation(line: 135, column: 11, scope: !19657)
!19657 = distinct !DILexicalBlock(scope: !19643, file: !2961, line: 135, column: 6)
!19658 = !DILocation(line: 135, column: 6, scope: !19643)
!19659 = !DILocation(line: 136, column: 9, scope: !19660)
!19660 = distinct !DILexicalBlock(scope: !19657, file: !2961, line: 135, column: 20)
!19661 = !DILocation(line: 137, column: 2, scope: !19660)
!19662 = !DILocation(line: 0, scope: !19657)
!19663 = !DILocation(line: 141, column: 2, scope: !19643)
!19664 = distinct !DISubprogram(name: "boot_banner", scope: !19665, file: !19665, line: 26, type: !323, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3732, retainedNodes: !2501)
!19665 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19666 = !DILocation(line: 36, column: 1, scope: !19664)
!19667 = distinct !DISubprogram(name: "statics_init", scope: !3017, file: !3017, line: 21, type: !3023, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !19668)
!19668 = !{!19669, !19670}
!19669 = !DILocalVariable(name: "unused", arg: 1, scope: !19667, file: !3017, line: 21, type: !3025)
!19670 = !DILocalVariable(name: "h", scope: !19671, file: !3017, line: 24, type: !19672)
!19671 = distinct !DILexicalBlock(scope: !19667, file: !3017, line: 24, column: 2)
!19672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19673, size: 32)
!19673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !19674)
!19674 = !{!19675, !19681, !19687}
!19675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !19673, file: !127, line: 5074, baseType: !19676, size: 96)
!19676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !19677)
!19677 = !{!19678, !19679, !19680}
!19678 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !19676, file: !274, line: 57, baseType: !277, size: 32)
!19679 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !19676, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!19680 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !19676, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!19681 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !19673, file: !127, line: 5075, baseType: !19682, size: 64, offset: 96)
!19682 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !19683)
!19683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !19684)
!19684 = !{!19685}
!19685 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !19683, file: !131, line: 232, baseType: !19686, size: 64)
!19686 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !3003)
!19687 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !19673, file: !127, line: 5076, baseType: !19688, size: 32, offset: 160)
!19688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !19689)
!19689 = !{!19690}
!19690 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !19688, file: !152, line: 52, baseType: !22, size: 32)
!19691 = !DILocation(line: 0, scope: !19667)
!19692 = !DILocation(line: 0, scope: !19671)
!19693 = !DILocation(line: 24, column: 2, scope: !19694)
!19694 = distinct !DILexicalBlock(scope: !19695, file: !3017, line: 24, column: 2)
!19695 = distinct !DILexicalBlock(scope: !19696, file: !3017, line: 24, column: 2)
!19696 = distinct !DILexicalBlock(scope: !19671, file: !3017, line: 24, column: 2)
!19697 = !DILocation(line: 24, column: 2, scope: !19698)
!19698 = distinct !DILexicalBlock(scope: !19699, file: !3017, line: 24, column: 2)
!19699 = distinct !DILexicalBlock(scope: !19694, file: !3017, line: 24, column: 2)
!19700 = !DILocation(line: 24, column: 2, scope: !19695)
!19701 = !DILocation(line: 24, column: 2, scope: !19671)
!19702 = !DILocation(line: 52, column: 2, scope: !19667)
!19703 = !DILocation(line: 49, column: 27, scope: !19704)
!19704 = distinct !DILexicalBlock(scope: !19705, file: !3017, line: 48, column: 3)
!19705 = distinct !DILexicalBlock(scope: !19696, file: !3017, line: 24, column: 36)
!19706 = !DILocation(line: 49, column: 45, scope: !19704)
!19707 = !DILocation(line: 49, column: 4, scope: !19704)
!19708 = !DILocation(line: 24, column: 2, scope: !19696)
!19709 = !DILocation(line: 24, column: 2, scope: !19699)
!19710 = distinct !{!19710, !19701, !19711}
!19711 = !DILocation(line: 51, column: 2, scope: !19671)
!19712 = distinct !DISubprogram(name: "k_heap_init", scope: !3017, file: !3017, line: 13, type: !19713, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !19715)
!19713 = !DISubroutineType(types: !19714)
!19714 = !{null, !19672, !102, !156}
!19715 = !{!19716, !19717, !19718}
!19716 = !DILocalVariable(name: "h", arg: 1, scope: !19712, file: !3017, line: 13, type: !19672)
!19717 = !DILocalVariable(name: "mem", arg: 2, scope: !19712, file: !3017, line: 13, type: !102)
!19718 = !DILocalVariable(name: "bytes", arg: 3, scope: !19712, file: !3017, line: 13, type: !156)
!19719 = !DILocation(line: 0, scope: !19712)
!19720 = !DILocation(line: 15, column: 19, scope: !19712)
!19721 = !DILocation(line: 15, column: 2, scope: !19712)
!19722 = !DILocation(line: 16, column: 20, scope: !19712)
!19723 = !DILocation(line: 16, column: 2, scope: !19712)
!19724 = !DILocation(line: 19, column: 1, scope: !19712)
!19725 = distinct !DISubprogram(name: "z_waitq_init", scope: !15064, file: !15064, line: 47, type: !19726, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !19729)
!19726 = !DISubroutineType(types: !19727)
!19727 = !{null, !19728}
!19728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19682, size: 32)
!19729 = !{!19730}
!19730 = !DILocalVariable(name: "w", arg: 1, scope: !19725, file: !15064, line: 47, type: !19728)
!19731 = !DILocation(line: 0, scope: !19725)
!19732 = !DILocation(line: 49, column: 21, scope: !19725)
!19733 = !DILocation(line: 49, column: 2, scope: !19725)
!19734 = !DILocation(line: 50, column: 1, scope: !19725)
!19735 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !19736, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !19739)
!19736 = !DISubroutineType(types: !19737)
!19737 = !{null, !19738}
!19738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19686, size: 32)
!19739 = !{!19740}
!19740 = !DILocalVariable(name: "list", arg: 1, scope: !19735, file: !136, line: 197, type: !19738)
!19741 = !DILocation(line: 0, scope: !19735)
!19742 = !DILocation(line: 199, column: 8, scope: !19735)
!19743 = !DILocation(line: 199, column: 13, scope: !19735)
!19744 = !DILocation(line: 200, column: 8, scope: !19735)
!19745 = !DILocation(line: 200, column: 13, scope: !19735)
!19746 = !DILocation(line: 201, column: 1, scope: !19735)
!19747 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !3017, file: !3017, line: 64, type: !19748, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !19754)
!19748 = !DISubroutineType(types: !19749)
!19749 = !{!102, !19672, !156, !156, !19750}
!19750 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !19751)
!19751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !19752)
!19752 = !{!19753}
!19753 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !19751, file: !105, line: 66, baseType: !104, size: 64)
!19754 = !{!19755, !19756, !19757, !19758, !19759, !19760, !19761, !19762, !19767}
!19755 = !DILocalVariable(name: "h", arg: 1, scope: !19747, file: !3017, line: 64, type: !19672)
!19756 = !DILocalVariable(name: "align", arg: 2, scope: !19747, file: !3017, line: 64, type: !156)
!19757 = !DILocalVariable(name: "bytes", arg: 3, scope: !19747, file: !3017, line: 64, type: !156)
!19758 = !DILocalVariable(name: "timeout", arg: 4, scope: !19747, file: !3017, line: 65, type: !19750)
!19759 = !DILocalVariable(name: "now", scope: !19747, file: !3017, line: 67, type: !106)
!19760 = !DILocalVariable(name: "end", scope: !19747, file: !3017, line: 67, type: !106)
!19761 = !DILocalVariable(name: "ret", scope: !19747, file: !3017, line: 68, type: !102)
!19762 = !DILocalVariable(name: "key", scope: !19747, file: !3017, line: 72, type: !19763)
!19763 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !19764)
!19764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !19765)
!19765 = !{!19766}
!19766 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !19764, file: !152, line: 33, baseType: !103, size: 32)
!19767 = !DILocalVariable(name: "blocked_alloc", scope: !19747, file: !3017, line: 78, type: !122)
!19768 = !DILocation(line: 0, scope: !19747)
!19769 = !DILocation(line: 67, column: 21, scope: !19747)
!19770 = !DILocation(line: 70, column: 8, scope: !19747)
!19771 = !DILocation(line: 72, column: 41, scope: !19747)
!19772 = !DILocalVariable(name: "l", arg: 1, scope: !19773, file: !152, line: 136, type: !19776)
!19773 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !19774, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !19777)
!19774 = !DISubroutineType(types: !19775)
!19775 = !{!19763, !19776}
!19776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19688, size: 32)
!19777 = !{!19772, !19778}
!19778 = !DILocalVariable(name: "k", scope: !19773, file: !152, line: 139, type: !19763)
!19779 = !DILocation(line: 0, scope: !19773, inlinedAt: !19780)
!19780 = distinct !DILocation(line: 72, column: 25, scope: !19747)
!19781 = !DILocation(line: 55, column: 2, scope: !19782, inlinedAt: !19786)
!19782 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7544, file: !7544, line: 42, type: !7545, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !19783)
!19783 = !{!19784, !19785}
!19784 = !DILocalVariable(name: "key", scope: !19782, file: !7544, line: 44, type: !32)
!19785 = !DILocalVariable(name: "tmp", scope: !19782, file: !7544, line: 53, type: !32)
!19786 = distinct !DILocation(line: 145, column: 10, scope: !19773, inlinedAt: !19780)
!19787 = !{i64 2226598}
!19788 = !DILocation(line: 0, scope: !19782, inlinedAt: !19786)
!19789 = !DILocation(line: 148, column: 2, scope: !19790, inlinedAt: !19780)
!19790 = distinct !DILexicalBlock(scope: !19791, file: !152, line: 148, column: 2)
!19791 = distinct !DILexicalBlock(scope: !19773, file: !152, line: 148, column: 2)
!19792 = !DILocation(line: 148, column: 2, scope: !19791, inlinedAt: !19780)
!19793 = !DILocation(line: 148, column: 2, scope: !19794, inlinedAt: !19780)
!19794 = distinct !DILexicalBlock(scope: !19790, file: !152, line: 148, column: 2)
!19795 = !DILocation(line: 160, column: 2, scope: !19773, inlinedAt: !19780)
!19796 = !DILocation(line: 1031, column: 3, scope: !19797, inlinedAt: !19800)
!19797 = distinct !DISubprogram(name: "__get_IPSR", scope: !7865, file: !7865, line: 1027, type: !7952, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !19798)
!19798 = !{!19799}
!19799 = !DILocalVariable(name: "result", scope: !19797, file: !7865, line: 1029, type: !111)
!19800 = distinct !DILocation(line: 48, column: 10, scope: !19801, inlinedAt: !19802)
!19801 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8915, file: !8915, line: 46, type: !8916, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !2501)
!19802 = distinct !DILocation(line: 76, column: 2, scope: !19803)
!19803 = distinct !DILexicalBlock(scope: !19804, file: !3017, line: 76, column: 2)
!19804 = distinct !DILexicalBlock(scope: !19747, file: !3017, line: 76, column: 2)
!19805 = !{i64 3544211}
!19806 = !DILocation(line: 0, scope: !19797, inlinedAt: !19800)
!19807 = !DILocation(line: 48, column: 9, scope: !19801, inlinedAt: !19802)
!19808 = !DILocation(line: 76, column: 2, scope: !19803)
!19809 = !DILocation(line: 81, column: 9, scope: !19810)
!19810 = distinct !DILexicalBlock(scope: !19747, file: !3017, line: 80, column: 22)
!19811 = !DILocation(line: 83, column: 9, scope: !19810)
!19812 = !DILocation(line: 85, column: 12, scope: !19813)
!19813 = distinct !DILexicalBlock(scope: !19810, file: !3017, line: 84, column: 7)
!19814 = !DILocation(line: 85, column: 21, scope: !19813)
!19815 = !DILocation(line: 76, column: 2, scope: !19816)
!19816 = distinct !DILexicalBlock(scope: !19803, file: !3017, line: 76, column: 2)
!19817 = !DILocation(line: 85, column: 30, scope: !19813)
!19818 = !DILocation(line: 85, column: 37, scope: !19813)
!19819 = !DILocation(line: 84, column: 7, scope: !19810)
!19820 = !DILocation(line: 99, column: 10, scope: !19810)
!19821 = !DILocation(line: 0, scope: !19773, inlinedAt: !19822)
!19822 = distinct !DILocation(line: 101, column: 9, scope: !19810)
!19823 = !DILocation(line: 55, column: 2, scope: !19782, inlinedAt: !19824)
!19824 = distinct !DILocation(line: 145, column: 10, scope: !19773, inlinedAt: !19822)
!19825 = !DILocation(line: 0, scope: !19782, inlinedAt: !19824)
!19826 = !DILocation(line: 148, column: 2, scope: !19790, inlinedAt: !19822)
!19827 = !DILocation(line: 148, column: 2, scope: !19791, inlinedAt: !19822)
!19828 = !DILocation(line: 148, column: 2, scope: !19794, inlinedAt: !19822)
!19829 = !DILocation(line: 160, column: 2, scope: !19773, inlinedAt: !19822)
!19830 = distinct !{!19830, !19831, !19832}
!19831 = !DILocation(line: 80, column: 2, scope: !19747)
!19832 = !DILocation(line: 102, column: 2, scope: !19747)
!19833 = !DILocalVariable(name: "key", arg: 2, scope: !19834, file: !152, line: 190, type: !19763)
!19834 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !19835, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !19837)
!19835 = !DISubroutineType(types: !19836)
!19836 = !{null, !19776, !19763}
!19837 = !{!19838, !19833}
!19838 = !DILocalVariable(name: "l", arg: 1, scope: !19834, file: !152, line: 189, type: !19776)
!19839 = !DILocation(line: 0, scope: !19834, inlinedAt: !19840)
!19840 = distinct !DILocation(line: 106, column: 2, scope: !19747)
!19841 = !DILocation(line: 194, column: 2, scope: !19842, inlinedAt: !19840)
!19842 = distinct !DILexicalBlock(scope: !19843, file: !152, line: 194, column: 2)
!19843 = distinct !DILexicalBlock(scope: !19834, file: !152, line: 194, column: 2)
!19844 = !DILocation(line: 194, column: 2, scope: !19843, inlinedAt: !19840)
!19845 = !DILocation(line: 194, column: 2, scope: !19846, inlinedAt: !19840)
!19846 = distinct !DILexicalBlock(scope: !19842, file: !152, line: 194, column: 2)
!19847 = !DILocalVariable(name: "key", arg: 1, scope: !19848, file: !7544, line: 84, type: !32)
!19848 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7544, file: !7544, line: 84, type: !7555, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !19849)
!19849 = !{!19847}
!19850 = !DILocation(line: 0, scope: !19848, inlinedAt: !19851)
!19851 = distinct !DILocation(line: 215, column: 2, scope: !19834, inlinedAt: !19840)
!19852 = !DILocation(line: 95, column: 2, scope: !19848, inlinedAt: !19851)
!19853 = !{i64 2227415}
!19854 = !DILocation(line: 107, column: 2, scope: !19747)
!19855 = distinct !DISubprogram(name: "k_heap_alloc", scope: !3017, file: !3017, line: 110, type: !19856, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !19858)
!19856 = !DISubroutineType(types: !19857)
!19857 = !{!102, !19672, !156, !19750}
!19858 = !{!19859, !19860, !19861, !19862}
!19859 = !DILocalVariable(name: "h", arg: 1, scope: !19855, file: !3017, line: 110, type: !19672)
!19860 = !DILocalVariable(name: "bytes", arg: 2, scope: !19855, file: !3017, line: 110, type: !156)
!19861 = !DILocalVariable(name: "timeout", arg: 3, scope: !19855, file: !3017, line: 110, type: !19750)
!19862 = !DILocalVariable(name: "ret", scope: !19855, file: !3017, line: 114, type: !102)
!19863 = !DILocation(line: 0, scope: !19855)
!19864 = !DILocation(line: 114, column: 14, scope: !19855)
!19865 = !DILocation(line: 118, column: 2, scope: !19855)
!19866 = distinct !DISubprogram(name: "k_heap_free", scope: !3017, file: !3017, line: 121, type: !19867, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !19869)
!19867 = !DISubroutineType(types: !19868)
!19868 = !{null, !19672, !102}
!19869 = !{!19870, !19871, !19872}
!19870 = !DILocalVariable(name: "h", arg: 1, scope: !19866, file: !3017, line: 121, type: !19672)
!19871 = !DILocalVariable(name: "mem", arg: 2, scope: !19866, file: !3017, line: 121, type: !102)
!19872 = !DILocalVariable(name: "key", scope: !19866, file: !3017, line: 123, type: !19763)
!19873 = !DILocation(line: 0, scope: !19866)
!19874 = !DILocation(line: 123, column: 41, scope: !19866)
!19875 = !DILocation(line: 0, scope: !19773, inlinedAt: !19876)
!19876 = distinct !DILocation(line: 123, column: 25, scope: !19866)
!19877 = !DILocation(line: 55, column: 2, scope: !19782, inlinedAt: !19878)
!19878 = distinct !DILocation(line: 145, column: 10, scope: !19773, inlinedAt: !19876)
!19879 = !DILocation(line: 0, scope: !19782, inlinedAt: !19878)
!19880 = !DILocation(line: 148, column: 2, scope: !19790, inlinedAt: !19876)
!19881 = !DILocation(line: 148, column: 2, scope: !19791, inlinedAt: !19876)
!19882 = !DILocation(line: 148, column: 2, scope: !19794, inlinedAt: !19876)
!19883 = !DILocation(line: 160, column: 2, scope: !19773, inlinedAt: !19876)
!19884 = !DILocation(line: 125, column: 20, scope: !19866)
!19885 = !DILocation(line: 125, column: 2, scope: !19866)
!19886 = !DILocation(line: 128, column: 60, scope: !19887)
!19887 = distinct !DILexicalBlock(scope: !19866, file: !3017, line: 128, column: 6)
!19888 = !DILocation(line: 128, column: 43, scope: !19887)
!19889 = !DILocation(line: 128, column: 68, scope: !19887)
!19890 = !DILocation(line: 128, column: 6, scope: !19866)
!19891 = !DILocation(line: 129, column: 3, scope: !19892)
!19892 = distinct !DILexicalBlock(scope: !19887, file: !3017, line: 128, column: 74)
!19893 = !DILocation(line: 130, column: 2, scope: !19892)
!19894 = !DILocation(line: 0, scope: !19834, inlinedAt: !19895)
!19895 = distinct !DILocation(line: 131, column: 3, scope: !19896)
!19896 = distinct !DILexicalBlock(scope: !19887, file: !3017, line: 130, column: 9)
!19897 = !DILocation(line: 194, column: 2, scope: !19842, inlinedAt: !19895)
!19898 = !DILocation(line: 194, column: 2, scope: !19843, inlinedAt: !19895)
!19899 = !DILocation(line: 194, column: 2, scope: !19846, inlinedAt: !19895)
!19900 = !DILocation(line: 0, scope: !19848, inlinedAt: !19901)
!19901 = distinct !DILocation(line: 215, column: 2, scope: !19834, inlinedAt: !19895)
!19902 = !DILocation(line: 95, column: 2, scope: !19848, inlinedAt: !19901)
!19903 = !DILocation(line: 133, column: 1, scope: !19866)
