; ModuleID = 'build/adafruit_feather_stm32f405/subsys/console/getline/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type {}
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233900 to i8*), void (i8*)* inttoptr (i32 134230849 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233900 to i8*), void (i8*)* inttoptr (i32 134230829 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233900 to i8*), void (i8*)* inttoptr (i32 134230819 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233900 to i8*), void (i8*)* inttoptr (i32 134230919 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233900 to i8*), void (i8*)* inttoptr (i32 134230909 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233900 to i8*), void (i8*)* inttoptr (i32 134230899 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233900 to i8*), void (i8*)* inttoptr (i32 134230889 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233900 to i8*), void (i8*)* inttoptr (i32 134230879 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233900 to i8*), void (i8*)* inttoptr (i32 134230869 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234140 to i8*), void (i8*)* inttoptr (i32 134232249 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233900 to i8*), void (i8*)* inttoptr (i32 134230859 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233900 to i8*), void (i8*)* inttoptr (i32 134230839 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [14 x i8] c"Enter a line\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"line: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"last char was: 0x%x\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.k_fifo* @free_queue to i8*), i8* bitcast (%struct.k_fifo* @used_queue to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@free_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.free_queue", align 4, !dbg !195
@used_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.used_queue", align 4, !dbg !292
@console_getline.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !339
@line_bufs = internal global [2 x %struct.console_input] zeroinitializer, align 4, !dbg !360
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !365
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !371
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !508
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !544
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.34, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !554
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !559
@.str.33 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.34 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !579
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !773
@.str.35 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !734
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !717
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !690
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !706
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !736
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !750
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !752
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !754
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !756
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !758
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !760
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !762
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !764
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !766
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !768
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !778
@.str.37 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !807
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !901
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !890
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !942
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1043
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1083
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1036
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1091
@esc_state = internal global i32 0, align 4, !dbg !1110
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1118
@end = internal unnamed_addr global i8 0, align 1, !dbg !1120
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1114
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1116
@.str.52 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.51 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2.49 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !800
@.str.53 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1122
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1408
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1374
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1360
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1299
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !798
@.str.1.54 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1410
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1378
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1376
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1316
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !796
@.str.2.55 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1423
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1382
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1380
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1322
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !794
@.str.3.56 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1425
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1386
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1384
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1328
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !792
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1427
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1390
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1388
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1334
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !790
@.str.5.57 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1429
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1394
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1392
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1340
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !788
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1431
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1398
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1396
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1346
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !786
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1433
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1402
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1400
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1352
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !784
@.str.8 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1435
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1406
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1404
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1358
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !802
@.str.63 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1437
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1673
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1623
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1675
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1614
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1616
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1625
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1633
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1656
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1659
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 39, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1662
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !874
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1701
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1810
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1812
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1808
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1779
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1814
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1297
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.54, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1314
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.55, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1320
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.56, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1326
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1332
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.57, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1338
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1344
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1350
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1356
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1904
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1944
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1947
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1953
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1959
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2168
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2177
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2184
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2189
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.113 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.117, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.118, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.119, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.120, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.121, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.115, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.122, i32 0, i32 0)], align 4, !dbg !2215
@.str.116 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.117 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.118 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.119 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.120 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.121 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.115 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.122 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2327
@.str.8.114 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2340
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2448
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2451
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2453
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2182
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2179
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2455
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2491
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2489
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2046
@.str.193 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2494
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3179 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3211, !srcloc !3212
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3213, !srcloc !3214
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3215, !srcloc !3216
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3217, !srcloc !3218
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3219, !srcloc !3220
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3225, !srcloc !3226
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3227, !srcloc !3228
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3229, !srcloc !3230
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3231, !srcloc !3232
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3237, !srcloc !3240
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3263, !srcloc !3264
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3265, !srcloc !3266
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3267, !srcloc !3268
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3269, !srcloc !3270
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3271, !srcloc !3272
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3273, !srcloc !3274
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3275, !srcloc !3276
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3277, !srcloc !3278
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3279, !srcloc !3280
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3281, !srcloc !3282
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3283, !srcloc !3284
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3285, !srcloc !3286
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3287, !srcloc !3288
  ret void, !dbg !3289
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3292 {
  tail call void @console_getline_init() #26, !dbg !3297
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0)) #26, !dbg !3298
  br label %1, !dbg !3299

1:                                                ; preds = %0, %1
  %2 = tail call i8* @console_getline() #26, !dbg !3300
  call void @llvm.dbg.value(metadata i8* %2, metadata !3295, metadata !DIExpression()), !dbg !3301
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* noundef %2) #26, !dbg !3302
  %3 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !3303
  %4 = add i32 %3, -1, !dbg !3304
  %5 = getelementptr inbounds i8, i8* %2, i32 %4, !dbg !3305
  %6 = load i8, i8* %5, align 1, !dbg !3305
  %7 = zext i8 %6 to i32, !dbg !3305
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), i32 noundef %7) #26, !dbg !3306
  br label %1, !dbg !3299, !llvm.loop !3307
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3311, metadata !DIExpression()), !dbg !3312
  ret i32 0, !dbg !3313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3314 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3318, metadata !DIExpression()), !dbg !3319
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3320
  ret void, !dbg !3321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3322 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3325
  ret i8* %1, !dbg !3326
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3327 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3339, metadata !DIExpression()), !dbg !3348
  call void @llvm.dbg.value(metadata i8* %0, metadata !3338, metadata !DIExpression()), !dbg !3348
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !3349
  ret void, !dbg !3351
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3356, metadata !DIExpression()), !dbg !3358
  call void @llvm.dbg.value(metadata i8* %1, metadata !3357, metadata !DIExpression()), !dbg !3358
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3359
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !3359
  ret i32 %4, !dbg !3360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3361 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3373, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3370, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i8* %1, metadata !3371, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i8* %2, metadata !3372, metadata !DIExpression()), !dbg !3374
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !3375
  ret void, !dbg !3376
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3377 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3381, metadata !DIExpression()), !dbg !3384
  call void @llvm.dbg.value(metadata i32 %1, metadata !3382, metadata !DIExpression()), !dbg !3384
  call void @llvm.dbg.value(metadata i32 0, metadata !3383, metadata !DIExpression()), !dbg !3384
  %3 = icmp eq i32 %1, 0, !dbg !3385
  br i1 %3, label %13, label %4, !dbg !3388

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3383, metadata !DIExpression()), !dbg !3384
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3389
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3391
  %8 = load i8, i8* %7, align 1, !dbg !3391
  %9 = zext i8 %8 to i32, !dbg !3391
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !3389
  %11 = add nuw i32 %5, 1, !dbg !3392
  call void @llvm.dbg.value(metadata i32 %11, metadata !3383, metadata !DIExpression()), !dbg !3384
  %12 = icmp eq i32 %11, %1, !dbg !3385
  br i1 %12, label %13, label %4, !dbg !3388, !llvm.loop !3393

13:                                               ; preds = %4, %2
  ret void, !dbg !3395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3396 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3400, metadata !DIExpression()), !dbg !3402
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3403
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3403
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3401, metadata !DIExpression()), !dbg !3404
  call void @llvm.va_start(i8* nonnull %3), !dbg !3405
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3406
  %5 = load i32, i32* %4, align 4, !dbg !3406
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3406
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !3406
  call void @llvm.va_end(i8* nonnull %3), !dbg !3407
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3408
  ret void, !dbg !3408
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3409 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3413, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i32 %1, metadata !3414, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i8* %2, metadata !3415, metadata !DIExpression()), !dbg !3418
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3419
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3419
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3416, metadata !DIExpression()), !dbg !3420
  call void @llvm.va_start(i8* nonnull %5), !dbg !3421
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3422
  %7 = load i32, i32* %6, align 4, !dbg !3422
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3422
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !3422
  call void @llvm.dbg.value(metadata i32 %9, metadata !3417, metadata !DIExpression()), !dbg !3418
  call void @llvm.va_end(i8* nonnull %5), !dbg !3423
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3424
  ret i32 %9, !dbg !3425
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3426 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3433, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %0, metadata !3430, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %1, metadata !3431, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %2, metadata !3432, metadata !DIExpression()), !dbg !3440
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3441
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3441
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3434, metadata !DIExpression()), !dbg !3442
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3443
  store i8* %0, i8** %7, align 4, !dbg !3443
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3443
  store i32 %1, i32* %8, align 4, !dbg !3443
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3443
  store i32 0, i32* %9, align 4, !dbg !3443
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !3444
  %10 = load i32, i32* %9, align 4, !dbg !3445
  %11 = load i32, i32* %8, align 4, !dbg !3447
  %12 = icmp slt i32 %10, %11, !dbg !3448
  br i1 %12, label %13, label %15, !dbg !3449

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3450
  store i8 0, i8* %14, align 1, !dbg !3452
  br label %15, !dbg !3453

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3454
  ret i32 %10, !dbg !3455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3461, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3462, metadata !DIExpression()), !dbg !3463
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3464
  %4 = load i8*, i8** %3, align 4, !dbg !3464
  %5 = icmp eq i8* %4, null, !dbg !3466
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3467
  br i1 %5, label %12, label %8, !dbg !3468

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3469
  %10 = load i32, i32* %9, align 4, !dbg !3469
  %11 = icmp slt i32 %7, %10, !dbg !3470
  br i1 %11, label %15, label %12, !dbg !3471

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3472
  %14 = add nsw i32 %7, 1, !dbg !3474
  store i32 %14, i32* %13, align 4, !dbg !3474
  br label %25, !dbg !3475

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3476
  %17 = icmp eq i32 %7, %16, !dbg !3478
  br i1 %17, label %18, label %21, !dbg !3479

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3480
  store i32 %19, i32* %6, align 4, !dbg !3480
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3482
  store i8 0, i8* %20, align 1, !dbg !3483
  br label %25, !dbg !3484

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3485
  %23 = add nsw i32 %7, 1, !dbg !3487
  store i32 %23, i32* %6, align 4, !dbg !3487
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3488
  store i8 %22, i8* %24, align 1, !dbg !3489
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3490
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3491 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3501, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %1, metadata !3502, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %2, metadata !3503, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %3, metadata !3504, metadata !DIExpression()), !dbg !3505
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !3506
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3507
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !3508
  unreachable, !dbg !3509
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3510 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3614
  ret %struct.k_thread* %1, !dbg !3615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3616 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3621, metadata !DIExpression()), !dbg !3622
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3623, !srcloc !3625
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !3626
  ret void, !dbg !3627
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3628 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3629, !srcloc !3631
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !3632
  ret %struct.k_thread* %1, !dbg !3633
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3634 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3645, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i8* %1, metadata !3646, metadata !DIExpression()), !dbg !3649
  %3 = icmp eq i8* %1, null, !dbg !3650
  br i1 %3, label %8, label %4, !dbg !3652

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3653
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3653
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3647, metadata !DIExpression()), !dbg !3649
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !3654, !range !3655
  call void @llvm.dbg.value(metadata i32 %7, metadata !3648, metadata !DIExpression()), !dbg !3649
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !3656
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !3657
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3659 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3663, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.value(metadata i8* %1, metadata !3664, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.value(metadata i8* %1, metadata !3665, metadata !DIExpression()), !dbg !3667
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3668
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3666, metadata !DIExpression()), !dbg !3667
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3669
  %5 = ptrtoint i8* %4 to i32, !dbg !3670
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3670
  %7 = sub i32 %5, %6, !dbg !3670
  %8 = lshr i32 %7, 3, !dbg !3671
  ret i32 %8, !dbg !3672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3673 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3677, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.value(metadata i32 %1, metadata !3678, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.value(metadata i1 %2, metadata !3679, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3682
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3683
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3680, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3681, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3682
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3684
  %6 = bitcast i8* %5 to i16*, !dbg !3684
  %7 = load i16, i16* %6, align 2, !dbg !3684
  %8 = and i16 %7, -2, !dbg !3688
  %9 = zext i1 %2 to i16, !dbg !3688
  %10 = or i16 %8, %9, !dbg !3688
  store i16 %10, i16* %6, align 2, !dbg !3684
  ret void, !dbg !3689
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3690 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3694, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i32 %1, metadata !3695, metadata !DIExpression()), !dbg !3696
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3697
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3699
  br i1 %4, label %7, label %5, !dbg !3700

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3701
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3703
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3704
  br label %7, !dbg !3705

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3706, !range !3708
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3709
  br i1 %9, label %13, label %10, !dbg !3710

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3711
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3713, !range !3708
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !3714
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3715
  call void @llvm.dbg.value(metadata i32 %12, metadata !3695, metadata !DIExpression()), !dbg !3696
  br label %13, !dbg !3716

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3695, metadata !DIExpression()), !dbg !3696
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !3717
  ret void, !dbg !3718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3719 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3723, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata i32 %1, metadata !3724, metadata !DIExpression()), !dbg !3725
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3726
  %4 = add i32 %3, %1, !dbg !3727
  ret i32 %4, !dbg !3728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3729 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3733, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.value(metadata i32 %1, metadata !3734, metadata !DIExpression()), !dbg !3735
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3736
  %4 = and i32 %3, 1, !dbg !3737
  %5 = icmp ne i32 %4, 0, !dbg !3736
  ret i1 %5, !dbg !3738
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3739 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3741, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.value(metadata i32 %1, metadata !3742, metadata !DIExpression()), !dbg !3746
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3747, !range !3748
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3749
  call void @llvm.dbg.value(metadata i32 %4, metadata !3743, metadata !DIExpression()), !dbg !3750
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3751
  ret void, !dbg !3752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3753 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3757, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata i32 %1, metadata !3758, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata i32 %2, metadata !3759, metadata !DIExpression()), !dbg !3762
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3763
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3764
  %6 = add i32 %5, %4, !dbg !3765
  call void @llvm.dbg.value(metadata i32 %6, metadata !3760, metadata !DIExpression()), !dbg !3762
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3766
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3767
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !3768
  ret void, !dbg !3769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3770 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3772, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %1, metadata !3773, metadata !DIExpression()), !dbg !3774
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !3775
  %4 = sub i32 %1, %3, !dbg !3776
  ret i32 %4, !dbg !3777
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3778 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3780, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %1, metadata !3781, metadata !DIExpression()), !dbg !3785
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3786, !range !3748
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3787
  call void @llvm.dbg.value(metadata i32 %4, metadata !3782, metadata !DIExpression()), !dbg !3788
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3789
  ret void, !dbg !3790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3791 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3795, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.value(metadata i32 %1, metadata !3796, metadata !DIExpression()), !dbg !3797
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3798
  %4 = lshr i32 %3, 1, !dbg !3799
  ret i32 %4, !dbg !3800
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3801 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3805, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.value(metadata i32 %1, metadata !3806, metadata !DIExpression()), !dbg !3808
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !3809
  %4 = add i32 %1, 1, !dbg !3810
  %5 = sub i32 %4, %3, !dbg !3811
  call void @llvm.dbg.value(metadata i32 %5, metadata !3807, metadata !DIExpression()), !dbg !3808
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3812, !range !3813
  %7 = sub nsw i32 31, %6, !dbg !3814
  ret i32 %7, !dbg !3815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3816 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3820, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 %1, metadata !3821, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 %2, metadata !3822, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3823, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3829
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3830
  %5 = load i32, i32* %4, align 4, !dbg !3830
  %6 = icmp eq i32 %5, 0, !dbg !3831
  br i1 %6, label %7, label %12, !dbg !3832

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3833
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3835
  %10 = load i32, i32* %9, align 4, !dbg !3836
  %11 = or i32 %10, %8, !dbg !3836
  store i32 %11, i32* %9, align 4, !dbg !3836
  store i32 %1, i32* %4, align 4, !dbg !3837
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3838
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3839
  br label %14, !dbg !3840

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3825, metadata !DIExpression()), !dbg !3841
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !3842, !range !3843
  call void @llvm.dbg.value(metadata i32 %13, metadata !3828, metadata !DIExpression()), !dbg !3841
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !3844
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !3845
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !3846
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !3847
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3849 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3851, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %1, metadata !3852, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %2, metadata !3853, metadata !DIExpression()), !dbg !3854
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !3855
  ret void, !dbg !3856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3857 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3859, metadata !DIExpression()), !dbg !3862
  call void @llvm.dbg.value(metadata i32 %1, metadata !3860, metadata !DIExpression()), !dbg !3862
  call void @llvm.dbg.value(metadata i32 %2, metadata !3861, metadata !DIExpression()), !dbg !3862
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !3863
  ret void, !dbg !3864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3865 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3867, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata i32 %1, metadata !3868, metadata !DIExpression()), !dbg !3869
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !3870
  ret i32 %3, !dbg !3871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3872 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3876, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %1, metadata !3877, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %2, metadata !3878, metadata !DIExpression()), !dbg !3881
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3882
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3879, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3880, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3881
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3880, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3881
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3883
  call void @llvm.dbg.value(metadata i8* %5, metadata !3880, metadata !DIExpression()), !dbg !3881
  %6 = bitcast i8* %5 to i16*, !dbg !3884
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3887
  %8 = load i16, i16* %7, align 2, !dbg !3887
  %9 = zext i16 %8 to i32, !dbg !3887
  ret i32 %9, !dbg !3888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3889 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3893, metadata !DIExpression()), !dbg !3894
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3895
  ret %struct.chunk_unit_t* %2, !dbg !3896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3897 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3901, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata i32 %1, metadata !3902, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata i32 %2, metadata !3903, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata i32 %3, metadata !3904, metadata !DIExpression()), !dbg !3907
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3908
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3905, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3907
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3909
  call void @llvm.dbg.value(metadata i8* %6, metadata !3906, metadata !DIExpression()), !dbg !3907
  %7 = trunc i32 %3 to i16, !dbg !3910
  %8 = bitcast i8* %6 to i16*, !dbg !3913
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3914
  store i16 %7, i16* %9, align 2, !dbg !3915
  ret void, !dbg !3916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3917 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3921, metadata !DIExpression()), !dbg !3922
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !3923
  ret i32 %2, !dbg !3924
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3925 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3929, metadata !DIExpression()), !dbg !3931
  call void @llvm.dbg.value(metadata i32 %1, metadata !3930, metadata !DIExpression()), !dbg !3931
  %3 = add i32 %1, 4, !dbg !3932
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !3933
  ret i32 %4, !dbg !3934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3939, metadata !DIExpression()), !dbg !3940
  %2 = add i32 %0, 7, !dbg !3941
  %3 = lshr i32 %2, 3, !dbg !3942
  ret i32 %3, !dbg !3943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3944 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3948, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i32 %1, metadata !3949, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i32 %2, metadata !3950, metadata !DIExpression()), !dbg !3951
  %4 = shl i32 %2, 1, !dbg !3952
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !3953
  ret void, !dbg !3954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3955 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3957, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %1, metadata !3958, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %2, metadata !3959, metadata !DIExpression()), !dbg !3960
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !3961
  ret void, !dbg !3962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3963 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3965, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.value(metadata i32 %1, metadata !3966, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.value(metadata i32 %2, metadata !3967, metadata !DIExpression()), !dbg !3973
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !3974
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3968, metadata !DIExpression()), !dbg !3973
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3975
  %6 = icmp eq i32 %5, %1, !dbg !3976
  br i1 %6, label %7, label %14, !dbg !3977

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3978
  %9 = xor i32 %8, -1, !dbg !3980
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3981
  %11 = load i32, i32* %10, align 4, !dbg !3982
  %12 = and i32 %11, %9, !dbg !3982
  store i32 %12, i32* %10, align 4, !dbg !3982
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3983
  store i32 0, i32* %13, align 4, !dbg !3984
  br label %17, !dbg !3985

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3986
  call void @llvm.dbg.value(metadata i32 %15, metadata !3969, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.value(metadata i32 %5, metadata !3972, metadata !DIExpression()), !dbg !3987
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3988
  store i32 %5, i32* %16, align 4, !dbg !3989
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !3990
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !3991
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !3992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3993 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3995, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i32 %1, metadata !3996, metadata !DIExpression()), !dbg !3997
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !3998
  ret i32 %3, !dbg !3999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4000 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4004, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata i8* %1, metadata !4005, metadata !DIExpression()), !dbg !4011
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4012
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4012
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4006, metadata !DIExpression()), !dbg !4011
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %5, metadata !4007, metadata !DIExpression()), !dbg !4011
  %6 = ptrtoint i8* %1 to i32, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %6, metadata !4008, metadata !DIExpression()), !dbg !4011
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !4015
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4015
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4016
  call void @llvm.dbg.value(metadata i32 %9, metadata !4009, metadata !DIExpression()), !dbg !4011
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !4017
  %11 = shl i32 %10, 3, !dbg !4018
  call void @llvm.dbg.value(metadata i32 %11, metadata !4010, metadata !DIExpression()), !dbg !4011
  %12 = sub i32 %9, %6, !dbg !4019
  %13 = add i32 %12, %11, !dbg !4020
  ret i32 %13, !dbg !4021
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4022 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4026, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32 %1, metadata !4027, metadata !DIExpression()), !dbg !4032
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4033
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4033
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4028, metadata !DIExpression()), !dbg !4032
  %5 = icmp eq i32 %1, 0, !dbg !4034
  br i1 %5, label %19, label %6, !dbg !4036

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4037
  br i1 %7, label %19, label %8, !dbg !4038

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4039, !range !3655
  call void @llvm.dbg.value(metadata i32 %9, metadata !4030, metadata !DIExpression()), !dbg !4032
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !4040
  call void @llvm.dbg.value(metadata i32 %10, metadata !4031, metadata !DIExpression()), !dbg !4032
  %11 = icmp eq i32 %10, 0, !dbg !4041
  br i1 %11, label %19, label %12, !dbg !4043

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4044
  %14 = icmp ugt i32 %13, %9, !dbg !4046
  br i1 %14, label %15, label %17, !dbg !4047

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4048
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !4050
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !4051
  br label %17, !dbg !4052

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !4053
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4054
  call void @llvm.dbg.value(metadata i8* %18, metadata !4029, metadata !DIExpression()), !dbg !4032
  br label %19, !dbg !4055

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4032
  ret i8* %20, !dbg !4056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4057 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4061, metadata !DIExpression()), !dbg !4063
  call void @llvm.dbg.value(metadata i32 %1, metadata !4062, metadata !DIExpression()), !dbg !4063
  %3 = lshr i32 %1, 3, !dbg !4064
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4065
  %5 = load i32, i32* %4, align 4, !dbg !4065
  %6 = icmp uge i32 %3, %5, !dbg !4066
  ret i1 %6, !dbg !4067
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4068 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4072, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.value(metadata i32 %1, metadata !4073, metadata !DIExpression()), !dbg !4087
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %3, metadata !4074, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4075, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4087
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4089
  %5 = load i32, i32* %4, align 4, !dbg !4089
  %6 = icmp eq i32 %5, 0, !dbg !4090
  br i1 %6, label %19, label %7, !dbg !4091

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4092
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4093
  call void @llvm.dbg.value(metadata i32 %9, metadata !4079, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.value(metadata i32 %8, metadata !4080, metadata !DIExpression()), !dbg !4094
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4095
  %11 = icmp ult i32 %10, %1, !dbg !4097
  br i1 %11, label %13, label %12, !dbg !4098

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !4099
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4101
  store i32 %14, i32* %4, align 4, !dbg !4102
  %15 = add nsw i32 %9, -1, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %15, metadata !4079, metadata !DIExpression()), !dbg !4093
  %16 = icmp eq i32 %15, 0, !dbg !4103
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4104
  br i1 %18, label %19, label %7, !dbg !4104, !llvm.loop !4105

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4108
  %21 = load i32, i32* %20, align 4, !dbg !4108
  %22 = add nsw i32 %3, 1, !dbg !4109
  %23 = shl nsw i32 -1, %22, !dbg !4109
  %24 = and i32 %21, %23, !dbg !4110
  call void @llvm.dbg.value(metadata i32 %24, metadata !4082, metadata !DIExpression()), !dbg !4087
  %25 = icmp eq i32 %24, 0, !dbg !4111
  br i1 %25, label %30, label %26, !dbg !4112

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4113, !range !3813
  call void @llvm.dbg.value(metadata i32 %27, metadata !4083, metadata !DIExpression()), !dbg !4114
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4115
  %29 = load i32, i32* %28, align 4, !dbg !4115
  call void @llvm.dbg.value(metadata i32 %29, metadata !4086, metadata !DIExpression()), !dbg !4114
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !4116
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4087
  ret i32 %31, !dbg !4117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4118 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4120, metadata !DIExpression()), !dbg !4126
  call void @llvm.dbg.value(metadata i32 %1, metadata !4121, metadata !DIExpression()), !dbg !4126
  call void @llvm.dbg.value(metadata i32 %2, metadata !4122, metadata !DIExpression()), !dbg !4126
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4127
  call void @llvm.dbg.value(metadata i32 %4, metadata !4123, metadata !DIExpression()), !dbg !4126
  %5 = sub i32 %2, %1, !dbg !4128
  call void @llvm.dbg.value(metadata i32 %5, metadata !4124, metadata !DIExpression()), !dbg !4126
  %6 = sub i32 %4, %5, !dbg !4129
  call void @llvm.dbg.value(metadata i32 %6, metadata !4125, metadata !DIExpression()), !dbg !4126
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !4130
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !4131
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !4132
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !4133
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !4134
  ret void, !dbg !4135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4136 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4140, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.value(metadata i32 %1, metadata !4141, metadata !DIExpression()), !dbg !4144
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4145
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4142, metadata !DIExpression()), !dbg !4144
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4146
  call void @llvm.dbg.value(metadata i8* %4, metadata !4143, metadata !DIExpression()), !dbg !4144
  ret i8* %4, !dbg !4147
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4148 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4152, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i32 %1, metadata !4153, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i32 %2, metadata !4154, metadata !DIExpression()), !dbg !4164
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4165
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4165
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4155, metadata !DIExpression()), !dbg !4164
  %6 = sub i32 0, %1, !dbg !4166
  %7 = and i32 %6, %1, !dbg !4167
  call void @llvm.dbg.value(metadata i32 %7, metadata !4157, metadata !DIExpression()), !dbg !4164
  %8 = icmp eq i32 %7, %1, !dbg !4168
  br i1 %8, label %13, label %9, !dbg !4170

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4171
  call void @llvm.dbg.value(metadata i32 %10, metadata !4153, metadata !DIExpression()), !dbg !4164
  %11 = icmp ult i32 %7, 4, !dbg !4173
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4173
  br label %17, !dbg !4173

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4174
  br i1 %14, label %15, label %17, !dbg !4177

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !4178
  br label %57, !dbg !4180

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4164
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4181
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4153, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i32 %19, metadata !4156, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i32 %18, metadata !4157, metadata !DIExpression()), !dbg !4164
  %21 = icmp eq i32 %2, 0, !dbg !4182
  br i1 %21, label %57, label %22, !dbg !4184

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !4185
  br i1 %23, label %57, label %24, !dbg !4186

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4187
  %26 = add i32 %25, %20, !dbg !4188
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #27, !dbg !4189, !range !3655
  call void @llvm.dbg.value(metadata i32 %27, metadata !4158, metadata !DIExpression()), !dbg !4164
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #27, !dbg !4190
  call void @llvm.dbg.value(metadata i32 %28, metadata !4159, metadata !DIExpression()), !dbg !4164
  %29 = icmp eq i32 %28, 0, !dbg !4191
  br i1 %29, label %57, label %30, !dbg !4193

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4194
  call void @llvm.dbg.value(metadata i8* %31, metadata !4160, metadata !DIExpression()), !dbg !4164
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4195
  %33 = ptrtoint i8* %32 to i32, !dbg !4195
  %34 = add i32 %20, -1, !dbg !4195
  %35 = add i32 %34, %33, !dbg !4195
  %36 = sub i32 0, %20, !dbg !4195
  %37 = and i32 %35, %36, !dbg !4195
  %38 = inttoptr i32 %37 to i8*, !dbg !4196
  %39 = sub i32 0, %18, !dbg !4197
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4197
  call void @llvm.dbg.value(metadata i8* %40, metadata !4160, metadata !DIExpression()), !dbg !4164
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4198
  %42 = ptrtoint i8* %41 to i32, !dbg !4198
  %43 = add i32 %42, 7, !dbg !4198
  %44 = and i32 %43, -8, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %44, metadata !4161, metadata !DIExpression()), !dbg !4164
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #27, !dbg !4199
  call void @llvm.dbg.value(metadata i32 %45, metadata !4162, metadata !DIExpression()), !dbg !4164
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !4200
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4201
  %48 = sub i32 %44, %47, !dbg !4201
  %49 = ashr exact i32 %48, 3, !dbg !4201
  call void @llvm.dbg.value(metadata i32 %49, metadata !4163, metadata !DIExpression()), !dbg !4164
  %50 = icmp ugt i32 %45, %28, !dbg !4202
  br i1 %50, label %51, label %52, !dbg !4204

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #27, !dbg !4205
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4207
  br label %52, !dbg !4208

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #27, !dbg !4209
  %54 = icmp ugt i32 %53, %49, !dbg !4211
  br i1 %54, label %55, label %56, !dbg !4212

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #27, !dbg !4213
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !4215
  br label %56, !dbg !4216

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #27, !dbg !4217
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4164
  ret i8* %58, !dbg !4218
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4219 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4223, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i8* %1, metadata !4224, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i32 %2, metadata !4225, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i32 %3, metadata !4226, metadata !DIExpression()), !dbg !4242
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4243
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4243
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4227, metadata !DIExpression()), !dbg !4242
  %7 = icmp eq i8* %1, null, !dbg !4244
  br i1 %7, label %8, label %10, !dbg !4246

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4247
  br label %59, !dbg !4249

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4250
  br i1 %11, label %12, label %13, !dbg !4252

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4253
  br label %59, !dbg !4255

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !4256
  br i1 %14, label %59, label %15, !dbg !4258

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !4259, !range !3655
  call void @llvm.dbg.value(metadata i32 %16, metadata !4228, metadata !DIExpression()), !dbg !4242
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4260
  call void @llvm.dbg.value(metadata i32 %17, metadata !4229, metadata !DIExpression()), !dbg !4242
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4261
  %19 = ptrtoint i8* %1 to i32, !dbg !4262
  %20 = ptrtoint i8* %18 to i32, !dbg !4262
  %21 = sub i32 %19, %20, !dbg !4262
  call void @llvm.dbg.value(metadata i32 %21, metadata !4230, metadata !DIExpression()), !dbg !4242
  %22 = add i32 %21, %3, !dbg !4263
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !4264
  call void @llvm.dbg.value(metadata i32 %23, metadata !4231, metadata !DIExpression()), !dbg !4242
  %24 = icmp eq i32 %2, 0, !dbg !4265
  br i1 %24, label %29, label %25, !dbg !4266

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4267
  %27 = and i32 %26, %19, !dbg !4268
  %28 = icmp eq i32 %27, 0, !dbg !4268
  br i1 %28, label %29, label %49, !dbg !4269

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4270
  %31 = icmp eq i32 %23, %30, !dbg !4271
  br i1 %31, label %59, label %32, !dbg !4272

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4273
  br i1 %33, label %34, label %36, !dbg !4274

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4275
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #27, !dbg !4277
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4278
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #27, !dbg !4279
  br label %59, !dbg !4280

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4281
  br i1 %37, label %49, label %38, !dbg !4282

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4283
  %40 = add i32 %39, %30, !dbg !4284
  %41 = icmp ult i32 %40, %23, !dbg !4285
  br i1 %41, label %49, label %42, !dbg !4286

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4287
  call void @llvm.dbg.value(metadata i32 %43, metadata !4232, metadata !DIExpression()), !dbg !4288
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4289
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4290
  %45 = icmp ult i32 %43, %44, !dbg !4292
  br i1 %45, label %46, label %48, !dbg !4293

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4294
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #27, !dbg !4296
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #27, !dbg !4297
  br label %48, !dbg !4298

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #27, !dbg !4299
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4300
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4301
  call void @llvm.dbg.value(metadata i8* %50, metadata !4238, metadata !DIExpression()), !dbg !4242
  %51 = icmp eq i8* %50, null, !dbg !4302
  br i1 %51, label %59, label %52, !dbg !4303

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4304, !range !3748
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #27, !dbg !4305
  %55 = sub i32 %54, %21, !dbg !4306
  call void @llvm.dbg.value(metadata i32 %55, metadata !4239, metadata !DIExpression()), !dbg !4307
  %56 = icmp ult i32 %55, %3, !dbg !4308
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4308
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #26, !dbg !4309
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4310
  br label %59, !dbg !4311

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4242
  ret i8* %60, !dbg !4312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4313 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4317, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %1, metadata !4318, metadata !DIExpression()), !dbg !4319
  %3 = shl i32 %1, 3, !dbg !4320
  %4 = add i32 %3, -4, !dbg !4321
  ret i32 %4, !dbg !4322
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4323 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4327, metadata !DIExpression()), !dbg !4338
  call void @llvm.dbg.value(metadata i8* %1, metadata !4328, metadata !DIExpression()), !dbg !4338
  call void @llvm.dbg.value(metadata i32 %2, metadata !4329, metadata !DIExpression()), !dbg !4338
  %4 = add i32 %2, -4, !dbg !4339
  call void @llvm.dbg.value(metadata i32 %4, metadata !4329, metadata !DIExpression()), !dbg !4338
  %5 = ptrtoint i8* %1 to i32, !dbg !4340
  %6 = add i32 %5, 7, !dbg !4340
  %7 = and i32 %6, -8, !dbg !4340
  call void @llvm.dbg.value(metadata i32 %7, metadata !4330, metadata !DIExpression()), !dbg !4338
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4341
  %9 = ptrtoint i8* %8 to i32, !dbg !4341
  %10 = and i32 %9, -8, !dbg !4341
  call void @llvm.dbg.value(metadata i32 %10, metadata !4331, metadata !DIExpression()), !dbg !4338
  %11 = sub i32 %10, %7, !dbg !4342
  %12 = lshr exact i32 %11, 3, !dbg !4343
  call void @llvm.dbg.value(metadata i32 %12, metadata !4332, metadata !DIExpression()), !dbg !4338
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4344
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4333, metadata !DIExpression()), !dbg !4338
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4345
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4346
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4347
  store i32 %12, i32* %15, align 8, !dbg !4348
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4349
  store i32 0, i32* %16, align 4, !dbg !4350
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #27, !dbg !4351
  call void @llvm.dbg.value(metadata i32 %17, metadata !4334, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4338
  %18 = shl i32 %17, 2, !dbg !4352
  %19 = add i32 %18, 20, !dbg !4353
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #27, !dbg !4354
  call void @llvm.dbg.value(metadata i32 %20, metadata !4335, metadata !DIExpression()), !dbg !4338
  call void @llvm.dbg.value(metadata i32 0, metadata !4336, metadata !DIExpression()), !dbg !4355
  %21 = icmp slt i32 %17, 0, !dbg !4356
  br i1 %21, label %22, label %24, !dbg !4358

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #27, !dbg !4359
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #27, !dbg !4360
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !4361
  %23 = sub i32 %12, %20, !dbg !4362
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #27, !dbg !4363
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #27, !dbg !4364
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #27, !dbg !4365
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #27, !dbg !4366
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #27, !dbg !4367
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #27, !dbg !4368
  ret void, !dbg !4369

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4336, metadata !DIExpression()), !dbg !4355
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4370
  store i32 0, i32* %26, align 4, !dbg !4372
  %27 = add nuw i32 %25, 1, !dbg !4373
  call void @llvm.dbg.value(metadata i32 %27, metadata !4336, metadata !DIExpression()), !dbg !4355
  %28 = icmp eq i32 %25, %17, !dbg !4356
  br i1 %28, label %22, label %24, !dbg !4358, !llvm.loop !4374
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4376 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4389, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4386, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i8* %1, metadata !4387, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i8* %2, metadata !4388, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i32 %4, metadata !4390, metadata !DIExpression()), !dbg !4517
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4518
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4518
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4391, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i32 0, metadata !4395, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i1 undef, metadata !4397, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4517
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4520

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4520

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4521
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4389, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i8* %30, metadata !4388, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i32 %29, metadata !4395, metadata !DIExpression()), !dbg !4517
  %31 = load i8, i8* %30, align 1, !dbg !4522
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4520

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4522
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4523
  call void @llvm.dbg.value(metadata i8* %34, metadata !4388, metadata !DIExpression()), !dbg !4517
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !4523
  call void @llvm.dbg.value(metadata i32 %35, metadata !4399, metadata !DIExpression()), !dbg !4524
  %36 = icmp slt i32 %35, 0, !dbg !4525
  %37 = add i32 %29, 1, !dbg !4523
  call void @llvm.dbg.value(metadata i32 undef, metadata !4395, metadata !DIExpression()), !dbg !4517
  br i1 %36, label %365, label %28, !llvm.loop !4527

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4529
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4404, metadata !DIExpression()), !dbg !4530
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4449, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4452, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8* %30, metadata !4455, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i32 -1, metadata !4456, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i32 -1, metadata !4457, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8* null, metadata !4458, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8* %14, metadata !4459, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8 0, metadata !4460, metadata !DIExpression()), !dbg !4531
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !4532
  call void @llvm.dbg.value(metadata i8* %39, metadata !4388, metadata !DIExpression()), !dbg !4517
  %40 = load i24, i24* %15, align 8, !dbg !4533
  %41 = and i24 %40, 256, !dbg !4533
  %42 = icmp eq i24 %41, 0, !dbg !4533
  br i1 %42, label %51, label %43, !dbg !4535

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4536
  call void @llvm.dbg.value(metadata i8* %44, metadata !4389, metadata !DIExpression()), !dbg !4517
  %45 = bitcast i8* %27 to i32*, !dbg !4536
  %46 = load i32, i32* %45, align 4, !dbg !4536
  call void @llvm.dbg.value(metadata i32 %46, metadata !4456, metadata !DIExpression()), !dbg !4531
  %47 = icmp slt i32 %46, 0, !dbg !4538
  br i1 %47, label %48, label %56, !dbg !4540

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4541
  store i24 %49, i24* %15, align 8, !dbg !4541
  %50 = sub nsw i32 0, %46, !dbg !4543
  call void @llvm.dbg.value(metadata i32 %50, metadata !4456, metadata !DIExpression()), !dbg !4531
  br label %56, !dbg !4544

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4545
  %53 = icmp eq i24 %52, 0, !dbg !4545
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4547
  br label %56, !dbg !4547

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4548
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4531
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4389, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i32 %58, metadata !4456, metadata !DIExpression()), !dbg !4531
  %60 = and i24 %57, 1024, !dbg !4548
  %61 = icmp eq i24 %60, 0, !dbg !4548
  br i1 %61, label %69, label %62, !dbg !4549

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4550
  call void @llvm.dbg.value(metadata i8* %63, metadata !4389, metadata !DIExpression()), !dbg !4517
  %64 = bitcast i8* %59 to i32*, !dbg !4550
  %65 = load i32, i32* %64, align 4, !dbg !4550
  call void @llvm.dbg.value(metadata i32 %65, metadata !4461, metadata !DIExpression()), !dbg !4551
  %66 = icmp slt i32 %65, 0, !dbg !4552
  br i1 %66, label %67, label %74, !dbg !4554

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4555
  store i24 %68, i24* %15, align 8, !dbg !4555
  br label %74, !dbg !4557

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4558
  %71 = icmp eq i24 %70, 0, !dbg !4558
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4560
  br label %74, !dbg !4560

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4561
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4531
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4531
  call void @llvm.dbg.value(metadata i8* %77, metadata !4389, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i32 %76, metadata !4457, metadata !DIExpression()), !dbg !4531
  store i32 0, i32* %16, align 4, !dbg !4562
  store i32 0, i32* %17, align 8, !dbg !4563
  %78 = lshr i24 %75, 16, !dbg !4561
  call void @llvm.dbg.value(metadata i24 %78, metadata !4464, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4531
  %79 = lshr i24 %75, 11, !dbg !4564
  %80 = and i24 %79, 15, !dbg !4564
  %81 = zext i24 %80 to i32, !dbg !4564
  call void @llvm.dbg.value(metadata i32 %81, metadata !4465, metadata !DIExpression()), !dbg !4531
  %82 = trunc i24 %78 to i3, !dbg !4565
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4565

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4566

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4569
  call void @llvm.dbg.value(metadata i8* %85, metadata !4389, metadata !DIExpression()), !dbg !4517
  %86 = bitcast i8* %77 to i32*, !dbg !4569
  %87 = load i32, i32* %86, align 4, !dbg !4569
  %88 = sext i32 %87 to i64, !dbg !4569
  store i64 %88, i64* %20, align 8, !dbg !4571
  br label %115, !dbg !4572

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4573
  call void @llvm.dbg.value(metadata i8* %90, metadata !4389, metadata !DIExpression()), !dbg !4517
  %91 = bitcast i8* %77 to i32*, !dbg !4573
  %92 = load i32, i32* %91, align 4, !dbg !4573
  %93 = sext i32 %92 to i64, !dbg !4573
  store i64 %93, i64* %20, align 8, !dbg !4576
  br label %115, !dbg !4577

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4578
  %96 = add i32 %95, 7, !dbg !4578
  %97 = and i32 %96, -8, !dbg !4578
  %98 = inttoptr i32 %97 to i8*, !dbg !4578
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4578
  call void @llvm.dbg.value(metadata i8* %99, metadata !4389, metadata !DIExpression()), !dbg !4517
  %100 = inttoptr i32 %97 to i64*, !dbg !4578
  %101 = load i64, i64* %100, align 8, !dbg !4578
  store i64 %101, i64* %20, align 8, !dbg !4579
  br label %115, !dbg !4580

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4581
  %104 = add i32 %103, 7, !dbg !4581
  %105 = and i32 %104, -8, !dbg !4581
  %106 = inttoptr i32 %105 to i8*, !dbg !4581
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4581
  call void @llvm.dbg.value(metadata i8* %107, metadata !4389, metadata !DIExpression()), !dbg !4517
  %108 = inttoptr i32 %105 to i64*, !dbg !4581
  %109 = load i64, i64* %108, align 8, !dbg !4581
  store i64 %109, i64* %20, align 8, !dbg !4582
  br label %115, !dbg !4583

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4584
  call void @llvm.dbg.value(metadata i8* %111, metadata !4389, metadata !DIExpression()), !dbg !4517
  %112 = bitcast i8* %77 to i32*, !dbg !4584
  %113 = load i32, i32* %112, align 4, !dbg !4584
  %114 = sext i32 %113 to i64, !dbg !4585
  store i64 %114, i64* %20, align 8, !dbg !4586
  br label %115, !dbg !4587

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4588
  call void @llvm.dbg.value(metadata i8* %117, metadata !4389, metadata !DIExpression()), !dbg !4517
  %118 = trunc i24 %79 to i4, !dbg !4589
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4589

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4590
  %121 = ashr exact i64 %120, 56, !dbg !4590
  store i64 %121, i64* %20, align 8, !dbg !4593
  br label %177, !dbg !4594

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4595
  %124 = ashr exact i64 %123, 48, !dbg !4595
  store i64 %124, i64* %20, align 8, !dbg !4598
  br label %177, !dbg !4599

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4600

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4603
  call void @llvm.dbg.value(metadata i8* %127, metadata !4389, metadata !DIExpression()), !dbg !4517
  %128 = bitcast i8* %77 to i32*, !dbg !4603
  %129 = load i32, i32* %128, align 4, !dbg !4603
  %130 = zext i32 %129 to i64, !dbg !4603
  store i64 %130, i64* %20, align 8, !dbg !4605
  br label %157, !dbg !4606

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4607
  call void @llvm.dbg.value(metadata i8* %132, metadata !4389, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i8* %132, metadata !4389, metadata !DIExpression()), !dbg !4517
  %133 = bitcast i8* %77 to i32*, !dbg !4607
  %134 = load i32, i32* %133, align 4, !dbg !4607
  %135 = zext i32 %134 to i64, !dbg !4607
  store i64 %135, i64* %20, align 8, !dbg !4607
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4609
  %138 = add i32 %137, 7, !dbg !4609
  %139 = and i32 %138, -8, !dbg !4609
  %140 = inttoptr i32 %139 to i8*, !dbg !4609
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4609
  call void @llvm.dbg.value(metadata i8* %141, metadata !4389, metadata !DIExpression()), !dbg !4517
  %142 = inttoptr i32 %139 to i64*, !dbg !4609
  %143 = load i64, i64* %142, align 8, !dbg !4609
  store i64 %143, i64* %20, align 8, !dbg !4610
  br label %157, !dbg !4611

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4612
  %146 = add i32 %145, 7, !dbg !4612
  %147 = and i32 %146, -8, !dbg !4612
  %148 = inttoptr i32 %147 to i8*, !dbg !4612
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4612
  call void @llvm.dbg.value(metadata i8* %149, metadata !4389, metadata !DIExpression()), !dbg !4517
  %150 = inttoptr i32 %147 to i64*, !dbg !4612
  %151 = load i64, i64* %150, align 8, !dbg !4612
  store i64 %151, i64* %20, align 8, !dbg !4613
  br label %157, !dbg !4614

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4615
  call void @llvm.dbg.value(metadata i8* %153, metadata !4389, metadata !DIExpression()), !dbg !4517
  %154 = bitcast i8* %77 to i32*, !dbg !4615
  %155 = load i32, i32* %154, align 4, !dbg !4615
  %156 = zext i32 %155 to i64, !dbg !4616
  store i64 %156, i64* %20, align 8, !dbg !4617
  br label %157, !dbg !4618

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4619
  call void @llvm.dbg.value(metadata i8* %159, metadata !4389, metadata !DIExpression()), !dbg !4517
  %160 = trunc i24 %79 to i4, !dbg !4620
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4620

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4621
  store i64 %162, i64* %20, align 8, !dbg !4624
  br label %177, !dbg !4625

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4626
  store i64 %164, i64* %20, align 8, !dbg !4629
  br label %177, !dbg !4630

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4631
  %167 = add i32 %166, 7, !dbg !4631
  %168 = and i32 %167, -8, !dbg !4631
  %169 = inttoptr i32 %168 to i8*, !dbg !4631
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4631
  call void @llvm.dbg.value(metadata i8* %170, metadata !4389, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i8* %170, metadata !4389, metadata !DIExpression()), !dbg !4517
  %171 = inttoptr i32 %168 to double*, !dbg !4631
  %172 = load double, double* %171, align 8, !dbg !4631
  store double %172, double* %19, align 8, !dbg !4631
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4635
  call void @llvm.dbg.value(metadata i8* %174, metadata !4389, metadata !DIExpression()), !dbg !4517
  %175 = bitcast i8* %77 to i8**, !dbg !4635
  %176 = load i8*, i8** %175, align 4, !dbg !4635
  store i8* %176, i8** %18, align 8, !dbg !4638
  br label %177, !dbg !4639

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4531
  call void @llvm.dbg.value(metadata i8* %178, metadata !4389, metadata !DIExpression()), !dbg !4517
  %179 = and i24 %75, 3, !dbg !4640
  %180 = icmp eq i24 %179, 0, !dbg !4640
  br i1 %180, label %185, label %181, !dbg !4640

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !4641
  call void @llvm.dbg.value(metadata i32 %182, metadata !4466, metadata !DIExpression()), !dbg !4642
  %183 = icmp slt i32 %182, 0, !dbg !4643
  %184 = add i32 %182, %29, !dbg !4641
  call void @llvm.dbg.value(metadata i32 undef, metadata !4395, metadata !DIExpression()), !dbg !4517
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4645
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4646

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !4647
  call void @llvm.dbg.value(metadata i32 %188, metadata !4470, metadata !DIExpression()), !dbg !4648
  %189 = icmp slt i32 %188, 0, !dbg !4649
  %190 = add i32 %29, 1, !dbg !4647
  call void @llvm.dbg.value(metadata i32 undef, metadata !4395, metadata !DIExpression()), !dbg !4517
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4651
  call void @llvm.dbg.value(metadata i8* %192, metadata !4458, metadata !DIExpression()), !dbg !4531
  %193 = icmp sgt i32 %76, -1, !dbg !4652
  br i1 %193, label %194, label %196, !dbg !4654

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !4655
  call void @llvm.dbg.value(metadata i32 %195, metadata !4473, metadata !DIExpression()), !dbg !4657
  br label %241, !dbg !4658

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !4659
  call void @llvm.dbg.value(metadata i32 %197, metadata !4473, metadata !DIExpression()), !dbg !4657
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4458, metadata !DIExpression()), !dbg !4531
  %199 = load i64, i64* %20, align 8, !dbg !4661
  %200 = trunc i64 %199 to i8, !dbg !4662
  store i8 %200, i8* %10, align 1, !dbg !4663
  call void @llvm.dbg.value(metadata i8* %23, metadata !4459, metadata !DIExpression()), !dbg !4531
  br label %245, !dbg !4664

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4665
  %203 = icmp eq i24 %202, 0, !dbg !4665
  %204 = trunc i24 %75 to i8, !dbg !4667
  %205 = shl i8 %204, 1, !dbg !4667
  %206 = and i8 %205, 32, !dbg !4667
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4667
  call void @llvm.dbg.value(metadata i8 %207, metadata !4460, metadata !DIExpression()), !dbg !4531
  %208 = load i64, i64* %20, align 8, !dbg !4668
  call void @llvm.dbg.value(metadata i64 %208, metadata !4396, metadata !DIExpression()), !dbg !4517
  %209 = icmp slt i64 %208, 0, !dbg !4669
  br i1 %209, label %210, label %212, !dbg !4671

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4460, metadata !DIExpression()), !dbg !4531
  %211 = sub nsw i64 0, %208, !dbg !4672
  store i64 %211, i64* %20, align 8, !dbg !4674
  br label %212, !dbg !4675

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4531
  call void @llvm.dbg.value(metadata i8 %213, metadata !4460, metadata !DIExpression()), !dbg !4531
  %214 = load i64, i64* %20, align 8, !dbg !4676
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4677
  call void @llvm.dbg.value(metadata i8* %215, metadata !4458, metadata !DIExpression()), !dbg !4531
  br label %216, !dbg !4678

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4679
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4680
  call void @llvm.dbg.value(metadata i8* %218, metadata !4458, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8 %217, metadata !4460, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.label(metadata !4516), !dbg !4681
  %219 = icmp sgt i32 %76, -1, !dbg !4682
  br i1 %219, label %222, label %220, !dbg !4683

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4684
  br label %245, !dbg !4683

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4686
  %224 = sub i32 %22, %223, !dbg !4686
  call void @llvm.dbg.value(metadata i32 %224, metadata !4475, metadata !DIExpression()), !dbg !4687
  %225 = load i24, i24* %15, align 8, !dbg !4688
  %226 = and i24 %225, -65, !dbg !4688
  store i24 %226, i24* %15, align 8, !dbg !4688
  %227 = icmp ugt i32 %76, %224, !dbg !4689
  br i1 %227, label %228, label %245, !dbg !4691

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4692
  store i32 %229, i32* %16, align 4, !dbg !4694
  br label %245, !dbg !4695

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4696
  %232 = icmp eq i8* %231, null, !dbg !4698
  br i1 %232, label %245, label %233, !dbg !4699

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4700
  %235 = zext i32 %234 to i64, !dbg !4700
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4702
  call void @llvm.dbg.value(metadata i8* %236, metadata !4458, metadata !DIExpression()), !dbg !4531
  %237 = load i24, i24* %15, align 8, !dbg !4703
  %238 = or i24 %237, 1048576, !dbg !4703
  store i24 %238, i24* %15, align 8, !dbg !4703
  store i8 120, i8* %21, align 1, !dbg !4704
  br label %216, !dbg !4705

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4706
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !4709
  br label %363, !dbg !4710

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4711
  call void @llvm.dbg.value(metadata i32 %242, metadata !4473, metadata !DIExpression()), !dbg !4657
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4712
  call void @llvm.dbg.value(metadata i32 -1, metadata !4457, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i32 %29, metadata !4395, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i8* %192, metadata !4458, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8* %243, metadata !4459, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8 0, metadata !4460, metadata !DIExpression()), !dbg !4531
  %244 = icmp eq i8* %192, null, !dbg !4713
  br i1 %244, label %363, label %245, !dbg !4715, !llvm.loop !4527

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4684
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4478, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4531
  call void @llvm.dbg.value(metadata i32 0, metadata !4479, metadata !DIExpression()), !dbg !4531
  %250 = zext i8 %249 to i32, !dbg !4716
  %251 = icmp eq i8 %249, 0, !dbg !4718
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4478, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4531
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4478, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4531
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4531
  %252 = icmp sgt i32 %58, 0, !dbg !4719
  br i1 %252, label %253, label %302, !dbg !4720

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4684
  %255 = icmp eq i24 %254, 0, !dbg !4684
  %256 = ptrtoint i8* %248 to i32, !dbg !4721
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4478, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4531
  %257 = ptrtoint i8* %247 to i32, !dbg !4721
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4478, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4531
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4478, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4531
  %258 = xor i1 %251, true, !dbg !4722
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4478, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4531
  %259 = sext i1 %258 to i32, !dbg !4722
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4478, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4531
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4478, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4531
  %260 = lshr i24 %246, 19, !dbg !4723
  %261 = and i24 %260, 1, !dbg !4723
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4723
  %263 = zext i24 %262 to i32, !dbg !4723
  %264 = add i32 %257, %259, !dbg !4723
  %265 = add i32 %256, %263, !dbg !4723
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4478, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4531
  %266 = and i24 %246, 4194304, !dbg !4724
  %267 = icmp eq i24 %266, 0, !dbg !4724
  %268 = load i32, i32* %16, align 4, !dbg !4726
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4478, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4531
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4531
  %269 = load i32, i32* %17, align 8, !dbg !4727
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4727
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4531
  %271 = add i32 %264, %58, !dbg !4727
  %272 = add i32 %265, %268, !dbg !4727
  %273 = add i32 %272, %270, !dbg !4728
  %274 = sub i32 %271, %273, !dbg !4728
  call void @llvm.dbg.value(metadata i32 %274, metadata !4456, metadata !DIExpression()), !dbg !4531
  %275 = and i24 %246, 4, !dbg !4729
  %276 = icmp eq i24 %275, 0, !dbg !4729
  br i1 %276, label %277, label %302, !dbg !4730

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4480, metadata !DIExpression()), !dbg !4731
  %278 = and i24 %246, 64, !dbg !4732
  %279 = icmp eq i24 %278, 0, !dbg !4732
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4733
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4733
  %282 = select i1 %279, i32 32, i32 48, !dbg !4733
  br i1 %280, label %287, label %283, !dbg !4733

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !4734
  call void @llvm.dbg.value(metadata i32 %284, metadata !4485, metadata !DIExpression()), !dbg !4735
  %285 = icmp slt i32 %284, 0, !dbg !4736
  %286 = add i32 %29, 1, !dbg !4734
  call void @llvm.dbg.value(metadata i32 undef, metadata !4395, metadata !DIExpression()), !dbg !4517
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4531
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4521
  call void @llvm.dbg.value(metadata i32 %290, metadata !4395, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i8 undef, metadata !4480, metadata !DIExpression()), !dbg !4731
  call void @llvm.dbg.value(metadata i8 %288, metadata !4460, metadata !DIExpression()), !dbg !4531
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4738
  %292 = add i32 %291, -1, !dbg !4738
  br label %293, !dbg !4738

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4739
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4521
  call void @llvm.dbg.value(metadata i32 %295, metadata !4395, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i32 %294, metadata !4456, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i32 %294, metadata !4456, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4531
  %296 = icmp sgt i32 %294, 0, !dbg !4740
  br i1 %296, label %297, label %302, !dbg !4738

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %298, metadata !4456, metadata !DIExpression()), !dbg !4531
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !4742
  call void @llvm.dbg.value(metadata i32 %299, metadata !4491, metadata !DIExpression()), !dbg !4743
  %300 = icmp slt i32 %299, 0, !dbg !4744
  %301 = add i32 %295, 1, !dbg !4742
  call void @llvm.dbg.value(metadata i32 undef, metadata !4395, metadata !DIExpression()), !dbg !4517
  br i1 %300, label %361, label %293, !llvm.loop !4746

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4531
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4531
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4521
  call void @llvm.dbg.value(metadata i32 %305, metadata !4395, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i32 %304, metadata !4456, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8 %303, metadata !4460, metadata !DIExpression()), !dbg !4531
  %306 = icmp eq i8 %303, 0, !dbg !4748
  br i1 %306, label %312, label %307, !dbg !4749

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4750
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !4751
  call void @llvm.dbg.value(metadata i32 %309, metadata !4494, metadata !DIExpression()), !dbg !4752
  %310 = icmp slt i32 %309, 0, !dbg !4753
  %311 = add i32 %305, 1, !dbg !4751
  call void @llvm.dbg.value(metadata i32 undef, metadata !4395, metadata !DIExpression()), !dbg !4517
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4521
  call void @llvm.dbg.value(metadata i32 %313, metadata !4395, metadata !DIExpression()), !dbg !4517
  %314 = lshr i24 %246, 20, !dbg !4755
  %315 = lshr i24 %246, 19, !dbg !4756
  %316 = or i24 %314, %315, !dbg !4757
  %317 = and i24 %316, 1, !dbg !4757
  %318 = icmp eq i24 %317, 0, !dbg !4757
  br i1 %318, label %323, label %319, !dbg !4758

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4759
  call void @llvm.dbg.value(metadata i32 %320, metadata !4498, metadata !DIExpression()), !dbg !4760
  %321 = icmp slt i32 %320, 0, !dbg !4761
  %322 = add i32 %313, 1, !dbg !4759
  call void @llvm.dbg.value(metadata i32 undef, metadata !4395, metadata !DIExpression()), !dbg !4517
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4521
  call void @llvm.dbg.value(metadata i32 %324, metadata !4395, metadata !DIExpression()), !dbg !4517
  %325 = and i24 %246, 1048576, !dbg !4763
  %326 = icmp eq i24 %325, 0, !dbg !4763
  br i1 %326, label %333, label %327, !dbg !4764

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4765
  %329 = zext i8 %328 to i32, !dbg !4765
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !4765
  call void @llvm.dbg.value(metadata i32 %330, metadata !4504, metadata !DIExpression()), !dbg !4766
  %331 = icmp slt i32 %330, 0, !dbg !4767
  %332 = add i32 %324, 1, !dbg !4765
  call void @llvm.dbg.value(metadata i32 undef, metadata !4395, metadata !DIExpression()), !dbg !4517
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4521
  call void @llvm.dbg.value(metadata i32 %334, metadata !4395, metadata !DIExpression()), !dbg !4517
  %335 = load i32, i32* %16, align 4, !dbg !4769
  call void @llvm.dbg.value(metadata i32 %335, metadata !4479, metadata !DIExpression()), !dbg !4531
  br label %336, !dbg !4770

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4771
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4521
  call void @llvm.dbg.value(metadata i32 %338, metadata !4395, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i32 %337, metadata !4479, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4531
  %339 = icmp sgt i32 %337, 0, !dbg !4772
  br i1 %339, label %340, label %345, !dbg !4770

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %341, metadata !4479, metadata !DIExpression()), !dbg !4531
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4774
  call void @llvm.dbg.value(metadata i32 %342, metadata !4508, metadata !DIExpression()), !dbg !4775
  %343 = icmp slt i32 %342, 0, !dbg !4776
  %344 = add i32 %338, 1, !dbg !4774
  call void @llvm.dbg.value(metadata i32 undef, metadata !4395, metadata !DIExpression()), !dbg !4517
  br i1 %343, label %361, label %336, !llvm.loop !4778

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !4780
  call void @llvm.dbg.value(metadata i32 %346, metadata !4511, metadata !DIExpression()), !dbg !4781
  %347 = icmp slt i32 %346, 0, !dbg !4782
  call void @llvm.dbg.value(metadata i32 undef, metadata !4395, metadata !DIExpression()), !dbg !4517
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4780
  call void @llvm.dbg.value(metadata i32 %349, metadata !4395, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i32 %304, metadata !4456, metadata !DIExpression()), !dbg !4531
  %350 = icmp sgt i32 %304, 0, !dbg !4784
  br i1 %350, label %351, label %363, !dbg !4785

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4785
  %353 = add i32 %352, %338, !dbg !4785
  br label %354, !dbg !4785

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4395, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i32 %355, metadata !4456, metadata !DIExpression()), !dbg !4531
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %356, metadata !4513, metadata !DIExpression()), !dbg !4787
  %357 = icmp slt i32 %356, 0, !dbg !4788
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4790
  call void @llvm.dbg.value(metadata i32 undef, metadata !4395, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4517
  call void @llvm.dbg.value(metadata i32 %359, metadata !4456, metadata !DIExpression()), !dbg !4531
  %360 = icmp sgt i32 %355, 1, !dbg !4784
  br i1 %360, label %354, label %363, !dbg !4785, !llvm.loop !4791

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4395, metadata !DIExpression()), !dbg !4517
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4528
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4521
  call void @llvm.dbg.value(metadata i32 %364, metadata !4395, metadata !DIExpression()), !dbg !4517
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4528
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4517
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4793
  ret i32 %366, !dbg !4793
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4794 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4798, metadata !DIExpression()), !dbg !4800
  call void @llvm.dbg.value(metadata i8* %1, metadata !4799, metadata !DIExpression()), !dbg !4800
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4801
  store i24 0, i24* %3, align 4, !dbg !4801
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4801
  store i8 0, i8* %4, align 1, !dbg !4801
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4801
  store i32 0, i32* %5, align 4, !dbg !4801
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4801
  store i32 0, i32* %6, align 4, !dbg !4801
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4802
  call void @llvm.dbg.value(metadata i8* %7, metadata !4799, metadata !DIExpression()), !dbg !4800
  %8 = load i8, i8* %7, align 1, !dbg !4803
  %9 = icmp eq i8 %8, 37, !dbg !4805
  br i1 %9, label %10, label %12, !dbg !4806

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4807
  call void @llvm.dbg.value(metadata i8* %11, metadata !4799, metadata !DIExpression()), !dbg !4800
  store i8 37, i8* %4, align 1, !dbg !4809
  br label %18, !dbg !4810

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !4811
  call void @llvm.dbg.value(metadata i8* %13, metadata !4799, metadata !DIExpression()), !dbg !4800
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !4812
  call void @llvm.dbg.value(metadata i8* %14, metadata !4799, metadata !DIExpression()), !dbg !4800
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !4813
  call void @llvm.dbg.value(metadata i8* %15, metadata !4799, metadata !DIExpression()), !dbg !4800
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !4814
  call void @llvm.dbg.value(metadata i8* %16, metadata !4799, metadata !DIExpression()), !dbg !4800
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !4815
  call void @llvm.dbg.value(metadata i8* %17, metadata !4799, metadata !DIExpression()), !dbg !4800
  br label %18, !dbg !4816

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4800
  ret i8* %19, !dbg !4817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4818 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4822, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata i8* %1, metadata !4823, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata i8* %2, metadata !4824, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata i8* %3, metadata !4825, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata i32 0, metadata !4826, metadata !DIExpression()), !dbg !4829
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4830

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4831
  call void @llvm.dbg.value(metadata i32 %9, metadata !4826, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata i8* %8, metadata !4824, metadata !DIExpression()), !dbg !4829
  %10 = icmp ult i8* %8, %3, !dbg !4832
  br i1 %10, label %11, label %13, !dbg !4833

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4834
  br label %17, !dbg !4833

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4835

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4836
  %16 = icmp eq i8 %15, 0, !dbg !4835
  br i1 %16, label %24, label %17, !dbg !4830

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4834
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4837
  call void @llvm.dbg.value(metadata i8* %19, metadata !4824, metadata !DIExpression()), !dbg !4829
  %20 = zext i8 %18 to i32, !dbg !4838
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !4839
  call void @llvm.dbg.value(metadata i32 %21, metadata !4827, metadata !DIExpression()), !dbg !4840
  %22 = icmp slt i32 %21, 0, !dbg !4841
  %23 = add i32 %9, 1, !dbg !4843
  call void @llvm.dbg.value(metadata i32 undef, metadata !4826, metadata !DIExpression()), !dbg !4829
  br i1 %22, label %24, label %7, !llvm.loop !4844

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4829
  ret i32 %25, !dbg !4846
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4847 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4851, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4852, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8* %2, metadata !4853, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8* %3, metadata !4854, metadata !DIExpression()), !dbg !4861
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4862
  %6 = load i8, i8* %5, align 1, !dbg !4862
  %7 = zext i8 %6 to i32, !dbg !4863
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !4864
  %9 = icmp eq i32 %8, 0, !dbg !4864
  call void @llvm.dbg.value(metadata i1 %9, metadata !4855, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4861
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !4865
  call void @llvm.dbg.value(metadata i32 %10, metadata !4856, metadata !DIExpression()), !dbg !4861
  %11 = ptrtoint i8* %3 to i32, !dbg !4866
  %12 = ptrtoint i8* %2 to i32, !dbg !4866
  %13 = sub i32 %11, %12, !dbg !4866
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %14, metadata !4858, metadata !DIExpression()), !dbg !4861
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4868

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4861
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4851, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8* %18, metadata !4858, metadata !DIExpression()), !dbg !4861
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4869
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4870
  call void @llvm.dbg.value(metadata i32 %25, metadata !4859, metadata !DIExpression()), !dbg !4871
  %26 = icmp ult i32 %25, 10, !dbg !4872
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4873
  %28 = add i32 %27, %25, !dbg !4871
  %29 = trunc i32 %28 to i8, !dbg !4873
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4874
  call void @llvm.dbg.value(metadata i8* %30, metadata !4858, metadata !DIExpression()), !dbg !4861
  store i8 %29, i8* %30, align 1, !dbg !4875
  call void @llvm.dbg.value(metadata i64 %22, metadata !4851, metadata !DIExpression()), !dbg !4861
  %31 = icmp uge i64 %19, %15, !dbg !4876
  %32 = icmp ugt i8* %30, %2, !dbg !4877
  %33 = and i1 %31, %32, !dbg !4877
  br i1 %33, label %17, label %34, !dbg !4878, !llvm.loop !4879

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4881
  %36 = load i24, i24* %35, align 4, !dbg !4881
  %37 = and i24 %36, 32, !dbg !4881
  %38 = icmp eq i24 %37, 0, !dbg !4881
  br i1 %38, label %44, label %39, !dbg !4883

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4884

40:                                               ; preds = %39
  br label %41, !dbg !4886

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4890
  store i24 %43, i24* %35, align 4, !dbg !4890
  br label %44, !dbg !4891

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4891
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4892 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4898, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i8* %1, metadata !4899, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i32 %2, metadata !4900, metadata !DIExpression()), !dbg !4901
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4902
  %5 = load i24, i24* %4, align 4, !dbg !4902
  %6 = lshr i24 %5, 11, !dbg !4902
  %7 = and i24 %6, 15, !dbg !4902
  %8 = zext i24 %7 to i32, !dbg !4902
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4903

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4904
  store i32 %2, i32* %10, align 4, !dbg !4906
  br label %28, !dbg !4907

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4908
  store i8 %12, i8* %1, align 1, !dbg !4909
  br label %28, !dbg !4910

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4911
  %15 = bitcast i8* %1 to i16*, !dbg !4912
  store i16 %14, i16* %15, align 2, !dbg !4913
  br label %28, !dbg !4914

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4915
  store i32 %2, i32* %17, align 4, !dbg !4916
  br label %28, !dbg !4917

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4918
  %20 = bitcast i8* %1 to i64*, !dbg !4919
  store i64 %19, i64* %20, align 8, !dbg !4920
  br label %28, !dbg !4921

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4922
  %23 = bitcast i8* %1 to i64*, !dbg !4923
  store i64 %22, i64* %23, align 8, !dbg !4924
  br label %28, !dbg !4925

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4926
  store i32 %2, i32* %25, align 4, !dbg !4927
  br label %28, !dbg !4928

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4929
  store i32 %2, i32* %27, align 4, !dbg !4930
  br label %28, !dbg !4931

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4932
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4936, metadata !DIExpression()), !dbg !4937
  %2 = add i32 %0, -65, !dbg !4938
  %3 = icmp ult i32 %2, 26, !dbg !4939
  %4 = zext i1 %3 to i32, !dbg !4939
  ret i32 %4, !dbg !4940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4941 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4945, metadata !DIExpression()), !dbg !4946
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4947

2:                                                ; preds = %1
  br label %4, !dbg !4948

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4950

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4951
  ret i32 %5, !dbg !4952
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !4953 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4955, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.value(metadata i8* %1, metadata !4956, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.value(metadata i8 1, metadata !4957, metadata !DIExpression()), !dbg !4958
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4959

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4957, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.value(metadata i8* %5, metadata !4956, metadata !DIExpression()), !dbg !4958
  %6 = load i8, i8* %5, align 1, !dbg !4960
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4962

7:                                                ; preds = %4
  br label %11, !dbg !4963

8:                                                ; preds = %4
  br label %11, !dbg !4965

9:                                                ; preds = %4
  br label %11, !dbg !4966

10:                                               ; preds = %4
  br label %11, !dbg !4967

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4968
  %14 = or i24 %13, %12, !dbg !4968
  store i24 %14, i24* %3, align 4, !dbg !4968
  call void @llvm.dbg.value(metadata i8 poison, metadata !4957, metadata !DIExpression()), !dbg !4958
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4956, metadata !DIExpression()), !dbg !4958
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4957, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.value(metadata i8* %15, metadata !4956, metadata !DIExpression()), !dbg !4958
  %17 = load i24, i24* %3, align 4, !dbg !4969
  %18 = and i24 %17, 68, !dbg !4971
  %19 = icmp eq i24 %18, 68, !dbg !4971
  br i1 %19, label %20, label %22, !dbg !4971

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4972
  store i24 %21, i24* %3, align 4, !dbg !4972
  br label %22, !dbg !4974

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4975
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4976 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4978, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i8* %1, metadata !4979, metadata !DIExpression()), !dbg !4982
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4983
  %5 = load i24, i24* %4, align 4, !dbg !4984
  %6 = or i24 %5, 128, !dbg !4984
  store i24 %6, i24* %4, align 4, !dbg !4984
  call void @llvm.dbg.value(metadata i8* %1, metadata !4979, metadata !DIExpression()), !dbg !4982
  %7 = load i8, i8* %1, align 1, !dbg !4985
  %8 = icmp eq i8 %7, 42, !dbg !4987
  br i1 %8, label %9, label %12, !dbg !4988

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4989
  store i24 %10, i24* %4, align 4, !dbg !4989
  call void @llvm.dbg.value(metadata i8* %1, metadata !4979, metadata !DIExpression()), !dbg !4982
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4991
  call void @llvm.dbg.value(metadata i8* %11, metadata !4979, metadata !DIExpression()), !dbg !4982
  store i8* %11, i8** %3, align 4, !dbg !4991
  br label %29, !dbg !4992

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4980, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i8** %3, metadata !4979, metadata !DIExpression(DW_OP_deref)), !dbg !4982
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !4993
  call void @llvm.dbg.value(metadata i32 %13, metadata !4981, metadata !DIExpression()), !dbg !4982
  %14 = load i8*, i8** %3, align 4, !dbg !4994
  call void @llvm.dbg.value(metadata i8* %14, metadata !4979, metadata !DIExpression()), !dbg !4982
  %15 = icmp eq i8* %14, %1, !dbg !4996
  br i1 %15, label %29, label %16, !dbg !4997

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4998
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5000
  store i32 %13, i32* %18, align 4, !dbg !5001
  %19 = lshr i32 %13, 31, !dbg !5002
  %20 = lshr i24 %17, 1, !dbg !5003
  %21 = and i24 %20, 1, !dbg !5003
  %22 = zext i24 %21 to i32, !dbg !5003
  %23 = or i32 %19, %22, !dbg !5003
  %24 = trunc i32 %23 to i24, !dbg !5003
  %25 = shl nuw nsw i24 %24, 1, !dbg !5003
  %26 = and i24 %17, -131, !dbg !5003
  %27 = or i24 %26, 128, !dbg !5003
  %28 = or i24 %25, %27, !dbg !5003
  store i24 %28, i24* %4, align 4, !dbg !5003
  br label %29, !dbg !5004

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4982
  ret i8* %30, !dbg !5005
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5006 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5008, metadata !DIExpression()), !dbg !5011
  call void @llvm.dbg.value(metadata i8* %1, metadata !5009, metadata !DIExpression()), !dbg !5011
  %4 = load i8, i8* %1, align 1, !dbg !5012
  %5 = icmp eq i8 %4, 46, !dbg !5013
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5014
  %7 = load i24, i24* %6, align 4, !dbg !5015
  %8 = select i1 %5, i24 512, i24 0, !dbg !5015
  %9 = and i24 %7, -513, !dbg !5015
  %10 = or i24 %9, %8, !dbg !5015
  store i24 %10, i24* %6, align 4, !dbg !5015
  br i1 %5, label %11, label %32, !dbg !5016

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5009, metadata !DIExpression()), !dbg !5011
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5017
  call void @llvm.dbg.value(metadata i8* %12, metadata !5009, metadata !DIExpression()), !dbg !5011
  store i8* %12, i8** %3, align 4, !dbg !5017
  %13 = load i8, i8* %12, align 1, !dbg !5018
  %14 = icmp eq i8 %13, 42, !dbg !5020
  br i1 %14, label %15, label %18, !dbg !5021

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5022
  store i24 %16, i24* %6, align 4, !dbg !5022
  call void @llvm.dbg.value(metadata i8* %12, metadata !5009, metadata !DIExpression()), !dbg !5011
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5024
  call void @llvm.dbg.value(metadata i8* %17, metadata !5009, metadata !DIExpression()), !dbg !5011
  store i8* %17, i8** %3, align 4, !dbg !5024
  br label %32, !dbg !5025

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5009, metadata !DIExpression(DW_OP_deref)), !dbg !5011
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !5026
  call void @llvm.dbg.value(metadata i32 %19, metadata !5010, metadata !DIExpression()), !dbg !5011
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5027
  store i32 %19, i32* %20, align 4, !dbg !5028
  %21 = lshr i32 %19, 31, !dbg !5029
  %22 = load i24, i24* %6, align 4, !dbg !5030
  %23 = lshr i24 %22, 1, !dbg !5030
  %24 = and i24 %23, 1, !dbg !5030
  %25 = zext i24 %24 to i32, !dbg !5030
  %26 = or i32 %21, %25, !dbg !5030
  %27 = trunc i32 %26 to i24, !dbg !5030
  %28 = shl nuw nsw i24 %27, 1, !dbg !5030
  %29 = and i24 %22, -3, !dbg !5030
  %30 = or i24 %28, %29, !dbg !5030
  store i24 %30, i24* %6, align 4, !dbg !5030
  %31 = load i8*, i8** %3, align 4, !dbg !5031
  call void @llvm.dbg.value(metadata i8* %31, metadata !5009, metadata !DIExpression()), !dbg !5011
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5011
  ret i8* %33, !dbg !5032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5033 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5035, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8* %1, metadata !5036, metadata !DIExpression()), !dbg !5037
  %3 = load i8, i8* %1, align 1, !dbg !5038
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5039

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5040
  call void @llvm.dbg.value(metadata i8* %5, metadata !5036, metadata !DIExpression()), !dbg !5037
  %6 = load i8, i8* %5, align 1, !dbg !5043
  %7 = icmp eq i8 %6, 104, !dbg !5044
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5045
  %9 = load i24, i24* %8, align 4, !dbg !5045
  %10 = and i24 %9, -30721, !dbg !5045
  br i1 %7, label %11, label %14, !dbg !5046

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5047
  store i24 %12, i24* %8, align 4, !dbg !5047
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5049
  call void @llvm.dbg.value(metadata i8* %13, metadata !5036, metadata !DIExpression()), !dbg !5037
  br label %56, !dbg !5050

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5051
  store i24 %15, i24* %8, align 4, !dbg !5051
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5053
  call void @llvm.dbg.value(metadata i8* %17, metadata !5036, metadata !DIExpression()), !dbg !5037
  %18 = load i8, i8* %17, align 1, !dbg !5055
  %19 = icmp eq i8 %18, 108, !dbg !5056
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5057
  %21 = load i24, i24* %20, align 4, !dbg !5057
  %22 = and i24 %21, -30721, !dbg !5057
  br i1 %19, label %23, label %26, !dbg !5058

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5059
  store i24 %24, i24* %20, align 4, !dbg !5059
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5061
  call void @llvm.dbg.value(metadata i8* %25, metadata !5036, metadata !DIExpression()), !dbg !5037
  br label %56, !dbg !5062

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5063
  store i24 %27, i24* %20, align 4, !dbg !5063
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5065
  %30 = load i24, i24* %29, align 4, !dbg !5066
  %31 = and i24 %30, -30721, !dbg !5066
  %32 = or i24 %31, 10240, !dbg !5066
  store i24 %32, i24* %29, align 4, !dbg !5066
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5067
  call void @llvm.dbg.value(metadata i8* %33, metadata !5036, metadata !DIExpression()), !dbg !5037
  br label %56, !dbg !5068

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5069
  %36 = load i24, i24* %35, align 4, !dbg !5070
  %37 = and i24 %36, -30721, !dbg !5070
  %38 = or i24 %37, 12288, !dbg !5070
  store i24 %38, i24* %35, align 4, !dbg !5070
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5071
  call void @llvm.dbg.value(metadata i8* %39, metadata !5036, metadata !DIExpression()), !dbg !5037
  br label %56, !dbg !5072

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5073
  %42 = load i24, i24* %41, align 4, !dbg !5074
  %43 = and i24 %42, -30721, !dbg !5074
  %44 = or i24 %43, 14336, !dbg !5074
  store i24 %44, i24* %41, align 4, !dbg !5074
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5075
  call void @llvm.dbg.value(metadata i8* %45, metadata !5036, metadata !DIExpression()), !dbg !5037
  br label %56, !dbg !5076

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5077
  %48 = load i24, i24* %47, align 4, !dbg !5078
  %49 = and i24 %48, -30723, !dbg !5078
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5079
  call void @llvm.dbg.value(metadata i8* %50, metadata !5036, metadata !DIExpression()), !dbg !5037
  %51 = or i24 %49, 16386, !dbg !5080
  store i24 %51, i24* %47, align 4, !dbg !5080
  br label %56, !dbg !5081

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5082
  %54 = load i24, i24* %53, align 4, !dbg !5083
  %55 = and i24 %54, -30721, !dbg !5083
  store i24 %55, i24* %53, align 4, !dbg !5083
  br label %56, !dbg !5084

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5036, metadata !DIExpression()), !dbg !5037
  ret i8* %57, !dbg !5085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5086 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5088, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.value(metadata i8* %1, metadata !5089, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.value(metadata i8 0, metadata !5090, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.value(metadata i8* %1, metadata !5089, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5093
  %3 = load i8, i8* %1, align 1, !dbg !5094
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5095
  store i8 %3, i8* %4, align 1, !dbg !5096
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5097

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5098

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5099
  %9 = load i24, i24* %8, align 4, !dbg !5099
  %10 = and i24 %9, -458753, !dbg !5099
  %11 = or i24 %10, %7, !dbg !5099
  call void @llvm.dbg.label(metadata !5091), !dbg !5100
  %12 = and i24 %9, 30720, !dbg !5101
  %13 = icmp eq i24 %12, 16384, !dbg !5101
  %14 = zext i1 %13 to i24, !dbg !5103
  %15 = or i24 %11, %14, !dbg !5103
  %16 = icmp eq i8 %3, 99, !dbg !5104
  br i1 %16, label %17, label %43, !dbg !5106

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5107
  %19 = icmp ne i24 %18, 0, !dbg !5107
  call void @llvm.dbg.value(metadata i1 %19, metadata !5090, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5093
  br label %43, !dbg !5109

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5110
  %22 = load i24, i24* %21, align 4, !dbg !5111
  %23 = and i24 %22, -458753, !dbg !5111
  %24 = or i24 %23, 262144, !dbg !5111
  call void @llvm.dbg.value(metadata i8 1, metadata !5090, metadata !DIExpression()), !dbg !5093
  br label %43, !dbg !5112

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5115
  %27 = load i24, i24* %26, align 4, !dbg !5116
  %28 = and i24 %27, -458753, !dbg !5116
  %29 = or i24 %28, 196608, !dbg !5116
  %30 = and i24 %27, 30720, !dbg !5117
  %31 = icmp eq i24 %30, 16384, !dbg !5117
  br label %43, !dbg !5119

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5120
  %34 = load i24, i24* %33, align 4, !dbg !5121
  %35 = and i24 %34, -458753, !dbg !5121
  %36 = or i24 %35, 196608, !dbg !5121
  %37 = and i24 %34, 30720, !dbg !5122
  %38 = icmp ne i24 %37, 0, !dbg !5122
  br label %43, !dbg !5124

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5125
  %41 = load i24, i24* %40, align 4, !dbg !5126
  %42 = or i24 %41, 1, !dbg !5126
  br label %43, !dbg !5127

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5128
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5129
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5130
  call void @llvm.dbg.value(metadata i8* %48, metadata !5089, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.value(metadata i8 poison, metadata !5090, metadata !DIExpression()), !dbg !5093
  %49 = lshr i24 %44, 1, !dbg !5128
  %50 = and i24 %49, 1, !dbg !5128
  %51 = zext i24 %50 to i32, !dbg !5128
  %52 = or i32 %51, %47, !dbg !5128
  %53 = trunc i32 %52 to i24, !dbg !5128
  %54 = shl nuw nsw i24 %53, 1, !dbg !5128
  %55 = and i24 %44, -3, !dbg !5128
  %56 = or i24 %54, %55, !dbg !5128
  store i24 %56, i24* %46, align 4, !dbg !5128
  ret i8* %48, !dbg !5131
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5132 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5137, metadata !DIExpression()), !dbg !5140
  %2 = load i8*, i8** %0, align 4, !dbg !5141
  call void @llvm.dbg.value(metadata i8* %2, metadata !5138, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata i32 0, metadata !5139, metadata !DIExpression()), !dbg !5140
  %3 = load i8, i8* %2, align 1, !dbg !5142
  %4 = zext i8 %3 to i32, !dbg !5143
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !5144
  %6 = icmp eq i32 %5, 0, !dbg !5145
  br i1 %6, label %19, label %7, !dbg !5145

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5139, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata i8* %10, metadata !5138, metadata !DIExpression()), !dbg !5140
  %11 = mul i32 %9, 10, !dbg !5146
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5148
  call void @llvm.dbg.value(metadata i8* %12, metadata !5138, metadata !DIExpression()), !dbg !5140
  %13 = add i32 %11, -48, !dbg !5149
  %14 = add i32 %13, %8, !dbg !5150
  call void @llvm.dbg.value(metadata i32 %14, metadata !5139, metadata !DIExpression()), !dbg !5140
  %15 = load i8, i8* %12, align 1, !dbg !5142
  %16 = zext i8 %15 to i32, !dbg !5143
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !5144
  %18 = icmp eq i32 %17, 0, !dbg !5145
  br i1 %18, label %19, label %7, !dbg !5145, !llvm.loop !5151

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5140
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5140
  store i8* %20, i8** %0, align 4, !dbg !5153
  ret i32 %21, !dbg !5154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5157, metadata !DIExpression()), !dbg !5158
  %2 = add i32 %0, -48, !dbg !5159
  %3 = icmp ult i32 %2, 10, !dbg !5160
  %4 = zext i1 %3 to i32, !dbg !5160
  ret i32 %4, !dbg !5161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5162 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5164, !srcloc !5165
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5166, !srcloc !5167
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #25, !dbg !5168, !srcloc !5169
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5170, !srcloc !5171
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5172, !srcloc !5173
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5174, !srcloc !5175
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5176, !srcloc !5177
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5178, !srcloc !5179
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5180, !srcloc !5181
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5182, !srcloc !5183
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5184, !srcloc !5185
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5186, !srcloc !5187
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5188, !srcloc !5189
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5190, !srcloc !5191
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5192, !srcloc !5193
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5194, !srcloc !5195
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5196, !srcloc !5197
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5198, !srcloc !5199
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5200, !srcloc !5201
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5202, !srcloc !5203
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5204, !srcloc !5205
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5206, !srcloc !5207
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5208, !srcloc !5209
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5210, !srcloc !5211
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5212, !srcloc !5213
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5214, !srcloc !5215
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #25, !dbg !5216, !srcloc !5217
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5218, !srcloc !5219
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5220, !srcloc !5221
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5222, !srcloc !5223
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5224, !srcloc !5225
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5226, !srcloc !5227
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #25, !dbg !5228, !srcloc !5229
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #25, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #25, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #25, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #25, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #25, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #25, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #25, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #25, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETLINE\0A\09.equ\09CONFIG_CONSOLE_GETLINE,1\0A\09.type\09CONFIG_CONSOLE_GETLINE,%object", ""() #25, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !5726, !srcloc !5727
  ret void, !dbg !5728
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5729 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5731, metadata !DIExpression()), !dbg !5733
  tail call fastcc void @LL_FLASH_EnableInstCache() #27, !dbg !5734
  tail call fastcc void @LL_FLASH_EnableDataCache() #27, !dbg !5735
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !5736, !srcloc !5745
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5736
  call void @llvm.dbg.value(metadata i32 %3, metadata !5742, metadata !DIExpression()) #25, !dbg !5746
  call void @llvm.dbg.value(metadata i32 undef, metadata !5743, metadata !DIExpression()) #25, !dbg !5746
  call void @llvm.dbg.value(metadata i32 %3, metadata !5732, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata i32 %3, metadata !5747, metadata !DIExpression()) #25, !dbg !5752
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !5754, !srcloc !5755
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5756
  ret i32 0, !dbg !5757
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5758 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5760
  %2 = or i32 %1, 512, !dbg !5760
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5760
  ret void, !dbg !5761
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5762 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5763
  %2 = or i32 %1, 1024, !dbg !5763
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5763
  ret void, !dbg !5764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5767, metadata !DIExpression()), !dbg !5768
  ret i32 0, !dbg !5769
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @console_getline() local_unnamed_addr #1 !dbg !341 {
  %1 = load %struct.console_input*, %struct.console_input** @console_getline.cmd, align 4, !dbg !5770
  %2 = icmp eq %struct.console_input* %1, null, !dbg !5772
  br i1 %2, label %5, label %3, !dbg !5773

3:                                                ; preds = %0
  %4 = bitcast %struct.console_input* %1 to i8*, !dbg !5774
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull %4) #26, !dbg !5774
  br label %5, !dbg !5777

5:                                                ; preds = %3, %0
  %6 = tail call fastcc i8* @k_queue_get() #27, !dbg !5778
  call void @llvm.dbg.value(metadata i8* %6, metadata !346, metadata !DIExpression()), !dbg !5779
  store i8* %6, i8** bitcast (%struct.console_input** @console_getline.cmd to i8**), align 4, !dbg !5780
  %7 = getelementptr inbounds i8, i8* %6, i32 5, !dbg !5781
  ret i8* %7, !dbg !5782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !5783 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !5793, metadata !DIExpression()), !dbg !5794
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), metadata !5792, metadata !DIExpression()), !dbg !5794
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5795, !srcloc !5797
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), [1 x i64] [i64 -1]) #26, !dbg !5798
  ret i8* %1, !dbg !5799
}

; Function Attrs: noinline nounwind optsize
define dso_local void @console_getline_init() local_unnamed_addr #1 !dbg !5800 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5802, metadata !DIExpression()), !dbg !5803
  call void @llvm.dbg.value(metadata i32 0, metadata !5802, metadata !DIExpression()), !dbg !5803
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast ([2 x %struct.console_input]* @line_bufs to i8*)) #26, !dbg !5804
  call void @llvm.dbg.value(metadata i32 0, metadata !5802, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5803
  call void @llvm.dbg.value(metadata i32 0, metadata !5802, metadata !DIExpression()), !dbg !5803
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast (%struct.console_input* getelementptr inbounds ([2 x %struct.console_input], [2 x %struct.console_input]* @line_bufs, i32 0, i32 1) to i8*)) #26, !dbg !5804
  call void @llvm.dbg.value(metadata i32 0, metadata !5802, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5803
  tail call void @uart_register_input(%struct.k_fifo* noundef nonnull @free_queue, %struct.k_fifo* noundef nonnull @used_queue, i8 (i8*, i8)* noundef null) #26, !dbg !5809
  ret void, !dbg !5810
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5860, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5861, metadata !DIExpression()), !dbg !5862
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !5863
  ret void, !dbg !5864
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5865 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5882, metadata !DIExpression()), !dbg !5885
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5883, metadata !DIExpression()), !dbg !5885
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5886
  %4 = load i32, i32* %3, align 4, !dbg !5886
  call void @llvm.dbg.value(metadata i32 %4, metadata !5884, metadata !DIExpression()), !dbg !5885
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !5887
  ret void, !dbg !5888
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !5889 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5893, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata i8* %0, metadata !5894, metadata !DIExpression()), !dbg !5896
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5897
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !5897
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5895, metadata !DIExpression()), !dbg !5898
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5898
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5899
  %5 = bitcast i8* %4 to i32*, !dbg !5899
  %6 = load i32, i32* %5, align 4, !dbg !5899
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5900
  store i32 %6, i32* %7, align 4, !dbg !5901
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !5902
  unreachable, !dbg !5903
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5907, metadata !DIExpression()), !dbg !5908
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !5909
  ret void, !dbg !5910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5915, metadata !DIExpression()), !dbg !5916
  %2 = icmp sgt i32 %0, -1, !dbg !5917
  br i1 %2, label %3, label %8, !dbg !5919

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5920, !srcloc !5922
  %4 = and i32 %0, 31, !dbg !5923
  %5 = shl nuw i32 1, %4, !dbg !5924
  %6 = lshr i32 %0, 5, !dbg !5925
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5926
  store volatile i32 %5, i32* %7, align 4, !dbg !5927
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5928, !srcloc !5929
  br label %8, !dbg !5930

8:                                                ; preds = %3, %1
  ret void, !dbg !5931
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5934, metadata !DIExpression()), !dbg !5935
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !5936
  ret void, !dbg !5937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5940, metadata !DIExpression()), !dbg !5941
  %2 = icmp sgt i32 %0, -1, !dbg !5942
  br i1 %2, label %3, label %8, !dbg !5944

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5945
  %5 = shl nuw i32 1, %4, !dbg !5947
  %6 = lshr i32 %0, 5, !dbg !5948
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5949
  store volatile i32 %5, i32* %7, align 4, !dbg !5950
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !5951, !srcloc !5955
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !5956, !srcloc !5959
  br label %8, !dbg !5960

8:                                                ; preds = %3, %1
  ret void, !dbg !5961
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !5962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5966, metadata !DIExpression()), !dbg !5967
  %2 = lshr i32 %0, 5, !dbg !5968
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5969
  %4 = load volatile i32, i32* %3, align 4, !dbg !5969
  %5 = and i32 %0, 31, !dbg !5970
  %6 = shl nuw i32 1, %5, !dbg !5970
  %7 = and i32 %4, %6, !dbg !5971
  ret i32 %7, !dbg !5972
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !5973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5977, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i32 %1, metadata !5978, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i32 %2, metadata !5979, metadata !DIExpression()), !dbg !5980
  %4 = add i32 %1, 1, !dbg !5981
  call void @llvm.dbg.value(metadata i32 %4, metadata !5978, metadata !DIExpression()), !dbg !5980
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !5984
  ret void, !dbg !5985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5990, metadata !DIExpression()), !dbg !5992
  call void @llvm.dbg.value(metadata i32 %1, metadata !5991, metadata !DIExpression()), !dbg !5992
  %3 = trunc i32 %1 to i8, !dbg !5993
  %4 = shl i8 %3, 4, !dbg !5993
  %5 = and i32 %0, 15, !dbg !5995
  %6 = add nsw i32 %5, -4, !dbg !5995
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5995
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5995
  %9 = icmp slt i32 %0, 0, !dbg !5995
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5995
  store volatile i8 %4, i8* %10, align 1, !dbg !5993
  ret void, !dbg !5996
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5997 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5999, metadata !DIExpression()), !dbg !6000
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !6001
  ret void, !dbg !6002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6003 {
  tail call void @z_SysNmiOnReset() #26, !dbg !6005
  tail call void @z_arm_int_exit() #26, !dbg !6006
  ret void, !dbg !6007
}

; Function Attrs: optsize
declare !dbg !6008 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6009 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6011 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !6013
  tail call fastcc void @z_arm_floating_point_init() #27, !dbg !6014
  tail call void @z_bss_zero() #26, !dbg !6015
  tail call void @z_data_copy() #26, !dbg !6016
  tail call void @z_arm_interrupt_init() #26, !dbg !6017
  tail call void @z_cstart() #29, !dbg !6018
  unreachable, !dbg !6018
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6019 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6020
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6021, !srcloc !6024
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6025, !srcloc !6028
  ret void, !dbg !6029
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6030 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6031
  %2 = and i32 %1, -15728641, !dbg !6031
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6031
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6032, !srcloc !6039
  call void @llvm.dbg.value(metadata i32 %3, metadata !6037, metadata !DIExpression()) #25, !dbg !6040
  %4 = and i32 %3, -5, !dbg !6041
  call void @llvm.dbg.value(metadata i32 %4, metadata !6042, metadata !DIExpression()) #25, !dbg !6047
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6049, !srcloc !6050
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6051, !srcloc !6028
  ret void, !dbg !6053
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6057, metadata !DIExpression()), !dbg !6058
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6059
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6060
  store i32 %0, i32* %3, align 4, !dbg !6061
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6062
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6063
  store i32 %4, i32* %5, align 4, !dbg !6064
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6065
  %7 = or i32 %6, 268435456, !dbg !6065
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6065
  call void @llvm.dbg.value(metadata i32 0, metadata !6066, metadata !DIExpression()) #25, !dbg !6069
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6071, !srcloc !6072
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6073
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6074
  %10 = load i32, i32* %9, align 4, !dbg !6074
  ret i32 %10, !dbg !6075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6076 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6186, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6187, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i8* %2, metadata !6188, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6189, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i8* %4, metadata !6190, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i8* %5, metadata !6191, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i8* %6, metadata !6192, metadata !DIExpression()), !dbg !6194
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6195
  call void @llvm.dbg.value(metadata i8* %8, metadata !6193, metadata !DIExpression()), !dbg !6194
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6196
  %10 = bitcast i8* %9 to i32*, !dbg !6196
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6197
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6198
  %12 = bitcast i8* %8 to i32*, !dbg !6199
  store i32 %11, i32* %12, align 4, !dbg !6200
  %13 = ptrtoint i8* %4 to i32, !dbg !6201
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6202
  %15 = bitcast i8* %14 to i32*, !dbg !6202
  store i32 %13, i32* %15, align 4, !dbg !6203
  %16 = ptrtoint i8* %5 to i32, !dbg !6204
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6205
  %18 = bitcast i8* %17 to i32*, !dbg !6205
  store i32 %16, i32* %18, align 4, !dbg !6206
  %19 = ptrtoint i8* %6 to i32, !dbg !6207
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6208
  %21 = bitcast i8* %20 to i32*, !dbg !6208
  store i32 %19, i32* %21, align 4, !dbg !6209
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6210
  %23 = bitcast i8* %22 to i32*, !dbg !6210
  store i32 16777216, i32* %23, align 4, !dbg !6211
  %24 = ptrtoint i8* %8 to i32, !dbg !6212
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6213
  store i32 %24, i32* %25, align 8, !dbg !6214
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6215
  store i32 0, i32* %26, align 4, !dbg !6216
  ret void, !dbg !6217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6223, metadata !DIExpression()), !dbg !6229
  call void @llvm.dbg.value(metadata i32 %1, metadata !6224, metadata !DIExpression()), !dbg !6229
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6230
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6225, metadata !DIExpression()), !dbg !6229
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6231
  br i1 %4, label %19, label %5, !dbg !6233

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6228, metadata !DIExpression()), !dbg !6229
  %6 = icmp eq i32 %0, -22, !dbg !6234
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6234
  %8 = load i32, i32* %7, align 4, !dbg !6234
  br i1 %6, label %16, label %9, !dbg !6236

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6234
  %11 = icmp ule i32 %10, %0, !dbg !6234
  %12 = icmp ugt i32 %8, %0, !dbg !6234
  %13 = and i1 %12, %11, !dbg !6234
  %14 = icmp ugt i32 %8, %1, !dbg !6234
  %15 = and i1 %14, %13, !dbg !6234
  br i1 %15, label %18, label %19, !dbg !6234

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6234
  br i1 %17, label %18, label %19, !dbg !6236

18:                                               ; preds = %9, %16
  br label %19, !dbg !6237

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6229
  ret i32 %20, !dbg !6239
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !6240 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6244, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i8* %1, metadata !6245, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6246, metadata !DIExpression()), !dbg !6247
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6248
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !6249
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6250, !srcloc !6251
  unreachable, !dbg !6252
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6253 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6271, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.value(metadata i32 %1, metadata !6272, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.value(metadata i32 %2, metadata !6273, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6274, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.value(metadata i32 0, metadata !6275, metadata !DIExpression()), !dbg !6281
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6282
  %9 = and i32 %8, 511, !dbg !6283
  call void @llvm.dbg.value(metadata i32 %9, metadata !6276, metadata !DIExpression()), !dbg !6281
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6284
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6284
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6285
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6285
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6280, metadata !DIExpression()), !dbg !6286
  call void @llvm.dbg.value(metadata i32 0, metadata !6287, metadata !DIExpression()) #25, !dbg !6290
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6292, !srcloc !6293
  call void @llvm.dbg.value(metadata i8* %6, metadata !6278, metadata !DIExpression(DW_OP_deref)), !dbg !6281
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !6294
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6279, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.value(metadata i8* %5, metadata !6277, metadata !DIExpression(DW_OP_deref)), !dbg !6281
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #27, !dbg !6295
  call void @llvm.dbg.value(metadata i32 %12, metadata !6275, metadata !DIExpression()), !dbg !6281
  %13 = load i8, i8* %5, align 1, !dbg !6296, !range !6298
  call void @llvm.dbg.value(metadata i8 %13, metadata !6277, metadata !DIExpression()), !dbg !6281
  %14 = icmp eq i8 %13, 0, !dbg !6296
  br i1 %14, label %15, label %32, !dbg !6299

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6300
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #26, !dbg !6301
  %18 = load i8, i8* %6, align 1, !dbg !6302, !range !6298
  call void @llvm.dbg.value(metadata i8 %18, metadata !6278, metadata !DIExpression()), !dbg !6281
  %19 = icmp eq i8 %18, 0, !dbg !6302
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6304
  %21 = load i32, i32* %20, align 4, !dbg !6304
  br i1 %19, label %27, label %22, !dbg !6305

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6306
  %24 = icmp eq i32 %23, 0, !dbg !6309
  br i1 %24, label %25, label %31, !dbg !6310

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6311
  br label %29, !dbg !6313

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6314
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6304
  br label %31, !dbg !6316

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #26, !dbg !6316
  br label %32, !dbg !6317

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6317
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6317
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6317
  ret void, !dbg !6317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6323, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata i32 %1, metadata !6324, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata i32 %2, metadata !6325, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata i8* %3, metadata !6326, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata i8 0, metadata !6327, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6328, metadata !DIExpression()), !dbg !6329
  store i8 0, i8* %3, align 1, !dbg !6330
  %5 = icmp ult i32 %2, -16777216, !dbg !6331
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6333
  br i1 %8, label %16, label %9, !dbg !6333

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6334
  %11 = icmp eq i32 %10, 0, !dbg !6334
  br i1 %11, label %12, label %13, !dbg !6336

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6328, metadata !DIExpression()), !dbg !6329
  store i8 1, i8* %3, align 1, !dbg !6339
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6329
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6328, metadata !DIExpression()), !dbg !6329
  br label %16, !dbg !6342

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6329
  ret %struct.__esf* %17, !dbg !6343
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6344 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6348, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata i32 %1, metadata !6349, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata i8* %2, metadata !6350, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata i32 0, metadata !6351, metadata !DIExpression()), !dbg !6352
  store i8 0, i8* %2, align 1, !dbg !6353
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6354

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !6355
  call void @llvm.dbg.value(metadata i32 %5, metadata !6351, metadata !DIExpression()), !dbg !6352
  br label %11, !dbg !6357

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6358
  call void @llvm.dbg.value(metadata i32 %7, metadata !6351, metadata !DIExpression()), !dbg !6352
  br label %11, !dbg !6359

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6360
  call void @llvm.dbg.value(metadata i32 0, metadata !6351, metadata !DIExpression()), !dbg !6352
  br label %11, !dbg !6361

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !6362
  call void @llvm.dbg.value(metadata i32 0, metadata !6351, metadata !DIExpression()), !dbg !6352
  br label %11, !dbg !6363

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !6364
  br label %11, !dbg !6365

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6367 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6371, metadata !DIExpression()), !dbg !6374
  call void @llvm.dbg.value(metadata i8* %1, metadata !6372, metadata !DIExpression()), !dbg !6374
  call void @llvm.dbg.value(metadata i32 0, metadata !6373, metadata !DIExpression()), !dbg !6374
  store i8 0, i8* %1, align 1, !dbg !6375
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6376
  %4 = and i32 %3, 2, !dbg !6378
  %5 = icmp eq i32 %4, 0, !dbg !6379
  br i1 %5, label %6, label %33, !dbg !6380

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6381
  %8 = icmp sgt i32 %7, -1, !dbg !6383
  br i1 %8, label %9, label %33, !dbg !6384

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6385
  %11 = and i32 %10, 1073741824, !dbg !6387
  %12 = icmp eq i32 %11, 0, !dbg !6388
  br i1 %12, label %33, label %13, !dbg !6389

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !6390
  br i1 %14, label %15, label %18, !dbg !6393

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6394
  %17 = load i32, i32* %16, align 4, !dbg !6394
  call void @llvm.dbg.value(metadata i32 %17, metadata !6373, metadata !DIExpression()), !dbg !6374
  br label %33, !dbg !6396

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6397
  %20 = and i32 %19, 255, !dbg !6399
  %21 = icmp eq i32 %20, 0, !dbg !6400
  br i1 %21, label %24, label %22, !dbg !6401

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6402
  call void @llvm.dbg.value(metadata i32 %23, metadata !6373, metadata !DIExpression()), !dbg !6374
  br label %33, !dbg !6404

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6405
  %26 = and i32 %25, 65280, !dbg !6407
  %27 = icmp eq i32 %26, 0, !dbg !6408
  br i1 %27, label %29, label %28, !dbg !6409

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6410
  call void @llvm.dbg.value(metadata i32 0, metadata !6373, metadata !DIExpression()), !dbg !6374
  br label %33, !dbg !6412

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6413
  %31 = icmp ult i32 %30, 65536, !dbg !6415
  br i1 %31, label %33, label %32, !dbg !6416

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #27, !dbg !6417
  call void @llvm.dbg.value(metadata i32 0, metadata !6373, metadata !DIExpression()), !dbg !6374
  br label %33, !dbg !6419

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6374
  call void @llvm.dbg.value(metadata i32 %34, metadata !6373, metadata !DIExpression()), !dbg !6374
  ret i32 %34, !dbg !6420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6421 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6423, metadata !DIExpression()), !dbg !6436
  call void @llvm.dbg.value(metadata i32 %1, metadata !6424, metadata !DIExpression()), !dbg !6436
  call void @llvm.dbg.value(metadata i8* %2, metadata !6425, metadata !DIExpression()), !dbg !6436
  call void @llvm.dbg.value(metadata i32 0, metadata !6426, metadata !DIExpression()), !dbg !6436
  call void @llvm.dbg.value(metadata i32 -22, metadata !6427, metadata !DIExpression()), !dbg !6436
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6437
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6439
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6441
  %7 = and i32 %6, 2, !dbg !6442
  %8 = icmp eq i32 %7, 0, !dbg !6443
  br i1 %8, label %19, label %9, !dbg !6444

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6445
  call void @llvm.dbg.value(metadata i32 %10, metadata !6428, metadata !DIExpression()), !dbg !6446
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6447
  %12 = and i32 %11, 128, !dbg !6449
  %13 = icmp eq i32 %12, 0, !dbg !6450
  br i1 %13, label %19, label %14, !dbg !6451

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6427, metadata !DIExpression()), !dbg !6436
  %15 = icmp eq i32 %1, 0, !dbg !6452
  br i1 %15, label %19, label %16, !dbg !6455

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6456
  %18 = and i32 %17, -129, !dbg !6456
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6456
  br label %19, !dbg !6458

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6436
  call void @llvm.dbg.value(metadata i32 %20, metadata !6427, metadata !DIExpression()), !dbg !6436
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6459
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6461
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6463
  %24 = and i32 %23, 16, !dbg !6464
  %25 = icmp eq i32 %24, 0, !dbg !6464
  br i1 %25, label %26, label %30, !dbg !6465

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6466
  %28 = and i32 %27, 2, !dbg !6467
  %29 = icmp eq i32 %28, 0, !dbg !6467
  br i1 %29, label %39, label %30, !dbg !6468

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6469
  %32 = and i32 %31, 2048, !dbg !6470
  %33 = icmp eq i32 %32, 0, !dbg !6470
  br i1 %33, label %39, label %34, !dbg !6471

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6472
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #26, !dbg !6473
  call void @llvm.dbg.value(metadata i32 %36, metadata !6431, metadata !DIExpression()), !dbg !6474
  %37 = icmp eq i32 %36, 0, !dbg !6475
  br i1 %37, label %39, label %38, !dbg !6477

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6478, metadata !DIExpression()) #25, !dbg !6481
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6484, !srcloc !6485
  call void @llvm.dbg.value(metadata i32 2, metadata !6426, metadata !DIExpression()), !dbg !6436
  br label %39, !dbg !6486

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6436
  call void @llvm.dbg.value(metadata i32 %40, metadata !6426, metadata !DIExpression()), !dbg !6436
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6487
  %42 = and i32 %41, 32, !dbg !6489
  %43 = icmp eq i32 %42, 0, !dbg !6490
  br i1 %43, label %47, label %44, !dbg !6491

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6492
  %46 = and i32 %45, -8193, !dbg !6492
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6492
  br label %47, !dbg !6494

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6495
  %49 = or i32 %48, 255, !dbg !6495
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6495
  store i8 0, i8* %2, align 1, !dbg !6496
  ret i32 %40, !dbg !6497
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6498 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6502, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 %0, metadata !6503, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i8* %1, metadata !6504, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 0, metadata !6505, metadata !DIExpression()), !dbg !6509
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6510
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6512
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6514
  %6 = and i32 %5, 512, !dbg !6515
  %7 = icmp eq i32 %6, 0, !dbg !6515
  br i1 %7, label %18, label %8, !dbg !6516

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6517
  call void @llvm.dbg.value(metadata i32 %9, metadata !6506, metadata !DIExpression()), !dbg !6518
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6519
  %11 = and i32 %10, 32768, !dbg !6521
  %12 = icmp ne i32 %11, 0, !dbg !6522
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6523
  br i1 %14, label %15, label %18, !dbg !6523

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6524
  %17 = and i32 %16, -32769, !dbg !6524
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6524
  br label %18, !dbg !6528

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6529
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6531
  %21 = and i32 %20, 256, !dbg !6533
  %22 = icmp eq i32 %21, 0, !dbg !6534
  br i1 %22, label %23, label %25, !dbg !6535

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6536
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6538
  %27 = or i32 %26, 65280, !dbg !6538
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6538
  store i8 0, i8* %1, align 1, !dbg !6539
  ret void, !dbg !6540
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6541 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6547, metadata !DIExpression()), !dbg !6549
  call void @llvm.dbg.value(metadata i32 0, metadata !6548, metadata !DIExpression()), !dbg !6549
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6550
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6552
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6554
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6556
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6558
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6560
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6562
  %8 = or i32 %7, -65536, !dbg !6562
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6562
  ret void, !dbg !6563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6564 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6568, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata i8* %0, metadata !6569, metadata !DIExpression()), !dbg !6570
  store i8 0, i8* %0, align 1, !dbg !6571
  ret void, !dbg !6572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6573 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6577, metadata !DIExpression()), !dbg !6580
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6581
  %3 = load i32, i32* %2, align 4, !dbg !6581
  %4 = inttoptr i32 %3 to i16*, !dbg !6582
  call void @llvm.dbg.value(metadata i16* %4, metadata !6578, metadata !DIExpression()), !dbg !6580
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6583
  %6 = or i32 %5, 256, !dbg !6583
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6583
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6584, !srcloc !6587
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6588, !srcloc !6591
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6592
  %8 = load i16, i16* %7, align 2, !dbg !6593
  call void @llvm.dbg.value(metadata i16 %8, metadata !6579, metadata !DIExpression()), !dbg !6580
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6594
  %10 = and i32 %9, -257, !dbg !6594
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6594
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6595, !srcloc !6587
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6597, !srcloc !6591
  %11 = icmp eq i16 %8, -8446, !dbg !6599
  ret i1 %11, !dbg !6601
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6602 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6603
  %2 = or i32 %1, 16, !dbg !6603
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6603
  ret void, !dbg !6604
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6605 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6608, metadata !DIExpression()), !dbg !6609
  br label %1, !dbg !6610

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6608, metadata !DIExpression()), !dbg !6609
  tail call fastcc void @__NVIC_SetPriority.16(i32 noundef %2) #27, !dbg !6612
  %3 = add nuw nsw i32 %2, 1, !dbg !6615
  call void @llvm.dbg.value(metadata i32 %3, metadata !6608, metadata !DIExpression()), !dbg !6609
  %4 = icmp eq i32 %3, 82, !dbg !6616
  br i1 %4, label %5, label %1, !dbg !6610, !llvm.loop !6617

5:                                                ; preds = %1
  ret void, !dbg !6619
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.16(i32 noundef %0) unnamed_addr #15 !dbg !6620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6622, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.value(metadata i32 1, metadata !6623, metadata !DIExpression()), !dbg !6624
  %2 = and i32 %0, 15, !dbg !6625
  %3 = add nsw i32 %2, -4, !dbg !6625
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6625
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6625
  %6 = icmp slt i32 %0, 0, !dbg !6625
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6625
  store volatile i8 16, i8* %7, align 1, !dbg !6626
  ret void, !dbg !6628
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6629 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6735, metadata !DIExpression()), !dbg !6736
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6737
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6739
  br i1 %3, label %4, label %12, !dbg !6740

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !6741, !srcloc !6753
  call void @llvm.dbg.value(metadata i32 %5, metadata !6744, metadata !DIExpression()) #25, !dbg !6754
  %6 = icmp eq i32 %5, 0, !dbg !6755
  br i1 %6, label %12, label %7, !dbg !6756

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6757
  %9 = or i32 %8, 268435456, !dbg !6757
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6757
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6759
  %11 = and i32 %10, -32769, !dbg !6759
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6759
  br label %12, !dbg !6760

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !6761
  ret void, !dbg !6762
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6763 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !6764
  ret void, !dbg !6765
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !373 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !488, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i8 0, metadata !489, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 64, metadata !491, metadata !DIExpression()), !dbg !6766
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6767
  %3 = load i32, i32* %2, align 4, !dbg !6767
  %4 = add i32 %3, -64, !dbg !6769
  call void @llvm.dbg.value(metadata i32 %4, metadata !490, metadata !DIExpression()), !dbg !6766
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6770
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6771
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6772
  call void @llvm.dbg.value(metadata i8 1, metadata !489, metadata !DIExpression()), !dbg !6766
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !6773
  ret void, !dbg !6774
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6775 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6776
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6777, !srcloc !6780
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6781, !srcloc !6784
  ret void, !dbg !6785
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6786 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !6787, !srcloc !6790
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6791
  ret void, !dbg !6792
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !6793 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6808, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8 %1, metadata !6809, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %2, metadata !6810, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %3, metadata !6811, metadata !DIExpression()), !dbg !6812
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !6813
  ret void, !dbg !6815
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6816 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6821, metadata !DIExpression()), !dbg !6826
  call void @llvm.dbg.value(metadata i8 %1, metadata !6822, metadata !DIExpression()), !dbg !6826
  call void @llvm.dbg.value(metadata i32 undef, metadata !6823, metadata !DIExpression()), !dbg !6826
  call void @llvm.dbg.value(metadata i32 undef, metadata !6824, metadata !DIExpression()), !dbg !6826
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6827
  call void @llvm.dbg.value(metadata i8 %3, metadata !6825, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6826
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !6828
  call void @llvm.dbg.value(metadata i32 %4, metadata !6825, metadata !DIExpression()), !dbg !6826
  %5 = trunc i32 %4 to i8, !dbg !6829
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6830
  ret void, !dbg !6831
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !6832 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6836, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata i8 %1, metadata !6837, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata i8 %2, metadata !6838, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata i1 %3, metadata !6839, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6842
  %5 = zext i8 %2 to i32, !dbg !6843
  call void @llvm.dbg.value(metadata i32 %5, metadata !6841, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata i32 0, metadata !6840, metadata !DIExpression()), !dbg !6842
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6841, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata i32 0, metadata !6840, metadata !DIExpression()), !dbg !6842
  %7 = icmp eq i8 %1, 0, !dbg !6844
  br i1 %7, label %29, label %8, !dbg !6847

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6841, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata i32 %10, metadata !6840, metadata !DIExpression()), !dbg !6842
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6848
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6851
  %13 = load i32, i32* %12, align 4, !dbg !6851
  %14 = icmp eq i32 %13, 0, !dbg !6852
  br i1 %14, label %25, label %15, !dbg !6853

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6854

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !6856
  %18 = icmp eq i32 %17, 0, !dbg !6856
  br i1 %18, label %29, label %19, !dbg !6857

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6858
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !6859
  call void @llvm.dbg.value(metadata i32 %21, metadata !6841, metadata !DIExpression()), !dbg !6842
  %22 = icmp eq i32 %21, -22, !dbg !6860
  br i1 %22, label %29, label %23, !dbg !6862

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6863
  call void @llvm.dbg.value(metadata i32 %24, metadata !6841, metadata !DIExpression()), !dbg !6842
  br label %25, !dbg !6864

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6842
  call void @llvm.dbg.value(metadata i32 %26, metadata !6841, metadata !DIExpression()), !dbg !6842
  %27 = add nuw nsw i32 %10, 1, !dbg !6865
  call void @llvm.dbg.value(metadata i32 %27, metadata !6840, metadata !DIExpression()), !dbg !6842
  %28 = icmp eq i32 %27, %6, !dbg !6844
  br i1 %28, label %29, label %8, !dbg !6847, !llvm.loop !6866

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6842
  ret i32 %30, !dbg !6868
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !6869 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6873, metadata !DIExpression()), !dbg !6875
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6876
  %3 = load i32, i32* %2, align 4, !dbg !6876
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6877, !range !3813
  %5 = icmp ult i32 %4, 2, !dbg !6877
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6878
  br i1 %7, label %8, label %15, !dbg !6878

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6879
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6880
  %11 = load i32, i32* %10, align 4, !dbg !6880
  %12 = and i32 %11, %9, !dbg !6881
  %13 = icmp eq i32 %12, 0, !dbg !6882
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6874, metadata !DIExpression()), !dbg !6875
  ret i32 %16, !dbg !6883
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !6884 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6888, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6889, metadata !DIExpression()), !dbg !6891
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6892
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6892
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6890, metadata !DIExpression()), !dbg !6893
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6894
  %6 = load i32, i32* %5, align 4, !dbg !6894
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6895
  store i32 %6, i32* %7, align 4, !dbg !6896
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6897
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6898
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6899
  %11 = load i32, i32* %10, align 4, !dbg !6899
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #27, !dbg !6900
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !6901
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6902
  ret i32 %12, !dbg !6903
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6904 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !6911, metadata !DIExpression()), !dbg !6915
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !6912, metadata !DIExpression()), !dbg !6915
  call void @llvm.dbg.value(metadata i32 undef, metadata !6913, metadata !DIExpression()), !dbg !6915
  call void @llvm.dbg.value(metadata i32 %2, metadata !6914, metadata !DIExpression()), !dbg !6915
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !6916
  %5 = load i32, i32* %4, align 4, !dbg !6916
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !6917
  %7 = or i32 %6, %5, !dbg !6918
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !6919
  store i32 %7, i32* %8, align 4, !dbg !6920
  ret void, !dbg !6921
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6922 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6926, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6927, metadata !DIExpression()), !dbg !6928
  %3 = zext i8 %0 to i32, !dbg !6929
  %4 = icmp ugt i8 %0, 7, !dbg !6931
  br i1 %4, label %6, label %5, !dbg !6932

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !6933
  br label %6, !dbg !6934

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !6928
  ret i32 %7, !dbg !6935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6940, metadata !DIExpression()), !dbg !6942
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6941, metadata !DIExpression()), !dbg !6942
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !6943
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !6944
  %4 = load i32, i32* %3, align 4, !dbg !6944
  %5 = and i32 %4, -32, !dbg !6945
  %6 = or i32 %5, %0, !dbg !6946
  %7 = or i32 %6, 16, !dbg !6946
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !6947
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !6948
  %9 = load i32, i32* %8, align 4, !dbg !6948
  %10 = or i32 %9, 1, !dbg !6949
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6950
  ret void, !dbg !6951
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !6952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6955, metadata !DIExpression()), !dbg !6956
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6957
  ret void, !dbg !6958
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !6959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6963, metadata !DIExpression()), !dbg !6964
  %2 = icmp ult i32 %0, 33, !dbg !6965
  br i1 %2, label %11, label %3, !dbg !6967

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !6968
  br i1 %4, label %11, label %5, !dbg !6970

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !6971
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !6972, !range !3813
  %8 = mul nsw i32 %7, -2, !dbg !6973
  %9 = add nsw i32 %8, 62, !dbg !6973
  %10 = and i32 %9, 62, !dbg !6974
  br label %11, !dbg !6975

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !6964
  ret i32 %12, !dbg !6976
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !6977 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6981, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.value(metadata i8 %1, metadata !6982, metadata !DIExpression()), !dbg !6983
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !6984
  ret void, !dbg !6986
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6987 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6991, metadata !DIExpression()), !dbg !6998
  call void @llvm.dbg.value(metadata i8 %1, metadata !6992, metadata !DIExpression()), !dbg !6998
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6999
  call void @llvm.dbg.value(metadata i8 %3, metadata !6993, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6998
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !7000
  call void @llvm.dbg.value(metadata i32 %4, metadata !6993, metadata !DIExpression()), !dbg !6998
  %5 = icmp ne i32 %4, -22, !dbg !7001
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7002
  call void @llvm.dbg.value(metadata i32 %4, metadata !6994, metadata !DIExpression()), !dbg !7003
  br i1 %7, label %8, label %12, !dbg !7002

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6994, metadata !DIExpression()), !dbg !7003
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !7004
  %10 = add i32 %9, 1, !dbg !7007
  call void @llvm.dbg.value(metadata i32 %10, metadata !6994, metadata !DIExpression()), !dbg !7003
  %11 = icmp eq i32 %10, 8, !dbg !7008
  br i1 %11, label %12, label %8, !dbg !7009, !llvm.loop !7010

12:                                               ; preds = %8, %2
  ret void, !dbg !7012
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7016, metadata !DIExpression()), !dbg !7017
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7018
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7019
  ret void, !dbg !7020
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7021 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7026
  %2 = icmp ugt i32 %1, 8, !dbg !7028
  br i1 %2, label %14, label %3, !dbg !7029

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !7030
  call void @llvm.dbg.value(metadata i32 0, metadata !7025, metadata !DIExpression()), !dbg !7031
  %4 = icmp eq i32 %1, 0, !dbg !7032
  br i1 %4, label %12, label %5, !dbg !7035

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7035

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7025, metadata !DIExpression()), !dbg !7031
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7036
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #27, !dbg !7038
  %10 = add nuw i32 %8, 1, !dbg !7039
  call void @llvm.dbg.value(metadata i32 %10, metadata !7025, metadata !DIExpression()), !dbg !7031
  %11 = icmp eq i32 %10, %1, !dbg !7032
  br i1 %11, label %12, label %7, !dbg !7035, !llvm.loop !7040

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7042
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7043
  tail call void @arm_core_mpu_enable() #27, !dbg !7044
  br label %14, !dbg !7045

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7031
  ret i32 %15, !dbg !7046
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7054, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i8* %1, metadata !7055, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i8* %0, metadata !7056, metadata !DIExpression()), !dbg !7057
  %3 = load i8, i8* %1, align 1, !dbg !7058
  %4 = icmp eq i8 %3, 0, !dbg !7059
  br i1 %4, label %13, label %5, !dbg !7060

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7054, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i8* %8, metadata !7055, metadata !DIExpression()), !dbg !7057
  store i8 %6, i8* %7, align 1, !dbg !7061
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7063
  call void @llvm.dbg.value(metadata i8* %9, metadata !7054, metadata !DIExpression()), !dbg !7057
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7064
  call void @llvm.dbg.value(metadata i8* %10, metadata !7055, metadata !DIExpression()), !dbg !7057
  %11 = load i8, i8* %10, align 1, !dbg !7058
  %12 = icmp eq i8 %11, 0, !dbg !7059
  br i1 %12, label %13, label %5, !dbg !7060, !llvm.loop !7065

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7067
  ret i8* %0, !dbg !7068
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7069 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7073, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata i8* %1, metadata !7074, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata i32 %2, metadata !7075, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata i8* %0, metadata !7076, metadata !DIExpression()), !dbg !7077
  %4 = icmp eq i32 %2, 0, !dbg !7078
  br i1 %4, label %22, label %5, !dbg !7079

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7073, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata i32 %7, metadata !7075, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata i8* %8, metadata !7074, metadata !DIExpression()), !dbg !7077
  %9 = load i8, i8* %8, align 1, !dbg !7080
  %10 = icmp eq i8 %9, 0, !dbg !7081
  br i1 %10, label %16, label %11, !dbg !7082

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7083
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7085
  call void @llvm.dbg.value(metadata i8* %12, metadata !7074, metadata !DIExpression()), !dbg !7077
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7086
  call void @llvm.dbg.value(metadata i8* %13, metadata !7073, metadata !DIExpression()), !dbg !7077
  %14 = add i32 %7, -1, !dbg !7087
  call void @llvm.dbg.value(metadata i32 %14, metadata !7075, metadata !DIExpression()), !dbg !7077
  %15 = icmp eq i32 %14, 0, !dbg !7078
  br i1 %15, label %22, label %5, !dbg !7079, !llvm.loop !7088

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7073, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata i32 %18, metadata !7075, metadata !DIExpression()), !dbg !7077
  store i8 0, i8* %17, align 1, !dbg !7090
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7092
  call void @llvm.dbg.value(metadata i8* %19, metadata !7073, metadata !DIExpression()), !dbg !7077
  %20 = add i32 %18, -1, !dbg !7093
  call void @llvm.dbg.value(metadata i32 %20, metadata !7075, metadata !DIExpression()), !dbg !7077
  %21 = icmp eq i32 %20, 0, !dbg !7094
  br i1 %21, label %22, label %16, !dbg !7095, !llvm.loop !7096

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7098
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7099 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7103, metadata !DIExpression()), !dbg !7106
  call void @llvm.dbg.value(metadata i32 %1, metadata !7104, metadata !DIExpression()), !dbg !7106
  call void @llvm.dbg.value(metadata i32 %1, metadata !7105, metadata !DIExpression()), !dbg !7106
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7107

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7103, metadata !DIExpression()), !dbg !7106
  %6 = load i8, i8* %5, align 1, !dbg !7108
  %7 = icmp eq i8 %6, %3, !dbg !7109
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7110
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7111
  call void @llvm.dbg.value(metadata i8* %10, metadata !7103, metadata !DIExpression()), !dbg !7106
  br i1 %9, label %11, label %4, !dbg !7110, !llvm.loop !7113

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7115
  ret i8* %12, !dbg !7116
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7117 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7119, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i32 %1, metadata !7120, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i8* null, metadata !7121, metadata !DIExpression()), !dbg !7122
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7123

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7122
  call void @llvm.dbg.value(metadata i8* %6, metadata !7121, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i8* %5, metadata !7119, metadata !DIExpression()), !dbg !7122
  %7 = load i8, i8* %5, align 1, !dbg !7124
  %8 = icmp eq i8 %7, %3, !dbg !7127
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7128
  call void @llvm.dbg.value(metadata i8* %9, metadata !7121, metadata !DIExpression()), !dbg !7122
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7129
  call void @llvm.dbg.value(metadata i8* %10, metadata !7119, metadata !DIExpression()), !dbg !7122
  %11 = icmp eq i8 %7, 0, !dbg !7130
  br i1 %11, label %12, label %4, !dbg !7130, !llvm.loop !7131

12:                                               ; preds = %4
  ret i8* %9, !dbg !7133
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7134 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7138, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.value(metadata i32 0, metadata !7139, metadata !DIExpression()), !dbg !7140
  %2 = load i8, i8* %0, align 1, !dbg !7141
  %3 = icmp eq i8 %2, 0, !dbg !7142
  br i1 %3, label %11, label %4, !dbg !7143

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7139, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.value(metadata i8* %6, metadata !7138, metadata !DIExpression()), !dbg !7140
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7144
  call void @llvm.dbg.value(metadata i8* %7, metadata !7138, metadata !DIExpression()), !dbg !7140
  %8 = add i32 %5, 1, !dbg !7146
  call void @llvm.dbg.value(metadata i32 %8, metadata !7139, metadata !DIExpression()), !dbg !7140
  %9 = load i8, i8* %7, align 1, !dbg !7141
  %10 = icmp eq i8 %9, 0, !dbg !7142
  br i1 %10, label %11, label %4, !dbg !7143, !llvm.loop !7147

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7140
  ret i32 %12, !dbg !7149
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7150 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7154, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i32 %1, metadata !7155, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i32 0, metadata !7156, metadata !DIExpression()), !dbg !7157
  %3 = load i8, i8* %0, align 1, !dbg !7158
  %4 = icmp ne i8 %3, 0, !dbg !7159
  %5 = icmp ne i32 %1, 0, !dbg !7160
  %6 = and i1 %4, %5, !dbg !7160
  br i1 %6, label %7, label %16, !dbg !7161

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7156, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i8* %9, metadata !7154, metadata !DIExpression()), !dbg !7157
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7162
  call void @llvm.dbg.value(metadata i8* %10, metadata !7154, metadata !DIExpression()), !dbg !7157
  %11 = add nuw i32 %8, 1, !dbg !7164
  call void @llvm.dbg.value(metadata i32 %11, metadata !7156, metadata !DIExpression()), !dbg !7157
  %12 = load i8, i8* %10, align 1, !dbg !7158
  %13 = icmp ne i8 %12, 0, !dbg !7159
  %14 = icmp ult i32 %11, %1, !dbg !7160
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7160
  br i1 %15, label %7, label %16, !dbg !7161, !llvm.loop !7165

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7157
  ret i32 %17, !dbg !7167
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7168 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7172, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.value(metadata i8* %1, metadata !7173, metadata !DIExpression()), !dbg !7174
  %3 = load i8, i8* %0, align 1, !dbg !7175
  %4 = load i8, i8* %1, align 1, !dbg !7176
  %5 = icmp ne i8 %3, %4, !dbg !7177
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7178
  br i1 %7, label %18, label %8, !dbg !7178

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7173, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.value(metadata i8* %10, metadata !7172, metadata !DIExpression()), !dbg !7174
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7179
  call void @llvm.dbg.value(metadata i8* %11, metadata !7172, metadata !DIExpression()), !dbg !7174
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7181
  call void @llvm.dbg.value(metadata i8* %12, metadata !7173, metadata !DIExpression()), !dbg !7174
  %13 = load i8, i8* %11, align 1, !dbg !7175
  %14 = load i8, i8* %12, align 1, !dbg !7176
  %15 = icmp ne i8 %13, %14, !dbg !7177
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7178
  br i1 %17, label %18, label %8, !dbg !7178, !llvm.loop !7182

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7175
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7176
  %21 = zext i8 %19 to i32, !dbg !7185
  %22 = zext i8 %20 to i32, !dbg !7186
  %23 = sub nsw i32 %21, %22, !dbg !7187
  ret i32 %23, !dbg !7188
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7189 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7193, metadata !DIExpression()), !dbg !7196
  call void @llvm.dbg.value(metadata i8* %1, metadata !7194, metadata !DIExpression()), !dbg !7196
  call void @llvm.dbg.value(metadata i32 %2, metadata !7195, metadata !DIExpression()), !dbg !7196
  %4 = icmp eq i32 %2, 0, !dbg !7197
  br i1 %4, label %23, label %5, !dbg !7197

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7195, metadata !DIExpression()), !dbg !7196
  call void @llvm.dbg.value(metadata i8* %7, metadata !7194, metadata !DIExpression()), !dbg !7196
  call void @llvm.dbg.value(metadata i8* %8, metadata !7193, metadata !DIExpression()), !dbg !7196
  %9 = load i8, i8* %8, align 1, !dbg !7198
  %10 = load i8, i8* %7, align 1, !dbg !7199
  %11 = icmp ne i8 %9, %10, !dbg !7200
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7201
  br i1 %13, label %19, label %14, !dbg !7201

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7202
  call void @llvm.dbg.value(metadata i8* %15, metadata !7193, metadata !DIExpression()), !dbg !7196
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7204
  call void @llvm.dbg.value(metadata i8* %16, metadata !7194, metadata !DIExpression()), !dbg !7196
  %17 = add i32 %6, -1, !dbg !7205
  call void @llvm.dbg.value(metadata i32 %17, metadata !7195, metadata !DIExpression()), !dbg !7196
  %18 = icmp eq i32 %17, 0, !dbg !7197
  br i1 %18, label %23, label %5, !dbg !7197, !llvm.loop !7206

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7209
  %21 = zext i8 %10 to i32, !dbg !7210
  %22 = sub nsw i32 %20, %21, !dbg !7211
  br label %23, !dbg !7212

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7212
  ret i32 %24, !dbg !7213
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7214 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7219, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i8* %1, metadata !7220, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i8** %2, metadata !7221, metadata !DIExpression()), !dbg !7224
  %4 = icmp eq i8* %0, null, !dbg !7225
  br i1 %4, label %5, label %7, !dbg !7225

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7226
  br label %7, !dbg !7225

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7225
  call void @llvm.dbg.value(metadata i8* %8, metadata !7222, metadata !DIExpression()), !dbg !7224
  %9 = load i8, i8* %8, align 1, !dbg !7227
  %10 = icmp eq i8 %9, 0, !dbg !7227
  br i1 %10, label %33, label %11, !dbg !7228

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7222, metadata !DIExpression()), !dbg !7224
  %14 = zext i8 %12 to i32, !dbg !7227
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !7229
  %16 = icmp eq i8* %15, null, !dbg !7228
  br i1 %16, label %21, label %17, !dbg !7230

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7231
  call void @llvm.dbg.value(metadata i8* %18, metadata !7222, metadata !DIExpression()), !dbg !7224
  %19 = load i8, i8* %18, align 1, !dbg !7227
  %20 = icmp eq i8 %19, 0, !dbg !7227
  br i1 %20, label %33, label %11, !dbg !7228, !llvm.loop !7233

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7223, metadata !DIExpression()), !dbg !7224
  %24 = zext i8 %22 to i32, !dbg !7235
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !7236
  %26 = icmp eq i8* %25, null, !dbg !7237
  br i1 %26, label %27, label %31, !dbg !7238

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7239
  call void @llvm.dbg.value(metadata i8* %28, metadata !7223, metadata !DIExpression()), !dbg !7224
  %29 = load i8, i8* %28, align 1, !dbg !7235
  %30 = icmp eq i8 %29, 0, !dbg !7235
  br i1 %30, label %33, label %21, !dbg !7241, !llvm.loop !7242

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7244
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7247
  br label %33, !dbg !7248

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7224
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7224
  store i8* %34, i8** %2, align 4, !dbg !7224
  ret i8* %35, !dbg !7249
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7250 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7252, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i8* %1, metadata !7253, metadata !DIExpression()), !dbg !7254
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7255
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7256
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !7257
  ret i8* %0, !dbg !7258
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7259 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7261, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.value(metadata i8* %1, metadata !7262, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.value(metadata i32 %2, metadata !7263, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.value(metadata i8* %0, metadata !7264, metadata !DIExpression()), !dbg !7266
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7267
  call void @llvm.dbg.value(metadata i32 %4, metadata !7265, metadata !DIExpression()), !dbg !7266
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7268
  call void @llvm.dbg.value(metadata i8* %5, metadata !7261, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.value(metadata i8* %1, metadata !7262, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.value(metadata i32 %2, metadata !7263, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.value(metadata i32 %2, metadata !7263, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7266
  %6 = icmp eq i32 %2, 0, !dbg !7269
  br i1 %6, label %18, label %7, !dbg !7270

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7271
  call void @llvm.dbg.value(metadata i8* %9, metadata !7261, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.value(metadata i8* %10, metadata !7262, metadata !DIExpression()), !dbg !7266
  %12 = load i8, i8* %10, align 1, !dbg !7272
  %13 = icmp eq i8 %12, 0, !dbg !7273
  br i1 %13, label %18, label %14, !dbg !7274

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7275
  call void @llvm.dbg.value(metadata i8* %15, metadata !7262, metadata !DIExpression()), !dbg !7266
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7277
  call void @llvm.dbg.value(metadata i8* %16, metadata !7261, metadata !DIExpression()), !dbg !7266
  store i8 %12, i8* %9, align 1, !dbg !7278
  call void @llvm.dbg.value(metadata i32 %11, metadata !7263, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.value(metadata i32 %11, metadata !7263, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7266
  %17 = icmp eq i32 %11, 0, !dbg !7269
  br i1 %17, label %18, label %7, !dbg !7270, !llvm.loop !7279

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7266
  store i8 0, i8* %19, align 1, !dbg !7281
  ret i8* %0, !dbg !7282
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7283 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7287, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i8* %1, metadata !7288, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i32 %2, metadata !7289, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i8* %0, metadata !7290, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i8* %1, metadata !7291, metadata !DIExpression()), !dbg !7292
  %4 = icmp eq i32 %2, 0, !dbg !7293
  br i1 %4, label %31, label %5, !dbg !7295

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7291, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i8* %0, metadata !7290, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i32 %2, metadata !7289, metadata !DIExpression()), !dbg !7292
  %6 = add i32 %2, -1, !dbg !7296
  call void @llvm.dbg.value(metadata i32 %6, metadata !7289, metadata !DIExpression()), !dbg !7292
  %7 = icmp eq i32 %6, 0, !dbg !7297
  br i1 %7, label %23, label %8, !dbg !7298

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7299
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7299
  br label %11, !dbg !7299

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7291, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i8* %14, metadata !7290, metadata !DIExpression()), !dbg !7292
  %15 = load i8, i8* %14, align 1, !dbg !7300
  %16 = load i8, i8* %13, align 1, !dbg !7301
  %17 = icmp eq i8 %15, %16, !dbg !7302
  br i1 %17, label %18, label %23, !dbg !7299

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7303
  call void @llvm.dbg.value(metadata i8* %19, metadata !7290, metadata !DIExpression()), !dbg !7292
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7305
  call void @llvm.dbg.value(metadata i8* %20, metadata !7291, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i32 %12, metadata !7289, metadata !DIExpression()), !dbg !7292
  %21 = add i32 %12, -1, !dbg !7296
  call void @llvm.dbg.value(metadata i32 %21, metadata !7289, metadata !DIExpression()), !dbg !7292
  %22 = icmp eq i32 %21, 0, !dbg !7297
  br i1 %22, label %23, label %11, !dbg !7298, !llvm.loop !7306

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7292
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7292
  %26 = load i8, i8* %24, align 1, !dbg !7308
  %27 = zext i8 %26 to i32, !dbg !7308
  %28 = load i8, i8* %25, align 1, !dbg !7309
  %29 = zext i8 %28 to i32, !dbg !7309
  %30 = sub nsw i32 %27, %29, !dbg !7310
  br label %31, !dbg !7311

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7292
  ret i32 %32, !dbg !7312
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7313 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7317, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8* %1, metadata !7318, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i32 %2, metadata !7319, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8* %0, metadata !7320, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8* %1, metadata !7321, metadata !DIExpression()), !dbg !7322
  %4 = ptrtoint i8* %0 to i32, !dbg !7323
  %5 = ptrtoint i8* %1 to i32, !dbg !7323
  %6 = sub i32 %4, %5, !dbg !7323
  %7 = icmp ult i32 %6, %2, !dbg !7325
  br i1 %7, label %10, label %8, !dbg !7326

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7321, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8* %0, metadata !7320, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i32 %2, metadata !7319, metadata !DIExpression()), !dbg !7322
  %9 = icmp eq i32 %2, 0, !dbg !7327
  br i1 %9, label %26, label %17, !dbg !7329

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7319, metadata !DIExpression()), !dbg !7322
  %12 = add i32 %11, -1, !dbg !7330
  call void @llvm.dbg.value(metadata i32 %12, metadata !7319, metadata !DIExpression()), !dbg !7322
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7333
  %14 = load i8, i8* %13, align 1, !dbg !7333
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7334
  store i8 %14, i8* %15, align 1, !dbg !7335
  %16 = icmp eq i32 %12, 0, !dbg !7336
  br i1 %16, label %26, label %10, !dbg !7337, !llvm.loop !7338

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7321, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8* %19, metadata !7320, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i32 %20, metadata !7319, metadata !DIExpression()), !dbg !7322
  %21 = load i8, i8* %18, align 1, !dbg !7340
  store i8 %21, i8* %19, align 1, !dbg !7342
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7343
  call void @llvm.dbg.value(metadata i8* %22, metadata !7320, metadata !DIExpression()), !dbg !7322
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7344
  call void @llvm.dbg.value(metadata i8* %23, metadata !7321, metadata !DIExpression()), !dbg !7322
  %24 = add i32 %20, -1, !dbg !7345
  call void @llvm.dbg.value(metadata i32 %24, metadata !7319, metadata !DIExpression()), !dbg !7322
  %25 = icmp eq i32 %24, 0, !dbg !7327
  br i1 %25, label %26, label %17, !dbg !7329, !llvm.loop !7346

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7348
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7349 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7355, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i8* %1, metadata !7356, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i32 %2, metadata !7357, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i8* %0, metadata !7358, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i8* %1, metadata !7359, metadata !DIExpression()), !dbg !7360
  %4 = icmp eq i32 %2, 0, !dbg !7361
  br i1 %4, label %14, label %5, !dbg !7362

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7359, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i8* %7, metadata !7358, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i32 %8, metadata !7357, metadata !DIExpression()), !dbg !7360
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7363
  call void @llvm.dbg.value(metadata i8* %9, metadata !7359, metadata !DIExpression()), !dbg !7360
  %10 = load i8, i8* %6, align 1, !dbg !7365
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7366
  call void @llvm.dbg.value(metadata i8* %11, metadata !7358, metadata !DIExpression()), !dbg !7360
  store i8 %10, i8* %7, align 1, !dbg !7367
  %12 = add i32 %8, -1, !dbg !7368
  call void @llvm.dbg.value(metadata i32 %12, metadata !7357, metadata !DIExpression()), !dbg !7360
  %13 = icmp eq i32 %12, 0, !dbg !7361
  br i1 %13, label %14, label %5, !dbg !7362, !llvm.loop !7369

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7371
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7372 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7376, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.value(metadata i32 %1, metadata !7377, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.value(metadata i32 %2, metadata !7378, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.value(metadata i8* %0, metadata !7379, metadata !DIExpression()), !dbg !7381
  %4 = trunc i32 %1 to i8, !dbg !7382
  call void @llvm.dbg.value(metadata i8 %4, metadata !7380, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.value(metadata i32 %2, metadata !7378, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.value(metadata i8* %0, metadata !7379, metadata !DIExpression()), !dbg !7381
  %5 = icmp eq i32 %2, 0, !dbg !7383
  br i1 %5, label %12, label %6, !dbg !7384

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7378, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.value(metadata i8* %8, metadata !7379, metadata !DIExpression()), !dbg !7381
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7385
  call void @llvm.dbg.value(metadata i8* %9, metadata !7379, metadata !DIExpression()), !dbg !7381
  store i8 %4, i8* %8, align 1, !dbg !7387
  %10 = add i32 %7, -1, !dbg !7388
  call void @llvm.dbg.value(metadata i32 %10, metadata !7378, metadata !DIExpression()), !dbg !7381
  %11 = icmp eq i32 %10, 0, !dbg !7383
  br i1 %11, label %12, label %6, !dbg !7384, !llvm.loop !7389

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7391
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7392 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7396, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i32 %1, metadata !7397, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i32 %2, metadata !7398, metadata !DIExpression()), !dbg !7402
  %4 = icmp eq i32 %2, 0, !dbg !7403
  br i1 %4, label %17, label %5, !dbg !7404

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7405

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7406
  call void @llvm.dbg.value(metadata i8* %9, metadata !7399, metadata !DIExpression()), !dbg !7406
  call void @llvm.dbg.value(metadata i32 %8, metadata !7398, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i8* %9, metadata !7399, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7406
  %10 = load i8, i8* %9, align 1, !dbg !7407
  %11 = icmp eq i8 %10, %6, !dbg !7410
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7411
  call void @llvm.dbg.value(metadata i8* %12, metadata !7399, metadata !DIExpression()), !dbg !7406
  call void @llvm.dbg.value(metadata i32 %13, metadata !7398, metadata !DIExpression()), !dbg !7402
  br i1 %15, label %16, label %7, !dbg !7411, !llvm.loop !7412

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7414

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7402
  ret i8* %19, !dbg !7415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7416 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7418, metadata !DIExpression()), !dbg !7419
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7420
  ret void, !dbg !7421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7424, metadata !DIExpression()), !dbg !7425
  ret i32 -1, !dbg !7426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7431, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.value(metadata i32* %1, metadata !7432, metadata !DIExpression()), !dbg !7433
  %3 = ptrtoint i32* %1 to i32, !dbg !7434
  %4 = and i32 %3, -2, !dbg !7434
  %5 = icmp eq i32 %4, 2, !dbg !7434
  br i1 %5, label %6, label %9, !dbg !7434

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7435
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !7435
  br label %9, !dbg !7436

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7436
  ret i32 %10, !dbg !7437
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7438 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7440, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.value(metadata i32* %1, metadata !7441, metadata !DIExpression()), !dbg !7442
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7443
  ret i32 %3, !dbg !7444
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7448, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i32* %1, metadata !7449, metadata !DIExpression()), !dbg !7450
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7451, !srcloc !7453
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7454
  ret i32 %3, !dbg !7455
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7456 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7461, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.value(metadata i32* %1, metadata !7462, metadata !DIExpression()), !dbg !7465
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7466
  call void @llvm.dbg.value(metadata i32 %3, metadata !7463, metadata !DIExpression()), !dbg !7465
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !7467
  call void @llvm.dbg.value(metadata i32 %4, metadata !7464, metadata !DIExpression()), !dbg !7465
  %5 = icmp ne i32 %3, %4, !dbg !7468
  %6 = sext i1 %5 to i32, !dbg !7469
  ret i32 %6, !dbg !7470
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7471 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7475, metadata !DIExpression()), !dbg !7479
  call void @llvm.dbg.value(metadata i32 %1, metadata !7476, metadata !DIExpression()), !dbg !7479
  call void @llvm.dbg.value(metadata i32 %2, metadata !7477, metadata !DIExpression()), !dbg !7479
  call void @llvm.dbg.value(metadata i32* %3, metadata !7478, metadata !DIExpression()), !dbg !7479
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7480
  ret i32 %5, !dbg !7481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7482 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7484, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata i32 %1, metadata !7485, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata i32 %2, metadata !7486, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata i32* %3, metadata !7487, metadata !DIExpression()), !dbg !7488
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7489, !srcloc !7491
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7492
  ret i32 %5, !dbg !7493
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7494 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7496, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i32 %1, metadata !7497, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i32 %2, metadata !7498, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i32* %3, metadata !7499, metadata !DIExpression()), !dbg !7504
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7505
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7507
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7507
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7507
  br i1 %11, label %33, label %12, !dbg !7507

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7504
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7504
  call void @llvm.dbg.value(metadata i8* %14, metadata !7502, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i32 %13, metadata !7500, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i32 %1, metadata !7501, metadata !DIExpression()), !dbg !7504
  br label %15, !dbg !7508

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7510
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7504
  call void @llvm.dbg.value(metadata i8* %17, metadata !7502, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i32 %16, metadata !7501, metadata !DIExpression()), !dbg !7504
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7511
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7514
  call void @llvm.dbg.value(metadata i8* %19, metadata !7502, metadata !DIExpression()), !dbg !7504
  %20 = load i8, i8* %17, align 1, !dbg !7515
  %21 = zext i8 %20 to i32, !dbg !7516
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !7511
  %23 = icmp eq i32 %22, -1, !dbg !7517
  br i1 %23, label %30, label %24, !dbg !7518

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7519
  call void @llvm.dbg.value(metadata i32 %25, metadata !7501, metadata !DIExpression()), !dbg !7504
  %26 = icmp eq i32 %25, 0, !dbg !7520
  br i1 %26, label %27, label %15, !dbg !7521, !llvm.loop !7522

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7524
  call void @llvm.dbg.value(metadata i32 %28, metadata !7500, metadata !DIExpression()), !dbg !7504
  %29 = icmp eq i32 %28, 0, !dbg !7525
  br i1 %29, label %30, label %12, !dbg !7526, !llvm.loop !7527

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7504
  call void @llvm.dbg.value(metadata i32 %31, metadata !7500, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.label(metadata !7503), !dbg !7530
  %32 = sub i32 %2, %31, !dbg !7531
  br label %33, !dbg !7532

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7504
  ret i32 %34, !dbg !7533
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7534 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7538, metadata !DIExpression()), !dbg !7539
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7540
  %3 = icmp eq i32 %2, -1, !dbg !7542
  br i1 %3, label %8, label %4, !dbg !7543

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7544
  %6 = icmp eq i32 %5, -1, !dbg !7545
  %7 = sext i1 %6 to i32, !dbg !7544
  br label %8, !dbg !7546

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7539
  ret i32 %9, !dbg !7547
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7548 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7550, metadata !DIExpression()), !dbg !7551
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !7552
  ret void, !dbg !7553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7558, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i32 %1, metadata !7559, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7560, metadata !DIExpression()), !dbg !7564
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7565
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7565
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7565
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7561, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i32 %0, metadata !7563, metadata !DIExpression()), !dbg !7564
  %7 = icmp slt i32 %0, %1, !dbg !7566
  br i1 %7, label %8, label %22, !dbg !7569

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7563, metadata !DIExpression()), !dbg !7564
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !7570
  %11 = icmp eq i32 %10, 0, !dbg !7570
  br i1 %11, label %19, label %12, !dbg !7573

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !7574
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7576
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7576
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7578
  br i1 %15, label %19, label %16, !dbg !7579

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7580
  %18 = load i8*, i8** %17, align 4, !dbg !7580
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !7581
  br label %19, !dbg !7582

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7583
  call void @llvm.dbg.value(metadata i32 %20, metadata !7563, metadata !DIExpression()), !dbg !7564
  %21 = icmp eq i32 %20, %1, !dbg !7566
  br i1 %21, label %22, label %8, !dbg !7569, !llvm.loop !7584

22:                                               ; preds = %19, %3
  ret void, !dbg !7586
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7589, metadata !DIExpression()), !dbg !7590
  %2 = shl nuw i32 1, %0, !dbg !7591
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !7594
  ret i32 %3, !dbg !7595
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7600, metadata !DIExpression()), !dbg !7601
  %2 = shl nuw i32 1, %0, !dbg !7602
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !7605
  ret void, !dbg !7606
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7610, metadata !DIExpression()), !dbg !7611
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7612
  ret void, !dbg !7613
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7616, metadata !DIExpression()), !dbg !7617
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7618
  %3 = and i32 %2, %0, !dbg !7618
  %4 = icmp eq i32 %3, %0, !dbg !7619
  %5 = zext i1 %4 to i32, !dbg !7619
  ret i32 %5, !dbg !7620
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7621 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7623, metadata !DIExpression()), !dbg !7624
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !7625
  ret void, !dbg !7626
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7627 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7629, metadata !DIExpression()), !dbg !7630
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !7631
  ret void, !dbg !7632
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7633 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7635, metadata !DIExpression()), !dbg !7636
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !7637
  ret void, !dbg !7638
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7639 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7641, metadata !DIExpression()), !dbg !7642
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #27, !dbg !7643
  ret void, !dbg !7644
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7645 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7647, metadata !DIExpression()), !dbg !7648
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #27, !dbg !7649
  ret void, !dbg !7650
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7653, metadata !DIExpression()), !dbg !7654
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !7655
  ret void, !dbg !7656
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7657 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7659, metadata !DIExpression()), !dbg !7660
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #27, !dbg !7661
  ret void, !dbg !7662
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7663 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7665, metadata !DIExpression()), !dbg !7666
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #27, !dbg !7667
  ret void, !dbg !7668
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7669 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7671, metadata !DIExpression()), !dbg !7672
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !7673
  ret void, !dbg !7674
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7675 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7677, metadata !DIExpression()), !dbg !7678
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !7679
  ret void, !dbg !7680
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7681 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7683, metadata !DIExpression()), !dbg !7684
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !7685
  ret i32 0, !dbg !7686
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !738 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !742, metadata !DIExpression()), !dbg !7687
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !7688
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !7690
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !7692
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !7694
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !7696
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !7698
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !7700
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #26, !dbg !7702
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #26, !dbg !7704
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #26, !dbg !7706
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #26, !dbg !7708
  ret void, !dbg !7710
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7711 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7713, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i32 0, metadata !7714, metadata !DIExpression()), !dbg !7715
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7716
  %3 = load i32, i32* %2, align 4, !dbg !7716
  call void @llvm.dbg.value(metadata i32 %3, metadata !7714, metadata !DIExpression()), !dbg !7715
  %4 = shl nuw i32 1, %0, !dbg !7717
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #27, !dbg !7718
  tail call void @arch_irq_enable(i32 noundef %3) #26, !dbg !7719
  ret void, !dbg !7720
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7723, metadata !DIExpression()), !dbg !7724
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7725
  %3 = or i32 %2, %0, !dbg !7725
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7725
  ret void, !dbg !7726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !7727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7729, metadata !DIExpression()), !dbg !7730
  %2 = icmp slt i32 %0, 32, !dbg !7731
  br i1 %2, label %3, label %5, !dbg !7733

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7734
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !7736
  br label %5, !dbg !7737

5:                                                ; preds = %1, %3
  ret void, !dbg !7738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7741, metadata !DIExpression()), !dbg !7742
  %2 = xor i32 %0, -1, !dbg !7743
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7743
  %4 = and i32 %3, %2, !dbg !7743
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7743
  ret void, !dbg !7744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !7745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7749, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %1, metadata !7750, metadata !DIExpression()), !dbg !7751
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7752

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7753
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !7755
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !7756
  br label %11, !dbg !7757

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7758
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !7759
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !7760
  br label %11, !dbg !7761

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7762
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !7763
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !7764
  br label %11, !dbg !7765

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7766
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !7767
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !7768
  br label %11, !dbg !7769

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7773, metadata !DIExpression()), !dbg !7774
  %2 = xor i32 %0, -1, !dbg !7775
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7775
  %4 = and i32 %3, %2, !dbg !7775
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7775
  ret void, !dbg !7776
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7779, metadata !DIExpression()), !dbg !7780
  %2 = xor i32 %0, -1, !dbg !7781
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7781
  %4 = and i32 %3, %2, !dbg !7781
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7781
  ret void, !dbg !7782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7785, metadata !DIExpression()), !dbg !7786
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7787
  %3 = or i32 %2, %0, !dbg !7787
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7787
  ret void, !dbg !7788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7791, metadata !DIExpression()), !dbg !7792
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7793
  %3 = or i32 %2, %0, !dbg !7793
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7793
  ret void, !dbg !7794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !7795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7799, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7800, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i8* %2, metadata !7801, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !7802, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7804, metadata !DIExpression()), !dbg !7805
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7806
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7806
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7808
  br i1 %6, label %7, label %9, !dbg !7809

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7810
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7811
  store i8* %2, i8** %8, align 4, !dbg !7812
  br label %9, !dbg !7813

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7805
  ret i32 %10, !dbg !7814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7817, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !7818, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7819, metadata !DIExpression()), !dbg !7820
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7821
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7822
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7823
  store i8* null, i8** %3, align 4, !dbg !7824
  ret void, !dbg !7825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7826 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7828, metadata !DIExpression()), !dbg !7833
  call void @llvm.dbg.value(metadata i8* %1, metadata !7829, metadata !DIExpression()), !dbg !7833
  call void @llvm.dbg.value(metadata i8* %1, metadata !7830, metadata !DIExpression()), !dbg !7833
  %3 = bitcast i8* %1 to i32*, !dbg !7834
  %4 = load i32, i32* %3, align 4, !dbg !7834
  %5 = add i32 %4, -169, !dbg !7834
  %6 = icmp ult i32 %5, -121, !dbg !7834
  br i1 %6, label %15, label %7, !dbg !7836

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7837
  %9 = inttoptr i32 %8 to i32*, !dbg !7838
  call void @llvm.dbg.value(metadata i32* %9, metadata !7831, metadata !DIExpression()), !dbg !7833
  %10 = load volatile i32, i32* %9, align 4, !dbg !7839
  call void @llvm.dbg.value(metadata i32 %10, metadata !7832, metadata !DIExpression()), !dbg !7833
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7840
  %12 = bitcast i8* %11 to i32*, !dbg !7840
  %13 = load i32, i32* %12, align 4, !dbg !7840
  %14 = or i32 %13, %10, !dbg !7841
  call void @llvm.dbg.value(metadata i32 %14, metadata !7832, metadata !DIExpression()), !dbg !7833
  store volatile i32 %14, i32* %9, align 4, !dbg !7842
  br label %15, !dbg !7843

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7833
  ret i32 %16, !dbg !7844
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7845 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7847, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i8* %1, metadata !7848, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i8* %1, metadata !7849, metadata !DIExpression()), !dbg !7852
  %3 = bitcast i8* %1 to i32*, !dbg !7853
  %4 = load i32, i32* %3, align 4, !dbg !7853
  %5 = add i32 %4, -169, !dbg !7853
  %6 = icmp ult i32 %5, -121, !dbg !7853
  br i1 %6, label %16, label %7, !dbg !7855

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7856
  %9 = inttoptr i32 %8 to i32*, !dbg !7857
  call void @llvm.dbg.value(metadata i32* %9, metadata !7850, metadata !DIExpression()), !dbg !7852
  %10 = load volatile i32, i32* %9, align 4, !dbg !7858
  call void @llvm.dbg.value(metadata i32 %10, metadata !7851, metadata !DIExpression()), !dbg !7852
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7859
  %12 = bitcast i8* %11 to i32*, !dbg !7859
  %13 = load i32, i32* %12, align 4, !dbg !7859
  %14 = xor i32 %13, -1, !dbg !7860
  %15 = and i32 %10, %14, !dbg !7861
  call void @llvm.dbg.value(metadata i32 %15, metadata !7851, metadata !DIExpression()), !dbg !7852
  store volatile i32 %15, i32* %9, align 4, !dbg !7862
  br label %16, !dbg !7863

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7852
  ret i32 %17, !dbg !7864
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !7865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7867, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.value(metadata i8* %1, metadata !7868, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.value(metadata i32* %2, metadata !7869, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.value(metadata i8* %1, metadata !7870, metadata !DIExpression()), !dbg !7875
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !7876
  call void @llvm.dbg.value(metadata i32 %4, metadata !7871, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.value(metadata i32 undef, metadata !7872, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.value(metadata i32 undef, metadata !7873, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.value(metadata i32 %4, metadata !7874, metadata !DIExpression()), !dbg !7875
  %5 = bitcast i8* %1 to i32*, !dbg !7877
  %6 = load i32, i32* %5, align 4, !dbg !7877
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !7878

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #27, !dbg !7879
  call void @llvm.dbg.value(metadata i32 %8, metadata !7872, metadata !DIExpression()), !dbg !7875
  br label %19, !dbg !7880

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #27, !dbg !7882
  call void @llvm.dbg.value(metadata i32 %10, metadata !7873, metadata !DIExpression()), !dbg !7875
  br label %19, !dbg !7883

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #26, !dbg !7884
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #27, !dbg !7885
  br label %19, !dbg !7886

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #26, !dbg !7887
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #27, !dbg !7888
  br label %19, !dbg !7889

17:                                               ; preds = %3
  br label %19, !dbg !7890

18:                                               ; preds = %3
  br label %19, !dbg !7891

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !7892
  br label %21, !dbg !7893

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !7875
  ret i32 %22, !dbg !7893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !7894 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7896, metadata !DIExpression()), !dbg !7904
  call void @llvm.dbg.value(metadata i8* %1, metadata !7897, metadata !DIExpression()), !dbg !7904
  call void @llvm.dbg.value(metadata i8* %2, metadata !7898, metadata !DIExpression()), !dbg !7904
  call void @llvm.dbg.value(metadata i8* %1, metadata !7899, metadata !DIExpression()), !dbg !7904
  %4 = bitcast i8* %1 to i32*, !dbg !7905
  %5 = load i32, i32* %4, align 4, !dbg !7905
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !7906
  call void @llvm.dbg.value(metadata i32 %6, metadata !7903, metadata !DIExpression()), !dbg !7904
  %7 = icmp slt i32 %6, 0, !dbg !7907
  br i1 %7, label %22, label %8, !dbg !7909

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7899, metadata !DIExpression()), !dbg !7904
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7910
  %10 = bitcast i8* %9 to i32*, !dbg !7910
  %11 = load i32, i32* %10, align 4, !dbg !7910
  %12 = lshr i32 %11, 16, !dbg !7910
  %13 = and i32 %12, 7, !dbg !7910
  %14 = lshr i32 %11, 8, !dbg !7911
  %15 = and i32 %14, 31, !dbg !7911
  %16 = shl i32 %13, %15, !dbg !7912
  call void @llvm.dbg.value(metadata i32 %16, metadata !7902, metadata !DIExpression()), !dbg !7904
  %17 = and i32 %11, 255, !dbg !7913
  %18 = or i32 %17, 1073887232, !dbg !7914
  %19 = inttoptr i32 %18 to i32*, !dbg !7915
  call void @llvm.dbg.value(metadata i32* %19, metadata !7900, metadata !DIExpression()), !dbg !7904
  %20 = load volatile i32, i32* %19, align 4, !dbg !7916
  call void @llvm.dbg.value(metadata i32 %20, metadata !7901, metadata !DIExpression()), !dbg !7904
  %21 = or i32 %16, %20, !dbg !7917
  call void @llvm.dbg.value(metadata i32 %21, metadata !7901, metadata !DIExpression()), !dbg !7904
  store volatile i32 %21, i32* %19, align 4, !dbg !7918
  br label %22, !dbg !7919

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !7904
  ret i32 %23, !dbg !7920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !7921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7925, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32 0, metadata !7926, metadata !DIExpression()), !dbg !7927
  %2 = add i32 %0, -1, !dbg !7928
  %3 = icmp ult i32 %2, 6, !dbg !7928
  br i1 %3, label %4, label %7, !dbg !7928

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !7928
  %6 = load i32, i32* %5, align 4, !dbg !7928
  call void @llvm.dbg.value(metadata i32 %6, metadata !7926, metadata !DIExpression()), !dbg !7927
  br label %7, !dbg !7929

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !7927
  ret i32 %8, !dbg !7930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !7931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7935, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.value(metadata i32 %1, metadata !7936, metadata !DIExpression()), !dbg !7937
  %3 = udiv i32 %0, %1, !dbg !7938
  ret i32 %3, !dbg !7939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !7940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7944, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i32 12, metadata !7945, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i32 336, metadata !7946, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i32 %1, metadata !7947, metadata !DIExpression()), !dbg !7948
  %3 = mul i32 %0, 336, !dbg !7949
  %4 = mul nsw i32 %1, 12, !dbg !7950
  %5 = udiv i32 %3, %4, !dbg !7951
  ret i32 %5, !dbg !7952
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !7953 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !7955, metadata !DIExpression()), !dbg !7958
  tail call void @config_enable_default_clocks() #26, !dbg !7959
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !7960
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !7960
  %4 = lshr i32 %3, 4, !dbg !7960
  %5 = and i32 %4, 15, !dbg !7960
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !7960
  %7 = load i8, i8* %6, align 1, !dbg !7960
  %8 = zext i8 %7 to i32, !dbg !7960
  %9 = lshr i32 %2, %8, !dbg !7960
  call void @llvm.dbg.value(metadata i32 %9, metadata !7956, metadata !DIExpression()), !dbg !7958
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !7957, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !7958
  %10 = icmp ult i32 %9, 168000000, !dbg !7961
  br i1 %10, label %11, label %13, !dbg !7963

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #26, !dbg !7964
  br label %13, !dbg !7966

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !7967
  tail call fastcc void @set_up_plls() #27, !dbg !7968
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !7969
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #27, !dbg !7972
  br label %14, !dbg !7973

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !7974
  %16 = icmp eq i32 %15, 8, !dbg !7975
  br i1 %16, label %17, label %14, !dbg !7973, !llvm.loop !7976

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !7978
  br i1 %18, label %19, label %21, !dbg !7980

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #26, !dbg !7981
  br label %21, !dbg !7983

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !7984
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !7985
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !7986
  ret i32 0, !dbg !7987
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !7988 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7990
  %2 = and i32 %1, 240, !dbg !7990
  ret i32 %2, !dbg !7991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !7992 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !7993
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !7998
  br label %1, !dbg !7999

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !8000
  %3 = icmp eq i32 %2, 1, !dbg !8001
  br i1 %3, label %4, label %1, !dbg !7999, !llvm.loop !8002

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !8004
  br label %5, !dbg !8007

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !8008
  %7 = icmp eq i32 %6, 1, !dbg !8009
  br i1 %7, label %8, label %5, !dbg !8007, !llvm.loop !8010

8:                                                ; preds = %5
  ret void, !dbg !8012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8013 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8014
  %2 = icmp eq i32 %1, 8, !dbg !8016
  br i1 %2, label %3, label %4, !dbg !8017

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !8018
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !8020
  br label %4, !dbg !8021

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !8022
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8023
  %6 = and i32 %5, -196609, !dbg !8023
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8023
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8024
  %8 = and i32 %7, -251658241, !dbg !8024
  %9 = or i32 %8, 117440512, !dbg !8024
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8024
  tail call void @config_pll_sysclock() #26, !dbg !8025
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !8026
  br label %10, !dbg !8027

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !8028
  %12 = icmp eq i32 %11, 1, !dbg !8029
  br i1 %12, label %13, label %10, !dbg !8027, !llvm.loop !8030

13:                                               ; preds = %10
  ret void, !dbg !8032
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8033 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8035, metadata !DIExpression()), !dbg !8036
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8037
  %2 = and i32 %1, -241, !dbg !8037
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8037
  ret void, !dbg !8038
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8041, metadata !DIExpression()), !dbg !8042
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8043
  %3 = and i32 %2, -4, !dbg !8043
  %4 = or i32 %3, %0, !dbg !8043
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8043
  ret void, !dbg !8044
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8045 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8046
  %2 = and i32 %1, 12, !dbg !8046
  ret i32 %2, !dbg !8047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8048 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !8050, metadata !DIExpression()), !dbg !8051
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8052
  %2 = and i32 %1, -7169, !dbg !8052
  %3 = or i32 %2, 5120, !dbg !8052
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8052
  ret void, !dbg !8053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8054 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8056, metadata !DIExpression()), !dbg !8057
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8058
  %2 = and i32 %1, -57345, !dbg !8058
  %3 = or i32 %2, 32768, !dbg !8058
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8058
  ret void, !dbg !8059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8060 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8061
  %2 = icmp eq i32 %1, 1, !dbg !8063
  br i1 %2, label %7, label %3, !dbg !8064

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !8065
  br label %4, !dbg !8067

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8068
  %6 = icmp eq i32 %5, 1, !dbg !8069
  br i1 %6, label %7, label %4, !dbg !8067, !llvm.loop !8070

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #27, !dbg !8072
  br label %8, !dbg !8073

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8074
  %10 = icmp eq i32 %9, 0, !dbg !8075
  br i1 %10, label %11, label %8, !dbg !8073, !llvm.loop !8076

11:                                               ; preds = %8
  ret void, !dbg !8078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8079 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8080
  %2 = and i32 %1, -16777217, !dbg !8080
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8080
  ret void, !dbg !8081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8082 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8083
  %2 = or i32 %1, 16777216, !dbg !8083
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8083
  ret void, !dbg !8084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8085 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8086
  %2 = lshr i32 %1, 25, !dbg !8087
  %3 = and i32 %2, 1, !dbg !8087
  ret i32 %3, !dbg !8088
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8089 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8090
  %2 = lshr i32 %1, 1, !dbg !8091
  %3 = and i32 %2, 1, !dbg !8091
  ret i32 %3, !dbg !8092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8093 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8094
  %2 = or i32 %1, 1, !dbg !8094
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8094
  ret void, !dbg !8095
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8096 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8097
  %2 = and i32 %1, -262145, !dbg !8097
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8097
  ret void, !dbg !8098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8099 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8100
  %2 = or i32 %1, 65536, !dbg !8100
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8100
  ret void, !dbg !8101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8102 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8103
  %2 = lshr i32 %1, 17, !dbg !8104
  %3 = and i32 %2, 1, !dbg !8104
  ret i32 %3, !dbg !8105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8106 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8107
  %2 = or i32 %1, 1, !dbg !8107
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8107
  ret void, !dbg !8108
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8109 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8110
  %2 = lshr i32 %1, 1, !dbg !8111
  %3 = and i32 %2, 1, !dbg !8111
  ret i32 %3, !dbg !8112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8113 {
  ret i32 12000000, !dbg !8115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8119 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !8120
  ret void, !dbg !8121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8122 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8126, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.value(metadata i32 12, metadata !8127, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.value(metadata i32 336, metadata !8128, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.value(metadata i32 0, metadata !8129, metadata !DIExpression()), !dbg !8130
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8131
  %2 = and i32 %1, -4227072, !dbg !8131
  %3 = or i32 %2, 4215820, !dbg !8131
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8131
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8132
  %5 = and i32 %4, -196609, !dbg !8132
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8132
  ret void, !dbg !8133
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8134 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !8135
  ret void, !dbg !8136
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8137 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8140, metadata !DIExpression()), !dbg !8142
  %2 = bitcast i32* %1 to i8*, !dbg !8143
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8143
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8141, metadata !DIExpression()), !dbg !8144
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8145
  %4 = or i32 %3, 268435456, !dbg !8145
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8145
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8146
  %6 = and i32 %5, 268435456, !dbg !8146
  store volatile i32 %6, i32* %1, align 4, !dbg !8147
  %7 = load volatile i32, i32* %1, align 4, !dbg !8148
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8149
  ret void, !dbg !8149
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8150 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8152, metadata !DIExpression()), !dbg !8153
  %2 = tail call fastcc zeroext i1 @device_is_ready() #27, !dbg !8154
  br i1 %2, label %3, label %4, !dbg !8156

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !8157
  br label %4, !dbg !8158

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8153
  ret i32 %5, !dbg !8159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8160 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8165, metadata !DIExpression()), !dbg !8166
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8167, !srcloc !8169
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #27, !dbg !8170
  ret i1 %1, !dbg !8171
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8172 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8173
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8174
  ret void, !dbg !8175
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8178, metadata !DIExpression()), !dbg !8179
  %2 = icmp eq i32 %0, 10, !dbg !8180
  br i1 %2, label %3, label %4, !dbg !8182

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8183
  br label %4, !dbg !8185

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8186
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !8187
  ret i32 %0, !dbg !8188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8189 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8192, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i8 %0, metadata !8193, metadata !DIExpression()), !dbg !8194
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8195, !srcloc !8197
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !8198
  ret void, !dbg !8199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8200 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8202, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i8 %0, metadata !8203, metadata !DIExpression()), !dbg !8205
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8206
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8204, metadata !DIExpression()), !dbg !8205
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8207
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8207
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #26, !dbg !8208
  ret void, !dbg !8209
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8210 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8212, metadata !DIExpression()), !dbg !8213
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8214
  ret i1 %1, !dbg !8215
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !8216 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8220, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8221, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8222, metadata !DIExpression()), !dbg !8223
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !8224
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !8225
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8226
  tail call fastcc void @console_input_init() #27, !dbg !8227
  ret void, !dbg !8228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !8229 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8232
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8233
  tail call fastcc void @uart_irq_tx_disable() #27, !dbg !8234
  tail call fastcc void @uart_irq_callback_set() #27, !dbg !8235
  %2 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8236
  %3 = icmp eq i32 %2, 0, !dbg !8237
  br i1 %3, label %8, label %4, !dbg !8237

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !8231, metadata !DIExpression(DW_OP_deref)), !dbg !8238
  %5 = call fastcc i32 @uart_fifo_read(i8* noundef nonnull %1) #27, !dbg !8239
  %6 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8236
  %7 = icmp eq i32 %6, 0, !dbg !8237
  br i1 %7, label %8, label %4, !dbg !8237, !llvm.loop !8241

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable() #27, !dbg !8243
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8244
  ret void, !dbg !8244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable() unnamed_addr #1 !dbg !8245 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8247, metadata !DIExpression()), !dbg !8248
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8249, !srcloc !8251
  tail call fastcc void @z_impl_uart_irq_rx_disable() #27, !dbg !8252
  ret void, !dbg !8253
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable() unnamed_addr #1 !dbg !8254 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8256, metadata !DIExpression()), !dbg !8257
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8258, !srcloc !8260
  tail call fastcc void @z_impl_uart_irq_tx_disable() #27, !dbg !8261
  ret void, !dbg !8262
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !8263 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8267, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8268, metadata !DIExpression()), !dbg !8269
  tail call fastcc void @uart_irq_callback_user_data_set() #27, !dbg !8270
  ret void, !dbg !8271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !8272 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8274, metadata !DIExpression()), !dbg !8276
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8277
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8275, metadata !DIExpression()), !dbg !8276
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !8278
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8278
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8280
  br i1 %4, label %7, label %5, !dbg !8281

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8282
  br label %7, !dbg !8283

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8276
  ret i32 %8, !dbg !8284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !8285 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8287, metadata !DIExpression()), !dbg !8291
  call void @llvm.dbg.value(metadata i8* %0, metadata !8288, metadata !DIExpression()), !dbg !8291
  call void @llvm.dbg.value(metadata i32 1, metadata !8289, metadata !DIExpression()), !dbg !8291
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8292
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8290, metadata !DIExpression()), !dbg !8291
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !8293
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !8293
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !8295
  br i1 %5, label %8, label %6, !dbg !8296

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8* noundef %0, i32 noundef 1) #26, !dbg !8297
  br label %8, !dbg !8298

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !8291
  ret i32 %9, !dbg !8299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !8300 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8302, metadata !DIExpression()), !dbg !8303
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8304, !srcloc !8306
  tail call fastcc void @z_impl_uart_irq_rx_enable() #27, !dbg !8307
  ret void, !dbg !8308
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !8309 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8311, metadata !DIExpression()), !dbg !8313
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8314
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8312, metadata !DIExpression()), !dbg !8313
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !8315
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8315
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8317
  br i1 %4, label %6, label %5, !dbg !8318

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8319
  br label %6, !dbg !8321

6:                                                ; preds = %5, %0
  ret void, !dbg !8322
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1093 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1095, metadata !DIExpression()), !dbg !8323
  call void @llvm.dbg.value(metadata i8* %1, metadata !1096, metadata !DIExpression()), !dbg !8323
  %4 = call fastcc i32 @uart_irq_update() #27, !dbg !8324
  %5 = icmp eq i32 %4, 0, !dbg !8324
  br i1 %5, label %89, label %6, !dbg !8325

6:                                                ; preds = %2, %86
  %7 = call fastcc i32 @uart_irq_is_pending() #27, !dbg !8326
  %8 = icmp eq i32 %7, 0, !dbg !8325
  br i1 %8, label %89, label %9, !dbg !8327

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8328
  %10 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8329
  %11 = icmp eq i32 %10, 0, !dbg !8329
  br i1 %11, label %86, label %12, !dbg !8331, !llvm.loop !8332

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1097, metadata !DIExpression(DW_OP_deref)), !dbg !8334
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #27, !dbg !8335
  call void @llvm.dbg.value(metadata i32 %13, metadata !1099, metadata !DIExpression()), !dbg !8334
  %14 = icmp slt i32 %13, 0, !dbg !8336
  br i1 %14, label %85, label %15, !dbg !8338

15:                                               ; preds = %12
  %16 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8339
  %17 = icmp eq %struct.console_input* %16, null, !dbg !8339
  br i1 %17, label %18, label %23, !dbg !8340

18:                                               ; preds = %15
  %19 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !8341
  %20 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %19, i32 0, i32 0, !dbg !8341
  %21 = call fastcc i8* @k_queue_get.48(%struct.k_queue* noundef %20) #27, !dbg !8341
  call void @llvm.dbg.value(metadata i8* %21, metadata !1100, metadata !DIExpression()), !dbg !8342
  store i8* %21, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8343
  %22 = icmp eq i8* %21, null, !dbg !8344
  br i1 %22, label %85, label %23, !dbg !8346

23:                                               ; preds = %18, %15
  %24 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #27, !dbg !8347
  br i1 %24, label %25, label %29, !dbg !8349

25:                                               ; preds = %23
  %26 = load i8, i8* %3, align 1, !dbg !8350
  call void @llvm.dbg.value(metadata i8 %26, metadata !1097, metadata !DIExpression()), !dbg !8334
  %27 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8352
  %28 = getelementptr inbounds %struct.console_input, %struct.console_input* %27, i32 0, i32 2, i32 0, !dbg !8352
  call fastcc void @handle_ansi(i8 noundef zeroext %26, i8* noundef nonnull %28) #27, !dbg !8353
  br label %86, !dbg !8354, !llvm.loop !8332

29:                                               ; preds = %23
  %30 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #27, !dbg !8355
  %31 = load i8, i8* %3, align 1, !dbg !8334
  call void @llvm.dbg.value(metadata i8 %31, metadata !1097, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i8 %31, metadata !1097, metadata !DIExpression()), !dbg !8334
  br i1 %30, label %32, label %35, !dbg !8357

32:                                               ; preds = %29
  %33 = icmp eq i8 %31, 91, !dbg !8358
  br i1 %33, label %34, label %86, !dbg !8361, !llvm.loop !8332

34:                                               ; preds = %32
  call fastcc void @atomic_set_bit(i32 noundef 1) #27, !dbg !8362
  call fastcc void @atomic_set_bit(i32 noundef 2) #27, !dbg !8364
  br label %86, !dbg !8365, !llvm.loop !8332

35:                                               ; preds = %29
  %36 = zext i8 %31 to i32, !dbg !8366
  %37 = call fastcc i32 @isprint(i32 noundef %36) #27, !dbg !8368
  %38 = icmp eq i32 %37, 0, !dbg !8368
  br i1 %38, label %39, label %74, !dbg !8369

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i8 undef, metadata !1097, metadata !DIExpression()), !dbg !8334
  switch i8 %31, label %86 [
    i8 8, label %40
    i8 127, label %40
    i8 27, label %49
    i8 13, label %50
    i8 9, label %61
  ], !dbg !8370, !llvm.loop !8332

40:                                               ; preds = %39, %39
  %41 = load i8, i8* @cur, align 1, !dbg !8372
  %42 = icmp eq i8 %41, 0, !dbg !8375
  br i1 %42, label %86, label %43, !dbg !8376, !llvm.loop !8332

43:                                               ; preds = %40
  %44 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8377
  %45 = add i8 %41, -1, !dbg !8379
  store i8 %45, i8* @cur, align 1, !dbg !8379
  %46 = zext i8 %45 to i32, !dbg !8377
  %47 = getelementptr inbounds %struct.console_input, %struct.console_input* %44, i32 0, i32 2, i32 %46, !dbg !8377
  %48 = load i8, i8* @end, align 1, !dbg !8380
  call fastcc void @del_char(i8* noundef nonnull %47, i8 noundef zeroext %48) #27, !dbg !8381
  br label %86, !dbg !8382, !llvm.loop !8332

49:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 0) #27, !dbg !8383
  br label %86, !dbg !8384, !llvm.loop !8332

50:                                               ; preds = %39
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8385
  %52 = load i8, i8* @cur, align 1, !dbg !8386
  %53 = zext i8 %52 to i32, !dbg !8386
  %54 = load i8, i8* @end, align 1, !dbg !8387
  %55 = zext i8 %54 to i32, !dbg !8387
  %56 = add nuw nsw i32 %55, %53, !dbg !8388
  %57 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %56, !dbg !8385
  store i8 0, i8* %57, align 1, !dbg !8389
  call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8390
  call fastcc void @uart_poll_out(i8 noundef zeroext 10) #27, !dbg !8391
  store i8 0, i8* @cur, align 1, !dbg !8392
  store i8 0, i8* @end, align 1, !dbg !8393
  %58 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !8394
  %59 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %58, i32 0, i32 0, !dbg !8394
  %60 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8394
  call void @k_queue_append(%struct.k_queue* noundef %59, i8* noundef %60) #26, !dbg !8394
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8396
  br label %86, !dbg !8397, !llvm.loop !8332

61:                                               ; preds = %39
  %62 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8398
  %63 = icmp eq i8 (i8*, i8)* %62, null, !dbg !8398
  %64 = load i8, i8* @end, align 1
  %65 = icmp ne i8 %64, 0
  %66 = select i1 %63, i1 true, i1 %65, !dbg !8400
  br i1 %66, label %86, label %67, !dbg !8400, !llvm.loop !8332

67:                                               ; preds = %61
  %68 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8401
  %69 = getelementptr inbounds %struct.console_input, %struct.console_input* %68, i32 0, i32 2, i32 0, !dbg !8401
  %70 = load i8, i8* @cur, align 1, !dbg !8403
  %71 = call zeroext i8 %62(i8* noundef nonnull %69, i8 noundef zeroext %70) #26, !dbg !8404
  %72 = load i8, i8* @cur, align 1, !dbg !8405
  %73 = add i8 %72, %71, !dbg !8405
  store i8 %73, i8* @cur, align 1, !dbg !8405
  br label %86, !dbg !8406, !llvm.loop !8332

74:                                               ; preds = %35
  %75 = load i8, i8* @cur, align 1, !dbg !8407
  %76 = zext i8 %75 to i32, !dbg !8407
  %77 = load i8, i8* @end, align 1, !dbg !8409
  %78 = zext i8 %77 to i32, !dbg !8409
  %79 = add nuw nsw i32 %78, %76, !dbg !8410
  %80 = icmp ult i32 %79, 127, !dbg !8411
  br i1 %80, label %81, label %86, !dbg !8412

81:                                               ; preds = %74
  %82 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8413
  %83 = add i8 %75, 1, !dbg !8415
  store i8 %83, i8* @cur, align 1, !dbg !8415
  %84 = getelementptr inbounds %struct.console_input, %struct.console_input* %82, i32 0, i32 2, i32 %76, !dbg !8413
  call void @llvm.dbg.value(metadata i8 %31, metadata !1097, metadata !DIExpression()), !dbg !8334
  call fastcc void @insert_char(i8* noundef nonnull %84, i8 noundef zeroext %31, i8 noundef zeroext %77) #27, !dbg !8416
  br label %86, !dbg !8417

85:                                               ; preds = %12, %18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8333
  br label %89

86:                                               ; preds = %74, %81, %49, %50, %43, %40, %67, %61, %39, %32, %34, %9, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8333
  %87 = call fastcc i32 @uart_irq_update() #27, !dbg !8324
  %88 = icmp eq i32 %87, 0, !dbg !8324
  br i1 %88, label %89, label %6, !dbg !8325

89:                                               ; preds = %6, %86, %2, %85
  ret void, !dbg !8418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !8419 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8421, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8422, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata i8* null, metadata !8423, metadata !DIExpression()), !dbg !8425
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8426
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8424, metadata !DIExpression()), !dbg !8425
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !8427
  br i1 %2, label %8, label %3, !dbg !8429

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !8430
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !8430
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !8431
  br i1 %6, label %8, label %7, !dbg !8432

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_45, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #26, !dbg !8433
  br label %8, !dbg !8435

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !8436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !8437 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8439, metadata !DIExpression()), !dbg !8440
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8441, !srcloc !8443
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #27, !dbg !8444
  ret i32 %1, !dbg !8445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !8446 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8448, metadata !DIExpression()), !dbg !8449
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8450, !srcloc !8452
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #27, !dbg !8453
  ret i32 %1, !dbg !8454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !8455 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8459, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i8* %0, metadata !8460, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i32 1, metadata !8461, metadata !DIExpression()), !dbg !8463
  %2 = tail call fastcc i32 @uart_fifo_read(i8* noundef %0) #27, !dbg !8464
  call void @llvm.dbg.value(metadata i32 %2, metadata !8462, metadata !DIExpression()), !dbg !8463
  %3 = icmp slt i32 %2, 0, !dbg !8465
  br i1 %3, label %4, label %5, !dbg !8467

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8468
  br label %5, !dbg !8470

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !8463
  ret i32 %6, !dbg !8471
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get.48(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !8472 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8482, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !8481, metadata !DIExpression()), !dbg !8483
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8484, !srcloc !8486
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #26, !dbg !8487
  ret i8* %2, !dbg !8488
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !8489 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8495, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.value(metadata i32 %0, metadata !8496, metadata !DIExpression()), !dbg !8499
  %2 = tail call fastcc i32 @atomic_get() #27, !dbg !8500
  call void @llvm.dbg.value(metadata i32 %2, metadata !8497, metadata !DIExpression()), !dbg !8499
  %3 = and i32 %0, 31, !dbg !8501
  %4 = shl nuw i32 1, %3, !dbg !8502
  %5 = and i32 %2, %4, !dbg !8502
  %6 = icmp ne i32 %5, 0, !dbg !8502
  ret i1 %6, !dbg !8503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !8504 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8508, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata i8* %1, metadata !8509, metadata !DIExpression()), !dbg !8511
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #27, !dbg !8512
  br i1 %3, label %4, label %11, !dbg !8514

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !8515
  %6 = tail call fastcc i32 @isdigit.50(i32 noundef %5) #27, !dbg !8518
  %7 = icmp eq i32 %6, 0, !dbg !8518
  br i1 %7, label %8, label %9, !dbg !8519

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !8520
  br label %34, !dbg !8522

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #27, !dbg !8523
  %10 = add nsw i32 %5, -48, !dbg !8524
  store i32 %10, i32* @ansi_val, align 4, !dbg !8525
  store i32 0, i32* @ansi_val_2, align 4, !dbg !8526
  br label %81, !dbg !8527

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #27, !dbg !8528
  br i1 %12, label %13, label %34, !dbg !8530

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !8531
  %15 = tail call fastcc i32 @isdigit.50(i32 noundef %14) #27, !dbg !8534
  %16 = icmp eq i32 %15, 0, !dbg !8534
  br i1 %16, label %29, label %17, !dbg !8535

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #27, !dbg !8536
  br i1 %18, label %19, label %24, !dbg !8539

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !8540
  %21 = mul i32 %20, 10, !dbg !8540
  %22 = add nsw i32 %14, -48, !dbg !8542
  %23 = add i32 %22, %21, !dbg !8543
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !8543
  br label %81, !dbg !8544

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !8545
  %26 = mul i32 %25, 10, !dbg !8545
  %27 = add nsw i32 %14, -48, !dbg !8547
  %28 = add i32 %27, %26, !dbg !8548
  store i32 %28, i32* @ansi_val, align 4, !dbg !8548
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !8549
  br i1 %30, label %31, label %33, !dbg !8551

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #27, !dbg !8552
  br i1 %32, label %33, label %81, !dbg !8553

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #27, !dbg !8554
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #27, !dbg !8555
  br label %34, !dbg !8556

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !8510), !dbg !8557
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !8558

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !8559
  %37 = load i8, i8* @cur, align 1, !dbg !8562
  %38 = zext i8 %37 to i32, !dbg !8562
  %39 = icmp ugt i32 %36, %38, !dbg !8563
  br i1 %39, label %80, label %40, !dbg !8564

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !8565
  %42 = trunc i32 %36 to i8, !dbg !8565
  %43 = add i8 %41, %42, !dbg !8565
  store i8 %43, i8* @end, align 1, !dbg !8565
  %44 = sub i8 %37, %42, !dbg !8566
  store i8 %44, i8* @cur, align 1, !dbg !8566
  tail call fastcc void @cursor_backward(i32 noundef %36) #27, !dbg !8567
  br label %80, !dbg !8568

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !8569
  %47 = load i8, i8* @end, align 1, !dbg !8571
  %48 = zext i8 %47 to i32, !dbg !8571
  %49 = icmp ugt i32 %46, %48, !dbg !8572
  br i1 %49, label %80, label %50, !dbg !8573

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !8574
  %52 = sub i8 %47, %51, !dbg !8574
  store i8 %52, i8* @end, align 1, !dbg !8574
  %53 = load i8, i8* @cur, align 1, !dbg !8575
  %54 = add i8 %53, %51, !dbg !8575
  store i8 %54, i8* @cur, align 1, !dbg !8575
  tail call fastcc void @cursor_forward(i32 noundef %46) #27, !dbg !8576
  br label %80, !dbg !8577

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !8578
  %57 = icmp eq i8 %56, 0, !dbg !8578
  br i1 %57, label %80, label %58, !dbg !8580

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !8581
  tail call fastcc void @cursor_backward(i32 noundef %59) #27, !dbg !8582
  %60 = load i8, i8* @cur, align 1, !dbg !8583
  %61 = load i8, i8* @end, align 1, !dbg !8584
  %62 = add i8 %61, %60, !dbg !8584
  store i8 %62, i8* @end, align 1, !dbg !8584
  store i8 0, i8* @cur, align 1, !dbg !8585
  br label %80, !dbg !8586

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !8587
  %65 = icmp eq i8 %64, 0, !dbg !8587
  br i1 %65, label %80, label %66, !dbg !8589

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !8590
  tail call fastcc void @cursor_forward(i32 noundef %67) #27, !dbg !8591
  %68 = load i8, i8* @end, align 1, !dbg !8592
  %69 = load i8, i8* @cur, align 1, !dbg !8593
  %70 = add i8 %69, %68, !dbg !8593
  store i8 %70, i8* @cur, align 1, !dbg !8593
  store i8 0, i8* @end, align 1, !dbg !8594
  br label %80, !dbg !8595

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !8596
  %73 = icmp eq i8 %72, 0, !dbg !8596
  br i1 %73, label %80, label %74, !dbg !8598

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #27, !dbg !8599
  %75 = load i8, i8* @cur, align 1, !dbg !8600
  %76 = zext i8 %75 to i32, !dbg !8601
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !8601
  %78 = load i8, i8* @end, align 1, !dbg !8602
  %79 = add i8 %78, -1, !dbg !8602
  store i8 %79, i8* @end, align 1, !dbg !8602
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #27, !dbg !8603
  br label %80, !dbg !8604

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #27, !dbg !8605
  br label %81, !dbg !8606

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !8606
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8607 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8612, metadata !DIExpression()), !dbg !8616
  call void @llvm.dbg.value(metadata i32 %0, metadata !8613, metadata !DIExpression()), !dbg !8616
  %2 = and i32 %0, 31, !dbg !8617
  %3 = shl nuw i32 1, %2, !dbg !8617
  call void @llvm.dbg.value(metadata i32 %3, metadata !8614, metadata !DIExpression()), !dbg !8616
  %4 = xor i32 %3, -1, !dbg !8618
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8619
  call void @llvm.dbg.value(metadata i32 %5, metadata !8615, metadata !DIExpression()), !dbg !8616
  %6 = and i32 %5, %3, !dbg !8620
  %7 = icmp ne i32 %6, 0, !dbg !8621
  ret i1 %7, !dbg !8622
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !8623 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8627, metadata !DIExpression()), !dbg !8630
  call void @llvm.dbg.value(metadata i32 %0, metadata !8628, metadata !DIExpression()), !dbg !8630
  %2 = and i32 %0, 31, !dbg !8631
  %3 = shl nuw i32 1, %2, !dbg !8631
  call void @llvm.dbg.value(metadata i32 %3, metadata !8629, metadata !DIExpression()), !dbg !8630
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #27, !dbg !8632
  ret void, !dbg !8633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !8634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8636, metadata !DIExpression()), !dbg !8637
  %2 = add i32 %0, -32, !dbg !8638
  %3 = icmp ult i32 %2, 95, !dbg !8638
  %4 = zext i1 %3 to i32, !dbg !8638
  ret i32 %4, !dbg !8639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8640 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8644, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8 %1, metadata !8645, metadata !DIExpression()), !dbg !8646
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8647
  %3 = icmp eq i8 %1, 0, !dbg !8648
  br i1 %3, label %4, label %5, !dbg !8650

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8651
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8653
  br label %14, !dbg !8654

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #27, !dbg !8655
  call void @llvm.dbg.value(metadata i8 %1, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8* %0, metadata !8644, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8 %1, metadata !8645, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8646
  br label %6, !dbg !8656

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8* %8, metadata !8644, metadata !DIExpression()), !dbg !8646
  %9 = add i8 %7, -1, !dbg !8657
  call void @llvm.dbg.value(metadata i8 %9, metadata !8645, metadata !DIExpression()), !dbg !8646
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8658
  %11 = load i8, i8* %10, align 1, !dbg !8660
  store i8 %11, i8* %8, align 1, !dbg !8661
  call void @llvm.dbg.value(metadata i8* %10, metadata !8644, metadata !DIExpression()), !dbg !8646
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %11) #27, !dbg !8662
  call void @llvm.dbg.value(metadata i8 %9, metadata !8645, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8646
  %12 = icmp eq i8 %9, 0, !dbg !8663
  br i1 %12, label %13, label %6, !dbg !8656, !llvm.loop !8664

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8666
  tail call fastcc void @cursor_restore() #27, !dbg !8667
  br label %14, !dbg !8668

14:                                               ; preds = %13, %4
  ret void, !dbg !8668
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !8669 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8673, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8 %1, metadata !8674, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8 %2, metadata !8675, metadata !DIExpression()), !dbg !8677
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %1) #27, !dbg !8678
  %4 = icmp eq i8 %2, 0, !dbg !8679
  br i1 %4, label %5, label %6, !dbg !8681

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !8682
  br label %17, !dbg !8684

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !8685
  call void @llvm.dbg.value(metadata i8 %7, metadata !8676, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8* %0, metadata !8673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8677
  store i8 %1, i8* %0, align 1, !dbg !8686
  tail call fastcc void @cursor_save() #27, !dbg !8687
  call void @llvm.dbg.value(metadata i8 %7, metadata !8676, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8 %2, metadata !8675, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8* %0, metadata !8673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8677
  call void @llvm.dbg.value(metadata i8 %2, metadata !8675, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8677
  br label %8, !dbg !8688

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8677
  call void @llvm.dbg.value(metadata i8 %10, metadata !8676, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8 %11, metadata !8675, metadata !DIExpression()), !dbg !8677
  %13 = add i8 %11, -1, !dbg !8689
  call void @llvm.dbg.value(metadata i8 %13, metadata !8675, metadata !DIExpression()), !dbg !8677
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %10) #27, !dbg !8690
  %14 = load i8, i8* %12, align 1, !dbg !8692
  call void @llvm.dbg.value(metadata i8 %14, metadata !8674, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8* %12, metadata !8673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8677
  store i8 %10, i8* %12, align 1, !dbg !8693
  call void @llvm.dbg.value(metadata i8 %14, metadata !8676, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8* %12, metadata !8673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8677
  call void @llvm.dbg.value(metadata i8 %13, metadata !8675, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8677
  %15 = icmp eq i8 %13, 0, !dbg !8694
  br i1 %15, label %16, label %8, !dbg !8688, !llvm.loop !8695

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #27, !dbg !8697
  br label %17, !dbg !8698

17:                                               ; preds = %16, %5
  ret void, !dbg !8698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !8699 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.49, i32 0, i32 0)) #26, !dbg !8700
  ret void, !dbg !8701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !8702 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #26, !dbg !8703
  ret void, !dbg !8704
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !8705 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8710, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i32 %0, metadata !8711, metadata !DIExpression()), !dbg !8712
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8713
  ret i32 %2, !dbg !8714
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !8715 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8717, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i32 %0, metadata !8718, metadata !DIExpression()), !dbg !8719
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8720
  ret i32 %2, !dbg !8721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.50(i32 noundef %0) unnamed_addr #11 !dbg !8722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8724, metadata !DIExpression()), !dbg !8725
  %2 = add i32 %0, -48, !dbg !8726
  %3 = icmp ult i32 %2, 10, !dbg !8727
  %4 = zext i1 %3 to i32, !dbg !8727
  ret i32 %4, !dbg !8728
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !8729 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8731, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i32 4, metadata !8732, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i32 16, metadata !8733, metadata !DIExpression()), !dbg !8735
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #27, !dbg !8736
  call void @llvm.dbg.value(metadata i32 %1, metadata !8734, metadata !DIExpression()), !dbg !8735
  %2 = and i32 %1, 16, !dbg !8737
  %3 = icmp ne i32 %2, 0, !dbg !8738
  ret i1 %3, !dbg !8739
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8740 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8742, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.value(metadata i32 %0, metadata !8743, metadata !DIExpression()), !dbg !8745
  %2 = and i32 %0, 31, !dbg !8746
  %3 = shl nuw i32 1, %2, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %3, metadata !8744, metadata !DIExpression()), !dbg !8745
  %4 = xor i32 %3, -1, !dbg !8747
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8748
  ret void, !dbg !8749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !8750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8752, metadata !DIExpression()), !dbg !8753
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i32 noundef %0) #26, !dbg !8754
  ret void, !dbg !8755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !8756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8758, metadata !DIExpression()), !dbg !8759
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.51, i32 0, i32 0), i32 noundef %0) #26, !dbg !8760
  ret void, !dbg !8761
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !8762 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8766, metadata !DIExpression()), !dbg !8767
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !8768
  ret i32 %1, !dbg !8769
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !8770 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8772, metadata !DIExpression()), !dbg !8774
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8775
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8773, metadata !DIExpression()), !dbg !8774
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !8776
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8776
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8778
  br i1 %4, label %7, label %5, !dbg !8779

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8780
  br label %7, !dbg !8781

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8774
  ret i32 %8, !dbg !8782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !8783 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8785, metadata !DIExpression()), !dbg !8787
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8788
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8786, metadata !DIExpression()), !dbg !8787
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !8789
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8789
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8791
  br i1 %4, label %7, label %5, !dbg !8792

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8793
  br label %7, !dbg !8794

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8787
  ret i32 %8, !dbg !8795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable() unnamed_addr #1 !dbg !8796 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8798, metadata !DIExpression()), !dbg !8800
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8801
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8799, metadata !DIExpression()), !dbg !8800
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !8802
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8802
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8804
  br i1 %4, label %6, label %5, !dbg !8805

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8806
  br label %6, !dbg !8808

6:                                                ; preds = %5, %0
  ret void, !dbg !8809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable() unnamed_addr #1 !dbg !8810 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8812, metadata !DIExpression()), !dbg !8814
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8815
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8813, metadata !DIExpression()), !dbg !8814
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !8816
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8816
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8818
  br i1 %4, label %6, label %5, !dbg !8819

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #26, !dbg !8820
  br label %6, !dbg !8822

6:                                                ; preds = %5, %0
  ret void, !dbg !8823
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8824 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8826, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.value(metadata i8 %1, metadata !8827, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.value(metadata i32 %2, metadata !8828, metadata !DIExpression()), !dbg !8831
  %5 = bitcast i32* %4 to i8*, !dbg !8832
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8832
  call void @llvm.dbg.value(metadata i32* %4, metadata !8830, metadata !DIExpression(DW_OP_deref)), !dbg !8831
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !8833
  call void @llvm.dbg.value(metadata i32 %6, metadata !8829, metadata !DIExpression()), !dbg !8831
  %7 = icmp eq i32 %6, 0, !dbg !8834
  br i1 %7, label %8, label %31, !dbg !8836

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8829, metadata !DIExpression()), !dbg !8831
  %9 = and i32 %2, 131072, !dbg !8837
  %10 = icmp eq i32 %9, 0, !dbg !8839
  br i1 %10, label %28, label %11, !dbg !8840

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8841
  %13 = icmp eq i32 %12, 0, !dbg !8844
  br i1 %13, label %18, label %14, !dbg !8845

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8846
  %16 = shl nuw i32 1, %15, !dbg !8846
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !8848
  br label %25, !dbg !8849

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8850
  %20 = icmp eq i32 %19, 0, !dbg !8852
  %21 = zext i8 %1 to i32, !dbg !8831
  br i1 %20, label %25, label %22, !dbg !8853

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8854
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !8856
  br label %25, !dbg !8857

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8858
  %27 = load i32, i32* %4, align 4, !dbg !8859
  call void @llvm.dbg.value(metadata i32 %30, metadata !8830, metadata !DIExpression()), !dbg !8831
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !8860
  br label %31, !dbg !8861

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8858
  %30 = load i32, i32* %4, align 4, !dbg !8859
  call void @llvm.dbg.value(metadata i32 %30, metadata !8830, metadata !DIExpression()), !dbg !8831
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !8860
  call void @llvm.dbg.value(metadata i32 0, metadata !8829, metadata !DIExpression()), !dbg !8831
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8862
  ret i32 %6, !dbg !8862
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8863 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8867, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata i32* %1, metadata !8868, metadata !DIExpression()), !dbg !8872
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8873
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8873
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8873
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8869, metadata !DIExpression()), !dbg !8872
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8874
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8874
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8874
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8871, metadata !DIExpression()), !dbg !8872
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !8875
  store i32 %9, i32* %1, align 4, !dbg !8876
  ret i32 0, !dbg !8877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8878 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8880, metadata !DIExpression()), !dbg !8886
  call void @llvm.dbg.value(metadata i32 %1, metadata !8881, metadata !DIExpression()), !dbg !8886
  call void @llvm.dbg.value(metadata i32 %2, metadata !8882, metadata !DIExpression()), !dbg !8886
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8887
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8887
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8887
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8883, metadata !DIExpression()), !dbg !8886
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8888
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8888
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8888
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8884, metadata !DIExpression()), !dbg !8886
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !8889
  call void @llvm.dbg.value(metadata i32 %10, metadata !8885, metadata !DIExpression()), !dbg !8886
  %11 = xor i32 %1, -1, !dbg !8890
  %12 = and i32 %10, %11, !dbg !8891
  %13 = and i32 %2, %1, !dbg !8892
  %14 = or i32 %12, %13, !dbg !8893
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !8894
  ret i32 0, !dbg !8895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8898, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32 %1, metadata !8899, metadata !DIExpression()), !dbg !8902
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8903
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8903
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8903
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8900, metadata !DIExpression()), !dbg !8902
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8904
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8904
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8904
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8901, metadata !DIExpression()), !dbg !8902
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8905
  store volatile i32 %1, i32* %9, align 4, !dbg !8905
  ret i32 0, !dbg !8906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8907 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8909, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 %1, metadata !8910, metadata !DIExpression()), !dbg !8913
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8914
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8914
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8914
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8911, metadata !DIExpression()), !dbg !8913
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8915
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8915
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8915
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8912, metadata !DIExpression()), !dbg !8913
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !8916
  ret i32 0, !dbg !8917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8920, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %1, metadata !8921, metadata !DIExpression()), !dbg !8924
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8925
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8925
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8925
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8922, metadata !DIExpression()), !dbg !8924
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8926
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8926
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8926
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8923, metadata !DIExpression()), !dbg !8924
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8927
  %10 = load volatile i32, i32* %9, align 4, !dbg !8927
  %11 = xor i32 %10, %1, !dbg !8927
  store volatile i32 %11, i32* %9, align 4, !dbg !8927
  ret i32 0, !dbg !8928
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8929 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8931, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.value(metadata i8 %1, metadata !8932, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.value(metadata i32 %2, metadata !8933, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.value(metadata i32 %3, metadata !8934, metadata !DIExpression()), !dbg !8941
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8942
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8942
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8942
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8935, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.value(metadata i8* undef, metadata !8936, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.value(metadata i32 0, metadata !8938, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.value(metadata i32 0, metadata !8939, metadata !DIExpression()), !dbg !8941
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8943

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8944
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !8948
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8949
  %12 = load i32, i32* %11, align 4, !dbg !8949
  %13 = icmp eq i32 %10, %12, !dbg !8950
  br i1 %13, label %14, label %29, !dbg !8951

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !8952
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !8954
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !8955
  br label %29, !dbg !8956

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8957
  %17 = load i8*, i8** %16, align 4, !dbg !8957
  call void @llvm.dbg.value(metadata i8* %17, metadata !8936, metadata !DIExpression()), !dbg !8941
  %18 = zext i8 %1 to i32, !dbg !8958
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !8960
  %20 = icmp eq i32 %19, 0, !dbg !8961
  br i1 %20, label %21, label %29, !dbg !8962

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8963
  %23 = load i32, i32* %22, align 4, !dbg !8963
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !8964
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8965

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8938, metadata !DIExpression()), !dbg !8941
  br label %27, !dbg !8966

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8938, metadata !DIExpression()), !dbg !8941
  br label %27, !dbg !8968

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8938, metadata !DIExpression()), !dbg !8941
  br label %27, !dbg !8969

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8941
  call void @llvm.dbg.value(metadata i32 %28, metadata !8938, metadata !DIExpression()), !dbg !8941
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !8970
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !8971
  br label %29, !dbg !8971

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8941
  call void @llvm.dbg.value(metadata i32 %30, metadata !8939, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.label(metadata !8940), !dbg !8972
  ret i32 %30, !dbg !8973
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !8974 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8976, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8977, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i1 %2, metadata !8978, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8980
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8981
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8981
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8981
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8979, metadata !DIExpression()), !dbg !8980
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8982
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !8983
  ret i32 %8, !dbg !8984
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !8985 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8991, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8992, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata i1 %2, metadata !8993, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8994
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !8995
  br i1 %4, label %10, label %5, !dbg !8997

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8998
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #27, !dbg !9001
  %8 = or i1 %7, %2, !dbg !9002
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9002
  br i1 %2, label %11, label %13, !dbg !9002

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9003

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9004
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #27, !dbg !9007
  br label %13, !dbg !9008

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8994
  ret i32 %14, !dbg !9009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9010 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9014, metadata !DIExpression()), !dbg !9015
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9016
  %3 = icmp eq %struct._snode* %2, null, !dbg !9016
  ret i1 %3, !dbg !9016
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9017 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9021, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9022, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9023, metadata !DIExpression()), !dbg !9025
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9026
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9024, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9023, metadata !DIExpression()), !dbg !9025
  %4 = icmp eq %struct._snode* %3, null, !dbg !9028
  br i1 %4, label %15, label %5, !dbg !9026

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9024, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9023, metadata !DIExpression()), !dbg !9025
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9030
  br i1 %6, label %9, label %11, !dbg !9033

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9024, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9023, metadata !DIExpression()), !dbg !9025
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9030
  br i1 %8, label %9, label %11, !dbg !9033, !llvm.loop !9034

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !9035
  br label %15, !dbg !9035

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9024, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9023, metadata !DIExpression()), !dbg !9025
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #27, !dbg !9028
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9024, metadata !DIExpression()), !dbg !9025
  %14 = icmp eq %struct._snode* %13, null, !dbg !9028
  br i1 %14, label %15, label %7, !dbg !9026, !llvm.loop !9034

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9038 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9042, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9043, metadata !DIExpression()), !dbg !9044
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9045
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !9045
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !9045
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9046
  %5 = icmp eq %struct._snode* %4, null, !dbg !9046
  br i1 %5, label %6, label %8, !dbg !9045

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9048
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !9048
  br label %8, !dbg !9048

8:                                                ; preds = %6, %2
  ret void, !dbg !9045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9050 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9054, metadata !DIExpression()), !dbg !9055
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9056
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9056
  ret %struct._snode* %3, !dbg !9057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9058 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9062, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9063, metadata !DIExpression()), !dbg !9064
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9065
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9066
  ret void, !dbg !9067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9068 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9070, metadata !DIExpression()), !dbg !9072
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9071, metadata !DIExpression()), !dbg !9072
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9073
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9074
  ret void, !dbg !9075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9076 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9078, metadata !DIExpression()), !dbg !9079
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9080
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9080
  ret %struct._snode* %3, !dbg !9081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9082 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9084, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9085, metadata !DIExpression()), !dbg !9086
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9087
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9088
  ret void, !dbg !9089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !9090 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9094, metadata !DIExpression()), !dbg !9097
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9095, metadata !DIExpression()), !dbg !9097
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9096, metadata !DIExpression()), !dbg !9097
  %4 = icmp eq %struct._snode* %1, null, !dbg !9098
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #27, !dbg !9100
  br i1 %4, label %6, label %11, !dbg !9101

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !9102
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9104
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9104
  br i1 %8, label %9, label %15, !dbg !9102

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9106
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !9106
  br label %15, !dbg !9106

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !9108
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9110
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9110
  br i1 %13, label %14, label %15, !dbg !9108

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !9112
  br label %15, !dbg !9112

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !9101
  ret void, !dbg !9101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !9114 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9118, metadata !DIExpression()), !dbg !9119
  %2 = icmp eq %struct._snode* %0, null, !dbg !9120
  br i1 %2, label %5, label %3, !dbg !9120

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !9120
  br label %5, !dbg !9120

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9120
  ret %struct._snode* %6, !dbg !9120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9121 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9123, metadata !DIExpression()), !dbg !9124
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !9125
  ret %struct._snode* %2, !dbg !9125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9126 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9128, metadata !DIExpression()), !dbg !9129
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9130
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9130
  ret %struct._snode* %3, !dbg !9131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9134, metadata !DIExpression()), !dbg !9137
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !9138, !range !9139
  call void @llvm.dbg.value(metadata i32 %2, metadata !9135, metadata !DIExpression()), !dbg !9137
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !9140
  call void @llvm.dbg.value(metadata i32 %3, metadata !9136, metadata !DIExpression()), !dbg !9137
  ret i32 %3, !dbg !9141
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9144, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i8* %1, metadata !9145, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i8* %1, metadata !9146, metadata !DIExpression()), !dbg !9147
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9148
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9148
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9149
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9149
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9149
  %8 = shl nuw i32 1, %0, !dbg !9150
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !9151
  ret void, !dbg !9152
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9153 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9157, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32 %1, metadata !9158, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9159, metadata !DIExpression()), !dbg !9163
  %4 = bitcast i64* %3 to i8*, !dbg !9164
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9164
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9161, metadata !DIExpression()), !dbg !9163
  store i64 70368744177732, i64* %3, align 8, !dbg !9165
  call void @llvm.dbg.value(metadata i64* %3, metadata !9161, metadata !DIExpression(DW_OP_deref)), !dbg !9163
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !9166
  call void @llvm.dbg.value(metadata i32 %5, metadata !9162, metadata !DIExpression()), !dbg !9163
  %6 = icmp eq i32 %5, 0, !dbg !9167
  br i1 %6, label %7, label %8, !dbg !9169

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !9170
  br label %8, !dbg !9171

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9172
  ret void, !dbg !9172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9173 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9175, metadata !DIExpression()), !dbg !9178
  call void @llvm.dbg.value(metadata i8* %0, metadata !9176, metadata !DIExpression()), !dbg !9178
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9179
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9177, metadata !DIExpression()), !dbg !9178
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9180
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9180
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #26, !dbg !9181
  ret i32 %5, !dbg !9182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9185, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.value(metadata i32 %1, metadata !9186, metadata !DIExpression()), !dbg !9188
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !9189
  call void @llvm.dbg.value(metadata i32 %3, metadata !9187, metadata !DIExpression()), !dbg !9188
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !9190
  ret void, !dbg !9191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !9192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9196, metadata !DIExpression()), !dbg !9197
  %2 = sdiv i32 %0, 4, !dbg !9198
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9199
  %6 = add nsw i32 %5, 16, !dbg !9200
  %7 = shl i32 15, %6, !dbg !9201
  %8 = or i32 %7, %2, !dbg !9202
  ret i32 %8, !dbg !9203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9208, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.value(metadata i32 %1, metadata !9209, metadata !DIExpression()), !dbg !9210
  %3 = and i32 %1, 255, !dbg !9211
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9211
  %5 = load volatile i32, i32* %4, align 4, !dbg !9211
  %6 = lshr i32 %1, 16, !dbg !9211
  %7 = xor i32 %6, -1, !dbg !9211
  %8 = and i32 %5, %7, !dbg !9211
  call void @llvm.dbg.value(metadata i32 %6, metadata !9212, metadata !DIExpression()) #25, !dbg !9216
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9218, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %9, metadata !9215, metadata !DIExpression()) #25, !dbg !9216
  call void @llvm.dbg.value(metadata i32 %9, metadata !9220, metadata !DIExpression()) #25, !dbg !9225
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !9227, !range !3813
  %11 = shl i32 %0, %10, !dbg !9211
  %12 = or i32 %11, %8, !dbg !9211
  store volatile i32 %12, i32* %4, align 4, !dbg !9211
  ret void, !dbg !9228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9229 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9233, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9234, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata i32 %2, metadata !9235, metadata !DIExpression()), !dbg !9238
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9239
  %5 = icmp eq %struct._snode* %4, null, !dbg !9239
  br i1 %5, label %21, label %6, !dbg !9239

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #27, !dbg !9241
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9237, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9236, metadata !DIExpression()), !dbg !9238
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9242
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9242
  %11 = load i32, i32* %10, align 4, !dbg !9242
  %12 = and i32 %11, %2, !dbg !9246
  %13 = icmp eq i32 %12, 0, !dbg !9246
  br i1 %13, label %19, label %14, !dbg !9247

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9236, metadata !DIExpression()), !dbg !9238
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9248
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9248
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9248
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #26, !dbg !9250
  br label %19, !dbg !9251

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9236, metadata !DIExpression()), !dbg !9238
  %20 = icmp eq %struct._snode* %8, null, !dbg !9252
  br i1 %20, label %21, label %6, !dbg !9252

21:                                               ; preds = %19, %3
  ret void, !dbg !9253
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9256, metadata !DIExpression()), !dbg !9257
  %2 = and i32 %0, 255, !dbg !9258
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9258
  %4 = load volatile i32, i32* %3, align 4, !dbg !9258
  %5 = lshr i32 %0, 16, !dbg !9258
  %6 = and i32 %4, %5, !dbg !9258
  call void @llvm.dbg.value(metadata i32 %5, metadata !9212, metadata !DIExpression()) #25, !dbg !9259
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !9261, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %7, metadata !9215, metadata !DIExpression()) #25, !dbg !9259
  call void @llvm.dbg.value(metadata i32 %7, metadata !9220, metadata !DIExpression()) #25, !dbg !9262
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9264, !range !3813
  %9 = lshr i32 %6, %8, !dbg !9265
  ret i32 %9, !dbg !9266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9267 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9272, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata i32 %1, metadata !9273, metadata !DIExpression()), !dbg !9274
  %3 = shl i32 %1, 16, !dbg !9275
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9275
  store volatile i32 %3, i32* %4, align 4, !dbg !9275
  ret void, !dbg !9276
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9277 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9281, metadata !DIExpression()), !dbg !9282
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9283
  %3 = load volatile i32, i32* %2, align 4, !dbg !9283
  ret i32 %3, !dbg !9284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9285 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9287, metadata !DIExpression()), !dbg !9289
  call void @llvm.dbg.value(metadata i32 %1, metadata !9288, metadata !DIExpression()), !dbg !9289
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9290
  store volatile i32 %1, i32* %3, align 4, !dbg !9290
  ret void, !dbg !9291
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9292 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9294, metadata !DIExpression()), !dbg !9295
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9296
  %3 = load volatile i32, i32* %2, align 4, !dbg !9296
  ret i32 %3, !dbg !9297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !9298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9302, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.value(metadata i32* %1, metadata !9303, metadata !DIExpression()), !dbg !9304
  %3 = and i32 %0, 131072, !dbg !9305
  %4 = icmp eq i32 %3, 0, !dbg !9307
  br i1 %4, label %22, label %5, !dbg !9308

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9309
  %6 = and i32 %0, 2, !dbg !9311
  %7 = icmp eq i32 %6, 0, !dbg !9313
  br i1 %7, label %11, label %8, !dbg !9314

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9315
  %10 = icmp eq i32 %9, 0, !dbg !9315
  br i1 %10, label %33, label %11, !dbg !9318

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9319
  store i32 %12, i32* %1, align 4, !dbg !9319
  %13 = and i32 %0, 16, !dbg !9320
  %14 = icmp eq i32 %13, 0, !dbg !9322
  br i1 %14, label %17, label %15, !dbg !9323

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9324
  br label %31, !dbg !9326

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9327
  %19 = icmp eq i32 %18, 0, !dbg !9329
  br i1 %19, label %33, label %20, !dbg !9330

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9331
  br label %31, !dbg !9333

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9334
  %24 = icmp eq i32 %23, 0, !dbg !9336
  br i1 %24, label %31, label %25, !dbg !9337

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9338
  %27 = icmp eq i32 %26, 0, !dbg !9341
  br i1 %27, label %28, label %31, !dbg !9342

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9343
  br label %33, !dbg !9344

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9304
  ret i32 %34, !dbg !9344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9345 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9349, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %1, metadata !9350, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %2, metadata !9351, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %3, metadata !9352, metadata !DIExpression()), !dbg !9360
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9361
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9361
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9361
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9353, metadata !DIExpression()), !dbg !9360
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9362
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9362
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9362
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9354, metadata !DIExpression()), !dbg !9360
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !9363
  call void @llvm.dbg.value(metadata i32 %11, metadata !9355, metadata !DIExpression()), !dbg !9360
  %12 = and i32 %2, 48, !dbg !9364
  call void @llvm.dbg.value(metadata i32 %12, metadata !9356, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %2, metadata !9357, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %2, metadata !9358, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %2, metadata !9359, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9360
  %13 = lshr i32 %2, 6, !dbg !9365
  %14 = and i32 %13, 1, !dbg !9365
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !9366
  %15 = lshr i32 %2, 7, !dbg !9367
  %16 = and i32 %15, 3, !dbg !9367
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !9368
  %17 = lshr i32 %2, 9, !dbg !9369
  %18 = and i32 %17, 3, !dbg !9369
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !9370
  %19 = icmp eq i32 %12, 32, !dbg !9371
  br i1 %19, label %20, label %24, !dbg !9373

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9374
  br i1 %21, label %22, label %23, !dbg !9377

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9378
  br label %24, !dbg !9380

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9381
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9383
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !9384
  ret void, !dbg !9385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9388, metadata !DIExpression()), !dbg !9390
  %2 = shl nuw i32 1, %0, !dbg !9391
  call void @llvm.dbg.value(metadata i32 %2, metadata !9389, metadata !DIExpression()), !dbg !9390
  ret i32 %2, !dbg !9392
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9393 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9397, metadata !DIExpression()), !dbg !9400
  call void @llvm.dbg.value(metadata i32 %1, metadata !9398, metadata !DIExpression()), !dbg !9400
  call void @llvm.dbg.value(metadata i32 %2, metadata !9399, metadata !DIExpression()), !dbg !9400
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9401
  %5 = load volatile i32, i32* %4, align 4, !dbg !9401
  %6 = xor i32 %1, -1, !dbg !9401
  %7 = and i32 %5, %6, !dbg !9401
  %8 = mul i32 %2, %1, !dbg !9401
  %9 = or i32 %7, %8, !dbg !9401
  store volatile i32 %9, i32* %4, align 4, !dbg !9401
  ret void, !dbg !9402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9403 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9405, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 %1, metadata !9406, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 %2, metadata !9407, metadata !DIExpression()), !dbg !9408
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9409
  %5 = load volatile i32, i32* %4, align 4, !dbg !9409
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9410
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9412, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9410
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9413
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9415, !range !3813
  %8 = shl nuw nsw i32 %7, 1, !dbg !9409
  %9 = shl i32 3, %8, !dbg !9409
  %10 = xor i32 %9, -1, !dbg !9409
  %11 = and i32 %5, %10, !dbg !9409
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9416
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9416
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9418
  %12 = shl i32 %2, %8, !dbg !9409
  %13 = or i32 %11, %12, !dbg !9409
  store volatile i32 %13, i32* %4, align 4, !dbg !9409
  ret void, !dbg !9420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9421 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9423, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata i32 %1, metadata !9424, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata i32 %2, metadata !9425, metadata !DIExpression()), !dbg !9426
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9427
  %5 = load volatile i32, i32* %4, align 4, !dbg !9427
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9428
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9430, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9428
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9431
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9433, !range !3813
  %8 = shl nuw nsw i32 %7, 1, !dbg !9427
  %9 = shl i32 3, %8, !dbg !9427
  %10 = xor i32 %9, -1, !dbg !9427
  %11 = and i32 %5, %10, !dbg !9427
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9434
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9434
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9436
  %12 = shl i32 %2, %8, !dbg !9427
  %13 = or i32 %11, %12, !dbg !9427
  store volatile i32 %13, i32* %4, align 4, !dbg !9427
  ret void, !dbg !9438
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9439 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9441, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 %2, metadata !9443, metadata !DIExpression()), !dbg !9444
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9445
  %5 = load volatile i32, i32* %4, align 4, !dbg !9445
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9446
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9448, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9446
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9449
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9451, !range !3813
  %8 = shl nuw nsw i32 %7, 2, !dbg !9445
  %9 = shl i32 15, %8, !dbg !9445
  %10 = xor i32 %9, -1, !dbg !9445
  %11 = and i32 %5, %10, !dbg !9445
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9452
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9452
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9454
  %12 = shl i32 %2, %8, !dbg !9445
  %13 = or i32 %11, %12, !dbg !9445
  store volatile i32 %13, i32* %4, align 4, !dbg !9445
  ret void, !dbg !9456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9457 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9459, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i32 %1, metadata !9460, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i32 %2, metadata !9461, metadata !DIExpression()), !dbg !9462
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9463
  %5 = load volatile i32, i32* %4, align 4, !dbg !9463
  %6 = lshr i32 %1, 8, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %6, metadata !9212, metadata !DIExpression()) #25, !dbg !9464
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9466, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %7, metadata !9215, metadata !DIExpression()) #25, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %7, metadata !9220, metadata !DIExpression()) #25, !dbg !9467
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9469, !range !3813
  %9 = shl nuw nsw i32 %8, 2, !dbg !9463
  %10 = shl i32 15, %9, !dbg !9463
  %11 = xor i32 %10, -1, !dbg !9463
  %12 = and i32 %5, %11, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %6, metadata !9212, metadata !DIExpression()) #25, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %7, metadata !9215, metadata !DIExpression()) #25, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %7, metadata !9220, metadata !DIExpression()) #25, !dbg !9472
  %13 = shl i32 %2, %9, !dbg !9463
  %14 = or i32 %12, %13, !dbg !9463
  store volatile i32 %14, i32* %4, align 4, !dbg !9463
  ret void, !dbg !9474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9475 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9477, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.value(metadata i32 %1, metadata !9478, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.value(metadata i32 %2, metadata !9479, metadata !DIExpression()), !dbg !9480
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9481
  %5 = load volatile i32, i32* %4, align 4, !dbg !9481
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9482
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9484, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9482
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9485
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9487, !range !3813
  %8 = shl nuw nsw i32 %7, 1, !dbg !9481
  %9 = shl i32 3, %8, !dbg !9481
  %10 = xor i32 %9, -1, !dbg !9481
  %11 = and i32 %5, %10, !dbg !9481
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9488
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9488
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9490
  %12 = shl i32 %2, %8, !dbg !9481
  %13 = or i32 %11, %12, !dbg !9481
  store volatile i32 %13, i32* %4, align 4, !dbg !9481
  ret void, !dbg !9492
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9493 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9495, metadata !DIExpression()), !dbg !9498
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9499
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9499
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9499
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9496, metadata !DIExpression()), !dbg !9498
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9500
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9501
  %6 = tail call fastcc zeroext i1 @device_is_ready.59() #27, !dbg !9502
  br i1 %6, label %7, label %11, !dbg !9504

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !9505
  call void @llvm.dbg.value(metadata i32 %8, metadata !9497, metadata !DIExpression()), !dbg !9498
  %9 = icmp slt i32 %8, 0, !dbg !9506
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9508
  br label %11, !dbg !9508

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9498
  ret i32 %12, !dbg !9509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.59() unnamed_addr #1 !dbg !9510 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9514, metadata !DIExpression()), !dbg !9515
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9516, !srcloc !9518
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.60() #27, !dbg !9519
  ret i1 %1, !dbg !9520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9521 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9525, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i8 1, metadata !9526, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9527, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i32 0, metadata !9528, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9529, metadata !DIExpression()), !dbg !9530
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9531
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9531
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9531
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9527, metadata !DIExpression()), !dbg !9530
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9532
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9535
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !9536
  call void @llvm.dbg.value(metadata i32 %7, metadata !9528, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i32 %7, metadata !9528, metadata !DIExpression()), !dbg !9530
  ret i32 %7, !dbg !9537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.60() unnamed_addr #1 !dbg !9538 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9540, metadata !DIExpression()), !dbg !9541
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #26, !dbg !9542
  ret i1 %1, !dbg !9543
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9548, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata i32 %1, metadata !9549, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata i32 %2, metadata !9550, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata i32 %3, metadata !9551, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata i32 0, metadata !9552, metadata !DIExpression()), !dbg !9556
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !9557
  %5 = icmp eq i32 %3, 17, !dbg !9558
  br i1 %5, label %6, label %14, !dbg !9559

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9560
  call void @llvm.dbg.value(metadata i32 %7, metadata !9553, metadata !DIExpression()), !dbg !9561
  %8 = icmp eq i32 %7, 0, !dbg !9562
  %9 = shl nuw i32 1, %1, !dbg !9564
  br i1 %8, label %12, label %10, !dbg !9565

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9566
  br label %14, !dbg !9568

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9569
  br label %14, !dbg !9572

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9573
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9574 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9576, metadata !DIExpression()), !dbg !9580
  call void @llvm.dbg.value(metadata i8* %1, metadata !9577, metadata !DIExpression()), !dbg !9580
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9581
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9581
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9581
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9578, metadata !DIExpression()), !dbg !9580
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9582
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9582
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !9584
  %9 = icmp eq i32 %8, 0, !dbg !9584
  br i1 %9, label %12, label %10, !dbg !9585

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9586
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !9588
  br label %12, !dbg !9589

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9590
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9592
  %15 = icmp eq i32 %14, 0, !dbg !9592
  br i1 %15, label %19, label %16, !dbg !9593

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9594
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !9595
  store i8 %18, i8* %1, align 1, !dbg !9596
  br label %19, !dbg !9597

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9580
  ret i32 %20, !dbg !9598
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9599 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9601, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i8 %1, metadata !9602, metadata !DIExpression()), !dbg !9605
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9606
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9606
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9606
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9603, metadata !DIExpression()), !dbg !9605
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9607

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9608
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9611
  %10 = icmp eq i32 %9, 0, !dbg !9611
  br i1 %10, label %18, label %11, !dbg !9612

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9613, !srcloc !9620
  call void @llvm.dbg.value(metadata i32 undef, metadata !9616, metadata !DIExpression()) #25, !dbg !9621
  call void @llvm.dbg.value(metadata i32 undef, metadata !9617, metadata !DIExpression()) #25, !dbg !9621
  call void @llvm.dbg.value(metadata i32 undef, metadata !9604, metadata !DIExpression()), !dbg !9605
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9622
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9624
  %15 = icmp eq i32 %14, 0, !dbg !9624
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9613
  br i1 %15, label %17, label %19, !dbg !9625

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9616, metadata !DIExpression()) #25, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %16, metadata !9604, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 undef, metadata !9626, metadata !DIExpression()) #25, !dbg !9629
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9631, !srcloc !9632
  br label %18, !dbg !9633

18:                                               ; preds = %17, %7
  br label %7, !dbg !9608, !llvm.loop !9634

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9613
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9636
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !9637
  call void @llvm.dbg.value(metadata i32 %20, metadata !9626, metadata !DIExpression()) #25, !dbg !9638
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9640, !srcloc !9632
  ret void, !dbg !9641
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9642 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9644, metadata !DIExpression()), !dbg !9647
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9648
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9648
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9648
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9645, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i32 0, metadata !9646, metadata !DIExpression()), !dbg !9647
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9649
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9649
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9651
  %8 = icmp ne i32 %7, 0, !dbg !9651
  %9 = zext i1 %8 to i32, !dbg !9652
  call void @llvm.dbg.value(metadata i32 %9, metadata !9646, metadata !DIExpression()), !dbg !9647
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9653
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !9655
  %12 = icmp eq i32 %11, 0, !dbg !9655
  %13 = or i32 %9, 2, !dbg !9656
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9656
  call void @llvm.dbg.value(metadata i32 %14, metadata !9646, metadata !DIExpression()), !dbg !9647
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9657
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !9659
  %17 = icmp eq i32 %16, 0, !dbg !9659
  %18 = or i32 %14, 4, !dbg !9660
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9660
  call void @llvm.dbg.value(metadata i32 %19, metadata !9646, metadata !DIExpression()), !dbg !9647
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9661
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !9663
  %22 = icmp eq i32 %21, 0, !dbg !9663
  %23 = or i32 %19, 8, !dbg !9664
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9664
  call void @llvm.dbg.value(metadata i32 %24, metadata !9646, metadata !DIExpression()), !dbg !9647
  %25 = and i32 %24, 8, !dbg !9665
  %26 = icmp eq i32 %25, 0, !dbg !9665
  br i1 %26, label %29, label %27, !dbg !9667

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9668
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !9670
  br label %29, !dbg !9671

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9672
  %31 = icmp eq i32 %30, 0, !dbg !9672
  br i1 %31, label %34, label %32, !dbg !9674

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9675
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !9677
  br label %34, !dbg !9678

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9679
  %36 = icmp eq i32 %35, 0, !dbg !9679
  br i1 %36, label %39, label %37, !dbg !9681

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9682
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !9684
  br label %39, !dbg !9685

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9686
  %41 = icmp eq i32 %40, 0, !dbg !9686
  br i1 %41, label %44, label %42, !dbg !9688

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9689
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !9691
  br label %44, !dbg !9692

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9693
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !9694
  ret i32 %24, !dbg !9695
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9696 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9698, metadata !DIExpression()), !dbg !9707
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9699, metadata !DIExpression()), !dbg !9707
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9708
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9708
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9708
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9700, metadata !DIExpression()), !dbg !9707
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9709
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9709
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9709
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9701, metadata !DIExpression()), !dbg !9707
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9710
  %10 = load i8, i8* %9, align 4, !dbg !9710
  %11 = zext i8 %10 to i32, !dbg !9711
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !9712
  call void @llvm.dbg.value(metadata i32 %12, metadata !9703, metadata !DIExpression()), !dbg !9707
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9713
  %14 = load i8, i8* %13, align 1, !dbg !9713
  %15 = zext i8 %14 to i32, !dbg !9714
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !9715
  call void @llvm.dbg.value(metadata i32 %16, metadata !9704, metadata !DIExpression()), !dbg !9707
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9716
  %18 = load i8, i8* %17, align 2, !dbg !9716
  %19 = zext i8 %18 to i32, !dbg !9717
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !9718
  call void @llvm.dbg.value(metadata i32 %20, metadata !9705, metadata !DIExpression()), !dbg !9707
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9719
  %22 = load i8, i8* %21, align 1, !dbg !9719
  %23 = zext i8 %22 to i32, !dbg !9720
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !9721
  call void @llvm.dbg.value(metadata i32 %24, metadata !9706, metadata !DIExpression()), !dbg !9707
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9722

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9724
  br i1 %26, label %69, label %27, !dbg !9726

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9727

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9728
  br i1 %29, label %65, label %30, !dbg !9728

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9730
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9707
  br i1 %31, label %38, label %34, !dbg !9732

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9733
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !9733

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9736
  br i1 %37, label %38, label %69, !dbg !9737

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9738
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !9739
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !9740
  %41 = icmp eq i32 %12, %40, !dbg !9742
  br i1 %41, label %43, label %42, !dbg !9743

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !9744
  br label %43, !dbg !9746

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !9747
  %45 = icmp eq i32 %16, %44, !dbg !9749
  br i1 %45, label %47, label %46, !dbg !9750

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !9751
  br label %47, !dbg !9753

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !9754
  %49 = icmp eq i32 %20, %48, !dbg !9756
  br i1 %49, label %51, label %50, !dbg !9757

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !9758
  br label %51, !dbg !9760

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !9761
  %53 = icmp eq i32 %24, %52, !dbg !9763
  br i1 %53, label %55, label %54, !dbg !9764

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !9765
  br label %55, !dbg !9767

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9768
  %57 = load i32, i32* %56, align 4, !dbg !9768
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9770
  %59 = load i32, i32* %58, align 4, !dbg !9770
  %60 = icmp eq i32 %57, %59, !dbg !9771
  br i1 %60, label %63, label %61, !dbg !9772

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !9773
  %62 = load i32, i32* %56, align 4, !dbg !9775
  store i32 %62, i32* %58, align 4, !dbg !9776
  br label %63, !dbg !9777

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9778
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !9779
  br label %69, !dbg !9780

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9728
  %67 = and i8 %66, 1, !dbg !9728
  %68 = icmp eq i8 %67, 0, !dbg !9728
  br i1 %68, label %30, label %69, !dbg !9728

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9707
  ret i32 %70, !dbg !9781
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9782 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9784, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9785, metadata !DIExpression()), !dbg !9787
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9788
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9788
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9788
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9786, metadata !DIExpression()), !dbg !9787
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9789
  %7 = load i32, i32* %6, align 4, !dbg !9789
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9790
  store i32 %7, i32* %8, align 4, !dbg !9791
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9792, !range !9793
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !9794
  %11 = trunc i32 %10 to i8, !dbg !9794
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9795
  store i8 %11, i8* %12, align 4, !dbg !9796
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !9797, !range !9798
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !9799
  %15 = trunc i32 %14 to i8, !dbg !9799
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9800
  store i8 %15, i8* %16, align 1, !dbg !9801
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !9802
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9803, !range !9793
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !9804
  %20 = trunc i32 %19 to i8, !dbg !9804
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9805
  store i8 %20, i8* %21, align 2, !dbg !9806
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !9807, !range !9808
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !9809
  %24 = trunc i32 %23 to i8, !dbg !9809
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9810
  store i8 %24, i8* %25, align 1, !dbg !9811
  ret i32 0, !dbg !9812
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9813 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9815, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i8* %1, metadata !9816, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i32 %2, metadata !9817, metadata !DIExpression()), !dbg !9821
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9822
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9822
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9822
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9818, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i8 0, metadata !9819, metadata !DIExpression()), !dbg !9821
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9823
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9823
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9825
  %10 = icmp eq i32 %9, 0, !dbg !9825
  br i1 %10, label %30, label %11, !dbg !9826

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9827, !srcloc !9620
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !9827
  call void @llvm.dbg.value(metadata i32 %13, metadata !9616, metadata !DIExpression()) #25, !dbg !9829
  call void @llvm.dbg.value(metadata i32 undef, metadata !9617, metadata !DIExpression()) #25, !dbg !9829
  call void @llvm.dbg.value(metadata i32 %13, metadata !9820, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i8 0, metadata !9819, metadata !DIExpression()), !dbg !9821
  %14 = icmp sgt i32 %2, 0, !dbg !9830
  br i1 %14, label %15, label %28, !dbg !9831

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !9819, metadata !DIExpression()), !dbg !9821
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9832
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #27, !dbg !9833
  %20 = icmp eq i32 %19, 0, !dbg !9831
  br i1 %20, label %28, label %21, !dbg !9834

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9835
  %23 = add i8 %17, 1, !dbg !9837
  call void @llvm.dbg.value(metadata i8 %23, metadata !9819, metadata !DIExpression()), !dbg !9821
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9838
  %25 = load i8, i8* %24, align 1, !dbg !9838
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #27, !dbg !9839
  %26 = zext i8 %23 to i32, !dbg !9840
  %27 = icmp slt i32 %26, %2, !dbg !9830
  br i1 %27, label %15, label %28, !dbg !9831, !llvm.loop !9841

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !9840
  call void @llvm.dbg.value(metadata i32 %13, metadata !9626, metadata !DIExpression()) #25, !dbg !9843
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !9845, !srcloc !9632
  br label %30, !dbg !9846

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !9821
  ret i32 %31, !dbg !9847
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !9848 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9850, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i8* %1, metadata !9851, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i32 %2, metadata !9852, metadata !DIExpression()), !dbg !9855
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9856
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9856
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9856
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9853, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i8 0, metadata !9854, metadata !DIExpression()), !dbg !9855
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9857
  call void @llvm.dbg.value(metadata i8 0, metadata !9854, metadata !DIExpression()), !dbg !9855
  %8 = icmp sgt i32 %2, 0, !dbg !9858
  br i1 %8, label %9, label %28, !dbg !9859

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !9854, metadata !DIExpression()), !dbg !9855
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9857
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9860
  %14 = icmp eq i32 %13, 0, !dbg !9859
  br i1 %14, label %28, label %15, !dbg !9861

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9862
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #27, !dbg !9864
  %18 = add i8 %11, 1, !dbg !9865
  call void @llvm.dbg.value(metadata i8 %18, metadata !9854, metadata !DIExpression()), !dbg !9855
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9866
  store i8 %17, i8* %19, align 1, !dbg !9867
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9868
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #27, !dbg !9870
  %22 = icmp eq i32 %21, 0, !dbg !9870
  br i1 %22, label %25, label %23, !dbg !9871

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9872
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #27, !dbg !9874
  br label %25, !dbg !9875

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !9854, metadata !DIExpression()), !dbg !9855
  %26 = zext i8 %18 to i32, !dbg !9876
  %27 = icmp slt i32 %26, %2, !dbg !9858
  br i1 %27, label %9, label %28, !dbg !9859, !llvm.loop !9877

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !9876
  ret i32 %29, !dbg !9879
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9880 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9882, metadata !DIExpression()), !dbg !9884
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9885
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9885
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9885
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9883, metadata !DIExpression()), !dbg !9884
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9886
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9886
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9887
  ret void, !dbg !9888
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9889 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9891, metadata !DIExpression()), !dbg !9893
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9894
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9894
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9894
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9892, metadata !DIExpression()), !dbg !9893
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9895
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9895
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9896
  ret void, !dbg !9897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9898 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9900, metadata !DIExpression()), !dbg !9902
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9903
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9903
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9903
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9901, metadata !DIExpression()), !dbg !9902
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9904
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9904
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9905
  %8 = icmp eq i32 %7, 0, !dbg !9905
  br i1 %8, label %14, label %9, !dbg !9906

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9907
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #27, !dbg !9908
  %12 = icmp ne i32 %11, 0, !dbg !9906
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !9909
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9910 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9912, metadata !DIExpression()), !dbg !9914
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9915
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9915
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9915
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9913, metadata !DIExpression()), !dbg !9914
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9916
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9916
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9917
  ret void, !dbg !9918
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9919 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9921, metadata !DIExpression()), !dbg !9923
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9924
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9924
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9924
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9922, metadata !DIExpression()), !dbg !9923
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9925
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9925
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9926
  ret void, !dbg !9927
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !9928 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9930, metadata !DIExpression()), !dbg !9932
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9933
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9933
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9933
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9931, metadata !DIExpression()), !dbg !9932
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9934
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9934
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9935
  ret i32 %7, !dbg !9936
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9937 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9939, metadata !DIExpression()), !dbg !9941
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9942
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9942
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9942
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9940, metadata !DIExpression()), !dbg !9941
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9943
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9943
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9944
  ret i32 %7, !dbg !9945
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9946 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9948, metadata !DIExpression()), !dbg !9950
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9951
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9951
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9951
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9949, metadata !DIExpression()), !dbg !9950
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9952
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9952
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !9953
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9954
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9954
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !9954

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !9956
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9958
  br label %11, !dbg !9959

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9958
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9960
  ret void, !dbg !9961
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9962 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9964, metadata !DIExpression()), !dbg !9966
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9967
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9967
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9967
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9965, metadata !DIExpression()), !dbg !9966
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9968
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9968
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !9969
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9970
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9970
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !9970

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !9972
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9974
  br label %11, !dbg !9975

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9974
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9976
  ret void, !dbg !9977
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !9978 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9980, metadata !DIExpression()), !dbg !9982
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9983
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9983
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9983
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9981, metadata !DIExpression()), !dbg !9982
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9984
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9984
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9985
  %8 = icmp eq i32 %7, 0, !dbg !9985
  br i1 %8, label %13, label %9, !dbg !9986

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9987
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #27, !dbg !9988
  %12 = icmp eq i32 %11, 0, !dbg !9988
  br i1 %12, label %13, label %22, !dbg !9989

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9990
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #27, !dbg !9991
  %16 = icmp eq i32 %15, 0, !dbg !9991
  br i1 %16, label %22, label %17, !dbg !9992

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9993
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #27, !dbg !9994
  %20 = icmp ne i32 %19, 0, !dbg !9992
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !9995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !9996 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9998, metadata !DIExpression()), !dbg !9999
  ret i32 1, !dbg !10000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10001 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10003, metadata !DIExpression()), !dbg !10007
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10004, metadata !DIExpression()), !dbg !10007
  call void @llvm.dbg.value(metadata i8* %2, metadata !10005, metadata !DIExpression()), !dbg !10007
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10008
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10008
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10008
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10006, metadata !DIExpression()), !dbg !10007
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10009
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10010
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10011
  store i8* %2, i8** %8, align 4, !dbg !10012
  ret void, !dbg !10013
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10014 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10019, metadata !DIExpression()), !dbg !10020
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10021
  %3 = load volatile i32, i32* %2, align 4, !dbg !10021
  %4 = lshr i32 %3, 5, !dbg !10022
  %5 = and i32 %4, 1, !dbg !10022
  ret i32 %5, !dbg !10023
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10024 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10026, metadata !DIExpression()), !dbg !10027
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10028
  %3 = load volatile i32, i32* %2, align 4, !dbg !10028
  %4 = lshr i32 %3, 5, !dbg !10029
  %5 = and i32 %4, 1, !dbg !10029
  ret i32 %5, !dbg !10030
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10031 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10033, metadata !DIExpression()), !dbg !10034
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10035
  %3 = load volatile i32, i32* %2, align 4, !dbg !10035
  %4 = lshr i32 %3, 6, !dbg !10036
  %5 = and i32 %4, 1, !dbg !10036
  ret i32 %5, !dbg !10037
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10038 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10040, metadata !DIExpression()), !dbg !10041
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10042
  %3 = load volatile i32, i32* %2, align 4, !dbg !10042
  %4 = lshr i32 %3, 6, !dbg !10043
  %5 = and i32 %4, 1, !dbg !10043
  ret i32 %5, !dbg !10044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10045 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10049, metadata !DIExpression()), !dbg !10052
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10053

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10060
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10063, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10060
  %5 = and i32 %4, -2, !dbg !10065
  call void @llvm.dbg.value(metadata i32 %5, metadata !10050, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10074
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10074
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10076, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10074
  %7 = icmp eq i32 %6, 0, !dbg !10053
  br i1 %7, label %8, label %3, !dbg !10065, !llvm.loop !10078

8:                                                ; preds = %3
  ret void, !dbg !10079
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10080 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10082, metadata !DIExpression()), !dbg !10083
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10084
  %3 = load volatile i32, i32* %2, align 4, !dbg !10084
  %4 = and i32 %3, -65, !dbg !10084
  store volatile i32 %4, i32* %2, align 4, !dbg !10084
  ret void, !dbg !10085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10086 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10088, metadata !DIExpression()), !dbg !10091
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10092

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10093
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10096, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10093
  %5 = and i32 %4, -257, !dbg !10097
  call void @llvm.dbg.value(metadata i32 %5, metadata !10089, metadata !DIExpression()), !dbg !10098
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10099
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10099
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10101, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10099
  %7 = icmp eq i32 %6, 0, !dbg !10092
  br i1 %7, label %8, label %3, !dbg !10097, !llvm.loop !10102

8:                                                ; preds = %3
  ret void, !dbg !10103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10104 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10106, metadata !DIExpression()), !dbg !10109
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10110

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10111
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10114, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10111
  %5 = or i32 %4, 1, !dbg !10115
  call void @llvm.dbg.value(metadata i32 %5, metadata !10107, metadata !DIExpression()), !dbg !10116
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10117
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10117
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10119, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10117
  %7 = icmp eq i32 %6, 0, !dbg !10110
  br i1 %7, label %8, label %3, !dbg !10115, !llvm.loop !10120

8:                                                ; preds = %3
  ret void, !dbg !10121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10122 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10124, metadata !DIExpression()), !dbg !10125
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10126
  %3 = load volatile i32, i32* %2, align 4, !dbg !10126
  %4 = or i32 %3, 64, !dbg !10126
  store volatile i32 %4, i32* %2, align 4, !dbg !10126
  ret void, !dbg !10127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10128 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10130, metadata !DIExpression()), !dbg !10133
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10134

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10135
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10138, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10135
  %5 = or i32 %4, 256, !dbg !10139
  call void @llvm.dbg.value(metadata i32 %5, metadata !10131, metadata !DIExpression()), !dbg !10140
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10141
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10141
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10143, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10141
  %7 = icmp eq i32 %6, 0, !dbg !10134
  br i1 %7, label %8, label %3, !dbg !10139, !llvm.loop !10144

8:                                                ; preds = %3
  ret void, !dbg !10145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10146 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10148, metadata !DIExpression()), !dbg !10151
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10152

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10153
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10156, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10153
  %5 = and i32 %4, -33, !dbg !10157
  call void @llvm.dbg.value(metadata i32 %5, metadata !10149, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10159
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10159
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10161, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10159
  %7 = icmp eq i32 %6, 0, !dbg !10152
  br i1 %7, label %8, label %3, !dbg !10157, !llvm.loop !10162

8:                                                ; preds = %3
  ret void, !dbg !10163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10164 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10166, metadata !DIExpression()), !dbg !10169
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10170

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10171
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10174, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10171
  %5 = or i32 %4, 32, !dbg !10175
  call void @llvm.dbg.value(metadata i32 %5, metadata !10167, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10177
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10177
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10179, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10177
  %7 = icmp eq i32 %6, 0, !dbg !10170
  br i1 %7, label %8, label %3, !dbg !10175, !llvm.loop !10180

8:                                                ; preds = %3
  ret void, !dbg !10181
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10182 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10184, metadata !DIExpression()), !dbg !10185
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10186
  %3 = load volatile i32, i32* %2, align 4, !dbg !10186
  %4 = lshr i32 %3, 7, !dbg !10187
  %5 = and i32 %4, 1, !dbg !10187
  ret i32 %5, !dbg !10188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10189 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10191, metadata !DIExpression()), !dbg !10194
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10195

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10196
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10199, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10196
  %5 = and i32 %4, -65, !dbg !10200
  call void @llvm.dbg.value(metadata i32 %5, metadata !10192, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10202
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10202
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10204, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10202
  %7 = icmp eq i32 %6, 0, !dbg !10195
  br i1 %7, label %8, label %3, !dbg !10200, !llvm.loop !10205

8:                                                ; preds = %3
  ret void, !dbg !10206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10207 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10209, metadata !DIExpression()), !dbg !10212
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10213

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10214
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10217, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10214
  %5 = or i32 %4, 64, !dbg !10218
  call void @llvm.dbg.value(metadata i32 %5, metadata !10210, metadata !DIExpression()), !dbg !10219
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10220
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10220
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10222, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10220
  %7 = icmp eq i32 %6, 0, !dbg !10213
  br i1 %7, label %8, label %3, !dbg !10218, !llvm.loop !10223

8:                                                ; preds = %3
  ret void, !dbg !10224
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10225 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10229, metadata !DIExpression()), !dbg !10230
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10231
  %3 = load volatile i32, i32* %2, align 4, !dbg !10231
  %4 = trunc i32 %3 to i8, !dbg !10232
  ret i8 %4, !dbg !10233
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10234 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10236, metadata !DIExpression()), !dbg !10237
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10238
  %3 = load volatile i32, i32* %2, align 4, !dbg !10238
  %4 = lshr i32 %3, 3, !dbg !10239
  %5 = and i32 %4, 1, !dbg !10239
  ret i32 %5, !dbg !10240
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10241 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10243, metadata !DIExpression()), !dbg !10245
  %3 = bitcast i32* %2 to i8*, !dbg !10246
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10246
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10244, metadata !DIExpression()), !dbg !10247
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10248
  %5 = load volatile i32, i32* %4, align 4, !dbg !10248
  store volatile i32 %5, i32* %2, align 4, !dbg !10249
  %6 = load volatile i32, i32* %2, align 4, !dbg !10250
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10251
  %8 = load volatile i32, i32* %7, align 4, !dbg !10251
  store volatile i32 %8, i32* %2, align 4, !dbg !10252
  %9 = load volatile i32, i32* %2, align 4, !dbg !10253
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10254
  ret void, !dbg !10254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10255 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10259, metadata !DIExpression()), !dbg !10261
  call void @llvm.dbg.value(metadata i8 %1, metadata !10260, metadata !DIExpression()), !dbg !10261
  %3 = zext i8 %1 to i32, !dbg !10262
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10263
  store volatile i32 %3, i32* %4, align 4, !dbg !10264
  ret void, !dbg !10265
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10266 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10270, metadata !DIExpression()), !dbg !10272
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10273
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10273
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10273
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10271, metadata !DIExpression()), !dbg !10272
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10274
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10274
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !10275
  ret i32 %7, !dbg !10276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !10277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10281, metadata !DIExpression()), !dbg !10282
  %2 = icmp eq i32 %0, 1024, !dbg !10283
  %3 = select i1 %2, i32 2, i32 0, !dbg !10283
  %4 = icmp eq i32 %0, 1536, !dbg !10283
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10283
  ret i32 %5, !dbg !10284
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10285 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10287, metadata !DIExpression()), !dbg !10289
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10290
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10290
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10290
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10288, metadata !DIExpression()), !dbg !10289
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10291
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10291
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !10292
  ret i32 %7, !dbg !10293
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !10294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10298, metadata !DIExpression()), !dbg !10299
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10300
  %3 = icmp ult i32 %2, 4, !dbg !10300
  br i1 %3, label %4, label %7, !dbg !10300

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10300
  %6 = load i32, i32* %5, align 4, !dbg !10300
  br label %7, !dbg !10300

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10301
  ret i32 %8, !dbg !10303
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10304 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10306, metadata !DIExpression()), !dbg !10308
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10309
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10309
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10309
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10307, metadata !DIExpression()), !dbg !10308
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10310
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10310
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !10311
  ret i32 %7, !dbg !10312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10317, metadata !DIExpression()), !dbg !10319
  call void @llvm.dbg.value(metadata i32 %1, metadata !10318, metadata !DIExpression()), !dbg !10319
  %3 = icmp eq i32 %0, 4096, !dbg !10320
  %4 = icmp eq i32 %1, 0, !dbg !10320
  %5 = select i1 %4, i32 4, i32 3, !dbg !10320
  %6 = select i1 %4, i32 3, i32 2, !dbg !10320
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10320
  ret i32 %7, !dbg !10321
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10322 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10324, metadata !DIExpression()), !dbg !10326
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10327
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10327
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10327
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10325, metadata !DIExpression()), !dbg !10326
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10328
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10328
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !10329
  ret i32 %7, !dbg !10330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10335, metadata !DIExpression()), !dbg !10336
  %2 = icmp eq i32 %0, 768, !dbg !10337
  %3 = zext i1 %2 to i32, !dbg !10336
  ret i32 %3, !dbg !10339
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10340 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10342, metadata !DIExpression()), !dbg !10343
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10344
  %3 = load volatile i32, i32* %2, align 4, !dbg !10344
  %4 = and i32 %3, 768, !dbg !10344
  ret i32 %4, !dbg !10345
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10348, metadata !DIExpression()), !dbg !10349
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10350
  %3 = load volatile i32, i32* %2, align 4, !dbg !10350
  %4 = and i32 %3, 4096, !dbg !10350
  ret i32 %4, !dbg !10351
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10352 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10354, metadata !DIExpression()), !dbg !10355
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10356
  %3 = load volatile i32, i32* %2, align 4, !dbg !10356
  %4 = and i32 %3, 12288, !dbg !10356
  ret i32 %4, !dbg !10357
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10358 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10360, metadata !DIExpression()), !dbg !10361
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10362
  %3 = load volatile i32, i32* %2, align 4, !dbg !10362
  %4 = and i32 %3, 1536, !dbg !10362
  ret i32 %4, !dbg !10363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !10364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10368, metadata !DIExpression()), !dbg !10369
  %2 = icmp eq i32 %0, 2, !dbg !10370
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10370
  %4 = icmp eq i32 %0, 1, !dbg !10370
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10370
  ret i32 %5, !dbg !10371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10376, metadata !DIExpression()), !dbg !10377
  %2 = icmp ult i32 %0, 3, !dbg !10378
  br i1 %2, label %3, label %6, !dbg !10378

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10378
  %5 = load i32, i32* %4, align 4, !dbg !10378
  br label %6, !dbg !10378

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10379
  ret i32 %7, !dbg !10381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10386, metadata !DIExpression()), !dbg !10388
  call void @llvm.dbg.value(metadata i32 %1, metadata !10387, metadata !DIExpression()), !dbg !10388
  %3 = icmp eq i32 %0, 4, !dbg !10389
  %4 = icmp eq i32 %1, 0, !dbg !10389
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10389
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10389
  ret i32 %6, !dbg !10390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10395, metadata !DIExpression()), !dbg !10396
  %2 = icmp eq i32 %0, 1, !dbg !10397
  %3 = select i1 %2, i32 768, i32 0, !dbg !10396
  ret i32 %3, !dbg !10399
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10400 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10402, metadata !DIExpression()), !dbg !10403
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10404
  %3 = load volatile i32, i32* %2, align 4, !dbg !10404
  %4 = and i32 %3, -8193, !dbg !10404
  store volatile i32 %4, i32* %2, align 4, !dbg !10404
  ret void, !dbg !10405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10410, metadata !DIExpression()), !dbg !10413
  call void @llvm.dbg.value(metadata i32 %1, metadata !10411, metadata !DIExpression()), !dbg !10413
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10414
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10414
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10414
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10412, metadata !DIExpression()), !dbg !10413
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10415
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10415
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10416
  ret void, !dbg !10417
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10418 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10420, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i32 %1, metadata !10421, metadata !DIExpression()), !dbg !10423
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10424
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10424
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10424
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10422, metadata !DIExpression()), !dbg !10423
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10425
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10425
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10426
  ret void, !dbg !10427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10428 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10430, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32 %1, metadata !10431, metadata !DIExpression()), !dbg !10433
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10434
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10434
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10434
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10432, metadata !DIExpression()), !dbg !10433
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10435
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10435
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10436
  ret void, !dbg !10437
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10438 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10440, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.value(metadata i32 %1, metadata !10441, metadata !DIExpression()), !dbg !10443
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10444
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10444
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10444
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10442, metadata !DIExpression()), !dbg !10443
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10445
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10445
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10446
  ret void, !dbg !10447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10448 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10450, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.value(metadata i32 %1, metadata !10451, metadata !DIExpression()), !dbg !10455
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10456
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10456
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10456
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10452, metadata !DIExpression()), !dbg !10455
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10457
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10457
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10457
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10453, metadata !DIExpression()), !dbg !10455
  %10 = bitcast i32* %3 to i8*, !dbg !10458
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10458
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10459
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10459
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10463
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10463
  %15 = load i8*, i8** %14, align 4, !dbg !10463
  call void @llvm.dbg.value(metadata i32* %3, metadata !10454, metadata !DIExpression(DW_OP_deref)), !dbg !10455
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !10464
  %17 = icmp slt i32 %16, 0, !dbg !10465
  br i1 %17, label %23, label %18, !dbg !10466

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10467
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10467
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #27, !dbg !10468
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10469
  %22 = load i32, i32* %3, align 4, !dbg !10470
  call void @llvm.dbg.value(metadata i32 %22, metadata !10454, metadata !DIExpression()), !dbg !10455
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #27, !dbg !10471
  br label %23, !dbg !10472

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10472
  ret void, !dbg !10472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10473 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10475, metadata !DIExpression()), !dbg !10476
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10477
  %3 = load volatile i32, i32* %2, align 4, !dbg !10477
  %4 = or i32 %3, 8192, !dbg !10477
  store volatile i32 %4, i32* %2, align 4, !dbg !10477
  ret void, !dbg !10478
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10479 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10481, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.value(metadata i8* %1, metadata !10482, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.value(metadata i32* %2, metadata !10483, metadata !DIExpression()), !dbg !10485
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10486
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10486
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10486
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10484, metadata !DIExpression()), !dbg !10485
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10487
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10487
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10489
  br i1 %9, label %12, label %10, !dbg !10490

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !10491
  br label %12, !dbg !10492

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10485
  ret i32 %13, !dbg !10493
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10494 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10498, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata i32 0, metadata !10499, metadata !DIExpression()), !dbg !10500
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10501
  %3 = load volatile i32, i32* %2, align 4, !dbg !10501
  %4 = and i32 %3, -32769, !dbg !10501
  store volatile i32 %4, i32* %2, align 4, !dbg !10501
  ret void, !dbg !10502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10503 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10507, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.value(metadata i32 %1, metadata !10508, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.value(metadata i32 0, metadata !10509, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.value(metadata i32 %2, metadata !10510, metadata !DIExpression()), !dbg !10511
  %4 = zext i32 %1 to i64, !dbg !10512
  %5 = mul nuw nsw i64 %4, 25, !dbg !10512
  %6 = zext i32 %2 to i64, !dbg !10512
  %7 = shl nuw nsw i64 %6, 2, !dbg !10512
  %8 = udiv i64 %5, %7, !dbg !10512
  %9 = trunc i64 %8 to i32, !dbg !10512
  %10 = udiv i32 %9, 100, !dbg !10512
  %11 = shl nuw nsw i32 %10, 4, !dbg !10512
  %12 = mul i32 %10, -100, !dbg !10512
  %13 = add i32 %12, %9, !dbg !10512
  %14 = shl i32 %13, 4, !dbg !10512
  %15 = add i32 %14, 50, !dbg !10512
  %16 = udiv i32 %15, 100, !dbg !10512
  %17 = and i32 %16, 240, !dbg !10512
  %18 = add nuw nsw i32 %17, %11, !dbg !10512
  %19 = and i32 %16, 15, !dbg !10512
  %20 = and i32 %18, 65520, !dbg !10515
  %21 = or i32 %20, %19, !dbg !10515
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10516
  store volatile i32 %21, i32* %22, align 4, !dbg !10517
  ret void, !dbg !10518
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10519 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10521, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.value(metadata i32 %1, metadata !10522, metadata !DIExpression()), !dbg !10523
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10524
  %4 = load volatile i32, i32* %3, align 4, !dbg !10524
  %5 = and i32 %4, -769, !dbg !10524
  %6 = or i32 %5, %1, !dbg !10524
  store volatile i32 %6, i32* %3, align 4, !dbg !10524
  ret void, !dbg !10525
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10526 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10528, metadata !DIExpression()), !dbg !10530
  call void @llvm.dbg.value(metadata i32 %1, metadata !10529, metadata !DIExpression()), !dbg !10530
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10531
  %4 = load volatile i32, i32* %3, align 4, !dbg !10531
  %5 = and i32 %4, -4097, !dbg !10531
  %6 = or i32 %5, %1, !dbg !10531
  store volatile i32 %6, i32* %3, align 4, !dbg !10531
  ret void, !dbg !10532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10533 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10535, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.value(metadata i32 %1, metadata !10536, metadata !DIExpression()), !dbg !10537
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10538
  %4 = load volatile i32, i32* %3, align 4, !dbg !10538
  %5 = and i32 %4, -12289, !dbg !10538
  %6 = or i32 %5, %1, !dbg !10538
  store volatile i32 %6, i32* %3, align 4, !dbg !10538
  ret void, !dbg !10539
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10540 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10542, metadata !DIExpression()), !dbg !10544
  call void @llvm.dbg.value(metadata i32 %1, metadata !10543, metadata !DIExpression()), !dbg !10544
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10545
  %4 = load volatile i32, i32* %3, align 4, !dbg !10545
  %5 = and i32 %4, -1537, !dbg !10545
  %6 = or i32 %5, %1, !dbg !10545
  store volatile i32 %6, i32* %3, align 4, !dbg !10545
  ret void, !dbg !10546
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10547 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10549, metadata !DIExpression()), !dbg !10550
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10551
  %3 = load volatile i32, i32* %2, align 4, !dbg !10551
  %4 = and i32 %3, 1, !dbg !10551
  ret i32 %4, !dbg !10552
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10553 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10555, metadata !DIExpression()), !dbg !10556
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10557
  %3 = load volatile i32, i32* %2, align 4, !dbg !10557
  %4 = lshr i32 %3, 1, !dbg !10558
  %5 = and i32 %4, 1, !dbg !10558
  ret i32 %5, !dbg !10559
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10560 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10562, metadata !DIExpression()), !dbg !10563
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10564
  %3 = load volatile i32, i32* %2, align 4, !dbg !10564
  %4 = lshr i32 %3, 8, !dbg !10565
  %5 = and i32 %4, 1, !dbg !10565
  ret i32 %5, !dbg !10566
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10567 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10569, metadata !DIExpression()), !dbg !10570
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10571
  store volatile i32 -257, i32* %2, align 4, !dbg !10571
  ret void, !dbg !10572
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10573 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10575, metadata !DIExpression()), !dbg !10577
  %3 = bitcast i32* %2 to i8*, !dbg !10578
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10578
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10576, metadata !DIExpression()), !dbg !10579
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10580
  %5 = load volatile i32, i32* %4, align 4, !dbg !10580
  store volatile i32 %5, i32* %2, align 4, !dbg !10581
  %6 = load volatile i32, i32* %2, align 4, !dbg !10582
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10583
  %8 = load volatile i32, i32* %7, align 4, !dbg !10583
  store volatile i32 %8, i32* %2, align 4, !dbg !10584
  %9 = load volatile i32, i32* %2, align 4, !dbg !10585
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10586
  ret void, !dbg !10586
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10587 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10589, metadata !DIExpression()), !dbg !10591
  %3 = bitcast i32* %2 to i8*, !dbg !10592
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10592
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10590, metadata !DIExpression()), !dbg !10593
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10594
  %5 = load volatile i32, i32* %4, align 4, !dbg !10594
  store volatile i32 %5, i32* %2, align 4, !dbg !10595
  %6 = load volatile i32, i32* %2, align 4, !dbg !10596
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10597
  %8 = load volatile i32, i32* %7, align 4, !dbg !10597
  store volatile i32 %8, i32* %2, align 4, !dbg !10598
  %9 = load volatile i32, i32* %2, align 4, !dbg !10599
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10600
  ret void, !dbg !10600
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10601 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10603, metadata !DIExpression()), !dbg !10605
  %3 = bitcast i32* %2 to i8*, !dbg !10606
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10606
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10604, metadata !DIExpression()), !dbg !10607
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10608
  %5 = load volatile i32, i32* %4, align 4, !dbg !10608
  store volatile i32 %5, i32* %2, align 4, !dbg !10609
  %6 = load volatile i32, i32* %2, align 4, !dbg !10610
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10611
  %8 = load volatile i32, i32* %7, align 4, !dbg !10611
  store volatile i32 %8, i32* %2, align 4, !dbg !10612
  %9 = load volatile i32, i32* %2, align 4, !dbg !10613
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10614
  ret void, !dbg !10614
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1664 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1666, metadata !DIExpression()), !dbg !10615
  tail call void @z_arm_irq_priority_set(i32 noundef 39, i32 noundef 0, i32 noundef 0) #26, !dbg !10616
  tail call void @arch_irq_enable(i32 noundef 39) #26, !dbg !10618
  ret void, !dbg !10618
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !10619 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10621, metadata !DIExpression()), !dbg !10623
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10624
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10624
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10624
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10622, metadata !DIExpression()), !dbg !10623
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !10625
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10625
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10627
  br i1 %7, label %11, label %8, !dbg !10628

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !10629
  %10 = load i8*, i8** %9, align 4, !dbg !10629
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #26, !dbg !10631
  br label %11, !dbg !10632

11:                                               ; preds = %8, %1
  ret void, !dbg !10633
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !10634 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10636, metadata !DIExpression()), !dbg !10642
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10643
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10643
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10643
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10637, metadata !DIExpression()), !dbg !10642
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10644
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10644
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10644
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10638, metadata !DIExpression()), !dbg !10642
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !10645
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10646
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10646
  %10 = tail call fastcc zeroext i1 @device_is_ready.65(%struct.device* noundef %9) #27, !dbg !10648
  br i1 %10, label %11, label %51, !dbg !10649

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10650
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10651
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10651
  %15 = load i8*, i8** %14, align 4, !dbg !10651
  %16 = tail call fastcc i32 @clock_control_on.66(%struct.device* noundef %12, i8* noundef %15) #27, !dbg !10652
  call void @llvm.dbg.value(metadata i32 %16, metadata !10641, metadata !DIExpression()), !dbg !10642
  %17 = icmp eq i32 %16, 0, !dbg !10653
  br i1 %17, label %18, label %51, !dbg !10655

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10656
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10656
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #27, !dbg !10657
  call void @llvm.dbg.value(metadata i32 %21, metadata !10641, metadata !DIExpression()), !dbg !10642
  %22 = icmp slt i32 %21, 0, !dbg !10658
  br i1 %22, label %51, label %23, !dbg !10660

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10661
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10661
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #27, !dbg !10662
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10663
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #27, !dbg !10664
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10665
  %28 = load i32, i32* %27, align 4, !dbg !10665
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10667

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10639, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.value(metadata i32 4096, metadata !10640, metadata !DIExpression()), !dbg !10642
  br label %31, !dbg !10668

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10639, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.value(metadata i32 0, metadata !10640, metadata !DIExpression()), !dbg !10642
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10671
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10671
  call void @llvm.dbg.value(metadata i32 %33, metadata !10640, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.value(metadata i32 %32, metadata !10639, metadata !DIExpression()), !dbg !10642
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10672
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #27, !dbg !10673
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10674
  %36 = load i8, i8* %35, align 4, !dbg !10674, !range !6298
  %37 = icmp eq i8 %36, 0, !dbg !10674
  br i1 %37, label %39, label %38, !dbg !10676

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !10677
  br label %39, !dbg !10679

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10680
  %41 = load i32, i32* %40, align 4, !dbg !10680
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #27, !dbg !10681
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10682
  %43 = load i8, i8* %42, align 4, !dbg !10682, !range !6298
  %44 = icmp eq i8 %43, 0, !dbg !10682
  br i1 %44, label %47, label %45, !dbg !10684

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10685
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #27, !dbg !10687
  br label %47, !dbg !10688

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10689
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #27, !dbg !10690
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !10691
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !10691
  tail call void %50(%struct.device* noundef nonnull %0) #26, !dbg !10692
  br label %51, !dbg !10693

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10642
  ret i32 %52, !dbg !10694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10695 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10697, metadata !DIExpression()), !dbg !10701
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10702
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10702
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10702
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10698, metadata !DIExpression()), !dbg !10701
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10699, metadata !DIExpression()), !dbg !10701
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10703
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10704
  ret void, !dbg !10705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.65(%struct.device* noundef %0) unnamed_addr #1 !dbg !10706 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10710, metadata !DIExpression()), !dbg !10711
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10712, !srcloc !10714
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.67(%struct.device* noundef %0) #27, !dbg !10715
  ret i1 %2, !dbg !10716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.66(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10717 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10719, metadata !DIExpression()), !dbg !10722
  call void @llvm.dbg.value(metadata i8* %1, metadata !10720, metadata !DIExpression()), !dbg !10722
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10723
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10723
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10723
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10721, metadata !DIExpression()), !dbg !10722
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10724
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10724
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !10725
  ret i32 %8, !dbg !10726
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10727 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10731, metadata !DIExpression()), !dbg !10735
  call void @llvm.dbg.value(metadata i8 0, metadata !10732, metadata !DIExpression()), !dbg !10735
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10736
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10736
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10734, metadata !DIExpression(DW_OP_deref)), !dbg !10735
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !10737
  call void @llvm.dbg.value(metadata i32 %4, metadata !10733, metadata !DIExpression()), !dbg !10735
  %5 = icmp slt i32 %4, 0, !dbg !10738
  br i1 %5, label %9, label %6, !dbg !10740

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10741
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10734, metadata !DIExpression()), !dbg !10735
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !10742
  br label %9, !dbg !10743

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10735
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10744
  ret i32 %10, !dbg !10744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10745 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10747, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata i32 12, metadata !10748, metadata !DIExpression()), !dbg !10751
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10752

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10753
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10756, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10753
  %5 = or i32 %4, 12, !dbg !10757
  call void @llvm.dbg.value(metadata i32 %5, metadata !10749, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10759
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10759
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10761, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10759
  %7 = icmp eq i32 %6, 0, !dbg !10752
  br i1 %7, label %8, label %3, !dbg !10757, !llvm.loop !10762

8:                                                ; preds = %3
  ret void, !dbg !10763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10764 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10766, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.value(metadata i32 %1, metadata !10767, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.value(metadata i32 %2, metadata !10768, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.value(metadata i32 0, metadata !10769, metadata !DIExpression()), !dbg !10770
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10771
  %5 = load volatile i32, i32* %4, align 4, !dbg !10771
  %6 = and i32 %5, -5633, !dbg !10771
  %7 = or i32 %2, %1, !dbg !10771
  %8 = or i32 %7, %6, !dbg !10771
  store volatile i32 %8, i32* %4, align 4, !dbg !10771
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10772
  %10 = load volatile i32, i32* %9, align 4, !dbg !10772
  %11 = and i32 %10, -12289, !dbg !10772
  store volatile i32 %11, i32* %9, align 4, !dbg !10772
  ret void, !dbg !10773
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10774 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10776, metadata !DIExpression()), !dbg !10777
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10778
  %3 = load volatile i32, i32* %2, align 4, !dbg !10778
  %4 = or i32 %3, 8, !dbg !10778
  store volatile i32 %4, i32* %2, align 4, !dbg !10778
  ret void, !dbg !10779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10780 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10784, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10785, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.value(metadata i32 0, metadata !10786, metadata !DIExpression()), !dbg !10787
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10788
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10788
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10789
  %5 = load i8, i8* %4, align 4, !dbg !10789
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !10790
  ret i32 %6, !dbg !10791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.67(%struct.device* noundef %0) unnamed_addr #1 !dbg !10792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10794, metadata !DIExpression()), !dbg !10795
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10796
  ret i1 %2, !dbg !10797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10798 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10800, metadata !DIExpression()), !dbg !10801
  tail call fastcc void @__NVIC_SetPriority.69() #27, !dbg !10802
  store i32 16799, i32* @last_load, align 4, !dbg !10803
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10804
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10805
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10806
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10807
  %3 = or i32 %2, 7, !dbg !10807
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10807
  ret i32 0, !dbg !10808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.69() unnamed_addr #15 !dbg !10809 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10811, metadata !DIExpression()), !dbg !10813
  call void @llvm.dbg.value(metadata i32 1, metadata !10812, metadata !DIExpression()), !dbg !10813
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10814
  ret void, !dbg !10817
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10818 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10820, metadata !DIExpression()), !dbg !10822
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !10823
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10824
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10825
  %5 = add i32 %4, %3, !dbg !10825
  store i32 %5, i32* @cycle_count, align 4, !dbg !10825
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10826
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10827
  %7 = sub i32 %5, %6, !dbg !10830
  %8 = udiv i32 %7, 16800, !dbg !10831
  call void @llvm.dbg.value(metadata i32 %8, metadata !10821, metadata !DIExpression()), !dbg !10822
  %9 = mul nuw i32 %8, 16800, !dbg !10832
  %10 = add i32 %9, %6, !dbg !10833
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10833
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !10834
  tail call void @z_arm_int_exit() #26, !dbg !10835
  ret void, !dbg !10836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10837 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10842
  call void @llvm.dbg.value(metadata i32 %1, metadata !10839, metadata !DIExpression()), !dbg !10843
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10844
  call void @llvm.dbg.value(metadata i32 %2, metadata !10840, metadata !DIExpression()), !dbg !10843
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10845
  call void @llvm.dbg.value(metadata i32 %3, metadata !10841, metadata !DIExpression()), !dbg !10843
  %4 = and i32 %2, 65536, !dbg !10846
  %5 = icmp ne i32 %4, 0, !dbg !10846
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10848
  %8 = load i32, i32* @last_load, align 4, !dbg !10843
  br i1 %7, label %9, label %13, !dbg !10848

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10849
  %11 = add i32 %10, %8, !dbg !10849
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10849
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10851
  br label %13, !dbg !10852

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10853
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10854
  %16 = add i32 %14, %15, !dbg !10855
  ret i32 %16, !dbg !10856
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10861, metadata !DIExpression()), !dbg !10874
  call void @llvm.dbg.value(metadata i1 %1, metadata !10862, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10874
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10875
  br i1 %4, label %5, label %8, !dbg !10875

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10877
  %7 = and i32 %6, -2, !dbg !10877
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10877
  store i32 -16777216, i32* @last_load, align 4, !dbg !10879
  br label %54, !dbg !10880

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10881
  call void @llvm.dbg.value(metadata i32 %9, metadata !10866, metadata !DIExpression()), !dbg !10874
  br i1 %3, label %18, label %10, !dbg !10882

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10882
  call void @llvm.dbg.value(metadata i32 undef, metadata !10861, metadata !DIExpression()), !dbg !10874
  %12 = icmp slt i32 %11, 1, !dbg !10883
  br i1 %12, label %18, label %13, !dbg !10883

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !10883
  %15 = select i1 %14, i32 %11, i32 997, !dbg !10883
  %16 = mul nuw nsw i32 %15, 16800, !dbg !10883
  %17 = add nuw nsw i32 %16, 16799, !dbg !10883
  br label %18, !dbg !10883

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10861, metadata !DIExpression()), !dbg !10874
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10884, metadata !DIExpression()) #25, !dbg !10891
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10893, !srcloc !10899
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10893
  call void @llvm.dbg.value(metadata i32 %21, metadata !10896, metadata !DIExpression()) #25, !dbg !10900
  call void @llvm.dbg.value(metadata i32 undef, metadata !10897, metadata !DIExpression()) #25, !dbg !10900
  call void @llvm.dbg.value(metadata i32 %21, metadata !10890, metadata !DIExpression()) #25, !dbg !10891
  call void @llvm.dbg.value(metadata i32 %21, metadata !10867, metadata !DIExpression()), !dbg !10874
  %22 = tail call fastcc i32 @elapsed() #27, !dbg !10901
  call void @llvm.dbg.value(metadata i32 %22, metadata !10872, metadata !DIExpression()), !dbg !10874
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10902
  call void @llvm.dbg.value(metadata i32 %23, metadata !10864, metadata !DIExpression()), !dbg !10874
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10903
  %25 = add i32 %24, %22, !dbg !10903
  store i32 %25, i32* @cycle_count, align 4, !dbg !10903
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10904
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10905
  %27 = sub i32 %25, %26, !dbg !10906
  call void @llvm.dbg.value(metadata i32 %27, metadata !10873, metadata !DIExpression()), !dbg !10874
  %28 = icmp slt i32 %27, 0, !dbg !10907
  br i1 %28, label %38, label %29, !dbg !10909

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10863, metadata !DIExpression()), !dbg !10874
  call void @llvm.dbg.value(metadata i32 undef, metadata !10863, metadata !DIExpression()), !dbg !10874
  %30 = add nuw i32 %19, %27, !dbg !10910
  %31 = urem i32 %30, 16800, !dbg !10912
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10863, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10874
  %32 = sub nuw nsw i32 %19, %31, !dbg !10913
  call void @llvm.dbg.value(metadata i32 %32, metadata !10863, metadata !DIExpression()), !dbg !10874
  %33 = icmp ugt i32 %32, 1050, !dbg !10914
  br i1 %33, label %34, label %36, !dbg !10914

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10863, metadata !DIExpression()), !dbg !10874
  %35 = icmp ugt i32 %32, 16749600, !dbg !10915
  br i1 %35, label %38, label %36, !dbg !10917

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10918
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10919
  call void @llvm.dbg.value(metadata i32 %40, metadata !10865, metadata !DIExpression()), !dbg !10874
  %41 = add nsw i32 %39, -1, !dbg !10920
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10921
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10922
  %42 = icmp ult i32 %23, %40, !dbg !10923
  br i1 %42, label %43, label %48, !dbg !10925

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10926
  %45 = add i32 %23, %9, !dbg !10928
  %46 = sub i32 %45, %40, !dbg !10929
  %47 = add i32 %46, %44, !dbg !10926
  br label %52, !dbg !10930

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10931
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10933
  %51 = add i32 %49, %50, !dbg !10933
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10934
  store i32 %53, i32* @cycle_count, align 4, !dbg !10934
  call void @llvm.dbg.value(metadata i32 %21, metadata !10935, metadata !DIExpression()) #25, !dbg !10941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10940, metadata !DIExpression()) #25, !dbg !10941
  call void @llvm.dbg.value(metadata i32 %21, metadata !10943, metadata !DIExpression()) #25, !dbg !10946
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !10948, !srcloc !10949
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10950
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10951 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10884, metadata !DIExpression()) #25, !dbg !10955
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10957, !srcloc !10899
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10957
  call void @llvm.dbg.value(metadata i32 %2, metadata !10896, metadata !DIExpression()) #25, !dbg !10959
  call void @llvm.dbg.value(metadata i32 undef, metadata !10897, metadata !DIExpression()) #25, !dbg !10959
  call void @llvm.dbg.value(metadata i32 %2, metadata !10890, metadata !DIExpression()) #25, !dbg !10955
  call void @llvm.dbg.value(metadata i32 %2, metadata !10953, metadata !DIExpression()), !dbg !10960
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !10961
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10962
  %5 = add i32 %4, %3, !dbg !10963
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10964
  %7 = sub i32 %5, %6, !dbg !10965
  call void @llvm.dbg.value(metadata i32 %7, metadata !10954, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.value(metadata i32 %2, metadata !10935, metadata !DIExpression()) #25, !dbg !10966
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10940, metadata !DIExpression()) #25, !dbg !10966
  call void @llvm.dbg.value(metadata i32 %2, metadata !10943, metadata !DIExpression()) #25, !dbg !10968
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10970, !srcloc !10949
  %8 = udiv i32 %7, 16800, !dbg !10971
  ret i32 %8, !dbg !10972
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10973 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10884, metadata !DIExpression()) #25, !dbg !10977
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10979, !srcloc !10899
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10979
  call void @llvm.dbg.value(metadata i32 %2, metadata !10896, metadata !DIExpression()) #25, !dbg !10981
  call void @llvm.dbg.value(metadata i32 undef, metadata !10897, metadata !DIExpression()) #25, !dbg !10981
  call void @llvm.dbg.value(metadata i32 %2, metadata !10890, metadata !DIExpression()) #25, !dbg !10977
  call void @llvm.dbg.value(metadata i32 %2, metadata !10975, metadata !DIExpression()), !dbg !10982
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !10983
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10984
  %5 = add i32 %4, %3, !dbg !10985
  call void @llvm.dbg.value(metadata i32 %5, metadata !10976, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32 %2, metadata !10935, metadata !DIExpression()) #25, !dbg !10986
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10940, metadata !DIExpression()) #25, !dbg !10986
  call void @llvm.dbg.value(metadata i32 %2, metadata !10943, metadata !DIExpression()) #25, !dbg !10988
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10990, !srcloc !10949
  ret i32 %5, !dbg !10991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10992 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10993
  %2 = icmp eq i32 %1, -16777216, !dbg !10995
  br i1 %2, label %3, label %6, !dbg !10996

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10997
  %5 = or i32 %4, 1, !dbg !10997
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10997
  br label %6, !dbg !10999

6:                                                ; preds = %3, %0
  ret void, !dbg !11000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11001 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11002
  %2 = and i32 %1, -2, !dbg !11002
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11002
  ret void, !dbg !11003
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11004 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11030, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.value(metadata i8 %1, metadata !11031, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11032, metadata !DIExpression()), !dbg !11033
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11034
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11034
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11033
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11035
  %8 = load i8, i8* %6, align 4, !dbg !11036
  %9 = zext i8 %8 to i32, !dbg !11037
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11037
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11038
  br i1 %11, label %18, label %24, !dbg !11039

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11033
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11035
  %14 = load i8, i8* %6, align 4, !dbg !11036
  %15 = zext i8 %14 to i32, !dbg !11037
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11037
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11038
  br i1 %17, label %18, label %24, !dbg !11039, !llvm.loop !11040

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11042
  %21 = load i8, i8* %20, align 1, !dbg !11042
  %22 = icmp eq i8 %21, %1, !dbg !11045
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11046
  br i1 %22, label %24, label %12, !dbg !11047

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11033
  ret i32 %25, !dbg !11048
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11049 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11060, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i8 %1, metadata !11061, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i32 %2, metadata !11062, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i32 0, metadata !11065, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i32 0, metadata !11066, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i8 0, metadata !11067, metadata !DIExpression()), !dbg !11077
  %4 = icmp eq i8 %1, 0, !dbg !11078
  br i1 %4, label %35, label %5, !dbg !11079

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11078
  br label %9, !dbg !11079

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11067, metadata !DIExpression()), !dbg !11077
  call void @llvm.dbg.value(metadata i32 %29, metadata !11065, metadata !DIExpression()), !dbg !11076
  %8 = icmp eq i32 %34, %6, !dbg !11078
  br i1 %8, label %35, label %9, !dbg !11079, !llvm.loop !11080

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11067, metadata !DIExpression()), !dbg !11077
  call void @llvm.dbg.value(metadata i32 %11, metadata !11065, metadata !DIExpression()), !dbg !11076
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11082
  %13 = load i32, i32* %12, align 4, !dbg !11082
  call void @llvm.dbg.value(metadata i32 %13, metadata !11064, metadata !DIExpression()), !dbg !11076
  %14 = and i32 %13, 31, !dbg !11083
  %15 = icmp ult i32 %14, 16, !dbg !11084
  br i1 %15, label %16, label %20, !dbg !11085

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11086
  %18 = load i32, i32* %17, align 4, !dbg !11086
  %19 = or i32 %18, 32, !dbg !11088
  call void @llvm.dbg.value(metadata i32 %19, metadata !11065, metadata !DIExpression()), !dbg !11076
  br label %28, !dbg !11089

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11090

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11091
  %23 = load i32, i32* %22, align 4, !dbg !11091
  call void @llvm.dbg.value(metadata i32 %23, metadata !11069, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11092
  %24 = lshr i32 %23, 7, !dbg !11093
  %25 = and i32 %24, 16, !dbg !11093
  %26 = or i32 %25, %23, !dbg !11093
  call void @llvm.dbg.value(metadata i32 %26, metadata !11065, metadata !DIExpression()), !dbg !11076
  br label %28, !dbg !11094

27:                                               ; preds = %20
  br label %28, !dbg !11095

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11076
  call void @llvm.dbg.value(metadata i32 %29, metadata !11065, metadata !DIExpression()), !dbg !11076
  %30 = lshr i32 %13, 5, !dbg !11095
  %31 = and i32 %30, 255, !dbg !11095
  call void @llvm.dbg.value(metadata i32 %31, metadata !11063, metadata !DIExpression()), !dbg !11076
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !11096
  call void @llvm.dbg.value(metadata i32 %32, metadata !11066, metadata !DIExpression()), !dbg !11076
  %33 = icmp slt i32 %32, 0, !dbg !11097
  %34 = add nuw nsw i32 %10, 1, !dbg !11099
  call void @llvm.dbg.value(metadata i32 %34, metadata !11067, metadata !DIExpression()), !dbg !11077
  br i1 %33, label %35, label %7, !dbg !11100

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11106, metadata !DIExpression()), !dbg !11110
  call void @llvm.dbg.value(metadata i32 %1, metadata !11107, metadata !DIExpression()), !dbg !11110
  call void @llvm.dbg.value(metadata i32 %2, metadata !11108, metadata !DIExpression()), !dbg !11110
  %4 = icmp ugt i32 %0, 175, !dbg !11111
  br i1 %4, label %16, label %5, !dbg !11113

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11114
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11115
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11115
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11109, metadata !DIExpression()), !dbg !11110
  %9 = add nsw i32 %6, -9, !dbg !11116
  %10 = icmp ult i32 %9, 2, !dbg !11116
  br i1 %10, label %16, label %11, !dbg !11118

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.74(%struct.device* noundef %8) #27, !dbg !11119
  br i1 %12, label %13, label %16, !dbg !11120

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11121
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #26, !dbg !11122
  br label %16, !dbg !11123

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11110
  ret i32 %17, !dbg !11124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.74(%struct.device* noundef %0) unnamed_addr #1 !dbg !11125 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11129, metadata !DIExpression()), !dbg !11130
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11131, !srcloc !11133
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.75(%struct.device* noundef %0) #27, !dbg !11134
  ret i1 %2, !dbg !11135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.75(%struct.device* noundef %0) unnamed_addr #1 !dbg !11136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11138, metadata !DIExpression()), !dbg !11139
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !11140
  ret i1 %2, !dbg !11141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !11142 {
  ret void, !dbg !11143
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !11144 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11146, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i32 0, metadata !11147, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i32 2, metadata !11148, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i32 0, metadata !11149, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i32 2, metadata !11150, metadata !DIExpression()), !dbg !11151
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11152
  %2 = and i32 %1, 12, !dbg !11153
  call void @llvm.dbg.value(metadata i32 %2, metadata !11146, metadata !DIExpression()), !dbg !11151
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11154

3:                                                ; preds = %0
  br label %21, !dbg !11155

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11157
  call void @llvm.dbg.value(metadata i32 %5, metadata !11149, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11151
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11158
  %7 = and i32 %6, 63, !dbg !11159
  call void @llvm.dbg.value(metadata i32 %7, metadata !11150, metadata !DIExpression()), !dbg !11151
  %8 = and i32 %5, 4194304, !dbg !11160
  %9 = icmp eq i32 %8, 0, !dbg !11160
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !11162
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11162
  %13 = lshr i32 %12, 6, !dbg !11162
  %14 = and i32 %13, 511, !dbg !11162
  %15 = mul i32 %14, %11, !dbg !11162
  call void @llvm.dbg.value(metadata i32 %15, metadata !11147, metadata !DIExpression()), !dbg !11151
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11163
  %17 = lshr i32 %16, 15, !dbg !11164
  %18 = and i32 %17, 6, !dbg !11164
  %19 = add nuw nsw i32 %18, 2, !dbg !11164
  call void @llvm.dbg.value(metadata i32 %19, metadata !11148, metadata !DIExpression()), !dbg !11151
  %20 = udiv i32 %15, %19, !dbg !11165
  br label %21, !dbg !11166

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11167
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11168
  %24 = lshr i32 %23, 4, !dbg !11169
  %25 = and i32 %24, 15, !dbg !11169
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11170
  %27 = load i8, i8* %26, align 1, !dbg !11170
  %28 = zext i8 %27 to i32, !dbg !11170
  call void @llvm.dbg.value(metadata i32 %28, metadata !11146, metadata !DIExpression()), !dbg !11151
  %29 = lshr i32 %22, %28, !dbg !11171
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11171
  ret void, !dbg !11172
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11173 {
  ret i32 0, !dbg !11178
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11179 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11205, metadata !DIExpression()), !dbg !11216
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11217
  br i1 %3, label %311, label %4, !dbg !11219

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11220
  %6 = load i32, i32* %5, align 4, !dbg !11220
  %7 = and i32 %6, 1, !dbg !11222
  %8 = icmp eq i32 %7, 0, !dbg !11223
  br i1 %8, label %66, label %9, !dbg !11224

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11225
  %11 = and i32 %10, 12, !dbg !11225
  %12 = icmp eq i32 %11, 4, !dbg !11228
  br i1 %12, label %21, label %13, !dbg !11229

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11230
  %15 = and i32 %14, 12, !dbg !11230
  %16 = icmp eq i32 %15, 8, !dbg !11231
  br i1 %16, label %17, label %29, !dbg !11232

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11233
  %19 = and i32 %18, 4194304, !dbg !11234
  %20 = icmp eq i32 %19, 0, !dbg !11235
  br i1 %20, label %29, label %21, !dbg !11236

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11237
  %23 = and i32 %22, 131072, !dbg !11237
  %24 = icmp eq i32 %23, 0, !dbg !11237
  br i1 %24, label %66, label %25, !dbg !11240

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11241
  %27 = load i32, i32* %26, align 4, !dbg !11241
  %28 = icmp eq i32 %27, 0, !dbg !11242
  br i1 %28, label %311, label %66, !dbg !11243

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11244
  %31 = load i32, i32* %30, align 4, !dbg !11244
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11248

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11249
  %34 = or i32 %33, 65536, !dbg !11249
  br label %45, !dbg !11249

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11251
  %37 = or i32 %36, 262144, !dbg !11251
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11251
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11251
  %39 = or i32 %38, 65536, !dbg !11251
  br label %45, !dbg !11251

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11254
  %42 = and i32 %41, -65537, !dbg !11254
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11254
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11254
  %44 = and i32 %43, -262145, !dbg !11254
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11256
  %47 = load i32, i32* %30, align 4, !dbg !11257
  %48 = icmp eq i32 %47, 0, !dbg !11259
  %49 = tail call i32 @HAL_GetTick() #26, !dbg !11260
  call void @llvm.dbg.value(metadata i32 %49, metadata !11206, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i32 %49, metadata !11206, metadata !DIExpression()), !dbg !11216
  br i1 %48, label %58, label %50, !dbg !11261

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11262
  %52 = and i32 %51, 131072, !dbg !11264
  %53 = icmp eq i32 %52, 0, !dbg !11264
  br i1 %53, label %54, label %66, !dbg !11265

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #26, !dbg !11266
  %56 = sub i32 %55, %49, !dbg !11269
  %57 = icmp ugt i32 %56, 100, !dbg !11270
  br i1 %57, label %311, label %50, !dbg !11271, !llvm.loop !11272

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11274
  %60 = and i32 %59, 131072, !dbg !11274
  %61 = icmp eq i32 %60, 0, !dbg !11274
  br i1 %61, label %66, label %62, !dbg !11276

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #26, !dbg !11277
  %64 = sub i32 %63, %49, !dbg !11280
  %65 = icmp ugt i32 %64, 100, !dbg !11281
  br i1 %65, label %311, label %58, !dbg !11282, !llvm.loop !11283

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11285
  %68 = and i32 %67, 2, !dbg !11287
  %69 = icmp eq i32 %68, 0, !dbg !11288
  br i1 %69, label %121, label %70, !dbg !11289

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11290
  %72 = and i32 %71, 12, !dbg !11290
  %73 = icmp eq i32 %72, 0, !dbg !11293
  br i1 %73, label %82, label %74, !dbg !11294

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11295
  %76 = and i32 %75, 12, !dbg !11295
  %77 = icmp eq i32 %76, 8, !dbg !11296
  br i1 %77, label %78, label %90, !dbg !11297

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11298
  %80 = and i32 %79, 4194304, !dbg !11299
  %81 = icmp eq i32 %80, 0, !dbg !11300
  br i1 %81, label %82, label %90, !dbg !11301

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11302
  %84 = and i32 %83, 2, !dbg !11302
  %85 = icmp eq i32 %84, 0, !dbg !11302
  br i1 %85, label %114, label %86, !dbg !11305

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11306
  %88 = load i32, i32* %87, align 4, !dbg !11306
  %89 = icmp eq i32 %88, 1, !dbg !11307
  br i1 %89, label %114, label %311, !dbg !11308

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11309
  %92 = load i32, i32* %91, align 4, !dbg !11309
  %93 = icmp eq i32 %92, 0, !dbg !11312
  br i1 %93, label %104, label %94, !dbg !11313

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11314
  %95 = tail call i32 @HAL_GetTick() #26, !dbg !11316
  call void @llvm.dbg.value(metadata i32 %95, metadata !11206, metadata !DIExpression()), !dbg !11216
  br label %96, !dbg !11317

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11318
  %98 = and i32 %97, 2, !dbg !11319
  %99 = icmp eq i32 %98, 0, !dbg !11319
  br i1 %99, label %100, label %114, !dbg !11317

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #26, !dbg !11320
  %102 = sub i32 %101, %95, !dbg !11323
  %103 = icmp ugt i32 %102, 2, !dbg !11324
  br i1 %103, label %311, label %96, !dbg !11325, !llvm.loop !11326

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11328
  %105 = tail call i32 @HAL_GetTick() #26, !dbg !11330
  call void @llvm.dbg.value(metadata i32 %105, metadata !11206, metadata !DIExpression()), !dbg !11216
  br label %106, !dbg !11331

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11332
  %108 = and i32 %107, 2, !dbg !11332
  %109 = icmp eq i32 %108, 0, !dbg !11332
  br i1 %109, label %121, label %110, !dbg !11331

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #26, !dbg !11333
  %112 = sub i32 %111, %105, !dbg !11336
  %113 = icmp ugt i32 %112, 2, !dbg !11337
  br i1 %113, label %311, label %106, !dbg !11338, !llvm.loop !11339

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11341
  %116 = and i32 %115, -249, !dbg !11341
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11341
  %118 = load i32, i32* %117, align 4, !dbg !11341
  %119 = shl i32 %118, 3, !dbg !11341
  %120 = or i32 %119, %116, !dbg !11341
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11341
  br label %121, !dbg !11342

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11342
  %123 = and i32 %122, 8, !dbg !11344
  %124 = icmp eq i32 %123, 0, !dbg !11345
  br i1 %124, label %149, label %125, !dbg !11346

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11347
  %127 = load i32, i32* %126, align 4, !dbg !11347
  %128 = icmp eq i32 %127, 0, !dbg !11350
  br i1 %128, label %139, label %129, !dbg !11351

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11352
  %130 = tail call i32 @HAL_GetTick() #26, !dbg !11354
  call void @llvm.dbg.value(metadata i32 %130, metadata !11206, metadata !DIExpression()), !dbg !11216
  br label %131, !dbg !11355

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11356
  %133 = and i32 %132, 2, !dbg !11357
  %134 = icmp eq i32 %133, 0, !dbg !11357
  br i1 %134, label %135, label %149, !dbg !11355

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #26, !dbg !11358
  %137 = sub i32 %136, %130, !dbg !11361
  %138 = icmp ugt i32 %137, 2, !dbg !11362
  br i1 %138, label %311, label %131, !dbg !11363, !llvm.loop !11364

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11366
  %140 = tail call i32 @HAL_GetTick() #26, !dbg !11368
  call void @llvm.dbg.value(metadata i32 %140, metadata !11206, metadata !DIExpression()), !dbg !11216
  br label %141, !dbg !11369

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11370
  %143 = and i32 %142, 2, !dbg !11370
  %144 = icmp eq i32 %143, 0, !dbg !11370
  br i1 %144, label %149, label %145, !dbg !11369

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #26, !dbg !11371
  %147 = sub i32 %146, %140, !dbg !11374
  %148 = icmp ugt i32 %147, 2, !dbg !11375
  br i1 %148, label %311, label %141, !dbg !11376, !llvm.loop !11377

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11379
  %151 = and i32 %150, 4, !dbg !11380
  %152 = icmp eq i32 %151, 0, !dbg !11381
  br i1 %152, label %221, label %153, !dbg !11382

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11208, metadata !DIExpression()), !dbg !11383
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11384
  %155 = and i32 %154, 268435456, !dbg !11384
  %156 = icmp eq i32 %155, 0, !dbg !11384
  br i1 %156, label %157, label %164, !dbg !11385

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11386
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11386
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11212, metadata !DIExpression()), !dbg !11386
  store volatile i32 0, i32* %2, align 4, !dbg !11386
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11386
  %160 = or i32 %159, 268435456, !dbg !11386
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11386
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11386
  %162 = and i32 %161, 268435456, !dbg !11386
  store volatile i32 %162, i32* %2, align 4, !dbg !11386
  %163 = load volatile i32, i32* %2, align 4, !dbg !11386
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11387
  call void @llvm.dbg.value(metadata i32 1, metadata !11208, metadata !DIExpression()), !dbg !11383
  br label %164, !dbg !11388

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11208, metadata !DIExpression()), !dbg !11383
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11389
  %166 = and i32 %165, 256, !dbg !11389
  %167 = icmp eq i32 %166, 0, !dbg !11389
  br i1 %167, label %168, label %180, !dbg !11391

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11392
  %170 = or i32 %169, 256, !dbg !11392
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11392
  %171 = tail call i32 @HAL_GetTick() #26, !dbg !11394
  call void @llvm.dbg.value(metadata i32 %171, metadata !11206, metadata !DIExpression()), !dbg !11216
  br label %172, !dbg !11395

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11396
  %174 = and i32 %173, 256, !dbg !11396
  %175 = icmp eq i32 %174, 0, !dbg !11396
  br i1 %175, label %176, label %180, !dbg !11395

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #26, !dbg !11397
  %178 = sub i32 %177, %171, !dbg !11400
  %179 = icmp ugt i32 %178, 2, !dbg !11401
  br i1 %179, label %311, label %172, !dbg !11402, !llvm.loop !11403

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11405
  %182 = load i32, i32* %181, align 4, !dbg !11405
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11408

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11409
  %185 = or i32 %184, 1, !dbg !11409
  br label %196, !dbg !11409

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11411
  %188 = or i32 %187, 4, !dbg !11411
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11411
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11411
  %190 = or i32 %189, 1, !dbg !11411
  br label %196, !dbg !11411

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11414
  %193 = and i32 %192, -2, !dbg !11414
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11414
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11414
  %195 = and i32 %194, -5, !dbg !11414
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11416
  %198 = load i32, i32* %181, align 4, !dbg !11417
  %199 = icmp eq i32 %198, 0, !dbg !11419
  %200 = tail call i32 @HAL_GetTick() #26, !dbg !11420
  call void @llvm.dbg.value(metadata i32 %200, metadata !11206, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i32 %200, metadata !11206, metadata !DIExpression()), !dbg !11216
  br i1 %199, label %209, label %201, !dbg !11421

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11422
  %203 = and i32 %202, 2, !dbg !11424
  %204 = icmp eq i32 %203, 0, !dbg !11424
  br i1 %204, label %205, label %217, !dbg !11425

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #26, !dbg !11426
  %207 = sub i32 %206, %200, !dbg !11429
  %208 = icmp ugt i32 %207, 5000, !dbg !11430
  br i1 %208, label %311, label %201, !dbg !11431, !llvm.loop !11432

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11434
  %211 = and i32 %210, 2, !dbg !11434
  %212 = icmp eq i32 %211, 0, !dbg !11434
  br i1 %212, label %217, label %213, !dbg !11436

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #26, !dbg !11437
  %215 = sub i32 %214, %200, !dbg !11440
  %216 = icmp ugt i32 %215, 5000, !dbg !11441
  br i1 %216, label %311, label %209, !dbg !11442, !llvm.loop !11443

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11445

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11446
  %220 = and i32 %219, -268435457, !dbg !11446
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11446
  br label %221, !dbg !11449

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11450
  %223 = load i32, i32* %222, align 4, !dbg !11450
  %224 = icmp eq i32 %223, 0, !dbg !11452
  br i1 %224, label %310, label %225, !dbg !11453

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11454
  %227 = and i32 %226, 12, !dbg !11454
  %228 = icmp eq i32 %227, 8, !dbg !11457
  br i1 %228, label %277, label %229, !dbg !11458

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11459
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11462
  %231 = tail call i32 @HAL_GetTick() #26, !dbg !11462
  call void @llvm.dbg.value(metadata i32 %231, metadata !11206, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i32 %231, metadata !11206, metadata !DIExpression()), !dbg !11216
  br i1 %230, label %232, label %269, !dbg !11463

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11464
  %234 = and i32 %233, 33554432, !dbg !11464
  %235 = icmp eq i32 %234, 0, !dbg !11464
  br i1 %235, label %240, label %236, !dbg !11466

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #26, !dbg !11467
  %238 = sub i32 %237, %231, !dbg !11470
  %239 = icmp ugt i32 %238, 2, !dbg !11471
  br i1 %239, label %311, label %232, !dbg !11472, !llvm.loop !11473

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11475
  %242 = load i32, i32* %241, align 4, !dbg !11475
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11475
  %244 = load i32, i32* %243, align 4, !dbg !11475
  %245 = or i32 %244, %242, !dbg !11475
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11475
  %247 = load i32, i32* %246, align 4, !dbg !11475
  %248 = shl i32 %247, 6, !dbg !11475
  %249 = or i32 %245, %248, !dbg !11475
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11475
  %251 = load i32, i32* %250, align 4, !dbg !11475
  %252 = shl i32 %251, 15, !dbg !11475
  %253 = add i32 %252, -65536, !dbg !11475
  %254 = and i32 %253, -65536, !dbg !11475
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11475
  %256 = load i32, i32* %255, align 4, !dbg !11475
  %257 = shl i32 %256, 24, !dbg !11475
  %258 = or i32 %249, %257, !dbg !11475
  %259 = or i32 %258, %254, !dbg !11475
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11475
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11476
  %260 = tail call i32 @HAL_GetTick() #26, !dbg !11477
  call void @llvm.dbg.value(metadata i32 %260, metadata !11206, metadata !DIExpression()), !dbg !11216
  br label %261, !dbg !11478

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11479
  %263 = and i32 %262, 33554432, !dbg !11480
  %264 = icmp eq i32 %263, 0, !dbg !11480
  br i1 %264, label %265, label %310, !dbg !11478

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #26, !dbg !11481
  %267 = sub i32 %266, %260, !dbg !11484
  %268 = icmp ugt i32 %267, 2, !dbg !11485
  br i1 %268, label %311, label %261, !dbg !11486, !llvm.loop !11487

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11489
  %271 = and i32 %270, 33554432, !dbg !11489
  %272 = icmp eq i32 %271, 0, !dbg !11489
  br i1 %272, label %310, label %273, !dbg !11491

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #26, !dbg !11492
  %275 = sub i32 %274, %231, !dbg !11495
  %276 = icmp ugt i32 %275, 2, !dbg !11496
  br i1 %276, label %311, label %269, !dbg !11497, !llvm.loop !11498

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11500
  br i1 %278, label %311, label %279, !dbg !11503

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11504
  call void @llvm.dbg.value(metadata i32 %280, metadata !11207, metadata !DIExpression()), !dbg !11216
  %281 = and i32 %280, 4194304, !dbg !11506
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11508
  %283 = load i32, i32* %282, align 4, !dbg !11508
  %284 = icmp eq i32 %281, %283, !dbg !11509
  br i1 %284, label %285, label %311, !dbg !11510

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11511
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11512
  %288 = load i32, i32* %287, align 4, !dbg !11512
  %289 = icmp eq i32 %286, %288, !dbg !11513
  br i1 %289, label %290, label %311, !dbg !11514

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11515
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11516
  %293 = load i32, i32* %292, align 4, !dbg !11516
  %294 = shl i32 %293, 6, !dbg !11517
  %295 = icmp eq i32 %291, %294, !dbg !11518
  br i1 %295, label %296, label %311, !dbg !11519

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11520
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11521
  %299 = load i32, i32* %298, align 4, !dbg !11521
  %300 = shl i32 %299, 15, !dbg !11522
  %301 = add i32 %300, -65536, !dbg !11522
  %302 = and i32 %301, -65536, !dbg !11522
  %303 = icmp eq i32 %297, %302, !dbg !11523
  br i1 %303, label %304, label %311, !dbg !11524

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11525
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11526
  %307 = load i32, i32* %306, align 4, !dbg !11526
  %308 = shl i32 %307, 24, !dbg !11527
  %309 = icmp eq i32 %305, %308, !dbg !11528
  br i1 %309, label %310, label %311, !dbg !11529

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11530

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11216
  ret i32 %312, !dbg !11531
}

; Function Attrs: optsize
declare !dbg !11532 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11534 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11547, metadata !DIExpression()), !dbg !11550
  call void @llvm.dbg.value(metadata i32 %1, metadata !11548, metadata !DIExpression()), !dbg !11550
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11551
  br i1 %3, label %115, label %4, !dbg !11553

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11554
  %6 = and i32 %5, 7, !dbg !11554
  %7 = icmp ult i32 %6, %1, !dbg !11556
  br i1 %7, label %8, label %13, !dbg !11557

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11558
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11558
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11560
  %11 = and i32 %10, 7, !dbg !11560
  %12 = icmp eq i32 %11, %1, !dbg !11562
  br i1 %12, label %13, label %115, !dbg !11563

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11564
  %15 = load i32, i32* %14, align 4, !dbg !11564
  %16 = and i32 %15, 2, !dbg !11566
  %17 = icmp eq i32 %16, 0, !dbg !11567
  br i1 %17, label %39, label %18, !dbg !11568

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11569
  %20 = icmp eq i32 %19, 0, !dbg !11572
  br i1 %20, label %25, label %21, !dbg !11573

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11574
  %23 = or i32 %22, 7168, !dbg !11574
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11574
  %24 = load i32, i32* %14, align 4, !dbg !11576
  br label %25, !dbg !11578

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11576
  %27 = and i32 %26, 8, !dbg !11579
  %28 = icmp eq i32 %27, 0, !dbg !11580
  br i1 %28, label %32, label %29, !dbg !11581

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11582
  %31 = or i32 %30, 57344, !dbg !11582
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11582
  br label %32, !dbg !11584

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11585
  %34 = and i32 %33, -241, !dbg !11585
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11585
  %36 = load i32, i32* %35, align 4, !dbg !11585
  %37 = or i32 %34, %36, !dbg !11585
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11585
  %38 = load i32, i32* %14, align 4, !dbg !11586
  br label %39, !dbg !11588

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11586
  %41 = and i32 %40, 1, !dbg !11589
  %42 = icmp eq i32 %41, 0, !dbg !11590
  br i1 %42, label %73, label %43, !dbg !11591

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11592
  %45 = load i32, i32* %44, align 4, !dbg !11592
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11595

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11596
  %48 = and i32 %47, 131072, !dbg !11599
  %49 = icmp eq i32 %48, 0, !dbg !11599
  br i1 %49, label %115, label %58, !dbg !11600

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11601
  %52 = and i32 %51, 33554432, !dbg !11605
  %53 = icmp eq i32 %52, 0, !dbg !11605
  br i1 %53, label %115, label %58, !dbg !11606

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11607
  %56 = and i32 %55, 2, !dbg !11610
  %57 = icmp eq i32 %56, 0, !dbg !11610
  br i1 %57, label %115, label %58, !dbg !11611

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11612
  %60 = and i32 %59, -4, !dbg !11612
  %61 = or i32 %60, %45, !dbg !11612
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11612
  %62 = tail call i32 @HAL_GetTick() #26, !dbg !11613
  call void @llvm.dbg.value(metadata i32 %62, metadata !11549, metadata !DIExpression()), !dbg !11550
  br label %63, !dbg !11614

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11615
  %65 = and i32 %64, 12, !dbg !11615
  %66 = load i32, i32* %44, align 4, !dbg !11616
  %67 = shl i32 %66, 2, !dbg !11617
  %68 = icmp eq i32 %65, %67, !dbg !11618
  br i1 %68, label %73, label %69, !dbg !11614

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #26, !dbg !11619
  %71 = sub i32 %70, %62, !dbg !11622
  %72 = icmp ugt i32 %71, 5000, !dbg !11623
  br i1 %72, label %115, label %63, !dbg !11624, !llvm.loop !11625

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11627
  %75 = and i32 %74, 7, !dbg !11627
  %76 = icmp ugt i32 %75, %1, !dbg !11629
  br i1 %76, label %77, label %82, !dbg !11630

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11631
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11631
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11633
  %80 = and i32 %79, 7, !dbg !11633
  %81 = icmp eq i32 %80, %1, !dbg !11635
  br i1 %81, label %82, label %115, !dbg !11636

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11637
  %84 = and i32 %83, 4, !dbg !11639
  %85 = icmp eq i32 %84, 0, !dbg !11640
  br i1 %85, label %93, label %86, !dbg !11641

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11642
  %88 = and i32 %87, -7169, !dbg !11642
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11642
  %90 = load i32, i32* %89, align 4, !dbg !11642
  %91 = or i32 %88, %90, !dbg !11642
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11642
  %92 = load i32, i32* %14, align 4, !dbg !11644
  br label %93, !dbg !11646

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11644
  %95 = and i32 %94, 8, !dbg !11647
  %96 = icmp eq i32 %95, 0, !dbg !11648
  br i1 %96, label %104, label %97, !dbg !11649

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11650
  %99 = and i32 %98, -57345, !dbg !11650
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11650
  %101 = load i32, i32* %100, align 4, !dbg !11650
  %102 = shl i32 %101, 3, !dbg !11650
  %103 = or i32 %102, %99, !dbg !11650
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11650
  br label %104, !dbg !11652

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !11653
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11654
  %107 = lshr i32 %106, 4, !dbg !11655
  %108 = and i32 %107, 15, !dbg !11655
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11656
  %110 = load i8, i8* %109, align 1, !dbg !11656
  %111 = zext i8 %110 to i32, !dbg !11656
  %112 = lshr i32 %105, %111, !dbg !11657
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11658
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11659
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #26, !dbg !11660
  br label %115, !dbg !11661

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11550
  ret i32 %116, !dbg !11662
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11663 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11665, metadata !DIExpression()), !dbg !11669
  call void @llvm.dbg.value(metadata i32 0, metadata !11666, metadata !DIExpression()), !dbg !11669
  call void @llvm.dbg.value(metadata i32 0, metadata !11667, metadata !DIExpression()), !dbg !11669
  call void @llvm.dbg.value(metadata i32 0, metadata !11668, metadata !DIExpression()), !dbg !11669
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11670
  %2 = and i32 %1, 12, !dbg !11671
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11672

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !11668, metadata !DIExpression()), !dbg !11669
  br label %24, !dbg !11673

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11676
  %6 = and i32 %5, 63, !dbg !11678
  call void @llvm.dbg.value(metadata i32 %6, metadata !11665, metadata !DIExpression()), !dbg !11669
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11679
  %8 = and i32 %7, 4194304, !dbg !11679
  %9 = icmp eq i32 %8, 0, !dbg !11681
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11682
  %11 = lshr i32 %10, 6, !dbg !11682
  %12 = and i32 %11, 511, !dbg !11682
  %13 = zext i32 %12 to i64, !dbg !11682
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !11682
  %16 = zext i32 %6 to i64, !dbg !11682
  %17 = udiv i64 %15, %16, !dbg !11682
  %18 = trunc i64 %17 to i32, !dbg !11682
  call void @llvm.dbg.value(metadata i32 %18, metadata !11666, metadata !DIExpression()), !dbg !11669
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11683
  %20 = lshr i32 %19, 15, !dbg !11684
  %21 = and i32 %20, 6, !dbg !11684
  %22 = add nuw nsw i32 %21, 2, !dbg !11684
  call void @llvm.dbg.value(metadata i32 %22, metadata !11667, metadata !DIExpression()), !dbg !11669
  %23 = udiv i32 %18, %22, !dbg !11685
  call void @llvm.dbg.value(metadata i32 %23, metadata !11668, metadata !DIExpression()), !dbg !11669
  br label %24, !dbg !11686

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !11687
  call void @llvm.dbg.value(metadata i32 %25, metadata !11668, metadata !DIExpression()), !dbg !11669
  ret i32 %25, !dbg !11688
}

; Function Attrs: optsize
declare !dbg !11689 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11692 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11696, metadata !DIExpression()), !dbg !11716
  call void @llvm.dbg.value(metadata i32 %1, metadata !11697, metadata !DIExpression()), !dbg !11716
  call void @llvm.dbg.value(metadata i32 %2, metadata !11698, metadata !DIExpression()), !dbg !11716
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11717
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11717
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11699, metadata !DIExpression()), !dbg !11718
  %8 = icmp eq i32 %0, 0, !dbg !11719
  br i1 %8, label %9, label %23, !dbg !11720

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11721
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11721
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11709, metadata !DIExpression()), !dbg !11721
  store volatile i32 0, i32* %5, align 4, !dbg !11721
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11721
  %12 = or i32 %11, 1, !dbg !11721
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11721
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11721
  %14 = and i32 %13, 1, !dbg !11721
  store volatile i32 %14, i32* %5, align 4, !dbg !11721
  %15 = load volatile i32, i32* %5, align 4, !dbg !11721
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11722
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11723
  store i32 256, i32* %16, align 4, !dbg !11724
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11725
  store i32 2, i32* %17, align 4, !dbg !11726
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11727
  store i32 3, i32* %18, align 4, !dbg !11728
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11729
  store i32 0, i32* %19, align 4, !dbg !11730
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11731
  store i32 0, i32* %20, align 4, !dbg !11732
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !11733
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11734
  %22 = and i32 %21, -123731969, !dbg !11734
  br label %38, !dbg !11735

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11736
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11736
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11713, metadata !DIExpression()), !dbg !11736
  store volatile i32 0, i32* %6, align 4, !dbg !11736
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11736
  %26 = or i32 %25, 4, !dbg !11736
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11736
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11736
  %28 = and i32 %27, 4, !dbg !11736
  store volatile i32 %28, i32* %6, align 4, !dbg !11736
  %29 = load volatile i32, i32* %6, align 4, !dbg !11736
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11737
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11738
  store i32 512, i32* %30, align 4, !dbg !11739
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11740
  store i32 2, i32* %31, align 4, !dbg !11741
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11742
  store i32 3, i32* %32, align 4, !dbg !11743
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11744
  store i32 0, i32* %33, align 4, !dbg !11745
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11746
  store i32 0, i32* %34, align 4, !dbg !11747
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !11748
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11749
  %36 = and i32 %35, 134217727, !dbg !11749
  %37 = shl i32 %2, 3, !dbg !11749
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11750
  %42 = or i32 %41, %40, !dbg !11750
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11750
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11751
  ret void, !dbg !11751
}

; Function Attrs: optsize
declare !dbg !11752 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11756 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11757
  ret void, !dbg !11758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11759 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11760
  ret void, !dbg !11761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11762 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11763
  ret i32 %1, !dbg !11764
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11765 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !11766
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11767
  %3 = lshr i32 %2, 10, !dbg !11768
  %4 = and i32 %3, 7, !dbg !11768
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11769
  %6 = load i8, i8* %5, align 1, !dbg !11769
  %7 = zext i8 %6 to i32, !dbg !11769
  %8 = lshr i32 %1, %7, !dbg !11770
  ret i32 %8, !dbg !11771
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11772 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !11773
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11774
  %3 = lshr i32 %2, 13, !dbg !11775
  %4 = and i32 %3, 7, !dbg !11775
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11776
  %6 = load i8, i8* %5, align 1, !dbg !11776
  %7 = zext i8 %6 to i32, !dbg !11776
  %8 = lshr i32 %1, %7, !dbg !11777
  ret i32 %8, !dbg !11778
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11779 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11783, metadata !DIExpression()), !dbg !11784
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11785
  store i32 15, i32* %2, align 4, !dbg !11786
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11787
  %4 = and i32 %3, 262144, !dbg !11789
  %5 = icmp eq i32 %4, 0, !dbg !11790
  br i1 %5, label %8, label %6, !dbg !11791

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11792
  store i32 327680, i32* %7, align 4, !dbg !11794
  br label %15, !dbg !11795

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11796
  %10 = and i32 %9, 65536, !dbg !11798
  %11 = icmp eq i32 %10, 0, !dbg !11799
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11800
  br i1 %11, label %14, label %13, !dbg !11801

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11802
  br label %15, !dbg !11804

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11805
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11807
  %17 = and i32 %16, 1, !dbg !11809
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11810
  store i32 %17, i32* %18, align 4, !dbg !11812
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11813
  %20 = lshr i32 %19, 3, !dbg !11814
  %21 = and i32 %20, 31, !dbg !11814
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11815
  store i32 %21, i32* %22, align 4, !dbg !11816
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11817
  %24 = and i32 %23, 4, !dbg !11819
  %25 = icmp eq i32 %24, 0, !dbg !11820
  br i1 %25, label %28, label %26, !dbg !11821

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11822
  store i32 5, i32* %27, align 4, !dbg !11824
  br label %35, !dbg !11825

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11826
  %30 = and i32 %29, 1, !dbg !11828
  %31 = icmp eq i32 %30, 0, !dbg !11829
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11830
  br i1 %31, label %34, label %33, !dbg !11831

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11832
  br label %35, !dbg !11834

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11835
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11837
  %37 = and i32 %36, 1, !dbg !11839
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11840
  store i32 %37, i32* %38, align 4, !dbg !11842
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11843
  %40 = and i32 %39, 16777216, !dbg !11845
  %41 = icmp eq i32 %40, 0, !dbg !11846
  %42 = select i1 %41, i32 1, i32 2, !dbg !11847
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11848
  store i32 %42, i32* %43, align 4, !dbg !11850
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11851
  %45 = and i32 %44, 4194304, !dbg !11852
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11853
  store i32 %45, i32* %46, align 4, !dbg !11854
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11855
  %48 = and i32 %47, 63, !dbg !11856
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11857
  store i32 %48, i32* %49, align 4, !dbg !11858
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11859
  %51 = lshr i32 %50, 6, !dbg !11860
  %52 = and i32 %51, 511, !dbg !11860
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11861
  store i32 %52, i32* %53, align 4, !dbg !11862
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11863
  %55 = shl i32 %54, 1, !dbg !11864
  %56 = and i32 %55, 393216, !dbg !11864
  %57 = add nuw nsw i32 %56, 131072, !dbg !11864
  %58 = lshr exact i32 %57, 16, !dbg !11865
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11866
  store i32 %58, i32* %59, align 4, !dbg !11867
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11868
  %61 = lshr i32 %60, 24, !dbg !11869
  %62 = and i32 %61, 15, !dbg !11869
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11870
  store i32 %62, i32* %63, align 4, !dbg !11871
  ret void, !dbg !11872
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11873 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11877, metadata !DIExpression()), !dbg !11879
  call void @llvm.dbg.value(metadata i32* %1, metadata !11878, metadata !DIExpression()), !dbg !11879
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11880
  store i32 15, i32* %3, align 4, !dbg !11881
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11882
  %5 = and i32 %4, 3, !dbg !11883
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11884
  store i32 %5, i32* %6, align 4, !dbg !11885
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11886
  %8 = and i32 %7, 240, !dbg !11887
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11888
  store i32 %8, i32* %9, align 4, !dbg !11889
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11890
  %11 = and i32 %10, 7168, !dbg !11891
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11892
  store i32 %11, i32* %12, align 4, !dbg !11893
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11894
  %14 = lshr i32 %13, 3, !dbg !11895
  %15 = and i32 %14, 7168, !dbg !11895
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11896
  store i32 %15, i32* %16, align 4, !dbg !11897
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11898
  %18 = and i32 %17, 7, !dbg !11899
  store i32 %18, i32* %1, align 4, !dbg !11900
  ret void, !dbg !11901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11902 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11903
  %2 = and i32 %1, 128, !dbg !11903
  %3 = icmp eq i32 %2, 0, !dbg !11903
  br i1 %3, label %5, label %4, !dbg !11905

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #27, !dbg !11906
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11908
  br label %5, !dbg !11909

5:                                                ; preds = %4, %0
  ret void, !dbg !11910
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11911 {
  ret void, !dbg !11912
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11916, metadata !DIExpression()), !dbg !11917
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !11918
  ret void, !dbg !11919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11923, metadata !DIExpression()), !dbg !11925
  call void @llvm.dbg.value(metadata i32 1000, metadata !11924, metadata !DIExpression()), !dbg !11925
  %2 = udiv i32 %0, 1000, !dbg !11926
  %3 = add nsw i32 %2, -1, !dbg !11927
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11928
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11929
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11930
  ret void, !dbg !11931
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11932 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11934, metadata !DIExpression()), !dbg !11936
  %3 = bitcast i32* %2 to i8*, !dbg !11937
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11937
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11935, metadata !DIExpression()), !dbg !11938
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11939
  store volatile i32 %4, i32* %2, align 4, !dbg !11938
  %5 = load volatile i32, i32* %2, align 4, !dbg !11940
  %6 = icmp eq i32 %0, -1, !dbg !11941
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11934, metadata !DIExpression()), !dbg !11936
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11936
  call void @llvm.dbg.value(metadata i32 %8, metadata !11934, metadata !DIExpression()), !dbg !11936
  br label %9, !dbg !11943

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11934, metadata !DIExpression()), !dbg !11936
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11944
  call void @llvm.dbg.value(metadata i32 undef, metadata !11934, metadata !DIExpression()), !dbg !11936
  %12 = shl i32 %11, 15, !dbg !11936
  %13 = ashr i32 %12, 31, !dbg !11936
  %14 = add i32 %13, %10, !dbg !11936
  call void @llvm.dbg.value(metadata i32 %14, metadata !11934, metadata !DIExpression()), !dbg !11936
  %15 = icmp eq i32 %14, 0, !dbg !11943
  br i1 %15, label %16, label %9, !dbg !11943

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11947
  ret void, !dbg !11947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11950, metadata !DIExpression()), !dbg !11951
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11952
  ret void, !dbg !11953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11959, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata i32 0, metadata !11962, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata i32 0, metadata !11963, metadata !DIExpression()), !dbg !11964
  %2 = icmp eq i32 %0, 0, !dbg !11965
  br i1 %2, label %52, label %3, !dbg !11967

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !11968
  %5 = icmp eq i32 %4, 16384, !dbg !11971
  br i1 %5, label %6, label %21, !dbg !11972

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !11973
  %8 = select i1 %7, i32 0, i32 5, !dbg !11976
  call void @llvm.dbg.value(metadata i32 %8, metadata !11962, metadata !DIExpression()), !dbg !11964
  %9 = add i32 %0, -120000001, !dbg !11977
  %10 = icmp ult i32 %9, 30000000, !dbg !11977
  %11 = select i1 %10, i32 4, i32 %8, !dbg !11977
  call void @llvm.dbg.value(metadata i32 %11, metadata !11962, metadata !DIExpression()), !dbg !11964
  %12 = icmp ult i32 %9, -30000000, !dbg !11979
  %13 = select i1 %12, i32 %11, i32 3, !dbg !11979
  call void @llvm.dbg.value(metadata i32 %13, metadata !11962, metadata !DIExpression()), !dbg !11964
  %14 = icmp ugt i32 %0, 60000000, !dbg !11981
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !11983
  br i1 %16, label %21, label %17, !dbg !11983

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !11984
  %19 = and i1 %18, %15, !dbg !11987
  %20 = select i1 %19, i32 1, i32 %13, !dbg !11987
  br label %21, !dbg !11987

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !11964
  call void @llvm.dbg.value(metadata i32 %22, metadata !11962, metadata !DIExpression()), !dbg !11964
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !11988
  %24 = icmp eq i32 %23, 0, !dbg !11990
  br i1 %24, label %25, label %41, !dbg !11991

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !11992
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !11995
  %29 = select i1 %28, i32 4, i32 %22, !dbg !11995
  call void @llvm.dbg.value(metadata i32 %29, metadata !11962, metadata !DIExpression()), !dbg !11964
  %30 = icmp ugt i32 %0, 90000000, !dbg !11996
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !11998
  %33 = select i1 %32, i32 3, i32 %29, !dbg !11998
  call void @llvm.dbg.value(metadata i32 %33, metadata !11962, metadata !DIExpression()), !dbg !11964
  %34 = icmp ugt i32 %0, 60000000, !dbg !11999
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12001
  br i1 %36, label %41, label %37, !dbg !12001

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !12002
  %39 = and i1 %38, %35, !dbg !12005
  %40 = select i1 %39, i32 1, i32 %33, !dbg !12005
  br label %41, !dbg !12005

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !12006
  call void @llvm.dbg.value(metadata i32 %42, metadata !11962, metadata !DIExpression()), !dbg !11964
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #27, !dbg !12007
  call void @llvm.dbg.value(metadata i32 2, metadata !11960, metadata !DIExpression()), !dbg !11964
  br label %43, !dbg !12008

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !12006
  call void @llvm.dbg.value(metadata i32 %44, metadata !11960, metadata !DIExpression()), !dbg !11964
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !12009
  call void @llvm.dbg.value(metadata i32 %45, metadata !11961, metadata !DIExpression()), !dbg !11964
  %46 = add nsw i32 %44, -1, !dbg !12011
  call void @llvm.dbg.value(metadata i32 %46, metadata !11960, metadata !DIExpression()), !dbg !11964
  %47 = icmp ne i32 %45, %42, !dbg !12012
  %48 = icmp ne i32 %46, 0, !dbg !12013
  %49 = select i1 %47, i1 %48, i1 false, !dbg !12013
  br i1 %49, label %43, label %50, !dbg !12014, !llvm.loop !12015

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !12017
  call void @llvm.dbg.value(metadata i32 %53, metadata !11963, metadata !DIExpression()), !dbg !11964
  ret i32 %53, !dbg !12018
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12019 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12021
  %2 = and i32 %1, 16384, !dbg !12021
  ret i32 %2, !dbg !12022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12025, metadata !DIExpression()), !dbg !12026
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12027
  %3 = and i32 %2, -8, !dbg !12027
  %4 = or i32 %3, %0, !dbg !12027
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12027
  ret void, !dbg !12028
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12029 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12030
  %2 = and i32 %1, 7, !dbg !12030
  ret i32 %2, !dbg !12031
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12032 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12050, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12051, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 0, metadata !12052, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 0, metadata !12053, metadata !DIExpression()), !dbg !12054
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12055
  %4 = icmp eq i32 %3, 0, !dbg !12057
  br i1 %4, label %5, label %21, !dbg !12058

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #27, !dbg !12059
  call void @llvm.dbg.value(metadata i32 %6, metadata !12053, metadata !DIExpression()), !dbg !12054
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.84() #27, !dbg !12061
  %8 = icmp eq i32 %7, 1, !dbg !12063
  br i1 %8, label %13, label %9, !dbg !12064

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.85() #27, !dbg !12065
  br label %10, !dbg !12067

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.84() #27, !dbg !12068
  %12 = icmp eq i32 %11, 1, !dbg !12069
  br i1 %12, label %13, label %10, !dbg !12067, !llvm.loop !12070

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12072
  %15 = load i32, i32* %14, align 4, !dbg !12072
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12073
  %17 = load i32, i32* %16, align 4, !dbg !12073
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12074
  %19 = load i32, i32* %18, align 4, !dbg !12074
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.86(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #27, !dbg !12075
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !12076
  call void @llvm.dbg.value(metadata i32 %20, metadata !12052, metadata !DIExpression()), !dbg !12054
  br label %21, !dbg !12077

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12078
  call void @llvm.dbg.value(metadata i32 %22, metadata !12052, metadata !DIExpression()), !dbg !12054
  ret i32 %22, !dbg !12079
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12080 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12084, metadata !DIExpression()), !dbg !12085
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.88() #27, !dbg !12086
  %2 = icmp ne i32 %1, 0, !dbg !12088
  call void @llvm.dbg.value(metadata i1 %2, metadata !12084, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12085
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #27, !dbg !12089
  %4 = icmp ne i32 %3, 0, !dbg !12091
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12092
  %6 = zext i1 %5 to i32, !dbg !12092
  call void @llvm.dbg.value(metadata i32 %6, metadata !12084, metadata !DIExpression()), !dbg !12085
  ret i32 %6, !dbg !12093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12098, metadata !DIExpression()), !dbg !12101
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12099, metadata !DIExpression()), !dbg !12101
  call void @llvm.dbg.value(metadata i32 0, metadata !12100, metadata !DIExpression()), !dbg !12101
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12102
  %4 = load i32, i32* %3, align 4, !dbg !12102
  %5 = and i32 %4, 63, !dbg !12103
  %6 = udiv i32 %0, %5, !dbg !12104
  call void @llvm.dbg.value(metadata i32 %6, metadata !12100, metadata !DIExpression()), !dbg !12101
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12105
  %8 = load i32, i32* %7, align 4, !dbg !12105
  %9 = and i32 %8, 511, !dbg !12106
  %10 = mul i32 %9, %6, !dbg !12107
  call void @llvm.dbg.value(metadata i32 %10, metadata !12100, metadata !DIExpression()), !dbg !12101
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12108
  %12 = load i32, i32* %11, align 4, !dbg !12108
  %13 = lshr i32 %12, 15, !dbg !12109
  %14 = and i32 %13, 131070, !dbg !12109
  %15 = add nuw nsw i32 %14, 2, !dbg !12109
  %16 = udiv i32 %10, %15, !dbg !12110
  call void @llvm.dbg.value(metadata i32 %16, metadata !12100, metadata !DIExpression()), !dbg !12101
  ret i32 %16, !dbg !12111
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.84() unnamed_addr #16 !dbg !12112 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12113
  %2 = lshr i32 %1, 1, !dbg !12114
  %3 = and i32 %2, 1, !dbg !12114
  ret i32 %3, !dbg !12115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.85() unnamed_addr #15 !dbg !12116 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12117
  %2 = or i32 %1, 1, !dbg !12117
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12117
  ret void, !dbg !12118
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.86(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12119 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12121, metadata !DIExpression()), !dbg !12125
  call void @llvm.dbg.value(metadata i32 %1, metadata !12122, metadata !DIExpression()), !dbg !12125
  call void @llvm.dbg.value(metadata i32 %2, metadata !12123, metadata !DIExpression()), !dbg !12125
  call void @llvm.dbg.value(metadata i32 %3, metadata !12124, metadata !DIExpression()), !dbg !12125
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12126
  %6 = and i32 %5, -4227072, !dbg !12126
  %7 = or i32 %1, %0, !dbg !12126
  %8 = shl i32 %2, 6, !dbg !12126
  %9 = or i32 %7, %8, !dbg !12126
  %10 = or i32 %9, %6, !dbg !12126
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12126
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12127
  %12 = and i32 %11, -196609, !dbg !12127
  %13 = or i32 %12, %3, !dbg !12127
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12127
  ret void, !dbg !12128
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12129 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12133, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12134, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata i32 0, metadata !12135, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata i32 0, metadata !12136, metadata !DIExpression()), !dbg !12137
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12138
  %4 = load i32, i32* %3, align 4, !dbg !12138
  %5 = lshr i32 %4, 4, !dbg !12138
  %6 = and i32 %5, 15, !dbg !12138
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12138
  %8 = load i8, i8* %7, align 1, !dbg !12138
  %9 = zext i8 %8 to i32, !dbg !12138
  %10 = lshr i32 %0, %9, !dbg !12138
  call void @llvm.dbg.value(metadata i32 %10, metadata !12136, metadata !DIExpression()), !dbg !12137
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12139
  %12 = icmp ult i32 %11, %10, !dbg !12141
  br i1 %12, label %13, label %16, !dbg !12142

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12143
  call void @llvm.dbg.value(metadata i32 %14, metadata !12135, metadata !DIExpression()), !dbg !12137
  %15 = icmp eq i32 %14, 0, !dbg !12145
  br i1 %15, label %16, label %30, !dbg !12147

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.87() #27, !dbg !12148
  br label %17, !dbg !12150

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.88() #27, !dbg !12151
  %19 = icmp eq i32 %18, 1, !dbg !12152
  br i1 %19, label %20, label %17, !dbg !12150, !llvm.loop !12153

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12155
  tail call fastcc void @LL_RCC_SetAHBPrescaler.89(i32 noundef %21) #27, !dbg !12156
  tail call fastcc void @LL_RCC_SetSysClkSource.90() #27, !dbg !12157
  br label %22, !dbg !12158

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.91() #27, !dbg !12159
  %24 = icmp eq i32 %23, 8, !dbg !12160
  br i1 %24, label %25, label %22, !dbg !12158, !llvm.loop !12161

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12163
  %27 = load i32, i32* %26, align 4, !dbg !12163
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.92(i32 noundef %27) #27, !dbg !12164
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12165
  %29 = load i32, i32* %28, align 4, !dbg !12165
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.93(i32 noundef %29) #27, !dbg !12166
  br label %30, !dbg !12167

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12168
  %33 = icmp ugt i32 %32, %10, !dbg !12170
  br i1 %33, label %34, label %36, !dbg !12171

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12172
  call void @llvm.dbg.value(metadata i32 %35, metadata !12135, metadata !DIExpression()), !dbg !12137
  br label %36, !dbg !12174

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12137
  call void @llvm.dbg.value(metadata i32 %37, metadata !12135, metadata !DIExpression()), !dbg !12137
  %38 = icmp eq i32 %37, 0, !dbg !12175
  br i1 %38, label %39, label %40, !dbg !12177

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !12178
  br label %40, !dbg !12180

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.87() unnamed_addr #15 !dbg !12182 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12183
  %2 = or i32 %1, 16777216, !dbg !12183
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12183
  ret void, !dbg !12184
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.88() unnamed_addr #16 !dbg !12185 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12186
  %2 = lshr i32 %1, 25, !dbg !12187
  %3 = and i32 %2, 1, !dbg !12187
  ret i32 %3, !dbg !12188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.89(i32 noundef %0) unnamed_addr #15 !dbg !12189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12191, metadata !DIExpression()), !dbg !12192
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12193
  %3 = and i32 %2, -241, !dbg !12193
  %4 = or i32 %3, %0, !dbg !12193
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12193
  ret void, !dbg !12194
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.90() unnamed_addr #15 !dbg !12195 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12197, metadata !DIExpression()), !dbg !12198
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12199
  %2 = and i32 %1, -4, !dbg !12199
  %3 = or i32 %2, 2, !dbg !12199
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12199
  ret void, !dbg !12200
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.91() unnamed_addr #16 !dbg !12201 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12202
  %2 = and i32 %1, 12, !dbg !12202
  ret i32 %2, !dbg !12203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.92(i32 noundef %0) unnamed_addr #15 !dbg !12204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12206, metadata !DIExpression()), !dbg !12207
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12208
  %3 = and i32 %2, -7169, !dbg !12208
  %4 = or i32 %3, %0, !dbg !12208
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12208
  ret void, !dbg !12209
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.93(i32 noundef %0) unnamed_addr #15 !dbg !12210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12212, metadata !DIExpression()), !dbg !12213
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12214
  %3 = and i32 %2, -57345, !dbg !12214
  %4 = or i32 %3, %0, !dbg !12214
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12214
  ret void, !dbg !12215
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !12216 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12217
  %2 = lshr i32 %1, 27, !dbg !12218
  %3 = and i32 %2, 1, !dbg !12218
  ret i32 %3, !dbg !12219
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12224, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.value(metadata i32 %1, metadata !12225, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12226, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12227, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.value(metadata i32 0, metadata !12228, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.value(metadata i32 0, metadata !12229, metadata !DIExpression()), !dbg !12230
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12231
  %6 = icmp eq i32 %5, 0, !dbg !12233
  br i1 %6, label %7, label %27, !dbg !12234

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #27, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %8, metadata !12229, metadata !DIExpression()), !dbg !12230
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.94() #27, !dbg !12237
  %10 = icmp eq i32 %9, 1, !dbg !12239
  br i1 %10, label %19, label %11, !dbg !12240

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12241
  br i1 %12, label %13, label %14, !dbg !12244

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !12245
  br label %15, !dbg !12247

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.95() #27, !dbg !12248
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.96() #27, !dbg !12250
  br label %16, !dbg !12251

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.94() #27, !dbg !12252
  %18 = icmp eq i32 %17, 1, !dbg !12253
  br i1 %18, label %19, label %16, !dbg !12251, !llvm.loop !12254

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12256
  %21 = load i32, i32* %20, align 4, !dbg !12256
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12257
  %23 = load i32, i32* %22, align 4, !dbg !12257
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12258
  %25 = load i32, i32* %24, align 4, !dbg !12258
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.86(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #27, !dbg !12259
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !12260
  call void @llvm.dbg.value(metadata i32 %26, metadata !12228, metadata !DIExpression()), !dbg !12230
  br label %27, !dbg !12261

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12262
  call void @llvm.dbg.value(metadata i32 %28, metadata !12228, metadata !DIExpression()), !dbg !12230
  ret i32 %28, !dbg !12263
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.94() unnamed_addr #16 !dbg !12264 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12265
  %2 = lshr i32 %1, 17, !dbg !12266
  %3 = and i32 %2, 1, !dbg !12266
  ret i32 %3, !dbg !12267
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12268 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12269
  %2 = or i32 %1, 262144, !dbg !12269
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12269
  ret void, !dbg !12270
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.95() unnamed_addr #15 !dbg !12271 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12272
  %2 = and i32 %1, -262145, !dbg !12272
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12272
  ret void, !dbg !12273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.96() unnamed_addr #15 !dbg !12274 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12275
  %2 = or i32 %1, 65536, !dbg !12275
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12275
  ret void, !dbg !12276
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !12277 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12280, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 undef, metadata !12280, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 undef, metadata !12280, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12296
  ret void, !dbg !12297
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12298 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12302, metadata !DIExpression()), !dbg !12304
  %2 = icmp eq i8* %0, null, !dbg !12305
  br i1 %2, label %29, label %3, !dbg !12307

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12308
  %5 = icmp eq i8 %4, 0, !dbg !12309
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12310
  br i1 %6, label %29, label %8, !dbg !12310

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12303, metadata !DIExpression()), !dbg !12304
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12311

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12303, metadata !DIExpression()), !dbg !12304
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !12313
  br i1 %10, label %11, label %15, !dbg !12318

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12319
  %13 = load i8*, i8** %12, align 4, !dbg !12319
  %14 = icmp eq i8* %13, %0, !dbg !12320
  br i1 %14, label %29, label %15, !dbg !12321

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12322
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12303, metadata !DIExpression()), !dbg !12304
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12323
  br i1 %17, label %7, label %8, !dbg !12324, !llvm.loop !12325

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12303, metadata !DIExpression()), !dbg !12304
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !12327
  br i1 %20, label %21, label %26, !dbg !12331

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12332
  %23 = load i8*, i8** %22, align 4, !dbg !12332
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !12333
  %25 = icmp eq i32 %24, 0, !dbg !12334
  br i1 %25, label %29, label %26, !dbg !12335

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12336
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12303, metadata !DIExpression()), !dbg !12304
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12337
  br i1 %28, label %29, label %18, !dbg !12311, !llvm.loop !12338

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12304
  ret %struct.device* %30, !dbg !12340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !12341 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12345, metadata !DIExpression()), !dbg !12346
  %2 = icmp eq %struct.device* %0, null, !dbg !12347
  br i1 %2, label %14, label %3, !dbg !12349

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12350
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12350
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12351
  %7 = load i8, i8* %6, align 1, !dbg !12351
  %8 = and i8 %7, 1, !dbg !12351
  %9 = icmp eq i8 %8, 0, !dbg !12351
  br i1 %9, label %14, label %10, !dbg !12352

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12353
  %12 = load i8, i8* %11, align 1, !dbg !12353
  %13 = icmp eq i8 %12, 0, !dbg !12354
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12346
  ret i1 %15, !dbg !12355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !12356 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12361, metadata !DIExpression()), !dbg !12362
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12363
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12364
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12365 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12373, metadata !DIExpression()), !dbg !12378
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12374, metadata !DIExpression()), !dbg !12378
  call void @llvm.dbg.value(metadata i8* %2, metadata !12375, metadata !DIExpression()), !dbg !12378
  %5 = bitcast i32* %4 to i8*, !dbg !12379
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12376, metadata !DIExpression()), !dbg !12378
  store i32 0, i32* %4, align 4, !dbg !12380
  call void @llvm.dbg.value(metadata i32* %4, metadata !12376, metadata !DIExpression(DW_OP_deref)), !dbg !12378
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !12381
  call void @llvm.dbg.value(metadata i16* %6, metadata !12377, metadata !DIExpression()), !dbg !12378
  %7 = load i32, i32* %4, align 4, !dbg !12382
  call void @llvm.dbg.value(metadata i32 %7, metadata !12376, metadata !DIExpression()), !dbg !12378
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !12383
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12384
  ret i32 %8, !dbg !12385
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12386 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12390, metadata !DIExpression()), !dbg !12396
  call void @llvm.dbg.value(metadata i32* %1, metadata !12391, metadata !DIExpression()), !dbg !12396
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12397
  %4 = load i16*, i16** %3, align 4, !dbg !12397
  call void @llvm.dbg.value(metadata i16* %4, metadata !12392, metadata !DIExpression()), !dbg !12396
  %5 = icmp eq i16* %4, null, !dbg !12398
  br i1 %5, label %14, label %6, !dbg !12399

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12400
  call void @llvm.dbg.value(metadata i32 %7, metadata !12393, metadata !DIExpression()), !dbg !12400
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12401
  %9 = load i16, i16* %8, align 2, !dbg !12401
  %10 = add i16 %9, -32767, !dbg !12402
  %11 = icmp ult i16 %10, 2, !dbg !12402
  %12 = add i32 %7, 1, !dbg !12403
  call void @llvm.dbg.value(metadata i32 %12, metadata !12393, metadata !DIExpression()), !dbg !12400
  br i1 %11, label %13, label %6, !dbg !12402, !llvm.loop !12405

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12408
  br label %14, !dbg !12409

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12411 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12415, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i32 %1, metadata !12416, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12417, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i8* %3, metadata !12418, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i32 0, metadata !12419, metadata !DIExpression()), !dbg !12427
  %5 = icmp eq i32 %1, 0, !dbg !12428
  br i1 %5, label %16, label %8, !dbg !12429

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12419, metadata !DIExpression()), !dbg !12427
  %7 = icmp eq i32 %15, %1, !dbg !12428
  br i1 %7, label %16, label %8, !dbg !12429, !llvm.loop !12430

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12419, metadata !DIExpression()), !dbg !12427
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12432
  %11 = load i16, i16* %10, align 2, !dbg !12432
  call void @llvm.dbg.value(metadata i16 %11, metadata !12421, metadata !DIExpression()), !dbg !12433
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !12434
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12424, metadata !DIExpression()), !dbg !12433
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !12435
  call void @llvm.dbg.value(metadata i32 %13, metadata !12425, metadata !DIExpression()), !dbg !12433
  %14 = icmp slt i32 %13, 0, !dbg !12436
  %15 = add nuw i32 %9, 1, !dbg !12438
  call void @llvm.dbg.value(metadata i32 %15, metadata !12419, metadata !DIExpression()), !dbg !12427
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !12440 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12444, metadata !DIExpression()), !dbg !12447
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12445, metadata !DIExpression()), !dbg !12447
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12446, metadata !DIExpression()), !dbg !12447
  %2 = sext i16 %0 to i32, !dbg !12448
  %3 = icmp slt i16 %0, 1, !dbg !12450
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12451
  %6 = add nsw i32 %2, -1, !dbg !12451
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12451
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12451
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12445, metadata !DIExpression()), !dbg !12447
  ret %struct.device* %8, !dbg !12452
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12453 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12455, metadata !DIExpression()), !dbg !12460
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12456, metadata !DIExpression()), !dbg !12460
  call void @llvm.dbg.value(metadata i8* %2, metadata !12457, metadata !DIExpression()), !dbg !12460
  %5 = bitcast i32* %4 to i8*, !dbg !12461
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12461
  call void @llvm.dbg.value(metadata i32 0, metadata !12458, metadata !DIExpression()), !dbg !12460
  store i32 0, i32* %4, align 4, !dbg !12462
  call void @llvm.dbg.value(metadata i32* %4, metadata !12458, metadata !DIExpression(DW_OP_deref)), !dbg !12460
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !12463
  call void @llvm.dbg.value(metadata i16* %6, metadata !12459, metadata !DIExpression()), !dbg !12460
  %7 = load i32, i32* %4, align 4, !dbg !12464
  call void @llvm.dbg.value(metadata i32 %7, metadata !12458, metadata !DIExpression()), !dbg !12460
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !12465
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12466
  ret i32 %8, !dbg !12467
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12468 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12470, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.value(metadata i32* %1, metadata !12471, metadata !DIExpression()), !dbg !12475
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12476
  %4 = load i16*, i16** %3, align 4, !dbg !12476
  call void @llvm.dbg.value(metadata i16* %4, metadata !12472, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.value(metadata i32 0, metadata !12473, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.value(metadata i32 0, metadata !12474, metadata !DIExpression()), !dbg !12475
  %5 = icmp eq i16* %4, null, !dbg !12477
  br i1 %5, label %22, label %6, !dbg !12479

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12473, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.value(metadata i16* %8, metadata !12472, metadata !DIExpression()), !dbg !12475
  %9 = load i16, i16* %8, align 2, !dbg !12480
  %10 = icmp eq i16 %9, -32768, !dbg !12484
  call void @llvm.dbg.value(metadata i32 undef, metadata !12473, metadata !DIExpression()), !dbg !12475
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12485
  call void @llvm.dbg.value(metadata i16* %11, metadata !12472, metadata !DIExpression()), !dbg !12475
  %12 = zext i1 %10 to i32, !dbg !12486
  %13 = add i32 %7, %12, !dbg !12486
  call void @llvm.dbg.value(metadata i32 %13, metadata !12473, metadata !DIExpression()), !dbg !12475
  %14 = icmp eq i32 %13, 2, !dbg !12487
  br i1 %14, label %15, label %6, !dbg !12488

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12475
  call void @llvm.dbg.value(metadata i32 %16, metadata !12474, metadata !DIExpression()), !dbg !12475
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12489
  %18 = load i16, i16* %17, align 2, !dbg !12489
  %19 = icmp eq i16 %18, 32767, !dbg !12490
  %20 = add i32 %16, 1, !dbg !12491
  call void @llvm.dbg.value(metadata i32 %20, metadata !12474, metadata !DIExpression()), !dbg !12475
  br i1 %19, label %21, label %15, !dbg !12493, !llvm.loop !12494

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12496
  br label %22, !dbg !12497

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12498
  call void @llvm.dbg.value(metadata i16* %23, metadata !12472, metadata !DIExpression()), !dbg !12475
  ret i16* %23, !dbg !12499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12500 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12503
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12504
  ret i32* %2, !dbg !12505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12506 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12654, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12655, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12656, metadata !DIExpression()), !dbg !12657
  ret void, !dbg !12658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12663, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32 %1, metadata !12664, metadata !DIExpression()), !dbg !12665
  ret void, !dbg !12666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12667 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12671, metadata !DIExpression()), !dbg !12673
  call void @llvm.dbg.value(metadata i32 %1, metadata !12672, metadata !DIExpression()), !dbg !12673
  ret void, !dbg !12674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12679, metadata !DIExpression()), !dbg !12681
  call void @llvm.dbg.value(metadata i8* %1, metadata !12680, metadata !DIExpression()), !dbg !12681
  ret i32 -134, !dbg !12682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12687, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata i8* %1, metadata !12688, metadata !DIExpression()), !dbg !12689
  ret i32 -134, !dbg !12690
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12691 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12694, metadata !DIExpression()), !dbg !12695
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12696, !srcloc !12702
  call void @llvm.dbg.value(metadata i32 undef, metadata !12699, metadata !DIExpression()) #25, !dbg !12703
  call void @llvm.dbg.value(metadata i32 undef, metadata !12700, metadata !DIExpression()) #25, !dbg !12703
  br label %3, !dbg !12704

3:                                                ; preds = %3, %1
  br label %3, !dbg !12705, !llvm.loop !12708
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12711 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12715, metadata !DIExpression()), !dbg !12717
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12716, metadata !DIExpression()), !dbg !12717
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12718
  unreachable, !dbg !12718
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12721, metadata !DIExpression()), !dbg !12722
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12723
  unreachable, !dbg !12723
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12726, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12727, metadata !DIExpression()), !dbg !12730
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12731, !srcloc !12702
  call void @llvm.dbg.value(metadata i32 undef, metadata !12699, metadata !DIExpression()) #25, !dbg !12733
  call void @llvm.dbg.value(metadata i32 undef, metadata !12700, metadata !DIExpression()) #25, !dbg !12733
  call void @llvm.dbg.value(metadata i32 undef, metadata !12728, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12729, metadata !DIExpression()), !dbg !12730
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12734
  br i1 %4, label %6, label %5, !dbg !12736

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #27, !dbg !12737
  br label %7, !dbg !12738

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #27, !dbg !12737
  br label %7, !dbg !12741

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12731
  call void @llvm.dbg.value(metadata i32 %8, metadata !12699, metadata !DIExpression()) #25, !dbg !12733
  call void @llvm.dbg.value(metadata i32 %8, metadata !12728, metadata !DIExpression()), !dbg !12730
  %9 = tail call fastcc %struct.k_thread* @k_current_get.103() #28, !dbg !12743
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12729, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.value(metadata i32 undef, metadata !12744, metadata !DIExpression()) #25, !dbg !12747
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !12749, !srcloc !12750
  tail call fastcc void @k_thread_abort.104(%struct.k_thread* noundef %9) #27, !dbg !12751
  ret void, !dbg !12754
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.103() unnamed_addr #9 !dbg !12755 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.105() #28, !dbg !12759
  ret %struct.k_thread* %1, !dbg !12760
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.104(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12761 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12765, metadata !DIExpression()), !dbg !12766
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12767, !srcloc !12769
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !12770
  ret void, !dbg !12771
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.105() unnamed_addr #9 !dbg !12772 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12773, !srcloc !12775
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !12776
  ret %struct.k_thread* %1, !dbg !12777
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12778 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12782, metadata !DIExpression()), !dbg !12785
  call void @llvm.dbg.value(metadata i32 %1, metadata !12783, metadata !DIExpression()), !dbg !12785
  call void @llvm.dbg.value(metadata i32 %2, metadata !12784, metadata !DIExpression()), !dbg !12785
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !12786
  ret void, !dbg !12787
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12788 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12792, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata i8* %1, metadata !12793, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata i32 %2, metadata !12794, metadata !DIExpression()), !dbg !12795
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !12796
  ret void, !dbg !12797
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12798 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !12799
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #27, !dbg !12800
  ret void, !dbg !12801
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12804, metadata !DIExpression()), !dbg !12805
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !12806
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12807
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12808
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12809
  %4 = trunc i32 %0 to i8, !dbg !12810
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12811
  store i8 %4, i8* %5, align 4, !dbg !12812
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12813
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !12814
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12815
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12816
  store i8* %8, i8** %9, align 4, !dbg !12817
  ret void, !dbg !12818
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12821, metadata !DIExpression()), !dbg !12827
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12828
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12822, metadata !DIExpression()), !dbg !12827
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12829
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12823, metadata !DIExpression()), !dbg !12827
  call void @llvm.dbg.value(metadata i8* null, metadata !12826, metadata !DIExpression()), !dbg !12827
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12830
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12831
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #26, !dbg !12832
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !12833
  ret void, !dbg !12834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12835 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12839, metadata !DIExpression()), !dbg !12840
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12841
  ret i8* %2, !dbg !12842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12843 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12848, metadata !DIExpression()), !dbg !12849
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12850
  %3 = load i8, i8* %2, align 1, !dbg !12851
  %4 = and i8 %3, -5, !dbg !12851
  store i8 %4, i8* %2, align 1, !dbg !12851
  ret void, !dbg !12852
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !12853 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !12856
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !12857
  %3 = ptrtoint i8* %2 to i32, !dbg !12866
  %4 = add i32 %3, 2048, !dbg !12867
  call void @llvm.dbg.value(metadata i32 %4, metadata !12861, metadata !DIExpression()) #25, !dbg !12868
  call void @llvm.dbg.value(metadata i32 %4, metadata !12869, metadata !DIExpression()) #25, !dbg !12872
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !12874, !srcloc !12875
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12876
  %6 = or i32 %5, 512, !dbg !12876
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12876
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -2, i32 noundef 255) #26, !dbg !12877
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -5, i32 noundef 0) #26, !dbg !12880
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -12, i32 noundef 0) #26, !dbg !12881
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -11, i32 noundef 0) #26, !dbg !12882
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -10, i32 noundef 0) #26, !dbg !12883
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -4, i32 noundef 0) #26, !dbg !12884
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12885
  %8 = or i32 %7, 458752, !dbg !12885
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12885
  tail call void @z_arm_fault_init() #26, !dbg !12886
  tail call void @z_arm_cpu_idle_init() #26, !dbg !12887
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12888
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12891
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !12892
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !12893
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12894
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !12894
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12855, metadata !DIExpression()), !dbg !12895
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !12896
  call void @z_device_state_init() #26, !dbg !12897
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !12898
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !12899
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !12900
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !12901
  unreachable, !dbg !12901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2195, metadata !DIExpression()), !dbg !12902
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12903
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12903
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2196, metadata !DIExpression()), !dbg !12902
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2196, metadata !DIExpression()), !dbg !12902
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12904
  br i1 %7, label %8, label %35, !dbg !12905

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2196, metadata !DIExpression()), !dbg !12902
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12906
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12906
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2206, metadata !DIExpression()), !dbg !12907
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12908
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12908
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !12909
  call void @llvm.dbg.value(metadata i32 %14, metadata !2210, metadata !DIExpression()), !dbg !12907
  %15 = icmp eq %struct.device* %11, null, !dbg !12910
  br i1 %15, label %32, label %16, !dbg !12912

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12913
  br i1 %17, label %26, label %18, !dbg !12916

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12917
  call void @llvm.dbg.value(metadata i32 %19, metadata !2210, metadata !DIExpression()), !dbg !12907
  %20 = icmp ult i32 %19, 255, !dbg !12919
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12919
  call void @llvm.dbg.value(metadata i32 %21, metadata !2210, metadata !DIExpression()), !dbg !12907
  %22 = trunc i32 %21 to i8, !dbg !12920
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12921
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12921
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12922
  store i8 %22, i8* %25, align 1, !dbg !12923
  br label %26, !dbg !12924

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12925
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12925
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12926
  %30 = load i8, i8* %29, align 1, !dbg !12927
  %31 = or i8 %30, 1, !dbg !12927
  store i8 %31, i8* %29, align 1, !dbg !12927
  br label %32, !dbg !12928

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12929
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2196, metadata !DIExpression()), !dbg !12902
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12904
  br i1 %34, label %8, label %35, !dbg !12905, !llvm.loop !12930

35:                                               ; preds = %32, %1
  ret void, !dbg !12932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.112(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12935, metadata !DIExpression()), !dbg !12937
  call void @llvm.dbg.value(metadata i32 %1, metadata !12936, metadata !DIExpression()), !dbg !12937
  %3 = trunc i32 %1 to i8, !dbg !12938
  %4 = shl i8 %3, 4, !dbg !12938
  %5 = and i32 %0, 15, !dbg !12941
  %6 = add nsw i32 %5, -4, !dbg !12942
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12943
  store volatile i8 %4, i8* %7, align 1, !dbg !12944
  ret void, !dbg !12945
}

; Function Attrs: optsize
declare !dbg !12946 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12947 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12950, metadata !DIExpression()), !dbg !12951
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12952
  store i8 1, i8* %2, align 1, !dbg !12953
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12954
  store i8 1, i8* %3, align 4, !dbg !12955
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12956
  store i32 0, i32* %4, align 4, !dbg !12957
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12958
  store i32 0, i32* %5, align 4, !dbg !12959
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12960
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12961
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12962
  ret void, !dbg !12963
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12964 {
  tail call void @z_sched_init() #26, !dbg !12967
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12968
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0)) #26, !dbg !12969
  call void @llvm.dbg.value(metadata i8* %1, metadata !12966, metadata !DIExpression()), !dbg !12970
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !12971
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12972
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !12973
  ret i8* %1, !dbg !12974
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !12975 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12979, metadata !DIExpression()), !dbg !12980
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !12981
  unreachable, !dbg !12982
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12983 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12985, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.value(metadata i8* %1, metadata !12986, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.value(metadata i8* %2, metadata !12987, metadata !DIExpression()), !dbg !12988
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12989
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !12990
  tail call void @boot_banner() #26, !dbg !12991
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !12992
  tail call void @z_init_static_threads() #26, !dbg !12993
  tail call void @main() #26, !dbg !12994
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12995
  %5 = and i8 %4, -2, !dbg !12995
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12995
  ret void, !dbg !12996
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12997 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13007, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i8* %1, metadata !13008, metadata !DIExpression()), !dbg !13009
  ret void, !dbg !13010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13011 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13013, metadata !DIExpression()), !dbg !13015
  call void @llvm.dbg.value(metadata i8* %1, metadata !13014, metadata !DIExpression()), !dbg !13015
  ret void, !dbg !13016
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13017 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !13018, !srcloc !13025
  call void @llvm.dbg.value(metadata i32 %1, metadata !13021, metadata !DIExpression()) #25, !dbg !13026
  %2 = icmp ne i32 %1, 0, !dbg !13027
  ret i1 %2, !dbg !13028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13029 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13030
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13031
  %3 = load i8, i8* %2, align 4, !dbg !13032
  %4 = or i8 %3, 1, !dbg !13032
  store i8 %4, i8* %2, align 4, !dbg !13032
  ret void, !dbg !13033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13034 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13035
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13036
  %3 = load i8, i8* %2, align 4, !dbg !13037
  %4 = and i8 %3, -2, !dbg !13037
  store i8 %4, i8* %2, align 4, !dbg !13037
  ret void, !dbg !13038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13039 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13040
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13041
  %3 = load i8, i8* %2, align 4, !dbg !13041
  %4 = and i8 %3, 1, !dbg !13042
  %5 = icmp ne i8 %4, 0, !dbg !13043
  ret i1 %5, !dbg !13044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13045 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13049, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i8* %1, metadata !13050, metadata !DIExpression()), !dbg !13051
  ret i32 -88, !dbg !13052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13053 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13057, metadata !DIExpression()), !dbg !13058
  ret i8* null, !dbg !13059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13060 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13064, metadata !DIExpression()), !dbg !13067
  call void @llvm.dbg.value(metadata i8* %1, metadata !13065, metadata !DIExpression()), !dbg !13067
  call void @llvm.dbg.value(metadata i32 %2, metadata !13066, metadata !DIExpression()), !dbg !13067
  ret i32 -88, !dbg !13068
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2217 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2331, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i8* %1, metadata !2332, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i32 %2, metadata !2333, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i32 0, metadata !2334, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i8 undef, metadata !2336, metadata !DIExpression()), !dbg !13069
  %4 = icmp eq i8* %1, null, !dbg !13070
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13072
  br i1 %6, label %46, label %7, !dbg !13072

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13073
  %9 = load i8, i8* %8, align 1, !dbg !13073
  call void @llvm.dbg.value(metadata i8 %9, metadata !2336, metadata !DIExpression()), !dbg !13069
  %10 = add i32 %2, -1, !dbg !13074
  call void @llvm.dbg.value(metadata i32 %10, metadata !2333, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i8 0, metadata !2337, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.value(metadata i8 %9, metadata !2336, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i32 0, metadata !2334, metadata !DIExpression()), !dbg !13069
  %11 = icmp eq i8 %9, 0, !dbg !13076
  br i1 %11, label %12, label %15, !dbg !13078

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13079
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13080
  store i8 0, i8* %14, align 1, !dbg !13081
  br label %46, !dbg !13082

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2337, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.value(metadata i8 %17, metadata !2336, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i32 %18, metadata !2334, metadata !DIExpression()), !dbg !13069
  %19 = zext i8 %17 to i32, !dbg !13083
  %20 = zext i8 %16 to i32, !dbg !13084
  %21 = shl nuw i32 1, %20, !dbg !13084
  call void @llvm.dbg.value(metadata i32 %21, metadata !2335, metadata !DIExpression()), !dbg !13069
  %22 = and i32 %21, %19, !dbg !13086
  %23 = icmp eq i32 %22, 0, !dbg !13088
  br i1 %23, label %42, label %24, !dbg !13089

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13090
  %26 = sub i32 %10, %18, !dbg !13091
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13092
  %28 = load i8*, i8** %27, align 4, !dbg !13092
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13093
  %30 = load i32, i32* %29, align 4, !dbg !13093
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !13094
  %32 = add i32 %31, %18, !dbg !13095
  call void @llvm.dbg.value(metadata i32 %32, metadata !2334, metadata !DIExpression()), !dbg !13069
  %33 = trunc i32 %21 to i8, !dbg !13096
  %34 = xor i8 %33, -1, !dbg !13096
  %35 = and i8 %17, %34, !dbg !13096
  call void @llvm.dbg.value(metadata i8 %35, metadata !2336, metadata !DIExpression()), !dbg !13069
  %36 = icmp eq i8 %35, 0, !dbg !13097
  br i1 %36, label %12, label %37, !dbg !13099

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13100
  %39 = sub i32 %10, %32, !dbg !13102
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.114, i32 0, i32 0), i32 noundef 1) #27, !dbg !13103
  %41 = add i32 %40, %32, !dbg !13104
  call void @llvm.dbg.value(metadata i32 %41, metadata !2334, metadata !DIExpression()), !dbg !13069
  br label %42, !dbg !13105

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13069
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13069
  call void @llvm.dbg.value(metadata i8 %44, metadata !2336, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i32 %43, metadata !2334, metadata !DIExpression()), !dbg !13069
  %45 = add i8 %16, 1, !dbg !13106
  call void @llvm.dbg.value(metadata i8 %45, metadata !2337, metadata !DIExpression()), !dbg !13075
  br label %15, !dbg !13078

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.115, i32 0, i32 0), %3 ], !dbg !13069
  ret i8* %47, !dbg !13107
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13108 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13112, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.value(metadata i32 %1, metadata !13113, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.value(metadata i8* %2, metadata !13114, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.value(metadata i32 %3, metadata !13115, metadata !DIExpression()), !dbg !13117
  %5 = icmp ult i32 %1, %3, !dbg !13118
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13118
  call void @llvm.dbg.value(metadata i32 %6, metadata !13116, metadata !DIExpression()), !dbg !13117
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !13119
  ret i32 %6, !dbg !13120
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13121 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13125, metadata !DIExpression()), !dbg !13126
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !13127
  ret void, !dbg !13128
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13129 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13138, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13139, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata i32 %2, metadata !13140, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13141, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata i8* %4, metadata !13142, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata i8* %5, metadata !13143, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata i8* %6, metadata !13144, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata i32 %7, metadata !13145, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata i32 %8, metadata !13146, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata i8* undef, metadata !13147, metadata !DIExpression()), !dbg !13149
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13150
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #27, !dbg !13151
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13152
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !13153
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !13154
  call void @llvm.dbg.value(metadata i8* %13, metadata !13148, metadata !DIExpression()), !dbg !13149
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !13155
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13156
  store i8* null, i8** %14, align 4, !dbg !13157
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13158
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13158
  br i1 %16, label %20, label %17, !dbg !13160

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !13161
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !13161
  br label %20, !dbg !13162

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !13149
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13163
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !13165
  ret i8* %13, !dbg !13166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !13167 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13172, metadata !DIExpression()), !dbg !13173
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13174
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !13175
  ret void, !dbg !13176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13177 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13182, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 %1, metadata !13183, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 %2, metadata !13184, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 %3, metadata !13185, metadata !DIExpression()), !dbg !13186
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13187
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13188
  %6 = trunc i32 %3 to i8, !dbg !13189
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13190
  store i8 %6, i8* %7, align 4, !dbg !13191
  %8 = trunc i32 %2 to i8, !dbg !13192
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13193
  store i8 %8, i8* %9, align 1, !dbg !13194
  %10 = trunc i32 %1 to i8, !dbg !13195
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13196
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13196
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13196
  store i8 %10, i8* %13, align 2, !dbg !13197
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13198
  store i8 0, i8* %14, align 1, !dbg !13199
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !13200
  ret void, !dbg !13201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !13202 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13206, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13207, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.value(metadata i32 %2, metadata !13208, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.value(metadata i32 0, metadata !13213, metadata !DIExpression()), !dbg !13214
  %4 = add i32 %2, 7, !dbg !13215
  %5 = and i32 %4, -8, !dbg !13215
  %6 = add i32 %5, 64, !dbg !13215
  call void @llvm.dbg.value(metadata i32 %6, metadata !13209, metadata !DIExpression()), !dbg !13214
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.125(%struct.z_thread_stack_element* noundef %1) #27, !dbg !13217
  call void @llvm.dbg.value(metadata i8* %7, metadata !13212, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.value(metadata i32 %5, metadata !13210, metadata !DIExpression()), !dbg !13214
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13218
  call void @llvm.dbg.value(metadata i8* %8, metadata !13211, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.value(metadata i32 0, metadata !13213, metadata !DIExpression()), !dbg !13214
  %9 = ptrtoint i8* %7 to i32, !dbg !13219
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13220
  store i32 %9, i32* %10, align 4, !dbg !13221
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13222
  store i32 %5, i32* %11, align 4, !dbg !13223
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !13224
  store i32 0, i32* %12, align 4, !dbg !13225
  call void @llvm.dbg.value(metadata i8* %8, metadata !13211, metadata !DIExpression()), !dbg !13214
  ret i8* %8, !dbg !13226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.125(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13227 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13231, metadata !DIExpression()), !dbg !13232
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13233
  ret i8* %2, !dbg !13234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13235 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13240, metadata !DIExpression()), !dbg !13241
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13242
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !13243
  ret void, !dbg !13244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13245 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13247, metadata !DIExpression()), !dbg !13248
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13249
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !13250
  ret void, !dbg !13251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13252 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13256, metadata !DIExpression()), !dbg !13257
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13258
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13259
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13260
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13261
  ret void, !dbg !13262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13263 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13268, metadata !DIExpression()), !dbg !13269
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13270
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13271
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13272
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13273
  ret void, !dbg !13274
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13275 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !13292, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13283, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13284, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata i32 %2, metadata !13285, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13286, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata i8* %4, metadata !13287, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata i8* %5, metadata !13288, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata i8* %6, metadata !13289, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata i32 %7, metadata !13290, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata i32 %8, metadata !13291, metadata !DIExpression()), !dbg !13293
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !13294
  %13 = icmp eq i64 %11, -1, !dbg !13295
  br i1 %13, label %15, label %14, !dbg !13297

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !13298
  br label %15, !dbg !13300

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !13301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13302 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13307, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13306, metadata !DIExpression()), !dbg !13308
  %4 = icmp eq i64 %3, 0, !dbg !13309
  br i1 %4, label %5, label %6, !dbg !13311

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !13312
  br label %7, !dbg !13314

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !13315
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13318 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13322, metadata !DIExpression()), !dbg !13323
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13324, !srcloc !13326
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !13327
  ret void, !dbg !13328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13329 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13332, metadata !DIExpression()), !dbg !13333
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13331, metadata !DIExpression()), !dbg !13333
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13334
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !13335
  ret void, !dbg !13336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13337 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13339, metadata !DIExpression()), !dbg !13359
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !13360

1:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !13361
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13357, metadata !DIExpression()), !dbg !13362
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !13363

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13339, metadata !DIExpression()), !dbg !13359
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13364
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13364
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13367
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !13367
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13368
  %9 = load i32, i32* %8, align 4, !dbg !13368
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13369
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !13369
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13370
  %13 = load i8*, i8** %12, align 4, !dbg !13370
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13371
  %15 = load i8*, i8** %14, align 4, !dbg !13371
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13372
  %17 = load i8*, i8** %16, align 4, !dbg !13372
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13373
  %19 = load i32, i32* %18, align 4, !dbg !13373
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13374
  %21 = load i32, i32* %20, align 4, !dbg !13374
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #27, !dbg !13375
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13376
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !13377
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !13378
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !13378
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13379
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !13339, metadata !DIExpression()), !dbg !13359
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13380
  br i1 %27, label %2, label %1, !dbg !13360, !llvm.loop !13382

28:                                               ; preds = %0
  tail call void @k_sched_lock() #26, !dbg !13361
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13357, metadata !DIExpression()), !dbg !13362
  br label %29, !dbg !13363

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #26, !dbg !13384
  ret void, !dbg !13385

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13357, metadata !DIExpression()), !dbg !13362
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !13386
  %33 = load i32, i32* %32, align 4, !dbg !13386
  %34 = icmp eq i32 %33, -1, !dbg !13390
  br i1 %34, label %43, label %35, !dbg !13391

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !13392
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !13392
  %38 = icmp sgt i32 %33, 0, !dbg !13394
  %39 = select i1 %38, i32 %33, i32 0, !dbg !13394
  %40 = zext i32 %39 to i64, !dbg !13394
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #27, !dbg !13394
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !13395
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #27, !dbg !13395
  br label %43, !dbg !13396

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !13397
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !13357, metadata !DIExpression()), !dbg !13362
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13398
  br i1 %45, label %30, label %29, !dbg !13363, !llvm.loop !13400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !13402 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13407, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.value(metadata i64 %0, metadata !13409, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i32 1000, metadata !13414, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i32 10000, metadata !13415, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i8 1, metadata !13416, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i8 0, metadata !13417, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i8 1, metadata !13418, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i8 0, metadata !13419, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i8 1, metadata !13420, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i8 0, metadata !13421, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i64 0, metadata !13422, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i64 0, metadata !13422, metadata !DIExpression()), !dbg !13426
  %2 = mul i64 %0, 10, !dbg !13428
  ret i64 %2, !dbg !13434
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !13435 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13437, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata i8* %1, metadata !13438, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata i8* %2, metadata !13439, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata i8* %3, metadata !13440, metadata !DIExpression()), !dbg !13441
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13442
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13443
  %7 = load i8, i8* %6, align 4, !dbg !13444
  %8 = or i8 %7, 4, !dbg !13444
  store i8 %8, i8* %6, align 4, !dbg !13444
  tail call void @z_thread_essential_clear() #27, !dbg !13445
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13446
  unreachable, !dbg !13446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13447 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13451, metadata !DIExpression()), !dbg !13452
  ret i32 -134, !dbg !13453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13454 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13458, metadata !DIExpression()), !dbg !13460
  call void @llvm.dbg.value(metadata i32 %1, metadata !13459, metadata !DIExpression()), !dbg !13460
  ret i32 -134, !dbg !13461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13462 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13469, metadata !DIExpression()), !dbg !13471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13470, metadata !DIExpression()), !dbg !13471
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13472
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13474
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13471
  ret i32 %6, !dbg !13475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13476 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13480, metadata !DIExpression()), !dbg !13481
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13482
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13481
  ret i32 %3, !dbg !13484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13485 {
  tail call void @sys_clock_idle_exit() #26, !dbg !13487
  ret void, !dbg !13488
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !13489 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13491, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i8* %1, metadata !13492, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i8* %2, metadata !13493, metadata !DIExpression()), !dbg !13494
  br label %4, !dbg !13495

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13496, !srcloc !13503
  call void @llvm.dbg.value(metadata i32 undef, metadata !13499, metadata !DIExpression()) #25, !dbg !13504
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()) #25, !dbg !13504
  tail call fastcc void @k_cpu_idle() #27, !dbg !13505
  br label %4, !dbg !13495, !llvm.loop !13506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13508 {
  tail call void @arch_cpu_idle() #26, !dbg !13509
  ret void, !dbg !13510
}

; Function Attrs: optsize
declare !dbg !13511 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13512 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13516, metadata !DIExpression()), !dbg !13522
  call void @llvm.dbg.value(metadata i1 %1, metadata !13517, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13522
  %3 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !13523
  br i1 %3, label %13, label %4, !dbg !13524

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !13525
  %6 = icmp eq i8 %5, 0, !dbg !13526
  br i1 %6, label %13, label %7, !dbg !13527

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13519, metadata !DIExpression()), !dbg !13528
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 1, !dbg !13529
  %9 = bitcast %struct.z_heap_bucket* %8 to i8**, !dbg !13529
  %10 = load i8*, i8** %9, align 4, !dbg !13529
  call void @llvm.dbg.value(metadata i8* %10, metadata !13518, metadata !DIExpression()), !dbg !13522
  br i1 %1, label %11, label %15, !dbg !13530

11:                                               ; preds = %7
  %12 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !13531
  tail call void @k_free(i8* noundef nonnull %12) #26, !dbg !13532
  br label %15, !dbg !13535

13:                                               ; preds = %4, %2
  %14 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !13536
  call void @llvm.dbg.value(metadata i8* %14, metadata !13518, metadata !DIExpression()), !dbg !13522
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !13538
  call void @llvm.dbg.value(metadata i8* %16, metadata !13518, metadata !DIExpression()), !dbg !13522
  ret i8* %16, !dbg !13539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13540 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13544, metadata !DIExpression()), !dbg !13545
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13546
  %3 = load i32, i32* %2, align 4, !dbg !13546
  %4 = trunc i32 %3 to i8, !dbg !13547
  %5 = and i8 %4, 3, !dbg !13547
  ret i8 %5, !dbg !13548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #4 !dbg !13549 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13570, metadata !DIExpression()), !dbg !13571
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13572
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #27, !dbg !13573
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13574
  tail call fastcc void @z_waitq_init.130(%union.anon* noundef nonnull %3) #27, !dbg !13575
  ret void, !dbg !13576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13577 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13582, metadata !DIExpression()), !dbg !13583
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13584
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %2, align 4, !dbg !13585
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13586
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %3, align 4, !dbg !13587
  ret void, !dbg !13588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.130(%union.anon* noundef %0) unnamed_addr #4 !dbg !13589 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13594, metadata !DIExpression()), !dbg !13595
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13596
  tail call fastcc void @sys_dlist_init.131(%struct._dnode* noundef %2) #27, !dbg !13597
  ret void, !dbg !13598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.131(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13599 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13604, metadata !DIExpression()), !dbg !13605
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13606
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13607
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13608
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13609
  ret void, !dbg !13610
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !13611 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13613, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13700, metadata !DIExpression()) #25, !dbg !13707
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13709, !srcloc !13715
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #25, !dbg !13716
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #25, !dbg !13716
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #25, !dbg !13707
  call void @llvm.dbg.value(metadata i32 undef, metadata !13614, metadata !DIExpression()), !dbg !13699
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13717
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %3) #26, !dbg !13718
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13619, metadata !DIExpression()), !dbg !13699
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13719
  br i1 %5, label %7, label %6, !dbg !13721

6:                                                ; preds = %1
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %4, i8* noundef null) #27, !dbg !13722
  br label %7, !dbg !13724

7:                                                ; preds = %6, %1
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13709
  call void @llvm.dbg.value(metadata i32 %8, metadata !13712, metadata !DIExpression()) #25, !dbg !13716
  call void @llvm.dbg.value(metadata i32 %8, metadata !13706, metadata !DIExpression()) #25, !dbg !13707
  call void @llvm.dbg.value(metadata i32 %8, metadata !13614, metadata !DIExpression()), !dbg !13699
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13725
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13726
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %10) #26, !dbg !13726
  ret void, !dbg !13727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !13728 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13732, metadata !DIExpression()), !dbg !13734
  call void @llvm.dbg.value(metadata i8* %1, metadata !13733, metadata !DIExpression()), !dbg !13734
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13735, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.value(metadata i32 0, metadata !13741, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.value(metadata i8* %1, metadata !13742, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13745, metadata !DIExpression()), !dbg !13751
  call void @llvm.dbg.value(metadata i32 0, metadata !13750, metadata !DIExpression()), !dbg !13751
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 1, !dbg !13753
  store i32 0, i32* %3, align 4, !dbg !13754
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !13755
  store i8* %1, i8** %4, align 4, !dbg !13756
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13757
  ret void, !dbg !13758
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13759 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13763, metadata !DIExpression()), !dbg !13766
  call void @llvm.dbg.value(metadata i8* %1, metadata !13764, metadata !DIExpression()), !dbg !13766
  call void @llvm.dbg.value(metadata i8* %2, metadata !13765, metadata !DIExpression()), !dbg !13766
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !13767
  ret void, !dbg !13768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !13769 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13773, metadata !DIExpression()), !dbg !13783
  call void @llvm.dbg.value(metadata i8* %1, metadata !13774, metadata !DIExpression()), !dbg !13783
  call void @llvm.dbg.value(metadata i8* %2, metadata !13775, metadata !DIExpression()), !dbg !13783
  call void @llvm.dbg.value(metadata i1 %3, metadata !13776, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13783
  call void @llvm.dbg.value(metadata i1 %4, metadata !13777, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13783
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13700, metadata !DIExpression()) #25, !dbg !13785
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13787, !srcloc !13715
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !13787
  call void @llvm.dbg.value(metadata i32 %8, metadata !13712, metadata !DIExpression()) #25, !dbg !13789
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #25, !dbg !13789
  call void @llvm.dbg.value(metadata i32 %8, metadata !13706, metadata !DIExpression()) #25, !dbg !13785
  call void @llvm.dbg.value(metadata i32 %8, metadata !13779, metadata !DIExpression()), !dbg !13783
  br i1 %4, label %9, label %13, !dbg !13790

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13791
  %11 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %10) #27, !dbg !13794
  %12 = bitcast %struct.z_heap_bucket* %11 to i8*, !dbg !13794
  call void @llvm.dbg.value(metadata i8* %12, metadata !13774, metadata !DIExpression()), !dbg !13783
  br label %13, !dbg !13795

13:                                               ; preds = %9, %5
  %14 = phi i8* [ %12, %9 ], [ %1, %5 ]
  call void @llvm.dbg.value(metadata i8* %14, metadata !13774, metadata !DIExpression()), !dbg !13783
  %15 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13796
  %16 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %15) #26, !dbg !13797
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !13778, metadata !DIExpression()), !dbg !13783
  %17 = icmp eq %struct.k_thread* %16, null, !dbg !13798
  br i1 %17, label %20, label %18, !dbg !13800

18:                                               ; preds = %13
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %16, i8* noundef %2) #27, !dbg !13801
  %19 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13803
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %19) #26, !dbg !13803
  br label %36, !dbg !13804

20:                                               ; preds = %13
  br i1 %3, label %21, label %29, !dbg !13805

21:                                               ; preds = %20
  %22 = tail call fastcc i8* @z_thread_malloc() #27, !dbg !13806
  call void @llvm.dbg.value(metadata i8* %22, metadata !13780, metadata !DIExpression()), !dbg !13807
  %23 = icmp eq i8* %22, null, !dbg !13808
  br i1 %23, label %24, label %25, !dbg !13810

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %8, metadata !13811, metadata !DIExpression()) #25, !dbg !13817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13816, metadata !DIExpression()) #25, !dbg !13817
  call void @llvm.dbg.value(metadata i32 %8, metadata !13820, metadata !DIExpression()) #25, !dbg !13823
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !13825, !srcloc !13826
  call void @llvm.dbg.value(metadata i8* %22, metadata !13775, metadata !DIExpression()), !dbg !13783
  br label %36

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i8* %22, metadata !13780, metadata !DIExpression()), !dbg !13807
  %26 = getelementptr inbounds i8, i8* %22, i32 4, !dbg !13827
  %27 = bitcast i8* %26 to i8**, !dbg !13827
  store i8* %2, i8** %27, align 4, !dbg !13828
  %28 = bitcast i8* %22 to %struct.z_heap_bucket*, !dbg !13829
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef nonnull %28, i8 noundef zeroext 1) #27, !dbg !13830
  call void @llvm.dbg.value(metadata i8* %22, metadata !13775, metadata !DIExpression()), !dbg !13783
  br label %31

29:                                               ; preds = %20
  %30 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !13831
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef %30, i8 noundef zeroext 0) #27, !dbg !13833
  br label %31

31:                                               ; preds = %25, %29
  %32 = phi %struct.z_heap_bucket* [ %28, %25 ], [ %30, %29 ], !dbg !13834
  call void @llvm.dbg.value(metadata i8* undef, metadata !13775, metadata !DIExpression()), !dbg !13783
  %33 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13835
  %34 = bitcast i8* %14 to %struct.z_heap_bucket*, !dbg !13836
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %33, %struct.z_heap_bucket* noundef %34, %struct.z_heap_bucket* noundef %32) #27, !dbg !13837
  %35 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13838
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %35) #26, !dbg !13838
  br label %36, !dbg !13839

36:                                               ; preds = %24, %31, %18
  %37 = phi i32 [ 0, %18 ], [ 0, %31 ], [ -12, %24 ], !dbg !13783
  ret i32 %37, !dbg !13840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13841 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13845, metadata !DIExpression()), !dbg !13846
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13847
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !13847
  ret %struct.z_heap_bucket* %3, !dbg !13848
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !13849 {
  call void @llvm.dbg.value(metadata i32 8, metadata !13852, metadata !DIExpression()), !dbg !13853
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #26, !dbg !13854
  ret i8* %1, !dbg !13855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sfnode_init(%struct.z_heap_bucket* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #4 !dbg !13856 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13860, metadata !DIExpression()), !dbg !13862
  call void @llvm.dbg.value(metadata i8 %1, metadata !13861, metadata !DIExpression()), !dbg !13862
  %3 = zext i8 %1 to i32, !dbg !13863
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13864
  store i32 %3, i32* %4, align 4, !dbg !13865
  ret void, !dbg !13866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !13867 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13871, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13872, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !13873, metadata !DIExpression()), !dbg !13874
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !13875
  br i1 %4, label %5, label %6, !dbg !13877

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !13878
  br label %11, !dbg !13878

6:                                                ; preds = %3
  %7 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !13880
  %8 = icmp eq %struct.z_heap_bucket* %7, null, !dbg !13880
  br i1 %8, label %9, label %10, !dbg !13875

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !13882
  br label %11, !dbg !13882

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef nonnull %7) #27, !dbg !13884
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %2) #27, !dbg !13884
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !13877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13886 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13890, metadata !DIExpression()), !dbg !13892
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13891, metadata !DIExpression()), !dbg !13892
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !13893
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %3) #27, !dbg !13893
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13893
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !13894
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !13894
  br i1 %5, label %6, label %8, !dbg !13893

6:                                                ; preds = %2
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !13896
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !13896
  br label %8, !dbg !13896

8:                                                ; preds = %6, %2
  ret void, !dbg !13893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13898 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13902, metadata !DIExpression()), !dbg !13903
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13904
  %3 = load i32, i32* %2, align 4, !dbg !13904
  %4 = and i32 %3, -4, !dbg !13905
  %5 = inttoptr i32 %4 to %struct.z_heap_bucket*, !dbg !13906
  ret %struct.z_heap_bucket* %5, !dbg !13907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13908 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13910, metadata !DIExpression()), !dbg !13912
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13911, metadata !DIExpression()), !dbg !13912
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef null) #27, !dbg !13913
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !13914
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !13914
  br i1 %4, label %5, label %6, !dbg !13913

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13916
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13916
  br label %7, !dbg !13916

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %3, %struct.z_heap_bucket* noundef %1) #27, !dbg !13918
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13918
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13920 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13924, metadata !DIExpression()), !dbg !13927
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13925, metadata !DIExpression()), !dbg !13927
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef %0) #27, !dbg !13928
  call void @llvm.dbg.value(metadata i8 %3, metadata !13926, metadata !DIExpression()), !dbg !13927
  %4 = zext i8 %3 to i32, !dbg !13929
  %5 = ptrtoint %struct.z_heap_bucket* %1 to i32, !dbg !13930
  %6 = or i32 %4, %5, !dbg !13931
  %7 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13932
  store i32 %6, i32* %7, align 4, !dbg !13933
  ret void, !dbg !13934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !13935 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13937, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13938, metadata !DIExpression()), !dbg !13939
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13940
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !13941
  ret void, !dbg !13942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !13943 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13945, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13946, metadata !DIExpression()), !dbg !13947
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13948
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !13949
  ret void, !dbg !13950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13951 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13953, metadata !DIExpression()), !dbg !13954
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13955
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !13955
  ret %struct.z_heap_bucket* %3, !dbg !13956
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13957 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13961, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.value(metadata i8* %1, metadata !13962, metadata !DIExpression()), !dbg !13963
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #27, !dbg !13964
  ret void, !dbg !13965
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13966 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13968, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.value(metadata i8* %1, metadata !13969, metadata !DIExpression()), !dbg !13970
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !13971
  ret void, !dbg !13972
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13973 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13977, metadata !DIExpression()), !dbg !13980
  call void @llvm.dbg.value(metadata i8* %1, metadata !13978, metadata !DIExpression()), !dbg !13980
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #27, !dbg !13981
  call void @llvm.dbg.value(metadata i32 %3, metadata !13979, metadata !DIExpression()), !dbg !13980
  ret i32 %3, !dbg !13982
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13983 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13985, metadata !DIExpression()), !dbg !13988
  call void @llvm.dbg.value(metadata i8* %1, metadata !13986, metadata !DIExpression()), !dbg !13988
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #27, !dbg !13989
  call void @llvm.dbg.value(metadata i32 %3, metadata !13987, metadata !DIExpression()), !dbg !13988
  ret i32 %3, !dbg !13990
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13991 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13995, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata i8* %1, metadata !13996, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata i8* %2, metadata !13997, metadata !DIExpression()), !dbg !14000
  %4 = icmp eq i8* %1, null, !dbg !14001
  %5 = icmp eq i8* %2, null, !dbg !14001
  %6 = or i1 %4, %5, !dbg !14001
  br i1 %6, label %29, label %7, !dbg !14001

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13700, metadata !DIExpression()) #25, !dbg !14004
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14006, !srcloc !13715
  %10 = extractvalue { i32, i32 } %9, 0, !dbg !14006
  call void @llvm.dbg.value(metadata i32 %10, metadata !13712, metadata !DIExpression()) #25, !dbg !14008
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #25, !dbg !14008
  call void @llvm.dbg.value(metadata i32 %10, metadata !13706, metadata !DIExpression()) #25, !dbg !14004
  call void @llvm.dbg.value(metadata i32 %10, metadata !13998, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13999, metadata !DIExpression()), !dbg !14000
  %11 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14009
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !14012
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !13999, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !13999, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata i8* %1, metadata !13996, metadata !DIExpression()), !dbg !14000
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !14013
  br i1 %13, label %24, label %14, !dbg !14014

14:                                               ; preds = %7, %14
  %15 = phi %struct.k_thread* [ %19, %14 ], [ %12, %7 ]
  %16 = phi i8* [ %18, %14 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13999, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata i8* %16, metadata !13996, metadata !DIExpression()), !dbg !14000
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %15, i8* noundef nonnull %16) #27, !dbg !14015
  %17 = bitcast i8* %16 to i8**, !dbg !14017
  %18 = load i8*, i8** %17, align 4, !dbg !14018
  call void @llvm.dbg.value(metadata i8* %18, metadata !13996, metadata !DIExpression()), !dbg !14000
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !14019
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13999, metadata !DIExpression()), !dbg !14000
  %20 = icmp ne i8* %18, null, !dbg !14020
  %21 = icmp ne %struct.k_thread* %19, null, !dbg !14013
  %22 = select i1 %20, i1 %21, i1 false, !dbg !14013
  br i1 %22, label %14, label %23, !dbg !14014, !llvm.loop !14021

23:                                               ; preds = %14
  br i1 %20, label %24, label %27, !dbg !14023

24:                                               ; preds = %7, %23
  %25 = phi i8* [ %18, %23 ], [ %1, %7 ]
  %26 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14024
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %26, i8* noundef nonnull %25, i8* noundef %2) #27, !dbg !14027
  br label %27, !dbg !14028

27:                                               ; preds = %23, %24
  %28 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !14029
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %8, [1 x i32] %28) #26, !dbg !14029
  br label %29

29:                                               ; preds = %3, %27
  %30 = phi i32 [ 0, %27 ], [ -22, %3 ], !dbg !14000
  ret i32 %30, !dbg !14030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #8 !dbg !14031 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14035, metadata !DIExpression()), !dbg !14038
  call void @llvm.dbg.value(metadata i8* %1, metadata !14036, metadata !DIExpression()), !dbg !14038
  call void @llvm.dbg.value(metadata i8* %2, metadata !14037, metadata !DIExpression()), !dbg !14038
  %4 = icmp ne i8* %1, null, !dbg !14039
  %5 = icmp ne i8* %2, null, !dbg !14039
  %6 = and i1 %4, %5, !dbg !14039
  br i1 %6, label %7, label %15, !dbg !14039

7:                                                ; preds = %3
  %8 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14041
  %9 = icmp eq %struct.z_heap_bucket* %8, null, !dbg !14041
  %10 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14044
  br i1 %9, label %11, label %12, !dbg !14045

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14046
  br label %13, !dbg !14046

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14048
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !14045
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %14) #27, !dbg !14045
  br label %15, !dbg !14045

15:                                               ; preds = %13, %3
  ret void, !dbg !14050
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !14051 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14067, metadata !DIExpression()), !dbg !14070
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !14068, metadata !DIExpression()), !dbg !14070
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty.134(%struct._slist* noundef %1) #27, !dbg !14071
  br i1 %3, label %13, label %4, !dbg !14073

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !14074
  %6 = load i8*, i8** %5, align 4, !dbg !14074
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !14075
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !14075
  %9 = load i8*, i8** %8, align 4, !dbg !14075
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #27, !dbg !14076
  call void @llvm.dbg.value(metadata i32 %10, metadata !14069, metadata !DIExpression()), !dbg !14070
  %11 = icmp eq i32 %10, 0, !dbg !14077
  br i1 %11, label %12, label %13, !dbg !14079

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #27, !dbg !14080
  br label %13, !dbg !14081

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !14070
  ret i32 %14, !dbg !14082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.134(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14083 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14087, metadata !DIExpression()), !dbg !14088
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.135(%struct._slist* noundef %0) #27, !dbg !14089
  %3 = icmp eq %struct._snode* %2, null, !dbg !14089
  ret i1 %3, !dbg !14089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14090 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14094, metadata !DIExpression()), !dbg !14095
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14096
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !14097
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !14098
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !14099
  ret void, !dbg !14100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.135(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14101 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14105, metadata !DIExpression()), !dbg !14106
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14107
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !14107
  ret %struct._snode* %3, !dbg !14108
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14109 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14118, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14117, metadata !DIExpression()), !dbg !14125
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13700, metadata !DIExpression()) #25, !dbg !14127
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14129, !srcloc !13715
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14129
  call void @llvm.dbg.value(metadata i32 %5, metadata !13712, metadata !DIExpression()) #25, !dbg !14131
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #25, !dbg !14131
  call void @llvm.dbg.value(metadata i32 %5, metadata !13706, metadata !DIExpression()) #25, !dbg !14127
  call void @llvm.dbg.value(metadata i32 %5, metadata !14119, metadata !DIExpression()), !dbg !14125
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14132
  %7 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %6) #27, !dbg !14132
  br i1 %7, label %11, label %8, !dbg !14133, !prof !14134

8:                                                ; preds = %2
  %9 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* noundef %6) #27, !dbg !14135
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14121, metadata !DIExpression()), !dbg !14136
  %10 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %9, i1 noundef zeroext true) #27, !dbg !14137
  call void @llvm.dbg.value(metadata i8* %10, metadata !14120, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i32 %5, metadata !13811, metadata !DIExpression()) #25, !dbg !14138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13816, metadata !DIExpression()) #25, !dbg !14138
  call void @llvm.dbg.value(metadata i32 %5, metadata !13820, metadata !DIExpression()) #25, !dbg !14140
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14142, !srcloc !13826
  br label %24

11:                                               ; preds = %2
  %12 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %12, metadata !14118, metadata !DIExpression()), !dbg !14125
  %13 = icmp eq i64 %12, 0, !dbg !14143
  br i1 %13, label %14, label %15, !dbg !14145

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %5, metadata !13811, metadata !DIExpression()) #25, !dbg !14146
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13816, metadata !DIExpression()) #25, !dbg !14146
  call void @llvm.dbg.value(metadata i32 %5, metadata !13820, metadata !DIExpression()) #25, !dbg !14149
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14151, !srcloc !13826
  br label %24, !dbg !14152

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14153
  %17 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !14154
  %18 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %17, %union.anon* noundef nonnull %16, [1 x i64] %1) #26, !dbg !14154
  call void @llvm.dbg.value(metadata i32 %18, metadata !14124, metadata !DIExpression()), !dbg !14125
  %19 = icmp eq i32 %18, 0, !dbg !14155
  br i1 %19, label %20, label %24, !dbg !14156

20:                                               ; preds = %15
  %21 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14157
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 6, !dbg !14158
  %23 = load i8*, i8** %22, align 4, !dbg !14158
  br label %24, !dbg !14156

24:                                               ; preds = %20, %15, %14, %8
  %25 = phi i8* [ %10, %8 ], [ null, %14 ], [ %23, %20 ], [ null, %15 ], !dbg !14125
  ret i8* %25, !dbg !14159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14160 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14164, metadata !DIExpression()), !dbg !14165
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14166
  %3 = icmp eq %struct.z_heap_bucket* %2, null, !dbg !14166
  ret i1 %3, !dbg !14166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #8 !dbg !14167 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14169, metadata !DIExpression()), !dbg !14171
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14172
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14170, metadata !DIExpression()), !dbg !14171
  %3 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14172
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %3) #27, !dbg !14172
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14173
  %5 = icmp eq %struct.z_heap_bucket* %4, %2, !dbg !14173
  br i1 %5, label %6, label %8, !dbg !14172

6:                                                ; preds = %1
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14175
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !14175
  br label %8, !dbg !14175

8:                                                ; preds = %6, %1
  ret %struct.z_heap_bucket* %2, !dbg !14172
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !14177 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14181, metadata !DIExpression()), !dbg !14184
  call void @llvm.dbg.value(metadata i8* %1, metadata !14182, metadata !DIExpression()), !dbg !14184
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14185
  %4 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14186
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct.z_heap_bucket* noundef %4) #27, !dbg !14187
  call void @llvm.dbg.value(metadata i1 %5, metadata !14183, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14184
  ret i1 %5, !dbg !14188
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #14 !dbg !14189 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14193, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14194, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14195, metadata !DIExpression()), !dbg !14197
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14198
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14196, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14195, metadata !DIExpression()), !dbg !14197
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !14200
  br i1 %4, label %15, label %5, !dbg !14198

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14196, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14195, metadata !DIExpression()), !dbg !14197
  %6 = icmp eq %struct.z_heap_bucket* %3, %1, !dbg !14202
  br i1 %6, label %9, label %11, !dbg !14205

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14196, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14195, metadata !DIExpression()), !dbg !14197
  %8 = icmp eq %struct.z_heap_bucket* %13, %1, !dbg !14202
  br i1 %8, label %9, label %11, !dbg !14205, !llvm.loop !14206

9:                                                ; preds = %7, %5
  %10 = phi %struct.z_heap_bucket* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10, %struct.z_heap_bucket* noundef %1) #27, !dbg !14207
  br label %15, !dbg !14207

11:                                               ; preds = %5, %7
  %12 = phi %struct.z_heap_bucket* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14196, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14195, metadata !DIExpression()), !dbg !14197
  %13 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %12) #27, !dbg !14200
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14196, metadata !DIExpression()), !dbg !14197
  %14 = icmp eq %struct.z_heap_bucket* %13, null, !dbg !14200
  br i1 %14, label %15, label %7, !dbg !14198, !llvm.loop !14206

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !14209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !14210 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14212, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14213, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14214, metadata !DIExpression()), !dbg !14215
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !14216
  %5 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14218
  br i1 %4, label %6, label %11, !dbg !14219

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %5) #27, !dbg !14220
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14222
  %8 = icmp eq %struct.z_heap_bucket* %7, %2, !dbg !14222
  br i1 %8, label %9, label %15, !dbg !14220

9:                                                ; preds = %6
  %10 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14224
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10) #27, !dbg !14224
  br label %15, !dbg !14224

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %5) #27, !dbg !14226
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14228
  %13 = icmp eq %struct.z_heap_bucket* %12, %2, !dbg !14228
  br i1 %13, label %14, label %15, !dbg !14226

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !14230
  br label %15, !dbg !14230

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef null) #27, !dbg !14219
  ret void, !dbg !14219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef readonly %0) unnamed_addr #5 !dbg !14232 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14234, metadata !DIExpression()), !dbg !14235
  %2 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !14236
  br i1 %2, label %5, label %3, !dbg !14236

3:                                                ; preds = %1
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !14236
  br label %5, !dbg !14236

5:                                                ; preds = %1, %3
  %6 = phi %struct.z_heap_bucket* [ %4, %3 ], [ null, %1 ], !dbg !14236
  ret %struct.z_heap_bucket* %6, !dbg !14236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14237 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14239, metadata !DIExpression()), !dbg !14240
  %2 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %0) #27, !dbg !14241
  ret %struct.z_heap_bucket* %2, !dbg !14241
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14242 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14244, metadata !DIExpression()), !dbg !14247
  call void @llvm.dbg.value(metadata i8* %1, metadata !14245, metadata !DIExpression()), !dbg !14247
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14248
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %3) #27, !dbg !14248
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !14246, metadata !DIExpression()), !dbg !14247
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !14250
  br i1 %5, label %14, label %6, !dbg !14248

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct.z_heap_bucket*
  br label %8, !dbg !14248

8:                                                ; preds = %6, %11
  %9 = phi %struct.z_heap_bucket* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14246, metadata !DIExpression()), !dbg !14247
  %10 = icmp eq %struct.z_heap_bucket* %9, %7, !dbg !14252
  br i1 %10, label %15, label %11, !dbg !14255

11:                                               ; preds = %8
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %9) #27, !dbg !14250
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14246, metadata !DIExpression()), !dbg !14247
  %13 = icmp eq %struct.z_heap_bucket* %12, null, !dbg !14250
  br i1 %13, label %14, label %8, !dbg !14248, !llvm.loop !14256

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #27, !dbg !14258
  br label %15, !dbg !14259

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !14260
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14261 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14265, metadata !DIExpression()), !dbg !14267
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14268
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %2) #27, !dbg !14269
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14270
  call void @llvm.dbg.value(metadata i8* %4, metadata !14266, metadata !DIExpression()), !dbg !14267
  ret i8* %4, !dbg !14271
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14272 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14274, metadata !DIExpression()), !dbg !14276
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14277
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #27, !dbg !14278
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14279
  call void @llvm.dbg.value(metadata i8* %4, metadata !14275, metadata !DIExpression()), !dbg !14276
  ret i8* %4, !dbg !14280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14281 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14285, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14286, metadata !DIExpression()), !dbg !14289
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14290
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14290
  %5 = load i8, i8* %4, align 2, !dbg !14290
  call void @llvm.dbg.value(metadata i8 %5, metadata !14287, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14289
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14291
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14291
  %8 = load i8, i8* %7, align 2, !dbg !14291
  call void @llvm.dbg.value(metadata i8 %8, metadata !14288, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14289
  %9 = icmp eq i8 %8, %5, !dbg !14292
  %10 = sext i8 %5 to i32, !dbg !14294
  %11 = sext i8 %8 to i32, !dbg !14294
  %12 = sub nsw i32 %11, %10, !dbg !14294
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14294
  ret i32 %13, !dbg !14295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14296 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14300, metadata !DIExpression()), !dbg !14301
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !14302
  %3 = icmp eq i32 %2, 0, !dbg !14304
  br i1 %3, label %8, label %4, !dbg !14305

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !14306
  %6 = add i32 %5, %2, !dbg !14308
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14309
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !14310
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !14311
  br label %8, !dbg !14312

8:                                                ; preds = %4, %1
  ret void, !dbg !14313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14314 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14318, metadata !DIExpression()), !dbg !14320
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14321
  call void @llvm.dbg.value(metadata i32 %1, metadata !14319, metadata !DIExpression()), !dbg !14320
  ret i32 %1, !dbg !14322
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14327, metadata !DIExpression()), !dbg !14336
  call void @llvm.dbg.value(metadata i32 %1, metadata !14328, metadata !DIExpression()), !dbg !14336
  call void @llvm.dbg.value(metadata i32 0, metadata !14329, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !14345
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14347, !srcloc !14353
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14347
  call void @llvm.dbg.value(metadata i32 %4, metadata !14350, metadata !DIExpression()) #25, !dbg !14354
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !14354
  call void @llvm.dbg.value(metadata i32 %4, metadata !14344, metadata !DIExpression()) #25, !dbg !14345
  call void @llvm.dbg.value(metadata i32 %4, metadata !14335, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.value(metadata i32 undef, metadata !14329, metadata !DIExpression()), !dbg !14337
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14355
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !14358
  %6 = icmp sgt i32 %0, 0, !dbg !14359
  %7 = icmp sgt i32 %5, 2, !dbg !14361
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14361
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14361
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14362
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14363
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14364
  call void @llvm.dbg.value(metadata i32 %4, metadata !14365, metadata !DIExpression()) #25, !dbg !14371
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !14371
  call void @llvm.dbg.value(metadata i32 %4, metadata !14373, metadata !DIExpression()) #25, !dbg !14376
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !14378, !srcloc !14379
  call void @llvm.dbg.value(metadata i32 1, metadata !14329, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.value(metadata i32 undef, metadata !14329, metadata !DIExpression()), !dbg !14337
  ret void, !dbg !14380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14383, metadata !DIExpression()), !dbg !14384
  call void @llvm.dbg.value(metadata i32 %0, metadata !14385, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14400
  call void @llvm.dbg.value(metadata i32 1000, metadata !14388, metadata !DIExpression()), !dbg !14400
  call void @llvm.dbg.value(metadata i32 10000, metadata !14389, metadata !DIExpression()), !dbg !14400
  call void @llvm.dbg.value(metadata i8 1, metadata !14390, metadata !DIExpression()), !dbg !14400
  call void @llvm.dbg.value(metadata i1 true, metadata !14391, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14400
  call void @llvm.dbg.value(metadata i1 true, metadata !14392, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14400
  call void @llvm.dbg.value(metadata i8 0, metadata !14393, metadata !DIExpression()), !dbg !14400
  call void @llvm.dbg.value(metadata i1 true, metadata !14394, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14400
  call void @llvm.dbg.value(metadata i1 false, metadata !14395, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14400
  call void @llvm.dbg.value(metadata i64 0, metadata !14396, metadata !DIExpression()), !dbg !14400
  call void @llvm.dbg.value(metadata i64 0, metadata !14396, metadata !DIExpression()), !dbg !14400
  %2 = mul i32 %0, 10, !dbg !14402
  ret i32 %2, !dbg !14408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14411, metadata !DIExpression()), !dbg !14413
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !14414
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14416, !srcloc !14353
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14416
  call void @llvm.dbg.value(metadata i32 %3, metadata !14350, metadata !DIExpression()) #25, !dbg !14418
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !14418
  call void @llvm.dbg.value(metadata i32 %3, metadata !14344, metadata !DIExpression()) #25, !dbg !14414
  call void @llvm.dbg.value(metadata i32 %3, metadata !14412, metadata !DIExpression()), !dbg !14413
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14419
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14421
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14422
  br i1 %6, label %7, label %8, !dbg !14423

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14424
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !14426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !14426
  call void @llvm.dbg.value(metadata i32 %3, metadata !14373, metadata !DIExpression()) #25, !dbg !14428
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14430, !srcloc !14379
  br label %24, !dbg !14431

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14432
  %9 = tail call fastcc i32 @slice_time() #27, !dbg !14433
  %10 = icmp eq i32 %9, 0, !dbg !14433
  br i1 %10, label %21, label %11, !dbg !14435

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #27, !dbg !14436
  br i1 %12, label %13, label %21, !dbg !14437

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14438
  %15 = icmp sgt i32 %14, %0, !dbg !14441
  br i1 %15, label %19, label %16, !dbg !14442

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14443
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #27, !dbg !14443
  call void @llvm.dbg.value(metadata i32 %18, metadata !14412, metadata !DIExpression()), !dbg !14413
  br label %22, !dbg !14445

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14446
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14446
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14448
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14413
  call void @llvm.dbg.value(metadata i32 %23, metadata !14412, metadata !DIExpression()), !dbg !14413
  call void @llvm.dbg.value(metadata i32 %23, metadata !14365, metadata !DIExpression()) #25, !dbg !14450
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !14450
  call void @llvm.dbg.value(metadata i32 %23, metadata !14373, metadata !DIExpression()) #25, !dbg !14452
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !14454, !srcloc !14379
  br label %24, !dbg !14455

24:                                               ; preds = %22, %7
  ret void, !dbg !14455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14456 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14460, metadata !DIExpression()), !dbg !14462
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !14463
  %3 = icmp eq i32 %2, 0, !dbg !14463
  br i1 %3, label %16, label %4, !dbg !14464

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !14465
  br i1 %5, label %16, label %6, !dbg !14466

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14467
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14467
  %9 = load i8, i8* %8, align 2, !dbg !14467
  %10 = sext i8 %9 to i32, !dbg !14468
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14469
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #27, !dbg !14470
  br i1 %12, label %16, label %13, !dbg !14471

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !14472
  %15 = xor i1 %14, true, !dbg !14473
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14462
  call void @llvm.dbg.value(metadata i1 %17, metadata !14461, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14462
  ret i1 %17, !dbg !14474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14475 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()), !dbg !14481
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14482
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14480, metadata !DIExpression()), !dbg !14481
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !14483
  br i1 %3, label %5, label %4, !dbg !14485

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !14486
  br label %5, !dbg !14488

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14479, metadata !DIExpression()), !dbg !14481
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14489
  ret i32 %6, !dbg !14490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14491 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14493, metadata !DIExpression()), !dbg !14495
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14496
  %3 = load i8, i8* %2, align 1, !dbg !14496
  call void @llvm.dbg.value(metadata i8 %3, metadata !14494, metadata !DIExpression()), !dbg !14495
  %4 = and i8 %3, 31, !dbg !14497
  %5 = icmp ne i8 %4, 0, !dbg !14498
  ret i1 %5, !dbg !14499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14500 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14502, metadata !DIExpression()), !dbg !14503
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !14504
  br i1 %2, label %3, label %7, !dbg !14506

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14507, metadata !DIExpression()) #25, !dbg !14510
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14513
  %5 = load i8, i8* %4, align 1, !dbg !14514
  %6 = and i8 %5, 127, !dbg !14514
  store i8 %6, i8* %4, align 1, !dbg !14514
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14515, metadata !DIExpression()) #25, !dbg !14518
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14522
  br label %7, !dbg !14523

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14524, metadata !DIExpression()) #25, !dbg !14527
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14529
  %9 = load i8, i8* %8, align 1, !dbg !14530
  %10 = or i8 %9, -128, !dbg !14530
  store i8 %10, i8* %8, align 1, !dbg !14530
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14531, metadata !DIExpression()) #25, !dbg !14534
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14538, metadata !DIExpression()) #25, !dbg !14546
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14544, metadata !DIExpression()) #25, !dbg !14546
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14548
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14545, metadata !DIExpression()) #25, !dbg !14546
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14550
  br i1 %12, label %23, label %13, !dbg !14548

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14545, metadata !DIExpression()) #25, !dbg !14546
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14552
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14545, metadata !DIExpression()) #25, !dbg !14546
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #26, !dbg !14553
  %17 = icmp sgt i32 %16, 0, !dbg !14556
  br i1 %17, label %18, label %20, !dbg !14557

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14558
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #26, !dbg !14560
  br label %25, !dbg !14561

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #26, !dbg !14550
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14545, metadata !DIExpression()) #25, !dbg !14546
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14550
  br i1 %22, label %23, label %13, !dbg !14548, !llvm.loop !14562

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14564
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #26, !dbg !14565
  br label %25, !dbg !14566

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14567
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14568
  %28 = zext i1 %27 to i32, !dbg !14568
  tail call fastcc void @update_cache(i32 noundef %28) #27, !dbg !14569
  ret void, !dbg !14570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14571 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14573, metadata !DIExpression()), !dbg !14574
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #27, !dbg !14575
  ret i1 %2, !dbg !14576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !14577 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14579, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14580, metadata !DIExpression()), !dbg !14581
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14582
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #27, !dbg !14583
  ret void, !dbg !14584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14585 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14589, metadata !DIExpression()), !dbg !14590
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !14591
  br i1 %2, label %6, label %3, !dbg !14591

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14592
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14592
  br label %6, !dbg !14591

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14591
  ret %struct._dnode* %7, !dbg !14593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14594 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14598, metadata !DIExpression()), !dbg !14602
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14599, metadata !DIExpression()), !dbg !14602
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14603
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14603
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14600, metadata !DIExpression()), !dbg !14602
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14604
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14605
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14606
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14607
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14608
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14609
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14610
  ret void, !dbg !14611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14612 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14616, metadata !DIExpression()), !dbg !14618
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14617, metadata !DIExpression()), !dbg !14618
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14619
  br i1 %3, label %6, label %4, !dbg !14620

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !14621
  br label %6, !dbg !14620

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14620
  ret %struct._dnode* %7, !dbg !14622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14623 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14627, metadata !DIExpression()), !dbg !14630
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14628, metadata !DIExpression()), !dbg !14630
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14631
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14631
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14629, metadata !DIExpression()), !dbg !14630
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14632
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14633
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14634
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14635
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14636
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14637
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14638
  ret void, !dbg !14639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14642, metadata !DIExpression()), !dbg !14644
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14645
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14652, metadata !DIExpression()) #25, !dbg !14654
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14655
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14656
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14656
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14643, metadata !DIExpression()), !dbg !14644
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14657, metadata !DIExpression()) #25, !dbg !14663
  call void @llvm.dbg.value(metadata i32 %0, metadata !14662, metadata !DIExpression()) #25, !dbg !14663
  %6 = icmp eq i32 %0, 0, !dbg !14666
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14668
  br i1 %6, label %8, label %15, !dbg !14669

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #26, !dbg !14670
  br i1 %9, label %15, label %10, !dbg !14672

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !14673
  br i1 %11, label %15, label %12, !dbg !14675

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #26, !dbg !14676
  %14 = icmp eq i32 %13, 0, !dbg !14676
  br i1 %14, label %18, label %15, !dbg !14678

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !14679
  br i1 %16, label %18, label %17, !dbg !14682

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14683
  br label %18, !dbg !14685

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !14668
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14668
  ret void, !dbg !14686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !14687 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14691, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14692, metadata !DIExpression()), !dbg !14694
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #27, !dbg !14695
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14693, metadata !DIExpression()), !dbg !14694
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14692, metadata !DIExpression()), !dbg !14694
  ret %struct.k_thread* %3, !dbg !14696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14697 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14699, metadata !DIExpression()), !dbg !14700
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14701
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14702
  %4 = xor i1 %3, true, !dbg !14703
  ret i1 %4, !dbg !14704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14705 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14707, metadata !DIExpression()), !dbg !14708
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14709
  %3 = load i16, i16* %2, align 2, !dbg !14709
  %4 = icmp ult i16 %3, 128, !dbg !14710
  %5 = zext i1 %4 to i32, !dbg !14710
  ret i32 %5, !dbg !14711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14712 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14718, metadata !DIExpression()), !dbg !14719
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14720
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !14721
  %4 = xor i1 %3, true, !dbg !14722
  ret i1 %4, !dbg !14723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14724 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14730, metadata !DIExpression()), !dbg !14731
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14732
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14732
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14733
  ret i1 %4, !dbg !14734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14735 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14737, metadata !DIExpression()), !dbg !14739
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14738, metadata !DIExpression()), !dbg !14739
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14740
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14740
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14741
  br i1 %5, label %9, label %6, !dbg !14742

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14743
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14743
  br label %9, !dbg !14742

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14742
  ret %struct._dnode* %10, !dbg !14744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14745 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14749, metadata !DIExpression()), !dbg !14750
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14751
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14751
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14752
  ret i1 %4, !dbg !14753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !14754 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14758, metadata !DIExpression()), !dbg !14761
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14762
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14762
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14759, metadata !DIExpression()), !dbg !14761
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14763
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14763
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14760, metadata !DIExpression()), !dbg !14761
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14764
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14765
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14766
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14767
  tail call fastcc void @sys_dnode_init.138(%struct._dnode* noundef %0) #27, !dbg !14768
  ret void, !dbg !14769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.138(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14770 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14772, metadata !DIExpression()), !dbg !14773
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14774
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14775
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14776
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14777
  ret void, !dbg !14778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14779 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14783, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i32 128, metadata !14784, metadata !DIExpression()), !dbg !14785
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14786
  %3 = load i8, i8* %2, align 1, !dbg !14786
  %4 = icmp slt i8 %3, 0, !dbg !14787
  ret i1 %4, !dbg !14788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14793, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i32 %1, metadata !14794, metadata !DIExpression()), !dbg !14795
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !14796
  ret i1 %3, !dbg !14797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !14798 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14800, metadata !DIExpression()), !dbg !14801
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14802
  ret i1 %2, !dbg !14803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14806, metadata !DIExpression()), !dbg !14808
  call void @llvm.dbg.value(metadata i32 %1, metadata !14807, metadata !DIExpression()), !dbg !14808
  %3 = icmp slt i32 %0, %1, !dbg !14809
  ret i1 %3, !dbg !14810
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14811 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14813, metadata !DIExpression()), !dbg !14817
  call void @llvm.dbg.value(metadata i32 0, metadata !14814, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !14819
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14821, !srcloc !14353
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14821
  call void @llvm.dbg.value(metadata i32 %3, metadata !14350, metadata !DIExpression()) #25, !dbg !14823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !14823
  call void @llvm.dbg.value(metadata i32 %3, metadata !14344, metadata !DIExpression()) #25, !dbg !14819
  call void @llvm.dbg.value(metadata i32 %3, metadata !14816, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()), !dbg !14818
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !14824
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !14829
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !14829
  call void @llvm.dbg.value(metadata i32 %3, metadata !14373, metadata !DIExpression()) #25, !dbg !14831
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14833, !srcloc !14379
  call void @llvm.dbg.value(metadata i32 1, metadata !14814, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()), !dbg !14818
  ret void, !dbg !14834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14835 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14837, metadata !DIExpression()), !dbg !14838
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !14839
  br i1 %2, label %24, label %3, !dbg !14841

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !14842
  br i1 %4, label %5, label %24, !dbg !14843

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14524, metadata !DIExpression()) #25, !dbg !14844
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14847
  %7 = load i8, i8* %6, align 1, !dbg !14848
  %8 = or i8 %7, -128, !dbg !14848
  store i8 %8, i8* %6, align 1, !dbg !14848
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14531, metadata !DIExpression()) #25, !dbg !14849
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14538, metadata !DIExpression()) #25, !dbg !14851
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14544, metadata !DIExpression()) #25, !dbg !14851
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14853
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14545, metadata !DIExpression()) #25, !dbg !14851
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14854
  br i1 %10, label %21, label %11, !dbg !14853

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14545, metadata !DIExpression()) #25, !dbg !14851
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14855
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14545, metadata !DIExpression()) #25, !dbg !14851
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #26, !dbg !14856
  %15 = icmp sgt i32 %14, 0, !dbg !14857
  br i1 %15, label %16, label %18, !dbg !14858

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14859
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #26, !dbg !14860
  br label %23, !dbg !14861

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #26, !dbg !14854
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14545, metadata !DIExpression()) #25, !dbg !14851
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14854
  br i1 %20, label %21, label %11, !dbg !14853, !llvm.loop !14862

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14864
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #26, !dbg !14865
  br label %23, !dbg !14866

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !14867
  br label %24, !dbg !14868

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14872, metadata !DIExpression()), !dbg !14873
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !14874
  br i1 %2, label %6, label %3, !dbg !14875

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !14876
  %5 = xor i1 %4, true, !dbg !14875
  br label %6, !dbg !14875

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14877
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14878 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14880, metadata !DIExpression()), !dbg !14884
  call void @llvm.dbg.value(metadata i32 0, metadata !14881, metadata !DIExpression()), !dbg !14885
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !14886
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14888, !srcloc !14353
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14888
  call void @llvm.dbg.value(metadata i32 %3, metadata !14350, metadata !DIExpression()) #25, !dbg !14890
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !14890
  call void @llvm.dbg.value(metadata i32 %3, metadata !14344, metadata !DIExpression()) #25, !dbg !14886
  call void @llvm.dbg.value(metadata i32 %3, metadata !14883, metadata !DIExpression()), !dbg !14885
  call void @llvm.dbg.value(metadata i32 undef, metadata !14881, metadata !DIExpression()), !dbg !14885
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !14891
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !14894
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !14894
  call void @llvm.dbg.value(metadata i32 %3, metadata !14373, metadata !DIExpression()) #25, !dbg !14896
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14898, !srcloc !14379
  call void @llvm.dbg.value(metadata i32 1, metadata !14881, metadata !DIExpression()), !dbg !14885
  call void @llvm.dbg.value(metadata i32 undef, metadata !14881, metadata !DIExpression()), !dbg !14885
  ret void, !dbg !14899
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14900 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14902, metadata !DIExpression()), !dbg !14904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !14905
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14907, !srcloc !14353
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14907
  call void @llvm.dbg.value(metadata i32 %3, metadata !14350, metadata !DIExpression()) #25, !dbg !14909
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !14909
  call void @llvm.dbg.value(metadata i32 %3, metadata !14344, metadata !DIExpression()) #25, !dbg !14905
  call void @llvm.dbg.value(metadata i32 %3, metadata !14903, metadata !DIExpression()), !dbg !14904
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !14910
  br i1 %4, label %5, label %6, !dbg !14912

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !14913
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !14913
  call void @llvm.dbg.value(metadata i32 %3, metadata !14373, metadata !DIExpression()) #25, !dbg !14916
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14918, !srcloc !14379
  br label %8, !dbg !14919

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.143(%struct.k_thread* noundef %0) #27, !dbg !14920
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !14921
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14922
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !14922
  br label %8, !dbg !14923

8:                                                ; preds = %6, %5
  ret void, !dbg !14923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14924 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14926, metadata !DIExpression()), !dbg !14927
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14928
  %3 = load i8, i8* %2, align 1, !dbg !14928
  %4 = and i8 %3, 4, !dbg !14929
  %5 = icmp eq i8 %4, 0, !dbg !14930
  ret i1 %5, !dbg !14931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.143(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !14932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14934, metadata !DIExpression()), !dbg !14935
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14936
  %3 = load i8, i8* %2, align 1, !dbg !14937
  %4 = and i8 %3, -5, !dbg !14937
  store i8 %4, i8* %2, align 1, !dbg !14937
  ret void, !dbg !14938
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14939 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14942, metadata !DIExpression()), !dbg !14943
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14941, metadata !DIExpression()), !dbg !14943
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !14944
  br i1 %4, label %5, label %9, !dbg !14946

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !14947
  br i1 %6, label %7, label %9, !dbg !14948

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14949, metadata !DIExpression()) #25, !dbg !14955
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14954, metadata !DIExpression()) #25, !dbg !14955
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !14958
  br label %10, !dbg !14959

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !14960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !14960
  call void @llvm.dbg.value(metadata i32 %3, metadata !14373, metadata !DIExpression()) #25, !dbg !14963
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14965, !srcloc !14379
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14971, metadata !DIExpression()), !dbg !14972
  call void @llvm.dbg.value(metadata i32 %0, metadata !14973, metadata !DIExpression()), !dbg !14978
  %2 = icmp eq i32 %0, 0, !dbg !14980
  br i1 %2, label %3, label %6, !dbg !14981

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14982, !srcloc !14989
  call void @llvm.dbg.value(metadata i32 %4, metadata !14985, metadata !DIExpression()) #25, !dbg !14990
  %5 = icmp eq i32 %4, 0, !dbg !14991
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14972
  ret i1 %7, !dbg !14992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !14993 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14996
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14995, metadata !DIExpression()), !dbg !14997
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14998
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14999
  ret i1 %3, !dbg !15000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15003, metadata !DIExpression()), !dbg !15005
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !15006
  call void @llvm.dbg.value(metadata i32 %2, metadata !15004, metadata !DIExpression()), !dbg !15005
  ret i32 %2, !dbg !15007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15008 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15010, metadata !DIExpression()), !dbg !15014
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !15015
  call void @llvm.dbg.value(metadata i32 0, metadata !15011, metadata !DIExpression()), !dbg !15016
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15017
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15019, !srcloc !14353
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15019
  call void @llvm.dbg.value(metadata i32 %4, metadata !14350, metadata !DIExpression()) #25, !dbg !15021
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15021
  call void @llvm.dbg.value(metadata i32 %4, metadata !14344, metadata !DIExpression()) #25, !dbg !15017
  call void @llvm.dbg.value(metadata i32 %4, metadata !15013, metadata !DIExpression()), !dbg !15016
  call void @llvm.dbg.value(metadata i32 undef, metadata !15011, metadata !DIExpression()), !dbg !15016
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15022
  br i1 %5, label %6, label %10, !dbg !15026

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14507, metadata !DIExpression()) #25, !dbg !15027
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15030
  %8 = load i8, i8* %7, align 1, !dbg !15031
  %9 = and i8 %8, 127, !dbg !15031
  store i8 %9, i8* %7, align 1, !dbg !15031
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14515, metadata !DIExpression()) #25, !dbg !15032
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15034
  br label %10, !dbg !15035

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !15036
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15037
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15038
  %13 = zext i1 %12 to i32, !dbg !15038
  tail call fastcc void @update_cache(i32 noundef %13) #27, !dbg !15039
  call void @llvm.dbg.value(metadata i32 %4, metadata !14365, metadata !DIExpression()) #25, !dbg !15040
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !15040
  call void @llvm.dbg.value(metadata i32 %4, metadata !14373, metadata !DIExpression()) #25, !dbg !15042
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15044, !srcloc !14379
  call void @llvm.dbg.value(metadata i32 1, metadata !15011, metadata !DIExpression()), !dbg !15016
  call void @llvm.dbg.value(metadata i32 undef, metadata !15011, metadata !DIExpression()), !dbg !15016
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15045
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15047
  br i1 %15, label %16, label %17, !dbg !15048

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15049
  br label %17, !dbg !15051

17:                                               ; preds = %16, %10
  ret void, !dbg !15052
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15053 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15055, metadata !DIExpression()), !dbg !15056
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15057
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15058
  ret i32 %3, !dbg !15059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15060 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15062, metadata !DIExpression()), !dbg !15063
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15064
  %3 = load i8, i8* %2, align 1, !dbg !15065
  %4 = or i8 %3, 16, !dbg !15065
  store i8 %4, i8* %2, align 1, !dbg !15065
  ret void, !dbg !15066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15067 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15068, !srcloc !14353
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15068
  call void @llvm.dbg.value(metadata i32 %2, metadata !14350, metadata !DIExpression()) #25, !dbg !15070
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15070
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !15071
  ret void, !dbg !15072
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15075, metadata !DIExpression()), !dbg !15076
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !15077
  br i1 %2, label %3, label %5, !dbg !15079

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !15080
  br label %6, !dbg !15082

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14373, metadata !DIExpression()) #25, !dbg !15083
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !15086, !srcloc !14379
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15088 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15090, metadata !DIExpression()), !dbg !15092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15093
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15095, !srcloc !14353
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15095
  call void @llvm.dbg.value(metadata i32 %3, metadata !14350, metadata !DIExpression()) #25, !dbg !15097
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15097
  call void @llvm.dbg.value(metadata i32 %3, metadata !14344, metadata !DIExpression()) #25, !dbg !15093
  call void @llvm.dbg.value(metadata i32 %3, metadata !15091, metadata !DIExpression()), !dbg !15092
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !15098
  br i1 %4, label %6, label %5, !dbg !15100

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !15101
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !15101
  call void @llvm.dbg.value(metadata i32 %3, metadata !14373, metadata !DIExpression()) #25, !dbg !15104
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15106, !srcloc !14379
  br label %8, !dbg !15107

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !15108
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !15109
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15110
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !15110
  br label %8, !dbg !15111

8:                                                ; preds = %6, %5
  ret void, !dbg !15111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15112 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15114, metadata !DIExpression()), !dbg !15115
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15116
  %3 = load i8, i8* %2, align 1, !dbg !15116
  %4 = and i8 %3, 16, !dbg !15117
  %5 = icmp ne i8 %4, 0, !dbg !15118
  ret i1 %5, !dbg !15119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15120 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15122, metadata !DIExpression()), !dbg !15123
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15124
  %3 = load i8, i8* %2, align 1, !dbg !15125
  %4 = and i8 %3, -17, !dbg !15125
  store i8 %4, i8* %2, align 1, !dbg !15125
  ret void, !dbg !15126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15127 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15137, metadata !DIExpression()), !dbg !15141
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15135, metadata !DIExpression()), !dbg !15141
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15136, metadata !DIExpression()), !dbg !15141
  call void @llvm.dbg.value(metadata i32 0, metadata !15138, metadata !DIExpression()), !dbg !15142
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15143
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15145, !srcloc !14353
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15145
  call void @llvm.dbg.value(metadata i32 %5, metadata !14350, metadata !DIExpression()) #25, !dbg !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15147
  call void @llvm.dbg.value(metadata i32 %5, metadata !14344, metadata !DIExpression()) #25, !dbg !15143
  call void @llvm.dbg.value(metadata i32 %5, metadata !15140, metadata !DIExpression()), !dbg !15142
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()), !dbg !15142
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !15148
  call void @llvm.dbg.value(metadata i32 %5, metadata !14365, metadata !DIExpression()) #25, !dbg !15151
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !15151
  call void @llvm.dbg.value(metadata i32 %5, metadata !14373, metadata !DIExpression()) #25, !dbg !15153
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15155, !srcloc !14379
  call void @llvm.dbg.value(metadata i32 1, metadata !15138, metadata !DIExpression()), !dbg !15142
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()), !dbg !15142
  ret void, !dbg !15156
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15157 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15161, metadata !DIExpression()), !dbg !15162
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15159, metadata !DIExpression()), !dbg !15162
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15160, metadata !DIExpression()), !dbg !15162
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #27, !dbg !15163
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !15164
  ret void, !dbg !15165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15166 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15170, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15171, metadata !DIExpression()), !dbg !15172
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !15173
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !15174
  %3 = icmp eq %union.anon* %1, null, !dbg !15175
  br i1 %3, label %21, label %4, !dbg !15177

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15178
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15180
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15181
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14538, metadata !DIExpression()) #25, !dbg !15182
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14544, metadata !DIExpression()) #25, !dbg !15182
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #26, !dbg !15184
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14545, metadata !DIExpression()) #25, !dbg !15182
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15185
  br i1 %8, label %19, label %9, !dbg !15184

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14545, metadata !DIExpression()) #25, !dbg !15182
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15186
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14545, metadata !DIExpression()) #25, !dbg !15182
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #26, !dbg !15187
  %13 = icmp sgt i32 %12, 0, !dbg !15188
  br i1 %13, label %14, label %16, !dbg !15189

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15190
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #26, !dbg !15191
  br label %21, !dbg !15192

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #26, !dbg !15185
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14545, metadata !DIExpression()) #25, !dbg !15182
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15185
  br i1 %18, label %19, label %9, !dbg !15184, !llvm.loop !15193

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15195
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #26, !dbg !15196
  br label %21, !dbg !15197

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15198
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15199 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15204, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15203, metadata !DIExpression()), !dbg !15205
  %4 = icmp eq i64 %3, -1, !dbg !15206
  br i1 %4, label %6, label %5, !dbg !15208

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.146(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !15209
  br label %6, !dbg !15211

6:                                                ; preds = %5, %2
  ret void, !dbg !15212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.146(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15213 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15216, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15215, metadata !DIExpression()), !dbg !15217
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15218
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !15219
  ret void, !dbg !15220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15221 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15223, metadata !DIExpression()), !dbg !15231
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15232
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15232
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15224, metadata !DIExpression()), !dbg !15231
  call void @llvm.dbg.value(metadata i32 0, metadata !15225, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15234
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15236, !srcloc !14353
  call void @llvm.dbg.value(metadata i32 undef, metadata !14350, metadata !DIExpression()) #25, !dbg !15238
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15238
  call void @llvm.dbg.value(metadata i32 undef, metadata !14344, metadata !DIExpression()) #25, !dbg !15234
  call void @llvm.dbg.value(metadata i32 undef, metadata !15227, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata i32 undef, metadata !15225, metadata !DIExpression()), !dbg !15233
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15239
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15240
  %7 = load i8, i8* %6, align 1, !dbg !15240
  %8 = and i8 %7, 40, !dbg !15241
  %9 = icmp eq i8 %8, 0, !dbg !15241
  call void @llvm.dbg.value(metadata i1 %9, metadata !15228, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15242
  br i1 %9, label %10, label %17, !dbg !15243

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15244
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15244
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15244
  %14 = icmp eq %union.anon* %13, null, !dbg !15248
  br i1 %14, label %16, label %15, !dbg !15249

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !15250
  br label %16, !dbg !15252

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.143(%struct.k_thread* noundef nonnull %3) #27, !dbg !15253
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !15254
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !15255
  br label %17, !dbg !15256

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15236
  call void @llvm.dbg.value(metadata i32 %18, metadata !14350, metadata !DIExpression()) #25, !dbg !15238
  call void @llvm.dbg.value(metadata i32 %18, metadata !14344, metadata !DIExpression()) #25, !dbg !15234
  call void @llvm.dbg.value(metadata i32 %18, metadata !15227, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !15257
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !15257
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #25, !dbg !15259
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15261, !srcloc !14379
  call void @llvm.dbg.value(metadata i32 1, metadata !15225, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata i32 undef, metadata !15225, metadata !DIExpression()), !dbg !15233
  ret void, !dbg !15262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15263 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15265, metadata !DIExpression()), !dbg !15266
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15267
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !15268
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15269
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15270
  ret void, !dbg !15271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15272 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15274, metadata !DIExpression()), !dbg !15275
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15276
  %3 = load i8, i8* %2, align 1, !dbg !15277
  %4 = and i8 %3, -3, !dbg !15277
  store i8 %4, i8* %2, align 1, !dbg !15277
  ret void, !dbg !15278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15281, metadata !DIExpression()), !dbg !15282
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15283
  br i1 %2, label %3, label %7, !dbg !15285

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14507, metadata !DIExpression()) #25, !dbg !15286
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15289
  %5 = load i8, i8* %4, align 1, !dbg !15290
  %6 = and i8 %5, 127, !dbg !15290
  store i8 %6, i8* %4, align 1, !dbg !15290
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14515, metadata !DIExpression()) #25, !dbg !15291
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15293
  br label %7, !dbg !15294

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15295
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15296
  %10 = zext i1 %9 to i32, !dbg !15296
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !15297
  ret void, !dbg !15298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15299 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15301, metadata !DIExpression()), !dbg !15302
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15303
  %3 = load i8, i8* %2, align 1, !dbg !15304
  %4 = or i8 %3, 2, !dbg !15304
  store i8 %4, i8* %2, align 1, !dbg !15304
  ret void, !dbg !15305
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15306 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15308, metadata !DIExpression()), !dbg !15312
  call void @llvm.dbg.value(metadata i32 0, metadata !15309, metadata !DIExpression()), !dbg !15313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15314
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15316, !srcloc !14353
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15316
  call void @llvm.dbg.value(metadata i32 %3, metadata !14350, metadata !DIExpression()) #25, !dbg !15318
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15318
  call void @llvm.dbg.value(metadata i32 %3, metadata !14344, metadata !DIExpression()) #25, !dbg !15314
  call void @llvm.dbg.value(metadata i32 %3, metadata !15311, metadata !DIExpression()), !dbg !15313
  call void @llvm.dbg.value(metadata i32 undef, metadata !15309, metadata !DIExpression()), !dbg !15313
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !15319
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !15322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !15322
  call void @llvm.dbg.value(metadata i32 %3, metadata !14373, metadata !DIExpression()) #25, !dbg !15324
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15326, !srcloc !14379
  call void @llvm.dbg.value(metadata i32 1, metadata !15309, metadata !DIExpression()), !dbg !15313
  call void @llvm.dbg.value(metadata i32 undef, metadata !15309, metadata !DIExpression()), !dbg !15313
  ret void, !dbg !15327
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15328 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15334, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata i32 %0, metadata !15332, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15333, metadata !DIExpression()), !dbg !15339
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15340
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !15341
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15342
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15343
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !15344
  call void @llvm.dbg.value(metadata i32 %6, metadata !15335, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata i32 0, metadata !15336, metadata !DIExpression()), !dbg !15345
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15346
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15348, !srcloc !14353
  call void @llvm.dbg.value(metadata i32 undef, metadata !14350, metadata !DIExpression()) #25, !dbg !15350
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15350
  call void @llvm.dbg.value(metadata i32 undef, metadata !14344, metadata !DIExpression()) #25, !dbg !15346
  call void @llvm.dbg.value(metadata i32 undef, metadata !15338, metadata !DIExpression()), !dbg !15345
  call void @llvm.dbg.value(metadata i32 undef, metadata !15336, metadata !DIExpression()), !dbg !15345
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15351
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15355
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15356
  br i1 %10, label %11, label %12, !dbg !15357

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15358
  br label %12, !dbg !15360

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15348
  call void @llvm.dbg.value(metadata i32 %13, metadata !14350, metadata !DIExpression()) #25, !dbg !15350
  call void @llvm.dbg.value(metadata i32 %13, metadata !14344, metadata !DIExpression()) #25, !dbg !15346
  call void @llvm.dbg.value(metadata i32 %13, metadata !15338, metadata !DIExpression()), !dbg !15345
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !15361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !15361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #25, !dbg !15363
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !15365, !srcloc !14379
  call void @llvm.dbg.value(metadata i32 1, metadata !15336, metadata !DIExpression()), !dbg !15345
  call void @llvm.dbg.value(metadata i32 undef, metadata !15336, metadata !DIExpression()), !dbg !15345
  ret i32 %6, !dbg !15366
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15367 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15372, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata i64 undef, metadata !15374, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15371, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15373, metadata !DIExpression()), !dbg !15375
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15376
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15378
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15380, !srcloc !14353
  call void @llvm.dbg.value(metadata i32 undef, metadata !14350, metadata !DIExpression()) #25, !dbg !15382
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15382
  call void @llvm.dbg.value(metadata i32 undef, metadata !14344, metadata !DIExpression()) #25, !dbg !15378
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15383
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !15384
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14949, metadata !DIExpression()) #25, !dbg !15385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14954, metadata !DIExpression()) #25, !dbg !15385
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #26, !dbg !15387
  ret i32 %9, !dbg !15388
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15389 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15393, metadata !DIExpression()), !dbg !15398
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15394, metadata !DIExpression()), !dbg !15398
  call void @llvm.dbg.value(metadata i32 0, metadata !15395, metadata !DIExpression()), !dbg !15399
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15400
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15402, !srcloc !14353
  call void @llvm.dbg.value(metadata i32 undef, metadata !14350, metadata !DIExpression()) #25, !dbg !15404
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15404
  call void @llvm.dbg.value(metadata i32 undef, metadata !14344, metadata !DIExpression()) #25, !dbg !15400
  call void @llvm.dbg.value(metadata i32 undef, metadata !15397, metadata !DIExpression()), !dbg !15399
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15394, metadata !DIExpression()), !dbg !15398
  call void @llvm.dbg.value(metadata i32 undef, metadata !15395, metadata !DIExpression()), !dbg !15399
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !15405
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15394, metadata !DIExpression()), !dbg !15398
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15408
  br i1 %5, label %7, label %6, !dbg !15410

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15411
  br label %7, !dbg !15413

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15402
  call void @llvm.dbg.value(metadata i32 %8, metadata !14350, metadata !DIExpression()) #25, !dbg !15404
  call void @llvm.dbg.value(metadata i32 %8, metadata !14344, metadata !DIExpression()) #25, !dbg !15400
  call void @llvm.dbg.value(metadata i32 %8, metadata !15397, metadata !DIExpression()), !dbg !15399
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !15414
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !15414
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #25, !dbg !15416
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15418, !srcloc !14379
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15394, metadata !DIExpression()), !dbg !15398
  call void @llvm.dbg.value(metadata i32 undef, metadata !15395, metadata !DIExpression()), !dbg !15399
  ret %struct.k_thread* %4, !dbg !15419
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15420 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15422, metadata !DIExpression()), !dbg !15427
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15423, metadata !DIExpression()), !dbg !15427
  call void @llvm.dbg.value(metadata i32 0, metadata !15424, metadata !DIExpression()), !dbg !15428
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15429
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15431, !srcloc !14353
  call void @llvm.dbg.value(metadata i32 undef, metadata !14350, metadata !DIExpression()) #25, !dbg !15433
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15433
  call void @llvm.dbg.value(metadata i32 undef, metadata !14344, metadata !DIExpression()) #25, !dbg !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !15426, metadata !DIExpression()), !dbg !15428
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15423, metadata !DIExpression()), !dbg !15427
  call void @llvm.dbg.value(metadata i32 undef, metadata !15424, metadata !DIExpression()), !dbg !15428
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !15434
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15423, metadata !DIExpression()), !dbg !15427
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15437
  br i1 %5, label %8, label %6, !dbg !15439

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15440
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15442
  br label %8, !dbg !15443

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15431
  call void @llvm.dbg.value(metadata i32 %9, metadata !14350, metadata !DIExpression()) #25, !dbg !15433
  call void @llvm.dbg.value(metadata i32 %9, metadata !14344, metadata !DIExpression()) #25, !dbg !15429
  call void @llvm.dbg.value(metadata i32 %9, metadata !15426, metadata !DIExpression()), !dbg !15428
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !15444
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #25, !dbg !15446
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15448, !srcloc !14379
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15423, metadata !DIExpression()), !dbg !15427
  call void @llvm.dbg.value(metadata i32 undef, metadata !15424, metadata !DIExpression()), !dbg !15428
  ret %struct.k_thread* %4, !dbg !15449
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15450 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15452, metadata !DIExpression()), !dbg !15453
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15308, metadata !DIExpression()) #25, !dbg !15454
  call void @llvm.dbg.value(metadata i32 0, metadata !15309, metadata !DIExpression()) #25, !dbg !15456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15457
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15459, !srcloc !14353
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15459
  call void @llvm.dbg.value(metadata i32 %3, metadata !14350, metadata !DIExpression()) #25, !dbg !15461
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15461
  call void @llvm.dbg.value(metadata i32 %3, metadata !14344, metadata !DIExpression()) #25, !dbg !15457
  call void @llvm.dbg.value(metadata i32 %3, metadata !15311, metadata !DIExpression()) #25, !dbg !15456
  call void @llvm.dbg.value(metadata i32 undef, metadata !15309, metadata !DIExpression()) #25, !dbg !15456
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15462
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !15463
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !15463
  call void @llvm.dbg.value(metadata i32 %3, metadata !14373, metadata !DIExpression()) #25, !dbg !15465
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15467, !srcloc !14379
  call void @llvm.dbg.value(metadata i32 1, metadata !15309, metadata !DIExpression()) #25, !dbg !15456
  call void @llvm.dbg.value(metadata i32 undef, metadata !15309, metadata !DIExpression()) #25, !dbg !15456
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !15468
  ret void, !dbg !15469
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15472, metadata !DIExpression()), !dbg !15478
  call void @llvm.dbg.value(metadata i32 %1, metadata !15473, metadata !DIExpression()), !dbg !15478
  call void @llvm.dbg.value(metadata i8 0, metadata !15474, metadata !DIExpression()), !dbg !15478
  call void @llvm.dbg.value(metadata i32 0, metadata !15475, metadata !DIExpression()), !dbg !15479
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15480
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15482, !srcloc !14353
  call void @llvm.dbg.value(metadata i32 undef, metadata !14350, metadata !DIExpression()) #25, !dbg !15484
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15484
  call void @llvm.dbg.value(metadata i32 undef, metadata !14344, metadata !DIExpression()) #25, !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !15477, metadata !DIExpression()), !dbg !15479
  call void @llvm.dbg.value(metadata i8 poison, metadata !15474, metadata !DIExpression()), !dbg !15478
  call void @llvm.dbg.value(metadata i32 undef, metadata !15475, metadata !DIExpression()), !dbg !15479
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !15485
  call void @llvm.dbg.value(metadata i1 %6, metadata !15474, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15478
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15488

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14507, metadata !DIExpression()) #25, !dbg !15489
  %11 = load i8, i8* %4, align 1, !dbg !15495
  %12 = and i8 %11, 127, !dbg !15495
  store i8 %12, i8* %4, align 1, !dbg !15495
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14515, metadata !DIExpression()) #25, !dbg !15496
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15498
  store i8 %9, i8* %8, align 2, !dbg !15499
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14524, metadata !DIExpression()) #25, !dbg !15500
  %13 = load i8, i8* %4, align 1, !dbg !15502
  %14 = or i8 %13, -128, !dbg !15502
  store i8 %14, i8* %4, align 1, !dbg !15502
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14531, metadata !DIExpression()) #25, !dbg !15503
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14538, metadata !DIExpression()) #25, !dbg !15505
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14544, metadata !DIExpression()) #25, !dbg !15505
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15507
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14545, metadata !DIExpression()) #25, !dbg !15505
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15508
  br i1 %16, label %26, label %17, !dbg !15507

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14545, metadata !DIExpression()) #25, !dbg !15505
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15509
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14545, metadata !DIExpression()) #25, !dbg !15505
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #26, !dbg !15510
  %21 = icmp sgt i32 %20, 0, !dbg !15511
  br i1 %21, label %22, label %23, !dbg !15512

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #26, !dbg !15513
  br label %27, !dbg !15514

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #26, !dbg !15508
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14545, metadata !DIExpression()) #25, !dbg !15505
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15508
  br i1 %25, label %26, label %17, !dbg !15507, !llvm.loop !15515

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #26, !dbg !15517
  br label %27, !dbg !15518

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !15519
  br label %29, !dbg !15520

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15521
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15482
  call void @llvm.dbg.value(metadata i32 %30, metadata !14350, metadata !DIExpression()) #25, !dbg !15484
  call void @llvm.dbg.value(metadata i32 %30, metadata !14344, metadata !DIExpression()) #25, !dbg !15480
  call void @llvm.dbg.value(metadata i32 %30, metadata !15477, metadata !DIExpression()), !dbg !15479
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !15523
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !15523
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #25, !dbg !15525
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !15527, !srcloc !14379
  call void @llvm.dbg.value(metadata i8 poison, metadata !15474, metadata !DIExpression()), !dbg !15478
  call void @llvm.dbg.value(metadata i32 undef, metadata !15475, metadata !DIExpression()), !dbg !15479
  ret i1 %6, !dbg !15528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15529 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15533, metadata !DIExpression()), !dbg !15536
  call void @llvm.dbg.value(metadata i32 %1, metadata !15534, metadata !DIExpression()), !dbg !15536
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !15537
  call void @llvm.dbg.value(metadata i1 %3, metadata !15535, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15536
  br i1 %3, label %4, label %12, !dbg !15538

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15540
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15541
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15541
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15541
  %9 = load i8, i8* %8, align 1, !dbg !15541
  %10 = icmp eq i8 %9, 0, !dbg !15542
  br i1 %10, label %11, label %12, !dbg !15543

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15544
  br label %12, !dbg !15546

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15547
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15548 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15550, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15554
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15556, !srcloc !14353
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15556
  call void @llvm.dbg.value(metadata i32 %2, metadata !14350, metadata !DIExpression()) #25, !dbg !15558
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15558
  call void @llvm.dbg.value(metadata i32 %2, metadata !14344, metadata !DIExpression()) #25, !dbg !15554
  call void @llvm.dbg.value(metadata i32 %2, metadata !15552, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.value(metadata i32 undef, metadata !15550, metadata !DIExpression()), !dbg !15553
  tail call fastcc void @z_sched_lock() #27, !dbg !15559
  call void @llvm.dbg.value(metadata i32 %2, metadata !14365, metadata !DIExpression()) #25, !dbg !15562
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !15562
  call void @llvm.dbg.value(metadata i32 %2, metadata !14373, metadata !DIExpression()) #25, !dbg !15564
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15566, !srcloc !14379
  call void @llvm.dbg.value(metadata i32 1, metadata !15550, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.value(metadata i32 undef, metadata !15550, metadata !DIExpression()), !dbg !15553
  ret void, !dbg !15567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15568 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15569
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15570
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15570
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15570
  %5 = load i8, i8* %4, align 1, !dbg !15571
  %6 = add i8 %5, -1, !dbg !15571
  store i8 %6, i8* %4, align 1, !dbg !15571
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15572, !srcloc !15574
  ret void, !dbg !15575
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15576 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15578, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15582
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15584, !srcloc !14353
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15584
  call void @llvm.dbg.value(metadata i32 %2, metadata !14350, metadata !DIExpression()) #25, !dbg !15586
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15586
  call void @llvm.dbg.value(metadata i32 %2, metadata !14344, metadata !DIExpression()) #25, !dbg !15582
  call void @llvm.dbg.value(metadata i32 %2, metadata !15580, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.value(metadata i32 undef, metadata !15578, metadata !DIExpression()), !dbg !15581
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15587
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15590
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15590
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15590
  %7 = load i8, i8* %6, align 1, !dbg !15591
  %8 = add i8 %7, 1, !dbg !15591
  store i8 %8, i8* %6, align 1, !dbg !15591
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !15592
  call void @llvm.dbg.value(metadata i32 %2, metadata !14365, metadata !DIExpression()) #25, !dbg !15593
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !15593
  call void @llvm.dbg.value(metadata i32 %2, metadata !14373, metadata !DIExpression()) #25, !dbg !15595
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15597, !srcloc !14379
  call void @llvm.dbg.value(metadata i32 1, metadata !15578, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.value(metadata i32 undef, metadata !15578, metadata !DIExpression()), !dbg !15581
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15598
  ret void, !dbg !15599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !15600 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15601
  ret %struct.k_thread* %1, !dbg !15602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !15603 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15607, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15608, metadata !DIExpression()), !dbg !15612
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15613
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15609, metadata !DIExpression()), !dbg !15612
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15614
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15610, metadata !DIExpression()), !dbg !15612
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !15615
  call void @llvm.dbg.value(metadata i32 %5, metadata !15611, metadata !DIExpression()), !dbg !15612
  %6 = icmp sgt i32 %5, 0, !dbg !15616
  br i1 %6, label %17, label %7, !dbg !15618

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15619
  br i1 %8, label %17, label %9, !dbg !15621

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15622
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15622
  %12 = load i32, i32* %11, align 8, !dbg !15622
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15624
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15624
  %15 = load i32, i32* %14, align 8, !dbg !15624
  %16 = icmp ult i32 %12, %15, !dbg !15625
  br label %17, !dbg !15626

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15627
  ret i1 %18, !dbg !15628
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15629 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15646, metadata !DIExpression()), !dbg !15661
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15647, metadata !DIExpression()), !dbg !15661
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15662
  %5 = load i32, i32* %4, align 4, !dbg !15663
  %6 = add nsw i32 %5, 1, !dbg !15663
  store i32 %6, i32* %4, align 4, !dbg !15663
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15664
  store i32 %5, i32* %7, align 8, !dbg !15665
  %8 = load i32, i32* %4, align 4, !dbg !15666
  %9 = icmp eq i32 %8, 0, !dbg !15667
  br i1 %9, label %10, label %32, !dbg !15668

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15669
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15669
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15649, metadata !DIExpression()), !dbg !15669
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15669
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15669
  %14 = load i32, i32* %13, align 4, !dbg !15669
  %15 = shl i32 %14, 2, !dbg !15669
  %16 = alloca i8, i32 %15, align 8, !dbg !15669
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15669
  store i8* %16, i8** %17, align 4, !dbg !15669
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15669
  %19 = alloca i8, i32 %14, align 8, !dbg !15669
  store i8* %19, i8** %18, align 4, !dbg !15669
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15669
  store i32 -1, i32* %20, align 4, !dbg !15669
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15670
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15658, metadata !DIExpression()), !dbg !15671
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15648, metadata !DIExpression()), !dbg !15661
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !15672
  br i1 %22, label %23, label %24, !dbg !15669

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15672
  br label %32, !dbg !15673

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !15648, metadata !DIExpression()), !dbg !15661
  %26 = load i32, i32* %4, align 4, !dbg !15674
  %27 = add nsw i32 %26, 1, !dbg !15674
  store i32 %27, i32* %4, align 4, !dbg !15674
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !15676
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !15676
  store i32 %26, i32* %29, align 8, !dbg !15677
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15670
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15658, metadata !DIExpression()), !dbg !15671
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15648, metadata !DIExpression()), !dbg !15661
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !15672
  br i1 %31, label %23, label %24, !dbg !15669, !llvm.loop !15678

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15680
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15681
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #26, !dbg !15682
  ret void, !dbg !15683
}

; Function Attrs: optsize
declare !dbg !15684 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15689 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15692 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15694, metadata !DIExpression()), !dbg !15696
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15695, metadata !DIExpression()), !dbg !15696
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15697
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15698
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #26, !dbg !15699
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15700
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !15700
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !15702
  br i1 %7, label %8, label %10, !dbg !15703

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15704
  store i32 0, i32* %9, align 4, !dbg !15706
  br label %10, !dbg !15707

10:                                               ; preds = %8, %2
  ret void, !dbg !15708
}

; Function Attrs: optsize
declare !dbg !15709 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15710 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15714, metadata !DIExpression()), !dbg !15717
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15715, metadata !DIExpression()), !dbg !15717
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15718
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !15719
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15716, metadata !DIExpression()), !dbg !15717
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15715, metadata !DIExpression()), !dbg !15717
  ret %struct.k_thread* %4, !dbg !15720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15721 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15725, metadata !DIExpression()), !dbg !15726
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !15727
  ret %struct.rbnode* %2, !dbg !15728
}

; Function Attrs: optsize
declare !dbg !15729 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !15732 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15744, metadata !DIExpression()), !dbg !15748
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15749
  %3 = load i32, i32* %2, align 4, !dbg !15749
  %4 = icmp eq i32 %3, 0, !dbg !15751
  br i1 %4, label %10, label %5, !dbg !15752

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15745, metadata !DIExpression()), !dbg !15748
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15753, !range !3813
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15754
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15746, metadata !DIExpression()), !dbg !15748
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #27, !dbg !15755
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15747, metadata !DIExpression()), !dbg !15748
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15745, metadata !DIExpression()), !dbg !15748
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15748
  ret %struct.k_thread* %11, !dbg !15756
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15757 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15761, metadata !DIExpression()), !dbg !15764
  call void @llvm.dbg.value(metadata i32 0, metadata !15762, metadata !DIExpression()), !dbg !15764
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !15765
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15763, metadata !DIExpression()), !dbg !15764
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15766
  br i1 %3, label %8, label %4, !dbg !15767

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !15768
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !15770
  call void @llvm.dbg.value(metadata i32 1, metadata !15762, metadata !DIExpression()), !dbg !15764
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !15765
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15763, metadata !DIExpression()), !dbg !15764
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15766
  br i1 %7, label %8, label %4, !dbg !15767, !llvm.loop !15771

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15764
  ret i32 %9, !dbg !15773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !15774 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15776, metadata !DIExpression()), !dbg !15777
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15778
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !15779
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15780
  ret %struct.k_thread* %4, !dbg !15781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !15782 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15791, metadata !DIExpression()), !dbg !15792
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15793
  tail call fastcc void @sys_dlist_init.157(%struct._dnode* noundef nonnull %2) #27, !dbg !15794
  ret void, !dbg !15795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.157(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15796 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15800, metadata !DIExpression()), !dbg !15801
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15802
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15803
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15804
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15805
  ret void, !dbg !15806
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15807 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !15808
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !15809
  ret void, !dbg !15810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15811 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15816, metadata !DIExpression()), !dbg !15817
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15818
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15818
  %4 = load i8, i8* %3, align 2, !dbg !15818
  %5 = sext i8 %4 to i32, !dbg !15819
  ret i32 %5, !dbg !15820
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15821 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15825, metadata !DIExpression()), !dbg !15828
  call void @llvm.dbg.value(metadata i32 %1, metadata !15826, metadata !DIExpression()), !dbg !15828
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15827, metadata !DIExpression()), !dbg !15828
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !15829
  ret void, !dbg !15830
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15831 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !15832
  br i1 %1, label %8, label %2, !dbg !15833

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !15834
  br i1 %3, label %8, label %4, !dbg !15835

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15836
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !15837
  %7 = xor i1 %6, true, !dbg !15835
  br label %8, !dbg !15835

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15839 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15840, !range !6298
  %2 = icmp eq i8 %1, 0, !dbg !15840
  ret i1 %2, !dbg !15841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15842 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15845
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15847, !srcloc !14353
  call void @llvm.dbg.value(metadata i32 undef, metadata !14350, metadata !DIExpression()) #25, !dbg !15849
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15849
  call void @llvm.dbg.value(metadata i32 undef, metadata !14344, metadata !DIExpression()) #25, !dbg !15845
  call void @llvm.dbg.value(metadata i32 undef, metadata !15844, metadata !DIExpression()), !dbg !15850
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15851
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14507, metadata !DIExpression()) #25, !dbg !15854
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15856
  %4 = load i8, i8* %3, align 1, !dbg !15857
  %5 = and i8 %4, 127, !dbg !15857
  store i8 %5, i8* %3, align 1, !dbg !15857
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14515, metadata !DIExpression()) #25, !dbg !15858
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #26, !dbg !15860
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15861
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14524, metadata !DIExpression()) #25, !dbg !15862
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15864
  %8 = load i8, i8* %7, align 1, !dbg !15865
  %9 = or i8 %8, -128, !dbg !15865
  store i8 %9, i8* %7, align 1, !dbg !15865
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14531, metadata !DIExpression()) #25, !dbg !15866
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14538, metadata !DIExpression()) #25, !dbg !15868
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14544, metadata !DIExpression()) #25, !dbg !15868
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15870
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14545, metadata !DIExpression()) #25, !dbg !15868
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15871
  br i1 %11, label %22, label %12, !dbg !15870

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14545, metadata !DIExpression()) #25, !dbg !15868
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15872
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14545, metadata !DIExpression()) #25, !dbg !15868
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #26, !dbg !15873
  %16 = icmp sgt i32 %15, 0, !dbg !15874
  br i1 %16, label %17, label %19, !dbg !15875

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15876
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !15877
  br label %24, !dbg !15878

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #26, !dbg !15871
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14545, metadata !DIExpression()) #25, !dbg !15868
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15871
  br i1 %21, label %22, label %12, !dbg !15870, !llvm.loop !15879

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15881
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #26, !dbg !15882
  br label %24, !dbg !15883

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15847
  call void @llvm.dbg.value(metadata i32 %25, metadata !14350, metadata !DIExpression()) #25, !dbg !15849
  call void @llvm.dbg.value(metadata i32 %25, metadata !14344, metadata !DIExpression()) #25, !dbg !15845
  call void @llvm.dbg.value(metadata i32 %25, metadata !15844, metadata !DIExpression()), !dbg !15850
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !15884
  call void @llvm.dbg.value(metadata i32 undef, metadata !14949, metadata !DIExpression()) #25, !dbg !15885
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14954, metadata !DIExpression()) #25, !dbg !15885
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #26, !dbg !15887
  ret void, !dbg !15888
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15889 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15893, metadata !DIExpression()), !dbg !15896
  %3 = icmp eq i64 %2, -1, !dbg !15897
  br i1 %3, label %4, label %6, !dbg !15899

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15900
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #27, !dbg !15902
  br label %11, !dbg !15903

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15894, metadata !DIExpression()), !dbg !15896
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !15904
  %8 = sext i32 %7 to i64, !dbg !15904
  call void @llvm.dbg.value(metadata i64 %8, metadata !15894, metadata !DIExpression()), !dbg !15896
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #27, !dbg !15905
  %10 = trunc i64 %9 to i32, !dbg !15905
  call void @llvm.dbg.value(metadata i32 %10, metadata !15895, metadata !DIExpression()), !dbg !15896
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15896
  ret i32 %12, !dbg !15906
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15907 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15911, metadata !DIExpression()), !dbg !15912
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15913, !srcloc !15915
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !15916
  ret void, !dbg !15917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15918 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15922, metadata !DIExpression()), !dbg !15926
  %2 = icmp eq i64 %0, 0, !dbg !15927
  br i1 %2, label %3, label %4, !dbg !15929

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #27, !dbg !15930
  br label %29, !dbg !15932

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15924, metadata !DIExpression()), !dbg !15926
  %5 = icmp sgt i64 %0, -3, !dbg !15933
  br i1 %5, label %6, label %10, !dbg !15935

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15936
  %8 = trunc i64 %0 to i32, !dbg !15938
  %9 = add i32 %7, %8, !dbg !15938
  call void @llvm.dbg.value(metadata i32 %9, metadata !15923, metadata !DIExpression()), !dbg !15926
  br label %13, !dbg !15939

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15940
  %12 = sub i32 -2, %11, !dbg !15940
  call void @llvm.dbg.value(metadata i32 %12, metadata !15923, metadata !DIExpression()), !dbg !15926
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15942
  call void @llvm.dbg.value(metadata i32 %14, metadata !15923, metadata !DIExpression()), !dbg !15926
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !15943
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15945, !srcloc !14353
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15945
  call void @llvm.dbg.value(metadata i32 %16, metadata !14350, metadata !DIExpression()) #25, !dbg !15947
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !15947
  call void @llvm.dbg.value(metadata i32 %16, metadata !14344, metadata !DIExpression()) #25, !dbg !15943
  call void @llvm.dbg.value(metadata i32 %16, metadata !15925, metadata !DIExpression()), !dbg !15926
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15948
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15949
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #27, !dbg !15950
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15951
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15952
  tail call fastcc void @z_add_thread_timeout.146(%struct.k_thread* noundef %18, [1 x i64] %19) #27, !dbg !15952
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15953
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #27, !dbg !15954
  call void @llvm.dbg.value(metadata i32 %16, metadata !14949, metadata !DIExpression()) #25, !dbg !15955
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14954, metadata !DIExpression()) #25, !dbg !15955
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #26, !dbg !15957
  %22 = zext i32 %14 to i64, !dbg !15958
  %23 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15959
  %24 = zext i32 %23 to i64, !dbg !15959
  %25 = sub nsw i64 %22, %24, !dbg !15960
  call void @llvm.dbg.value(metadata i64 %25, metadata !15922, metadata !DIExpression()), !dbg !15926
  %26 = icmp sgt i64 %25, 0, !dbg !15961
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15961
  %28 = trunc i64 %27 to i32, !dbg !15961
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15926
  ret i32 %30, !dbg !15962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15963 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15965, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata i64 %0, metadata !14385, metadata !DIExpression()), !dbg !15967
  call void @llvm.dbg.value(metadata i32 10000, metadata !14388, metadata !DIExpression()), !dbg !15967
  call void @llvm.dbg.value(metadata i32 1000, metadata !14389, metadata !DIExpression()), !dbg !15967
  call void @llvm.dbg.value(metadata i8 1, metadata !14390, metadata !DIExpression()), !dbg !15967
  call void @llvm.dbg.value(metadata i1 false, metadata !14391, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15967
  call void @llvm.dbg.value(metadata i1 false, metadata !14392, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15967
  call void @llvm.dbg.value(metadata i8 0, metadata !14393, metadata !DIExpression()), !dbg !15967
  call void @llvm.dbg.value(metadata i1 false, metadata !14394, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15967
  call void @llvm.dbg.value(metadata i1 true, metadata !14395, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15967
  call void @llvm.dbg.value(metadata i64 0, metadata !14396, metadata !DIExpression()), !dbg !15967
  call void @llvm.dbg.value(metadata i64 0, metadata !14396, metadata !DIExpression()), !dbg !15967
  call void @llvm.dbg.value(metadata i64 %0, metadata !14385, metadata !DIExpression()), !dbg !15967
  %2 = udiv i64 %0, 10, !dbg !15969
  ret i64 %2, !dbg !15973
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15974 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15975, !srcloc !15977
  tail call void @z_impl_k_yield() #27, !dbg !15978
  ret void, !dbg !15979
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15984, metadata !DIExpression()), !dbg !15986
  %2 = sext i32 %0 to i64, !dbg !15987
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !15988
  call void @llvm.dbg.value(metadata i64 %3, metadata !15985, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15986
  %4 = shl i64 %3, 32, !dbg !15989
  %5 = ashr exact i64 %4, 32, !dbg !15989
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !15990
  call void @llvm.dbg.value(metadata i32 %6, metadata !15985, metadata !DIExpression()), !dbg !15986
  %7 = sext i32 %6 to i64, !dbg !15991
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !15992
  %9 = trunc i64 %8 to i32, !dbg !15992
  ret i32 %9, !dbg !15993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !15994 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15996, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i64 %0, metadata !14385, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14388, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i32 10000, metadata !14389, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i8 1, metadata !14390, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i1 false, metadata !14391, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15998
  call void @llvm.dbg.value(metadata i1 true, metadata !14392, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15998
  call void @llvm.dbg.value(metadata i8 0, metadata !14393, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i1 false, metadata !14394, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15998
  call void @llvm.dbg.value(metadata i1 true, metadata !14395, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15998
  call void @llvm.dbg.value(metadata i64 0, metadata !14396, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i64 0, metadata !14396, metadata !DIExpression()), !dbg !15998
  %2 = add i64 %0, 99, !dbg !16000
  call void @llvm.dbg.value(metadata i64 %2, metadata !14385, metadata !DIExpression()), !dbg !15998
  %3 = udiv i64 %2, 100, !dbg !16001
  ret i64 %3, !dbg !16002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16003 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16005, metadata !DIExpression()), !dbg !16006
  call void @llvm.dbg.value(metadata i64 %0, metadata !14385, metadata !DIExpression()), !dbg !16007
  call void @llvm.dbg.value(metadata i32 10000, metadata !14388, metadata !DIExpression()), !dbg !16007
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14389, metadata !DIExpression()), !dbg !16007
  call void @llvm.dbg.value(metadata i8 1, metadata !14390, metadata !DIExpression()), !dbg !16007
  call void @llvm.dbg.value(metadata i1 false, metadata !14391, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16007
  call void @llvm.dbg.value(metadata i1 false, metadata !14392, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16007
  call void @llvm.dbg.value(metadata i8 0, metadata !14393, metadata !DIExpression()), !dbg !16007
  call void @llvm.dbg.value(metadata i1 true, metadata !14394, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16007
  call void @llvm.dbg.value(metadata i1 false, metadata !14395, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16007
  call void @llvm.dbg.value(metadata i64 0, metadata !14396, metadata !DIExpression()), !dbg !16007
  call void @llvm.dbg.value(metadata i64 0, metadata !14396, metadata !DIExpression()), !dbg !16007
  %2 = mul i64 %0, 100, !dbg !16009
  ret i64 %2, !dbg !16011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16012 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16014, metadata !DIExpression()), !dbg !16015
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !16016
  br i1 %2, label %14, label %3, !dbg !16018

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !16019
  %5 = icmp slt i32 %4, 0, !dbg !16021
  br i1 %5, label %6, label %10, !dbg !16022

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16023
  %8 = load i8, i8* %7, align 1, !dbg !16023
  %9 = icmp eq i8 %8, 16, !dbg !16026
  br i1 %9, label %10, label %14, !dbg !16027

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !16028
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16029
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16030, !srcloc !14989
  call void @llvm.dbg.value(metadata i32 %11, metadata !14985, metadata !DIExpression()) #25, !dbg !16034
  %12 = icmp eq i32 %11, 0, !dbg !16035
  br i1 %12, label %13, label %14, !dbg !16036

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16037
  br label %14, !dbg !16039

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16041 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16043, metadata !DIExpression()), !dbg !16044
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16045
  %3 = load i8, i8* %2, align 1, !dbg !16045
  %4 = and i8 %3, 2, !dbg !16046
  %5 = icmp ne i8 %4, 0, !dbg !16047
  ret i1 %5, !dbg !16048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16049 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16054
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16053, metadata !DIExpression()), !dbg !16055
  ret %struct.k_thread* %1, !dbg !16056
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16057 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16058, !srcloc !14989
  call void @llvm.dbg.value(metadata i32 %1, metadata !14985, metadata !DIExpression()) #25, !dbg !16061
  %2 = icmp eq i32 %1, 0, !dbg !16062
  br i1 %2, label %3, label %8, !dbg !16063

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16064
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !16065
  %6 = icmp ne i32 %5, 0, !dbg !16063
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16067 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16069, metadata !DIExpression()), !dbg !16071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !16072
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16074, !srcloc !14353
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16074
  call void @llvm.dbg.value(metadata i32 %3, metadata !14350, metadata !DIExpression()) #25, !dbg !16076
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !16076
  call void @llvm.dbg.value(metadata i32 %3, metadata !14344, metadata !DIExpression()) #25, !dbg !16072
  call void @llvm.dbg.value(metadata i32 %3, metadata !16070, metadata !DIExpression()), !dbg !16071
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16077
  %5 = load i8, i8* %4, align 4, !dbg !16077
  %6 = and i8 %5, 1, !dbg !16079
  %7 = icmp eq i8 %6, 0, !dbg !16080
  br i1 %7, label %9, label %8, !dbg !16081

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !16082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !16082
  call void @llvm.dbg.value(metadata i32 %3, metadata !14373, metadata !DIExpression()) #25, !dbg !16085
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16087, !srcloc !14379
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !16088, !srcloc !16090
  br label %24, !dbg !16091

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16092
  %11 = load i8, i8* %10, align 1, !dbg !16092
  %12 = and i8 %11, 8, !dbg !16094
  %13 = icmp eq i8 %12, 0, !dbg !16095
  br i1 %13, label %15, label %14, !dbg !16096

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !16097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !16097
  call void @llvm.dbg.value(metadata i32 %3, metadata !14373, metadata !DIExpression()) #25, !dbg !16100
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16102, !srcloc !14379
  br label %24, !dbg !16103

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !16104
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16105
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16107
  br i1 %17, label %18, label %23, !dbg !16108

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16109, !srcloc !14989
  call void @llvm.dbg.value(metadata i32 %19, metadata !14985, metadata !DIExpression()) #25, !dbg !16112
  %20 = icmp eq i32 %19, 0, !dbg !16113
  br i1 %20, label %21, label %23, !dbg !16114

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14949, metadata !DIExpression()) #25, !dbg !16115
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14954, metadata !DIExpression()) #25, !dbg !16115
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !16118
  br label %23, !dbg !16119

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !16120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !16120
  call void @llvm.dbg.value(metadata i32 %3, metadata !14373, metadata !DIExpression()) #25, !dbg !16122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16124, !srcloc !14379
  br label %24, !dbg !16125

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16126 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16128, metadata !DIExpression()), !dbg !16129
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16130
  %3 = load i8, i8* %2, align 1, !dbg !16130
  %4 = and i8 %3, 8, !dbg !16132
  %5 = icmp eq i8 %4, 0, !dbg !16133
  br i1 %5, label %6, label %20, !dbg !16134

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16135
  %8 = or i8 %7, 8, !dbg !16135
  store i8 %8, i8* %2, align 1, !dbg !16135
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !16137
  br i1 %9, label %10, label %12, !dbg !16139

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14507, metadata !DIExpression()) #25, !dbg !16140
  %11 = and i8 %8, 95, !dbg !16143
  store i8 %11, i8* %2, align 1, !dbg !16143
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14515, metadata !DIExpression()) #25, !dbg !16144
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !16146
  br label %12, !dbg !16147

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16148
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16148
  %15 = icmp eq %union.anon* %14, null, !dbg !16150
  br i1 %15, label %17, label %16, !dbg !16151

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16152
  br label %17, !dbg !16154

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16155
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16156
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #27, !dbg !16157
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !16158
  br label %20, !dbg !16159

20:                                               ; preds = %17, %1
  ret void, !dbg !16160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16161 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16165, metadata !DIExpression()), !dbg !16167
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16168
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16166, metadata !DIExpression()), !dbg !16167
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16169
  br i1 %3, label %10, label %4, !dbg !16170

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16171
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16173
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16174, metadata !DIExpression()), !dbg !16180
  call void @llvm.dbg.value(metadata i32 0, metadata !16179, metadata !DIExpression()), !dbg !16180
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16182
  store i32 0, i32* %7, align 4, !dbg !16183
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !16184
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16168
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16166, metadata !DIExpression()), !dbg !16167
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16169
  br i1 %9, label %10, label %4, !dbg !16170, !llvm.loop !16185

10:                                               ; preds = %4, %1
  ret void, !dbg !16187
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16188 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16193, metadata !DIExpression()), !dbg !16196
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16192, metadata !DIExpression()), !dbg !16196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !16197
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16199, !srcloc !14353
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16199
  call void @llvm.dbg.value(metadata i32 %4, metadata !14350, metadata !DIExpression()) #25, !dbg !16201
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !16201
  call void @llvm.dbg.value(metadata i32 %4, metadata !14344, metadata !DIExpression()) #25, !dbg !16197
  call void @llvm.dbg.value(metadata i32 %4, metadata !16194, metadata !DIExpression()), !dbg !16196
  call void @llvm.dbg.value(metadata i32 0, metadata !16195, metadata !DIExpression()), !dbg !16196
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16202
  %6 = load i8, i8* %5, align 1, !dbg !16202
  %7 = and i8 %6, 8, !dbg !16204
  %8 = icmp eq i8 %7, 0, !dbg !16205
  br i1 %8, label %9, label %24, !dbg !16206

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16193, metadata !DIExpression()), !dbg !16196
  %11 = icmp eq i64 %10, 0, !dbg !16207
  br i1 %11, label %24, label %12, !dbg !16209

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16210
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16212
  br i1 %14, label %24, label %15, !dbg !16213

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16214
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16214
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16215
  %19 = icmp eq %union.anon* %17, %18, !dbg !16216
  br i1 %19, label %24, label %20, !dbg !16217

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16218
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #27, !dbg !16220
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16221
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #27, !dbg !16222
  call void @llvm.dbg.value(metadata i32 %4, metadata !14949, metadata !DIExpression()) #25, !dbg !16223
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14954, metadata !DIExpression()) #25, !dbg !16223
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #26, !dbg !16225
  call void @llvm.dbg.value(metadata i32 %23, metadata !16195, metadata !DIExpression()), !dbg !16196
  br label %26, !dbg !16226

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16227
  call void @llvm.dbg.value(metadata i32 %25, metadata !16195, metadata !DIExpression()), !dbg !16196
  call void @llvm.dbg.value(metadata i32 %4, metadata !14365, metadata !DIExpression()) #25, !dbg !16228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !16228
  call void @llvm.dbg.value(metadata i32 %4, metadata !14373, metadata !DIExpression()) #25, !dbg !16230
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16232, !srcloc !14379
  br label %26, !dbg !16233

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16196
  ret i32 %27, !dbg !16234
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16235 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16239, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata i32 %1, metadata !16240, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata i8* %2, metadata !16241, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata i8 0, metadata !16243, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata i32 0, metadata !16244, metadata !DIExpression()), !dbg !16248
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14338, metadata !DIExpression()) #25, !dbg !16249
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16251, !srcloc !14353
  call void @llvm.dbg.value(metadata i32 undef, metadata !14350, metadata !DIExpression()) #25, !dbg !16253
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #25, !dbg !16253
  call void @llvm.dbg.value(metadata i32 undef, metadata !14344, metadata !DIExpression()) #25, !dbg !16249
  call void @llvm.dbg.value(metadata i32 undef, metadata !16246, metadata !DIExpression()), !dbg !16248
  call void @llvm.dbg.value(metadata i8 poison, metadata !16243, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata i32 undef, metadata !16244, metadata !DIExpression()), !dbg !16248
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #27, !dbg !16254
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16242, metadata !DIExpression()), !dbg !16247
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16257
  br i1 %7, label %12, label %8, !dbg !16259

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16260, metadata !DIExpression()), !dbg !16267
  call void @llvm.dbg.value(metadata i32 %1, metadata !16265, metadata !DIExpression()), !dbg !16267
  call void @llvm.dbg.value(metadata i8* %2, metadata !16266, metadata !DIExpression()), !dbg !16267
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16174, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i32 %1, metadata !16179, metadata !DIExpression()), !dbg !16270
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16272
  store i32 %1, i32* %9, align 4, !dbg !16273
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16274
  store i8* %2, i8** %10, align 4, !dbg !16275
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16276
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16277
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #27, !dbg !16278
  call void @llvm.dbg.value(metadata i8 1, metadata !16243, metadata !DIExpression()), !dbg !16247
  br label %12, !dbg !16279

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16251
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16251
  call void @llvm.dbg.value(metadata i32 %14, metadata !14350, metadata !DIExpression()) #25, !dbg !16253
  call void @llvm.dbg.value(metadata i32 %14, metadata !14344, metadata !DIExpression()) #25, !dbg !16249
  call void @llvm.dbg.value(metadata i32 %14, metadata !16246, metadata !DIExpression()), !dbg !16248
  call void @llvm.dbg.value(metadata i8 poison, metadata !16243, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !16280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14370, metadata !DIExpression()) #25, !dbg !16280
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #25, !dbg !16282
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16284, !srcloc !14379
  call void @llvm.dbg.value(metadata i32 undef, metadata !16244, metadata !DIExpression()), !dbg !16248
  ret i1 %13, !dbg !16285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16286 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16291, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i64 undef, metadata !16293, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16290, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16292, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i8** %4, metadata !16294, metadata !DIExpression()), !dbg !16296
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !16297
  call void @llvm.dbg.value(metadata i32 %6, metadata !16295, metadata !DIExpression()), !dbg !16296
  %7 = icmp eq i8** %4, null, !dbg !16298
  br i1 %7, label %12, label %8, !dbg !16300

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16301
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16303
  %11 = load i8*, i8** %10, align 4, !dbg !16303
  store i8* %11, i8** %4, align 4, !dbg !16304
  br label %12, !dbg !16305

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16306
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16307 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !16309
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !16310
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #26, !dbg !16311
  ret void, !dbg !16312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16313 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16323, metadata !DIExpression()), !dbg !16340
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16321, metadata !DIExpression()), !dbg !16340
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16322, metadata !DIExpression()), !dbg !16340
  %5 = icmp eq i64 %4, -1, !dbg !16341
  br i1 %5, label %55, label %6, !dbg !16343

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16344
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16345
  call void @llvm.dbg.value(metadata i32 0, metadata !16324, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16347, metadata !DIExpression()) #25, !dbg !16354
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16356, !srcloc !16362
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16356
  call void @llvm.dbg.value(metadata i32 %9, metadata !16359, metadata !DIExpression()) #25, !dbg !16363
  call void @llvm.dbg.value(metadata i32 undef, metadata !16360, metadata !DIExpression()) #25, !dbg !16363
  call void @llvm.dbg.value(metadata i32 %9, metadata !16353, metadata !DIExpression()) #25, !dbg !16354
  call void @llvm.dbg.value(metadata i32 %9, metadata !16330, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()), !dbg !16346
  %10 = icmp slt i64 %4, -1, !dbg !16364
  br i1 %10, label %11, label %17, !dbg !16365

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16366
  %13 = add i64 %4, %12, !dbg !16367
  %14 = sub i64 -2, %13, !dbg !16367
  call void @llvm.dbg.value(metadata i64 %14, metadata !16334, metadata !DIExpression()), !dbg !16368
  %15 = icmp sgt i64 %14, 1, !dbg !16369
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16369
  br label %22, !dbg !16370

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16371
  %19 = tail call fastcc i32 @elapsed.168() #27, !dbg !16373
  %20 = sext i32 %19 to i64, !dbg !16373
  %21 = add nsw i64 %18, %20, !dbg !16374
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16375
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16376
  store i64 %23, i64* %24, align 8, !dbg !16377
  %25 = tail call fastcc %struct._timeout* @first() #27, !dbg !16378
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16331, metadata !DIExpression()), !dbg !16380
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16381
  br i1 %26, label %42, label %27, !dbg !16381

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16382
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16331, metadata !DIExpression()), !dbg !16380
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16386
  %31 = load i64, i64* %30, align 8, !dbg !16386
  %32 = icmp slt i64 %28, %31, !dbg !16387
  br i1 %32, label %33, label %38, !dbg !16388

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16386
  %35 = sub nsw i64 %31, %28, !dbg !16389
  store i64 %35, i64* %34, align 8, !dbg !16389
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16391
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16392
  tail call fastcc void @sys_dlist_insert.169(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #27, !dbg !16393
  br label %44, !dbg !16394

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16395
  store i64 %39, i64* %24, align 8, !dbg !16395
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #27, !dbg !16396
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16331, metadata !DIExpression()), !dbg !16380
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16381
  br i1 %41, label %42, label %27, !dbg !16381, !llvm.loop !16397

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16399
  tail call fastcc void @sys_dlist_append.170(%struct._dnode* noundef %43) #27, !dbg !16402
  br label %44, !dbg !16403

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #27, !dbg !16404
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16405
  br i1 %46, label %47, label %54, !dbg !16406

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #27, !dbg !16407
  call void @llvm.dbg.value(metadata i32 %48, metadata !16337, metadata !DIExpression()), !dbg !16408
  %49 = icmp ne i32 %48, 0, !dbg !16409
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16411
  br i1 %52, label %54, label %53, !dbg !16411

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #26, !dbg !16412
  br label %54, !dbg !16414

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16415, metadata !DIExpression()) #25, !dbg !16421
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16420, metadata !DIExpression()) #25, !dbg !16421
  call void @llvm.dbg.value(metadata i32 %9, metadata !16423, metadata !DIExpression()) #25, !dbg !16426
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16428, !srcloc !16429
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()), !dbg !16346
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.168() unnamed_addr #1 !dbg !16431 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16434
  %2 = icmp eq i32 %1, 0, !dbg !16435
  br i1 %2, label %3, label %5, !dbg !16434

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !16436
  br label %5, !dbg !16434

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16434
  ret i32 %6, !dbg !16437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16438 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.173() #27, !dbg !16444
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16442, metadata !DIExpression()), !dbg !16445
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16446
  ret %struct._timeout* %2, !dbg !16447
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.169(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16448 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16452, metadata !DIExpression()), !dbg !16456
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16453, metadata !DIExpression()), !dbg !16456
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16457
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16457
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16454, metadata !DIExpression()), !dbg !16456
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16458
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16459
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16460
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16461
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16462
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16463
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16464
  ret void, !dbg !16465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16466 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16470, metadata !DIExpression()), !dbg !16472
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16473
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.171(%struct._dnode* noundef %2) #27, !dbg !16474
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16471, metadata !DIExpression()), !dbg !16472
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16475
  ret %struct._timeout* %4, !dbg !16476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.170(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16477 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16482, metadata !DIExpression()), !dbg !16485
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16483, metadata !DIExpression()), !dbg !16485
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16486
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16484, metadata !DIExpression()), !dbg !16485
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16487
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16488
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16489
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16490
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16491
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16492
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16493
  ret void, !dbg !16494
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16495 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !16500
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16497, metadata !DIExpression()), !dbg !16501
  %2 = tail call fastcc i32 @elapsed.168() #27, !dbg !16502
  call void @llvm.dbg.value(metadata i32 %2, metadata !16498, metadata !DIExpression()), !dbg !16501
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16503
  br i1 %3, label %14, label %4, !dbg !16505

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16506
  %6 = load i64, i64* %5, align 8, !dbg !16506
  %7 = sext i32 %2 to i64, !dbg !16507
  %8 = sub nsw i64 %6, %7, !dbg !16508
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16509
  br i1 %9, label %14, label %10, !dbg !16510

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16511
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16511
  %13 = trunc i64 %12 to i32, !dbg !16511
  call void @llvm.dbg.value(metadata i32 %13, metadata !16499, metadata !DIExpression()), !dbg !16501
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16513
  call void @llvm.dbg.value(metadata i32 %15, metadata !16499, metadata !DIExpression()), !dbg !16501
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16514
  %17 = icmp ne i32 %16, 0, !dbg !16516
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16517
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16517
  call void @llvm.dbg.value(metadata i32 %20, metadata !16499, metadata !DIExpression()), !dbg !16501
  ret i32 %20, !dbg !16518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.171(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16519 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16523, metadata !DIExpression()), !dbg !16525
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16524, metadata !DIExpression()), !dbg !16525
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16526
  br i1 %2, label %5, label %3, !dbg !16527

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.172(%struct._dnode* noundef nonnull %0) #27, !dbg !16528
  br label %5, !dbg !16527

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16527
  ret %struct._dnode* %6, !dbg !16529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.172(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16530 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16532, metadata !DIExpression()), !dbg !16534
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16533, metadata !DIExpression()), !dbg !16534
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16535
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16536
  br i1 %3, label %7, label %4, !dbg !16537

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16538
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16538
  br label %7, !dbg !16537

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16537
  ret %struct._dnode* %8, !dbg !16539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.173() unnamed_addr #5 !dbg !16540 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16544, metadata !DIExpression()), !dbg !16545
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.174() #27, !dbg !16546
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16546
  ret %struct._dnode* %3, !dbg !16547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.174() unnamed_addr #5 !dbg !16548 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16552, metadata !DIExpression()), !dbg !16553
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16554
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16555
  ret i1 %2, !dbg !16556
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16557 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16561, metadata !DIExpression()), !dbg !16566
  call void @llvm.dbg.value(metadata i32 -22, metadata !16562, metadata !DIExpression()), !dbg !16566
  call void @llvm.dbg.value(metadata i32 0, metadata !16563, metadata !DIExpression()), !dbg !16567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16347, metadata !DIExpression()) #25, !dbg !16568
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16570, !srcloc !16362
  call void @llvm.dbg.value(metadata i32 undef, metadata !16359, metadata !DIExpression()) #25, !dbg !16572
  call void @llvm.dbg.value(metadata i32 undef, metadata !16360, metadata !DIExpression()) #25, !dbg !16572
  call void @llvm.dbg.value(metadata i32 undef, metadata !16353, metadata !DIExpression()) #25, !dbg !16568
  call void @llvm.dbg.value(metadata i32 undef, metadata !16565, metadata !DIExpression()), !dbg !16567
  call void @llvm.dbg.value(metadata i32 -22, metadata !16562, metadata !DIExpression()), !dbg !16566
  call void @llvm.dbg.value(metadata i32 undef, metadata !16563, metadata !DIExpression()), !dbg !16567
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16562, metadata !DIExpression()), !dbg !16566
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.177(%struct._dnode* noundef %3) #27, !dbg !16573
  br i1 %4, label %5, label %6, !dbg !16577

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !16578
  call void @llvm.dbg.value(metadata i32 0, metadata !16562, metadata !DIExpression()), !dbg !16566
  br label %6, !dbg !16580

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16566
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16570
  call void @llvm.dbg.value(metadata i32 %8, metadata !16359, metadata !DIExpression()) #25, !dbg !16572
  call void @llvm.dbg.value(metadata i32 %8, metadata !16353, metadata !DIExpression()) #25, !dbg !16568
  call void @llvm.dbg.value(metadata i32 %8, metadata !16565, metadata !DIExpression()), !dbg !16567
  call void @llvm.dbg.value(metadata i32 %7, metadata !16562, metadata !DIExpression()), !dbg !16566
  call void @llvm.dbg.value(metadata i32 undef, metadata !16415, metadata !DIExpression()) #25, !dbg !16581
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16420, metadata !DIExpression()) #25, !dbg !16581
  call void @llvm.dbg.value(metadata i32 undef, metadata !16423, metadata !DIExpression()) #25, !dbg !16583
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16585, !srcloc !16429
  call void @llvm.dbg.value(metadata i32 undef, metadata !16563, metadata !DIExpression()), !dbg !16567
  ret i32 %7, !dbg !16586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.177(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16587 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16593, metadata !DIExpression()), !dbg !16594
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16595
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16595
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16596
  ret i1 %4, !dbg !16597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !16598 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16600, metadata !DIExpression()), !dbg !16601
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !16602
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16604
  br i1 %3, label %10, label %4, !dbg !16605

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16606
  %6 = load i64, i64* %5, align 8, !dbg !16606
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16608
  %8 = load i64, i64* %7, align 8, !dbg !16609
  %9 = add nsw i64 %8, %6, !dbg !16609
  store i64 %9, i64* %7, align 8, !dbg !16609
  br label %10, !dbg !16610

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16611
  tail call fastcc void @sys_dlist_remove.178(%struct._dnode* noundef %11) #27, !dbg !16612
  ret void, !dbg !16613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.178(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !16614 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16618, metadata !DIExpression()), !dbg !16621
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16622
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16622
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16619, metadata !DIExpression()), !dbg !16621
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16623
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16623
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16620, metadata !DIExpression()), !dbg !16621
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16624
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16625
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16626
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16627
  tail call fastcc void @sys_dnode_init.179(%struct._dnode* noundef %0) #27, !dbg !16628
  ret void, !dbg !16629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.179(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !16630 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16632, metadata !DIExpression()), !dbg !16633
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16634
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16635
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16636
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16637
  ret void, !dbg !16638
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16639 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16645, metadata !DIExpression()), !dbg !16650
  call void @llvm.dbg.value(metadata i64 0, metadata !16646, metadata !DIExpression()), !dbg !16650
  call void @llvm.dbg.value(metadata i32 0, metadata !16647, metadata !DIExpression()), !dbg !16651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16347, metadata !DIExpression()) #25, !dbg !16652
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16654, !srcloc !16362
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16654
  call void @llvm.dbg.value(metadata i32 %3, metadata !16359, metadata !DIExpression()) #25, !dbg !16656
  call void @llvm.dbg.value(metadata i32 undef, metadata !16360, metadata !DIExpression()) #25, !dbg !16656
  call void @llvm.dbg.value(metadata i32 %3, metadata !16353, metadata !DIExpression()) #25, !dbg !16652
  call void @llvm.dbg.value(metadata i32 %3, metadata !16649, metadata !DIExpression()), !dbg !16651
  call void @llvm.dbg.value(metadata i64 0, metadata !16646, metadata !DIExpression()), !dbg !16650
  call void @llvm.dbg.value(metadata i32 undef, metadata !16647, metadata !DIExpression()), !dbg !16651
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !16657
  call void @llvm.dbg.value(metadata i64 %4, metadata !16646, metadata !DIExpression()), !dbg !16650
  call void @llvm.dbg.value(metadata i32 %3, metadata !16415, metadata !DIExpression()) #25, !dbg !16660
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16420, metadata !DIExpression()) #25, !dbg !16660
  call void @llvm.dbg.value(metadata i32 %3, metadata !16423, metadata !DIExpression()) #25, !dbg !16662
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16664, !srcloc !16429
  call void @llvm.dbg.value(metadata i32 undef, metadata !16647, metadata !DIExpression()), !dbg !16651
  ret i64 %4, !dbg !16665
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16666 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16668, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i64 0, metadata !16669, metadata !DIExpression()), !dbg !16672
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.180(%struct._timeout* noundef %0) #27, !dbg !16673
  br i1 %2, label %21, label %3, !dbg !16675

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !16676
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16670, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata i64 0, metadata !16669, metadata !DIExpression()), !dbg !16672
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16678
  br i1 %5, label %16, label %6, !dbg !16680

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16670, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata i64 %8, metadata !16669, metadata !DIExpression()), !dbg !16672
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16681
  %10 = load i64, i64* %9, align 8, !dbg !16681
  %11 = add nsw i64 %10, %8, !dbg !16683
  call void @llvm.dbg.value(metadata i64 %11, metadata !16669, metadata !DIExpression()), !dbg !16672
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16684
  br i1 %12, label %16, label %13, !dbg !16686

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !16687
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16670, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata i64 %11, metadata !16669, metadata !DIExpression()), !dbg !16672
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16678
  br i1 %15, label %16, label %6, !dbg !16680, !llvm.loop !16688

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16672
  call void @llvm.dbg.value(metadata i64 %17, metadata !16669, metadata !DIExpression()), !dbg !16672
  %18 = tail call fastcc i32 @elapsed.168() #27, !dbg !16690
  %19 = sext i32 %18 to i64, !dbg !16690
  %20 = sub nsw i64 %17, %19, !dbg !16691
  br label %21, !dbg !16692

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16672
  ret i64 %22, !dbg !16693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.180(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16694 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16698, metadata !DIExpression()), !dbg !16699
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16700
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.177(%struct._dnode* noundef %2) #27, !dbg !16701
  %4 = xor i1 %3, true, !dbg !16702
  ret i1 %4, !dbg !16703
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16704 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16706, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.value(metadata i64 0, metadata !16707, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.value(metadata i32 0, metadata !16708, metadata !DIExpression()), !dbg !16712
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16347, metadata !DIExpression()) #25, !dbg !16713
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16715, !srcloc !16362
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16715
  call void @llvm.dbg.value(metadata i32 %3, metadata !16359, metadata !DIExpression()) #25, !dbg !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16360, metadata !DIExpression()) #25, !dbg !16717
  call void @llvm.dbg.value(metadata i32 %3, metadata !16353, metadata !DIExpression()) #25, !dbg !16713
  call void @llvm.dbg.value(metadata i32 %3, metadata !16710, metadata !DIExpression()), !dbg !16712
  call void @llvm.dbg.value(metadata i64 0, metadata !16707, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()), !dbg !16712
  %4 = load i64, i64* @curr_tick, align 8, !dbg !16718
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !16721
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !16707, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16711
  call void @llvm.dbg.value(metadata i32 %3, metadata !16415, metadata !DIExpression()) #25, !dbg !16722
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16420, metadata !DIExpression()) #25, !dbg !16722
  call void @llvm.dbg.value(metadata i32 %3, metadata !16423, metadata !DIExpression()) #25, !dbg !16724
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16726, !srcloc !16429
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()), !dbg !16712
  %6 = add i64 %5, %4, !dbg !16727
  ret i64 %6, !dbg !16728
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16729 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16731, metadata !DIExpression()), !dbg !16735
  call void @llvm.dbg.value(metadata i32 0, metadata !16732, metadata !DIExpression()), !dbg !16736
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16347, metadata !DIExpression()) #25, !dbg !16737
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16739, !srcloc !16362
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16739
  call void @llvm.dbg.value(metadata i32 %2, metadata !16359, metadata !DIExpression()) #25, !dbg !16741
  call void @llvm.dbg.value(metadata i32 undef, metadata !16360, metadata !DIExpression()) #25, !dbg !16741
  call void @llvm.dbg.value(metadata i32 %2, metadata !16353, metadata !DIExpression()) #25, !dbg !16737
  call void @llvm.dbg.value(metadata i32 %2, metadata !16734, metadata !DIExpression()), !dbg !16736
  call void @llvm.dbg.value(metadata i32 -1, metadata !16731, metadata !DIExpression()), !dbg !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()), !dbg !16736
  %3 = tail call fastcc i32 @next_timeout() #27, !dbg !16742
  call void @llvm.dbg.value(metadata i32 %3, metadata !16731, metadata !DIExpression()), !dbg !16735
  call void @llvm.dbg.value(metadata i32 %2, metadata !16415, metadata !DIExpression()) #25, !dbg !16745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16420, metadata !DIExpression()) #25, !dbg !16745
  call void @llvm.dbg.value(metadata i32 %2, metadata !16423, metadata !DIExpression()) #25, !dbg !16747
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16749, !srcloc !16429
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()), !dbg !16736
  ret i32 %3, !dbg !16750
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16753, metadata !DIExpression()), !dbg !16763
  call void @llvm.dbg.value(metadata i1 %1, metadata !16754, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16763
  call void @llvm.dbg.value(metadata i32 0, metadata !16755, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16347, metadata !DIExpression()) #25, !dbg !16765
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16767, !srcloc !16362
  call void @llvm.dbg.value(metadata i32 undef, metadata !16359, metadata !DIExpression()) #25, !dbg !16769
  call void @llvm.dbg.value(metadata i32 undef, metadata !16360, metadata !DIExpression()) #25, !dbg !16769
  call void @llvm.dbg.value(metadata i32 undef, metadata !16353, metadata !DIExpression()) #25, !dbg !16765
  call void @llvm.dbg.value(metadata i32 undef, metadata !16757, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()), !dbg !16764
  %4 = tail call fastcc i32 @next_timeout() #27, !dbg !16770
  call void @llvm.dbg.value(metadata i32 %4, metadata !16758, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata i1 undef, metadata !16761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16771
  %5 = icmp slt i32 %4, 2, !dbg !16772
  call void @llvm.dbg.value(metadata i1 %5, metadata !16762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16771
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16773
  call void @llvm.dbg.value(metadata i1 %6, metadata !16761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16771
  br i1 %7, label %11, label %8, !dbg !16773

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16775
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16775
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #26, !dbg !16777
  br label %11, !dbg !16778

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16767
  call void @llvm.dbg.value(metadata i32 %12, metadata !16359, metadata !DIExpression()) #25, !dbg !16769
  call void @llvm.dbg.value(metadata i32 %12, metadata !16353, metadata !DIExpression()) #25, !dbg !16765
  call void @llvm.dbg.value(metadata i32 %12, metadata !16757, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !16415, metadata !DIExpression()) #25, !dbg !16779
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16420, metadata !DIExpression()) #25, !dbg !16779
  call void @llvm.dbg.value(metadata i32 undef, metadata !16423, metadata !DIExpression()) #25, !dbg !16781
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16783, !srcloc !16429
  call void @llvm.dbg.value(metadata i32 1, metadata !16755, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()), !dbg !16764
  ret void, !dbg !16784
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16789, metadata !DIExpression()), !dbg !16794
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !16795
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16347, metadata !DIExpression()) #25, !dbg !16796
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16798, !srcloc !16362
  call void @llvm.dbg.value(metadata i32 undef, metadata !16359, metadata !DIExpression()) #25, !dbg !16800
  call void @llvm.dbg.value(metadata i32 undef, metadata !16360, metadata !DIExpression()) #25, !dbg !16800
  call void @llvm.dbg.value(metadata i32 undef, metadata !16353, metadata !DIExpression()) #25, !dbg !16796
  call void @llvm.dbg.value(metadata i32 undef, metadata !16790, metadata !DIExpression()), !dbg !16794
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16794
  call void @llvm.dbg.value(metadata i32 undef, metadata !16790, metadata !DIExpression()), !dbg !16794
  %3 = tail call fastcc %struct._timeout* @first() #27, !dbg !16801
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16802
  br i1 %4, label %28, label %5, !dbg !16803

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16804
  %10 = load i64, i64* %9, align 8, !dbg !16804
  %11 = sext i32 %8 to i64, !dbg !16805
  %12 = icmp sgt i64 %10, %11, !dbg !16806
  br i1 %12, label %26, label %13, !dbg !16807

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16794
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16791, metadata !DIExpression()), !dbg !16808
  %15 = trunc i64 %10 to i32, !dbg !16809
  call void @llvm.dbg.value(metadata i32 %15, metadata !16793, metadata !DIExpression()), !dbg !16808
  %16 = sext i32 %15 to i64, !dbg !16810
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16811
  %18 = add i64 %17, %16, !dbg !16811
  store i64 %18, i64* @curr_tick, align 8, !dbg !16811
  store i64 0, i64* %9, align 8, !dbg !16812
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #27, !dbg !16813
  call void @llvm.dbg.value(metadata i32 %14, metadata !16415, metadata !DIExpression()) #25, !dbg !16814
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16420, metadata !DIExpression()) #25, !dbg !16814
  call void @llvm.dbg.value(metadata i32 %14, metadata !16423, metadata !DIExpression()) #25, !dbg !16816
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16818, !srcloc !16429
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16819
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16819
  tail call void %20(%struct._timeout* noundef nonnull %6) #26, !dbg !16820
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16347, metadata !DIExpression()) #25, !dbg !16821
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16823, !srcloc !16362
  call void @llvm.dbg.value(metadata i32 undef, metadata !16359, metadata !DIExpression()) #25, !dbg !16825
  call void @llvm.dbg.value(metadata i32 undef, metadata !16360, metadata !DIExpression()) #25, !dbg !16825
  call void @llvm.dbg.value(metadata i32 undef, metadata !16353, metadata !DIExpression()) #25, !dbg !16821
  call void @llvm.dbg.value(metadata i32 undef, metadata !16790, metadata !DIExpression()), !dbg !16794
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16826
  %23 = sub nsw i32 %22, %15, !dbg !16826
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16794
  call void @llvm.dbg.value(metadata i32 undef, metadata !16790, metadata !DIExpression()), !dbg !16794
  %24 = tail call fastcc %struct._timeout* @first() #27, !dbg !16801
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16802
  br i1 %25, label %28, label %5, !dbg !16803, !llvm.loop !16827

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16829
  store i64 %27, i64* %9, align 8, !dbg !16829
  br label %32, !dbg !16832

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16794
  %31 = sext i32 %30 to i64, !dbg !16833
  br label %32, !dbg !16833

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16833
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16794
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16834
  %37 = add i64 %36, %33, !dbg !16834
  store i64 %37, i64* @curr_tick, align 8, !dbg !16834
  store i32 0, i32* @announce_remaining, align 4, !dbg !16835
  %38 = tail call fastcc i32 @next_timeout() #27, !dbg !16836
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #26, !dbg !16837
  call void @llvm.dbg.value(metadata i32 %35, metadata !16415, metadata !DIExpression()) #25, !dbg !16838
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16420, metadata !DIExpression()) #25, !dbg !16838
  call void @llvm.dbg.value(metadata i32 %35, metadata !16423, metadata !DIExpression()) #25, !dbg !16840
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !16842, !srcloc !16429
  ret void, !dbg !16843
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16844 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16848, metadata !DIExpression()), !dbg !16852
  call void @llvm.dbg.value(metadata i32 0, metadata !16849, metadata !DIExpression()), !dbg !16853
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16347, metadata !DIExpression()) #25, !dbg !16854
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16856, !srcloc !16362
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16856
  call void @llvm.dbg.value(metadata i32 %2, metadata !16359, metadata !DIExpression()) #25, !dbg !16858
  call void @llvm.dbg.value(metadata i32 undef, metadata !16360, metadata !DIExpression()) #25, !dbg !16858
  call void @llvm.dbg.value(metadata i32 %2, metadata !16353, metadata !DIExpression()) #25, !dbg !16854
  call void @llvm.dbg.value(metadata i32 %2, metadata !16851, metadata !DIExpression()), !dbg !16853
  call void @llvm.dbg.value(metadata i64 0, metadata !16848, metadata !DIExpression()), !dbg !16852
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()), !dbg !16853
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16859
  %4 = tail call fastcc i32 @elapsed.168() #27, !dbg !16862
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16848, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16852
  call void @llvm.dbg.value(metadata i32 %2, metadata !16415, metadata !DIExpression()) #25, !dbg !16863
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16420, metadata !DIExpression()) #25, !dbg !16863
  call void @llvm.dbg.value(metadata i32 %2, metadata !16423, metadata !DIExpression()) #25, !dbg !16865
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16867, !srcloc !16429
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()), !dbg !16853
  %5 = sext i32 %4 to i64, !dbg !16862
  %6 = add i64 %3, %5, !dbg !16868
  ret i64 %6, !dbg !16869
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16870 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !16871
  %2 = trunc i64 %1 to i32, !dbg !16872
  ret i32 %2, !dbg !16873
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16874 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !16875
  ret i64 %1, !dbg !16876
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16879, metadata !DIExpression()), !dbg !16886
  %2 = icmp eq i32 %0, 0, !dbg !16887
  br i1 %2, label %10, label %3, !dbg !16889

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !16890
  call void @llvm.dbg.value(metadata i32 %4, metadata !16880, metadata !DIExpression()), !dbg !16886
  %5 = mul i32 %0, 168, !dbg !16891
  call void @llvm.dbg.value(metadata i32 %5, metadata !16881, metadata !DIExpression()), !dbg !16886
  br label %6, !dbg !16892

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !16893
  call void @llvm.dbg.value(metadata i32 %7, metadata !16882, metadata !DIExpression()), !dbg !16894
  %8 = sub i32 %7, %4, !dbg !16895
  %9 = icmp ult i32 %8, %5, !dbg !16897
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16899 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !16900
  ret i32 %1, !dbg !16901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16902 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !16904
  ret i32 %1, !dbg !16905
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16906 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16910, metadata !DIExpression()), !dbg !16912
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16913

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !16914
  br label %14, !dbg !16918

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16911, metadata !DIExpression()), !dbg !16912
  %6 = icmp slt i64 %2, -1, !dbg !16919
  br i1 %6, label %7, label %9, !dbg !16922

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16923
  br label %14, !dbg !16924

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !16926
  %11 = icmp ugt i64 %2, 1, !dbg !16927
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16927
  %13 = add nsw i64 %10, %12, !dbg !16928
  br label %14, !dbg !16929

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16930
  ret i64 %15, !dbg !16931
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !16932 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16935, metadata !DIExpression()), !dbg !16968
  %2 = icmp eq i8* %0, null, !dbg !16969
  br i1 %2, label %7, label %3, !dbg !16971

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !16936, metadata !DIExpression()), !dbg !16968
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !16972
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !16972
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !16936, metadata !DIExpression()), !dbg !16968
  call void @llvm.dbg.value(metadata i8* %4, metadata !16935, metadata !DIExpression()), !dbg !16968
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !16974
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #26, !dbg !16975
  br label %7, !dbg !16976

7:                                                ; preds = %3, %1
  ret void, !dbg !16977
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16982, metadata !DIExpression()), !dbg !16986
  call void @llvm.dbg.value(metadata i32 %1, metadata !16983, metadata !DIExpression()), !dbg !16986
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !16987
  br i1 %3, label %11, label %4, !dbg !16989

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16990
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !16992
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !16992
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !16985, metadata !DIExpression()), !dbg !16986
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !16993
  br i1 %8, label %11, label %9, !dbg !16995

9:                                                ; preds = %4
  %10 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %7, i32 noundef %0, i32 noundef %1) #27, !dbg !16996
  call void @llvm.dbg.value(metadata i8* %10, metadata !16984, metadata !DIExpression()), !dbg !16986
  br label %11, !dbg !16998

11:                                               ; preds = %2, %4, %9
  %12 = phi i8* [ %10, %9 ], [ null, %4 ], [ null, %2 ], !dbg !16999
  call void @llvm.dbg.value(metadata i8* %12, metadata !16984, metadata !DIExpression()), !dbg !16986
  ret i8* %12, !dbg !17000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !17001 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17005, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.value(metadata i32 %1, metadata !17006, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.value(metadata i32 %2, metadata !17007, metadata !DIExpression()), !dbg !17011
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !17007, metadata !DIExpression(DW_OP_deref)), !dbg !17011
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !17012
  br i1 %5, label %14, label %6, !dbg !17014

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !17015
  call void @llvm.dbg.value(metadata i32 %7, metadata !17010, metadata !DIExpression()), !dbg !17011
  %8 = load i32, i32* %4, align 4, !dbg !17016
  call void @llvm.dbg.value(metadata i32 %8, metadata !17007, metadata !DIExpression()), !dbg !17011
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #26, !dbg !17017
  call void @llvm.dbg.value(metadata i8* %9, metadata !17008, metadata !DIExpression()), !dbg !17011
  %10 = icmp eq i8* %9, null, !dbg !17018
  br i1 %10, label %14, label %11, !dbg !17020

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !17021
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !17009, metadata !DIExpression()), !dbg !17011
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !17022
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !17023
  call void @llvm.dbg.value(metadata i8* %13, metadata !17009, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.value(metadata i8* %13, metadata !17008, metadata !DIExpression()), !dbg !17011
  br label %14, !dbg !17024

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !17011
  ret i8* %15, !dbg !17025
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #24 !dbg !17026 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17031, metadata !DIExpression()), !dbg !17034
  call void @llvm.dbg.value(metadata i32 4, metadata !17032, metadata !DIExpression()), !dbg !17034
  call void @llvm.dbg.value(metadata i32* %1, metadata !17033, metadata !DIExpression()), !dbg !17034
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !17035
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !17035
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !17035
  store i32 %5, i32* %1, align 4, !dbg !17035
  ret i1 %4, !dbg !17036
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17037 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.193, i32 0, i32 0)) #26, !dbg !17039
  ret void, !dbg !17040
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17041 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17043, metadata !DIExpression()), !dbg !17063
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17044, metadata !DIExpression()), !dbg !17064
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17065

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17066

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17044, metadata !DIExpression()), !dbg !17064
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17067
  %6 = load i8*, i8** %5, align 4, !dbg !17067
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17071
  %8 = load i32, i32* %7, align 4, !dbg !17071
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #27, !dbg !17072
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17073
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17044, metadata !DIExpression()), !dbg !17064
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17074
  br i1 %10, label %3, label %2, !dbg !17065, !llvm.loop !17076
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17078 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17082, metadata !DIExpression()), !dbg !17085
  call void @llvm.dbg.value(metadata i8* %1, metadata !17083, metadata !DIExpression()), !dbg !17085
  call void @llvm.dbg.value(metadata i32 %2, metadata !17084, metadata !DIExpression()), !dbg !17085
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17086
  tail call fastcc void @z_waitq_init.195(%union.anon* noundef nonnull %4) #27, !dbg !17087
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17088
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #26, !dbg !17089
  ret void, !dbg !17090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.195(%union.anon* noundef %0) unnamed_addr #4 !dbg !17091 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17096, metadata !DIExpression()), !dbg !17097
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17098
  tail call fastcc void @sys_dlist_init.196(%struct._dnode* noundef %2) #27, !dbg !17099
  ret void, !dbg !17100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.196(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17101 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17106, metadata !DIExpression()), !dbg !17107
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17108
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17109
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17110
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17111
  ret void, !dbg !17112
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17113 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17124, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17121, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i32 %1, metadata !17122, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i32 %2, metadata !17123, metadata !DIExpression()), !dbg !17134
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #26, !dbg !17135
  call void @llvm.dbg.value(metadata i64 %6, metadata !17126, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i8* null, metadata !17127, metadata !DIExpression()), !dbg !17134
  %7 = icmp eq i64 %5, -1, !dbg !17136
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17136
  call void @llvm.dbg.value(metadata i64 %8, metadata !17126, metadata !DIExpression()), !dbg !17134
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17138, metadata !DIExpression()) #25, !dbg !17145
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17147, !srcloc !17153
  call void @llvm.dbg.value(metadata i32 undef, metadata !17150, metadata !DIExpression()) #25, !dbg !17154
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17154
  call void @llvm.dbg.value(metadata i32 undef, metadata !17144, metadata !DIExpression()) #25, !dbg !17145
  call void @llvm.dbg.value(metadata i32 undef, metadata !17128, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i8 0, metadata !17133, metadata !DIExpression()), !dbg !17134
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17127, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i8 0, metadata !17133, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i32 undef, metadata !17128, metadata !DIExpression()), !dbg !17134
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17155
  call void @llvm.dbg.value(metadata i8* %12, metadata !17127, metadata !DIExpression()), !dbg !17134
  %13 = tail call i64 @sys_clock_tick_get() #26, !dbg !17157
  call void @llvm.dbg.value(metadata i64 %13, metadata !17125, metadata !DIExpression()), !dbg !17134
  %14 = icmp eq i8* %12, null, !dbg !17158
  br i1 %14, label %15, label %31, !dbg !17160

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17128, metadata !DIExpression()), !dbg !17134
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17160

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17133, metadata !DIExpression()), !dbg !17134
  %20 = sub nsw i64 %8, %18, !dbg !17161
  %21 = icmp slt i64 %20, 1, !dbg !17162
  br i1 %21, label %31, label %22, !dbg !17163

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17134
  call void @llvm.dbg.value(metadata i8 undef, metadata !17133, metadata !DIExpression()), !dbg !17134
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17164
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17164
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #26, !dbg !17164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17138, metadata !DIExpression()) #25, !dbg !17165
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17167, !srcloc !17153
  call void @llvm.dbg.value(metadata i32 undef, metadata !17150, metadata !DIExpression()) #25, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !17144, metadata !DIExpression()) #25, !dbg !17165
  call void @llvm.dbg.value(metadata i32 undef, metadata !17128, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i8* null, metadata !17127, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i32 undef, metadata !17128, metadata !DIExpression()), !dbg !17134
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17155
  call void @llvm.dbg.value(metadata i8* %28, metadata !17127, metadata !DIExpression()), !dbg !17134
  %29 = tail call i64 @sys_clock_tick_get() #26, !dbg !17157
  call void @llvm.dbg.value(metadata i64 %29, metadata !17125, metadata !DIExpression()), !dbg !17134
  %30 = icmp eq i8* %28, null, !dbg !17158
  br i1 %30, label %17, label %31, !dbg !17160, !llvm.loop !17170

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17155
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17134
  call void @llvm.dbg.value(metadata i8* %33, metadata !17127, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i32 %34, metadata !17173, metadata !DIExpression()) #25, !dbg !17179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17178, metadata !DIExpression()) #25, !dbg !17179
  call void @llvm.dbg.value(metadata i32 %34, metadata !17181, metadata !DIExpression()) #25, !dbg !17184
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !17186, !srcloc !17187
  ret i8* %33, !dbg !17188
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17189 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17195, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17193, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.value(metadata i32 %1, metadata !17194, metadata !DIExpression()), !dbg !17197
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !17198
  call void @llvm.dbg.value(metadata i8* %4, metadata !17196, metadata !DIExpression()), !dbg !17197
  ret i8* %4, !dbg !17199
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17200 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17204, metadata !DIExpression()), !dbg !17207
  call void @llvm.dbg.value(metadata i8* %1, metadata !17205, metadata !DIExpression()), !dbg !17207
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17138, metadata !DIExpression()) #25, !dbg !17208
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17210, !srcloc !17153
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17210
  call void @llvm.dbg.value(metadata i32 %4, metadata !17150, metadata !DIExpression()) #25, !dbg !17212
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17212
  call void @llvm.dbg.value(metadata i32 %4, metadata !17144, metadata !DIExpression()) #25, !dbg !17208
  call void @llvm.dbg.value(metadata i32 %4, metadata !17206, metadata !DIExpression()), !dbg !17207
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17213
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #26, !dbg !17214
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17215
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #26, !dbg !17217
  %8 = icmp eq i32 %7, 0, !dbg !17218
  br i1 %8, label %12, label %9, !dbg !17219

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17220
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17221
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #26, !dbg !17221
  br label %13, !dbg !17223

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17173, metadata !DIExpression()) #25, !dbg !17224
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17178, metadata !DIExpression()) #25, !dbg !17224
  call void @llvm.dbg.value(metadata i32 %4, metadata !17181, metadata !DIExpression()) #25, !dbg !17227
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17229, !srcloc !17187
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17230
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!775, !2, !2527, !2529, !27, !2531, !2533, !2566, !2603, !111, !168, !197, !2605, !2616, !2662, !2664, !2692, !2720, !2763, !2834, !2879, !367, !510, !2907, !546, !556, !581, !809, !2912, !944, !1124, !1439, !1703, !2949, !1816, !1906, !2951, !3035, !3098, !1955, !3101, !1961, !2322, !3119, !3121, !2342, !3162, !2457, !3165, !3167, !2496}
!llvm.ident = !{!3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169, !3169}
!llvm.module.flags = !{!3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 369, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 362, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 364, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 365, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 366, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 367, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 368, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "free_queue", scope: !197, file: !294, line: 17, type: !295, isLocal: true, isDefinition: true, align: 32)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !291, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!199 = !{!102, !200, !204, !103, !206}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !201, line: 46, baseType: !202)
!201 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !203)
!203 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !205, line: 214, baseType: !32)
!205 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !210)
!209 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !{!211, !231, !235, !239, !252, !257, !263, !269, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !208, file: !209, line: 365, baseType: !212, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 32)
!213 = !DISubroutineType(types: !214)
!214 = !{!103, !215, !230}
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !218)
!218 = !{!219, !220, !221, !222, !228, !229}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !217, file: !141, line: 380, baseType: !144, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !217, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !217, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !217, file: !141, line: 386, baseType: !223, size: 32, offset: 96)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !225)
!225 = !{!226, !227}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !224, file: !141, line: 359, baseType: !154, size: 8)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !224, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !217, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !217, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !208, file: !209, line: 366, baseType: !232, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 32)
!233 = !DISubroutineType(types: !234)
!234 = !{null, !215, !155}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !208, file: !209, line: 374, baseType: !236, size: 32, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!237 = !DISubroutineType(types: !238)
!238 = !{!103, !215}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !208, file: !209, line: 377, baseType: !240, size: 32, offset: 96)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 32)
!241 = !DISubroutineType(types: !242)
!242 = !{!103, !215, !243}
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !245)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !246)
!246 = !{!247, !248, !249, !250, !251}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !245, file: !209, line: 123, baseType: !121, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !245, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !245, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !245, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !245, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !208, file: !209, line: 379, baseType: !253, size: 32, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = !DISubroutineType(types: !255)
!255 = !{!103, !215, !256}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !208, file: !209, line: 384, baseType: !258, size: 32, offset: 160)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DISubroutineType(types: !260)
!260 = !{!103, !215, !261, !103}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !208, file: !209, line: 393, baseType: !264, size: 32, offset: 192)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!103, !215, !267, !268}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !208, file: !209, line: 402, baseType: !270, size: 32, offset: 224)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 32)
!271 = !DISubroutineType(types: !272)
!272 = !{null, !215}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !208, file: !209, line: 405, baseType: !270, size: 32, offset: 256)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !208, file: !209, line: 408, baseType: !236, size: 32, offset: 288)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !208, file: !209, line: 411, baseType: !270, size: 32, offset: 320)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !208, file: !209, line: 414, baseType: !270, size: 32, offset: 352)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !208, file: !209, line: 417, baseType: !236, size: 32, offset: 384)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !208, file: !209, line: 420, baseType: !236, size: 32, offset: 416)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !208, file: !209, line: 423, baseType: !270, size: 32, offset: 448)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !208, file: !209, line: 426, baseType: !270, size: 32, offset: 480)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !208, file: !209, line: 429, baseType: !236, size: 32, offset: 512)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !208, file: !209, line: 432, baseType: !236, size: 32, offset: 544)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !208, file: !209, line: 435, baseType: !284, size: 32, offset: 576)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DISubroutineType(types: !286)
!286 = !{null, !215, !287, !102}
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!289 = !DISubroutineType(types: !290)
!290 = !{null, !215, !102}
!291 = !{!195, !292, !339, !360}
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "used_queue", scope: !197, file: !294, line: 18, type: !295, isLocal: true, isDefinition: true, align: 32)
!294 = !DIFile(filename: "zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !296, line: 2208, size: 128, elements: !297)
!296 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!297 = !{!298}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !295, file: !296, line: 2209, baseType: !299, size: 128)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !300)
!300 = !{!301, !314, !318}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !299, file: !296, line: 1710, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !304)
!303 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !305)
!305 = !{!306, !313}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !304, file: !303, line: 42, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !309)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !310)
!310 = !{!311}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !309, file: !303, line: 36, baseType: !312, size: 32)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !303, line: 32, baseType: !121)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !304, file: !303, line: 43, baseType: !307, size: 32, offset: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !299, file: !296, line: 1711, baseType: !315, offset: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !299, file: !296, line: 1712, baseType: !319, size: 64, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !321)
!320 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !322)
!322 = !{!323}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !321, file: !320, line: 232, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !327)
!327 = !{!328, !334}
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !325, line: 38, baseType: !329, size: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !325, line: 38, size: 32, elements: !330)
!330 = !{!331, !333}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !329, file: !325, line: 39, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !329, file: !325, line: 40, baseType: !332, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !325, line: 42, baseType: !335, size: 32, offset: 32)
!335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !325, line: 42, size: 32, elements: !336)
!336 = !{!337, !338}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !335, file: !325, line: 43, baseType: !332, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !335, file: !325, line: 44, baseType: !332, size: 32)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "cmd", scope: !341, file: !294, line: 22, type: !348, isLocal: true, isDefinition: true)
!341 = distinct !DISubprogram(name: "console_getline", scope: !294, file: !294, line: 20, type: !342, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !345)
!342 = !DISubroutineType(types: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!345 = !{!346}
!346 = !DILocalVariable(name: "ret", scope: !347, file: !294, line: 29, type: !102)
!347 = distinct !DILexicalBlock(scope: !341, file: !294, line: 29, column: 8)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !350, line: 21, size: 1088, elements: !351)
!350 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!351 = !{!352, !355, !356}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !349, file: !350, line: 23, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !354)
!354 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !349, file: !350, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !349, file: !350, line: 27, baseType: !357, size: 1024, offset: 40)
!357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 1024, elements: !358)
!358 = !{!359}
!359 = !DISubrange(count: 128)
!360 = !DIGlobalVariableExpression(var: !361, expr: !DIExpression())
!361 = distinct !DIGlobalVariable(name: "line_bufs", scope: !197, file: !294, line: 15, type: !362, isLocal: true, isDefinition: true)
!362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 2176, elements: !363)
!363 = !{!364}
!364 = !DISubrange(count: 2)
!365 = !DIGlobalVariableExpression(var: !366, expr: !DIExpression())
!366 = distinct !DIGlobalVariable(name: "static_regions", scope: !367, file: !374, line: 62, type: !506, isLocal: true, isDefinition: true)
!367 = distinct !DICompileUnit(language: DW_LANG_C99, file: !368, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !369, globals: !370, splitDebugInlining: false, nameTableKind: None)
!368 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!369 = !{!204, !103, !121, !102}
!370 = !{!371, !365}
!371 = !DIGlobalVariableExpression(var: !372, expr: !DIExpression())
!372 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !373, file: !374, line: 198, type: !492, isLocal: true, isDefinition: true)
!373 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !374, file: !374, line: 175, type: !375, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !487)
!374 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !DISubroutineType(types: !376)
!376 = !{null, !377}
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !444, !457, !458, !459, !460, !466, !482}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !378, file: !379, line: 247, baseType: !382, size: 384)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !383)
!383 = !{!384, !409, !416, !417, !418, !431, !432, !433}
!384 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !379, line: 60, baseType: !385, size: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !379, line: 60, size: 64, elements: !386)
!386 = !{!387, !402}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !385, file: !379, line: 61, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !390)
!390 = !{!391, !397}
!391 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !325, line: 38, baseType: !392, size: 32)
!392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !325, line: 38, size: 32, elements: !393)
!393 = !{!394, !396}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !392, file: !325, line: 39, baseType: !395, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !392, file: !325, line: 40, baseType: !395, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !325, line: 42, baseType: !398, size: 32, offset: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !325, line: 42, size: 32, elements: !399)
!399 = !{!400, !401}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !398, file: !325, line: 43, baseType: !395, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !398, file: !325, line: 44, baseType: !395, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !385, file: !379, line: 62, baseType: !403, size: 64)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !405)
!404 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!405 = !{!406}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !403, file: !404, line: 50, baseType: !407, size: 64)
!407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 64, elements: !363)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !382, file: !379, line: 68, baseType: !410, size: 32, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !412)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !413)
!413 = !{!414}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !412, file: !320, line: 232, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !389)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !382, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !382, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!418 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !379, line: 90, baseType: !419, size: 16, offset: 112)
!419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !379, line: 90, size: 16, elements: !420)
!420 = !{!421, !428}
!421 = !DIDerivedType(tag: DW_TAG_member, scope: !419, file: !379, line: 91, baseType: !422, size: 16)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !419, file: !379, line: 91, size: 16, elements: !423)
!423 = !{!424, !427}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !422, file: !379, line: 96, baseType: !425, size: 8)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !426)
!426 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !422, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !419, file: !379, line: 100, baseType: !429, size: 16)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !430)
!430 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !382, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !382, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !382, file: !379, line: 131, baseType: !434, size: 192, offset: 192)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !435)
!435 = !{!436, !437, !443}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !434, file: !320, line: 245, baseType: !388, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !434, file: !320, line: 246, baseType: !438, size: 32, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !439)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 32)
!440 = !DISubroutineType(types: !441)
!441 = !{null, !442}
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !434, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !378, file: !379, line: 250, baseType: !445, size: 288, offset: 384)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !447)
!446 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !{!448, !449, !450, !451, !452, !453, !454, !455, !456}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !445, file: !446, line: 26, baseType: !121, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !445, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !445, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !445, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !445, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !445, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !445, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !445, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !445, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !378, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !378, file: !379, line: 256, baseType: !411, size: 64, offset: 704)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !378, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !378, file: !379, line: 300, baseType: !461, size: 96, offset: 800)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !462)
!462 = !{!463, !464, !465}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !461, file: !379, line: 153, baseType: !22, size: 32)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !461, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !461, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !378, file: !379, line: 325, baseType: !467, size: 32, offset: 896)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !469)
!469 = !{!470, !479, !480}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !468, file: !296, line: 5074, baseType: !471, size: 96)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{!474, !477, !478}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !471, file: !472, line: 57, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!476 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !472, line: 57, flags: DIFlagFwdDecl)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !471, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !471, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !468, file: !296, line: 5075, baseType: !411, size: 64, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !468, file: !296, line: 5076, baseType: !481, offset: 160)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !378, file: !379, line: 343, baseType: !483, size: 64, offset: 928)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !484)
!484 = !{!485, !486}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !483, file: !446, line: 63, baseType: !121, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !483, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!487 = !{!488, !489, !490, !491}
!488 = !DILocalVariable(name: "thread", arg: 1, scope: !373, file: !374, line: 175, type: !377)
!489 = !DILocalVariable(name: "region_num", scope: !373, file: !374, line: 200, type: !154)
!490 = !DILocalVariable(name: "guard_start", scope: !373, file: !374, line: 265, type: !22)
!491 = !DILocalVariable(name: "guard_size", scope: !373, file: !374, line: 266, type: !204)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !504)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !494, line: 52, size: 96, elements: !495)
!494 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!495 = !{!496, !497, !498}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !493, file: !494, line: 53, baseType: !22, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !493, file: !494, line: 54, baseType: !204, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !493, file: !494, line: 55, baseType: !499, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !500, line: 151, baseType: !501)
!500 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 149, size: 32, elements: !502)
!502 = !{!503}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !501, file: !500, line: 150, baseType: !121, size: 32)
!504 = !{!505}
!505 = !DISubrange(count: 1)
!506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 96, elements: !504)
!507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !493)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !510, file: !543, line: 39, type: !154, isLocal: true, isDefinition: true)
!510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !512, globals: !542, splitDebugInlining: false, nameTableKind: None)
!511 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!512 = !{!513, !102, !103, !530, !154}
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !515, line: 1226, baseType: !516)
!515 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 1213, size: 352, elements: !517)
!517 = !{!518, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !516, file: !515, line: 1215, baseType: !519, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !516, file: !515, line: 1216, baseType: !120, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !516, file: !515, line: 1217, baseType: !120, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !516, file: !515, line: 1218, baseType: !120, size: 32, offset: 96)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !516, file: !515, line: 1219, baseType: !120, size: 32, offset: 128)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !516, file: !515, line: 1220, baseType: !120, size: 32, offset: 160)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !516, file: !515, line: 1221, baseType: !120, size: 32, offset: 192)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !516, file: !515, line: 1222, baseType: !120, size: 32, offset: 224)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !516, file: !515, line: 1223, baseType: !120, size: 32, offset: 256)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !516, file: !515, line: 1224, baseType: !120, size: 32, offset: 288)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !516, file: !515, line: 1225, baseType: !120, size: 32, offset: 320)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 32)
!531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !533, line: 27, size: 96, elements: !534)
!533 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !532, file: !533, line: 29, baseType: !121, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !532, file: !533, line: 31, baseType: !144, size: 32, offset: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !532, file: !533, line: 37, baseType: !538, size: 32, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !500, line: 146, baseType: !539)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !500, line: 141, size: 32, elements: !540)
!540 = !{!541}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !539, file: !500, line: 143, baseType: !121, size: 32)
!542 = !{!508}
!543 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !546, file: !553, line: 21, type: !106, isLocal: true, isDefinition: true)
!546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !548, globals: !552, splitDebugInlining: false, nameTableKind: None)
!547 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!548 = !{!549, !103, !102}
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !551, line: 22, baseType: !103)
!551 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !{!544}
!553 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !556, file: !561, line: 13, type: !578, isLocal: true, isDefinition: true)
!556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !557, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !558, splitDebugInlining: false, nameTableKind: None)
!557 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!558 = !{!559, !554}
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "mpu_config", scope: !556, file: !561, line: 37, type: !562, isLocal: false, isDefinition: true)
!561 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !533, line: 41, size: 64, elements: !564)
!564 = !{!565, !566}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !563, file: !533, line: 43, baseType: !121, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !563, file: !533, line: 45, baseType: !567, size: 32, offset: 32)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !569)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !533, line: 27, size: 96, elements: !570)
!570 = !{!571, !572, !573}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !569, file: !533, line: 29, baseType: !121, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !569, file: !533, line: 31, baseType: !144, size: 32, offset: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !569, file: !533, line: 37, baseType: !574, size: 32, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !500, line: 146, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !500, line: 141, size: 32, elements: !576)
!576 = !{!577}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !575, file: !500, line: 143, baseType: !121, size: 32)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, size: 192, elements: !363)
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !581, file: !686, line: 72, type: !770, isLocal: true, isDefinition: true)
!581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !583, retainedTypes: !672, globals: !683, splitDebugInlining: false, nameTableKind: None)
!582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!583 = !{!30, !584}
!584 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !585)
!585 = !{!586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671}
!586 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!587 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!588 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!589 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!590 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!591 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!592 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!593 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!594 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!595 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!596 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!597 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!598 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!599 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!600 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!601 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!602 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!603 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!604 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!605 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!606 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!607 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!608 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!609 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!610 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!611 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!612 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!613 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!614 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!615 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!616 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!617 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!618 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!619 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!620 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!621 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!622 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!623 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!624 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!625 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!626 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!627 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!628 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!629 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!630 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!631 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!632 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!633 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!634 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!635 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!636 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!637 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!638 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!639 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!640 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!641 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!642 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!643 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!644 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!645 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!646 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!647 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!648 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!649 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!650 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!651 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!652 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!653 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!654 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!655 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!656 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!657 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!658 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!659 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!660 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!661 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!662 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!663 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!664 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!665 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!666 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!667 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!668 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!669 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!670 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!671 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!672 = !{!204, !103, !102, !673}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 354, baseType: !675)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 346, size: 192, elements: !676)
!676 = !{!677, !678, !679, !680, !681, !682}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !675, file: !116, line: 348, baseType: !120, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !675, file: !116, line: 349, baseType: !120, size: 32, offset: 32)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !675, file: !116, line: 350, baseType: !120, size: 32, offset: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !675, file: !116, line: 351, baseType: !120, size: 32, offset: 96)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !675, file: !116, line: 352, baseType: !120, size: 32, offset: 128)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !675, file: !116, line: 353, baseType: !120, size: 32, offset: 160)
!683 = !{!684, !690, !706, !717, !734, !579, !736, !750, !752, !754, !756, !758, !760, !762, !764, !766, !768}
!684 = !DIGlobalVariableExpression(var: !685, expr: !DIExpression())
!685 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !581, file: !686, line: 424, type: !687, isLocal: false, isDefinition: true, align: 16)
!686 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !688)
!688 = !{!689}
!689 = !DISubrange(count: 4)
!690 = !DIGlobalVariableExpression(var: !691, expr: !DIExpression())
!691 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !581, file: !686, line: 424, type: !692, isLocal: false, isDefinition: true, align: 32)
!692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !693)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !694)
!694 = !{!695, !696, !697, !698, !704, !705}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !693, file: !141, line: 380, baseType: !144, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !693, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !693, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !693, file: !141, line: 386, baseType: !699, size: 32, offset: 96)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 32)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !701)
!701 = !{!702, !703}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !700, file: !141, line: 359, baseType: !154, size: 8)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !700, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !693, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !693, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!706 = !DIGlobalVariableExpression(var: !707, expr: !DIExpression())
!707 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !581, file: !686, line: 424, type: !708, isLocal: true, isDefinition: true, align: 32)
!708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !709)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !710)
!710 = !{!711, !716}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !709, file: !132, line: 60, baseType: !712, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 32)
!713 = !DISubroutineType(types: !714)
!714 = !{!103, !715}
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !709, file: !132, line: 65, baseType: !715, size: 32, offset: 32)
!717 = !DIGlobalVariableExpression(var: !718, expr: !DIExpression())
!718 = distinct !DIGlobalVariable(name: "exti_data", scope: !581, file: !686, line: 423, type: !719, isLocal: true, isDefinition: true)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !686, line: 107, size: 1472, elements: !720)
!720 = !{!721}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !719, file: !686, line: 109, baseType: !722, size: 1472)
!722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !723, size: 1472, elements: !732)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !686, line: 101, size: 64, elements: !724)
!724 = !{!725, !731}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !723, file: !686, line: 102, baseType: !726, size: 32)
!726 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !727, line: 63, baseType: !728)
!727 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = !DISubroutineType(types: !730)
!730 = !{null, !103, !102}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !723, file: !686, line: 103, baseType: !102, size: 32, offset: 32)
!732 = !{!733}
!733 = !DISubrange(count: 23)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !581, file: !686, line: 424, type: !700, isLocal: true, isDefinition: true, align: 8)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !738, file: !686, line: 493, type: !743, isLocal: true, isDefinition: true, align: 32)
!738 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !686, file: !686, line: 460, type: !739, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !741)
!739 = !DISubroutineType(types: !740)
!740 = !{null, !715}
!741 = !{!742}
!742 = !DILocalVariable(name: "dev", arg: 1, scope: !738, file: !686, line: 460, type: !715)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !744)
!744 = !{!745, !747, !748, !749}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !743, file: !10, line: 55, baseType: !746, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !743, file: !10, line: 57, baseType: !746, size: 32, offset: 32)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !743, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !743, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !738, file: !686, line: 497, type: !743, isLocal: true, isDefinition: true, align: 32)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !738, file: !686, line: 507, type: !743, isLocal: true, isDefinition: true, align: 32)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !738, file: !686, line: 512, type: !743, isLocal: true, isDefinition: true, align: 32)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !738, file: !686, line: 516, type: !743, isLocal: true, isDefinition: true, align: 32)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !738, file: !686, line: 523, type: !743, isLocal: true, isDefinition: true, align: 32)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !738, file: !686, line: 527, type: !743, isLocal: true, isDefinition: true, align: 32)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !738, file: !686, line: 581, type: !743, isLocal: true, isDefinition: true, align: 32)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !738, file: !686, line: 586, type: !743, isLocal: true, isDefinition: true, align: 32)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !738, file: !686, line: 591, type: !743, isLocal: true, isDefinition: true, align: 32)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !738, file: !686, line: 595, type: !743, isLocal: true, isDefinition: true, align: 32)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !771, size: 736, elements: !732)
!771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !772)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 155, baseType: !584)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !775, file: !780, line: 23, type: !804, isLocal: false, isDefinition: true, align: 16)
!775 = distinct !DICompileUnit(language: DW_LANG_C99, file: !776, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !777, splitDebugInlining: false, nameTableKind: None)
!776 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!777 = !{!778, !773, !784, !786, !788, !790, !792, !794, !796, !798, !800, !802}
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !775, file: !780, line: 18, type: !781, isLocal: false, isDefinition: true, align: 16)
!780 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 208, elements: !782)
!782 = !{!783}
!783 = !DISubrange(count: 13)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !775, file: !780, line: 30, type: !687, isLocal: false, isDefinition: true, align: 16)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !775, file: !780, line: 37, type: !687, isLocal: false, isDefinition: true, align: 16)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !775, file: !780, line: 44, type: !687, isLocal: false, isDefinition: true, align: 16)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !775, file: !780, line: 51, type: !687, isLocal: false, isDefinition: true, align: 16)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !775, file: !780, line: 58, type: !687, isLocal: false, isDefinition: true, align: 16)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !775, file: !780, line: 65, type: !687, isLocal: false, isDefinition: true, align: 16)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !775, file: !780, line: 72, type: !687, isLocal: false, isDefinition: true, align: 16)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !775, file: !780, line: 79, type: !687, isLocal: false, isDefinition: true, align: 16)
!800 = !DIGlobalVariableExpression(var: !801, expr: !DIExpression())
!801 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !775, file: !780, line: 86, type: !687, isLocal: false, isDefinition: true, align: 16)
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !775, file: !780, line: 93, type: !687, isLocal: false, isDefinition: true, align: 16)
!804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !805)
!805 = !{!806}
!806 = !DISubrange(count: 3)
!807 = !DIGlobalVariableExpression(var: !808, expr: !DIExpression())
!808 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !809, file: !870, line: 398, type: !903, isLocal: true, isDefinition: true)
!809 = distinct !DICompileUnit(language: DW_LANG_C99, file: !810, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !811, retainedTypes: !824, globals: !867, splitDebugInlining: false, nameTableKind: None)
!810 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!811 = !{!812, !30, !817}
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !813, line: 197, baseType: !32, size: 32, elements: !814)
!813 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!814 = !{!815, !816}
!815 = !DIEnumerator(name: "SUCCESS", value: 0)
!816 = !DIEnumerator(name: "ERROR", value: 1)
!817 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !818, line: 44, baseType: !32, size: 32, elements: !819)
!818 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!819 = !{!820, !821, !822, !823}
!820 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!821 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!822 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!823 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!824 = !{!102, !103, !121, !825, !860, !866}
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !827)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !828)
!828 = !{!829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !827, file: !116, line: 502, baseType: !120, size: 32)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !827, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !827, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !827, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !827, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !827, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !827, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !827, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !827, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !827, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !827, file: !116, line: 512, baseType: !840, size: 64, offset: 320)
!840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !363)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !827, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !827, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !827, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !827, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !827, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !827, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !827, file: !116, line: 519, baseType: !840, size: 64, offset: 576)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !827, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !827, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !827, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !827, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !827, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !827, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !827, file: !116, line: 526, baseType: !840, size: 64, offset: 832)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !827, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !827, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !827, file: !116, line: 529, baseType: !840, size: 64, offset: 960)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !827, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !827, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !862, line: 343, size: 64, elements: !863)
!862 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!863 = !{!864, !865}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !861, file: !862, line: 344, baseType: !121, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !861, file: !862, line: 345, baseType: !121, size: 32, offset: 32)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!867 = !{!868, !874, !890, !901, !807}
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !809, file: !870, line: 752, type: !871, isLocal: false, isDefinition: true, align: 16)
!870 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 928, elements: !872)
!872 = !{!873}
!873 = !DISubrange(count: 58)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !809, file: !870, line: 752, type: !876, isLocal: false, isDefinition: true, align: 32)
!876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !877)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !878)
!878 = !{!879, !880, !881, !882, !888, !889}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !877, file: !141, line: 380, baseType: !144, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !877, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !877, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !877, file: !141, line: 386, baseType: !883, size: 32, offset: 96)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 32)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !885)
!885 = !{!886, !887}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !884, file: !141, line: 359, baseType: !154, size: 8)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !884, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !877, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !877, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !809, file: !870, line: 752, type: !892, isLocal: true, isDefinition: true, align: 32)
!892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !894)
!894 = !{!895, !900}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !893, file: !132, line: 60, baseType: !896, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = !DISubroutineType(types: !898)
!898 = !{!103, !899}
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !893, file: !132, line: 65, baseType: !899, size: 32, offset: 32)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !809, file: !870, line: 752, type: !884, isLocal: true, isDefinition: true, align: 8)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !818, line: 100, size: 224, elements: !904)
!904 = !{!905, !911, !912, !921, !926, !931, !937}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !903, file: !818, line: 101, baseType: !906, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !818, line: 76, baseType: !907)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!908 = !DISubroutineType(types: !909)
!909 = !{!103, !899, !910}
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !818, line: 56, baseType: !102)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !903, file: !818, line: 102, baseType: !906, size: 32, offset: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !903, file: !818, line: 103, baseType: !913, size: 32, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !818, line: 83, baseType: !914)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{!103, !899, !910, !917, !102}
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !818, line: 72, baseType: !918)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 32)
!919 = !DISubroutineType(types: !920)
!920 = !{null, !899, !910, !102}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !903, file: !818, line: 104, baseType: !922, size: 32, offset: 96)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !818, line: 79, baseType: !923)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DISubroutineType(types: !925)
!925 = !{!103, !899, !910, !866}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !903, file: !818, line: 105, baseType: !927, size: 32, offset: 128)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !818, line: 88, baseType: !928)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 32)
!929 = !DISubroutineType(types: !930)
!930 = !{!817, !899, !910}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !903, file: !818, line: 106, baseType: !932, size: 32, offset: 160)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !818, line: 92, baseType: !933)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!934 = !DISubroutineType(types: !935)
!935 = !{!103, !899, !910, !936}
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !818, line: 64, baseType: !102)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !903, file: !818, line: 107, baseType: !938, size: 32, offset: 192)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !818, line: 96, baseType: !939)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = !DISubroutineType(types: !941)
!941 = !{!103, !899, !910, !102}
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "avail_queue", scope: !944, file: !948, line: 108, type: !1045, isLocal: true, isDefinition: true)
!944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !945, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !946, retainedTypes: !955, globals: !1035, splitDebugInlining: false, nameTableKind: None)
!945 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!946 = !{!30, !947}
!947 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !948, line: 214, baseType: !32, size: 32, elements: !949)
!948 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!949 = !{!950, !951, !952, !953, !954}
!950 = !DIEnumerator(name: "ESC_ESC", value: 0)
!951 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!952 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!953 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!954 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!955 = !{!102, !103, !956, !32, !24}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !958)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !959)
!959 = !{!960, !979, !983, !987, !1000, !1005, !1009, !1013, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !958, file: !209, line: 365, baseType: !961, size: 32)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 32)
!962 = !DISubroutineType(types: !963)
!963 = !{!103, !964, !230}
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !966)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !967)
!967 = !{!968, !969, !970, !971, !977, !978}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !966, file: !141, line: 380, baseType: !144, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !966, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !966, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !966, file: !141, line: 386, baseType: !972, size: 32, offset: 96)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !974)
!974 = !{!975, !976}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !973, file: !141, line: 359, baseType: !154, size: 8)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !973, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !966, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !966, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !958, file: !209, line: 366, baseType: !980, size: 32, offset: 32)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DISubroutineType(types: !982)
!982 = !{null, !964, !155}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !958, file: !209, line: 374, baseType: !984, size: 32, offset: 64)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 32)
!985 = !DISubroutineType(types: !986)
!986 = !{!103, !964}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !958, file: !209, line: 377, baseType: !988, size: 32, offset: 96)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 32)
!989 = !DISubroutineType(types: !990)
!990 = !{!103, !964, !991}
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !993)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !994)
!994 = !{!995, !996, !997, !998, !999}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !993, file: !209, line: 123, baseType: !121, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !993, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !993, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !993, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !993, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !958, file: !209, line: 379, baseType: !1001, size: 32, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!103, !964, !1004}
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !958, file: !209, line: 384, baseType: !1006, size: 32, offset: 160)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 32)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!103, !964, !261, !103}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !958, file: !209, line: 393, baseType: !1010, size: 32, offset: 192)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!103, !964, !267, !268}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !958, file: !209, line: 402, baseType: !1014, size: 32, offset: 224)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{null, !964}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !958, file: !209, line: 405, baseType: !1014, size: 32, offset: 256)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !958, file: !209, line: 408, baseType: !984, size: 32, offset: 288)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !958, file: !209, line: 411, baseType: !1014, size: 32, offset: 320)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !958, file: !209, line: 414, baseType: !1014, size: 32, offset: 352)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !958, file: !209, line: 417, baseType: !984, size: 32, offset: 384)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !958, file: !209, line: 420, baseType: !984, size: 32, offset: 416)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !958, file: !209, line: 423, baseType: !1014, size: 32, offset: 448)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !958, file: !209, line: 426, baseType: !1014, size: 32, offset: 480)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !958, file: !209, line: 429, baseType: !984, size: 32, offset: 512)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !958, file: !209, line: 432, baseType: !984, size: 32, offset: 544)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !958, file: !209, line: 435, baseType: !1028, size: 32, offset: 576)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{null, !964, !1031, !102}
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !1032)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 32)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{null, !964, !102}
!1035 = !{!1036, !942, !1043, !1083, !1088, !1091, !1110, !1114, !1116, !1118, !1120}
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !944, file: !948, line: 603, type: !1038, isLocal: true, isDefinition: true, align: 32)
!1038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1040)
!1040 = !{!1041, !1042}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1039, file: !132, line: 60, baseType: !984, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1039, file: !132, line: 65, baseType: !964, size: 32, offset: 32)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "lines_queue", scope: !944, file: !948, line: 109, type: !1045, isLocal: true, isDefinition: true)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !296, line: 2208, size: 128, elements: !1047)
!1047 = !{!1048}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1046, file: !296, line: 2209, baseType: !1049, size: 128)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !1050)
!1050 = !{!1051, !1062, !1064}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1049, file: !296, line: 1710, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !1054)
!1054 = !{!1055, !1061}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1053, file: !303, line: 42, baseType: !1056, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !1059)
!1059 = !{!1060}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1058, file: !303, line: 36, baseType: !312, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1053, file: !303, line: 43, baseType: !1056, size: 32, offset: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1049, file: !296, line: 1711, baseType: !1063, offset: 64)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1049, file: !296, line: 1712, baseType: !1065, size: 64, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !1066)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !1067)
!1067 = !{!1068}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1066, file: !320, line: 232, baseType: !1069, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !1070)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !1071)
!1071 = !{!1072, !1078}
!1072 = !DIDerivedType(tag: DW_TAG_member, scope: !1070, file: !325, line: 38, baseType: !1073, size: 32)
!1073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1070, file: !325, line: 38, size: 32, elements: !1074)
!1074 = !{!1075, !1077}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1073, file: !325, line: 39, baseType: !1076, size: 32)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1073, file: !325, line: 40, baseType: !1076, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, scope: !1070, file: !325, line: 42, baseType: !1079, size: 32, offset: 32)
!1079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1070, file: !325, line: 42, size: 32, elements: !1080)
!1080 = !{!1081, !1082}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1079, file: !325, line: 43, baseType: !1076, size: 32)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1079, file: !325, line: 44, baseType: !1076, size: 32)
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(name: "completion_cb", scope: !944, file: !948, line: 110, type: !1085, isLocal: true, isDefinition: true)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 32)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!154, !344, !154}
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !944, file: !948, line: 38, type: !1090, isLocal: true, isDefinition: true)
!1090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !964)
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "cmd", scope: !1093, file: !948, line: 435, type: !1104, isLocal: true, isDefinition: true)
!1093 = distinct !DISubprogram(name: "uart_console_isr", scope: !948, file: !948, line: 428, type: !1033, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !1094)
!1094 = !{!1095, !1096, !1097, !1099, !1100}
!1095 = !DILocalVariable(name: "unused", arg: 1, scope: !1093, file: !948, line: 428, type: !964)
!1096 = !DILocalVariable(name: "user_data", arg: 2, scope: !1093, file: !948, line: 428, type: !102)
!1097 = !DILocalVariable(name: "byte", scope: !1098, file: !948, line: 436, type: !154)
!1098 = distinct !DILexicalBlock(scope: !1093, file: !948, line: 434, column: 48)
!1099 = !DILocalVariable(name: "rx", scope: !1098, file: !948, line: 437, type: !103)
!1100 = !DILocalVariable(name: "ret", scope: !1101, file: !948, line: 461, type: !102)
!1101 = distinct !DILexicalBlock(scope: !1102, file: !948, line: 461, column: 10)
!1102 = distinct !DILexicalBlock(scope: !1103, file: !948, line: 460, column: 13)
!1103 = distinct !DILexicalBlock(scope: !1098, file: !948, line: 460, column: 7)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !350, line: 21, size: 1088, elements: !1106)
!1106 = !{!1107, !1108, !1109}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1105, file: !350, line: 23, baseType: !353, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1105, file: !350, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1105, file: !350, line: 27, baseType: !357, size: 1024, offset: 40)
!1110 = !DIGlobalVariableExpression(var: !1111, expr: !DIExpression())
!1111 = distinct !DIGlobalVariable(name: "esc_state", scope: !944, file: !948, line: 228, type: !1112, isLocal: true, isDefinition: true)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1113, line: 22, baseType: !354)
!1113 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "ansi_val", scope: !944, file: !948, line: 229, type: !32, isLocal: true, isDefinition: true)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !944, file: !948, line: 229, type: !32, isLocal: true, isDefinition: true)
!1118 = !DIGlobalVariableExpression(var: !1119, expr: !DIExpression())
!1119 = distinct !DIGlobalVariable(name: "cur", scope: !944, file: !948, line: 230, type: !154, isLocal: true, isDefinition: true)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "end", scope: !944, file: !948, line: 230, type: !154, isLocal: true, isDefinition: true)
!1122 = !DIGlobalVariableExpression(var: !1123, expr: !DIExpression())
!1123 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1124, file: !1293, line: 762, type: !1412, isLocal: true, isDefinition: true)
!1124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1125, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1126, retainedTypes: !1144, globals: !1290, splitDebugInlining: false, nameTableKind: None)
!1125 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!1126 = !{!30, !1127, !1133, !1138, !817}
!1127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1128, line: 506, baseType: !32, size: 32, elements: !1129)
!1128 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1129 = !{!1130, !1131, !1132}
!1130 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1131 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1132 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1133 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1128, line: 512, baseType: !32, size: 32, elements: !1134)
!1134 = !{!1135, !1136, !1137}
!1135 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1136 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1137 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !727, line: 43, baseType: !32, size: 32, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1143}
!1140 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1141 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1142 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1143 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1144 = !{!102, !103, !1145, !1215, !1220, !1180, !1133, !1127, !1225, !1226, !121, !1240, !1195, !344, !1250, !1251}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1147)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1128, line: 523, size: 288, elements: !1148)
!1148 = !{!1149, !1170, !1176, !1181, !1185, !1186, !1187, !1191, !1211}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1147, file: !1128, line: 524, baseType: !1150, size: 32)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!103, !1153, !1168, !1169}
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 32)
!1154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1155)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1156)
!1156 = !{!1157, !1158, !1159, !1160, !1166, !1167}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1155, file: !141, line: 380, baseType: !144, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1155, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1155, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1155, file: !141, line: 386, baseType: !1161, size: 32, offset: 96)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1163)
!1163 = !{!1164, !1165}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1162, file: !141, line: 359, baseType: !154, size: 8)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1162, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1155, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1155, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1128, line: 237, baseType: !154)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1128, line: 257, baseType: !121)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1147, file: !1128, line: 530, baseType: !1171, size: 32, offset: 32)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!103, !1153, !1174}
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1128, line: 229, baseType: !121)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1147, file: !1128, line: 532, baseType: !1177, size: 32, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!103, !1153, !1180, !1175}
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1128, line: 216, baseType: !121)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1147, file: !1128, line: 535, baseType: !1182, size: 32, offset: 96)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 32)
!1183 = !DISubroutineType(types: !1184)
!1184 = !{!103, !1153, !1180}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1147, file: !1128, line: 537, baseType: !1182, size: 32, offset: 128)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1147, file: !1128, line: 539, baseType: !1182, size: 32, offset: 160)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1147, file: !1128, line: 541, baseType: !1188, size: 32, offset: 192)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!103, !1153, !1168, !1127, !1133}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1147, file: !1128, line: 544, baseType: !1192, size: 32, offset: 224)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 32)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!103, !1153, !1195, !157}
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1128, line: 478, size: 96, elements: !1197)
!1197 = !{!1198, !1205, !1210}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1196, file: !1128, line: 482, baseType: !1199, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1200, line: 33, baseType: !1201)
!1200 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1200, line: 29, size: 32, elements: !1202)
!1202 = !{!1203}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1201, file: !1200, line: 30, baseType: !1204, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1196, file: !1128, line: 485, baseType: !1206, size: 32, offset: 32)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1128, line: 464, baseType: !1207)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{null, !1153, !1195, !1180}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1196, file: !1128, line: 493, baseType: !1180, size: 32, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1147, file: !1128, line: 547, baseType: !1212, size: 32, offset: 256)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 32)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{!121, !1153}
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1217)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1128, line: 428, size: 32, elements: !1218)
!1218 = !{!1219}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1217, file: !1128, line: 434, baseType: !1180, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1128, line: 441, size: 32, elements: !1223)
!1223 = !{!1224}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1222, file: !1128, line: 447, baseType: !1180, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 441, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 430, size: 320, elements: !1229)
!1229 = !{!1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1228, file: !116, line: 432, baseType: !120, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1228, file: !116, line: 433, baseType: !120, size: 32, offset: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1228, file: !116, line: 434, baseType: !120, size: 32, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1228, file: !116, line: 435, baseType: !120, size: 32, offset: 96)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1228, file: !116, line: 436, baseType: !120, size: 32, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1228, file: !116, line: 437, baseType: !120, size: 32, offset: 160)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1228, file: !116, line: 438, baseType: !120, size: 32, offset: 192)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1228, file: !116, line: 439, baseType: !120, size: 32, offset: 224)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1228, file: !116, line: 440, baseType: !1239, size: 64, offset: 256)
!1239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !363)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 454, baseType: !1242)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 447, size: 288, elements: !1243)
!1243 = !{!1244, !1245, !1246, !1248, !1249}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1242, file: !116, line: 449, baseType: !120, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1242, file: !116, line: 450, baseType: !120, size: 32, offset: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1242, file: !116, line: 451, baseType: !1247, size: 128, offset: 64)
!1247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !688)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1242, file: !116, line: 452, baseType: !840, size: 64, offset: 192)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1242, file: !116, line: 453, baseType: !120, size: 32, offset: 256)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !818, line: 100, size: 224, elements: !1254)
!1254 = !{!1255, !1260, !1261, !1270, !1275, !1280, !1285}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1253, file: !818, line: 101, baseType: !1256, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !818, line: 76, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!103, !1153, !910}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1253, file: !818, line: 102, baseType: !1256, size: 32, offset: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1253, file: !818, line: 103, baseType: !1262, size: 32, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !818, line: 83, baseType: !1263)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!103, !1153, !910, !1266, !102}
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !818, line: 72, baseType: !1267)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{null, !1153, !910, !102}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1253, file: !818, line: 104, baseType: !1271, size: 32, offset: 96)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !818, line: 79, baseType: !1272)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{!103, !1153, !910, !866}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1253, file: !818, line: 105, baseType: !1276, size: 32, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !818, line: 88, baseType: !1277)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!817, !1153, !910}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1253, file: !818, line: 106, baseType: !1281, size: 32, offset: 160)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !818, line: 92, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!103, !1153, !910, !936}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1253, file: !818, line: 107, baseType: !1286, size: 32, offset: 192)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !818, line: 96, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!103, !1153, !910, !102}
!1290 = !{!1291, !1297, !1299, !1309, !1314, !1316, !1318, !1320, !1322, !1324, !1326, !1328, !1330, !1332, !1334, !1336, !1338, !1340, !1342, !1344, !1346, !1348, !1350, !1352, !1354, !1356, !1358, !1360, !1374, !1376, !1378, !1380, !1382, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1122, !1408, !1410, !1423, !1425, !1427, !1429, !1431, !1433, !1435}
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1124, file: !1293, line: 762, type: !1294, isLocal: false, isDefinition: true, align: 16)
!1293 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 96, elements: !1295)
!1295 = !{!1296}
!1296 = !DISubrange(count: 6)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1124, file: !1293, line: 762, type: !1154, isLocal: false, isDefinition: true, align: 32)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1124, file: !1293, line: 762, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1303)
!1303 = !{!1304, !1308}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1302, file: !132, line: 60, baseType: !1305, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!103, !1153}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1302, file: !132, line: 65, baseType: !1153, size: 32, offset: 32)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1124, file: !1293, line: 766, type: !1311, isLocal: false, isDefinition: true, align: 16)
!1311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1312)
!1312 = !{!1313}
!1313 = !DISubrange(count: 5)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1124, file: !1293, line: 766, type: !1154, isLocal: false, isDefinition: true, align: 32)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1124, file: !1293, line: 766, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1124, file: !1293, line: 770, type: !1294, isLocal: false, isDefinition: true, align: 16)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1124, file: !1293, line: 770, type: !1154, isLocal: false, isDefinition: true, align: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1124, file: !1293, line: 770, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1124, file: !1293, line: 774, type: !1311, isLocal: false, isDefinition: true, align: 16)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1124, file: !1293, line: 774, type: !1154, isLocal: false, isDefinition: true, align: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1124, file: !1293, line: 774, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1124, file: !1293, line: 778, type: !1311, isLocal: false, isDefinition: true, align: 16)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1124, file: !1293, line: 778, type: !1154, isLocal: false, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1124, file: !1293, line: 778, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1124, file: !1293, line: 782, type: !1311, isLocal: false, isDefinition: true, align: 16)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1124, file: !1293, line: 782, type: !1154, isLocal: false, isDefinition: true, align: 32)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1124, file: !1293, line: 782, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1124, file: !1293, line: 786, type: !1311, isLocal: false, isDefinition: true, align: 16)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1124, file: !1293, line: 786, type: !1154, isLocal: false, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1124, file: !1293, line: 786, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1124, file: !1293, line: 790, type: !1311, isLocal: false, isDefinition: true, align: 16)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1124, file: !1293, line: 790, type: !1154, isLocal: false, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1124, file: !1293, line: 790, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1124, file: !1293, line: 794, type: !1311, isLocal: false, isDefinition: true, align: 16)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1124, file: !1293, line: 794, type: !1154, isLocal: false, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1124, file: !1293, line: 794, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1124, file: !1293, line: 762, type: !1362, isLocal: true, isDefinition: true)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1363, line: 237, size: 128, elements: !1364)
!1363 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1364 = !{!1365, !1366, !1367}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1362, file: !1363, line: 239, baseType: !1222, size: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1362, file: !1363, line: 241, baseType: !1153, size: 32, offset: 32)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1362, file: !1363, line: 243, baseType: !1368, size: 64, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1200, line: 40, baseType: !1369)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1200, line: 35, size: 64, elements: !1370)
!1370 = !{!1371, !1373}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1369, file: !1200, line: 36, baseType: !1372, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1369, file: !1200, line: 37, baseType: !1372, size: 32, offset: 32)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1124, file: !1293, line: 762, type: !1162, isLocal: true, isDefinition: true, align: 8)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1124, file: !1293, line: 766, type: !1362, isLocal: true, isDefinition: true)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1124, file: !1293, line: 766, type: !1162, isLocal: true, isDefinition: true, align: 8)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1124, file: !1293, line: 770, type: !1362, isLocal: true, isDefinition: true)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1124, file: !1293, line: 770, type: !1162, isLocal: true, isDefinition: true, align: 8)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1124, file: !1293, line: 774, type: !1362, isLocal: true, isDefinition: true)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1124, file: !1293, line: 774, type: !1162, isLocal: true, isDefinition: true, align: 8)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1124, file: !1293, line: 778, type: !1362, isLocal: true, isDefinition: true)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1124, file: !1293, line: 778, type: !1162, isLocal: true, isDefinition: true, align: 8)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1124, file: !1293, line: 782, type: !1362, isLocal: true, isDefinition: true)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1124, file: !1293, line: 782, type: !1162, isLocal: true, isDefinition: true, align: 8)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1124, file: !1293, line: 786, type: !1362, isLocal: true, isDefinition: true)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1124, file: !1293, line: 786, type: !1162, isLocal: true, isDefinition: true, align: 8)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1124, file: !1293, line: 790, type: !1362, isLocal: true, isDefinition: true)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1124, file: !1293, line: 790, type: !1162, isLocal: true, isDefinition: true, align: 8)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1124, file: !1293, line: 794, type: !1362, isLocal: true, isDefinition: true)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1124, file: !1293, line: 794, type: !1162, isLocal: true, isDefinition: true, align: 8)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1124, file: !1293, line: 656, type: !1146, isLocal: true, isDefinition: true)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1124, file: !1293, line: 766, type: !1412, isLocal: true, isDefinition: true)
!1412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1413)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1363, line: 224, size: 160, elements: !1414)
!1414 = !{!1415, !1416, !1417, !1418}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1413, file: !1363, line: 226, baseType: !1217, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1413, file: !1363, line: 228, baseType: !866, size: 32, offset: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1413, file: !1363, line: 230, baseType: !103, size: 32, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1413, file: !1363, line: 231, baseType: !1419, size: 64, offset: 96)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !862, line: 343, size: 64, elements: !1420)
!1420 = !{!1421, !1422}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1419, file: !862, line: 344, baseType: !121, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1419, file: !862, line: 345, baseType: !121, size: 32, offset: 32)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1124, file: !1293, line: 770, type: !1412, isLocal: true, isDefinition: true)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1124, file: !1293, line: 774, type: !1412, isLocal: true, isDefinition: true)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1124, file: !1293, line: 778, type: !1412, isLocal: true, isDefinition: true)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1124, file: !1293, line: 782, type: !1412, isLocal: true, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1124, file: !1293, line: 786, type: !1412, isLocal: true, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1124, file: !1293, line: 790, type: !1412, isLocal: true, isDefinition: true)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1124, file: !1293, line: 794, type: !1412, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1439, file: !1610, line: 1914, type: !1684, isLocal: true, isDefinition: true)
!1439 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1440, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1441, retainedTypes: !1474, globals: !1607, splitDebugInlining: false, nameTableKind: None)
!1440 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!1441 = !{!30, !1442, !1449, !1456, !1463, !1469, !817}
!1442 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !209, line: 47, baseType: !32, size: 32, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1448}
!1444 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1445 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1446 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1447 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1448 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1449 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !209, line: 75, baseType: !32, size: 32, elements: !1450)
!1450 = !{!1451, !1452, !1453, !1454, !1455}
!1451 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1452 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1453 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1454 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1455 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1456 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !209, line: 92, baseType: !32, size: 32, elements: !1457)
!1457 = !{!1458, !1459, !1460, !1461, !1462}
!1458 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1459 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1460 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1461 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1462 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1463 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !209, line: 84, baseType: !32, size: 32, elements: !1464)
!1464 = !{!1465, !1466, !1467, !1468}
!1465 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1466 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1467 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1468 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1469 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !209, line: 107, baseType: !32, size: 32, elements: !1470)
!1470 = !{!1471, !1472, !1473}
!1471 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1472 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1473 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1474 = !{!102, !103, !1475, !155, !154, !1554, !121, !910, !1565, !429, !1604, !1606}
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1477)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !1478)
!1478 = !{!1479, !1498, !1502, !1506, !1519, !1524, !1528, !1532, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1477, file: !209, line: 365, baseType: !1480, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 32)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!103, !1483, !230}
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1485)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1486)
!1486 = !{!1487, !1488, !1489, !1490, !1496, !1497}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1485, file: !141, line: 380, baseType: !144, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1485, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1485, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1485, file: !141, line: 386, baseType: !1491, size: 32, offset: 96)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1493)
!1493 = !{!1494, !1495}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1492, file: !141, line: 359, baseType: !154, size: 8)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1492, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1485, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1485, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1477, file: !209, line: 366, baseType: !1499, size: 32, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{null, !1483, !155}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1477, file: !209, line: 374, baseType: !1503, size: 32, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!103, !1483}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1477, file: !209, line: 377, baseType: !1507, size: 32, offset: 96)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!103, !1483, !1510}
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !1513)
!1513 = !{!1514, !1515, !1516, !1517, !1518}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1512, file: !209, line: 123, baseType: !121, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1512, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1512, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1512, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1512, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1477, file: !209, line: 379, baseType: !1520, size: 32, offset: 128)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!103, !1483, !1523}
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1477, file: !209, line: 384, baseType: !1525, size: 32, offset: 160)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!103, !1483, !261, !103}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1477, file: !209, line: 393, baseType: !1529, size: 32, offset: 192)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 32)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!103, !1483, !267, !268}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1477, file: !209, line: 402, baseType: !1533, size: 32, offset: 224)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{null, !1483}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1477, file: !209, line: 405, baseType: !1533, size: 32, offset: 256)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1477, file: !209, line: 408, baseType: !1503, size: 32, offset: 288)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1477, file: !209, line: 411, baseType: !1533, size: 32, offset: 320)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1477, file: !209, line: 414, baseType: !1533, size: 32, offset: 352)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1477, file: !209, line: 417, baseType: !1503, size: 32, offset: 384)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1477, file: !209, line: 420, baseType: !1503, size: 32, offset: 416)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1477, file: !209, line: 423, baseType: !1533, size: 32, offset: 448)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1477, file: !209, line: 426, baseType: !1533, size: 32, offset: 480)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1477, file: !209, line: 429, baseType: !1503, size: 32, offset: 512)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1477, file: !209, line: 432, baseType: !1503, size: 32, offset: 544)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1477, file: !209, line: 435, baseType: !1547, size: 32, offset: 576)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{null, !1483, !1550, !102}
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !1551)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{null, !1483, !102}
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 670, baseType: !1556)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 661, size: 224, elements: !1557)
!1557 = !{!1558, !1559, !1560, !1561, !1562, !1563, !1564}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1556, file: !116, line: 663, baseType: !120, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1556, file: !116, line: 664, baseType: !120, size: 32, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1556, file: !116, line: 665, baseType: !120, size: 32, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1556, file: !116, line: 666, baseType: !120, size: 32, offset: 96)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1556, file: !116, line: 667, baseType: !120, size: 32, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1556, file: !116, line: 668, baseType: !120, size: 32, offset: 160)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1556, file: !116, line: 669, baseType: !120, size: 32, offset: 192)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1567)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !818, line: 100, size: 224, elements: !1568)
!1568 = !{!1569, !1574, !1575, !1584, !1589, !1594, !1599}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1567, file: !818, line: 101, baseType: !1570, size: 32)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !818, line: 76, baseType: !1571)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!103, !1483, !910}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1567, file: !818, line: 102, baseType: !1570, size: 32, offset: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1567, file: !818, line: 103, baseType: !1576, size: 32, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !818, line: 83, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!103, !1483, !910, !1580, !102}
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !818, line: 72, baseType: !1581)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{null, !1483, !910, !102}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1567, file: !818, line: 104, baseType: !1585, size: 32, offset: 96)
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !818, line: 79, baseType: !1586)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 32)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!103, !1483, !910, !866}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1567, file: !818, line: 105, baseType: !1590, size: 32, offset: 128)
!1590 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !818, line: 88, baseType: !1591)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 32)
!1592 = !DISubroutineType(types: !1593)
!1593 = !{!817, !1483, !910}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1567, file: !818, line: 106, baseType: !1595, size: 32, offset: 160)
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !818, line: 92, baseType: !1596)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 32)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!103, !1483, !910, !936}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1567, file: !818, line: 107, baseType: !1600, size: 32, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !818, line: 96, baseType: !1601)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32)
!1602 = !DISubroutineType(types: !1603)
!1603 = !{!103, !1483, !910, !102}
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1605)
!1605 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1607 = !{!1608, !1614, !1616, !1623, !1437, !1625, !1633, !1656, !1659, !1662, !1673, !1675}
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1439, file: !1610, line: 1914, type: !1611, isLocal: false, isDefinition: true, align: 16)
!1610 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1612)
!1612 = !{!1613}
!1613 = !DISubrange(count: 8)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1439, file: !1610, line: 1914, type: !1484, isLocal: false, isDefinition: true, align: 32)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1439, file: !1610, line: 1914, type: !1618, isLocal: true, isDefinition: true, align: 32)
!1618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1619)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1620)
!1620 = !{!1621, !1622}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1619, file: !132, line: 60, baseType: !1503, size: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1619, file: !132, line: 65, baseType: !1483, size: 32, offset: 32)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1439, file: !1610, line: 1914, type: !1492, isLocal: true, isDefinition: true, align: 8)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1439, file: !1610, line: 1914, type: !1627, isLocal: true, isDefinition: true)
!1627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1628, size: 64, elements: !504)
!1628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !862, line: 343, size: 64, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1629, file: !862, line: 344, baseType: !121, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1629, file: !862, line: 345, baseType: !121, size: 32, offset: 32)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1439, file: !1610, line: 1914, type: !1635, isLocal: true, isDefinition: true)
!1635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1636)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1637, line: 60, size: 64, elements: !1638)
!1637 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1638 = !{!1639, !1655}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1636, file: !1637, line: 69, baseType: !1640, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1637, line: 50, size: 64, elements: !1643)
!1643 = !{!1644, !1653, !1654}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1642, file: !1637, line: 52, baseType: !1645, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1647)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1648, line: 37, baseType: !1649)
!1648 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1648, line: 32, size: 64, elements: !1650)
!1650 = !{!1651, !1652}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1649, file: !1648, line: 34, baseType: !121, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1649, file: !1648, line: 36, baseType: !121, size: 32, offset: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1642, file: !1637, line: 54, baseType: !154, size: 8, offset: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1642, file: !1637, line: 56, baseType: !154, size: 8, offset: 40)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1636, file: !1637, line: 71, baseType: !154, size: 8, offset: 32)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1439, file: !1610, line: 1914, type: !1658, isLocal: true, isDefinition: true)
!1658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1641, size: 64, elements: !504)
!1659 = !DIGlobalVariableExpression(var: !1660, expr: !DIExpression())
!1660 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1439, file: !1610, line: 1914, type: !1661, isLocal: true, isDefinition: true)
!1661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1646, size: 128, elements: !363)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1664, file: !1610, line: 1914, type: !1667, isLocal: true, isDefinition: true, align: 32)
!1664 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1610, file: !1610, line: 1914, type: !1534, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !1665)
!1665 = !{!1666}
!1666 = !DILocalVariable(name: "dev", arg: 1, scope: !1664, file: !1610, line: 1914, type: !1483)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1668)
!1668 = !{!1669, !1670, !1671, !1672}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1667, file: !10, line: 55, baseType: !746, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1667, file: !10, line: 57, baseType: !746, size: 32, offset: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1667, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1667, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1439, file: !1610, line: 1539, type: !1476, isLocal: true, isDefinition: true)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1439, file: !1610, line: 1914, type: !1677, isLocal: true, isDefinition: true)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1678, line: 74, size: 128, elements: !1679)
!1678 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1679 = !{!1680, !1681, !1682, !1683}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1677, file: !1678, line: 76, baseType: !121, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1677, file: !1678, line: 78, baseType: !1483, size: 32, offset: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1677, file: !1678, line: 80, baseType: !1550, size: 32, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1677, file: !1678, line: 81, baseType: !102, size: 32, offset: 96)
!1684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1685)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1678, line: 22, size: 256, elements: !1686)
!1686 = !{!1687, !1688, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1699}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1685, file: !1678, line: 24, baseType: !1554, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1685, file: !1678, line: 26, baseType: !1689, size: 32, offset: 32)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1685, file: !1678, line: 28, baseType: !204, size: 32, offset: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1685, file: !1678, line: 30, baseType: !157, size: 8, offset: 96)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1685, file: !1678, line: 32, baseType: !103, size: 32, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1685, file: !1678, line: 34, baseType: !157, size: 8, offset: 160)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1685, file: !1678, line: 36, baseType: !157, size: 8, offset: 168)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1685, file: !1678, line: 38, baseType: !157, size: 8, offset: 176)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1685, file: !1678, line: 40, baseType: !157, size: 8, offset: 184)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1685, file: !1678, line: 41, baseType: !1698, size: 32, offset: 192)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1685, file: !1678, line: 44, baseType: !1700, size: 32, offset: 224)
!1700 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !209, line: 150, baseType: !1533)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1703, file: !1781, line: 65, type: !120, isLocal: true, isDefinition: true)
!1703 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1704, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1705, retainedTypes: !1706, globals: !1778, splitDebugInlining: false, nameTableKind: None)
!1704 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!1705 = !{!584}
!1706 = !{!200, !1707, !746, !154, !121, !1715, !1746}
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 32)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !515, line: 770, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 764, size: 128, elements: !1710)
!1710 = !{!1711, !1712, !1713, !1714}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1709, file: !515, line: 766, baseType: !120, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1709, file: !515, line: 767, baseType: !120, size: 32, offset: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1709, file: !515, line: 768, baseType: !120, size: 32, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1709, file: !515, line: 769, baseType: !519, size: 32, offset: 96)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !1717)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !1718)
!1718 = !{!1719, !1721, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1736, !1741, !1745}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1717, file: !515, line: 413, baseType: !1720, size: 256)
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1612)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1717, file: !515, line: 414, baseType: !1722, size: 768, offset: 256)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1723)
!1723 = !{!1724}
!1724 = !DISubrange(count: 24)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1717, file: !515, line: 415, baseType: !1720, size: 256, offset: 1024)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1717, file: !515, line: 416, baseType: !1722, size: 768, offset: 1280)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1717, file: !515, line: 417, baseType: !1720, size: 256, offset: 2048)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1717, file: !515, line: 418, baseType: !1722, size: 768, offset: 2304)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1717, file: !515, line: 419, baseType: !1720, size: 256, offset: 3072)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1717, file: !515, line: 420, baseType: !1722, size: 768, offset: 3328)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1717, file: !515, line: 421, baseType: !1720, size: 256, offset: 4096)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1717, file: !515, line: 422, baseType: !1733, size: 1792, offset: 4352)
!1733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1734)
!1734 = !{!1735}
!1735 = !DISubrange(count: 56)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1717, file: !515, line: 423, baseType: !1737, size: 1920, offset: 6144)
!1737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1738, size: 1920, elements: !1739)
!1738 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1739 = !{!1740}
!1740 = !DISubrange(count: 240)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1717, file: !515, line: 424, baseType: !1742, size: 20608, offset: 8064)
!1742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1743)
!1743 = !{!1744}
!1744 = !DISubrange(count: 644)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1717, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !1748)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !1749)
!1749 = !{!1750, !1751, !1752, !1753, !1754, !1755, !1756, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1769, !1770, !1771, !1773, !1775, !1777}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1748, file: !515, line: 447, baseType: !519, size: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1748, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1748, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1748, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1748, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1748, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1748, file: !515, line: 453, baseType: !1757, size: 96, offset: 192)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1738, size: 96, elements: !1758)
!1758 = !{!1759}
!1759 = !DISubrange(count: 12)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1748, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1748, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1748, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1748, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1748, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1748, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1748, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1748, file: !515, line: 461, baseType: !1768, size: 64, offset: 512)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 64, elements: !363)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1748, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1748, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1748, file: !515, line: 464, baseType: !1772, size: 128, offset: 640)
!1772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 128, elements: !688)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1748, file: !515, line: 465, baseType: !1774, size: 160, offset: 768)
!1774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 160, elements: !1312)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1748, file: !515, line: 466, baseType: !1776, size: 160, offset: 928)
!1776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1312)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1748, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!1778 = !{!1779, !1805, !1808, !1810, !1812, !1701}
!1779 = !DIGlobalVariableExpression(var: !1780, expr: !DIExpression())
!1780 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1703, file: !1781, line: 285, type: !1782, isLocal: true, isDefinition: true, align: 32)
!1781 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1783)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1784)
!1784 = !{!1785, !1804}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1783, file: !132, line: 60, baseType: !1786, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!103, !1789}
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1791)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1792)
!1792 = !{!1793, !1794, !1795, !1796, !1802, !1803}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1791, file: !141, line: 380, baseType: !144, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1791, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1791, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1791, file: !141, line: 386, baseType: !1797, size: 32, offset: 96)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 32)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1799)
!1799 = !{!1800, !1801}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1798, file: !141, line: 359, baseType: !154, size: 8)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1798, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1791, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1791, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1783, file: !132, line: 65, baseType: !1789, size: 32, offset: 32)
!1805 = !DIGlobalVariableExpression(var: !1806, expr: !DIExpression())
!1806 = distinct !DIGlobalVariable(name: "lock", scope: !1703, file: !1781, line: 34, type: !1807, isLocal: true, isDefinition: true)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "last_load", scope: !1703, file: !1781, line: 36, type: !121, isLocal: true, isDefinition: true)
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1703, file: !1781, line: 48, type: !121, isLocal: true, isDefinition: true)
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1703, file: !1781, line: 54, type: !121, isLocal: true, isDefinition: true)
!1814 = !DIGlobalVariableExpression(var: !1815, expr: !DIExpression())
!1815 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1816, file: !1898, line: 22, type: !1900, isLocal: true, isDefinition: true)
!1816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1817, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1818, retainedTypes: !1819, globals: !1895, splitDebugInlining: false, nameTableKind: None)
!1817 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!1818 = !{!1127, !1133}
!1819 = !{!1820, !1884, !1889, !1180, !1133, !1127, !1894, !102}
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1822)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1128, line: 523, size: 288, elements: !1823)
!1823 = !{!1824, !1843, !1847, !1851, !1855, !1856, !1857, !1861, !1880}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1822, file: !1128, line: 524, baseType: !1825, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!103, !1828, !1168, !1169}
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1831)
!1831 = !{!1832, !1833, !1834, !1835, !1841, !1842}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1830, file: !141, line: 380, baseType: !144, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1830, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1830, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1830, file: !141, line: 386, baseType: !1836, size: 32, offset: 96)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1838)
!1838 = !{!1839, !1840}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1837, file: !141, line: 359, baseType: !154, size: 8)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1837, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1830, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1830, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1822, file: !1128, line: 530, baseType: !1844, size: 32, offset: 32)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!103, !1828, !1174}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1822, file: !1128, line: 532, baseType: !1848, size: 32, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!103, !1828, !1180, !1175}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1822, file: !1128, line: 535, baseType: !1852, size: 32, offset: 96)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1853 = !DISubroutineType(types: !1854)
!1854 = !{!103, !1828, !1180}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1822, file: !1128, line: 537, baseType: !1852, size: 32, offset: 128)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1822, file: !1128, line: 539, baseType: !1852, size: 32, offset: 160)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1822, file: !1128, line: 541, baseType: !1858, size: 32, offset: 192)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!103, !1828, !1168, !1127, !1133}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1822, file: !1128, line: 544, baseType: !1862, size: 32, offset: 224)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 32)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{!103, !1828, !1865, !157}
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1128, line: 478, size: 96, elements: !1867)
!1867 = !{!1868, !1874, !1879}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1866, file: !1128, line: 482, baseType: !1869, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1200, line: 33, baseType: !1870)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1200, line: 29, size: 32, elements: !1871)
!1871 = !{!1872}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1870, file: !1200, line: 30, baseType: !1873, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1866, file: !1128, line: 485, baseType: !1875, size: 32, offset: 32)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1128, line: 464, baseType: !1876)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{null, !1828, !1865, !1180}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1866, file: !1128, line: 493, baseType: !1180, size: 32, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1822, file: !1128, line: 547, baseType: !1881, size: 32, offset: 256)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = !DISubroutineType(types: !1883)
!1883 = !{!121, !1828}
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1128, line: 428, size: 32, elements: !1887)
!1887 = !{!1888}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1886, file: !1128, line: 434, baseType: !1180, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1128, line: 441, size: 32, elements: !1892)
!1892 = !{!1893}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1891, file: !1128, line: 447, baseType: !1180, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!1895 = !{!1896, !1814}
!1896 = !DIGlobalVariableExpression(var: !1897, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1897 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1816, file: !1898, line: 37, type: !1899, isLocal: true, isDefinition: true)
!1898 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!1900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1901, size: 352, elements: !1902)
!1901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1828)
!1902 = !{!1903}
!1903 = !DISubrange(count: 11)
!1904 = !DIGlobalVariableExpression(var: !1905, expr: !DIExpression())
!1905 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1906, file: !1946, line: 139, type: !1952, isLocal: false, isDefinition: true)
!1906 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1907, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1908, globals: !1943, splitDebugInlining: false, nameTableKind: None)
!1907 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!1908 = !{!1909}
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !1912)
!1912 = !{!1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1911, file: !116, line: 502, baseType: !120, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1911, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1911, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1911, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1911, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1911, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1911, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1911, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1911, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1911, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1911, file: !116, line: 512, baseType: !840, size: 64, offset: 320)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1911, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1911, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1911, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1911, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1911, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1911, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1911, file: !116, line: 519, baseType: !840, size: 64, offset: 576)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1911, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1911, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1911, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1911, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1911, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1911, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1911, file: !116, line: 526, baseType: !840, size: 64, offset: 832)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1911, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1911, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1911, file: !116, line: 529, baseType: !840, size: 64, offset: 960)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1911, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1911, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!1943 = !{!1944, !1947, !1904}
!1944 = !DIGlobalVariableExpression(var: !1945, expr: !DIExpression())
!1945 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1906, file: !1946, line: 137, type: !121, isLocal: false, isDefinition: true)
!1946 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression())
!1948 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1906, file: !1946, line: 138, type: !1949, isLocal: false, isDefinition: true)
!1949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !1950)
!1950 = !{!1951}
!1951 = !DISubrange(count: 16)
!1952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !1612)
!1953 = !DIGlobalVariableExpression(var: !1954, expr: !DIExpression())
!1954 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1955, file: !1958, line: 23, type: !268, isLocal: false, isDefinition: true)
!1955 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1956, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1957, splitDebugInlining: false, nameTableKind: None)
!1956 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!1957 = !{!1953}
!1958 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1959 = !DIGlobalVariableExpression(var: !1960, expr: !DIExpression())
!1960 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1961, file: !1965, line: 86, type: !2212, isLocal: false, isDefinition: true, align: 512)
!1961 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1962, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1963, retainedTypes: !1972, globals: !2045, splitDebugInlining: false, nameTableKind: None)
!1962 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!1963 = !{!1964, !30, !584}
!1964 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1965, line: 63, baseType: !32, size: 32, elements: !1966)
!1965 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1966 = !{!1967, !1968, !1969, !1970, !1971}
!1967 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1968 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1969 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1970 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1971 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1972 = !{!22, !204, !102, !103, !1973, !344, !121, !2003, !746, !154, !2028}
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1975)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1976, line: 51, size: 64, elements: !1977)
!1976 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1977 = !{!1978, !1998}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1975, file: !1976, line: 52, baseType: !1979, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1976, line: 38, baseType: !1980)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 32)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!103, !1983, !267, !429}
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1986)
!1986 = !{!1987, !1988, !1989, !1990, !1996, !1997}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1985, file: !141, line: 380, baseType: !144, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1985, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1985, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1985, file: !141, line: 386, baseType: !1991, size: 32, offset: 96)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1993)
!1993 = !{!1994, !1995}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1992, file: !141, line: 359, baseType: !154, size: 8)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1992, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1985, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1985, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1975, file: !1976, line: 53, baseType: !1999, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1976, line: 47, baseType: !2000)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 32)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!103, !1983, !267, !429, !121}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2005)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2006)
!2006 = !{!2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2005, file: !515, line: 447, baseType: !519, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2005, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2005, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2005, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2005, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2005, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2005, file: !515, line: 453, baseType: !1757, size: 96, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2005, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2005, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2005, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2005, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2005, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2005, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2005, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2005, file: !515, line: 461, baseType: !1768, size: 64, offset: 512)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2005, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2005, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2005, file: !515, line: 464, baseType: !1772, size: 128, offset: 640)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2005, file: !515, line: 465, baseType: !1774, size: 160, offset: 768)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2005, file: !515, line: 466, baseType: !1776, size: 160, offset: 928)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2005, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2030)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2031)
!2031 = !{!2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2030, file: !515, line: 413, baseType: !1720, size: 256)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2030, file: !515, line: 414, baseType: !1722, size: 768, offset: 256)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2030, file: !515, line: 415, baseType: !1720, size: 256, offset: 1024)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2030, file: !515, line: 416, baseType: !1722, size: 768, offset: 1280)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2030, file: !515, line: 417, baseType: !1720, size: 256, offset: 2048)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2030, file: !515, line: 418, baseType: !1722, size: 768, offset: 2304)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2030, file: !515, line: 419, baseType: !1720, size: 256, offset: 3072)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2030, file: !515, line: 420, baseType: !1722, size: 768, offset: 3328)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2030, file: !515, line: 421, baseType: !1720, size: 256, offset: 4096)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2030, file: !515, line: 422, baseType: !1733, size: 1792, offset: 4352)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2030, file: !515, line: 423, baseType: !1737, size: 1920, offset: 6144)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2030, file: !515, line: 424, baseType: !1742, size: 20608, offset: 8064)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2030, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2045 = !{!2046, !2168, !2177, !2179, !1959, !2182, !2184, !2189}
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "_kernel", scope: !1961, file: !1965, line: 40, type: !2048, isLocal: false, isDefinition: true)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !320, line: 158, size: 288, elements: !2049)
!2049 = !{!2050, !2163}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2048, file: !320, line: 159, baseType: !2051, size: 192)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 192, elements: !504)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !320, line: 100, size: 192, elements: !2053)
!2053 = !{!2054, !2055, !2056, !2157, !2158, !2159, !2160}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2052, file: !320, line: 102, baseType: !121, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2052, file: !320, line: 105, baseType: !344, size: 32, offset: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2052, file: !320, line: 108, baseType: !2057, size: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2059)
!2059 = !{!2060, !2118, !2130, !2131, !2132, !2133, !2139, !2152}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2058, file: !379, line: 247, baseType: !2061, size: 384)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2062)
!2062 = !{!2063, !2087, !2094, !2095, !2096, !2105, !2106, !2107}
!2063 = !DIDerivedType(tag: DW_TAG_member, scope: !2061, file: !379, line: 60, baseType: !2064, size: 64)
!2064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2061, file: !379, line: 60, size: 64, elements: !2065)
!2065 = !{!2066, !2081}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2064, file: !379, line: 61, baseType: !2067, size: 64)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2068)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2069)
!2069 = !{!2070, !2076}
!2070 = !DIDerivedType(tag: DW_TAG_member, scope: !2068, file: !325, line: 38, baseType: !2071, size: 32)
!2071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2068, file: !325, line: 38, size: 32, elements: !2072)
!2072 = !{!2073, !2075}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2071, file: !325, line: 39, baseType: !2074, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2071, file: !325, line: 40, baseType: !2074, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, scope: !2068, file: !325, line: 42, baseType: !2077, size: 32, offset: 32)
!2077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2068, file: !325, line: 42, size: 32, elements: !2078)
!2078 = !{!2079, !2080}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2077, file: !325, line: 43, baseType: !2074, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2077, file: !325, line: 44, baseType: !2074, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2064, file: !379, line: 62, baseType: !2082, size: 64)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2083)
!2083 = !{!2084}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2082, file: !404, line: 50, baseType: !2085, size: 64)
!2085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2086, size: 64, elements: !363)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2061, file: !379, line: 68, baseType: !2088, size: 32, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2090)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2091)
!2091 = !{!2092}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2090, file: !320, line: 232, baseType: !2093, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2068)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2061, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2061, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2096 = !DIDerivedType(tag: DW_TAG_member, scope: !2061, file: !379, line: 90, baseType: !2097, size: 16, offset: 112)
!2097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2061, file: !379, line: 90, size: 16, elements: !2098)
!2098 = !{!2099, !2104}
!2099 = !DIDerivedType(tag: DW_TAG_member, scope: !2097, file: !379, line: 91, baseType: !2100, size: 16)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2097, file: !379, line: 91, size: 16, elements: !2101)
!2101 = !{!2102, !2103}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2100, file: !379, line: 96, baseType: !425, size: 8)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2100, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2097, file: !379, line: 100, baseType: !429, size: 16)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2061, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2061, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2061, file: !379, line: 131, baseType: !2108, size: 192, offset: 192)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2109)
!2109 = !{!2110, !2111, !2117}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2108, file: !320, line: 245, baseType: !2067, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2108, file: !320, line: 246, baseType: !2112, size: 32, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2113)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 32)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{null, !2116}
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2108, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2058, file: !379, line: 250, baseType: !2119, size: 288, offset: 384)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2120)
!2120 = !{!2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2119, file: !446, line: 26, baseType: !121, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2119, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2119, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2119, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2119, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2119, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2119, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2119, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2119, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2058, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2058, file: !379, line: 256, baseType: !2089, size: 64, offset: 704)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2058, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2058, file: !379, line: 300, baseType: !2134, size: 96, offset: 800)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2135)
!2135 = !{!2136, !2137, !2138}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2134, file: !379, line: 153, baseType: !22, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2134, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2134, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2058, file: !379, line: 325, baseType: !2140, size: 32, offset: 896)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2142)
!2142 = !{!2143, !2149, !2150}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2141, file: !296, line: 5074, baseType: !2144, size: 96)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2145)
!2145 = !{!2146, !2147, !2148}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2144, file: !472, line: 57, baseType: !475, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2144, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2144, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2141, file: !296, line: 5075, baseType: !2089, size: 64, offset: 96)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2141, file: !296, line: 5076, baseType: !2151, offset: 160)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2058, file: !379, line: 343, baseType: !2153, size: 64, offset: 928)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2154)
!2154 = !{!2155, !2156}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2153, file: !446, line: 63, baseType: !121, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2153, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2052, file: !320, line: 111, baseType: !2057, size: 32, offset: 96)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2052, file: !320, line: 124, baseType: !103, size: 32, offset: 128)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2052, file: !320, line: 127, baseType: !154, size: 8, offset: 160)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2052, file: !320, line: 153, baseType: !2161, offset: 168)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2162, line: 33, elements: !317)
!2162 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2048, file: !320, line: 170, baseType: !2164, size: 96, offset: 192)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !320, line: 83, size: 96, elements: !2165)
!2165 = !{!2166, !2167}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2164, file: !320, line: 86, baseType: !2057, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2164, file: !320, line: 90, baseType: !2093, size: 64, offset: 32)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1961, file: !1965, line: 43, type: !2170, isLocal: false, isDefinition: true, align: 512)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2171, size: 8704, elements: !2175)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2172, line: 47, size: 8, elements: !2173)
!2172 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2173 = !{!2174}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2171, file: !2172, line: 48, baseType: !146, size: 8)
!2175 = !{!2176}
!2176 = !DISubrange(count: 1088)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1961, file: !1965, line: 44, type: !2058, isLocal: false, isDefinition: true)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1961, file: !1965, line: 48, type: !2181, isLocal: false, isDefinition: true)
!2181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2058, size: 1024, elements: !504)
!2182 = !DIGlobalVariableExpression(var: !2183, expr: !DIExpression())
!2183 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1961, file: !1965, line: 217, type: !157, isLocal: false, isDefinition: true)
!2184 = !DIGlobalVariableExpression(var: !2185, expr: !DIExpression())
!2185 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1961, file: !1965, line: 50, type: !2186, isLocal: true, isDefinition: true, align: 512)
!2186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2171, size: 3072, elements: !2187)
!2187 = !{!505, !2188}
!2188 = !DISubrange(count: 384)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "levels", scope: !2191, file: !1965, line: 232, type: !2211, isLocal: true, isDefinition: true)
!2191 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1965, file: !1965, line: 230, type: !2192, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !2194)
!2192 = !DISubroutineType(types: !2193)
!2193 = !{null, !1964}
!2194 = !{!2195, !2196, !2206, !2210}
!2195 = !DILocalVariable(name: "level", arg: 1, scope: !2191, file: !1965, line: 230, type: !1964)
!2196 = !DILocalVariable(name: "entry", scope: !2191, file: !1965, line: 244, type: !2197)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2199)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2200)
!2200 = !{!2201, !2205}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2199, file: !132, line: 60, baseType: !2202, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 32)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{!103, !1983}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2199, file: !132, line: 65, baseType: !1983, size: 32, offset: 32)
!2206 = !DILocalVariable(name: "dev", scope: !2207, file: !1965, line: 247, type: !1983)
!2207 = distinct !DILexicalBlock(scope: !2208, file: !1965, line: 246, column: 64)
!2208 = distinct !DILexicalBlock(scope: !2209, file: !1965, line: 246, column: 2)
!2209 = distinct !DILexicalBlock(scope: !2191, file: !1965, line: 246, column: 2)
!2210 = !DILocalVariable(name: "rc", scope: !2207, file: !1965, line: 248, type: !103)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2197, size: 192, elements: !1295)
!2212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2171, size: 16896, elements: !2213)
!2213 = !{!505, !2214}
!2214 = !DISubrange(count: 2112)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "states_str", scope: !2217, file: !2218, line: 276, type: !2339, isLocal: true, isDefinition: true)
!2217 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2218, file: !2218, line: 271, type: !2219, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !2330)
!2218 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!144, !2221, !344, !204}
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !2222)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2224)
!2224 = !{!2225, !2283, !2295, !2296, !2297, !2298, !2304, !2317}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2223, file: !379, line: 247, baseType: !2226, size: 384)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2227)
!2227 = !{!2228, !2252, !2259, !2260, !2261, !2270, !2271, !2272}
!2228 = !DIDerivedType(tag: DW_TAG_member, scope: !2226, file: !379, line: 60, baseType: !2229, size: 64)
!2229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2226, file: !379, line: 60, size: 64, elements: !2230)
!2230 = !{!2231, !2246}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2229, file: !379, line: 61, baseType: !2232, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2233)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2234)
!2234 = !{!2235, !2241}
!2235 = !DIDerivedType(tag: DW_TAG_member, scope: !2233, file: !325, line: 38, baseType: !2236, size: 32)
!2236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2233, file: !325, line: 38, size: 32, elements: !2237)
!2237 = !{!2238, !2240}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2236, file: !325, line: 39, baseType: !2239, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2236, file: !325, line: 40, baseType: !2239, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, scope: !2233, file: !325, line: 42, baseType: !2242, size: 32, offset: 32)
!2242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2233, file: !325, line: 42, size: 32, elements: !2243)
!2243 = !{!2244, !2245}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2242, file: !325, line: 43, baseType: !2239, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2242, file: !325, line: 44, baseType: !2239, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2229, file: !379, line: 62, baseType: !2247, size: 64)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2248)
!2248 = !{!2249}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2247, file: !404, line: 50, baseType: !2250, size: 64)
!2250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2251, size: 64, elements: !363)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2226, file: !379, line: 68, baseType: !2253, size: 32, offset: 64)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2255)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2256)
!2256 = !{!2257}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2255, file: !320, line: 232, baseType: !2258, size: 64)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2233)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2226, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2226, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2261 = !DIDerivedType(tag: DW_TAG_member, scope: !2226, file: !379, line: 90, baseType: !2262, size: 16, offset: 112)
!2262 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2226, file: !379, line: 90, size: 16, elements: !2263)
!2263 = !{!2264, !2269}
!2264 = !DIDerivedType(tag: DW_TAG_member, scope: !2262, file: !379, line: 91, baseType: !2265, size: 16)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2262, file: !379, line: 91, size: 16, elements: !2266)
!2266 = !{!2267, !2268}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2265, file: !379, line: 96, baseType: !425, size: 8)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2265, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2262, file: !379, line: 100, baseType: !429, size: 16)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2226, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2226, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2226, file: !379, line: 131, baseType: !2273, size: 192, offset: 192)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2274)
!2274 = !{!2275, !2276, !2282}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2273, file: !320, line: 245, baseType: !2232, size: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2273, file: !320, line: 246, baseType: !2277, size: 32, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2278)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{null, !2281}
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2273, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2223, file: !379, line: 250, baseType: !2284, size: 288, offset: 384)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2285)
!2285 = !{!2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2284, file: !446, line: 26, baseType: !121, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2284, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2284, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2284, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2284, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2284, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2284, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2284, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2284, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2223, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2223, file: !379, line: 256, baseType: !2254, size: 64, offset: 704)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2223, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2223, file: !379, line: 300, baseType: !2299, size: 96, offset: 800)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2300)
!2300 = !{!2301, !2302, !2303}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2299, file: !379, line: 153, baseType: !22, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2299, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2299, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2223, file: !379, line: 325, baseType: !2305, size: 32, offset: 896)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 32)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2307)
!2307 = !{!2308, !2314, !2315}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2306, file: !296, line: 5074, baseType: !2309, size: 96)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2310)
!2310 = !{!2311, !2312, !2313}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2309, file: !472, line: 57, baseType: !475, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2309, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2309, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2306, file: !296, line: 5075, baseType: !2254, size: 64, offset: 96)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2306, file: !296, line: 5076, baseType: !2316, offset: 160)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2223, file: !379, line: 343, baseType: !2318, size: 64, offset: 928)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2319)
!2319 = !{!2320, !2321}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2318, file: !446, line: 63, baseType: !121, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2318, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2323, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2324, globals: !2326, splitDebugInlining: false, nameTableKind: None)
!2323 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2324 = !{!102, !144, !200, !154, !103, !2325, !24, !204, !344, !22, !121, !1604}
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32)
!2326 = !{!2215, !2327}
!2327 = !DIGlobalVariableExpression(var: !2328, expr: !DIExpression())
!2328 = distinct !DIGlobalVariable(name: "states_sz", scope: !2217, file: !2218, line: 279, type: !2329, isLocal: true, isDefinition: true)
!2329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 256, elements: !1612)
!2330 = !{!2331, !2332, !2333, !2334, !2335, !2336, !2337}
!2331 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2217, file: !2218, line: 271, type: !2221)
!2332 = !DILocalVariable(name: "buf", arg: 2, scope: !2217, file: !2218, line: 271, type: !344)
!2333 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2217, file: !2218, line: 271, type: !204)
!2334 = !DILocalVariable(name: "off", scope: !2217, file: !2218, line: 273, type: !204)
!2335 = !DILocalVariable(name: "bit", scope: !2217, file: !2218, line: 274, type: !154)
!2336 = !DILocalVariable(name: "thread_state", scope: !2217, file: !2218, line: 275, type: !154)
!2337 = !DILocalVariable(name: "index", scope: !2338, file: !2218, line: 293, type: !154)
!2338 = distinct !DILexicalBlock(scope: !2217, file: !2218, line: 293, column: 2)
!2339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1612)
!2340 = !DIGlobalVariableExpression(var: !2341, expr: !DIExpression())
!2341 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2342, file: !2450, line: 56, type: !2439, isLocal: false, isDefinition: true)
!2342 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2343, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2344, globals: !2447, splitDebugInlining: false, nameTableKind: None)
!2343 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2344 = !{!2345, !344, !102, !2445, !267, !200, !746, !103, !121, !1604, !2446}
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 32)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2347)
!2347 = !{!2348, !2406, !2418, !2419, !2420, !2421, !2427, !2440}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2346, file: !379, line: 247, baseType: !2349, size: 384)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2350)
!2350 = !{!2351, !2375, !2382, !2383, !2384, !2393, !2394, !2395}
!2351 = !DIDerivedType(tag: DW_TAG_member, scope: !2349, file: !379, line: 60, baseType: !2352, size: 64)
!2352 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2349, file: !379, line: 60, size: 64, elements: !2353)
!2353 = !{!2354, !2369}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2352, file: !379, line: 61, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2356)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2357)
!2357 = !{!2358, !2364}
!2358 = !DIDerivedType(tag: DW_TAG_member, scope: !2356, file: !325, line: 38, baseType: !2359, size: 32)
!2359 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2356, file: !325, line: 38, size: 32, elements: !2360)
!2360 = !{!2361, !2363}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2359, file: !325, line: 39, baseType: !2362, size: 32)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2359, file: !325, line: 40, baseType: !2362, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, scope: !2356, file: !325, line: 42, baseType: !2365, size: 32, offset: 32)
!2365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2356, file: !325, line: 42, size: 32, elements: !2366)
!2366 = !{!2367, !2368}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2365, file: !325, line: 43, baseType: !2362, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2365, file: !325, line: 44, baseType: !2362, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2352, file: !379, line: 62, baseType: !2370, size: 64)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2371)
!2371 = !{!2372}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2370, file: !404, line: 50, baseType: !2373, size: 64)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2374, size: 64, elements: !363)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2349, file: !379, line: 68, baseType: !2376, size: 32, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2378)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2379)
!2379 = !{!2380}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2378, file: !320, line: 232, baseType: !2381, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2356)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2349, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2349, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2384 = !DIDerivedType(tag: DW_TAG_member, scope: !2349, file: !379, line: 90, baseType: !2385, size: 16, offset: 112)
!2385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2349, file: !379, line: 90, size: 16, elements: !2386)
!2386 = !{!2387, !2392}
!2387 = !DIDerivedType(tag: DW_TAG_member, scope: !2385, file: !379, line: 91, baseType: !2388, size: 16)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2385, file: !379, line: 91, size: 16, elements: !2389)
!2389 = !{!2390, !2391}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2388, file: !379, line: 96, baseType: !425, size: 8)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2388, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2385, file: !379, line: 100, baseType: !429, size: 16)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2349, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2349, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2349, file: !379, line: 131, baseType: !2396, size: 192, offset: 192)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2397)
!2397 = !{!2398, !2399, !2405}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2396, file: !320, line: 245, baseType: !2355, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2396, file: !320, line: 246, baseType: !2400, size: 32, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2401)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 32)
!2402 = !DISubroutineType(types: !2403)
!2403 = !{null, !2404}
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2396, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2346, file: !379, line: 250, baseType: !2407, size: 288, offset: 384)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2408)
!2408 = !{!2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2407, file: !446, line: 26, baseType: !121, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2407, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2407, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2407, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2407, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2407, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2407, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2407, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2407, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2346, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2346, file: !379, line: 256, baseType: !2377, size: 64, offset: 704)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2346, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2346, file: !379, line: 300, baseType: !2422, size: 96, offset: 800)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2423)
!2423 = !{!2424, !2425, !2426}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2422, file: !379, line: 153, baseType: !22, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2422, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2422, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2346, file: !379, line: 325, baseType: !2428, size: 32, offset: 896)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2430)
!2430 = !{!2431, !2437, !2438}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2429, file: !296, line: 5074, baseType: !2432, size: 96)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2433)
!2433 = !{!2434, !2435, !2436}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2432, file: !472, line: 57, baseType: !475, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2432, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2432, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2429, file: !296, line: 5075, baseType: !2377, size: 64, offset: 96)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2429, file: !296, line: 5076, baseType: !2439, offset: 160)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2346, file: !379, line: 343, baseType: !2441, size: 64, offset: 928)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2442)
!2442 = !{!2443, !2444}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2441, file: !446, line: 63, baseType: !121, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2441, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 32)
!2447 = !{!2340, !2448, !2451, !2453}
!2448 = !DIGlobalVariableExpression(var: !2449, expr: !DIExpression())
!2449 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2342, file: !2450, line: 404, type: !103, isLocal: true, isDefinition: true)
!2450 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2451 = !DIGlobalVariableExpression(var: !2452, expr: !DIExpression())
!2452 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2342, file: !2450, line: 405, type: !103, isLocal: true, isDefinition: true)
!2453 = !DIGlobalVariableExpression(var: !2454, expr: !DIExpression())
!2454 = distinct !DIGlobalVariable(name: "pending_current", scope: !2342, file: !2450, line: 425, type: !2345, isLocal: true, isDefinition: true)
!2455 = !DIGlobalVariableExpression(var: !2456, expr: !DIExpression())
!2456 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2457, file: !2487, line: 15, type: !1604, isLocal: true, isDefinition: true)
!2457 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2458, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2459, globals: !2484, splitDebugInlining: false, nameTableKind: None)
!2458 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2459 = !{!200, !102, !746, !121, !1604, !103, !2460, !344, !202}
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2462)
!2462 = !{!2463, !2478, !2483}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2461, file: !320, line: 245, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2465)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2466)
!2466 = !{!2467, !2473}
!2467 = !DIDerivedType(tag: DW_TAG_member, scope: !2465, file: !325, line: 38, baseType: !2468, size: 32)
!2468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2465, file: !325, line: 38, size: 32, elements: !2469)
!2469 = !{!2470, !2472}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2468, file: !325, line: 39, baseType: !2471, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2468, file: !325, line: 40, baseType: !2471, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, scope: !2465, file: !325, line: 42, baseType: !2474, size: 32, offset: 32)
!2474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2465, file: !325, line: 42, size: 32, elements: !2475)
!2475 = !{!2476, !2477}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2474, file: !325, line: 43, baseType: !2471, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2474, file: !325, line: 44, baseType: !2471, size: 32)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2461, file: !320, line: 246, baseType: !2479, size: 32, offset: 64)
!2479 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2480)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 32)
!2481 = !DISubroutineType(types: !2482)
!2482 = !{null, !2460}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2461, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2484 = !{!2455, !2485, !2489, !2491}
!2485 = !DIGlobalVariableExpression(var: !2486, expr: !DIExpression())
!2486 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2457, file: !2487, line: 19, type: !2488, isLocal: true, isDefinition: true)
!2487 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2489 = !DIGlobalVariableExpression(var: !2490, expr: !DIExpression())
!2490 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2457, file: !2487, line: 25, type: !103, isLocal: true, isDefinition: true)
!2491 = !DIGlobalVariableExpression(var: !2492, expr: !DIExpression())
!2492 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2457, file: !2487, line: 17, type: !2493, isLocal: true, isDefinition: true)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2465)
!2494 = !DIGlobalVariableExpression(var: !2495, expr: !DIExpression())
!2495 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2496, file: !2515, line: 55, type: !2516, isLocal: true, isDefinition: true, align: 32)
!2496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2497, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2498, globals: !2514, splitDebugInlining: false, nameTableKind: None)
!2497 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2498 = !{!102, !200, !103, !2499}
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2501)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2502)
!2502 = !{!2503, !2509}
!2503 = !DIDerivedType(tag: DW_TAG_member, scope: !2501, file: !325, line: 38, baseType: !2504, size: 32)
!2504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2501, file: !325, line: 38, size: 32, elements: !2505)
!2505 = !{!2506, !2508}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2504, file: !325, line: 39, baseType: !2507, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2504, file: !325, line: 40, baseType: !2507, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, scope: !2501, file: !325, line: 42, baseType: !2510, size: 32, offset: 32)
!2510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2501, file: !325, line: 42, size: 32, elements: !2511)
!2511 = !{!2512, !2513}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2510, file: !325, line: 43, baseType: !2507, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2510, file: !325, line: 44, baseType: !2507, size: 32)
!2514 = !{!2494}
!2515 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2517)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2518)
!2518 = !{!2519, !2526}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2517, file: !132, line: 60, baseType: !2520, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!2521 = !DISubroutineType(types: !2522)
!2522 = !{!103, !2523}
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2525)
!2525 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !132, line: 48, flags: DIFlagFwdDecl)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2517, file: !132, line: 65, baseType: !2523, size: 32, offset: 32)
!2527 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2528, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2528 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2531 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2532, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2532 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2533 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2534, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2535, retainedTypes: !2543, splitDebugInlining: false, nameTableKind: None)
!2534 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2535 = !{!30, !2536}
!2536 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2537, line: 54, baseType: !32, size: 32, elements: !2538)
!2537 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2538 = !{!2539, !2540, !2541, !2542}
!2539 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2540 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2541 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2542 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2543 = !{!102, !204, !267, !24, !2544, !22, !2550, !103, !866, !2565}
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2537, line: 58, baseType: !2546)
!2546 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2537, line: 58, size: 64, elements: !2547)
!2547 = !{!2548}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2546, file: !2537, line: 58, baseType: !2549, size: 64)
!2549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 64, elements: !1612)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 32)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2537, line: 68, size: 128, elements: !2552)
!2552 = !{!2553, !2556, !2557, !2558}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2551, file: !2537, line: 69, baseType: !2554, size: 64)
!2554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2555, size: 64, elements: !363)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2537, line: 61, baseType: !121)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2551, file: !2537, line: 70, baseType: !2555, size: 32, offset: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2551, file: !2537, line: 71, baseType: !121, size: 32, offset: 96)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2551, file: !2537, line: 77, baseType: !2559, offset: 128)
!2559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2560, elements: !2563)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2537, line: 64, size: 32, elements: !2561)
!2561 = !{!2562}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2560, file: !2537, line: 65, baseType: !2555, size: 32)
!2563 = !{!2564}
!2564 = !DISubrange(count: 0)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!2566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2568, retainedTypes: !2588, splitDebugInlining: false, nameTableKind: None)
!2567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2568 = !{!2569, !2577}
!2569 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2570, line: 69, baseType: !32, size: 32, elements: !2571)
!2570 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2571 = !{!2572, !2573, !2574, !2575, !2576}
!2572 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2573 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2574 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2575 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2576 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2577 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2570, line: 56, baseType: !32, size: 32, elements: !2578)
!2578 = !{!2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587}
!2579 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2580 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2581 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2582 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2583 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2584 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2585 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2586 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2587 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2588 = !{!103, !2569, !2577, !2589, !426, !164, !2591, !2592, !155, !430, !144, !204, !102, !22, !32, !2594, !2595, !2596, !354, !2597, !203, !2598, !2590, !2599, !2600, !2601, !2602}
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2570, line: 31, baseType: !2590)
!2590 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !203)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !205, line: 329, baseType: !32)
!2592 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2570, line: 32, baseType: !2593)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1605)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !205, line: 145, baseType: !103)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 32)
!2603 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2604, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2604 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2606, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2607, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2606 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2607 = !{!2608, !30}
!2608 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2609, line: 27, baseType: !32, size: 32, elements: !2610)
!2609 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2610 = !{!2611, !2612, !2613, !2614, !2615}
!2611 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2612 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2613 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2614 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2615 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2616 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2617, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2618, retainedTypes: !2619, splitDebugInlining: false, nameTableKind: None)
!2617 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2618 = !{!584, !2608, !30}
!2619 = !{!772, !2620, !102, !103, !746, !121, !154, !2637}
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2622)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2623)
!2623 = !{!2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2622, file: !515, line: 413, baseType: !1720, size: 256)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2622, file: !515, line: 414, baseType: !1722, size: 768, offset: 256)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2622, file: !515, line: 415, baseType: !1720, size: 256, offset: 1024)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2622, file: !515, line: 416, baseType: !1722, size: 768, offset: 1280)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2622, file: !515, line: 417, baseType: !1720, size: 256, offset: 2048)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2622, file: !515, line: 418, baseType: !1722, size: 768, offset: 2304)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2622, file: !515, line: 419, baseType: !1720, size: 256, offset: 3072)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2622, file: !515, line: 420, baseType: !1722, size: 768, offset: 3328)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2622, file: !515, line: 421, baseType: !1720, size: 256, offset: 4096)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2622, file: !515, line: 422, baseType: !1733, size: 1792, offset: 4352)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2622, file: !515, line: 423, baseType: !1737, size: 1920, offset: 6144)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2622, file: !515, line: 424, baseType: !1742, size: 20608, offset: 8064)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2622, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2639)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2640)
!2640 = !{!2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2639, file: !515, line: 447, baseType: !519, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2639, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2639, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2639, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2639, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2639, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2639, file: !515, line: 453, baseType: !1757, size: 96, offset: 192)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2639, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2639, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2639, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2639, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2639, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2639, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2639, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2639, file: !515, line: 461, baseType: !1768, size: 64, offset: 512)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2639, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2639, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2639, file: !515, line: 464, baseType: !1772, size: 128, offset: 640)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2639, file: !515, line: 465, baseType: !1774, size: 160, offset: 768)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2639, file: !515, line: 466, baseType: !1776, size: 160, offset: 928)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2639, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2662 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2663, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2663 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2664 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2665, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2666, splitDebugInlining: false, nameTableKind: None)
!2665 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2666 = !{!102, !103, !22, !2667}
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2669)
!2669 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2670)
!2670 = !{!2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2669, file: !515, line: 447, baseType: !519, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2669, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2669, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2669, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2669, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2669, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2669, file: !515, line: 453, baseType: !1757, size: 96, offset: 192)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2669, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2669, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2669, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2669, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2669, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2669, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2669, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2669, file: !515, line: 461, baseType: !1768, size: 64, offset: 512)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2669, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2669, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2669, file: !515, line: 464, baseType: !1772, size: 128, offset: 640)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2669, file: !515, line: 465, baseType: !1774, size: 160, offset: 768)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2669, file: !515, line: 466, baseType: !1776, size: 160, offset: 928)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2669, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2692 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2693, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2694, splitDebugInlining: false, nameTableKind: None)
!2693 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2694 = !{!2695, !102, !103}
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2697)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2698)
!2698 = !{!2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2697, file: !515, line: 447, baseType: !519, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2697, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2697, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2697, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2697, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2697, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2697, file: !515, line: 453, baseType: !1757, size: 96, offset: 192)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2697, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2697, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2697, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2697, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2697, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2697, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2697, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2697, file: !515, line: 461, baseType: !1768, size: 64, offset: 512)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2697, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2697, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2697, file: !515, line: 464, baseType: !1772, size: 128, offset: 640)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2697, file: !515, line: 465, baseType: !1774, size: 160, offset: 768)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2697, file: !515, line: 466, baseType: !1776, size: 160, offset: 928)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2697, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2720 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2721, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2722, splitDebugInlining: false, nameTableKind: None)
!2721 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2722 = !{!2723, !121, !102, !103}
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 32)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2725, line: 98, size: 256, elements: !2726)
!2725 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2726 = !{!2727, !2732, !2737, !2742, !2747, !2752, !2757, !2762}
!2727 = !DIDerivedType(tag: DW_TAG_member, scope: !2724, file: !2725, line: 99, baseType: !2728, size: 32)
!2728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2724, file: !2725, line: 99, size: 32, elements: !2729)
!2729 = !{!2730, !2731}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2728, file: !2725, line: 99, baseType: !121, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2728, file: !2725, line: 99, baseType: !121, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, scope: !2724, file: !2725, line: 100, baseType: !2733, size: 32, offset: 32)
!2733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2724, file: !2725, line: 100, size: 32, elements: !2734)
!2734 = !{!2735, !2736}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2733, file: !2725, line: 100, baseType: !121, size: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2733, file: !2725, line: 100, baseType: !121, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, scope: !2724, file: !2725, line: 101, baseType: !2738, size: 32, offset: 64)
!2738 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2724, file: !2725, line: 101, size: 32, elements: !2739)
!2739 = !{!2740, !2741}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2738, file: !2725, line: 101, baseType: !121, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2738, file: !2725, line: 101, baseType: !121, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, scope: !2724, file: !2725, line: 102, baseType: !2743, size: 32, offset: 96)
!2743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2724, file: !2725, line: 102, size: 32, elements: !2744)
!2744 = !{!2745, !2746}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2743, file: !2725, line: 102, baseType: !121, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2743, file: !2725, line: 102, baseType: !121, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, scope: !2724, file: !2725, line: 103, baseType: !2748, size: 32, offset: 128)
!2748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2724, file: !2725, line: 103, size: 32, elements: !2749)
!2749 = !{!2750, !2751}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2748, file: !2725, line: 103, baseType: !121, size: 32)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2748, file: !2725, line: 103, baseType: !121, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, scope: !2724, file: !2725, line: 104, baseType: !2753, size: 32, offset: 160)
!2753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2724, file: !2725, line: 104, size: 32, elements: !2754)
!2754 = !{!2755, !2756}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2753, file: !2725, line: 104, baseType: !121, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2753, file: !2725, line: 104, baseType: !121, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, scope: !2724, file: !2725, line: 105, baseType: !2758, size: 32, offset: 192)
!2758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2724, file: !2725, line: 105, size: 32, elements: !2759)
!2759 = !{!2760, !2761}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2758, file: !2725, line: 105, baseType: !121, size: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2758, file: !2725, line: 105, baseType: !121, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2724, file: !2725, line: 106, baseType: !121, size: 32, offset: 224)
!2763 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2764, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2607, retainedTypes: !2765, splitDebugInlining: false, nameTableKind: None)
!2764 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2765 = !{!2766, !102, !103, !2791, !2565, !121}
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2768)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2769)
!2769 = !{!2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2768, file: !515, line: 447, baseType: !519, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2768, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2768, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2768, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2768, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2768, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2768, file: !515, line: 453, baseType: !1757, size: 96, offset: 192)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2768, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2768, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2768, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2768, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2768, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2768, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2768, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2768, file: !515, line: 461, baseType: !1768, size: 64, offset: 512)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2768, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2768, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2768, file: !515, line: 464, baseType: !1772, size: 128, offset: 640)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2768, file: !515, line: 465, baseType: !1774, size: 160, offset: 768)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2768, file: !515, line: 466, baseType: !1776, size: 160, offset: 928)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2768, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2725, line: 141, baseType: !2793)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2725, line: 97, size: 256, elements: !2794)
!2794 = !{!2795}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2793, file: !2725, line: 107, baseType: !2796, size: 256)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2725, line: 98, size: 256, elements: !2797)
!2797 = !{!2798, !2803, !2808, !2813, !2818, !2823, !2828, !2833}
!2798 = !DIDerivedType(tag: DW_TAG_member, scope: !2796, file: !2725, line: 99, baseType: !2799, size: 32)
!2799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2796, file: !2725, line: 99, size: 32, elements: !2800)
!2800 = !{!2801, !2802}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2799, file: !2725, line: 99, baseType: !121, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2799, file: !2725, line: 99, baseType: !121, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, scope: !2796, file: !2725, line: 100, baseType: !2804, size: 32, offset: 32)
!2804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2796, file: !2725, line: 100, size: 32, elements: !2805)
!2805 = !{!2806, !2807}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2804, file: !2725, line: 100, baseType: !121, size: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2804, file: !2725, line: 100, baseType: !121, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, scope: !2796, file: !2725, line: 101, baseType: !2809, size: 32, offset: 64)
!2809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2796, file: !2725, line: 101, size: 32, elements: !2810)
!2810 = !{!2811, !2812}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2809, file: !2725, line: 101, baseType: !121, size: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2809, file: !2725, line: 101, baseType: !121, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, scope: !2796, file: !2725, line: 102, baseType: !2814, size: 32, offset: 96)
!2814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2796, file: !2725, line: 102, size: 32, elements: !2815)
!2815 = !{!2816, !2817}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2814, file: !2725, line: 102, baseType: !121, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2814, file: !2725, line: 102, baseType: !121, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, scope: !2796, file: !2725, line: 103, baseType: !2819, size: 32, offset: 128)
!2819 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2796, file: !2725, line: 103, size: 32, elements: !2820)
!2820 = !{!2821, !2822}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2819, file: !2725, line: 103, baseType: !121, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2819, file: !2725, line: 103, baseType: !121, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, scope: !2796, file: !2725, line: 104, baseType: !2824, size: 32, offset: 160)
!2824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2796, file: !2725, line: 104, size: 32, elements: !2825)
!2825 = !{!2826, !2827}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2824, file: !2725, line: 104, baseType: !121, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2824, file: !2725, line: 104, baseType: !121, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, scope: !2796, file: !2725, line: 105, baseType: !2829, size: 32, offset: 192)
!2829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2796, file: !2725, line: 105, size: 32, elements: !2830)
!2830 = !{!2831, !2832}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2829, file: !2725, line: 105, baseType: !121, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2829, file: !2725, line: 105, baseType: !121, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2796, file: !2725, line: 106, baseType: !121, size: 32, offset: 224)
!2834 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2835, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1705, retainedTypes: !2836, splitDebugInlining: false, nameTableKind: None)
!2835 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2836 = !{!772, !746, !154, !121, !2837, !2854}
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2839)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2840)
!2840 = !{!2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2839, file: !515, line: 413, baseType: !1720, size: 256)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2839, file: !515, line: 414, baseType: !1722, size: 768, offset: 256)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2839, file: !515, line: 415, baseType: !1720, size: 256, offset: 1024)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2839, file: !515, line: 416, baseType: !1722, size: 768, offset: 1280)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2839, file: !515, line: 417, baseType: !1720, size: 256, offset: 2048)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2839, file: !515, line: 418, baseType: !1722, size: 768, offset: 2304)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2839, file: !515, line: 419, baseType: !1720, size: 256, offset: 3072)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2839, file: !515, line: 420, baseType: !1722, size: 768, offset: 3328)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2839, file: !515, line: 421, baseType: !1720, size: 256, offset: 4096)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2839, file: !515, line: 422, baseType: !1733, size: 1792, offset: 4352)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2839, file: !515, line: 423, baseType: !1737, size: 1920, offset: 6144)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2839, file: !515, line: 424, baseType: !1742, size: 20608, offset: 8064)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2839, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2856)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2857)
!2857 = !{!2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2856, file: !515, line: 447, baseType: !519, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2856, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2856, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2856, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2856, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2856, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2856, file: !515, line: 453, baseType: !1757, size: 96, offset: 192)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2856, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2856, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2856, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2856, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2856, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2856, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2856, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2856, file: !515, line: 461, baseType: !1768, size: 64, offset: 512)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2856, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2856, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2856, file: !515, line: 464, baseType: !1772, size: 128, offset: 640)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2856, file: !515, line: 465, baseType: !1774, size: 160, offset: 768)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2856, file: !515, line: 466, baseType: !1776, size: 160, offset: 928)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2856, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2881, splitDebugInlining: false, nameTableKind: None)
!2880 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2881 = !{!2882, !102, !103}
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2884)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2885)
!2885 = !{!2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2884, file: !515, line: 447, baseType: !519, size: 32)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2884, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2884, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2884, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2884, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2884, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2884, file: !515, line: 453, baseType: !1757, size: 96, offset: 192)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2884, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2884, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2884, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2884, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2884, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2884, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2884, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2884, file: !515, line: 461, baseType: !1768, size: 64, offset: 512)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2884, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2884, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2884, file: !515, line: 464, baseType: !1772, size: 128, offset: 640)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2884, file: !515, line: 465, baseType: !1774, size: 160, offset: 768)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2884, file: !515, line: 466, baseType: !1776, size: 160, offset: 928)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2884, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2907 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2908, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2909, splitDebugInlining: false, nameTableKind: None)
!2908 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2909 = !{!146, !344, !204, !230, !2910, !155, !102}
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 32)
!2911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2913, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2914, splitDebugInlining: false, nameTableKind: None)
!2913 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2914 = !{!2915}
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 32)
!2916 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !2917)
!2917 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !2918)
!2918 = !{!2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2917, file: !116, line: 502, baseType: !120, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2917, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2917, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2917, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2917, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2917, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2917, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2917, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2917, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2917, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2917, file: !116, line: 512, baseType: !840, size: 64, offset: 320)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2917, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2917, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2917, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2917, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2917, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2917, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2917, file: !116, line: 519, baseType: !840, size: 64, offset: 576)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2917, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2917, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2917, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2917, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2917, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2917, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2917, file: !116, line: 526, baseType: !840, size: 64, offset: 832)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2917, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2917, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2917, file: !116, line: 529, baseType: !840, size: 64, offset: 960)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2917, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2917, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!2949 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2950, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2950 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2951 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2952, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2953, retainedTypes: !2969, splitDebugInlining: false, nameTableKind: None)
!2952 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!2953 = !{!2954, !2961, !2965}
!2954 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2955, line: 38, baseType: !32, size: 32, elements: !2956)
!2955 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2956 = !{!2957, !2958, !2959, !2960}
!2957 = !DIEnumerator(name: "HAL_OK", value: 0)
!2958 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2959 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2960 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2961 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !813, line: 184, baseType: !32, size: 32, elements: !2962)
!2962 = !{!2963, !2964}
!2963 = !DIEnumerator(name: "RESET", value: 0)
!2964 = !DIEnumerator(name: "SET", value: 1)
!2965 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !813, line: 190, baseType: !32, size: 32, elements: !2966)
!2966 = !{!2967, !2968}
!2967 = !DIEnumerator(name: "DISABLE", value: 0)
!2968 = !DIEnumerator(name: "ENABLE", value: 1)
!2969 = !{!102, !2970, !154, !121, !1606, !3004, !3010, !3021, !429, !3022, !1604}
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !2972)
!2972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !2973)
!2973 = !{!2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2972, file: !116, line: 502, baseType: !120, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2972, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2972, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2972, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2972, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2972, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2972, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2972, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2972, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2972, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2972, file: !116, line: 512, baseType: !840, size: 64, offset: 320)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2972, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2972, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2972, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2972, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2972, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2972, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2972, file: !116, line: 519, baseType: !840, size: 64, offset: 576)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2972, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2972, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2972, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2972, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2972, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2972, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2972, file: !116, line: 526, baseType: !840, size: 64, offset: 832)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2972, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2972, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2972, file: !116, line: 529, baseType: !840, size: 64, offset: 960)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2972, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2972, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 494, baseType: !3006)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 490, size: 64, elements: !3007)
!3007 = !{!3008, !3009}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3006, file: !116, line: 492, baseType: !120, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3006, file: !116, line: 493, baseType: !120, size: 32, offset: 32)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 369, baseType: !3012)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 224, elements: !3013)
!3013 = !{!3014, !3015, !3016, !3017, !3018, !3019, !3020}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3012, file: !116, line: 362, baseType: !120, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3012, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3012, file: !116, line: 364, baseType: !120, size: 32, offset: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3012, file: !116, line: 365, baseType: !120, size: 32, offset: 96)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3012, file: !116, line: 366, baseType: !120, size: 32, offset: 128)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3012, file: !116, line: 367, baseType: !120, size: 32, offset: 160)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3012, file: !116, line: 368, baseType: !120, size: 32, offset: 192)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 32)
!3023 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 441, baseType: !3024)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 430, size: 320, elements: !3025)
!3025 = !{!3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3024, file: !116, line: 432, baseType: !120, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3024, file: !116, line: 433, baseType: !120, size: 32, offset: 32)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3024, file: !116, line: 434, baseType: !120, size: 32, offset: 64)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3024, file: !116, line: 435, baseType: !120, size: 32, offset: 96)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3024, file: !116, line: 436, baseType: !120, size: 32, offset: 128)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3024, file: !116, line: 437, baseType: !120, size: 32, offset: 160)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3024, file: !116, line: 438, baseType: !120, size: 32, offset: 192)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3024, file: !116, line: 439, baseType: !120, size: 32, offset: 224)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3024, file: !116, line: 440, baseType: !1239, size: 64, offset: 256)
!3035 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3036, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3037, retainedTypes: !3038, splitDebugInlining: false, nameTableKind: None)
!3036 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!3037 = !{!812}
!3038 = !{!3039, !121, !3047, !3053, !3064}
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !515, line: 770, baseType: !3041)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 764, size: 128, elements: !3042)
!3042 = !{!3043, !3044, !3045, !3046}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3041, file: !515, line: 766, baseType: !120, size: 32)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3041, file: !515, line: 767, baseType: !120, size: 32, offset: 32)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3041, file: !515, line: 768, baseType: !120, size: 32, offset: 64)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3041, file: !515, line: 769, baseType: !519, size: 32, offset: 96)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 32)
!3048 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 494, baseType: !3049)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 490, size: 64, elements: !3050)
!3050 = !{!3051, !3052}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3049, file: !116, line: 492, baseType: !120, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3049, file: !116, line: 493, baseType: !120, size: 32, offset: 32)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 369, baseType: !3055)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 224, elements: !3056)
!3056 = !{!3057, !3058, !3059, !3060, !3061, !3062, !3063}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3055, file: !116, line: 362, baseType: !120, size: 32)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3055, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3055, file: !116, line: 364, baseType: !120, size: 32, offset: 64)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3055, file: !116, line: 365, baseType: !120, size: 32, offset: 96)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3055, file: !116, line: 366, baseType: !120, size: 32, offset: 128)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3055, file: !116, line: 367, baseType: !120, size: 32, offset: 160)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3055, file: !116, line: 368, baseType: !120, size: 32, offset: 192)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !3066)
!3066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !3067)
!3067 = !{!3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3066, file: !116, line: 502, baseType: !120, size: 32)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3066, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3066, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3066, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3066, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3066, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3066, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3066, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3066, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3066, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3066, file: !116, line: 512, baseType: !840, size: 64, offset: 320)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3066, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3066, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3066, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3066, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3066, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3066, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3066, file: !116, line: 519, baseType: !840, size: 64, offset: 576)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3066, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3066, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3066, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3066, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3066, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3066, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3066, file: !116, line: 526, baseType: !840, size: 64, offset: 832)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3066, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3066, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3066, file: !116, line: 529, baseType: !840, size: 64, offset: 960)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3066, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3066, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!3098 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3099, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3100, splitDebugInlining: false, nameTableKind: None)
!3099 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!3100 = !{!102, !204}
!3101 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3102, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3103, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3102 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!3103 = !{!3104, !3111, !30}
!3104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3105, line: 14, baseType: !32, size: 32, elements: !3106)
!3105 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3106 = !{!3107, !3108, !3109, !3110}
!3107 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3108 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3109 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3110 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3111 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3105, line: 42, baseType: !32, size: 32, elements: !3112)
!3112 = !{!3113, !3114, !3115, !3116, !3117, !3118}
!3113 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3114 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3115 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3116 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3117 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3118 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3119 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3120, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3120 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!3121 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3122, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3123, retainedTypes: !3134, splitDebugInlining: false, nameTableKind: None)
!3122 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!3123 = !{!3124, !30}
!3124 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !296, line: 5323, baseType: !32, size: 32, elements: !3125)
!3125 = !{!3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133}
!3126 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!3127 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!3128 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!3129 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!3130 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!3131 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!3132 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!3133 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!3134 = !{!102, !154, !3135, !344, !3145, !157, !3146, !103, !3147, !312}
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 32)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !3137, line: 25, size: 64, elements: !3138)
!3137 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3138 = !{!3139, !3144}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3136, file: !3137, line: 26, baseType: !3140, size: 32)
!3140 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !3141)
!3141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !3142)
!3142 = !{!3143}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !3141, file: !303, line: 36, baseType: !312, size: 32)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3136, file: !3137, line: 27, baseType: !102, size: 32, offset: 32)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !3149)
!3149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !3150)
!3150 = !{!3151, !3157}
!3151 = !DIDerivedType(tag: DW_TAG_member, scope: !3149, file: !325, line: 38, baseType: !3152, size: 32)
!3152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3149, file: !325, line: 38, size: 32, elements: !3153)
!3153 = !{!3154, !3156}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3152, file: !325, line: 39, baseType: !3155, size: 32)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3152, file: !325, line: 40, baseType: !3155, size: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, scope: !3149, file: !325, line: 42, baseType: !3158, size: 32, offset: 32)
!3158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3149, file: !325, line: 42, size: 32, elements: !3159)
!3159 = !{!3160, !3161}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3158, file: !325, line: 43, baseType: !3155, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3158, file: !325, line: 44, baseType: !3155, size: 32)
!3162 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3163, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3164, splitDebugInlining: false, nameTableKind: None)
!3163 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!3164 = !{!22, !102, !103}
!3165 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3166, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3166 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!3167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!3169 = !{!"Ubuntu clang version 14.0.6"}
!3170 = !{i32 7, !"Dwarf Version", i32 4}
!3171 = !{i32 2, !"Debug Info Version", i32 3}
!3172 = !{i32 1, !"wchar_size", i32 4}
!3173 = !{i32 1, !"min_enum_size", i32 4}
!3174 = !{i32 1, !"branch-target-enforcement", i32 0}
!3175 = !{i32 1, !"sign-return-address", i32 0}
!3176 = !{i32 1, !"sign-return-address-all", i32 0}
!3177 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3178 = !{i32 7, !"frame-pointer", i32 2}
!3179 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3180, file: !3180, line: 26, type: !3181, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !317)
!3180 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3181 = !DISubroutineType(types: !3182)
!3182 = !{null}
!3183 = !DILocation(line: 28, column: 1, scope: !3179)
!3184 = !{i64 2155117618, i64 2155117638, i64 2155117701}
!3185 = !DILocation(line: 29, column: 1, scope: !3179)
!3186 = !{i64 2155118033, i64 2155118053, i64 2155118116}
!3187 = !DILocation(line: 30, column: 1, scope: !3179)
!3188 = !{i64 2155118452, i64 2155118472, i64 2155118535}
!3189 = !DILocation(line: 31, column: 1, scope: !3179)
!3190 = !{i64 2155118871, i64 2155118891, i64 2155118954}
!3191 = !DILocation(line: 33, column: 1, scope: !3179)
!3192 = !{i64 2155119163, i64 2155119183, i64 2155119246}
!3193 = !DILocation(line: 35, column: 1, scope: !3179)
!3194 = !{i64 2155119488, i64 2155119508, i64 2155119571}
!3195 = !DILocation(line: 50, column: 1, scope: !3179)
!3196 = !{i64 2155119915, i64 2155119935, i64 2155119998}
!3197 = !DILocation(line: 54, column: 1, scope: !3179)
!3198 = !{i64 2155120354, i64 2155120374, i64 2155120437}
!3199 = !DILocation(line: 61, column: 1, scope: !3179)
!3200 = !{i64 2155120671, i64 2155120691, i64 2155120754}
!3201 = !DILocation(line: 63, column: 1, scope: !3179)
!3202 = !{i64 2155121051, i64 2155121071, i64 2155121134}
!3203 = !DILocation(line: 64, column: 1, scope: !3179)
!3204 = !{i64 2155121573, i64 2155121593, i64 2155121656}
!3205 = !DILocation(line: 65, column: 1, scope: !3179)
!3206 = !{i64 2155122071, i64 2155122091, i64 2155122154}
!3207 = !DILocation(line: 66, column: 1, scope: !3179)
!3208 = !{i64 2155122553, i64 2155122573, i64 2155122636}
!3209 = !DILocation(line: 67, column: 1, scope: !3179)
!3210 = !{i64 2155123060, i64 2155123080, i64 2155123143}
!3211 = !DILocation(line: 68, column: 1, scope: !3179)
!3212 = !{i64 2155123548, i64 2155123568, i64 2155123631}
!3213 = !DILocation(line: 70, column: 1, scope: !3179)
!3214 = !{i64 2155124016, i64 2155124036, i64 2155124099}
!3215 = !DILocation(line: 71, column: 1, scope: !3179)
!3216 = !{i64 2155124458, i64 2155124478, i64 2155124541}
!3217 = !DILocation(line: 72, column: 1, scope: !3179)
!3218 = !{i64 2155124916, i64 2155124936, i64 2155124999}
!3219 = !DILocation(line: 79, column: 1, scope: !3179)
!3220 = !{i64 2155125370, i64 2155125390, i64 2155125453}
!3221 = !DILocation(line: 80, column: 1, scope: !3179)
!3222 = !{i64 2155125881, i64 2155125901, i64 2155125964}
!3223 = !DILocation(line: 82, column: 1, scope: !3179)
!3224 = !{i64 2155130433, i64 2155130453, i64 2155130516}
!3225 = !DILocation(line: 97, column: 1, scope: !3179)
!3226 = !{i64 2155130770, i64 2155130790, i64 2155130853}
!3227 = !DILocation(line: 99, column: 1, scope: !3179)
!3228 = !{i64 2155130988, i64 2155131008, i64 2155131071}
!3229 = !DILocation(line: 102, column: 1, scope: !3179)
!3230 = !{i64 2155131245, i64 2155131265, i64 2155131328}
!3231 = !DILocation(line: 105, column: 1, scope: !3179)
!3232 = !{i64 2155131485, i64 2155131505, i64 2155131568}
!3233 = !DILocation(line: 115, column: 1, scope: !3179)
!3234 = !{i64 2155131824, i64 2155131844, i64 2155131907}
!3235 = !DILocation(line: 118, column: 1, scope: !3179)
!3236 = !{i64 2155132168, i64 2155132188, i64 2155132251}
!3237 = !DILocation(line: 32, column: 1, scope: !3238)
!3238 = !DILexicalBlockFile(scope: !3179, file: !3239, discriminator: 0)
!3239 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3240 = !{i64 2155132524, i64 2155132544, i64 2155132607}
!3241 = !DILocation(line: 33, column: 1, scope: !3238)
!3242 = !{i64 2155133036, i64 2155133056, i64 2155133119}
!3243 = !DILocation(line: 53, column: 1, scope: !3238)
!3244 = !{i64 2155133544, i64 2155133564, i64 2155133627}
!3245 = !DILocation(line: 54, column: 1, scope: !3238)
!3246 = !{i64 2155133962, i64 2155133982, i64 2155134045}
!3247 = !DILocation(line: 55, column: 1, scope: !3238)
!3248 = !{i64 2155134380, i64 2155134400, i64 2155134463}
!3249 = !DILocation(line: 56, column: 1, scope: !3238)
!3250 = !{i64 2155134798, i64 2155134818, i64 2155134881}
!3251 = !DILocation(line: 57, column: 1, scope: !3238)
!3252 = !{i64 2155135216, i64 2155135236, i64 2155135299}
!3253 = !DILocation(line: 58, column: 1, scope: !3238)
!3254 = !{i64 2155135634, i64 2155135654, i64 2155135717}
!3255 = !DILocation(line: 59, column: 1, scope: !3238)
!3256 = !{i64 2155136052, i64 2155136072, i64 2155136135}
!3257 = !DILocation(line: 60, column: 1, scope: !3238)
!3258 = !{i64 2155136476, i64 2155136496, i64 2155136559}
!3259 = !DILocation(line: 61, column: 1, scope: !3238)
!3260 = !{i64 2155136793, i64 2155136813, i64 2155136876}
!3261 = !DILocation(line: 70, column: 1, scope: !3238)
!3262 = !{i64 2155137022, i64 2155137042, i64 2155137105}
!3263 = !DILocation(line: 72, column: 1, scope: !3238)
!3264 = !{i64 2155137354, i64 2155137374, i64 2155137437}
!3265 = !DILocation(line: 73, column: 1, scope: !3238)
!3266 = !{i64 2155137804, i64 2155137824, i64 2155137887}
!3267 = !DILocation(line: 74, column: 1, scope: !3238)
!3268 = !{i64 2155138254, i64 2155138274, i64 2155138337}
!3269 = !DILocation(line: 75, column: 1, scope: !3238)
!3270 = !{i64 2155138704, i64 2155138724, i64 2155138787}
!3271 = !DILocation(line: 76, column: 1, scope: !3238)
!3272 = !{i64 2155139154, i64 2155139174, i64 2155139237}
!3273 = !DILocation(line: 77, column: 1, scope: !3238)
!3274 = !{i64 2155139604, i64 2155139624, i64 2155139687}
!3275 = !DILocation(line: 78, column: 1, scope: !3238)
!3276 = !{i64 2155144115, i64 2155144135, i64 2155144198}
!3277 = !DILocation(line: 79, column: 1, scope: !3238)
!3278 = !{i64 2155144565, i64 2155144585, i64 2155144648}
!3279 = !DILocation(line: 80, column: 1, scope: !3238)
!3280 = !{i64 2155145018, i64 2155145038, i64 2155145101}
!3281 = !DILocation(line: 84, column: 1, scope: !3238)
!3282 = !{i64 2155145350, i64 2155145370, i64 2155145433}
!3283 = !DILocation(line: 91, column: 1, scope: !3238)
!3284 = !{i64 2155145747, i64 2155145767, i64 2155145830}
!3285 = !DILocation(line: 93, column: 1, scope: !3238)
!3286 = !{i64 2155146114, i64 2155146134, i64 2155146197}
!3287 = !DILocation(line: 106, column: 1, scope: !3238)
!3288 = !{i64 2155146384, i64 2155146404, i64 2155146467}
!3289 = !DILocation(line: 11, column: 1, scope: !3290)
!3290 = !DILexicalBlockFile(scope: !3179, file: !3291, discriminator: 0)
!3291 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3292 = distinct !DISubprogram(name: "main", scope: !3293, file: !3293, line: 12, type: !3181, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !3294)
!3293 = !DIFile(filename: "zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3294 = !{!3295}
!3295 = !DILocalVariable(name: "s", scope: !3296, file: !3293, line: 19, type: !344)
!3296 = distinct !DILexicalBlock(scope: !3292, file: !3293, line: 18, column: 12)
!3297 = !DILocation(line: 14, column: 2, scope: !3292)
!3298 = !DILocation(line: 16, column: 2, scope: !3292)
!3299 = !DILocation(line: 18, column: 2, scope: !3292)
!3300 = !DILocation(line: 19, column: 13, scope: !3296)
!3301 = !DILocation(line: 0, scope: !3296)
!3302 = !DILocation(line: 21, column: 3, scope: !3296)
!3303 = !DILocation(line: 22, column: 37, scope: !3296)
!3304 = !DILocation(line: 22, column: 47, scope: !3296)
!3305 = !DILocation(line: 22, column: 35, scope: !3296)
!3306 = !DILocation(line: 22, column: 3, scope: !3296)
!3307 = distinct !{!3307, !3299, !3308}
!3308 = !DILocation(line: 23, column: 2, scope: !3292)
!3309 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3310)
!3310 = !{!3311}
!3311 = !DILocalVariable(name: "c", arg: 1, scope: !3309, file: !105, line: 45, type: !103)
!3312 = !DILocation(line: 0, scope: !3309)
!3313 = !DILocation(line: 50, column: 2, scope: !3309)
!3314 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3315, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3317)
!3315 = !DISubroutineType(types: !3316)
!3316 = !{null, !106}
!3317 = !{!3318}
!3318 = !DILocalVariable(name: "fn", arg: 1, scope: !3314, file: !105, line: 63, type: !106)
!3319 = !DILocation(line: 0, scope: !3314)
!3320 = !DILocation(line: 65, column: 12, scope: !3314)
!3321 = !DILocation(line: 66, column: 1, scope: !3314)
!3322 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3323, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !317)
!3323 = !DISubroutineType(types: !3324)
!3324 = !{!102}
!3325 = !DILocation(line: 78, column: 9, scope: !3322)
!3326 = !DILocation(line: 78, column: 2, scope: !3322)
!3327 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3328, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3337)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{null, !144, !3330}
!3330 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3331, line: 99, baseType: !3332)
!3331 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3331, line: 40, baseType: !3333)
!3333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3334)
!3334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3335)
!3335 = !{!3336}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3334, file: !105, line: 79, baseType: !102, size: 32)
!3337 = !{!3338, !3339, !3340}
!3338 = !DILocalVariable(name: "fmt", arg: 1, scope: !3327, file: !105, line: 113, type: !144)
!3339 = !DILocalVariable(name: "ap", arg: 2, scope: !3327, file: !105, line: 113, type: !3330)
!3340 = !DILocalVariable(name: "ctx", scope: !3341, file: !105, line: 121, type: !3343)
!3341 = distinct !DILexicalBlock(scope: !3342, file: !105, line: 120, column: 27)
!3342 = distinct !DILexicalBlock(scope: !3327, file: !105, line: 120, column: 6)
!3343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3344)
!3344 = !{!3345, !3346}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3343, file: !105, line: 85, baseType: !32, size: 32)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3343, file: !105, line: 86, baseType: !3347, offset: 32)
!3347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2563)
!3348 = !DILocation(line: 0, scope: !3327)
!3349 = !DILocation(line: 148, column: 3, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3342, file: !105, line: 138, column: 9)
!3351 = !DILocation(line: 155, column: 1, scope: !3327)
!3352 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3353, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3355)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{!103, !103, !102}
!3355 = !{!3356, !3357}
!3356 = !DILocalVariable(name: "c", arg: 1, scope: !3352, file: !105, line: 107, type: !103)
!3357 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3352, file: !105, line: 107, type: !102)
!3358 = !DILocation(line: 0, scope: !3352)
!3359 = !DILocation(line: 110, column: 9, scope: !3352)
!3360 = !DILocation(line: 110, column: 2, scope: !3352)
!3361 = distinct !DISubprogram(name: "cbvprintf", scope: !3362, file: !3362, line: 739, type: !3363, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3369)
!3362 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3363 = !DISubroutineType(types: !3364)
!3364 = !{!103, !3365, !102, !144, !3330}
!3365 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3362, line: 297, baseType: !3366)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 32)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{!103, null}
!3369 = !{!3370, !3371, !3372, !3373}
!3370 = !DILocalVariable(name: "out", arg: 1, scope: !3361, file: !3362, line: 739, type: !3365)
!3371 = !DILocalVariable(name: "ctx", arg: 2, scope: !3361, file: !3362, line: 739, type: !102)
!3372 = !DILocalVariable(name: "format", arg: 3, scope: !3361, file: !3362, line: 739, type: !144)
!3373 = !DILocalVariable(name: "ap", arg: 4, scope: !3361, file: !3362, line: 739, type: !3330)
!3374 = !DILocation(line: 0, scope: !3361)
!3375 = !DILocation(line: 741, column: 9, scope: !3361)
!3376 = !DILocation(line: 741, column: 2, scope: !3361)
!3377 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3378, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3380)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{null, !344, !204}
!3380 = !{!3381, !3382, !3383}
!3381 = !DILocalVariable(name: "c", arg: 1, scope: !3377, file: !105, line: 157, type: !344)
!3382 = !DILocalVariable(name: "n", arg: 2, scope: !3377, file: !105, line: 157, type: !204)
!3383 = !DILocalVariable(name: "i", scope: !3377, file: !105, line: 159, type: !204)
!3384 = !DILocation(line: 0, scope: !3377)
!3385 = !DILocation(line: 164, column: 16, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !105, line: 164, column: 2)
!3387 = distinct !DILexicalBlock(scope: !3377, file: !105, line: 164, column: 2)
!3388 = !DILocation(line: 164, column: 2, scope: !3387)
!3389 = !DILocation(line: 165, column: 3, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3386, file: !105, line: 164, column: 26)
!3391 = !DILocation(line: 165, column: 13, scope: !3390)
!3392 = !DILocation(line: 164, column: 22, scope: !3386)
!3393 = distinct !{!3393, !3388, !3394}
!3394 = !DILocation(line: 166, column: 2, scope: !3387)
!3395 = !DILocation(line: 171, column: 1, scope: !3377)
!3396 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3397, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3399)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{null, !144, null}
!3399 = !{!3400, !3401}
!3400 = !DILocalVariable(name: "fmt", arg: 1, scope: !3396, file: !105, line: 203, type: !144)
!3401 = !DILocalVariable(name: "ap", scope: !3396, file: !105, line: 205, type: !3330)
!3402 = !DILocation(line: 0, scope: !3396)
!3403 = !DILocation(line: 205, column: 2, scope: !3396)
!3404 = !DILocation(line: 205, column: 10, scope: !3396)
!3405 = !DILocation(line: 207, column: 2, scope: !3396)
!3406 = !DILocation(line: 209, column: 2, scope: !3396)
!3407 = !DILocation(line: 211, column: 2, scope: !3396)
!3408 = !DILocation(line: 212, column: 1, scope: !3396)
!3409 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3410, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3412)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{!103, !344, !204, !144, null}
!3412 = !{!3413, !3414, !3415, !3416, !3417}
!3413 = !DILocalVariable(name: "str", arg: 1, scope: !3409, file: !105, line: 239, type: !344)
!3414 = !DILocalVariable(name: "size", arg: 2, scope: !3409, file: !105, line: 239, type: !204)
!3415 = !DILocalVariable(name: "fmt", arg: 3, scope: !3409, file: !105, line: 239, type: !144)
!3416 = !DILocalVariable(name: "ap", scope: !3409, file: !105, line: 241, type: !3330)
!3417 = !DILocalVariable(name: "ret", scope: !3409, file: !105, line: 242, type: !103)
!3418 = !DILocation(line: 0, scope: !3409)
!3419 = !DILocation(line: 241, column: 2, scope: !3409)
!3420 = !DILocation(line: 241, column: 10, scope: !3409)
!3421 = !DILocation(line: 244, column: 2, scope: !3409)
!3422 = !DILocation(line: 245, column: 8, scope: !3409)
!3423 = !DILocation(line: 246, column: 2, scope: !3409)
!3424 = !DILocation(line: 249, column: 1, scope: !3409)
!3425 = !DILocation(line: 248, column: 2, scope: !3409)
!3426 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3427, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3429)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!103, !344, !204, !144, !3330}
!3429 = !{!3430, !3431, !3432, !3433, !3434}
!3430 = !DILocalVariable(name: "str", arg: 1, scope: !3426, file: !105, line: 251, type: !344)
!3431 = !DILocalVariable(name: "size", arg: 2, scope: !3426, file: !105, line: 251, type: !204)
!3432 = !DILocalVariable(name: "fmt", arg: 3, scope: !3426, file: !105, line: 251, type: !144)
!3433 = !DILocalVariable(name: "ap", arg: 4, scope: !3426, file: !105, line: 251, type: !3330)
!3434 = !DILocalVariable(name: "ctx", scope: !3426, file: !105, line: 253, type: !3435)
!3435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3436)
!3436 = !{!3437, !3438, !3439}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3435, file: !105, line: 218, baseType: !344, size: 32)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3435, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3435, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3440 = !DILocation(line: 0, scope: !3426)
!3441 = !DILocation(line: 253, column: 2, scope: !3426)
!3442 = !DILocation(line: 253, column: 21, scope: !3426)
!3443 = !DILocation(line: 253, column: 27, scope: !3426)
!3444 = !DILocation(line: 255, column: 2, scope: !3426)
!3445 = !DILocation(line: 257, column: 10, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3426, file: !105, line: 257, column: 6)
!3447 = !DILocation(line: 257, column: 22, scope: !3446)
!3448 = !DILocation(line: 257, column: 16, scope: !3446)
!3449 = !DILocation(line: 257, column: 6, scope: !3426)
!3450 = !DILocation(line: 258, column: 3, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3446, file: !105, line: 257, column: 27)
!3452 = !DILocation(line: 258, column: 18, scope: !3451)
!3453 = !DILocation(line: 259, column: 2, scope: !3451)
!3454 = !DILocation(line: 262, column: 1, scope: !3426)
!3455 = !DILocation(line: 261, column: 2, scope: !3426)
!3456 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3457, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3460)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{!103, !103, !3459}
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 32)
!3460 = !{!3461, !3462}
!3461 = !DILocalVariable(name: "c", arg: 1, scope: !3456, file: !105, line: 223, type: !103)
!3462 = !DILocalVariable(name: "ctx", arg: 2, scope: !3456, file: !105, line: 223, type: !3459)
!3463 = !DILocation(line: 0, scope: !3456)
!3464 = !DILocation(line: 225, column: 11, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3456, file: !105, line: 225, column: 6)
!3466 = !DILocation(line: 225, column: 15, scope: !3465)
!3467 = !DILocation(line: 0, scope: !3465)
!3468 = !DILocation(line: 225, column: 23, scope: !3465)
!3469 = !DILocation(line: 225, column: 45, scope: !3465)
!3470 = !DILocation(line: 225, column: 37, scope: !3465)
!3471 = !DILocation(line: 225, column: 6, scope: !3456)
!3472 = !DILocation(line: 226, column: 8, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3465, file: !105, line: 225, column: 50)
!3474 = !DILocation(line: 226, column: 13, scope: !3473)
!3475 = !DILocation(line: 227, column: 3, scope: !3473)
!3476 = !DILocation(line: 230, column: 29, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3456, file: !105, line: 230, column: 6)
!3478 = !DILocation(line: 230, column: 17, scope: !3477)
!3479 = !DILocation(line: 230, column: 6, scope: !3456)
!3480 = !DILocation(line: 231, column: 22, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3477, file: !105, line: 230, column: 34)
!3482 = !DILocation(line: 231, column: 3, scope: !3481)
!3483 = !DILocation(line: 231, column: 26, scope: !3481)
!3484 = !DILocation(line: 232, column: 2, scope: !3481)
!3485 = !DILocation(line: 233, column: 28, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3477, file: !105, line: 232, column: 9)
!3487 = !DILocation(line: 233, column: 22, scope: !3486)
!3488 = !DILocation(line: 233, column: 3, scope: !3486)
!3489 = !DILocation(line: 233, column: 26, scope: !3486)
!3490 = !DILocation(line: 237, column: 1, scope: !3456)
!3491 = distinct !DISubprogram(name: "z_thread_entry", scope: !3492, file: !3492, line: 30, type: !3493, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !3500)
!3492 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3493 = !DISubroutineType(types: !3494)
!3494 = !{null, !3495, !102, !102, !102}
!3495 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3496, line: 46, baseType: !3497)
!3496 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 32)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{null, !102, !102, !102}
!3500 = !{!3501, !3502, !3503, !3504}
!3501 = !DILocalVariable(name: "entry", arg: 1, scope: !3491, file: !3492, line: 30, type: !3495)
!3502 = !DILocalVariable(name: "p1", arg: 2, scope: !3491, file: !3492, line: 31, type: !102)
!3503 = !DILocalVariable(name: "p2", arg: 3, scope: !3491, file: !3492, line: 31, type: !102)
!3504 = !DILocalVariable(name: "p3", arg: 4, scope: !3491, file: !3492, line: 31, type: !102)
!3505 = !DILocation(line: 0, scope: !3491)
!3506 = !DILocation(line: 36, column: 2, scope: !3491)
!3507 = !DILocation(line: 38, column: 17, scope: !3491)
!3508 = !DILocation(line: 38, column: 2, scope: !3491)
!3509 = !DILocation(line: 45, column: 2, scope: !3491)
!3510 = distinct !DISubprogram(name: "k_current_get", scope: !296, file: !296, line: 530, type: !3511, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !317)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!3513}
!3513 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !3514)
!3514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 32)
!3515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !3516)
!3516 = !{!3517, !3575, !3587, !3588, !3589, !3590, !3596, !3609}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3515, file: !379, line: 247, baseType: !3518, size: 384)
!3518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !3519)
!3519 = !{!3520, !3544, !3551, !3552, !3553, !3562, !3563, !3564}
!3520 = !DIDerivedType(tag: DW_TAG_member, scope: !3518, file: !379, line: 60, baseType: !3521, size: 64)
!3521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3518, file: !379, line: 60, size: 64, elements: !3522)
!3522 = !{!3523, !3538}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3521, file: !379, line: 61, baseType: !3524, size: 64)
!3524 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !3525)
!3525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !3526)
!3526 = !{!3527, !3533}
!3527 = !DIDerivedType(tag: DW_TAG_member, scope: !3525, file: !325, line: 38, baseType: !3528, size: 32)
!3528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3525, file: !325, line: 38, size: 32, elements: !3529)
!3529 = !{!3530, !3532}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3528, file: !325, line: 39, baseType: !3531, size: 32)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 32)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3528, file: !325, line: 40, baseType: !3531, size: 32)
!3533 = !DIDerivedType(tag: DW_TAG_member, scope: !3525, file: !325, line: 42, baseType: !3534, size: 32, offset: 32)
!3534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3525, file: !325, line: 42, size: 32, elements: !3535)
!3535 = !{!3536, !3537}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3534, file: !325, line: 43, baseType: !3531, size: 32)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3534, file: !325, line: 44, baseType: !3531, size: 32)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3521, file: !379, line: 62, baseType: !3539, size: 64)
!3539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !3540)
!3540 = !{!3541}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3539, file: !404, line: 50, baseType: !3542, size: 64)
!3542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3543, size: 64, elements: !363)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 32)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3518, file: !379, line: 68, baseType: !3545, size: 32, offset: 64)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 32)
!3546 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !3547)
!3547 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !3548)
!3548 = !{!3549}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3547, file: !320, line: 232, baseType: !3550, size: 64)
!3550 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !3525)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3518, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3518, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!3553 = !DIDerivedType(tag: DW_TAG_member, scope: !3518, file: !379, line: 90, baseType: !3554, size: 16, offset: 112)
!3554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3518, file: !379, line: 90, size: 16, elements: !3555)
!3555 = !{!3556, !3561}
!3556 = !DIDerivedType(tag: DW_TAG_member, scope: !3554, file: !379, line: 91, baseType: !3557, size: 16)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3554, file: !379, line: 91, size: 16, elements: !3558)
!3558 = !{!3559, !3560}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3557, file: !379, line: 96, baseType: !425, size: 8)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3557, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3554, file: !379, line: 100, baseType: !429, size: 16)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3518, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3518, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3518, file: !379, line: 131, baseType: !3565, size: 192, offset: 192)
!3565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !3566)
!3566 = !{!3567, !3568, !3574}
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3565, file: !320, line: 245, baseType: !3524, size: 64)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3565, file: !320, line: 246, baseType: !3569, size: 32, offset: 64)
!3569 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !3570)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 32)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{null, !3573}
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3565, size: 32)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3565, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3515, file: !379, line: 250, baseType: !3576, size: 288, offset: 384)
!3576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !3577)
!3577 = !{!3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3576, file: !446, line: 26, baseType: !121, size: 32)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3576, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3576, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3576, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3576, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3576, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3576, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3576, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3576, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3515, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3515, file: !379, line: 256, baseType: !3546, size: 64, offset: 704)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3515, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3515, file: !379, line: 300, baseType: !3591, size: 96, offset: 800)
!3591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !3592)
!3592 = !{!3593, !3594, !3595}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3591, file: !379, line: 153, baseType: !22, size: 32)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3591, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3591, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3515, file: !379, line: 325, baseType: !3597, size: 32, offset: 896)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 32)
!3598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !3599)
!3599 = !{!3600, !3606, !3607}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3598, file: !296, line: 5074, baseType: !3601, size: 96)
!3601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !3602)
!3602 = !{!3603, !3604, !3605}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3601, file: !472, line: 57, baseType: !475, size: 32)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3601, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3601, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3598, file: !296, line: 5075, baseType: !3546, size: 64, offset: 96)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3598, file: !296, line: 5076, baseType: !3608, offset: 160)
!3608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3515, file: !379, line: 343, baseType: !3610, size: 64, offset: 928)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !3611)
!3611 = !{!3612, !3613}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3610, file: !446, line: 63, baseType: !121, size: 32)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3610, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!3614 = !DILocation(line: 535, column: 9, scope: !3510)
!3615 = !DILocation(line: 535, column: 2, scope: !3510)
!3616 = distinct !DISubprogram(name: "k_thread_abort", scope: !3617, file: !3617, line: 188, type: !3618, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !3620)
!3617 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!3618 = !DISubroutineType(types: !3619)
!3619 = !{null, !3513}
!3620 = !{!3621}
!3621 = !DILocalVariable(name: "thread", arg: 1, scope: !3616, file: !3617, line: 188, type: !3513)
!3622 = !DILocation(line: 0, scope: !3616)
!3623 = !DILocation(line: 197, column: 2, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3616, file: !3617, line: 197, column: 2)
!3625 = !{i64 2154838046}
!3626 = !DILocation(line: 198, column: 2, scope: !3616)
!3627 = !DILocation(line: 199, column: 1, scope: !3616)
!3628 = distinct !DISubprogram(name: "z_current_get", scope: !3617, file: !3617, line: 173, type: !3511, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !317)
!3629 = !DILocation(line: 180, column: 2, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3628, file: !3617, line: 180, column: 2)
!3631 = !{i64 2154837978}
!3632 = !DILocation(line: 181, column: 9, scope: !3628)
!3633 = !DILocation(line: 181, column: 2, scope: !3628)
!3634 = distinct !DISubprogram(name: "sys_heap_free", scope: !3635, file: !3635, line: 163, type: !3636, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3644)
!3635 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3636 = !DISubroutineType(types: !3637)
!3637 = !{null, !3638, !102}
!3638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3639, size: 32)
!3639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !3640)
!3640 = !{!3641, !3642, !3643}
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3639, file: !472, line: 57, baseType: !2550, size: 32)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3639, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3639, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!3644 = !{!3645, !3646, !3647, !3648}
!3645 = !DILocalVariable(name: "heap", arg: 1, scope: !3634, file: !3635, line: 163, type: !3638)
!3646 = !DILocalVariable(name: "mem", arg: 2, scope: !3634, file: !3635, line: 163, type: !102)
!3647 = !DILocalVariable(name: "h", scope: !3634, file: !3635, line: 168, type: !2550)
!3648 = !DILocalVariable(name: "c", scope: !3634, file: !3635, line: 169, type: !2555)
!3649 = !DILocation(line: 0, scope: !3634)
!3650 = !DILocation(line: 165, column: 10, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3634, file: !3635, line: 165, column: 6)
!3652 = !DILocation(line: 165, column: 6, scope: !3634)
!3653 = !DILocation(line: 168, column: 27, scope: !3634)
!3654 = !DILocation(line: 169, column: 16, scope: !3634)
!3655 = !{i32 0, i32 536870912}
!3656 = !DILocation(line: 187, column: 2, scope: !3634)
!3657 = !DILocation(line: 197, column: 2, scope: !3634)
!3658 = !DILocation(line: 198, column: 1, scope: !3634)
!3659 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3635, file: !3635, line: 157, type: !3660, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3662)
!3660 = !DISubroutineType(types: !3661)
!3661 = !{!2555, !2550, !102}
!3662 = !{!3663, !3664, !3665, !3666}
!3663 = !DILocalVariable(name: "h", arg: 1, scope: !3659, file: !3635, line: 157, type: !2550)
!3664 = !DILocalVariable(name: "p", arg: 2, scope: !3659, file: !3635, line: 157, type: !102)
!3665 = !DILocalVariable(name: "mem", scope: !3659, file: !3635, line: 159, type: !267)
!3666 = !DILocalVariable(name: "base", scope: !3659, file: !3635, line: 159, type: !267)
!3667 = !DILocation(line: 0, scope: !3659)
!3668 = !DILocation(line: 159, column: 39, scope: !3659)
!3669 = !DILocation(line: 160, column: 14, scope: !3659)
!3670 = !DILocation(line: 160, column: 38, scope: !3659)
!3671 = !DILocation(line: 160, column: 46, scope: !3659)
!3672 = !DILocation(line: 160, column: 2, scope: !3659)
!3673 = distinct !DISubprogram(name: "set_chunk_used", scope: !2537, file: !2537, line: 147, type: !3674, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3676)
!3674 = !DISubroutineType(types: !3675)
!3675 = !{null, !2550, !2555, !157}
!3676 = !{!3677, !3678, !3679, !3680, !3681}
!3677 = !DILocalVariable(name: "h", arg: 1, scope: !3673, file: !2537, line: 147, type: !2550)
!3678 = !DILocalVariable(name: "c", arg: 2, scope: !3673, file: !2537, line: 147, type: !2555)
!3679 = !DILocalVariable(name: "used", arg: 3, scope: !3673, file: !2537, line: 147, type: !157)
!3680 = !DILocalVariable(name: "buf", scope: !3673, file: !2537, line: 149, type: !2544)
!3681 = !DILocalVariable(name: "cmem", scope: !3673, file: !2537, line: 150, type: !102)
!3682 = !DILocation(line: 0, scope: !3673)
!3683 = !DILocation(line: 149, column: 22, scope: !3673)
!3684 = !DILocation(line: 0, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !2537, line: 159, column: 7)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !2537, line: 158, column: 9)
!3687 = distinct !DILexicalBlock(scope: !3673, file: !2537, line: 152, column: 6)
!3688 = !DILocation(line: 159, column: 7, scope: !3686)
!3689 = !DILocation(line: 165, column: 1, scope: !3673)
!3690 = distinct !DISubprogram(name: "free_chunk", scope: !3635, file: !3635, line: 133, type: !3691, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3693)
!3691 = !DISubroutineType(types: !3692)
!3692 = !{null, !2550, !2555}
!3693 = !{!3694, !3695}
!3694 = !DILocalVariable(name: "h", arg: 1, scope: !3690, file: !3635, line: 133, type: !2550)
!3695 = !DILocalVariable(name: "c", arg: 2, scope: !3690, file: !3635, line: 133, type: !2555)
!3696 = !DILocation(line: 0, scope: !3690)
!3697 = !DILocation(line: 136, column: 21, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3690, file: !3635, line: 136, column: 6)
!3699 = !DILocation(line: 136, column: 7, scope: !3698)
!3700 = !DILocation(line: 136, column: 6, scope: !3690)
!3701 = !DILocation(line: 137, column: 3, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3698, file: !3635, line: 136, column: 41)
!3703 = !DILocation(line: 138, column: 22, scope: !3702)
!3704 = !DILocation(line: 138, column: 3, scope: !3702)
!3705 = !DILocation(line: 139, column: 2, scope: !3702)
!3706 = !DILocation(line: 142, column: 21, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3690, file: !3635, line: 142, column: 6)
!3708 = !{i32 -65535, i32 536903678}
!3709 = !DILocation(line: 142, column: 7, scope: !3707)
!3710 = !DILocation(line: 142, column: 6, scope: !3690)
!3711 = !DILocation(line: 143, column: 3, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3707, file: !3635, line: 142, column: 40)
!3713 = !DILocation(line: 144, column: 19, scope: !3712)
!3714 = !DILocation(line: 144, column: 3, scope: !3712)
!3715 = !DILocation(line: 145, column: 7, scope: !3712)
!3716 = !DILocation(line: 146, column: 2, scope: !3712)
!3717 = !DILocation(line: 148, column: 2, scope: !3690)
!3718 = !DILocation(line: 149, column: 1, scope: !3690)
!3719 = distinct !DISubprogram(name: "right_chunk", scope: !2537, file: !2537, line: 204, type: !3720, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3722)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{!2555, !2550, !2555}
!3722 = !{!3723, !3724}
!3723 = !DILocalVariable(name: "h", arg: 1, scope: !3719, file: !2537, line: 204, type: !2550)
!3724 = !DILocalVariable(name: "c", arg: 2, scope: !3719, file: !2537, line: 204, type: !2555)
!3725 = !DILocation(line: 0, scope: !3719)
!3726 = !DILocation(line: 206, column: 13, scope: !3719)
!3727 = !DILocation(line: 206, column: 11, scope: !3719)
!3728 = !DILocation(line: 206, column: 2, scope: !3719)
!3729 = distinct !DISubprogram(name: "chunk_used", scope: !2537, file: !2537, line: 137, type: !3730, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3732)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{!157, !2550, !2555}
!3732 = !{!3733, !3734}
!3733 = !DILocalVariable(name: "h", arg: 1, scope: !3729, file: !2537, line: 137, type: !2550)
!3734 = !DILocalVariable(name: "c", arg: 2, scope: !3729, file: !2537, line: 137, type: !2555)
!3735 = !DILocation(line: 0, scope: !3729)
!3736 = !DILocation(line: 139, column: 9, scope: !3729)
!3737 = !DILocation(line: 139, column: 42, scope: !3729)
!3738 = !DILocation(line: 139, column: 2, scope: !3729)
!3739 = distinct !DISubprogram(name: "free_list_remove", scope: !3635, file: !3635, line: 60, type: !3691, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3740)
!3740 = !{!3741, !3742, !3743}
!3741 = !DILocalVariable(name: "h", arg: 1, scope: !3739, file: !3635, line: 60, type: !2550)
!3742 = !DILocalVariable(name: "c", arg: 2, scope: !3739, file: !3635, line: 60, type: !2555)
!3743 = !DILocalVariable(name: "bidx", scope: !3744, file: !3635, line: 63, type: !103)
!3744 = distinct !DILexicalBlock(scope: !3745, file: !3635, line: 62, column: 31)
!3745 = distinct !DILexicalBlock(scope: !3739, file: !3635, line: 62, column: 6)
!3746 = !DILocation(line: 0, scope: !3739)
!3747 = !DILocation(line: 63, column: 28, scope: !3744)
!3748 = !{i32 0, i32 32768}
!3749 = !DILocation(line: 63, column: 14, scope: !3744)
!3750 = !DILocation(line: 0, scope: !3744)
!3751 = !DILocation(line: 64, column: 3, scope: !3744)
!3752 = !DILocation(line: 66, column: 1, scope: !3739)
!3753 = distinct !DISubprogram(name: "merge_chunks", scope: !3635, file: !3635, line: 125, type: !3754, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3756)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{null, !2550, !2555, !2555}
!3756 = !{!3757, !3758, !3759, !3760}
!3757 = !DILocalVariable(name: "h", arg: 1, scope: !3753, file: !3635, line: 125, type: !2550)
!3758 = !DILocalVariable(name: "lc", arg: 2, scope: !3753, file: !3635, line: 125, type: !2555)
!3759 = !DILocalVariable(name: "rc", arg: 3, scope: !3753, file: !3635, line: 125, type: !2555)
!3760 = !DILocalVariable(name: "newsz", scope: !3753, file: !3635, line: 127, type: !3761)
!3761 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2537, line: 62, baseType: !121)
!3762 = !DILocation(line: 0, scope: !3753)
!3763 = !DILocation(line: 127, column: 20, scope: !3753)
!3764 = !DILocation(line: 127, column: 40, scope: !3753)
!3765 = !DILocation(line: 127, column: 38, scope: !3753)
!3766 = !DILocation(line: 129, column: 2, scope: !3753)
!3767 = !DILocation(line: 130, column: 25, scope: !3753)
!3768 = !DILocation(line: 130, column: 2, scope: !3753)
!3769 = !DILocation(line: 131, column: 1, scope: !3753)
!3770 = distinct !DISubprogram(name: "left_chunk", scope: !2537, file: !2537, line: 199, type: !3720, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3771)
!3771 = !{!3772, !3773}
!3772 = !DILocalVariable(name: "h", arg: 1, scope: !3770, file: !2537, line: 199, type: !2550)
!3773 = !DILocalVariable(name: "c", arg: 2, scope: !3770, file: !2537, line: 199, type: !2555)
!3774 = !DILocation(line: 0, scope: !3770)
!3775 = !DILocation(line: 201, column: 13, scope: !3770)
!3776 = !DILocation(line: 201, column: 11, scope: !3770)
!3777 = !DILocation(line: 201, column: 2, scope: !3770)
!3778 = distinct !DISubprogram(name: "free_list_add", scope: !3635, file: !3635, line: 98, type: !3691, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3779)
!3779 = !{!3780, !3781, !3782}
!3780 = !DILocalVariable(name: "h", arg: 1, scope: !3778, file: !3635, line: 98, type: !2550)
!3781 = !DILocalVariable(name: "c", arg: 2, scope: !3778, file: !3635, line: 98, type: !2555)
!3782 = !DILocalVariable(name: "bidx", scope: !3783, file: !3635, line: 101, type: !103)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !3635, line: 100, column: 31)
!3784 = distinct !DILexicalBlock(scope: !3778, file: !3635, line: 100, column: 6)
!3785 = !DILocation(line: 0, scope: !3778)
!3786 = !DILocation(line: 101, column: 28, scope: !3783)
!3787 = !DILocation(line: 101, column: 14, scope: !3783)
!3788 = !DILocation(line: 0, scope: !3783)
!3789 = !DILocation(line: 102, column: 3, scope: !3783)
!3790 = !DILocation(line: 104, column: 1, scope: !3778)
!3791 = distinct !DISubprogram(name: "chunk_size", scope: !2537, file: !2537, line: 142, type: !3792, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3794)
!3792 = !DISubroutineType(types: !3793)
!3793 = !{!3761, !2550, !2555}
!3794 = !{!3795, !3796}
!3795 = !DILocalVariable(name: "h", arg: 1, scope: !3791, file: !2537, line: 142, type: !2550)
!3796 = !DILocalVariable(name: "c", arg: 2, scope: !3791, file: !2537, line: 142, type: !2555)
!3797 = !DILocation(line: 0, scope: !3791)
!3798 = !DILocation(line: 144, column: 9, scope: !3791)
!3799 = !DILocation(line: 144, column: 42, scope: !3791)
!3800 = !DILocation(line: 144, column: 2, scope: !3791)
!3801 = distinct !DISubprogram(name: "bucket_idx", scope: !2537, file: !2537, line: 250, type: !3802, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3804)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!103, !2550, !3761}
!3804 = !{!3805, !3806, !3807}
!3805 = !DILocalVariable(name: "h", arg: 1, scope: !3801, file: !2537, line: 250, type: !2550)
!3806 = !DILocalVariable(name: "sz", arg: 2, scope: !3801, file: !2537, line: 250, type: !3761)
!3807 = !DILocalVariable(name: "usable_sz", scope: !3801, file: !2537, line: 252, type: !32)
!3808 = !DILocation(line: 0, scope: !3801)
!3809 = !DILocation(line: 252, column: 32, scope: !3801)
!3810 = !DILocation(line: 252, column: 30, scope: !3801)
!3811 = !DILocation(line: 252, column: 50, scope: !3801)
!3812 = !DILocation(line: 253, column: 14, scope: !3801)
!3813 = !{i32 0, i32 33}
!3814 = !DILocation(line: 253, column: 12, scope: !3801)
!3815 = !DILocation(line: 253, column: 2, scope: !3801)
!3816 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3635, file: !3635, line: 68, type: !3817, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3819)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{null, !2550, !2555, !103}
!3819 = !{!3820, !3821, !3822, !3823, !3825, !3828}
!3820 = !DILocalVariable(name: "h", arg: 1, scope: !3816, file: !3635, line: 68, type: !2550)
!3821 = !DILocalVariable(name: "c", arg: 2, scope: !3816, file: !3635, line: 68, type: !2555)
!3822 = !DILocalVariable(name: "bidx", arg: 3, scope: !3816, file: !3635, line: 68, type: !103)
!3823 = !DILocalVariable(name: "b", scope: !3816, file: !3635, line: 70, type: !3824)
!3824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 32)
!3825 = !DILocalVariable(name: "second", scope: !3826, file: !3635, line: 84, type: !2555)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !3635, line: 80, column: 9)
!3827 = distinct !DILexicalBlock(scope: !3816, file: !3635, line: 72, column: 6)
!3828 = !DILocalVariable(name: "first", scope: !3826, file: !3635, line: 85, type: !2555)
!3829 = !DILocation(line: 0, scope: !3816)
!3830 = !DILocation(line: 72, column: 9, scope: !3827)
!3831 = !DILocation(line: 72, column: 14, scope: !3827)
!3832 = !DILocation(line: 72, column: 6, scope: !3816)
!3833 = !DILocation(line: 76, column: 23, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3827, file: !3635, line: 72, column: 21)
!3835 = !DILocation(line: 76, column: 6, scope: !3834)
!3836 = !DILocation(line: 76, column: 20, scope: !3834)
!3837 = !DILocation(line: 77, column: 11, scope: !3834)
!3838 = !DILocation(line: 78, column: 3, scope: !3834)
!3839 = !DILocation(line: 79, column: 3, scope: !3834)
!3840 = !DILocation(line: 80, column: 2, scope: !3834)
!3841 = !DILocation(line: 0, scope: !3826)
!3842 = !DILocation(line: 85, column: 21, scope: !3826)
!3843 = !{i32 0, i32 65536}
!3844 = !DILocation(line: 87, column: 3, scope: !3826)
!3845 = !DILocation(line: 88, column: 3, scope: !3826)
!3846 = !DILocation(line: 89, column: 3, scope: !3826)
!3847 = !DILocation(line: 90, column: 3, scope: !3826)
!3848 = !DILocation(line: 96, column: 1, scope: !3816)
!3849 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2537, file: !2537, line: 187, type: !3754, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3850)
!3850 = !{!3851, !3852, !3853}
!3851 = !DILocalVariable(name: "h", arg: 1, scope: !3849, file: !2537, line: 187, type: !2550)
!3852 = !DILocalVariable(name: "c", arg: 2, scope: !3849, file: !2537, line: 187, type: !2555)
!3853 = !DILocalVariable(name: "prev", arg: 3, scope: !3849, file: !2537, line: 188, type: !2555)
!3854 = !DILocation(line: 0, scope: !3849)
!3855 = !DILocation(line: 190, column: 2, scope: !3849)
!3856 = !DILocation(line: 191, column: 1, scope: !3849)
!3857 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2537, file: !2537, line: 193, type: !3754, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3858)
!3858 = !{!3859, !3860, !3861}
!3859 = !DILocalVariable(name: "h", arg: 1, scope: !3857, file: !2537, line: 193, type: !2550)
!3860 = !DILocalVariable(name: "c", arg: 2, scope: !3857, file: !2537, line: 193, type: !2555)
!3861 = !DILocalVariable(name: "next", arg: 3, scope: !3857, file: !2537, line: 194, type: !2555)
!3862 = !DILocation(line: 0, scope: !3857)
!3863 = !DILocation(line: 196, column: 2, scope: !3857)
!3864 = !DILocation(line: 197, column: 1, scope: !3857)
!3865 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2537, file: !2537, line: 177, type: !3720, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3866)
!3866 = !{!3867, !3868}
!3867 = !DILocalVariable(name: "h", arg: 1, scope: !3865, file: !2537, line: 177, type: !2550)
!3868 = !DILocalVariable(name: "c", arg: 2, scope: !3865, file: !2537, line: 177, type: !2555)
!3869 = !DILocation(line: 0, scope: !3865)
!3870 = !DILocation(line: 179, column: 9, scope: !3865)
!3871 = !DILocation(line: 179, column: 2, scope: !3865)
!3872 = distinct !DISubprogram(name: "chunk_field", scope: !2537, file: !2537, line: 107, type: !3873, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3875)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{!2555, !2550, !2555, !2536}
!3875 = !{!3876, !3877, !3878, !3879, !3880}
!3876 = !DILocalVariable(name: "h", arg: 1, scope: !3872, file: !2537, line: 107, type: !2550)
!3877 = !DILocalVariable(name: "c", arg: 2, scope: !3872, file: !2537, line: 107, type: !2555)
!3878 = !DILocalVariable(name: "f", arg: 3, scope: !3872, file: !2537, line: 108, type: !2536)
!3879 = !DILocalVariable(name: "buf", scope: !3872, file: !2537, line: 110, type: !2544)
!3880 = !DILocalVariable(name: "cmem", scope: !3872, file: !2537, line: 111, type: !102)
!3881 = !DILocation(line: 0, scope: !3872)
!3882 = !DILocation(line: 110, column: 22, scope: !3872)
!3883 = !DILocation(line: 111, column: 15, scope: !3872)
!3884 = !DILocation(line: 116, column: 11, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3886, file: !2537, line: 115, column: 9)
!3886 = distinct !DILexicalBlock(scope: !3872, file: !2537, line: 113, column: 6)
!3887 = !DILocation(line: 116, column: 10, scope: !3885)
!3888 = !DILocation(line: 118, column: 1, scope: !3872)
!3889 = distinct !DISubprogram(name: "chunk_buf", scope: !2537, file: !2537, line: 101, type: !3890, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3892)
!3890 = !DISubroutineType(types: !3891)
!3891 = !{!2544, !2550}
!3892 = !{!3893}
!3893 = !DILocalVariable(name: "h", arg: 1, scope: !3889, file: !2537, line: 101, type: !2550)
!3894 = !DILocation(line: 0, scope: !3889)
!3895 = !DILocation(line: 104, column: 9, scope: !3889)
!3896 = !DILocation(line: 104, column: 2, scope: !3889)
!3897 = distinct !DISubprogram(name: "chunk_set", scope: !2537, file: !2537, line: 120, type: !3898, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3900)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{null, !2550, !2555, !2536, !2555}
!3900 = !{!3901, !3902, !3903, !3904, !3905, !3906}
!3901 = !DILocalVariable(name: "h", arg: 1, scope: !3897, file: !2537, line: 120, type: !2550)
!3902 = !DILocalVariable(name: "c", arg: 2, scope: !3897, file: !2537, line: 120, type: !2555)
!3903 = !DILocalVariable(name: "f", arg: 3, scope: !3897, file: !2537, line: 121, type: !2536)
!3904 = !DILocalVariable(name: "val", arg: 4, scope: !3897, file: !2537, line: 121, type: !2555)
!3905 = !DILocalVariable(name: "buf", scope: !3897, file: !2537, line: 125, type: !2544)
!3906 = !DILocalVariable(name: "cmem", scope: !3897, file: !2537, line: 126, type: !102)
!3907 = !DILocation(line: 0, scope: !3897)
!3908 = !DILocation(line: 125, column: 22, scope: !3897)
!3909 = !DILocation(line: 126, column: 15, scope: !3897)
!3910 = !DILocation(line: 133, column: 27, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3912, file: !2537, line: 131, column: 9)
!3912 = distinct !DILexicalBlock(scope: !3897, file: !2537, line: 128, column: 6)
!3913 = !DILocation(line: 133, column: 4, scope: !3911)
!3914 = !DILocation(line: 133, column: 3, scope: !3911)
!3915 = !DILocation(line: 133, column: 25, scope: !3911)
!3916 = !DILocation(line: 135, column: 1, scope: !3897)
!3917 = distinct !DISubprogram(name: "min_chunk_size", scope: !2537, file: !2537, line: 240, type: !3918, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3920)
!3918 = !DISubroutineType(types: !3919)
!3919 = !{!3761, !2550}
!3920 = !{!3921}
!3921 = !DILocalVariable(name: "h", arg: 1, scope: !3917, file: !2537, line: 240, type: !2550)
!3922 = !DILocation(line: 0, scope: !3917)
!3923 = !DILocation(line: 242, column: 9, scope: !3917)
!3924 = !DILocation(line: 242, column: 2, scope: !3917)
!3925 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2537, file: !2537, line: 235, type: !3926, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3928)
!3926 = !DISubroutineType(types: !3927)
!3927 = !{!3761, !2550, !204}
!3928 = !{!3929, !3930}
!3929 = !DILocalVariable(name: "h", arg: 1, scope: !3925, file: !2537, line: 235, type: !2550)
!3930 = !DILocalVariable(name: "bytes", arg: 2, scope: !3925, file: !2537, line: 235, type: !204)
!3931 = !DILocation(line: 0, scope: !3925)
!3932 = !DILocation(line: 237, column: 39, scope: !3925)
!3933 = !DILocation(line: 237, column: 9, scope: !3925)
!3934 = !DILocation(line: 237, column: 2, scope: !3925)
!3935 = distinct !DISubprogram(name: "chunksz", scope: !2537, file: !2537, line: 230, type: !3936, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3938)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!3761, !204}
!3938 = !{!3939}
!3939 = !DILocalVariable(name: "bytes", arg: 1, scope: !3935, file: !2537, line: 230, type: !204)
!3940 = !DILocation(line: 0, scope: !3935)
!3941 = !DILocation(line: 232, column: 29, scope: !3935)
!3942 = !DILocation(line: 232, column: 35, scope: !3935)
!3943 = !DILocation(line: 232, column: 2, scope: !3935)
!3944 = distinct !DISubprogram(name: "set_chunk_size", scope: !2537, file: !2537, line: 172, type: !3945, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3947)
!3945 = !DISubroutineType(types: !3946)
!3946 = !{null, !2550, !2555, !3761}
!3947 = !{!3948, !3949, !3950}
!3948 = !DILocalVariable(name: "h", arg: 1, scope: !3944, file: !2537, line: 172, type: !2550)
!3949 = !DILocalVariable(name: "c", arg: 2, scope: !3944, file: !2537, line: 172, type: !2555)
!3950 = !DILocalVariable(name: "size", arg: 3, scope: !3944, file: !2537, line: 172, type: !3761)
!3951 = !DILocation(line: 0, scope: !3944)
!3952 = !DILocation(line: 174, column: 38, scope: !3944)
!3953 = !DILocation(line: 174, column: 2, scope: !3944)
!3954 = !DILocation(line: 175, column: 1, scope: !3944)
!3955 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2537, file: !2537, line: 209, type: !3945, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3956)
!3956 = !{!3957, !3958, !3959}
!3957 = !DILocalVariable(name: "h", arg: 1, scope: !3955, file: !2537, line: 209, type: !2550)
!3958 = !DILocalVariable(name: "c", arg: 2, scope: !3955, file: !2537, line: 209, type: !2555)
!3959 = !DILocalVariable(name: "size", arg: 3, scope: !3955, file: !2537, line: 210, type: !3761)
!3960 = !DILocation(line: 0, scope: !3955)
!3961 = !DILocation(line: 212, column: 2, scope: !3955)
!3962 = !DILocation(line: 213, column: 1, scope: !3955)
!3963 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3635, file: !3635, line: 34, type: !3817, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3964)
!3964 = !{!3965, !3966, !3967, !3968, !3969, !3972}
!3965 = !DILocalVariable(name: "h", arg: 1, scope: !3963, file: !3635, line: 34, type: !2550)
!3966 = !DILocalVariable(name: "c", arg: 2, scope: !3963, file: !3635, line: 34, type: !2555)
!3967 = !DILocalVariable(name: "bidx", arg: 3, scope: !3963, file: !3635, line: 34, type: !103)
!3968 = !DILocalVariable(name: "b", scope: !3963, file: !3635, line: 36, type: !3824)
!3969 = !DILocalVariable(name: "first", scope: !3970, file: !3635, line: 47, type: !2555)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !3635, line: 46, column: 9)
!3971 = distinct !DILexicalBlock(scope: !3963, file: !3635, line: 42, column: 6)
!3972 = !DILocalVariable(name: "second", scope: !3970, file: !3635, line: 48, type: !2555)
!3973 = !DILocation(line: 0, scope: !3963)
!3974 = !DILocation(line: 36, column: 29, scope: !3963)
!3975 = !DILocation(line: 42, column: 6, scope: !3971)
!3976 = !DILocation(line: 42, column: 28, scope: !3971)
!3977 = !DILocation(line: 42, column: 6, scope: !3963)
!3978 = !DILocation(line: 44, column: 24, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3971, file: !3635, line: 42, column: 34)
!3980 = !DILocation(line: 44, column: 23, scope: !3979)
!3981 = !DILocation(line: 44, column: 6, scope: !3979)
!3982 = !DILocation(line: 44, column: 20, scope: !3979)
!3983 = !DILocation(line: 45, column: 6, scope: !3979)
!3984 = !DILocation(line: 45, column: 11, scope: !3979)
!3985 = !DILocation(line: 46, column: 2, scope: !3979)
!3986 = !DILocation(line: 47, column: 21, scope: !3970)
!3987 = !DILocation(line: 0, scope: !3970)
!3988 = !DILocation(line: 50, column: 6, scope: !3970)
!3989 = !DILocation(line: 50, column: 11, scope: !3970)
!3990 = !DILocation(line: 51, column: 3, scope: !3970)
!3991 = !DILocation(line: 52, column: 3, scope: !3970)
!3992 = !DILocation(line: 58, column: 1, scope: !3963)
!3993 = distinct !DISubprogram(name: "next_free_chunk", scope: !2537, file: !2537, line: 182, type: !3720, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !3994)
!3994 = !{!3995, !3996}
!3995 = !DILocalVariable(name: "h", arg: 1, scope: !3993, file: !2537, line: 182, type: !2550)
!3996 = !DILocalVariable(name: "c", arg: 2, scope: !3993, file: !2537, line: 182, type: !2555)
!3997 = !DILocation(line: 0, scope: !3993)
!3998 = !DILocation(line: 184, column: 9, scope: !3993)
!3999 = !DILocation(line: 184, column: 2, scope: !3993)
!4000 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3635, file: !3635, line: 200, type: !4001, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !4003)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{!204, !3638, !102}
!4003 = !{!4004, !4005, !4006, !4007, !4008, !4009, !4010}
!4004 = !DILocalVariable(name: "heap", arg: 1, scope: !4000, file: !3635, line: 200, type: !3638)
!4005 = !DILocalVariable(name: "mem", arg: 2, scope: !4000, file: !3635, line: 200, type: !102)
!4006 = !DILocalVariable(name: "h", scope: !4000, file: !3635, line: 202, type: !2550)
!4007 = !DILocalVariable(name: "c", scope: !4000, file: !3635, line: 203, type: !2555)
!4008 = !DILocalVariable(name: "addr", scope: !4000, file: !3635, line: 204, type: !204)
!4009 = !DILocalVariable(name: "chunk_base", scope: !4000, file: !3635, line: 205, type: !204)
!4010 = !DILocalVariable(name: "chunk_sz", scope: !4000, file: !3635, line: 206, type: !204)
!4011 = !DILocation(line: 0, scope: !4000)
!4012 = !DILocation(line: 202, column: 27, scope: !4000)
!4013 = !DILocation(line: 203, column: 16, scope: !4000)
!4014 = !DILocation(line: 204, column: 16, scope: !4000)
!4015 = !DILocation(line: 205, column: 31, scope: !4000)
!4016 = !DILocation(line: 205, column: 22, scope: !4000)
!4017 = !DILocation(line: 206, column: 20, scope: !4000)
!4018 = !DILocation(line: 206, column: 37, scope: !4000)
!4019 = !DILocation(line: 208, column: 26, scope: !4000)
!4020 = !DILocation(line: 208, column: 18, scope: !4000)
!4021 = !DILocation(line: 208, column: 2, scope: !4000)
!4022 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3635, file: !3635, line: 263, type: !4023, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !4025)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{!102, !3638, !204}
!4025 = !{!4026, !4027, !4028, !4029, !4030, !4031}
!4026 = !DILocalVariable(name: "heap", arg: 1, scope: !4022, file: !3635, line: 263, type: !3638)
!4027 = !DILocalVariable(name: "bytes", arg: 2, scope: !4022, file: !3635, line: 263, type: !204)
!4028 = !DILocalVariable(name: "h", scope: !4022, file: !3635, line: 265, type: !2550)
!4029 = !DILocalVariable(name: "mem", scope: !4022, file: !3635, line: 266, type: !102)
!4030 = !DILocalVariable(name: "chunk_sz", scope: !4022, file: !3635, line: 272, type: !3761)
!4031 = !DILocalVariable(name: "c", scope: !4022, file: !3635, line: 273, type: !2555)
!4032 = !DILocation(line: 0, scope: !4022)
!4033 = !DILocation(line: 265, column: 27, scope: !4022)
!4034 = !DILocation(line: 268, column: 12, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4022, file: !3635, line: 268, column: 6)
!4036 = !DILocation(line: 268, column: 18, scope: !4035)
!4037 = !DILocation(line: 268, column: 21, scope: !4035)
!4038 = !DILocation(line: 268, column: 6, scope: !4022)
!4039 = !DILocation(line: 272, column: 23, scope: !4022)
!4040 = !DILocation(line: 273, column: 16, scope: !4022)
!4041 = !DILocation(line: 274, column: 8, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4022, file: !3635, line: 274, column: 6)
!4043 = !DILocation(line: 274, column: 6, scope: !4022)
!4044 = !DILocation(line: 279, column: 6, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4022, file: !3635, line: 279, column: 6)
!4046 = !DILocation(line: 279, column: 23, scope: !4045)
!4047 = !DILocation(line: 279, column: 6, scope: !4022)
!4048 = !DILocation(line: 280, column: 24, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4045, file: !3635, line: 279, column: 35)
!4050 = !DILocation(line: 280, column: 3, scope: !4049)
!4051 = !DILocation(line: 281, column: 3, scope: !4049)
!4052 = !DILocation(line: 282, column: 2, scope: !4049)
!4053 = !DILocation(line: 284, column: 2, scope: !4022)
!4054 = !DILocation(line: 286, column: 8, scope: !4022)
!4055 = !DILocation(line: 298, column: 2, scope: !4022)
!4056 = !DILocation(line: 299, column: 1, scope: !4022)
!4057 = distinct !DISubprogram(name: "size_too_big", scope: !2537, file: !2537, line: 256, type: !4058, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !4060)
!4058 = !DISubroutineType(types: !4059)
!4059 = !{!157, !2550, !204}
!4060 = !{!4061, !4062}
!4061 = !DILocalVariable(name: "h", arg: 1, scope: !4057, file: !2537, line: 256, type: !2550)
!4062 = !DILocalVariable(name: "bytes", arg: 2, scope: !4057, file: !2537, line: 256, type: !204)
!4063 = !DILocation(line: 0, scope: !4057)
!4064 = !DILocation(line: 262, column: 16, scope: !4057)
!4065 = !DILocation(line: 262, column: 36, scope: !4057)
!4066 = !DILocation(line: 262, column: 30, scope: !4057)
!4067 = !DILocation(line: 262, column: 2, scope: !4057)
!4068 = distinct !DISubprogram(name: "alloc_chunk", scope: !3635, file: !3635, line: 211, type: !4069, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !4071)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!2555, !2550, !3761}
!4071 = !{!4072, !4073, !4074, !4075, !4076, !4079, !4080, !4082, !4083, !4086}
!4072 = !DILocalVariable(name: "h", arg: 1, scope: !4068, file: !3635, line: 211, type: !2550)
!4073 = !DILocalVariable(name: "sz", arg: 2, scope: !4068, file: !3635, line: 211, type: !3761)
!4074 = !DILocalVariable(name: "bi", scope: !4068, file: !3635, line: 213, type: !103)
!4075 = !DILocalVariable(name: "b", scope: !4068, file: !3635, line: 214, type: !3824)
!4076 = !DILocalVariable(name: "first", scope: !4077, file: !3635, line: 233, type: !2555)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !3635, line: 232, column: 15)
!4078 = distinct !DILexicalBlock(scope: !4068, file: !3635, line: 232, column: 6)
!4079 = !DILocalVariable(name: "i", scope: !4077, file: !3635, line: 234, type: !103)
!4080 = !DILocalVariable(name: "c", scope: !4081, file: !3635, line: 236, type: !2555)
!4081 = distinct !DILexicalBlock(scope: !4077, file: !3635, line: 235, column: 6)
!4082 = !DILocalVariable(name: "bmask", scope: !4068, file: !3635, line: 249, type: !121)
!4083 = !DILocalVariable(name: "minbucket", scope: !4084, file: !3635, line: 252, type: !103)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !3635, line: 251, column: 19)
!4085 = distinct !DILexicalBlock(scope: !4068, file: !3635, line: 251, column: 6)
!4086 = !DILocalVariable(name: "c", scope: !4084, file: !3635, line: 253, type: !2555)
!4087 = !DILocation(line: 0, scope: !4068)
!4088 = !DILocation(line: 213, column: 11, scope: !4068)
!4089 = !DILocation(line: 232, column: 9, scope: !4078)
!4090 = !DILocation(line: 232, column: 6, scope: !4078)
!4091 = !DILocation(line: 232, column: 6, scope: !4068)
!4092 = !DILocation(line: 236, column: 21, scope: !4081)
!4093 = !DILocation(line: 0, scope: !4077)
!4094 = !DILocation(line: 0, scope: !4081)
!4095 = !DILocation(line: 237, column: 8, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4081, file: !3635, line: 237, column: 8)
!4097 = !DILocation(line: 237, column: 25, scope: !4096)
!4098 = !DILocation(line: 237, column: 8, scope: !4081)
!4099 = !DILocation(line: 238, column: 5, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4096, file: !3635, line: 237, column: 32)
!4101 = !DILocation(line: 241, column: 14, scope: !4081)
!4102 = !DILocation(line: 241, column: 12, scope: !4081)
!4103 = !DILocation(line: 243, column: 12, scope: !4077)
!4104 = !DILocation(line: 243, column: 16, scope: !4077)
!4105 = distinct !{!4105, !4106, !4107}
!4106 = !DILocation(line: 235, column: 3, scope: !4077)
!4107 = !DILocation(line: 243, column: 35, scope: !4077)
!4108 = !DILocation(line: 249, column: 22, scope: !4068)
!4109 = !DILocation(line: 249, column: 39, scope: !4068)
!4110 = !DILocation(line: 249, column: 36, scope: !4068)
!4111 = !DILocation(line: 251, column: 12, scope: !4085)
!4112 = !DILocation(line: 251, column: 6, scope: !4068)
!4113 = !DILocation(line: 252, column: 19, scope: !4084)
!4114 = !DILocation(line: 0, scope: !4084)
!4115 = !DILocation(line: 253, column: 39, scope: !4084)
!4116 = !DILocation(line: 255, column: 3, scope: !4084)
!4117 = !DILocation(line: 261, column: 1, scope: !4068)
!4118 = distinct !DISubprogram(name: "split_chunks", scope: !3635, file: !3635, line: 109, type: !3754, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !4119)
!4119 = !{!4120, !4121, !4122, !4123, !4124, !4125}
!4120 = !DILocalVariable(name: "h", arg: 1, scope: !4118, file: !3635, line: 109, type: !2550)
!4121 = !DILocalVariable(name: "lc", arg: 2, scope: !4118, file: !3635, line: 109, type: !2555)
!4122 = !DILocalVariable(name: "rc", arg: 3, scope: !4118, file: !3635, line: 109, type: !2555)
!4123 = !DILocalVariable(name: "sz0", scope: !4118, file: !3635, line: 114, type: !3761)
!4124 = !DILocalVariable(name: "lsz", scope: !4118, file: !3635, line: 115, type: !3761)
!4125 = !DILocalVariable(name: "rsz", scope: !4118, file: !3635, line: 116, type: !3761)
!4126 = !DILocation(line: 0, scope: !4118)
!4127 = !DILocation(line: 114, column: 18, scope: !4118)
!4128 = !DILocation(line: 115, column: 21, scope: !4118)
!4129 = !DILocation(line: 116, column: 22, scope: !4118)
!4130 = !DILocation(line: 118, column: 2, scope: !4118)
!4131 = !DILocation(line: 119, column: 2, scope: !4118)
!4132 = !DILocation(line: 120, column: 2, scope: !4118)
!4133 = !DILocation(line: 121, column: 25, scope: !4118)
!4134 = !DILocation(line: 121, column: 2, scope: !4118)
!4135 = !DILocation(line: 122, column: 1, scope: !4118)
!4136 = distinct !DISubprogram(name: "chunk_mem", scope: !3635, file: !3635, line: 24, type: !4137, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !4139)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{!102, !2550, !2555}
!4139 = !{!4140, !4141, !4142, !4143}
!4140 = !DILocalVariable(name: "h", arg: 1, scope: !4136, file: !3635, line: 24, type: !2550)
!4141 = !DILocalVariable(name: "c", arg: 2, scope: !4136, file: !3635, line: 24, type: !2555)
!4142 = !DILocalVariable(name: "buf", scope: !4136, file: !3635, line: 26, type: !2544)
!4143 = !DILocalVariable(name: "ret", scope: !4136, file: !3635, line: 27, type: !267)
!4144 = !DILocation(line: 0, scope: !4136)
!4145 = !DILocation(line: 26, column: 22, scope: !4136)
!4146 = !DILocation(line: 27, column: 38, scope: !4136)
!4147 = !DILocation(line: 31, column: 2, scope: !4136)
!4148 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3635, file: !3635, line: 301, type: !4149, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !4151)
!4149 = !DISubroutineType(types: !4150)
!4150 = !{!102, !3638, !204, !204}
!4151 = !{!4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163}
!4152 = !DILocalVariable(name: "heap", arg: 1, scope: !4148, file: !3635, line: 301, type: !3638)
!4153 = !DILocalVariable(name: "align", arg: 2, scope: !4148, file: !3635, line: 301, type: !204)
!4154 = !DILocalVariable(name: "bytes", arg: 3, scope: !4148, file: !3635, line: 301, type: !204)
!4155 = !DILocalVariable(name: "h", scope: !4148, file: !3635, line: 303, type: !2550)
!4156 = !DILocalVariable(name: "gap", scope: !4148, file: !3635, line: 304, type: !204)
!4157 = !DILocalVariable(name: "rew", scope: !4148, file: !3635, line: 304, type: !204)
!4158 = !DILocalVariable(name: "padded_sz", scope: !4148, file: !3635, line: 335, type: !3761)
!4159 = !DILocalVariable(name: "c0", scope: !4148, file: !3635, line: 336, type: !2555)
!4160 = !DILocalVariable(name: "mem", scope: !4148, file: !3635, line: 341, type: !267)
!4161 = !DILocalVariable(name: "end", scope: !4148, file: !3635, line: 345, type: !2544)
!4162 = !DILocalVariable(name: "c", scope: !4148, file: !3635, line: 348, type: !2555)
!4163 = !DILocalVariable(name: "c_end", scope: !4148, file: !3635, line: 349, type: !2555)
!4164 = !DILocation(line: 0, scope: !4148)
!4165 = !DILocation(line: 303, column: 27, scope: !4148)
!4166 = !DILocation(line: 313, column: 16, scope: !4148)
!4167 = !DILocation(line: 313, column: 14, scope: !4148)
!4168 = !DILocation(line: 314, column: 12, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4148, file: !3635, line: 314, column: 6)
!4170 = !DILocation(line: 314, column: 6, scope: !4148)
!4171 = !DILocation(line: 315, column: 9, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4169, file: !3635, line: 314, column: 20)
!4173 = !DILocation(line: 316, column: 9, scope: !4172)
!4174 = !DILocation(line: 318, column: 13, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !3635, line: 318, column: 7)
!4176 = distinct !DILexicalBlock(scope: !4169, file: !3635, line: 317, column: 9)
!4177 = !DILocation(line: 318, column: 7, scope: !4176)
!4178 = !DILocation(line: 319, column: 11, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4175, file: !3635, line: 318, column: 39)
!4180 = !DILocation(line: 319, column: 4, scope: !4179)
!4181 = !DILocation(line: 0, scope: !4169)
!4182 = !DILocation(line: 326, column: 12, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4148, file: !3635, line: 326, column: 6)
!4184 = !DILocation(line: 326, column: 17, scope: !4183)
!4185 = !DILocation(line: 326, column: 20, scope: !4183)
!4186 = !DILocation(line: 326, column: 6, scope: !4148)
!4187 = !DILocation(line: 335, column: 50, scope: !4148)
!4188 = !DILocation(line: 335, column: 58, scope: !4148)
!4189 = !DILocation(line: 335, column: 24, scope: !4148)
!4190 = !DILocation(line: 336, column: 17, scope: !4148)
!4191 = !DILocation(line: 338, column: 9, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4148, file: !3635, line: 338, column: 6)
!4193 = !DILocation(line: 338, column: 6, scope: !4148)
!4194 = !DILocation(line: 341, column: 17, scope: !4148)
!4195 = !DILocation(line: 344, column: 20, scope: !4148)
!4196 = !DILocation(line: 344, column: 8, scope: !4148)
!4197 = !DILocation(line: 344, column: 47, scope: !4148)
!4198 = !DILocation(line: 345, column: 39, scope: !4148)
!4199 = !DILocation(line: 348, column: 16, scope: !4148)
!4200 = !DILocation(line: 349, column: 26, scope: !4148)
!4201 = !DILocation(line: 349, column: 24, scope: !4148)
!4202 = !DILocation(line: 353, column: 8, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4148, file: !3635, line: 353, column: 6)
!4204 = !DILocation(line: 353, column: 6, scope: !4148)
!4205 = !DILocation(line: 354, column: 3, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4203, file: !3635, line: 353, column: 14)
!4207 = !DILocation(line: 355, column: 3, scope: !4206)
!4208 = !DILocation(line: 356, column: 2, scope: !4206)
!4209 = !DILocation(line: 359, column: 6, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4148, file: !3635, line: 359, column: 6)
!4211 = !DILocation(line: 359, column: 24, scope: !4210)
!4212 = !DILocation(line: 359, column: 6, scope: !4148)
!4213 = !DILocation(line: 360, column: 3, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4210, file: !3635, line: 359, column: 33)
!4215 = !DILocation(line: 361, column: 3, scope: !4214)
!4216 = !DILocation(line: 362, column: 2, scope: !4214)
!4217 = !DILocation(line: 364, column: 2, scope: !4148)
!4218 = !DILocation(line: 377, column: 1, scope: !4148)
!4219 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3635, file: !3635, line: 379, type: !4220, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !4222)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{!102, !3638, !102, !204, !204}
!4222 = !{!4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4238, !4239}
!4223 = !DILocalVariable(name: "heap", arg: 1, scope: !4219, file: !3635, line: 379, type: !3638)
!4224 = !DILocalVariable(name: "ptr", arg: 2, scope: !4219, file: !3635, line: 379, type: !102)
!4225 = !DILocalVariable(name: "align", arg: 3, scope: !4219, file: !3635, line: 380, type: !204)
!4226 = !DILocalVariable(name: "bytes", arg: 4, scope: !4219, file: !3635, line: 380, type: !204)
!4227 = !DILocalVariable(name: "h", scope: !4219, file: !3635, line: 382, type: !2550)
!4228 = !DILocalVariable(name: "c", scope: !4219, file: !3635, line: 399, type: !2555)
!4229 = !DILocalVariable(name: "rc", scope: !4219, file: !3635, line: 400, type: !2555)
!4230 = !DILocalVariable(name: "align_gap", scope: !4219, file: !3635, line: 401, type: !204)
!4231 = !DILocalVariable(name: "chunks_need", scope: !4219, file: !3635, line: 402, type: !3761)
!4232 = !DILocalVariable(name: "split_size", scope: !4233, file: !3635, line: 435, type: !3761)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !3635, line: 433, column: 61)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !3635, line: 432, column: 13)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !3635, line: 409, column: 13)
!4236 = distinct !DILexicalBlock(scope: !4237, file: !3635, line: 406, column: 13)
!4237 = distinct !DILexicalBlock(scope: !4219, file: !3635, line: 404, column: 6)
!4238 = !DILocalVariable(name: "ptr2", scope: !4219, file: !3635, line: 474, type: !102)
!4239 = !DILocalVariable(name: "prev_size", scope: !4240, file: !3635, line: 477, type: !204)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !3635, line: 476, column: 20)
!4241 = distinct !DILexicalBlock(scope: !4219, file: !3635, line: 476, column: 6)
!4242 = !DILocation(line: 0, scope: !4219)
!4243 = !DILocation(line: 382, column: 27, scope: !4219)
!4244 = !DILocation(line: 385, column: 10, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4219, file: !3635, line: 385, column: 6)
!4246 = !DILocation(line: 385, column: 6, scope: !4219)
!4247 = !DILocation(line: 386, column: 10, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4245, file: !3635, line: 385, column: 19)
!4249 = !DILocation(line: 386, column: 3, scope: !4248)
!4250 = !DILocation(line: 388, column: 12, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4219, file: !3635, line: 388, column: 6)
!4252 = !DILocation(line: 388, column: 6, scope: !4219)
!4253 = !DILocation(line: 389, column: 3, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4251, file: !3635, line: 388, column: 18)
!4255 = !DILocation(line: 390, column: 3, scope: !4254)
!4256 = !DILocation(line: 395, column: 6, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4219, file: !3635, line: 395, column: 6)
!4258 = !DILocation(line: 395, column: 6, scope: !4219)
!4259 = !DILocation(line: 399, column: 16, scope: !4219)
!4260 = !DILocation(line: 400, column: 17, scope: !4219)
!4261 = !DILocation(line: 401, column: 49, scope: !4219)
!4262 = !DILocation(line: 401, column: 36, scope: !4219)
!4263 = !DILocation(line: 402, column: 52, scope: !4219)
!4264 = !DILocation(line: 402, column: 26, scope: !4219)
!4265 = !DILocation(line: 404, column: 6, scope: !4237)
!4266 = !DILocation(line: 404, column: 12, scope: !4237)
!4267 = !DILocation(line: 404, column: 40, scope: !4237)
!4268 = !DILocation(line: 404, column: 31, scope: !4237)
!4269 = !DILocation(line: 404, column: 6, scope: !4219)
!4270 = !DILocation(line: 406, column: 13, scope: !4236)
!4271 = !DILocation(line: 406, column: 30, scope: !4236)
!4272 = !DILocation(line: 406, column: 13, scope: !4237)
!4273 = !DILocation(line: 409, column: 30, scope: !4235)
!4274 = !DILocation(line: 409, column: 13, scope: !4236)
!4275 = !DILocation(line: 420, column: 24, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4235, file: !3635, line: 409, column: 45)
!4277 = !DILocation(line: 420, column: 3, scope: !4276)
!4278 = !DILocation(line: 421, column: 3, scope: !4276)
!4279 = !DILocation(line: 422, column: 3, scope: !4276)
!4280 = !DILocation(line: 431, column: 3, scope: !4276)
!4281 = !DILocation(line: 432, column: 14, scope: !4234)
!4282 = !DILocation(line: 432, column: 32, scope: !4234)
!4283 = !DILocation(line: 433, column: 26, scope: !4234)
!4284 = !DILocation(line: 433, column: 24, scope: !4234)
!4285 = !DILocation(line: 433, column: 44, scope: !4234)
!4286 = !DILocation(line: 432, column: 13, scope: !4235)
!4287 = !DILocation(line: 435, column: 38, scope: !4233)
!4288 = !DILocation(line: 0, scope: !4233)
!4289 = !DILocation(line: 445, column: 3, scope: !4233)
!4290 = !DILocation(line: 447, column: 20, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4233, file: !3635, line: 447, column: 7)
!4292 = !DILocation(line: 447, column: 18, scope: !4291)
!4293 = !DILocation(line: 447, column: 7, scope: !4233)
!4294 = !DILocation(line: 448, column: 27, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4291, file: !3635, line: 447, column: 39)
!4296 = !DILocation(line: 448, column: 4, scope: !4295)
!4297 = !DILocation(line: 449, column: 4, scope: !4295)
!4298 = !DILocation(line: 450, column: 3, scope: !4295)
!4299 = !DILocation(line: 452, column: 3, scope: !4233)
!4300 = !DILocation(line: 453, column: 3, scope: !4233)
!4301 = !DILocation(line: 474, column: 15, scope: !4219)
!4302 = !DILocation(line: 476, column: 11, scope: !4241)
!4303 = !DILocation(line: 476, column: 6, scope: !4219)
!4304 = !DILocation(line: 477, column: 42, scope: !4240)
!4305 = !DILocation(line: 477, column: 22, scope: !4240)
!4306 = !DILocation(line: 477, column: 60, scope: !4240)
!4307 = !DILocation(line: 0, scope: !4240)
!4308 = !DILocation(line: 479, column: 21, scope: !4240)
!4309 = !DILocation(line: 479, column: 3, scope: !4240)
!4310 = !DILocation(line: 480, column: 3, scope: !4240)
!4311 = !DILocation(line: 481, column: 2, scope: !4240)
!4312 = !DILocation(line: 483, column: 1, scope: !4219)
!4313 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2537, file: !2537, line: 245, type: !4314, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !4316)
!4314 = !DISubroutineType(types: !4315)
!4315 = !{!204, !2550, !3761}
!4316 = !{!4317, !4318}
!4317 = !DILocalVariable(name: "h", arg: 1, scope: !4313, file: !2537, line: 245, type: !2550)
!4318 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4313, file: !2537, line: 245, type: !3761)
!4319 = !DILocation(line: 0, scope: !4313)
!4320 = !DILocation(line: 247, column: 20, scope: !4313)
!4321 = !DILocation(line: 247, column: 33, scope: !4313)
!4322 = !DILocation(line: 247, column: 2, scope: !4313)
!4323 = distinct !DISubprogram(name: "sys_heap_init", scope: !3635, file: !3635, line: 485, type: !4324, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !4326)
!4324 = !DISubroutineType(types: !4325)
!4325 = !{null, !3638, !102, !204}
!4326 = !{!4327, !4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336}
!4327 = !DILocalVariable(name: "heap", arg: 1, scope: !4323, file: !3635, line: 485, type: !3638)
!4328 = !DILocalVariable(name: "mem", arg: 2, scope: !4323, file: !3635, line: 485, type: !102)
!4329 = !DILocalVariable(name: "bytes", arg: 3, scope: !4323, file: !3635, line: 485, type: !204)
!4330 = !DILocalVariable(name: "addr", scope: !4323, file: !3635, line: 502, type: !22)
!4331 = !DILocalVariable(name: "end", scope: !4323, file: !3635, line: 503, type: !22)
!4332 = !DILocalVariable(name: "heap_sz", scope: !4323, file: !3635, line: 504, type: !3761)
!4333 = !DILocalVariable(name: "h", scope: !4323, file: !3635, line: 509, type: !2550)
!4334 = !DILocalVariable(name: "nb_buckets", scope: !4323, file: !3635, line: 520, type: !103)
!4335 = !DILocalVariable(name: "chunk0_size", scope: !4323, file: !3635, line: 521, type: !3761)
!4336 = !DILocalVariable(name: "i", scope: !4337, file: !3635, line: 526, type: !103)
!4337 = distinct !DILexicalBlock(scope: !4323, file: !3635, line: 526, column: 2)
!4338 = !DILocation(line: 0, scope: !4323)
!4339 = !DILocation(line: 499, column: 8, scope: !4323)
!4340 = !DILocation(line: 502, column: 19, scope: !4323)
!4341 = !DILocation(line: 503, column: 18, scope: !4323)
!4342 = !DILocation(line: 504, column: 27, scope: !4323)
!4343 = !DILocation(line: 504, column: 35, scope: !4323)
!4344 = !DILocation(line: 509, column: 21, scope: !4323)
!4345 = !DILocation(line: 510, column: 8, scope: !4323)
!4346 = !DILocation(line: 510, column: 13, scope: !4323)
!4347 = !DILocation(line: 511, column: 5, scope: !4323)
!4348 = !DILocation(line: 511, column: 15, scope: !4323)
!4349 = !DILocation(line: 512, column: 5, scope: !4323)
!4350 = !DILocation(line: 512, column: 19, scope: !4323)
!4351 = !DILocation(line: 520, column: 19, scope: !4323)
!4352 = !DILocation(line: 522, column: 21, scope: !4323)
!4353 = !DILocation(line: 521, column: 56, scope: !4323)
!4354 = !DILocation(line: 521, column: 26, scope: !4323)
!4355 = !DILocation(line: 0, scope: !4337)
!4356 = !DILocation(line: 526, column: 20, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4337, file: !3635, line: 526, column: 2)
!4358 = !DILocation(line: 526, column: 2, scope: !4337)
!4359 = !DILocation(line: 531, column: 2, scope: !4323)
!4360 = !DILocation(line: 532, column: 2, scope: !4323)
!4361 = !DILocation(line: 533, column: 2, scope: !4323)
!4362 = !DILocation(line: 536, column: 41, scope: !4323)
!4363 = !DILocation(line: 536, column: 2, scope: !4323)
!4364 = !DILocation(line: 537, column: 2, scope: !4323)
!4365 = !DILocation(line: 540, column: 2, scope: !4323)
!4366 = !DILocation(line: 541, column: 2, scope: !4323)
!4367 = !DILocation(line: 542, column: 2, scope: !4323)
!4368 = !DILocation(line: 544, column: 2, scope: !4323)
!4369 = !DILocation(line: 545, column: 1, scope: !4323)
!4370 = !DILocation(line: 527, column: 17, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4357, file: !3635, line: 526, column: 39)
!4372 = !DILocation(line: 527, column: 22, scope: !4371)
!4373 = !DILocation(line: 526, column: 35, scope: !4357)
!4374 = distinct !{!4374, !4358, !4375}
!4375 = !DILocation(line: 528, column: 2, scope: !4337)
!4376 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2570, file: !2570, line: 1338, type: !4377, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !4385)
!4377 = !DISubroutineType(types: !4378)
!4378 = !{!103, !3365, !102, !144, !4379, !121}
!4379 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3331, line: 99, baseType: !4380)
!4380 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3331, line: 40, baseType: !4381)
!4381 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2570, baseType: !4382)
!4382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4383)
!4383 = !{!4384}
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4382, file: !2570, baseType: !102, size: 32)
!4385 = !{!4386, !4387, !4388, !4389, !4390, !4391, !4395, !4396, !4397, !4399, !4404, !4449, !4452, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4464, !4465, !4466, !4470, !4473, !4475, !4478, !4479, !4480, !4485, !4491, !4494, !4498, !4504, !4508, !4511, !4513, !4516}
!4386 = !DILocalVariable(name: "out", arg: 1, scope: !4376, file: !2570, line: 1338, type: !3365)
!4387 = !DILocalVariable(name: "ctx", arg: 2, scope: !4376, file: !2570, line: 1338, type: !102)
!4388 = !DILocalVariable(name: "fp", arg: 3, scope: !4376, file: !2570, line: 1338, type: !144)
!4389 = !DILocalVariable(name: "ap", arg: 4, scope: !4376, file: !2570, line: 1339, type: !4379)
!4390 = !DILocalVariable(name: "flags", arg: 5, scope: !4376, file: !2570, line: 1339, type: !121)
!4391 = !DILocalVariable(name: "buf", scope: !4376, file: !2570, line: 1341, type: !4392)
!4392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !4393)
!4393 = !{!4394}
!4394 = !DISubrange(count: 22)
!4395 = !DILocalVariable(name: "count", scope: !4376, file: !2570, line: 1342, type: !204)
!4396 = !DILocalVariable(name: "sint", scope: !4376, file: !2570, line: 1343, type: !2589)
!4397 = !DILocalVariable(name: "tagged_ap", scope: !4376, file: !2570, line: 1345, type: !4398)
!4398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!4399 = !DILocalVariable(name: "rc", scope: !4400, file: !2570, line: 1377, type: !103)
!4400 = distinct !DILexicalBlock(scope: !4401, file: !2570, line: 1377, column: 4)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !2570, line: 1376, column: 19)
!4402 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1376, column: 7)
!4403 = distinct !DILexicalBlock(scope: !4376, file: !2570, line: 1375, column: 19)
!4404 = !DILocalVariable(name: "state", scope: !4403, file: !2570, line: 1395, type: !4405)
!4405 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4376, file: !2570, line: 1392, size: 192, elements: !4406)
!4406 = !{!4407, !4417}
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4405, file: !2570, line: 1393, baseType: !4408, size: 64)
!4408 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2570, line: 166, size: 64, elements: !4409)
!4409 = !{!4410, !4411, !4412, !4414, !4416}
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4408, file: !2570, line: 168, baseType: !2589, size: 64)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4408, file: !2570, line: 171, baseType: !2592, size: 64)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4408, file: !2570, line: 174, baseType: !4413, size: 64)
!4413 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4408, file: !2570, line: 177, baseType: !4415, size: 64)
!4415 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4408, file: !2570, line: 180, baseType: !102, size: 32)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4405, file: !2570, line: 1394, baseType: !4418, size: 96, offset: 64)
!4418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2570, line: 189, size: 96, elements: !4419)
!4419 = !{!4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4444}
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4418, file: !2570, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4418, file: !2570, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4418, file: !2570, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4418, file: !2570, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4418, file: !2570, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4418, file: !2570, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4418, file: !2570, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4418, file: !2570, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4418, file: !2570, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4418, file: !2570, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4418, file: !2570, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4418, file: !2570, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4418, file: !2570, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4418, file: !2570, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4418, file: !2570, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4418, file: !2570, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4418, file: !2570, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4418, file: !2570, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4418, file: !2570, line: 260, baseType: !155, size: 8, offset: 24)
!4439 = !DIDerivedType(tag: DW_TAG_member, scope: !4418, file: !2570, line: 262, baseType: !4440, size: 32, offset: 32)
!4440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4418, file: !2570, line: 262, size: 32, elements: !4441)
!4441 = !{!4442, !4443}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4440, file: !2570, line: 267, baseType: !103, size: 32)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4440, file: !2570, line: 289, baseType: !103, size: 32)
!4444 = !DIDerivedType(tag: DW_TAG_member, scope: !4418, file: !2570, line: 292, baseType: !4445, size: 32, offset: 64)
!4445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4418, file: !2570, line: 292, size: 32, elements: !4446)
!4446 = !{!4447, !4448}
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4445, file: !2570, line: 297, baseType: !103, size: 32)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4445, file: !2570, line: 306, baseType: !103, size: 32)
!4449 = !DILocalVariable(name: "conv", scope: !4403, file: !2570, line: 1400, type: !4450)
!4450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4451)
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 32)
!4452 = !DILocalVariable(name: "value", scope: !4403, file: !2570, line: 1401, type: !4453)
!4453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4454)
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4408, size: 32)
!4455 = !DILocalVariable(name: "sp", scope: !4403, file: !2570, line: 1402, type: !144)
!4456 = !DILocalVariable(name: "width", scope: !4403, file: !2570, line: 1403, type: !103)
!4457 = !DILocalVariable(name: "precision", scope: !4403, file: !2570, line: 1404, type: !103)
!4458 = !DILocalVariable(name: "bps", scope: !4403, file: !2570, line: 1405, type: !144)
!4459 = !DILocalVariable(name: "bpe", scope: !4403, file: !2570, line: 1406, type: !144)
!4460 = !DILocalVariable(name: "sign", scope: !4403, file: !2570, line: 1407, type: !146)
!4461 = !DILocalVariable(name: "arg", scope: !4462, file: !2570, line: 1432, type: !103)
!4462 = distinct !DILexicalBlock(scope: !4463, file: !2570, line: 1431, column: 24)
!4463 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1431, column: 7)
!4464 = !DILocalVariable(name: "specifier_cat", scope: !4403, file: !2570, line: 1468, type: !2569)
!4465 = !DILocalVariable(name: "length_mod", scope: !4403, file: !2570, line: 1470, type: !2577)
!4466 = !DILocalVariable(name: "rc", scope: !4467, file: !2570, line: 1575, type: !103)
!4467 = distinct !DILexicalBlock(scope: !4468, file: !2570, line: 1575, column: 4)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !2570, line: 1574, column: 43)
!4469 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1574, column: 7)
!4470 = !DILocalVariable(name: "rc", scope: !4471, file: !2570, line: 1584, type: !103)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !2570, line: 1584, column: 4)
!4472 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1582, column: 28)
!4473 = !DILocalVariable(name: "len", scope: !4474, file: !2570, line: 1589, type: !204)
!4474 = distinct !DILexicalBlock(scope: !4472, file: !2570, line: 1586, column: 13)
!4475 = !DILocalVariable(name: "len", scope: !4476, file: !2570, line: 1641, type: !204)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !2570, line: 1640, column: 24)
!4477 = distinct !DILexicalBlock(scope: !4472, file: !2570, line: 1640, column: 8)
!4478 = !DILocalVariable(name: "nj_len", scope: !4403, file: !2570, line: 1722, type: !204)
!4479 = !DILocalVariable(name: "pad_len", scope: !4403, file: !2570, line: 1723, type: !103)
!4480 = !DILocalVariable(name: "pad", scope: !4481, file: !2570, line: 1751, type: !146)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !2570, line: 1750, column: 26)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !2570, line: 1750, column: 8)
!4483 = distinct !DILexicalBlock(scope: !4484, file: !2570, line: 1747, column: 18)
!4484 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1747, column: 7)
!4485 = !DILocalVariable(name: "rc", scope: !4486, file: !2570, line: 1758, type: !103)
!4486 = distinct !DILexicalBlock(scope: !4487, file: !2570, line: 1758, column: 7)
!4487 = distinct !DILexicalBlock(scope: !4488, file: !2570, line: 1757, column: 21)
!4488 = distinct !DILexicalBlock(scope: !4489, file: !2570, line: 1757, column: 10)
!4489 = distinct !DILexicalBlock(scope: !4490, file: !2570, line: 1756, column: 26)
!4490 = distinct !DILexicalBlock(scope: !4481, file: !2570, line: 1756, column: 9)
!4491 = !DILocalVariable(name: "rc", scope: !4492, file: !2570, line: 1765, type: !103)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !2570, line: 1765, column: 6)
!4493 = distinct !DILexicalBlock(scope: !4481, file: !2570, line: 1764, column: 25)
!4494 = !DILocalVariable(name: "rc", scope: !4495, file: !2570, line: 1774, type: !103)
!4495 = distinct !DILexicalBlock(scope: !4496, file: !2570, line: 1774, column: 4)
!4496 = distinct !DILexicalBlock(scope: !4497, file: !2570, line: 1773, column: 18)
!4497 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1773, column: 7)
!4498 = !DILocalVariable(name: "rc", scope: !4499, file: !2570, line: 1819, type: !103)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !2570, line: 1819, column: 5)
!4500 = distinct !DILexicalBlock(scope: !4501, file: !2570, line: 1818, column: 44)
!4501 = distinct !DILexicalBlock(scope: !4502, file: !2570, line: 1818, column: 8)
!4502 = distinct !DILexicalBlock(scope: !4503, file: !2570, line: 1817, column: 10)
!4503 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1777, column: 7)
!4504 = !DILocalVariable(name: "rc", scope: !4505, file: !2570, line: 1823, type: !103)
!4505 = distinct !DILexicalBlock(scope: !4506, file: !2570, line: 1823, column: 5)
!4506 = distinct !DILexicalBlock(scope: !4507, file: !2570, line: 1822, column: 26)
!4507 = distinct !DILexicalBlock(scope: !4502, file: !2570, line: 1822, column: 8)
!4508 = !DILocalVariable(name: "rc", scope: !4509, file: !2570, line: 1828, type: !103)
!4509 = distinct !DILexicalBlock(scope: !4510, file: !2570, line: 1828, column: 5)
!4510 = distinct !DILexicalBlock(scope: !4502, file: !2570, line: 1827, column: 26)
!4511 = !DILocalVariable(name: "rc", scope: !4512, file: !2570, line: 1831, type: !103)
!4512 = distinct !DILexicalBlock(scope: !4502, file: !2570, line: 1831, column: 4)
!4513 = !DILocalVariable(name: "rc", scope: !4514, file: !2570, line: 1836, type: !103)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !2570, line: 1836, column: 4)
!4515 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1835, column: 21)
!4516 = !DILabel(scope: !4472, name: "prec_int_pad0", file: !2570, line: 1634)
!4517 = !DILocation(line: 0, scope: !4376)
!4518 = !DILocation(line: 1341, column: 2, scope: !4376)
!4519 = !DILocation(line: 1341, column: 7, scope: !4376)
!4520 = !DILocation(line: 1375, column: 2, scope: !4376)
!4521 = !DILocation(line: 1342, column: 9, scope: !4376)
!4522 = !DILocation(line: 1375, column: 9, scope: !4376)
!4523 = !DILocation(line: 1377, column: 4, scope: !4400)
!4524 = !DILocation(line: 0, scope: !4400)
!4525 = !DILocation(line: 1377, column: 4, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4400, file: !2570, line: 1377, column: 4)
!4527 = distinct !{!4527, !4520, !4528}
!4528 = !DILocation(line: 1839, column: 2, scope: !4376)
!4529 = !DILocation(line: 1392, column: 3, scope: !4403)
!4530 = !DILocation(line: 1395, column: 5, scope: !4403)
!4531 = !DILocation(line: 0, scope: !4403)
!4532 = !DILocation(line: 1409, column: 8, scope: !4403)
!4533 = !DILocation(line: 1414, column: 13, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1414, column: 7)
!4535 = !DILocation(line: 1414, column: 7, scope: !4403)
!4536 = !DILocation(line: 1415, column: 12, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4534, file: !2570, line: 1414, column: 25)
!4538 = !DILocation(line: 1417, column: 14, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4537, file: !2570, line: 1417, column: 8)
!4540 = !DILocation(line: 1417, column: 8, scope: !4537)
!4541 = !DILocation(line: 1418, column: 21, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4539, file: !2570, line: 1417, column: 19)
!4543 = !DILocation(line: 1419, column: 13, scope: !4542)
!4544 = !DILocation(line: 1420, column: 4, scope: !4542)
!4545 = !DILocation(line: 1421, column: 20, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4534, file: !2570, line: 1421, column: 14)
!4547 = !DILocation(line: 1421, column: 14, scope: !4534)
!4548 = !DILocation(line: 1431, column: 13, scope: !4463)
!4549 = !DILocation(line: 1431, column: 7, scope: !4403)
!4550 = !DILocation(line: 1432, column: 14, scope: !4462)
!4551 = !DILocation(line: 0, scope: !4462)
!4552 = !DILocation(line: 1434, column: 12, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4462, file: !2570, line: 1434, column: 8)
!4554 = !DILocation(line: 1434, column: 8, scope: !4462)
!4555 = !DILocation(line: 1435, column: 24, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4553, file: !2570, line: 1434, column: 17)
!4557 = !DILocation(line: 1436, column: 4, scope: !4556)
!4558 = !DILocation(line: 1439, column: 20, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4463, file: !2570, line: 1439, column: 14)
!4560 = !DILocation(line: 1439, column: 14, scope: !4463)
!4561 = !DILocation(line: 1469, column: 37, scope: !4403)
!4562 = !DILocation(line: 1448, column: 20, scope: !4403)
!4563 = !DILocation(line: 1449, column: 22, scope: !4403)
!4564 = !DILocation(line: 1471, column: 34, scope: !4403)
!4565 = !DILocation(line: 1478, column: 7, scope: !4403)
!4566 = !DILocation(line: 1479, column: 4, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4568, file: !2570, line: 1478, column: 40)
!4568 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1478, column: 7)
!4569 = !DILocation(line: 1484, column: 19, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4567, file: !2570, line: 1479, column: 24)
!4571 = !DILocation(line: 1484, column: 17, scope: !4570)
!4572 = !DILocation(line: 1485, column: 5, scope: !4570)
!4573 = !DILocation(line: 1492, column: 20, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !2570, line: 1491, column: 12)
!4575 = distinct !DILexicalBlock(scope: !4570, file: !2570, line: 1487, column: 9)
!4576 = !DILocation(line: 1492, column: 18, scope: !4574)
!4577 = !DILocation(line: 1494, column: 5, scope: !4570)
!4578 = !DILocation(line: 1497, column: 23, scope: !4570)
!4579 = !DILocation(line: 1496, column: 17, scope: !4570)
!4580 = !DILocation(line: 1498, column: 5, scope: !4570)
!4581 = !DILocation(line: 1501, column: 23, scope: !4570)
!4582 = !DILocation(line: 1500, column: 17, scope: !4570)
!4583 = !DILocation(line: 1502, column: 5, scope: !4570)
!4584 = !DILocation(line: 1513, column: 23, scope: !4570)
!4585 = !DILocation(line: 1513, column: 6, scope: !4570)
!4586 = !DILocation(line: 1512, column: 17, scope: !4570)
!4587 = !DILocation(line: 1514, column: 5, scope: !4570)
!4588 = !DILocation(line: 0, scope: !4570)
!4589 = !DILocation(line: 1516, column: 8, scope: !4567)
!4590 = !DILocation(line: 1517, column: 19, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4592, file: !2570, line: 1516, column: 33)
!4592 = distinct !DILexicalBlock(scope: !4567, file: !2570, line: 1516, column: 8)
!4593 = !DILocation(line: 1517, column: 17, scope: !4591)
!4594 = !DILocation(line: 1518, column: 4, scope: !4591)
!4595 = !DILocation(line: 1519, column: 19, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4597, file: !2570, line: 1518, column: 39)
!4597 = distinct !DILexicalBlock(scope: !4592, file: !2570, line: 1518, column: 15)
!4598 = !DILocation(line: 1519, column: 17, scope: !4596)
!4599 = !DILocation(line: 1520, column: 4, scope: !4596)
!4600 = !DILocation(line: 1522, column: 4, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !2570, line: 1521, column: 47)
!4602 = distinct !DILexicalBlock(scope: !4568, file: !2570, line: 1521, column: 14)
!4603 = !DILocation(line: 1527, column: 19, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4601, file: !2570, line: 1522, column: 24)
!4605 = !DILocation(line: 1527, column: 17, scope: !4604)
!4606 = !DILocation(line: 1528, column: 5, scope: !4604)
!4607 = !DILocation(line: 0, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4604, file: !2570, line: 1530, column: 9)
!4609 = !DILocation(line: 1540, column: 23, scope: !4604)
!4610 = !DILocation(line: 1539, column: 17, scope: !4604)
!4611 = !DILocation(line: 1542, column: 5, scope: !4604)
!4612 = !DILocation(line: 1545, column: 23, scope: !4604)
!4613 = !DILocation(line: 1544, column: 17, scope: !4604)
!4614 = !DILocation(line: 1547, column: 5, scope: !4604)
!4615 = !DILocation(line: 1551, column: 23, scope: !4604)
!4616 = !DILocation(line: 1551, column: 6, scope: !4604)
!4617 = !DILocation(line: 1550, column: 17, scope: !4604)
!4618 = !DILocation(line: 1552, column: 5, scope: !4604)
!4619 = !DILocation(line: 0, scope: !4604)
!4620 = !DILocation(line: 1554, column: 8, scope: !4601)
!4621 = !DILocation(line: 1555, column: 19, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !2570, line: 1554, column: 33)
!4623 = distinct !DILexicalBlock(scope: !4601, file: !2570, line: 1554, column: 8)
!4624 = !DILocation(line: 1555, column: 17, scope: !4622)
!4625 = !DILocation(line: 1556, column: 4, scope: !4622)
!4626 = !DILocation(line: 1557, column: 19, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !2570, line: 1556, column: 39)
!4628 = distinct !DILexicalBlock(scope: !4623, file: !2570, line: 1556, column: 15)
!4629 = !DILocation(line: 1557, column: 17, scope: !4627)
!4630 = !DILocation(line: 1558, column: 4, scope: !4627)
!4631 = !DILocation(line: 0, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !2570, line: 1560, column: 8)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !2570, line: 1559, column: 45)
!4634 = distinct !DILexicalBlock(scope: !4602, file: !2570, line: 1559, column: 14)
!4635 = !DILocation(line: 1566, column: 17, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !2570, line: 1565, column: 46)
!4637 = distinct !DILexicalBlock(scope: !4634, file: !2570, line: 1565, column: 14)
!4638 = !DILocation(line: 1566, column: 15, scope: !4636)
!4639 = !DILocation(line: 1567, column: 3, scope: !4636)
!4640 = !DILocation(line: 1574, column: 21, scope: !4469)
!4641 = !DILocation(line: 1575, column: 4, scope: !4467)
!4642 = !DILocation(line: 0, scope: !4467)
!4643 = !DILocation(line: 1575, column: 4, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4467, file: !2570, line: 1575, column: 4)
!4645 = !DILocation(line: 1582, column: 17, scope: !4403)
!4646 = !DILocation(line: 1582, column: 3, scope: !4403)
!4647 = !DILocation(line: 1584, column: 4, scope: !4471)
!4648 = !DILocation(line: 0, scope: !4471)
!4649 = !DILocation(line: 1584, column: 4, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4471, file: !2570, line: 1584, column: 4)
!4651 = !DILocation(line: 1587, column: 31, scope: !4474)
!4652 = !DILocation(line: 1591, column: 18, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4474, file: !2570, line: 1591, column: 8)
!4654 = !DILocation(line: 1591, column: 8, scope: !4474)
!4655 = !DILocation(line: 1592, column: 11, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4653, file: !2570, line: 1591, column: 24)
!4657 = !DILocation(line: 0, scope: !4474)
!4658 = !DILocation(line: 1593, column: 4, scope: !4656)
!4659 = !DILocation(line: 1594, column: 11, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4653, file: !2570, line: 1593, column: 11)
!4661 = !DILocation(line: 1604, column: 51, scope: !4472)
!4662 = !DILocation(line: 1604, column: 13, scope: !4472)
!4663 = !DILocation(line: 1604, column: 11, scope: !4472)
!4664 = !DILocation(line: 1606, column: 4, scope: !4472)
!4665 = !DILocation(line: 1609, column: 14, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4472, file: !2570, line: 1609, column: 8)
!4667 = !DILocation(line: 1609, column: 8, scope: !4472)
!4668 = !DILocation(line: 1619, column: 18, scope: !4472)
!4669 = !DILocation(line: 1620, column: 13, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4472, file: !2570, line: 1620, column: 8)
!4671 = !DILocation(line: 1620, column: 8, scope: !4472)
!4672 = !DILocation(line: 1622, column: 36, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4670, file: !2570, line: 1620, column: 18)
!4674 = !DILocation(line: 1622, column: 17, scope: !4673)
!4675 = !DILocation(line: 1623, column: 4, scope: !4673)
!4676 = !DILocation(line: 1632, column: 29, scope: !4472)
!4677 = !DILocation(line: 1632, column: 10, scope: !4472)
!4678 = !DILocation(line: 1632, column: 4, scope: !4472)
!4679 = !DILocation(line: 1407, column: 8, scope: !4403)
!4680 = !DILocation(line: 0, scope: !4472)
!4681 = !DILocation(line: 1634, column: 3, scope: !4472)
!4682 = !DILocation(line: 1640, column: 18, scope: !4477)
!4683 = !DILocation(line: 1640, column: 8, scope: !4472)
!4684 = !DILocation(line: 1729, column: 13, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1729, column: 7)
!4686 = !DILocation(line: 1641, column: 22, scope: !4476)
!4687 = !DILocation(line: 0, scope: !4476)
!4688 = !DILocation(line: 1646, column: 21, scope: !4476)
!4689 = !DILocation(line: 1649, column: 13, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4476, file: !2570, line: 1649, column: 9)
!4691 = !DILocation(line: 1649, column: 9, scope: !4476)
!4692 = !DILocation(line: 1650, column: 35, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4690, file: !2570, line: 1649, column: 34)
!4694 = !DILocation(line: 1650, column: 23, scope: !4693)
!4695 = !DILocation(line: 1651, column: 5, scope: !4693)
!4696 = !DILocation(line: 1660, column: 15, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4472, file: !2570, line: 1660, column: 8)
!4698 = !DILocation(line: 1660, column: 19, scope: !4697)
!4699 = !DILocation(line: 1660, column: 8, scope: !4472)
!4700 = !DILocation(line: 1661, column: 23, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4697, file: !2570, line: 1660, column: 28)
!4702 = !DILocation(line: 1661, column: 11, scope: !4701)
!4703 = !DILocation(line: 1665, column: 22, scope: !4701)
!4704 = !DILocation(line: 1666, column: 21, scope: !4701)
!4705 = !DILocation(line: 1668, column: 5, scope: !4701)
!4706 = !DILocation(line: 1677, column: 30, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !2570, line: 1676, column: 49)
!4708 = distinct !DILexicalBlock(scope: !4472, file: !2570, line: 1676, column: 8)
!4709 = !DILocation(line: 1677, column: 5, scope: !4707)
!4710 = !DILocation(line: 1680, column: 4, scope: !4472)
!4711 = !DILocation(line: 0, scope: !4653)
!4712 = !DILocation(line: 1597, column: 14, scope: !4474)
!4713 = !DILocation(line: 1699, column: 11, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1699, column: 7)
!4715 = !DILocation(line: 1699, column: 7, scope: !4403)
!4716 = !DILocation(line: 1725, column: 7, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1725, column: 7)
!4718 = !DILocation(line: 1725, column: 12, scope: !4717)
!4719 = !DILocation(line: 1747, column: 13, scope: !4484)
!4720 = !DILocation(line: 1747, column: 7, scope: !4403)
!4721 = !DILocation(line: 1722, column: 24, scope: !4403)
!4722 = !DILocation(line: 1725, column: 7, scope: !4403)
!4723 = !DILocation(line: 1729, column: 7, scope: !4403)
!4724 = !DILocation(line: 1736, column: 13, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4403, file: !2570, line: 1736, column: 7)
!4726 = !DILocation(line: 1735, column: 19, scope: !4403)
!4727 = !DILocation(line: 1736, column: 7, scope: !4403)
!4728 = !DILocation(line: 1748, column: 10, scope: !4483)
!4729 = !DILocation(line: 1750, column: 15, scope: !4482)
!4730 = !DILocation(line: 1750, column: 8, scope: !4483)
!4731 = !DILocation(line: 0, scope: !4481)
!4732 = !DILocation(line: 1756, column: 15, scope: !4490)
!4733 = !DILocation(line: 1756, column: 9, scope: !4481)
!4734 = !DILocation(line: 1758, column: 7, scope: !4486)
!4735 = !DILocation(line: 0, scope: !4486)
!4736 = !DILocation(line: 1758, column: 7, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4486, file: !2570, line: 1758, column: 7)
!4738 = !DILocation(line: 1764, column: 5, scope: !4481)
!4739 = !DILocation(line: 0, scope: !4483)
!4740 = !DILocation(line: 1764, column: 20, scope: !4481)
!4741 = !DILocation(line: 1764, column: 17, scope: !4481)
!4742 = !DILocation(line: 1765, column: 6, scope: !4492)
!4743 = !DILocation(line: 0, scope: !4492)
!4744 = !DILocation(line: 1765, column: 6, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4492, file: !2570, line: 1765, column: 6)
!4746 = distinct !{!4746, !4738, !4747}
!4747 = !DILocation(line: 1766, column: 5, scope: !4481)
!4748 = !DILocation(line: 1773, column: 12, scope: !4497)
!4749 = !DILocation(line: 1773, column: 7, scope: !4403)
!4750 = !DILocation(line: 1773, column: 7, scope: !4497)
!4751 = !DILocation(line: 1774, column: 4, scope: !4495)
!4752 = !DILocation(line: 0, scope: !4495)
!4753 = !DILocation(line: 1774, column: 4, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4495, file: !2570, line: 1774, column: 4)
!4755 = !DILocation(line: 1818, column: 8, scope: !4501)
!4756 = !DILocation(line: 1818, column: 27, scope: !4501)
!4757 = !DILocation(line: 1818, column: 25, scope: !4501)
!4758 = !DILocation(line: 1818, column: 8, scope: !4502)
!4759 = !DILocation(line: 1819, column: 5, scope: !4499)
!4760 = !DILocation(line: 0, scope: !4499)
!4761 = !DILocation(line: 1819, column: 5, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4499, file: !2570, line: 1819, column: 5)
!4763 = !DILocation(line: 1822, column: 14, scope: !4507)
!4764 = !DILocation(line: 1822, column: 8, scope: !4502)
!4765 = !DILocation(line: 1823, column: 5, scope: !4505)
!4766 = !DILocation(line: 0, scope: !4505)
!4767 = !DILocation(line: 1823, column: 5, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4505, file: !2570, line: 1823, column: 5)
!4769 = !DILocation(line: 1826, column: 20, scope: !4502)
!4770 = !DILocation(line: 1827, column: 4, scope: !4502)
!4771 = !DILocation(line: 0, scope: !4502)
!4772 = !DILocation(line: 1827, column: 21, scope: !4502)
!4773 = !DILocation(line: 1827, column: 18, scope: !4502)
!4774 = !DILocation(line: 1828, column: 5, scope: !4509)
!4775 = !DILocation(line: 0, scope: !4509)
!4776 = !DILocation(line: 1828, column: 5, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4509, file: !2570, line: 1828, column: 5)
!4778 = distinct !{!4778, !4770, !4779}
!4779 = !DILocation(line: 1829, column: 4, scope: !4502)
!4780 = !DILocation(line: 1831, column: 4, scope: !4512)
!4781 = !DILocation(line: 0, scope: !4512)
!4782 = !DILocation(line: 1831, column: 4, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4512, file: !2570, line: 1831, column: 4)
!4784 = !DILocation(line: 1835, column: 16, scope: !4403)
!4785 = !DILocation(line: 1835, column: 3, scope: !4403)
!4786 = !DILocation(line: 1836, column: 4, scope: !4514)
!4787 = !DILocation(line: 0, scope: !4514)
!4788 = !DILocation(line: 1836, column: 4, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4514, file: !2570, line: 1836, column: 4)
!4790 = !DILocation(line: 1837, column: 4, scope: !4515)
!4791 = distinct !{!4791, !4785, !4792}
!4792 = !DILocation(line: 1838, column: 3, scope: !4403)
!4793 = !DILocation(line: 1844, column: 1, scope: !4376)
!4794 = distinct !DISubprogram(name: "extract_conversion", scope: !2570, file: !2570, line: 642, type: !4795, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !4797)
!4795 = !DISubroutineType(types: !4796)
!4796 = !{!144, !4451, !144}
!4797 = !{!4798, !4799}
!4798 = !DILocalVariable(name: "conv", arg: 1, scope: !4794, file: !2570, line: 642, type: !4451)
!4799 = !DILocalVariable(name: "sp", arg: 2, scope: !4794, file: !2570, line: 643, type: !144)
!4800 = !DILocation(line: 0, scope: !4794)
!4801 = !DILocation(line: 645, column: 10, scope: !4794)
!4802 = !DILocation(line: 653, column: 2, scope: !4794)
!4803 = !DILocation(line: 654, column: 6, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4794, file: !2570, line: 654, column: 6)
!4805 = !DILocation(line: 654, column: 10, scope: !4804)
!4806 = !DILocation(line: 654, column: 6, scope: !4794)
!4807 = !DILocation(line: 655, column: 24, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4804, file: !2570, line: 654, column: 18)
!4809 = !DILocation(line: 655, column: 19, scope: !4808)
!4810 = !DILocation(line: 656, column: 3, scope: !4808)
!4811 = !DILocation(line: 659, column: 7, scope: !4794)
!4812 = !DILocation(line: 660, column: 7, scope: !4794)
!4813 = !DILocation(line: 661, column: 7, scope: !4794)
!4814 = !DILocation(line: 662, column: 7, scope: !4794)
!4815 = !DILocation(line: 663, column: 7, scope: !4794)
!4816 = !DILocation(line: 665, column: 2, scope: !4794)
!4817 = !DILocation(line: 666, column: 1, scope: !4794)
!4818 = distinct !DISubprogram(name: "outs", scope: !2570, file: !2570, line: 1319, type: !4819, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !4821)
!4819 = !DISubroutineType(types: !4820)
!4820 = !{!103, !3365, !102, !144, !144}
!4821 = !{!4822, !4823, !4824, !4825, !4826, !4827}
!4822 = !DILocalVariable(name: "out", arg: 1, scope: !4818, file: !2570, line: 1319, type: !3365)
!4823 = !DILocalVariable(name: "ctx", arg: 2, scope: !4818, file: !2570, line: 1320, type: !102)
!4824 = !DILocalVariable(name: "sp", arg: 3, scope: !4818, file: !2570, line: 1321, type: !144)
!4825 = !DILocalVariable(name: "ep", arg: 4, scope: !4818, file: !2570, line: 1322, type: !144)
!4826 = !DILocalVariable(name: "count", scope: !4818, file: !2570, line: 1324, type: !204)
!4827 = !DILocalVariable(name: "rc", scope: !4828, file: !2570, line: 1327, type: !103)
!4828 = distinct !DILexicalBlock(scope: !4818, file: !2570, line: 1326, column: 45)
!4829 = !DILocation(line: 0, scope: !4818)
!4830 = !DILocation(line: 1326, column: 2, scope: !4818)
!4831 = !DILocation(line: 1324, column: 9, scope: !4818)
!4832 = !DILocation(line: 1326, column: 13, scope: !4818)
!4833 = !DILocation(line: 1326, column: 19, scope: !4818)
!4834 = !DILocation(line: 1327, column: 21, scope: !4828)
!4835 = !DILocation(line: 1326, column: 36, scope: !4818)
!4836 = !DILocation(line: 1326, column: 39, scope: !4818)
!4837 = !DILocation(line: 1327, column: 24, scope: !4828)
!4838 = !DILocation(line: 1327, column: 16, scope: !4828)
!4839 = !DILocation(line: 1327, column: 12, scope: !4828)
!4840 = !DILocation(line: 0, scope: !4828)
!4841 = !DILocation(line: 1329, column: 10, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4828, file: !2570, line: 1329, column: 7)
!4843 = !DILocation(line: 1329, column: 7, scope: !4828)
!4844 = distinct !{!4844, !4830, !4845}
!4845 = !DILocation(line: 1333, column: 2, scope: !4818)
!4846 = !DILocation(line: 1336, column: 1, scope: !4818)
!4847 = distinct !DISubprogram(name: "encode_uint", scope: !2570, file: !2570, line: 788, type: !4848, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !4850)
!4848 = !DISubroutineType(types: !4849)
!4849 = !{!344, !2592, !4451, !344, !144}
!4850 = !{!4851, !4852, !4853, !4854, !4855, !4856, !4858, !4859}
!4851 = !DILocalVariable(name: "value", arg: 1, scope: !4847, file: !2570, line: 788, type: !2592)
!4852 = !DILocalVariable(name: "conv", arg: 2, scope: !4847, file: !2570, line: 789, type: !4451)
!4853 = !DILocalVariable(name: "bps", arg: 3, scope: !4847, file: !2570, line: 790, type: !344)
!4854 = !DILocalVariable(name: "bpe", arg: 4, scope: !4847, file: !2570, line: 791, type: !144)
!4855 = !DILocalVariable(name: "upcase", scope: !4847, file: !2570, line: 793, type: !157)
!4856 = !DILocalVariable(name: "radix", scope: !4847, file: !2570, line: 794, type: !4857)
!4857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4858 = !DILocalVariable(name: "bp", scope: !4847, file: !2570, line: 795, type: !344)
!4859 = !DILocalVariable(name: "lsv", scope: !4860, file: !2570, line: 798, type: !32)
!4860 = distinct !DILexicalBlock(scope: !4847, file: !2570, line: 797, column: 5)
!4861 = !DILocation(line: 0, scope: !4847)
!4862 = !DILocation(line: 793, column: 35, scope: !4847)
!4863 = !DILocation(line: 793, column: 24, scope: !4847)
!4864 = !DILocation(line: 793, column: 16, scope: !4847)
!4865 = !DILocation(line: 794, column: 29, scope: !4847)
!4866 = !DILocation(line: 795, column: 24, scope: !4847)
!4867 = !DILocation(line: 795, column: 17, scope: !4847)
!4868 = !DILocation(line: 797, column: 2, scope: !4847)
!4869 = !DILocation(line: 802, column: 9, scope: !4860)
!4870 = !DILocation(line: 798, column: 22, scope: !4860)
!4871 = !DILocation(line: 0, scope: !4860)
!4872 = !DILocation(line: 800, column: 16, scope: !4860)
!4873 = !DILocation(line: 800, column: 11, scope: !4860)
!4874 = !DILocation(line: 800, column: 4, scope: !4860)
!4875 = !DILocation(line: 800, column: 9, scope: !4860)
!4876 = !DILocation(line: 803, column: 18, scope: !4847)
!4877 = !DILocation(line: 803, column: 24, scope: !4847)
!4878 = !DILocation(line: 803, column: 2, scope: !4860)
!4879 = distinct !{!4879, !4868, !4880}
!4880 = !DILocation(line: 803, column: 37, scope: !4847)
!4881 = !DILocation(line: 808, column: 12, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4847, file: !2570, line: 808, column: 6)
!4883 = !DILocation(line: 808, column: 6, scope: !4847)
!4884 = !DILocation(line: 809, column: 7, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4882, file: !2570, line: 808, column: 23)
!4886 = !DILocation(line: 813, column: 3, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4888, file: !2570, line: 811, column: 27)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !2570, line: 811, column: 14)
!4889 = distinct !DILexicalBlock(scope: !4885, file: !2570, line: 809, column: 7)
!4890 = !DILocation(line: 0, scope: !4889)
!4891 = !DILocation(line: 818, column: 2, scope: !4847)
!4892 = distinct !DISubprogram(name: "store_count", scope: !2570, file: !2570, line: 1280, type: !4893, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !4897)
!4893 = !DISubroutineType(types: !4894)
!4894 = !{null, !4895, !102, !103}
!4895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4896, size: 32)
!4896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4418)
!4897 = !{!4898, !4899, !4900}
!4898 = !DILocalVariable(name: "conv", arg: 1, scope: !4892, file: !2570, line: 1280, type: !4895)
!4899 = !DILocalVariable(name: "dp", arg: 2, scope: !4892, file: !2570, line: 1281, type: !102)
!4900 = !DILocalVariable(name: "count", arg: 3, scope: !4892, file: !2570, line: 1282, type: !103)
!4901 = !DILocation(line: 0, scope: !4892)
!4902 = !DILocation(line: 1284, column: 38, scope: !4892)
!4903 = !DILocation(line: 1284, column: 2, scope: !4892)
!4904 = !DILocation(line: 1286, column: 4, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4892, file: !2570, line: 1284, column: 50)
!4906 = !DILocation(line: 1286, column: 14, scope: !4905)
!4907 = !DILocation(line: 1287, column: 3, scope: !4905)
!4908 = !DILocation(line: 1289, column: 24, scope: !4905)
!4909 = !DILocation(line: 1289, column: 22, scope: !4905)
!4910 = !DILocation(line: 1290, column: 3, scope: !4905)
!4911 = !DILocation(line: 1292, column: 18, scope: !4905)
!4912 = !DILocation(line: 1292, column: 4, scope: !4905)
!4913 = !DILocation(line: 1292, column: 16, scope: !4905)
!4914 = !DILocation(line: 1293, column: 3, scope: !4905)
!4915 = !DILocation(line: 1295, column: 4, scope: !4905)
!4916 = !DILocation(line: 1295, column: 15, scope: !4905)
!4917 = !DILocation(line: 1296, column: 3, scope: !4905)
!4918 = !DILocation(line: 1298, column: 22, scope: !4905)
!4919 = !DILocation(line: 1298, column: 4, scope: !4905)
!4920 = !DILocation(line: 1298, column: 20, scope: !4905)
!4921 = !DILocation(line: 1299, column: 3, scope: !4905)
!4922 = !DILocation(line: 1301, column: 21, scope: !4905)
!4923 = !DILocation(line: 1301, column: 4, scope: !4905)
!4924 = !DILocation(line: 1301, column: 19, scope: !4905)
!4925 = !DILocation(line: 1302, column: 3, scope: !4905)
!4926 = !DILocation(line: 1304, column: 4, scope: !4905)
!4927 = !DILocation(line: 1304, column: 17, scope: !4905)
!4928 = !DILocation(line: 1305, column: 3, scope: !4905)
!4929 = !DILocation(line: 1307, column: 4, scope: !4905)
!4930 = !DILocation(line: 1307, column: 20, scope: !4905)
!4931 = !DILocation(line: 1308, column: 3, scope: !4905)
!4932 = !DILocation(line: 1316, column: 1, scope: !4892)
!4933 = distinct !DISubprogram(name: "isupper", scope: !4934, file: !4934, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !4935)
!4934 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4935 = !{!4936}
!4936 = !DILocalVariable(name: "a", arg: 1, scope: !4933, file: !4934, line: 16, type: !103)
!4937 = !DILocation(line: 0, scope: !4933)
!4938 = !DILocation(line: 18, column: 29, scope: !4933)
!4939 = !DILocation(line: 18, column: 45, scope: !4933)
!4940 = !DILocation(line: 18, column: 2, scope: !4933)
!4941 = distinct !DISubprogram(name: "conversion_radix", scope: !2570, file: !2570, line: 761, type: !4942, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !4944)
!4942 = !DISubroutineType(types: !4943)
!4943 = !{!204, !146}
!4944 = !{!4945}
!4945 = !DILocalVariable(name: "specifier", arg: 1, scope: !4941, file: !2570, line: 761, type: !146)
!4946 = !DILocation(line: 0, scope: !4941)
!4947 = !DILocation(line: 763, column: 2, scope: !4941)
!4948 = !DILocation(line: 770, column: 3, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4941, file: !2570, line: 763, column: 21)
!4950 = !DILocation(line: 774, column: 3, scope: !4949)
!4951 = !DILocation(line: 0, scope: !4949)
!4952 = !DILocation(line: 776, column: 1, scope: !4941)
!4953 = distinct !DISubprogram(name: "extract_flags", scope: !2570, file: !2570, line: 339, type: !4795, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !4954)
!4954 = !{!4955, !4956, !4957}
!4955 = !DILocalVariable(name: "conv", arg: 1, scope: !4953, file: !2570, line: 339, type: !4451)
!4956 = !DILocalVariable(name: "sp", arg: 2, scope: !4953, file: !2570, line: 340, type: !144)
!4957 = !DILocalVariable(name: "loop", scope: !4953, file: !2570, line: 342, type: !157)
!4958 = !DILocation(line: 0, scope: !4953)
!4959 = !DILocation(line: 344, column: 2, scope: !4953)
!4960 = !DILocation(line: 345, column: 11, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4953, file: !2570, line: 344, column: 5)
!4962 = !DILocation(line: 345, column: 3, scope: !4961)
!4963 = !DILocation(line: 351, column: 4, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4961, file: !2570, line: 345, column: 16)
!4965 = !DILocation(line: 354, column: 4, scope: !4964)
!4966 = !DILocation(line: 357, column: 4, scope: !4964)
!4967 = !DILocation(line: 360, column: 4, scope: !4964)
!4968 = !DILocation(line: 0, scope: !4964)
!4969 = !DILocation(line: 370, column: 12, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4953, file: !2570, line: 370, column: 6)
!4971 = !DILocation(line: 370, column: 22, scope: !4970)
!4972 = !DILocation(line: 371, column: 19, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4970, file: !2570, line: 370, column: 42)
!4974 = !DILocation(line: 372, column: 2, scope: !4973)
!4975 = !DILocation(line: 376, column: 2, scope: !4953)
!4976 = distinct !DISubprogram(name: "extract_width", scope: !2570, file: !2570, line: 388, type: !4795, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !4977)
!4977 = !{!4978, !4979, !4980, !4981}
!4978 = !DILocalVariable(name: "conv", arg: 1, scope: !4976, file: !2570, line: 388, type: !4451)
!4979 = !DILocalVariable(name: "sp", arg: 2, scope: !4976, file: !2570, line: 389, type: !144)
!4980 = !DILocalVariable(name: "wp", scope: !4976, file: !2570, line: 398, type: !144)
!4981 = !DILocalVariable(name: "width", scope: !4976, file: !2570, line: 399, type: !204)
!4982 = !DILocation(line: 0, scope: !4976)
!4983 = !DILocation(line: 391, column: 8, scope: !4976)
!4984 = !DILocation(line: 391, column: 22, scope: !4976)
!4985 = !DILocation(line: 393, column: 6, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4976, file: !2570, line: 393, column: 6)
!4987 = !DILocation(line: 393, column: 10, scope: !4986)
!4988 = !DILocation(line: 393, column: 6, scope: !4976)
!4989 = !DILocation(line: 394, column: 20, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4986, file: !2570, line: 393, column: 18)
!4991 = !DILocation(line: 395, column: 10, scope: !4990)
!4992 = !DILocation(line: 395, column: 3, scope: !4990)
!4993 = !DILocation(line: 399, column: 17, scope: !4976)
!4994 = !DILocation(line: 401, column: 6, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4976, file: !2570, line: 401, column: 6)
!4996 = !DILocation(line: 401, column: 9, scope: !4995)
!4997 = !DILocation(line: 401, column: 6, scope: !4976)
!4998 = !DILocation(line: 402, column: 23, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4995, file: !2570, line: 401, column: 16)
!5000 = !DILocation(line: 403, column: 9, scope: !4999)
!5001 = !DILocation(line: 403, column: 21, scope: !4999)
!5002 = !DILocation(line: 405, column: 11, scope: !4999)
!5003 = !DILocation(line: 404, column: 21, scope: !4999)
!5004 = !DILocation(line: 406, column: 2, scope: !4999)
!5005 = !DILocation(line: 409, column: 1, scope: !4976)
!5006 = distinct !DISubprogram(name: "extract_prec", scope: !2570, file: !2570, line: 420, type: !4795, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !5007)
!5007 = !{!5008, !5009, !5010}
!5008 = !DILocalVariable(name: "conv", arg: 1, scope: !5006, file: !2570, line: 420, type: !4451)
!5009 = !DILocalVariable(name: "sp", arg: 2, scope: !5006, file: !2570, line: 421, type: !144)
!5010 = !DILocalVariable(name: "prec", scope: !5006, file: !2570, line: 435, type: !204)
!5011 = !DILocation(line: 0, scope: !5006)
!5012 = !DILocation(line: 423, column: 24, scope: !5006)
!5013 = !DILocation(line: 423, column: 28, scope: !5006)
!5014 = !DILocation(line: 423, column: 8, scope: !5006)
!5015 = !DILocation(line: 423, column: 21, scope: !5006)
!5016 = !DILocation(line: 425, column: 6, scope: !5006)
!5017 = !DILocation(line: 428, column: 2, scope: !5006)
!5018 = !DILocation(line: 430, column: 6, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5006, file: !2570, line: 430, column: 6)
!5020 = !DILocation(line: 430, column: 10, scope: !5019)
!5021 = !DILocation(line: 430, column: 6, scope: !5006)
!5022 = !DILocation(line: 431, column: 19, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5019, file: !2570, line: 430, column: 18)
!5024 = !DILocation(line: 432, column: 10, scope: !5023)
!5025 = !DILocation(line: 432, column: 3, scope: !5023)
!5026 = !DILocation(line: 435, column: 16, scope: !5006)
!5027 = !DILocation(line: 437, column: 8, scope: !5006)
!5028 = !DILocation(line: 437, column: 19, scope: !5006)
!5029 = !DILocation(line: 439, column: 10, scope: !5006)
!5030 = !DILocation(line: 438, column: 20, scope: !5006)
!5031 = !DILocation(line: 441, column: 9, scope: !5006)
!5032 = !DILocation(line: 442, column: 1, scope: !5006)
!5033 = distinct !DISubprogram(name: "extract_length", scope: !2570, file: !2570, line: 453, type: !4795, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !5034)
!5034 = !{!5035, !5036}
!5035 = !DILocalVariable(name: "conv", arg: 1, scope: !5033, file: !2570, line: 453, type: !4451)
!5036 = !DILocalVariable(name: "sp", arg: 2, scope: !5033, file: !2570, line: 454, type: !144)
!5037 = !DILocation(line: 0, scope: !5033)
!5038 = !DILocation(line: 456, column: 10, scope: !5033)
!5039 = !DILocation(line: 456, column: 2, scope: !5033)
!5040 = !DILocation(line: 458, column: 8, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5042, file: !2570, line: 458, column: 7)
!5042 = distinct !DILexicalBlock(scope: !5033, file: !2570, line: 456, column: 15)
!5043 = !DILocation(line: 458, column: 7, scope: !5041)
!5044 = !DILocation(line: 458, column: 13, scope: !5041)
!5045 = !DILocation(line: 0, scope: !5041)
!5046 = !DILocation(line: 458, column: 7, scope: !5042)
!5047 = !DILocation(line: 459, column: 21, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5041, file: !2570, line: 458, column: 21)
!5049 = !DILocation(line: 460, column: 4, scope: !5048)
!5050 = !DILocation(line: 461, column: 3, scope: !5048)
!5051 = !DILocation(line: 462, column: 21, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5041, file: !2570, line: 461, column: 10)
!5053 = !DILocation(line: 466, column: 8, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5042, file: !2570, line: 466, column: 7)
!5055 = !DILocation(line: 466, column: 7, scope: !5054)
!5056 = !DILocation(line: 466, column: 13, scope: !5054)
!5057 = !DILocation(line: 0, scope: !5054)
!5058 = !DILocation(line: 466, column: 7, scope: !5042)
!5059 = !DILocation(line: 467, column: 21, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5054, file: !2570, line: 466, column: 21)
!5061 = !DILocation(line: 468, column: 4, scope: !5060)
!5062 = !DILocation(line: 469, column: 3, scope: !5060)
!5063 = !DILocation(line: 470, column: 21, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5054, file: !2570, line: 469, column: 10)
!5065 = !DILocation(line: 474, column: 9, scope: !5042)
!5066 = !DILocation(line: 474, column: 20, scope: !5042)
!5067 = !DILocation(line: 475, column: 3, scope: !5042)
!5068 = !DILocation(line: 476, column: 3, scope: !5042)
!5069 = !DILocation(line: 478, column: 9, scope: !5042)
!5070 = !DILocation(line: 478, column: 20, scope: !5042)
!5071 = !DILocation(line: 479, column: 3, scope: !5042)
!5072 = !DILocation(line: 480, column: 3, scope: !5042)
!5073 = !DILocation(line: 482, column: 9, scope: !5042)
!5074 = !DILocation(line: 482, column: 20, scope: !5042)
!5075 = !DILocation(line: 483, column: 3, scope: !5042)
!5076 = !DILocation(line: 484, column: 3, scope: !5042)
!5077 = !DILocation(line: 486, column: 9, scope: !5042)
!5078 = !DILocation(line: 486, column: 20, scope: !5042)
!5079 = !DILocation(line: 487, column: 3, scope: !5042)
!5080 = !DILocation(line: 492, column: 21, scope: !5042)
!5081 = !DILocation(line: 493, column: 3, scope: !5042)
!5082 = !DILocation(line: 495, column: 9, scope: !5042)
!5083 = !DILocation(line: 495, column: 20, scope: !5042)
!5084 = !DILocation(line: 496, column: 3, scope: !5042)
!5085 = !DILocation(line: 498, column: 2, scope: !5033)
!5086 = distinct !DISubprogram(name: "extract_specifier", scope: !2570, file: !2570, line: 513, type: !4795, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !5087)
!5087 = !{!5088, !5089, !5090, !5091}
!5088 = !DILocalVariable(name: "conv", arg: 1, scope: !5086, file: !2570, line: 513, type: !4451)
!5089 = !DILocalVariable(name: "sp", arg: 2, scope: !5086, file: !2570, line: 514, type: !144)
!5090 = !DILocalVariable(name: "unsupported", scope: !5086, file: !2570, line: 516, type: !157)
!5091 = !DILabel(scope: !5092, name: "int_conv", file: !2570, line: 526)
!5092 = distinct !DILexicalBlock(scope: !5086, file: !2570, line: 520, column: 27)
!5093 = !DILocation(line: 0, scope: !5086)
!5094 = !DILocation(line: 518, column: 20, scope: !5086)
!5095 = !DILocation(line: 518, column: 8, scope: !5086)
!5096 = !DILocation(line: 518, column: 18, scope: !5086)
!5097 = !DILocation(line: 520, column: 2, scope: !5086)
!5098 = !DILocation(line: 525, column: 3, scope: !5092)
!5099 = !DILocation(line: 0, scope: !5092)
!5100 = !DILocation(line: 526, column: 1, scope: !5092)
!5101 = !DILocation(line: 528, column: 24, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5092, file: !2570, line: 528, column: 7)
!5103 = !DILocation(line: 528, column: 7, scope: !5092)
!5104 = !DILocation(line: 535, column: 23, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5092, file: !2570, line: 535, column: 7)
!5106 = !DILocation(line: 535, column: 7, scope: !5092)
!5107 = !DILocation(line: 536, column: 36, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5105, file: !2570, line: 535, column: 31)
!5109 = !DILocation(line: 537, column: 3, scope: !5108)
!5110 = !DILocation(line: 570, column: 9, scope: !5092)
!5111 = !DILocation(line: 570, column: 23, scope: !5092)
!5112 = !DILocation(line: 575, column: 4, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !2570, line: 573, column: 48)
!5114 = distinct !DILexicalBlock(scope: !5092, file: !2570, line: 573, column: 7)
!5115 = !DILocation(line: 603, column: 9, scope: !5092)
!5116 = !DILocation(line: 603, column: 23, scope: !5092)
!5117 = !DILocation(line: 605, column: 24, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5092, file: !2570, line: 605, column: 7)
!5119 = !DILocation(line: 605, column: 7, scope: !5092)
!5120 = !DILocation(line: 612, column: 9, scope: !5092)
!5121 = !DILocation(line: 612, column: 23, scope: !5092)
!5122 = !DILocation(line: 619, column: 24, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5092, file: !2570, line: 619, column: 7)
!5124 = !DILocation(line: 619, column: 7, scope: !5092)
!5125 = !DILocation(line: 625, column: 9, scope: !5092)
!5126 = !DILocation(line: 625, column: 17, scope: !5092)
!5127 = !DILocation(line: 626, column: 3, scope: !5092)
!5128 = !DILocation(line: 629, column: 20, scope: !5086)
!5129 = !DILocation(line: 629, column: 8, scope: !5086)
!5130 = !DILocation(line: 518, column: 23, scope: !5086)
!5131 = !DILocation(line: 631, column: 2, scope: !5086)
!5132 = distinct !DISubprogram(name: "extract_decimal", scope: !2570, file: !2570, line: 318, type: !5133, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !5136)
!5133 = !DISubroutineType(types: !5134)
!5134 = !{!204, !5135}
!5135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!5136 = !{!5137, !5138, !5139}
!5137 = !DILocalVariable(name: "str", arg: 1, scope: !5132, file: !2570, line: 318, type: !5135)
!5138 = !DILocalVariable(name: "sp", scope: !5132, file: !2570, line: 320, type: !144)
!5139 = !DILocalVariable(name: "val", scope: !5132, file: !2570, line: 321, type: !204)
!5140 = !DILocation(line: 0, scope: !5132)
!5141 = !DILocation(line: 320, column: 19, scope: !5132)
!5142 = !DILocation(line: 323, column: 37, scope: !5132)
!5143 = !DILocation(line: 323, column: 17, scope: !5132)
!5144 = !DILocation(line: 323, column: 9, scope: !5132)
!5145 = !DILocation(line: 323, column: 2, scope: !5132)
!5146 = !DILocation(line: 324, column: 13, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5132, file: !2570, line: 323, column: 43)
!5148 = !DILocation(line: 324, column: 24, scope: !5147)
!5149 = !DILocation(line: 324, column: 19, scope: !5147)
!5150 = !DILocation(line: 324, column: 27, scope: !5147)
!5151 = distinct !{!5151, !5145, !5152}
!5152 = !DILocation(line: 325, column: 2, scope: !5132)
!5153 = !DILocation(line: 326, column: 7, scope: !5132)
!5154 = !DILocation(line: 327, column: 2, scope: !5132)
!5155 = distinct !DISubprogram(name: "isdigit", scope: !4934, file: !4934, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !5156)
!5156 = !{!5157}
!5157 = !DILocalVariable(name: "a", arg: 1, scope: !5155, file: !4934, line: 43, type: !103)
!5158 = !DILocation(line: 0, scope: !5155)
!5159 = !DILocation(line: 45, column: 29, scope: !5155)
!5160 = !DILocation(line: 45, column: 45, scope: !5155)
!5161 = !DILocation(line: 45, column: 2, scope: !5155)
!5162 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5163, file: !5163, line: 9, type: !3181, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !317)
!5163 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!5164 = !DILocation(line: 11, column: 1, scope: !5162)
!5165 = !{i64 2147561654, i64 2147561697, i64 2147561737}
!5166 = !DILocation(line: 12, column: 1, scope: !5162)
!5167 = !{i64 2147565881, i64 2147565924, i64 2147565964}
!5168 = !DILocation(line: 13, column: 1, scope: !5162)
!5169 = !{i64 2147566090, i64 2147566133, i64 2147566173}
!5170 = !DILocation(line: 14, column: 1, scope: !5162)
!5171 = !{i64 2147566307, i64 2147566350, i64 2147566390}
!5172 = !DILocation(line: 15, column: 1, scope: !5162)
!5173 = !{i64 2147566476, i64 2147566519, i64 2147566559}
!5174 = !DILocation(line: 16, column: 1, scope: !5162)
!5175 = !{i64 2147566639, i64 2147566682, i64 2147566722}
!5176 = !DILocation(line: 17, column: 1, scope: !5162)
!5177 = !{i64 2147566823, i64 2147566866, i64 2147566906}
!5178 = !DILocation(line: 18, column: 1, scope: !5162)
!5179 = !{i64 2147567002, i64 2147567045, i64 2147567085}
!5180 = !DILocation(line: 19, column: 1, scope: !5162)
!5181 = !{i64 2147567245, i64 2147567288, i64 2147567328}
!5182 = !DILocation(line: 20, column: 1, scope: !5162)
!5183 = !{i64 2147567480, i64 2147567523, i64 2147567563}
!5184 = !DILocation(line: 21, column: 1, scope: !5162)
!5185 = !{i64 2147567667, i64 2147567710, i64 2147567750}
!5186 = !DILocation(line: 22, column: 1, scope: !5162)
!5187 = !{i64 2147567883, i64 2147567926, i64 2147567966}
!5188 = !DILocation(line: 23, column: 1, scope: !5162)
!5189 = !{i64 2147568086, i64 2147568129, i64 2147568169}
!5190 = !DILocation(line: 24, column: 1, scope: !5162)
!5191 = !{i64 2147568289, i64 2147568332, i64 2147568372}
!5192 = !DILocation(line: 25, column: 1, scope: !5162)
!5193 = !{i64 2147568464, i64 2147568507, i64 2147568547}
!5194 = !DILocation(line: 26, column: 1, scope: !5162)
!5195 = !{i64 2147568672, i64 2147568715, i64 2147568755}
!5196 = !DILocation(line: 27, column: 1, scope: !5162)
!5197 = !{i64 2147568876, i64 2147568919, i64 2147568959}
!5198 = !DILocation(line: 28, column: 1, scope: !5162)
!5199 = !{i64 2147569069, i64 2147569112, i64 2147569152}
!5200 = !DILocation(line: 29, column: 1, scope: !5162)
!5201 = !{i64 2147569271, i64 2147569314, i64 2147569354}
!5202 = !DILocation(line: 30, column: 1, scope: !5162)
!5203 = !{i64 2147569498, i64 2147569541, i64 2147569581}
!5204 = !DILocation(line: 31, column: 1, scope: !5162)
!5205 = !{i64 2147569700, i64 2147569743, i64 2147569783}
!5206 = !DILocation(line: 32, column: 1, scope: !5162)
!5207 = !{i64 2147569915, i64 2147569958, i64 2147569998}
!5208 = !DILocation(line: 33, column: 1, scope: !5162)
!5209 = !{i64 2147570087, i64 2147570130, i64 2147570170}
!5210 = !DILocation(line: 34, column: 1, scope: !5162)
!5211 = !{i64 2147570289, i64 2147570332, i64 2147570372}
!5212 = !DILocation(line: 35, column: 1, scope: !5162)
!5213 = !{i64 2147570515, i64 2147570558, i64 2147570598}
!5214 = !DILocation(line: 36, column: 1, scope: !5162)
!5215 = !{i64 2147570714, i64 2147570757, i64 2147570797}
!5216 = !DILocation(line: 37, column: 1, scope: !5162)
!5217 = !{i64 2147570889, i64 2147570932, i64 2147570972}
!5218 = !DILocation(line: 38, column: 1, scope: !5162)
!5219 = !{i64 2147571157, i64 2147571200, i64 2147571240}
!5220 = !DILocation(line: 39, column: 1, scope: !5162)
!5221 = !{i64 2147571410, i64 2147571453, i64 2147571493}
!5222 = !DILocation(line: 40, column: 1, scope: !5162)
!5223 = !{i64 2147571651, i64 2147571694, i64 2147571734}
!5224 = !DILocation(line: 41, column: 1, scope: !5162)
!5225 = !{i64 2147571886, i64 2147571929, i64 2147571969}
!5226 = !DILocation(line: 42, column: 1, scope: !5162)
!5227 = !{i64 2147572118, i64 2147572161, i64 2147572201}
!5228 = !DILocation(line: 43, column: 1, scope: !5162)
!5229 = !{i64 2147572344, i64 2147572387, i64 2147572427}
!5230 = !DILocation(line: 44, column: 1, scope: !5162)
!5231 = !{i64 2147572582, i64 2147572625, i64 2147572665}
!5232 = !DILocation(line: 45, column: 1, scope: !5162)
!5233 = !{i64 2147572808, i64 2147572851, i64 2147572891}
!5234 = !DILocation(line: 46, column: 1, scope: !5162)
!5235 = !{i64 2147573043, i64 2147573086, i64 2147573126}
!5236 = !DILocation(line: 47, column: 1, scope: !5162)
!5237 = !{i64 2147573278, i64 2147573321, i64 2147573361}
!5238 = !DILocation(line: 48, column: 1, scope: !5162)
!5239 = !{i64 2147573516, i64 2147573559, i64 2147573599}
!5240 = !DILocation(line: 49, column: 1, scope: !5162)
!5241 = !{i64 2147573790, i64 2147573833, i64 2147573873}
!5242 = !DILocation(line: 50, column: 1, scope: !5162)
!5243 = !{i64 2147574028, i64 2147574071, i64 2147574111}
!5244 = !DILocation(line: 51, column: 1, scope: !5162)
!5245 = !{i64 2147574281, i64 2147574324, i64 2147574364}
!5246 = !DILocation(line: 52, column: 1, scope: !5162)
!5247 = !{i64 2147574525, i64 2147574568, i64 2147574608}
!5248 = !DILocation(line: 53, column: 1, scope: !5162)
!5249 = !{i64 2147578836, i64 2147578879, i64 2147578919}
!5250 = !DILocation(line: 54, column: 1, scope: !5162)
!5251 = !{i64 2147579077, i64 2147579120, i64 2147579160}
!5252 = !DILocation(line: 55, column: 1, scope: !5162)
!5253 = !{i64 2147579324, i64 2147579367, i64 2147579407}
!5254 = !DILocation(line: 56, column: 1, scope: !5162)
!5255 = !{i64 2147579559, i64 2147579602, i64 2147579642}
!5256 = !DILocation(line: 57, column: 1, scope: !5162)
!5257 = !{i64 2147579794, i64 2147579837, i64 2147579877}
!5258 = !DILocation(line: 58, column: 1, scope: !5162)
!5259 = !{i64 2147580029, i64 2147580072, i64 2147580112}
!5260 = !DILocation(line: 59, column: 1, scope: !5162)
!5261 = !{i64 2147580267, i64 2147580310, i64 2147580350}
!5262 = !DILocation(line: 60, column: 1, scope: !5162)
!5263 = !{i64 2147580508, i64 2147580551, i64 2147580591}
!5264 = !DILocation(line: 61, column: 1, scope: !5162)
!5265 = !{i64 2147580788, i64 2147580831, i64 2147580871}
!5266 = !DILocation(line: 62, column: 1, scope: !5162)
!5267 = !{i64 2147581047, i64 2147581090, i64 2147581130}
!5268 = !DILocation(line: 63, column: 1, scope: !5162)
!5269 = !{i64 2147581285, i64 2147581328, i64 2147581368}
!5270 = !DILocation(line: 64, column: 1, scope: !5162)
!5271 = !{i64 2147581544, i64 2147581587, i64 2147581627}
!5272 = !DILocation(line: 65, column: 1, scope: !5162)
!5273 = !{i64 2147581773, i64 2147581816, i64 2147581856}
!5274 = !DILocation(line: 66, column: 1, scope: !5162)
!5275 = !{i64 2147581981, i64 2147582024, i64 2147582064}
!5276 = !DILocation(line: 67, column: 1, scope: !5162)
!5277 = !{i64 2147582192, i64 2147582235, i64 2147582275}
!5278 = !DILocation(line: 68, column: 1, scope: !5162)
!5279 = !{i64 2147582427, i64 2147582470, i64 2147582510}
!5280 = !DILocation(line: 69, column: 1, scope: !5162)
!5281 = !{i64 2147582656, i64 2147582699, i64 2147582739}
!5282 = !DILocation(line: 70, column: 1, scope: !5162)
!5283 = !{i64 2147582894, i64 2147582937, i64 2147582977}
!5284 = !DILocation(line: 71, column: 1, scope: !5162)
!5285 = !{i64 2147583126, i64 2147583169, i64 2147583209}
!5286 = !DILocation(line: 72, column: 1, scope: !5162)
!5287 = !{i64 2147583352, i64 2147583395, i64 2147583435}
!5288 = !DILocation(line: 73, column: 1, scope: !5162)
!5289 = !{i64 2147583569, i64 2147583612, i64 2147583652}
!5290 = !DILocation(line: 74, column: 1, scope: !5162)
!5291 = !{i64 2147583801, i64 2147583844, i64 2147583884}
!5292 = !DILocation(line: 75, column: 1, scope: !5162)
!5293 = !{i64 2147584027, i64 2147584070, i64 2147584110}
!5294 = !DILocation(line: 76, column: 1, scope: !5162)
!5295 = !{i64 2147584241, i64 2147584284, i64 2147584324}
!5296 = !DILocation(line: 77, column: 1, scope: !5162)
!5297 = !{i64 2147584461, i64 2147584504, i64 2147584544}
!5298 = !DILocation(line: 78, column: 1, scope: !5162)
!5299 = !{i64 2147584693, i64 2147584736, i64 2147584776}
!5300 = !DILocation(line: 79, column: 1, scope: !5162)
!5301 = !{i64 2147584901, i64 2147584944, i64 2147584984}
!5302 = !DILocation(line: 80, column: 1, scope: !5162)
!5303 = !{i64 2147585106, i64 2147585149, i64 2147585189}
!5304 = !DILocation(line: 81, column: 1, scope: !5162)
!5305 = !{i64 2147585323, i64 2147585366, i64 2147585406}
!5306 = !DILocation(line: 82, column: 1, scope: !5162)
!5307 = !{i64 2147585537, i64 2147585580, i64 2147585620}
!5308 = !DILocation(line: 83, column: 1, scope: !5162)
!5309 = !{i64 2147585763, i64 2147585806, i64 2147585846}
!5310 = !DILocation(line: 84, column: 1, scope: !5162)
!5311 = !{i64 2147585983, i64 2147586026, i64 2147586066}
!5312 = !DILocation(line: 85, column: 1, scope: !5162)
!5313 = !{i64 2147586188, i64 2147586231, i64 2147586271}
!5314 = !DILocation(line: 86, column: 1, scope: !5162)
!5315 = !{i64 2147586420, i64 2147586463, i64 2147586503}
!5316 = !DILocation(line: 87, column: 1, scope: !5162)
!5317 = !{i64 2147586655, i64 2147586698, i64 2147586738}
!5318 = !DILocation(line: 88, column: 1, scope: !5162)
!5319 = !{i64 2147590966, i64 2147591009, i64 2147591049}
!5320 = !DILocation(line: 89, column: 1, scope: !5162)
!5321 = !{i64 2147591216, i64 2147591259, i64 2147591299}
!5322 = !DILocation(line: 90, column: 1, scope: !5162)
!5323 = !{i64 2147591454, i64 2147591497, i64 2147591537}
!5324 = !DILocation(line: 91, column: 1, scope: !5162)
!5325 = !{i64 2147591665, i64 2147591708, i64 2147591748}
!5326 = !DILocation(line: 92, column: 1, scope: !5162)
!5327 = !{i64 2147591882, i64 2147591925, i64 2147591965}
!5328 = !DILocation(line: 93, column: 1, scope: !5162)
!5329 = !{i64 2147592078, i64 2147592121, i64 2147592161}
!5330 = !DILocation(line: 94, column: 1, scope: !5162)
!5331 = !{i64 2147592280, i64 2147592323, i64 2147592363}
!5332 = !DILocation(line: 95, column: 1, scope: !5162)
!5333 = !{i64 2147592473, i64 2147592516, i64 2147592556}
!5334 = !DILocation(line: 96, column: 1, scope: !5162)
!5335 = !{i64 2147592681, i64 2147592724, i64 2147592764}
!5336 = !DILocation(line: 97, column: 1, scope: !5162)
!5337 = !{i64 2147592877, i64 2147592920, i64 2147592960}
!5338 = !DILocation(line: 98, column: 1, scope: !5162)
!5339 = !{i64 2147593127, i64 2147593170, i64 2147593210}
!5340 = !DILocation(line: 99, column: 1, scope: !5162)
!5341 = !{i64 2147593338, i64 2147593381, i64 2147593421}
!5342 = !DILocation(line: 100, column: 1, scope: !5162)
!5343 = !{i64 2147593537, i64 2147593580, i64 2147593620}
!5344 = !DILocation(line: 101, column: 1, scope: !5162)
!5345 = !{i64 2147593712, i64 2147593755, i64 2147593795}
!5346 = !DILocation(line: 102, column: 1, scope: !5162)
!5347 = !{i64 2147593896, i64 2147593939, i64 2147593979}
!5348 = !DILocation(line: 103, column: 1, scope: !5162)
!5349 = !{i64 2147594098, i64 2147594141, i64 2147594181}
!5350 = !DILocation(line: 104, column: 1, scope: !5162)
!5351 = !{i64 2147594279, i64 2147594322, i64 2147594362}
!5352 = !DILocation(line: 105, column: 1, scope: !5162)
!5353 = !{i64 2147594478, i64 2147594521, i64 2147594561}
!5354 = !DILocation(line: 106, column: 1, scope: !5162)
!5355 = !{i64 2147594644, i64 2147594687, i64 2147594727}
!5356 = !DILocation(line: 107, column: 1, scope: !5162)
!5357 = !{i64 2147594828, i64 2147594871, i64 2147594911}
!5358 = !DILocation(line: 108, column: 1, scope: !5162)
!5359 = !{i64 2147595018, i64 2147595061, i64 2147595101}
!5360 = !DILocation(line: 109, column: 1, scope: !5162)
!5361 = !{i64 2147595202, i64 2147595245, i64 2147595285}
!5362 = !DILocation(line: 110, column: 1, scope: !5162)
!5363 = !{i64 2147595416, i64 2147595459, i64 2147595499}
!5364 = !DILocation(line: 111, column: 1, scope: !5162)
!5365 = !{i64 2147595627, i64 2147595670, i64 2147595710}
!5366 = !DILocation(line: 112, column: 1, scope: !5162)
!5367 = !{i64 2147595850, i64 2147595893, i64 2147595933}
!5368 = !DILocation(line: 113, column: 1, scope: !5162)
!5369 = !{i64 2147596034, i64 2147596077, i64 2147596117}
!5370 = !DILocation(line: 114, column: 1, scope: !5162)
!5371 = !{i64 2147596248, i64 2147596291, i64 2147596331}
!5372 = !DILocation(line: 115, column: 1, scope: !5162)
!5373 = !{i64 2147596414, i64 2147596457, i64 2147596497}
!5374 = !DILocation(line: 116, column: 1, scope: !5162)
!5375 = !{i64 2147596595, i64 2147596638, i64 2147596678}
!5376 = !DILocation(line: 117, column: 1, scope: !5162)
!5377 = !{i64 2147596788, i64 2147596831, i64 2147596871}
!5378 = !DILocation(line: 118, column: 1, scope: !5162)
!5379 = !{i64 2147597014, i64 2147597057, i64 2147597097}
!5380 = !DILocation(line: 119, column: 1, scope: !5162)
!5381 = !{i64 2147597228, i64 2147597271, i64 2147597311}
!5382 = !DILocation(line: 120, column: 1, scope: !5162)
!5383 = !{i64 2147597454, i64 2147597497, i64 2147597537}
!5384 = !DILocation(line: 121, column: 1, scope: !5162)
!5385 = !{i64 2147597671, i64 2147597714, i64 2147597754}
!5386 = !DILocation(line: 122, column: 1, scope: !5162)
!5387 = !{i64 2147597948, i64 2147597991, i64 2147598031}
!5388 = !DILocation(line: 123, column: 1, scope: !5162)
!5389 = !{i64 2147598174, i64 2147598217, i64 2147598257}
!5390 = !DILocation(line: 124, column: 1, scope: !5162)
!5391 = !{i64 2147598382, i64 2147598425, i64 2147598465}
!5392 = !DILocation(line: 125, column: 1, scope: !5162)
!5393 = !{i64 2147598578, i64 2147598621, i64 2147598661}
!5394 = !DILocation(line: 126, column: 1, scope: !5162)
!5395 = !{i64 2147598843, i64 2147598886, i64 2147598926}
!5396 = !DILocation(line: 127, column: 1, scope: !5162)
!5397 = !{i64 2147599057, i64 2147599100, i64 2147599140}
!5398 = !DILocation(line: 128, column: 1, scope: !5162)
!5399 = !{i64 2147599232, i64 2147599275, i64 2147599315}
!5400 = !DILocation(line: 129, column: 1, scope: !5162)
!5401 = !{i64 2147599486, i64 2147599529, i64 2147599569}
!5402 = !DILocation(line: 130, column: 1, scope: !5162)
!5403 = !{i64 2147599685, i64 2147599728, i64 2147599768}
!5404 = !DILocation(line: 131, column: 1, scope: !5162)
!5405 = !{i64 2147603988, i64 2147604031, i64 2147604071}
!5406 = !DILocation(line: 132, column: 1, scope: !5162)
!5407 = !{i64 2147604151, i64 2147604194, i64 2147604234}
!5408 = !DILocation(line: 133, column: 1, scope: !5162)
!5409 = !{i64 2147604338, i64 2147604381, i64 2147604421}
!5410 = !DILocation(line: 134, column: 1, scope: !5162)
!5411 = !{i64 2147604531, i64 2147604574, i64 2147604614}
!5412 = !DILocation(line: 135, column: 1, scope: !5162)
!5413 = !{i64 2147604714, i64 2147604757, i64 2147604797}
!5414 = !DILocation(line: 136, column: 1, scope: !5162)
!5415 = !{i64 2147604928, i64 2147604971, i64 2147605011}
!5416 = !DILocation(line: 137, column: 1, scope: !5162)
!5417 = !{i64 2147605139, i64 2147605182, i64 2147605222}
!5418 = !DILocation(line: 138, column: 1, scope: !5162)
!5419 = !{i64 2147605359, i64 2147605402, i64 2147605442}
!5420 = !DILocation(line: 139, column: 1, scope: !5162)
!5421 = !{i64 2147605566, i64 2147605609, i64 2147605649}
!5422 = !DILocation(line: 140, column: 1, scope: !5162)
!5423 = !{i64 2147605839, i64 2147605882, i64 2147605922}
!5424 = !DILocation(line: 141, column: 1, scope: !5162)
!5425 = !{i64 2147606087, i64 2147606130, i64 2147606170}
!5426 = !DILocation(line: 142, column: 1, scope: !5162)
!5427 = !{i64 2147606286, i64 2147606329, i64 2147606369}
!5428 = !DILocation(line: 143, column: 1, scope: !5162)
!5429 = !{i64 2147606521, i64 2147606564, i64 2147606604}
!5430 = !DILocation(line: 144, column: 1, scope: !5162)
!5431 = !{i64 2147606771, i64 2147606814, i64 2147606854}
!5432 = !DILocation(line: 145, column: 1, scope: !5162)
!5433 = !{i64 2147606973, i64 2147607016, i64 2147607056}
!5434 = !DILocation(line: 146, column: 1, scope: !5162)
!5435 = !{i64 2147607196, i64 2147607239, i64 2147607279}
!5436 = !DILocation(line: 147, column: 1, scope: !5162)
!5437 = !{i64 2147607410, i64 2147607453, i64 2147607493}
!5438 = !DILocation(line: 148, column: 1, scope: !5162)
!5439 = !{i64 2147607654, i64 2147607697, i64 2147607737}
!5440 = !DILocation(line: 149, column: 1, scope: !5162)
!5441 = !{i64 2147607883, i64 2147607926, i64 2147607966}
!5442 = !DILocation(line: 150, column: 1, scope: !5162)
!5443 = !{i64 2147608112, i64 2147608155, i64 2147608195}
!5444 = !DILocation(line: 151, column: 1, scope: !5162)
!5445 = !{i64 2147608320, i64 2147608363, i64 2147608403}
!5446 = !DILocation(line: 152, column: 1, scope: !5162)
!5447 = !{i64 2147608558, i64 2147608601, i64 2147608641}
!5448 = !DILocation(line: 153, column: 1, scope: !5162)
!5449 = !{i64 2147608784, i64 2147608827, i64 2147608867}
!5450 = !DILocation(line: 154, column: 1, scope: !5162)
!5451 = !{i64 2147609043, i64 2147609086, i64 2147609126}
!5452 = !DILocation(line: 155, column: 1, scope: !5162)
!5453 = !{i64 2147609263, i64 2147609306, i64 2147609346}
!5454 = !DILocation(line: 156, column: 1, scope: !5162)
!5455 = !{i64 2147609495, i64 2147609538, i64 2147609578}
!5456 = !DILocation(line: 157, column: 1, scope: !5162)
!5457 = !{i64 2147609736, i64 2147609779, i64 2147609819}
!5458 = !DILocation(line: 158, column: 1, scope: !5162)
!5459 = !{i64 2147609977, i64 2147610020, i64 2147610060}
!5460 = !DILocation(line: 159, column: 1, scope: !5162)
!5461 = !{i64 2147610200, i64 2147610243, i64 2147610283}
!5462 = !DILocation(line: 160, column: 1, scope: !5162)
!5463 = !{i64 2147610417, i64 2147610460, i64 2147610500}
!5464 = !DILocation(line: 161, column: 1, scope: !5162)
!5465 = !{i64 2147610658, i64 2147610701, i64 2147610741}
!5466 = !DILocation(line: 162, column: 1, scope: !5162)
!5467 = !{i64 2147610845, i64 2147610888, i64 2147610928}
!5468 = !DILocation(line: 163, column: 1, scope: !5162)
!5469 = !{i64 2147611032, i64 2147611075, i64 2147611115}
!5470 = !DILocation(line: 164, column: 1, scope: !5162)
!5471 = !{i64 2147611195, i64 2147611238, i64 2147611278}
!5472 = !DILocation(line: 165, column: 1, scope: !5162)
!5473 = !{i64 2147611454, i64 2147611497, i64 2147611537}
!5474 = !DILocation(line: 166, column: 1, scope: !5162)
!5475 = !{i64 2147611677, i64 2147611720, i64 2147611760}
!5476 = !DILocation(line: 167, column: 1, scope: !5162)
!5477 = !{i64 2147611906, i64 2147611949, i64 2147611989}
!5478 = !DILocation(line: 168, column: 1, scope: !5162)
!5479 = !{i64 2147612102, i64 2147612145, i64 2147612185}
!5480 = !DILocation(line: 169, column: 1, scope: !5162)
!5481 = !{i64 2147612314, i64 2147612357, i64 2147612397}
!5482 = !DILocation(line: 170, column: 1, scope: !5162)
!5483 = !{i64 2147616596, i64 2147616639, i64 2147616679}
!5484 = !DILocation(line: 171, column: 1, scope: !5162)
!5485 = !{i64 2147616810, i64 2147616853, i64 2147616893}
!5486 = !DILocation(line: 172, column: 1, scope: !5162)
!5487 = !{i64 2147617000, i64 2147617043, i64 2147617083}
!5488 = !DILocation(line: 173, column: 1, scope: !5162)
!5489 = !{i64 2147617199, i64 2147617242, i64 2147617282}
!5490 = !DILocation(line: 174, column: 1, scope: !5162)
!5491 = !{i64 2147617404, i64 2147617447, i64 2147617487}
!5492 = !DILocation(line: 175, column: 1, scope: !5162)
!5493 = !{i64 2147617624, i64 2147617667, i64 2147617707}
!5494 = !DILocation(line: 176, column: 1, scope: !5162)
!5495 = !{i64 2147617825, i64 2147617868, i64 2147617908}
!5496 = !DILocation(line: 177, column: 1, scope: !5162)
!5497 = !{i64 2147618024, i64 2147618067, i64 2147618107}
!5498 = !DILocation(line: 178, column: 1, scope: !5162)
!5499 = !{i64 2147618229, i64 2147618272, i64 2147618312}
!5500 = !DILocation(line: 179, column: 1, scope: !5162)
!5501 = !{i64 2147618398, i64 2147618441, i64 2147618481}
!5502 = !DILocation(line: 180, column: 1, scope: !5162)
!5503 = !{i64 2147618582, i64 2147618625, i64 2147618665}
!5504 = !DILocation(line: 181, column: 1, scope: !5162)
!5505 = !{i64 2147618766, i64 2147618809, i64 2147618849}
!5506 = !DILocation(line: 182, column: 1, scope: !5162)
!5507 = !{i64 2147618953, i64 2147618996, i64 2147619036}
!5508 = !DILocation(line: 183, column: 1, scope: !5162)
!5509 = !{i64 2147619137, i64 2147619180, i64 2147619220}
!5510 = !DILocation(line: 184, column: 1, scope: !5162)
!5511 = !{i64 2147619375, i64 2147619418, i64 2147619458}
!5512 = !DILocation(line: 185, column: 1, scope: !5162)
!5513 = !{i64 2147619605, i64 2147619648, i64 2147619688}
!5514 = !DILocation(line: 186, column: 1, scope: !5162)
!5515 = !{i64 2147619834, i64 2147619877, i64 2147619917}
!5516 = !DILocation(line: 187, column: 1, scope: !5162)
!5517 = !{i64 2147620021, i64 2147620064, i64 2147620104}
!5518 = !DILocation(line: 188, column: 1, scope: !5162)
!5519 = !{i64 2147620217, i64 2147620260, i64 2147620300}
!5520 = !DILocation(line: 189, column: 1, scope: !5162)
!5521 = !{i64 2147620425, i64 2147620468, i64 2147620508}
!5522 = !DILocation(line: 190, column: 1, scope: !5162)
!5523 = !{i64 2147620637, i64 2147620680, i64 2147620720}
!5524 = !DILocation(line: 191, column: 1, scope: !5162)
!5525 = !{i64 2147620836, i64 2147620879, i64 2147620919}
!5526 = !DILocation(line: 192, column: 1, scope: !5162)
!5527 = !{i64 2147621074, i64 2147621117, i64 2147621157}
!5528 = !DILocation(line: 193, column: 1, scope: !5162)
!5529 = !{i64 2147621270, i64 2147621313, i64 2147621353}
!5530 = !DILocation(line: 194, column: 1, scope: !5162)
!5531 = !{i64 2147621472, i64 2147621515, i64 2147621555}
!5532 = !DILocation(line: 195, column: 1, scope: !5162)
!5533 = !{i64 2147621665, i64 2147621708, i64 2147621748}
!5534 = !DILocation(line: 196, column: 1, scope: !5162)
!5535 = !{i64 2147621899, i64 2147621942, i64 2147621982}
!5536 = !DILocation(line: 197, column: 1, scope: !5162)
!5537 = !{i64 2147622062, i64 2147622105, i64 2147622145}
!5538 = !DILocation(line: 198, column: 1, scope: !5162)
!5539 = !{i64 2147622301, i64 2147622344, i64 2147622384}
!5540 = !DILocation(line: 199, column: 1, scope: !5162)
!5541 = !{i64 2147622540, i64 2147622583, i64 2147622623}
!5542 = !DILocation(line: 200, column: 1, scope: !5162)
!5543 = !{i64 2147622776, i64 2147622819, i64 2147622859}
!5544 = !DILocation(line: 201, column: 1, scope: !5162)
!5545 = !{i64 2147623006, i64 2147623049, i64 2147623089}
!5546 = !DILocation(line: 202, column: 1, scope: !5162)
!5547 = !{i64 2147623193, i64 2147623236, i64 2147623276}
!5548 = !DILocation(line: 203, column: 1, scope: !5162)
!5549 = !{i64 2147623392, i64 2147623435, i64 2147623475}
!5550 = !DILocation(line: 204, column: 1, scope: !5162)
!5551 = !{i64 2147623663, i64 2147623706, i64 2147623746}
!5552 = !DILocation(line: 205, column: 1, scope: !5162)
!5553 = !{i64 2147623838, i64 2147623881, i64 2147623921}
!5554 = !DILocation(line: 206, column: 1, scope: !5162)
!5555 = !{i64 2147624072, i64 2147624115, i64 2147624155}
!5556 = !DILocation(line: 207, column: 1, scope: !5162)
!5557 = !{i64 2147624280, i64 2147624323, i64 2147624363}
!5558 = !DILocation(line: 208, column: 1, scope: !5162)
!5559 = !{i64 2147624479, i64 2147624522, i64 2147624562}
!5560 = !DILocation(line: 209, column: 1, scope: !5162)
!5561 = !{i64 2147624697, i64 2147624740, i64 2147624780}
!5562 = !DILocation(line: 210, column: 1, scope: !5162)
!5563 = !{i64 2147624887, i64 2147624930, i64 2147624970}
!5564 = !DILocation(line: 211, column: 1, scope: !5162)
!5565 = !{i64 2147625083, i64 2147625126, i64 2147625166}
!5566 = !DILocation(line: 212, column: 1, scope: !5162)
!5567 = !{i64 2147625289, i64 2147625332, i64 2147625372}
!5568 = !DILocation(line: 213, column: 1, scope: !5162)
!5569 = !{i64 2147625494, i64 2147625537, i64 2147625577}
!5570 = !DILocation(line: 214, column: 1, scope: !5162)
!5571 = !{i64 2147625720, i64 2147625763, i64 2147625803}
!5572 = !DILocation(line: 215, column: 1, scope: !5162)
!5573 = !{i64 2147630013, i64 2147630056, i64 2147630096}
!5574 = !DILocation(line: 216, column: 1, scope: !5162)
!5575 = !{i64 2147630197, i64 2147630240, i64 2147630280}
!5576 = !DILocation(line: 217, column: 1, scope: !5162)
!5577 = !{i64 2147630406, i64 2147630449, i64 2147630489}
!5578 = !DILocation(line: 218, column: 1, scope: !5162)
!5579 = !{i64 2147630590, i64 2147630633, i64 2147630673}
!5580 = !DILocation(line: 219, column: 1, scope: !5162)
!5581 = !{i64 2147630816, i64 2147630859, i64 2147630899}
!5582 = !DILocation(line: 220, column: 1, scope: !5162)
!5583 = !{i64 2147631042, i64 2147631085, i64 2147631125}
!5584 = !DILocation(line: 221, column: 1, scope: !5162)
!5585 = !{i64 2147631268, i64 2147631311, i64 2147631351}
!5586 = !DILocation(line: 222, column: 1, scope: !5162)
!5587 = !{i64 2147631494, i64 2147631537, i64 2147631577}
!5588 = !DILocation(line: 223, column: 1, scope: !5162)
!5589 = !{i64 2147631720, i64 2147631763, i64 2147631803}
!5590 = !DILocation(line: 224, column: 1, scope: !5162)
!5591 = !{i64 2147631952, i64 2147631995, i64 2147632035}
!5592 = !DILocation(line: 225, column: 1, scope: !5162)
!5593 = !{i64 2147632190, i64 2147632233, i64 2147632273}
!5594 = !DILocation(line: 226, column: 1, scope: !5162)
!5595 = !{i64 2147632410, i64 2147632453, i64 2147632493}
!5596 = !DILocation(line: 227, column: 1, scope: !5162)
!5597 = !{i64 2147632654, i64 2147632697, i64 2147632737}
!5598 = !DILocation(line: 228, column: 1, scope: !5162)
!5599 = !{i64 2147632895, i64 2147632938, i64 2147632978}
!5600 = !DILocation(line: 229, column: 1, scope: !5162)
!5601 = !{i64 2147633130, i64 2147633173, i64 2147633213}
!5602 = !DILocation(line: 230, column: 1, scope: !5162)
!5603 = !{i64 2147633362, i64 2147633405, i64 2147633445}
!5604 = !DILocation(line: 231, column: 1, scope: !5162)
!5605 = !{i64 2147633564, i64 2147633607, i64 2147633647}
!5606 = !DILocation(line: 232, column: 1, scope: !5162)
!5607 = !{i64 2147633814, i64 2147633857, i64 2147633897}
!5608 = !DILocation(line: 233, column: 1, scope: !5162)
!5609 = !{i64 2147634052, i64 2147634095, i64 2147634135}
!5610 = !DILocation(line: 234, column: 1, scope: !5162)
!5611 = !{i64 2147634236, i64 2147634279, i64 2147634319}
!5612 = !DILocation(line: 235, column: 1, scope: !5162)
!5613 = !{i64 2147634460, i64 2147634503, i64 2147634543}
!5614 = !DILocation(line: 236, column: 1, scope: !5162)
!5615 = !{i64 2147634698, i64 2147634741, i64 2147634781}
!5616 = !DILocation(line: 237, column: 1, scope: !5162)
!5617 = !{i64 2147634936, i64 2147634979, i64 2147635019}
!5618 = !DILocation(line: 238, column: 1, scope: !5162)
!5619 = !{i64 2147635129, i64 2147635172, i64 2147635212}
!5620 = !DILocation(line: 239, column: 1, scope: !5162)
!5621 = !{i64 2147635382, i64 2147635425, i64 2147635465}
!5622 = !DILocation(line: 240, column: 1, scope: !5162)
!5623 = !{i64 2147635596, i64 2147635639, i64 2147635679}
!5624 = !DILocation(line: 241, column: 1, scope: !5162)
!5625 = !{i64 2147635804, i64 2147635847, i64 2147635887}
!5626 = !DILocation(line: 242, column: 1, scope: !5162)
!5627 = !{i64 2147635994, i64 2147636037, i64 2147636077}
!5628 = !DILocation(line: 243, column: 1, scope: !5162)
!5629 = !{i64 2147636208, i64 2147636251, i64 2147636291}
!5630 = !DILocation(line: 244, column: 1, scope: !5162)
!5631 = !{i64 2147636470, i64 2147636513, i64 2147636553}
!5632 = !DILocation(line: 245, column: 1, scope: !5162)
!5633 = !{i64 2147636681, i64 2147636724, i64 2147636764}
!5634 = !DILocation(line: 246, column: 1, scope: !5162)
!5635 = !{i64 2147636925, i64 2147636968, i64 2147637008}
!5636 = !DILocation(line: 247, column: 1, scope: !5162)
!5637 = !{i64 2147637136, i64 2147637179, i64 2147637219}
!5638 = !DILocation(line: 248, column: 1, scope: !5162)
!5639 = !{i64 2147637365, i64 2147637408, i64 2147637448}
!5640 = !DILocation(line: 249, column: 1, scope: !5162)
!5641 = !{i64 2147637630, i64 2147637673, i64 2147637713}
!5642 = !DILocation(line: 250, column: 1, scope: !5162)
!5643 = !{i64 2147637835, i64 2147637878, i64 2147637918}
!5644 = !DILocation(line: 251, column: 1, scope: !5162)
!5645 = !{i64 2147638031, i64 2147638074, i64 2147638114}
!5646 = !DILocation(line: 252, column: 1, scope: !5162)
!5647 = !{i64 2147642315, i64 2147642358, i64 2147642398}
!5648 = !DILocation(line: 253, column: 1, scope: !5162)
!5649 = !{i64 2147642478, i64 2147642521, i64 2147642561}
!5650 = !DILocation(line: 254, column: 1, scope: !5162)
!5651 = !{i64 2147642683, i64 2147642726, i64 2147642766}
!5652 = !DILocation(line: 255, column: 1, scope: !5162)
!5653 = !{i64 2147642903, i64 2147642946, i64 2147642986}
!5654 = !DILocation(line: 256, column: 1, scope: !5162)
!5655 = !{i64 2147643117, i64 2147643160, i64 2147643200}
!5656 = !DILocation(line: 257, column: 1, scope: !5162)
!5657 = !{i64 2147643331, i64 2147643374, i64 2147643414}
!5658 = !DILocation(line: 258, column: 1, scope: !5162)
!5659 = !{i64 2147643542, i64 2147643585, i64 2147643625}
!5660 = !DILocation(line: 259, column: 1, scope: !5162)
!5661 = !{i64 2147643735, i64 2147643778, i64 2147643818}
!5662 = !DILocation(line: 260, column: 1, scope: !5162)
!5663 = !{i64 2147643934, i64 2147643977, i64 2147644017}
!5664 = !DILocation(line: 261, column: 1, scope: !5162)
!5665 = !{i64 2147644130, i64 2147644173, i64 2147644213}
!5666 = !DILocation(line: 262, column: 1, scope: !5162)
!5667 = !{i64 2147644329, i64 2147644372, i64 2147644412}
!5668 = !DILocation(line: 263, column: 1, scope: !5162)
!5669 = !{i64 2147644501, i64 2147644544, i64 2147644584}
!5670 = !DILocation(line: 264, column: 1, scope: !5162)
!5671 = !{i64 2147644694, i64 2147644737, i64 2147644777}
!5672 = !DILocation(line: 265, column: 1, scope: !5162)
!5673 = !{i64 2147644890, i64 2147644933, i64 2147644973}
!5674 = !DILocation(line: 266, column: 1, scope: !5162)
!5675 = !{i64 2147645117, i64 2147645160, i64 2147645200}
!5676 = !DILocation(line: 267, column: 1, scope: !5162)
!5677 = !{i64 2147645334, i64 2147645377, i64 2147645417}
!5678 = !DILocation(line: 268, column: 1, scope: !5162)
!5679 = !{i64 2147645626, i64 2147645669, i64 2147645709}
!5680 = !DILocation(line: 269, column: 1, scope: !5162)
!5681 = !{i64 2147645858, i64 2147645901, i64 2147645941}
!5682 = !DILocation(line: 270, column: 1, scope: !5162)
!5683 = !{i64 2147646075, i64 2147646118, i64 2147646158}
!5684 = !DILocation(line: 271, column: 1, scope: !5162)
!5685 = !{i64 2147646282, i64 2147646325, i64 2147646365}
!5686 = !DILocation(line: 272, column: 1, scope: !5162)
!5687 = !{i64 2147646483, i64 2147646526, i64 2147646566}
!5688 = !DILocation(line: 273, column: 1, scope: !5162)
!5689 = !{i64 2147646715, i64 2147646758, i64 2147646798}
!5690 = !DILocation(line: 274, column: 1, scope: !5162)
!5691 = !{i64 2147646923, i64 2147646966, i64 2147647006}
!5692 = !DILocation(line: 275, column: 1, scope: !5162)
!5693 = !{i64 2147647113, i64 2147647156, i64 2147647196}
!5694 = !DILocation(line: 276, column: 1, scope: !5162)
!5695 = !{i64 2147647339, i64 2147647382, i64 2147647422}
!5696 = !DILocation(line: 277, column: 1, scope: !5162)
!5697 = !{i64 2147647528, i64 2147647571, i64 2147647611}
!5698 = !DILocation(line: 278, column: 1, scope: !5162)
!5699 = !{i64 2147647799, i64 2147647842, i64 2147647882}
!5700 = !DILocation(line: 279, column: 1, scope: !5162)
!5701 = !{i64 2147648019, i64 2147648062, i64 2147648102}
!5702 = !DILocation(line: 280, column: 1, scope: !5162)
!5703 = !{i64 2147648272, i64 2147648315, i64 2147648355}
!5704 = !DILocation(line: 281, column: 1, scope: !5162)
!5705 = !{i64 2147648480, i64 2147648523, i64 2147648563}
!5706 = !DILocation(line: 282, column: 1, scope: !5162)
!5707 = !{i64 2147648712, i64 2147648755, i64 2147648795}
!5708 = !DILocation(line: 283, column: 1, scope: !5162)
!5709 = !{i64 2147648923, i64 2147648966, i64 2147649006}
!5710 = !DILocation(line: 284, column: 1, scope: !5162)
!5711 = !{i64 2147649113, i64 2147649156, i64 2147649196}
!5712 = !DILocation(line: 285, column: 1, scope: !5162)
!5713 = !{i64 2147649327, i64 2147649370, i64 2147649410}
!5714 = !DILocation(line: 286, column: 1, scope: !5162)
!5715 = !{i64 2147649526, i64 2147649569, i64 2147649609}
!5716 = !DILocation(line: 287, column: 1, scope: !5162)
!5717 = !{i64 2147649713, i64 2147649756, i64 2147649796}
!5718 = !DILocation(line: 288, column: 1, scope: !5162)
!5719 = !{i64 2147649921, i64 2147649964, i64 2147650004}
!5720 = !DILocation(line: 289, column: 1, scope: !5162)
!5721 = !{i64 2147650150, i64 2147650193, i64 2147650233}
!5722 = !DILocation(line: 290, column: 1, scope: !5162)
!5723 = !{i64 2147650352, i64 2147650395, i64 2147650435}
!5724 = !DILocation(line: 291, column: 1, scope: !5162)
!5725 = !{i64 2147650551, i64 2147650594, i64 2147650634}
!5726 = !DILocation(line: 292, column: 1, scope: !5162)
!5727 = !{i64 2147650768, i64 2147650811, i64 2147650851}
!5728 = !DILocation(line: 294, column: 1, scope: !5162)
!5729 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5730)
!5730 = !{!5731, !5732}
!5731 = !DILocalVariable(name: "arg", arg: 1, scope: !5729, file: !129, line: 30, type: !138)
!5732 = !DILocalVariable(name: "key", scope: !5729, file: !129, line: 32, type: !121)
!5733 = !DILocation(line: 0, scope: !5729)
!5734 = !DILocation(line: 37, column: 2, scope: !5729)
!5735 = !DILocation(line: 38, column: 2, scope: !5729)
!5736 = !DILocation(line: 55, column: 2, scope: !5737, inlinedAt: !5744)
!5737 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5738, file: !5738, line: 42, type: !5739, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5741)
!5738 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5739 = !DISubroutineType(types: !5740)
!5740 = !{!32}
!5741 = !{!5742, !5743}
!5742 = !DILocalVariable(name: "key", scope: !5737, file: !5738, line: 44, type: !32)
!5743 = !DILocalVariable(name: "tmp", scope: !5737, file: !5738, line: 53, type: !32)
!5744 = distinct !DILocation(line: 40, column: 8, scope: !5729)
!5745 = !{i64 2101527}
!5746 = !DILocation(line: 0, scope: !5737, inlinedAt: !5744)
!5747 = !DILocalVariable(name: "key", arg: 1, scope: !5748, file: !5738, line: 84, type: !32)
!5748 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5738, file: !5738, line: 84, type: !5749, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5751)
!5749 = !DISubroutineType(types: !5750)
!5750 = !{null, !32}
!5751 = !{!5747}
!5752 = !DILocation(line: 0, scope: !5748, inlinedAt: !5753)
!5753 = distinct !DILocation(line: 47, column: 2, scope: !5729)
!5754 = !DILocation(line: 95, column: 2, scope: !5748, inlinedAt: !5753)
!5755 = !{i64 2102344}
!5756 = !DILocation(line: 51, column: 18, scope: !5729)
!5757 = !DILocation(line: 53, column: 2, scope: !5729)
!5758 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5759, file: !5759, line: 1609, type: !3181, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !317)
!5759 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5760 = !DILocation(line: 1611, column: 3, scope: !5758)
!5761 = !DILocation(line: 1612, column: 1, scope: !5758)
!5762 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5759, file: !5759, line: 1629, type: !3181, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !317)
!5763 = !DILocation(line: 1631, column: 3, scope: !5762)
!5764 = !DILocation(line: 1632, column: 1, scope: !5762)
!5765 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !5766)
!5766 = !{!5767}
!5767 = !DILocalVariable(name: "dev", arg: 1, scope: !5765, file: !171, line: 26, type: !179)
!5768 = !DILocation(line: 0, scope: !5765)
!5769 = !DILocation(line: 68, column: 2, scope: !5765)
!5770 = !DILocation(line: 25, column: 6, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !341, file: !294, line: 25, column: 6)
!5772 = !DILocation(line: 25, column: 10, scope: !5771)
!5773 = !DILocation(line: 25, column: 6, scope: !341)
!5774 = !DILocation(line: 26, column: 3, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5776, file: !294, line: 26, column: 3)
!5776 = distinct !DILexicalBlock(scope: !5771, file: !294, line: 25, column: 19)
!5777 = !DILocation(line: 27, column: 2, scope: !5776)
!5778 = !DILocation(line: 29, column: 8, scope: !347)
!5779 = !DILocation(line: 0, scope: !347)
!5780 = !DILocation(line: 29, column: 6, scope: !341)
!5781 = !DILocation(line: 30, column: 14, scope: !341)
!5782 = !DILocation(line: 30, column: 2, scope: !341)
!5783 = distinct !DISubprogram(name: "k_queue_get", scope: !3617, file: !3617, line: 649, type: !5784, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !5791)
!5784 = !DISubroutineType(types: !5785)
!5785 = !{!102, !5786, !5787}
!5786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!5787 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !5788)
!5788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !5789)
!5789 = !{!5790}
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !5788, file: !201, line: 66, baseType: !200, size: 64)
!5791 = !{!5792, !5793}
!5792 = !DILocalVariable(name: "queue", arg: 1, scope: !5783, file: !3617, line: 649, type: !5786)
!5793 = !DILocalVariable(name: "timeout", arg: 2, scope: !5783, file: !3617, line: 649, type: !5787)
!5794 = !DILocation(line: 0, scope: !5783)
!5795 = !DILocation(line: 658, column: 2, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5783, file: !3617, line: 658, column: 2)
!5797 = !{i64 2154839797}
!5798 = !DILocation(line: 659, column: 9, scope: !5783)
!5799 = !DILocation(line: 659, column: 2, scope: !5783)
!5800 = distinct !DISubprogram(name: "console_getline_init", scope: !294, file: !294, line: 33, type: !3181, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !5801)
!5801 = !{!5802}
!5802 = !DILocalVariable(name: "i", scope: !5800, file: !294, line: 35, type: !103)
!5803 = !DILocation(line: 0, scope: !5800)
!5804 = !DILocation(line: 38, column: 3, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !294, line: 38, column: 3)
!5806 = distinct !DILexicalBlock(scope: !5807, file: !294, line: 37, column: 46)
!5807 = distinct !DILexicalBlock(scope: !5808, file: !294, line: 37, column: 2)
!5808 = distinct !DILexicalBlock(scope: !5800, file: !294, line: 37, column: 2)
!5809 = !DILocation(line: 45, column: 2, scope: !5800)
!5810 = !DILocation(line: 46, column: 1, scope: !5800)
!5811 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5812, file: !5812, line: 57, type: !5813, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !5859)
!5812 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5813 = !DISubroutineType(types: !5814)
!5814 = !{null, !32, !5815}
!5815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5816, size: 32)
!5816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5817)
!5817 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2725, line: 141, baseType: !5818)
!5818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2725, line: 97, size: 256, elements: !5819)
!5819 = !{!5820}
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5818, file: !2725, line: 107, baseType: !5821, size: 256)
!5821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2725, line: 98, size: 256, elements: !5822)
!5822 = !{!5823, !5828, !5833, !5838, !5843, !5848, !5853, !5858}
!5823 = !DIDerivedType(tag: DW_TAG_member, scope: !5821, file: !2725, line: 99, baseType: !5824, size: 32)
!5824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5821, file: !2725, line: 99, size: 32, elements: !5825)
!5825 = !{!5826, !5827}
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5824, file: !2725, line: 99, baseType: !121, size: 32)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5824, file: !2725, line: 99, baseType: !121, size: 32)
!5828 = !DIDerivedType(tag: DW_TAG_member, scope: !5821, file: !2725, line: 100, baseType: !5829, size: 32, offset: 32)
!5829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5821, file: !2725, line: 100, size: 32, elements: !5830)
!5830 = !{!5831, !5832}
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5829, file: !2725, line: 100, baseType: !121, size: 32)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5829, file: !2725, line: 100, baseType: !121, size: 32)
!5833 = !DIDerivedType(tag: DW_TAG_member, scope: !5821, file: !2725, line: 101, baseType: !5834, size: 32, offset: 64)
!5834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5821, file: !2725, line: 101, size: 32, elements: !5835)
!5835 = !{!5836, !5837}
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5834, file: !2725, line: 101, baseType: !121, size: 32)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5834, file: !2725, line: 101, baseType: !121, size: 32)
!5838 = !DIDerivedType(tag: DW_TAG_member, scope: !5821, file: !2725, line: 102, baseType: !5839, size: 32, offset: 96)
!5839 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5821, file: !2725, line: 102, size: 32, elements: !5840)
!5840 = !{!5841, !5842}
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5839, file: !2725, line: 102, baseType: !121, size: 32)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5839, file: !2725, line: 102, baseType: !121, size: 32)
!5843 = !DIDerivedType(tag: DW_TAG_member, scope: !5821, file: !2725, line: 103, baseType: !5844, size: 32, offset: 128)
!5844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5821, file: !2725, line: 103, size: 32, elements: !5845)
!5845 = !{!5846, !5847}
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5844, file: !2725, line: 103, baseType: !121, size: 32)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5844, file: !2725, line: 103, baseType: !121, size: 32)
!5848 = !DIDerivedType(tag: DW_TAG_member, scope: !5821, file: !2725, line: 104, baseType: !5849, size: 32, offset: 160)
!5849 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5821, file: !2725, line: 104, size: 32, elements: !5850)
!5850 = !{!5851, !5852}
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5849, file: !2725, line: 104, baseType: !121, size: 32)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5849, file: !2725, line: 104, baseType: !121, size: 32)
!5853 = !DIDerivedType(tag: DW_TAG_member, scope: !5821, file: !2725, line: 105, baseType: !5854, size: 32, offset: 192)
!5854 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5821, file: !2725, line: 105, size: 32, elements: !5855)
!5855 = !{!5856, !5857}
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5854, file: !2725, line: 105, baseType: !121, size: 32)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5854, file: !2725, line: 105, baseType: !121, size: 32)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5821, file: !2725, line: 106, baseType: !121, size: 32, offset: 224)
!5859 = !{!5860, !5861}
!5860 = !DILocalVariable(name: "reason", arg: 1, scope: !5811, file: !5812, line: 57, type: !32)
!5861 = !DILocalVariable(name: "esf", arg: 2, scope: !5811, file: !5812, line: 57, type: !5815)
!5862 = !DILocation(line: 0, scope: !5811)
!5863 = !DILocation(line: 63, column: 2, scope: !5811)
!5864 = !DILocation(line: 64, column: 1, scope: !5811)
!5865 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5812, file: !5812, line: 82, type: !5866, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !5881)
!5866 = !DISubroutineType(types: !5867)
!5867 = !{null, !5815, !5868}
!5868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5869, size: 32)
!5869 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !446, line: 37, baseType: !5870)
!5870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !5871)
!5871 = !{!5872, !5873, !5874, !5875, !5876, !5877, !5878, !5879, !5880}
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5870, file: !446, line: 26, baseType: !121, size: 32)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5870, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5870, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5870, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5870, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5870, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5870, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5870, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5870, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!5881 = !{!5882, !5883, !5884}
!5882 = !DILocalVariable(name: "esf", arg: 1, scope: !5865, file: !5812, line: 82, type: !5815)
!5883 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5865, file: !5812, line: 82, type: !5868)
!5884 = !DILocalVariable(name: "reason", scope: !5865, file: !5812, line: 88, type: !32)
!5885 = !DILocation(line: 0, scope: !5865)
!5886 = !DILocation(line: 88, column: 35, scope: !5865)
!5887 = !DILocation(line: 108, column: 2, scope: !5865)
!5888 = !DILocation(line: 131, column: 1, scope: !5865)
!5889 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5812, file: !5812, line: 133, type: !5890, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !5892)
!5890 = !DISubroutineType(types: !5891)
!5891 = !{null, !102}
!5892 = !{!5893, !5894, !5895}
!5893 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5889, file: !5812, line: 133, type: !102)
!5894 = !DILocalVariable(name: "ssf_contents", scope: !5889, file: !5812, line: 135, type: !866)
!5895 = !DILocalVariable(name: "oops_esf", scope: !5889, file: !5812, line: 136, type: !5817)
!5896 = !DILocation(line: 0, scope: !5889)
!5897 = !DILocation(line: 136, column: 2, scope: !5889)
!5898 = !DILocation(line: 136, column: 15, scope: !5889)
!5899 = !DILocation(line: 139, column: 22, scope: !5889)
!5900 = !DILocation(line: 139, column: 17, scope: !5889)
!5901 = !DILocation(line: 139, column: 20, scope: !5889)
!5902 = !DILocation(line: 141, column: 2, scope: !5889)
!5903 = !DILocation(line: 142, column: 2, scope: !5889)
!5904 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5905, file: !5905, line: 40, type: !5749, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !5906)
!5905 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5906 = !{!5907}
!5907 = !DILocalVariable(name: "irq", arg: 1, scope: !5904, file: !5905, line: 40, type: !32)
!5908 = !DILocation(line: 0, scope: !5904)
!5909 = !DILocation(line: 42, column: 2, scope: !5904)
!5910 = !DILocation(line: 43, column: 1, scope: !5904)
!5911 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !515, file: !515, line: 1684, type: !5912, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !5914)
!5912 = !DISubroutineType(types: !5913)
!5913 = !{null, !772}
!5914 = !{!5915}
!5915 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5911, file: !515, line: 1684, type: !772)
!5916 = !DILocation(line: 0, scope: !5911)
!5917 = !DILocation(line: 1686, column: 23, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5911, file: !515, line: 1686, column: 7)
!5919 = !DILocation(line: 1686, column: 7, scope: !5911)
!5920 = !DILocation(line: 1688, column: 5, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5918, file: !515, line: 1687, column: 3)
!5922 = !{i64 2151069452}
!5923 = !DILocation(line: 1689, column: 81, scope: !5921)
!5924 = !DILocation(line: 1689, column: 60, scope: !5921)
!5925 = !DILocation(line: 1689, column: 34, scope: !5921)
!5926 = !DILocation(line: 1689, column: 5, scope: !5921)
!5927 = !DILocation(line: 1689, column: 43, scope: !5921)
!5928 = !DILocation(line: 1690, column: 5, scope: !5921)
!5929 = !{i64 2151069566}
!5930 = !DILocation(line: 1691, column: 3, scope: !5921)
!5931 = !DILocation(line: 1692, column: 1, scope: !5911)
!5932 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5905, file: !5905, line: 45, type: !5749, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !5933)
!5933 = !{!5934}
!5934 = !DILocalVariable(name: "irq", arg: 1, scope: !5932, file: !5905, line: 45, type: !32)
!5935 = !DILocation(line: 0, scope: !5932)
!5936 = !DILocation(line: 47, column: 2, scope: !5932)
!5937 = !DILocation(line: 48, column: 1, scope: !5932)
!5938 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !515, file: !515, line: 1722, type: !5912, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !5939)
!5939 = !{!5940}
!5940 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5938, file: !515, line: 1722, type: !772)
!5941 = !DILocation(line: 0, scope: !5938)
!5942 = !DILocation(line: 1724, column: 23, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5938, file: !515, line: 1724, column: 7)
!5944 = !DILocation(line: 1724, column: 7, scope: !5938)
!5945 = !DILocation(line: 1726, column: 81, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5943, file: !515, line: 1725, column: 3)
!5947 = !DILocation(line: 1726, column: 60, scope: !5946)
!5948 = !DILocation(line: 1726, column: 34, scope: !5946)
!5949 = !DILocation(line: 1726, column: 5, scope: !5946)
!5950 = !DILocation(line: 1726, column: 43, scope: !5946)
!5951 = !DILocation(line: 271, column: 3, scope: !5952, inlinedAt: !5954)
!5952 = distinct !DISubprogram(name: "__DSB", scope: !5953, file: !5953, line: 269, type: !3181, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !317)
!5953 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5954 = distinct !DILocation(line: 1727, column: 5, scope: !5946)
!5955 = !{i64 3523835}
!5956 = !DILocation(line: 260, column: 3, scope: !5957, inlinedAt: !5958)
!5957 = distinct !DISubprogram(name: "__ISB", scope: !5953, file: !5953, line: 258, type: !3181, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !317)
!5958 = distinct !DILocation(line: 1728, column: 5, scope: !5946)
!5959 = !{i64 3523552}
!5960 = !DILocation(line: 1729, column: 3, scope: !5946)
!5961 = !DILocation(line: 1730, column: 1, scope: !5938)
!5962 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5905, file: !5905, line: 50, type: !5963, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !5965)
!5963 = !DISubroutineType(types: !5964)
!5964 = !{!103, !32}
!5965 = !{!5966}
!5966 = !DILocalVariable(name: "irq", arg: 1, scope: !5962, file: !5905, line: 50, type: !32)
!5967 = !DILocation(line: 0, scope: !5962)
!5968 = !DILocation(line: 52, column: 20, scope: !5962)
!5969 = !DILocation(line: 52, column: 9, scope: !5962)
!5970 = !DILocation(line: 52, column: 41, scope: !5962)
!5971 = !DILocation(line: 52, column: 39, scope: !5962)
!5972 = !DILocation(line: 52, column: 2, scope: !5962)
!5973 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5905, file: !5905, line: 64, type: !5974, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !5976)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{null, !32, !32, !121}
!5976 = !{!5977, !5978, !5979}
!5977 = !DILocalVariable(name: "irq", arg: 1, scope: !5973, file: !5905, line: 64, type: !32)
!5978 = !DILocalVariable(name: "prio", arg: 2, scope: !5973, file: !5905, line: 64, type: !32)
!5979 = !DILocalVariable(name: "flags", arg: 3, scope: !5973, file: !5905, line: 64, type: !121)
!5980 = !DILocation(line: 0, scope: !5973)
!5981 = !DILocation(line: 83, column: 8, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5983, file: !5905, line: 82, column: 9)
!5983 = distinct !DILexicalBlock(scope: !5973, file: !5905, line: 76, column: 6)
!5984 = !DILocation(line: 95, column: 2, scope: !5973)
!5985 = !DILocation(line: 96, column: 1, scope: !5973)
!5986 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !5987, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !5989)
!5987 = !DISubroutineType(types: !5988)
!5988 = !{null, !772, !121}
!5989 = !{!5990, !5991}
!5990 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5986, file: !515, line: 1814, type: !772)
!5991 = !DILocalVariable(name: "priority", arg: 2, scope: !5986, file: !515, line: 1814, type: !121)
!5992 = !DILocation(line: 0, scope: !5986)
!5993 = !DILocation(line: 0, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5986, file: !515, line: 1816, column: 7)
!5995 = !DILocation(line: 1816, column: 7, scope: !5986)
!5996 = !DILocation(line: 1824, column: 1, scope: !5986)
!5997 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5905, file: !5905, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !5998)
!5998 = !{!5999}
!5999 = !DILocalVariable(name: "unused", arg: 1, scope: !5997, file: !5905, line: 155, type: !13)
!6000 = !DILocation(line: 0, scope: !5997)
!6001 = !DILocation(line: 159, column: 2, scope: !5997)
!6002 = !DILocation(line: 160, column: 1, scope: !5997)
!6003 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6004, file: !6004, line: 87, type: !3181, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !317)
!6004 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6005 = !DILocation(line: 89, column: 2, scope: !6003)
!6006 = !DILocation(line: 90, column: 2, scope: !6003)
!6007 = !DILocation(line: 91, column: 1, scope: !6003)
!6008 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6004, file: !6004, line: 23, type: !3181, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!6009 = !DISubprogram(name: "z_arm_int_exit", scope: !6010, file: !6010, line: 153, type: !3181, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!6010 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6011 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6012, file: !6012, line: 256, type: !3181, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !317)
!6012 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6013 = !DILocation(line: 258, column: 2, scope: !6011)
!6014 = !DILocation(line: 260, column: 2, scope: !6011)
!6015 = !DILocation(line: 262, column: 2, scope: !6011)
!6016 = !DILocation(line: 263, column: 2, scope: !6011)
!6017 = !DILocation(line: 267, column: 2, scope: !6011)
!6018 = !DILocation(line: 268, column: 2, scope: !6011)
!6019 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6012, file: !6012, line: 53, type: !3181, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !317)
!6020 = !DILocation(line: 55, column: 12, scope: !6019)
!6021 = !DILocation(line: 271, column: 3, scope: !6022, inlinedAt: !6023)
!6022 = distinct !DISubprogram(name: "__DSB", scope: !5953, file: !5953, line: 269, type: !3181, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !317)
!6023 = distinct !DILocation(line: 56, column: 2, scope: !6019)
!6024 = !{i64 3522506}
!6025 = !DILocation(line: 260, column: 3, scope: !6026, inlinedAt: !6027)
!6026 = distinct !DISubprogram(name: "__ISB", scope: !5953, file: !5953, line: 258, type: !3181, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !317)
!6027 = distinct !DILocation(line: 57, column: 2, scope: !6019)
!6028 = !{i64 3522223}
!6029 = !DILocation(line: 58, column: 1, scope: !6019)
!6030 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6012, file: !6012, line: 96, type: !3181, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !317)
!6031 = !DILocation(line: 103, column: 13, scope: !6030)
!6032 = !DILocation(line: 975, column: 3, scope: !6033, inlinedAt: !6038)
!6033 = distinct !DISubprogram(name: "__get_CONTROL", scope: !5953, file: !5953, line: 971, type: !6034, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6036)
!6034 = !DISubroutineType(types: !6035)
!6035 = !{!121}
!6036 = !{!6037}
!6037 = !DILocalVariable(name: "result", scope: !6033, file: !5953, line: 973, type: !121)
!6038 = distinct !DILocation(line: 189, column: 16, scope: !6030)
!6039 = !{i64 3543336}
!6040 = !DILocation(line: 0, scope: !6033, inlinedAt: !6038)
!6041 = !DILocation(line: 189, column: 32, scope: !6030)
!6042 = !DILocalVariable(name: "control", arg: 1, scope: !6043, file: !5953, line: 1001, type: !121)
!6043 = distinct !DISubprogram(name: "__set_CONTROL", scope: !5953, file: !5953, line: 1001, type: !6044, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6046)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{null, !121}
!6046 = !{!6042}
!6047 = !DILocation(line: 0, scope: !6043, inlinedAt: !6048)
!6048 = distinct !DILocation(line: 189, column: 2, scope: !6030)
!6049 = !DILocation(line: 1003, column: 3, scope: !6043, inlinedAt: !6048)
!6050 = !{i64 3544056}
!6051 = !DILocation(line: 260, column: 3, scope: !6026, inlinedAt: !6052)
!6052 = distinct !DILocation(line: 1004, column: 3, scope: !6043, inlinedAt: !6048)
!6053 = !DILocation(line: 191, column: 1, scope: !6030)
!6054 = distinct !DISubprogram(name: "arch_swap", scope: !6055, file: !6055, line: 33, type: !5963, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !6056)
!6055 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6056 = !{!6057}
!6057 = !DILocalVariable(name: "key", arg: 1, scope: !6054, file: !6055, line: 33, type: !32)
!6058 = !DILocation(line: 0, scope: !6054)
!6059 = !DILocation(line: 36, column: 2, scope: !6054)
!6060 = !DILocation(line: 36, column: 17, scope: !6054)
!6061 = !DILocation(line: 36, column: 25, scope: !6054)
!6062 = !DILocation(line: 37, column: 37, scope: !6054)
!6063 = !DILocation(line: 37, column: 17, scope: !6054)
!6064 = !DILocation(line: 37, column: 35, scope: !6054)
!6065 = !DILocation(line: 41, column: 12, scope: !6054)
!6066 = !DILocalVariable(name: "key", arg: 1, scope: !6067, file: !5738, line: 84, type: !32)
!6067 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5738, file: !5738, line: 84, type: !5749, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !6068)
!6068 = !{!6066}
!6069 = !DILocation(line: 0, scope: !6067, inlinedAt: !6070)
!6070 = distinct !DILocation(line: 44, column: 2, scope: !6054)
!6071 = !DILocation(line: 95, column: 2, scope: !6067, inlinedAt: !6070)
!6072 = !{i64 2221828}
!6073 = !DILocation(line: 53, column: 9, scope: !6054)
!6074 = !DILocation(line: 53, column: 24, scope: !6054)
!6075 = !DILocation(line: 53, column: 2, scope: !6054)
!6076 = distinct !DISubprogram(name: "arch_new_thread", scope: !6077, file: !6077, line: 56, type: !6078, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !6185)
!6077 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6078 = !DISubroutineType(types: !6079)
!6079 = !{null, !6080, !6180, !344, !3495, !102, !102, !102}
!6080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6081, size: 32)
!6081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !6082)
!6082 = !{!6083, !6141, !6153, !6154, !6155, !6156, !6162, !6175}
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6081, file: !379, line: 247, baseType: !6084, size: 384)
!6084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !6085)
!6085 = !{!6086, !6110, !6117, !6118, !6119, !6128, !6129, !6130}
!6086 = !DIDerivedType(tag: DW_TAG_member, scope: !6084, file: !379, line: 60, baseType: !6087, size: 64)
!6087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6084, file: !379, line: 60, size: 64, elements: !6088)
!6088 = !{!6089, !6104}
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6087, file: !379, line: 61, baseType: !6090, size: 64)
!6090 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !6091)
!6091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !6092)
!6092 = !{!6093, !6099}
!6093 = !DIDerivedType(tag: DW_TAG_member, scope: !6091, file: !325, line: 38, baseType: !6094, size: 32)
!6094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6091, file: !325, line: 38, size: 32, elements: !6095)
!6095 = !{!6096, !6098}
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6094, file: !325, line: 39, baseType: !6097, size: 32)
!6097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6091, size: 32)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6094, file: !325, line: 40, baseType: !6097, size: 32)
!6099 = !DIDerivedType(tag: DW_TAG_member, scope: !6091, file: !325, line: 42, baseType: !6100, size: 32, offset: 32)
!6100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6091, file: !325, line: 42, size: 32, elements: !6101)
!6101 = !{!6102, !6103}
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6100, file: !325, line: 43, baseType: !6097, size: 32)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6100, file: !325, line: 44, baseType: !6097, size: 32)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6087, file: !379, line: 62, baseType: !6105, size: 64)
!6105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !6106)
!6106 = !{!6107}
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6105, file: !404, line: 50, baseType: !6108, size: 64)
!6108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6109, size: 64, elements: !363)
!6109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6105, size: 32)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6084, file: !379, line: 68, baseType: !6111, size: 32, offset: 64)
!6111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6112, size: 32)
!6112 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !6113)
!6113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !6114)
!6114 = !{!6115}
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6113, file: !320, line: 232, baseType: !6116, size: 64)
!6116 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !6091)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6084, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6084, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!6119 = !DIDerivedType(tag: DW_TAG_member, scope: !6084, file: !379, line: 90, baseType: !6120, size: 16, offset: 112)
!6120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6084, file: !379, line: 90, size: 16, elements: !6121)
!6121 = !{!6122, !6127}
!6122 = !DIDerivedType(tag: DW_TAG_member, scope: !6120, file: !379, line: 91, baseType: !6123, size: 16)
!6123 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6120, file: !379, line: 91, size: 16, elements: !6124)
!6124 = !{!6125, !6126}
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6123, file: !379, line: 96, baseType: !425, size: 8)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6123, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6120, file: !379, line: 100, baseType: !429, size: 16)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6084, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6084, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6084, file: !379, line: 131, baseType: !6131, size: 192, offset: 192)
!6131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !6132)
!6132 = !{!6133, !6134, !6140}
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6131, file: !320, line: 245, baseType: !6090, size: 64)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6131, file: !320, line: 246, baseType: !6135, size: 32, offset: 64)
!6135 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !6136)
!6136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6137, size: 32)
!6137 = !DISubroutineType(types: !6138)
!6138 = !{null, !6139}
!6139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6131, size: 32)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6131, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6081, file: !379, line: 250, baseType: !6142, size: 288, offset: 384)
!6142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6143)
!6143 = !{!6144, !6145, !6146, !6147, !6148, !6149, !6150, !6151, !6152}
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6142, file: !446, line: 26, baseType: !121, size: 32)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6142, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6142, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6142, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6142, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6142, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6142, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6142, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6142, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6081, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6081, file: !379, line: 256, baseType: !6112, size: 64, offset: 704)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6081, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6081, file: !379, line: 300, baseType: !6157, size: 96, offset: 800)
!6157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !6158)
!6158 = !{!6159, !6160, !6161}
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6157, file: !379, line: 153, baseType: !22, size: 32)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6157, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6157, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6081, file: !379, line: 325, baseType: !6163, size: 32, offset: 896)
!6163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6164, size: 32)
!6164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !6165)
!6165 = !{!6166, !6172, !6173}
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6164, file: !296, line: 5074, baseType: !6167, size: 96)
!6167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !6168)
!6168 = !{!6169, !6170, !6171}
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6167, file: !472, line: 57, baseType: !475, size: 32)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6167, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6167, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6164, file: !296, line: 5075, baseType: !6112, size: 64, offset: 96)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6164, file: !296, line: 5076, baseType: !6174, offset: 160)
!6174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6081, file: !379, line: 343, baseType: !6176, size: 64, offset: 928)
!6176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !6177)
!6177 = !{!6178, !6179}
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6176, file: !446, line: 63, baseType: !121, size: 32)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6176, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!6180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6181, size: 32)
!6181 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3496, line: 44, baseType: !6182)
!6182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2172, line: 47, size: 8, elements: !6183)
!6183 = !{!6184}
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6182, file: !2172, line: 48, baseType: !146, size: 8)
!6185 = !{!6186, !6187, !6188, !6189, !6190, !6191, !6192, !6193}
!6186 = !DILocalVariable(name: "thread", arg: 1, scope: !6076, file: !6077, line: 56, type: !6080)
!6187 = !DILocalVariable(name: "stack", arg: 2, scope: !6076, file: !6077, line: 56, type: !6180)
!6188 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6076, file: !6077, line: 57, type: !344)
!6189 = !DILocalVariable(name: "entry", arg: 4, scope: !6076, file: !6077, line: 57, type: !3495)
!6190 = !DILocalVariable(name: "p1", arg: 5, scope: !6076, file: !6077, line: 58, type: !102)
!6191 = !DILocalVariable(name: "p2", arg: 6, scope: !6076, file: !6077, line: 58, type: !102)
!6192 = !DILocalVariable(name: "p3", arg: 7, scope: !6076, file: !6077, line: 58, type: !102)
!6193 = !DILocalVariable(name: "iframe", scope: !6076, file: !6077, line: 60, type: !2723)
!6194 = !DILocation(line: 0, scope: !6076)
!6195 = !DILocation(line: 85, column: 11, scope: !6076)
!6196 = !DILocation(line: 93, column: 10, scope: !6076)
!6197 = !DILocation(line: 98, column: 13, scope: !6076)
!6198 = !DILocation(line: 100, column: 15, scope: !6076)
!6199 = !DILocation(line: 100, column: 10, scope: !6076)
!6200 = !DILocation(line: 100, column: 13, scope: !6076)
!6201 = !DILocation(line: 101, column: 15, scope: !6076)
!6202 = !DILocation(line: 101, column: 10, scope: !6076)
!6203 = !DILocation(line: 101, column: 13, scope: !6076)
!6204 = !DILocation(line: 102, column: 15, scope: !6076)
!6205 = !DILocation(line: 102, column: 10, scope: !6076)
!6206 = !DILocation(line: 102, column: 13, scope: !6076)
!6207 = !DILocation(line: 103, column: 15, scope: !6076)
!6208 = !DILocation(line: 103, column: 10, scope: !6076)
!6209 = !DILocation(line: 103, column: 13, scope: !6076)
!6210 = !DILocation(line: 106, column: 10, scope: !6076)
!6211 = !DILocation(line: 106, column: 15, scope: !6076)
!6212 = !DILocation(line: 122, column: 29, scope: !6076)
!6213 = !DILocation(line: 122, column: 23, scope: !6076)
!6214 = !DILocation(line: 122, column: 27, scope: !6076)
!6215 = !DILocation(line: 123, column: 15, scope: !6076)
!6216 = !DILocation(line: 123, column: 23, scope: !6076)
!6217 = !DILocation(line: 143, column: 1, scope: !6076)
!6218 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6077, file: !6077, line: 385, type: !6219, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !6222)
!6219 = !DISubroutineType(types: !6220)
!6220 = !{!121, !6221, !6221}
!6221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!6222 = !{!6223, !6224, !6225, !6228}
!6223 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6218, file: !6077, line: 385, type: !6221)
!6224 = !DILocalVariable(name: "psp", arg: 2, scope: !6218, file: !6077, line: 385, type: !6221)
!6225 = !DILocalVariable(name: "thread", scope: !6218, file: !6077, line: 388, type: !6226)
!6226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6227, size: 32)
!6227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6081)
!6228 = !DILocalVariable(name: "guard_len", scope: !6218, file: !6077, line: 405, type: !121)
!6229 = !DILocation(line: 0, scope: !6218)
!6230 = !DILocation(line: 388, column: 34, scope: !6218)
!6231 = !DILocation(line: 390, column: 13, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6218, file: !6077, line: 390, column: 6)
!6233 = !DILocation(line: 390, column: 6, scope: !6218)
!6234 = !DILocation(line: 438, column: 6, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6218, file: !6077, line: 438, column: 6)
!6236 = !DILocation(line: 438, column: 6, scope: !6218)
!6237 = !DILocation(line: 442, column: 3, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6235, file: !6077, line: 440, column: 22)
!6239 = !DILocation(line: 455, column: 1, scope: !6218)
!6240 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6077, file: !6077, line: 530, type: !6241, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !6243)
!6241 = !DISubroutineType(types: !6242)
!6242 = !{null, !6080, !344, !3495}
!6243 = !{!6244, !6245, !6246}
!6244 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6240, file: !6077, line: 530, type: !6080)
!6245 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6240, file: !6077, line: 530, type: !344)
!6246 = !DILocalVariable(name: "_main", arg: 3, scope: !6240, file: !6077, line: 531, type: !3495)
!6247 = !DILocation(line: 0, scope: !6240)
!6248 = !DILocation(line: 535, column: 11, scope: !6240)
!6249 = !DILocation(line: 560, column: 2, scope: !6240)
!6250 = !DILocation(line: 576, column: 2, scope: !6240)
!6251 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6252 = !DILocation(line: 603, column: 2, scope: !6240)
!6253 = distinct !DISubprogram(name: "z_arm_fault", scope: !6254, file: !6254, line: 1036, type: !6255, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6270)
!6254 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6255 = !DISubroutineType(types: !6256)
!6256 = !{null, !121, !121, !121, !6257}
!6257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6258, size: 32)
!6258 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !446, line: 37, baseType: !6259)
!6259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6260)
!6260 = !{!6261, !6262, !6263, !6264, !6265, !6266, !6267, !6268, !6269}
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6259, file: !446, line: 26, baseType: !121, size: 32)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6259, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6259, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6259, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6259, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6259, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6259, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6259, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6259, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6270 = !{!6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278, !6279, !6280}
!6271 = !DILocalVariable(name: "msp", arg: 1, scope: !6253, file: !6254, line: 1036, type: !121)
!6272 = !DILocalVariable(name: "psp", arg: 2, scope: !6253, file: !6254, line: 1036, type: !121)
!6273 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6253, file: !6254, line: 1036, type: !121)
!6274 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6253, file: !6254, line: 1037, type: !6257)
!6275 = !DILocalVariable(name: "reason", scope: !6253, file: !6254, line: 1039, type: !121)
!6276 = !DILocalVariable(name: "fault", scope: !6253, file: !6254, line: 1040, type: !103)
!6277 = !DILocalVariable(name: "recoverable", scope: !6253, file: !6254, line: 1041, type: !157)
!6278 = !DILocalVariable(name: "nested_exc", scope: !6253, file: !6254, line: 1041, type: !157)
!6279 = !DILocalVariable(name: "esf", scope: !6253, file: !6254, line: 1042, type: !2791)
!6280 = !DILocalVariable(name: "esf_copy", scope: !6253, file: !6254, line: 1047, type: !2792)
!6281 = !DILocation(line: 0, scope: !6253)
!6282 = !DILocation(line: 1040, column: 19, scope: !6253)
!6283 = !DILocation(line: 1040, column: 24, scope: !6253)
!6284 = !DILocation(line: 1041, column: 2, scope: !6253)
!6285 = !DILocation(line: 1047, column: 2, scope: !6253)
!6286 = !DILocation(line: 1047, column: 15, scope: !6253)
!6287 = !DILocalVariable(name: "key", arg: 1, scope: !6288, file: !5738, line: 84, type: !32)
!6288 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5738, file: !5738, line: 84, type: !5749, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6289)
!6289 = !{!6287}
!6290 = !DILocation(line: 0, scope: !6288, inlinedAt: !6291)
!6291 = distinct !DILocation(line: 1050, column: 2, scope: !6253)
!6292 = !DILocation(line: 95, column: 2, scope: !6288, inlinedAt: !6291)
!6293 = !{i64 2255072}
!6294 = !DILocation(line: 1055, column: 9, scope: !6253)
!6295 = !DILocation(line: 1063, column: 11, scope: !6253)
!6296 = !DILocation(line: 1064, column: 6, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6253, file: !6254, line: 1064, column: 6)
!6298 = !{i8 0, i8 2}
!6299 = !DILocation(line: 1064, column: 6, scope: !6253)
!6300 = !DILocation(line: 1070, column: 20, scope: !6253)
!6301 = !DILocation(line: 1070, column: 2, scope: !6253)
!6302 = !DILocation(line: 1089, column: 6, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6253, file: !6254, line: 1089, column: 6)
!6304 = !DILocation(line: 0, scope: !6303)
!6305 = !DILocation(line: 1089, column: 6, scope: !6253)
!6306 = !DILocation(line: 1090, column: 28, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6308, file: !6254, line: 1090, column: 7)
!6308 = distinct !DILexicalBlock(scope: !6303, file: !6254, line: 1089, column: 18)
!6309 = !DILocation(line: 1090, column: 44, scope: !6307)
!6310 = !DILocation(line: 1090, column: 7, scope: !6308)
!6311 = !DILocation(line: 1091, column: 24, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6307, file: !6254, line: 1090, column: 50)
!6313 = !DILocation(line: 1092, column: 3, scope: !6312)
!6314 = !DILocation(line: 1094, column: 23, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6303, file: !6254, line: 1093, column: 9)
!6316 = !DILocation(line: 1097, column: 2, scope: !6253)
!6317 = !DILocation(line: 1098, column: 1, scope: !6253)
!6318 = distinct !DISubprogram(name: "get_esf", scope: !6254, file: !6254, line: 894, type: !6319, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6322)
!6319 = !DISubroutineType(types: !6320)
!6320 = !{!2791, !121, !121, !121, !6321}
!6321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!6322 = !{!6323, !6324, !6325, !6326, !6327, !6328}
!6323 = !DILocalVariable(name: "msp", arg: 1, scope: !6318, file: !6254, line: 894, type: !121)
!6324 = !DILocalVariable(name: "psp", arg: 2, scope: !6318, file: !6254, line: 894, type: !121)
!6325 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6318, file: !6254, line: 894, type: !121)
!6326 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6318, file: !6254, line: 895, type: !6321)
!6327 = !DILocalVariable(name: "alternative_state_exc", scope: !6318, file: !6254, line: 897, type: !157)
!6328 = !DILocalVariable(name: "ptr_esf", scope: !6318, file: !6254, line: 898, type: !2791)
!6329 = !DILocation(line: 0, scope: !6318)
!6330 = !DILocation(line: 900, column: 14, scope: !6318)
!6331 = !DILocation(line: 902, column: 49, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6318, file: !6254, line: 902, column: 6)
!6333 = !DILocation(line: 902, column: 6, scope: !6318)
!6334 = !DILocation(line: 983, column: 18, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6318, file: !6254, line: 983, column: 6)
!6336 = !DILocation(line: 991, column: 7, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6338, file: !6254, line: 990, column: 30)
!6338 = distinct !DILexicalBlock(scope: !6318, file: !6254, line: 990, column: 6)
!6339 = !DILocation(line: 998, column: 16, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6341, file: !6254, line: 995, column: 10)
!6341 = distinct !DILexicalBlock(scope: !6337, file: !6254, line: 991, column: 7)
!6342 = !DILocation(line: 1002, column: 2, scope: !6318)
!6343 = !DILocation(line: 1003, column: 1, scope: !6318)
!6344 = distinct !DISubprogram(name: "fault_handle", scope: !6254, file: !6254, line: 786, type: !6345, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6347)
!6345 = !DISubroutineType(types: !6346)
!6346 = !{!121, !2791, !103, !6321}
!6347 = !{!6348, !6349, !6350, !6351}
!6348 = !DILocalVariable(name: "esf", arg: 1, scope: !6344, file: !6254, line: 786, type: !2791)
!6349 = !DILocalVariable(name: "fault", arg: 2, scope: !6344, file: !6254, line: 786, type: !103)
!6350 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6344, file: !6254, line: 786, type: !6321)
!6351 = !DILocalVariable(name: "reason", scope: !6344, file: !6254, line: 788, type: !121)
!6352 = !DILocation(line: 0, scope: !6344)
!6353 = !DILocation(line: 790, column: 15, scope: !6344)
!6354 = !DILocation(line: 792, column: 2, scope: !6344)
!6355 = !DILocation(line: 794, column: 12, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6344, file: !6254, line: 792, column: 17)
!6357 = !DILocation(line: 795, column: 3, scope: !6356)
!6358 = !DILocation(line: 800, column: 12, scope: !6356)
!6359 = !DILocation(line: 801, column: 3, scope: !6356)
!6360 = !DILocation(line: 803, column: 12, scope: !6356)
!6361 = !DILocation(line: 804, column: 3, scope: !6356)
!6362 = !DILocation(line: 806, column: 12, scope: !6356)
!6363 = !DILocation(line: 807, column: 3, scope: !6356)
!6364 = !DILocation(line: 814, column: 3, scope: !6356)
!6365 = !DILocation(line: 815, column: 3, scope: !6356)
!6366 = !DILocation(line: 829, column: 2, scope: !6344)
!6367 = distinct !DISubprogram(name: "hard_fault", scope: !6254, file: !6254, line: 709, type: !6368, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6370)
!6368 = !DISubroutineType(types: !6369)
!6369 = !{!121, !2791, !6321}
!6370 = !{!6371, !6372, !6373}
!6371 = !DILocalVariable(name: "esf", arg: 1, scope: !6367, file: !6254, line: 709, type: !2791)
!6372 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6367, file: !6254, line: 709, type: !6321)
!6373 = !DILocalVariable(name: "reason", scope: !6367, file: !6254, line: 711, type: !121)
!6374 = !DILocation(line: 0, scope: !6367)
!6375 = !DILocation(line: 732, column: 15, scope: !6367)
!6376 = !DILocation(line: 734, column: 12, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6367, file: !6254, line: 734, column: 6)
!6378 = !DILocation(line: 734, column: 17, scope: !6377)
!6379 = !DILocation(line: 734, column: 41, scope: !6377)
!6380 = !DILocation(line: 734, column: 6, scope: !6367)
!6381 = !DILocation(line: 736, column: 19, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6377, file: !6254, line: 736, column: 13)
!6383 = !DILocation(line: 736, column: 49, scope: !6382)
!6384 = !DILocation(line: 736, column: 13, scope: !6377)
!6385 = !DILocation(line: 738, column: 19, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6382, file: !6254, line: 738, column: 13)
!6387 = !DILocation(line: 738, column: 24, scope: !6386)
!6388 = !DILocation(line: 738, column: 47, scope: !6386)
!6389 = !DILocation(line: 738, column: 13, scope: !6382)
!6390 = !DILocation(line: 740, column: 7, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !6254, line: 740, column: 7)
!6392 = distinct !DILexicalBlock(scope: !6386, file: !6254, line: 738, column: 53)
!6393 = !DILocation(line: 740, column: 7, scope: !6392)
!6394 = !DILocation(line: 742, column: 24, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6391, file: !6254, line: 740, column: 38)
!6396 = !DILocation(line: 743, column: 3, scope: !6395)
!6397 = !DILocation(line: 743, column: 20, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6391, file: !6254, line: 743, column: 14)
!6399 = !DILocation(line: 743, column: 25, scope: !6398)
!6400 = !DILocation(line: 743, column: 52, scope: !6398)
!6401 = !DILocation(line: 743, column: 14, scope: !6391)
!6402 = !DILocation(line: 744, column: 13, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6398, file: !6254, line: 743, column: 58)
!6404 = !DILocation(line: 745, column: 3, scope: !6403)
!6405 = !DILocation(line: 745, column: 20, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6398, file: !6254, line: 745, column: 14)
!6407 = !DILocation(line: 745, column: 25, scope: !6406)
!6408 = !DILocation(line: 745, column: 52, scope: !6406)
!6409 = !DILocation(line: 745, column: 14, scope: !6398)
!6410 = !DILocation(line: 746, column: 13, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6406, file: !6254, line: 745, column: 58)
!6412 = !DILocation(line: 747, column: 3, scope: !6411)
!6413 = !DILocation(line: 747, column: 20, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6406, file: !6254, line: 747, column: 14)
!6415 = !DILocation(line: 747, column: 52, scope: !6414)
!6416 = !DILocation(line: 747, column: 14, scope: !6406)
!6417 = !DILocation(line: 748, column: 13, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6414, file: !6254, line: 747, column: 58)
!6419 = !DILocation(line: 753, column: 3, scope: !6418)
!6420 = !DILocation(line: 766, column: 2, scope: !6367)
!6421 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6254, file: !6254, line: 229, type: !6345, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6422)
!6422 = !{!6423, !6424, !6425, !6426, !6427, !6428, !6431}
!6423 = !DILocalVariable(name: "esf", arg: 1, scope: !6421, file: !6254, line: 229, type: !2791)
!6424 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6421, file: !6254, line: 229, type: !103)
!6425 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6421, file: !6254, line: 230, type: !6321)
!6426 = !DILocalVariable(name: "reason", scope: !6421, file: !6254, line: 232, type: !121)
!6427 = !DILocalVariable(name: "mmfar", scope: !6421, file: !6254, line: 233, type: !121)
!6428 = !DILocalVariable(name: "temp", scope: !6429, file: !6254, line: 254, type: !121)
!6429 = distinct !DILexicalBlock(scope: !6430, file: !6254, line: 244, column: 48)
!6430 = distinct !DILexicalBlock(scope: !6421, file: !6254, line: 244, column: 6)
!6431 = !DILocalVariable(name: "min_stack_ptr", scope: !6432, file: !6254, line: 309, type: !121)
!6432 = distinct !DILexicalBlock(scope: !6433, file: !6254, line: 308, column: 43)
!6433 = distinct !DILexicalBlock(scope: !6434, file: !6254, line: 308, column: 7)
!6434 = distinct !DILexicalBlock(scope: !6435, file: !6254, line: 289, column: 40)
!6435 = distinct !DILexicalBlock(scope: !6421, file: !6254, line: 288, column: 6)
!6436 = !DILocation(line: 0, scope: !6421)
!6437 = !DILocation(line: 237, column: 12, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6421, file: !6254, line: 237, column: 6)
!6439 = !DILocation(line: 241, column: 12, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6421, file: !6254, line: 241, column: 6)
!6441 = !DILocation(line: 244, column: 12, scope: !6430)
!6442 = !DILocation(line: 244, column: 17, scope: !6430)
!6443 = !DILocation(line: 244, column: 42, scope: !6430)
!6444 = !DILocation(line: 244, column: 6, scope: !6421)
!6445 = !DILocation(line: 254, column: 24, scope: !6429)
!6446 = !DILocation(line: 0, scope: !6429)
!6447 = !DILocation(line: 256, column: 13, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6429, file: !6254, line: 256, column: 7)
!6449 = !DILocation(line: 256, column: 18, scope: !6448)
!6450 = !DILocation(line: 256, column: 44, scope: !6448)
!6451 = !DILocation(line: 256, column: 7, scope: !6429)
!6452 = !DILocation(line: 259, column: 24, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6454, file: !6254, line: 259, column: 8)
!6454 = distinct !DILexicalBlock(scope: !6448, file: !6254, line: 256, column: 50)
!6455 = !DILocation(line: 259, column: 8, scope: !6454)
!6456 = !DILocation(line: 261, column: 15, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6453, file: !6254, line: 259, column: 30)
!6458 = !DILocation(line: 262, column: 4, scope: !6457)
!6459 = !DILocation(line: 265, column: 12, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6421, file: !6254, line: 265, column: 6)
!6461 = !DILocation(line: 269, column: 12, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6421, file: !6254, line: 269, column: 6)
!6463 = !DILocation(line: 288, column: 12, scope: !6435)
!6464 = !DILocation(line: 288, column: 17, scope: !6435)
!6465 = !DILocation(line: 288, column: 41, scope: !6435)
!6466 = !DILocation(line: 289, column: 9, scope: !6435)
!6467 = !DILocation(line: 289, column: 14, scope: !6435)
!6468 = !DILocation(line: 288, column: 6, scope: !6421)
!6469 = !DILocation(line: 308, column: 12, scope: !6433)
!6470 = !DILocation(line: 308, column: 17, scope: !6433)
!6471 = !DILocation(line: 308, column: 7, scope: !6434)
!6472 = !DILocation(line: 310, column: 6, scope: !6432)
!6473 = !DILocation(line: 309, column: 29, scope: !6432)
!6474 = !DILocation(line: 0, scope: !6432)
!6475 = !DILocation(line: 312, column: 8, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6432, file: !6254, line: 312, column: 8)
!6477 = !DILocation(line: 312, column: 8, scope: !6432)
!6478 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6479, file: !5953, line: 1099, type: !121)
!6479 = distinct !DISubprogram(name: "__set_PSP", scope: !5953, file: !5953, line: 1099, type: !6044, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6480)
!6480 = !{!6478}
!6481 = !DILocation(line: 0, scope: !6479, inlinedAt: !6482)
!6482 = distinct !DILocation(line: 338, column: 5, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6476, file: !6254, line: 312, column: 23)
!6484 = !DILocation(line: 1101, column: 3, scope: !6479, inlinedAt: !6482)
!6485 = !{i64 3573475}
!6486 = !DILocation(line: 341, column: 4, scope: !6483)
!6487 = !DILocation(line: 360, column: 12, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6421, file: !6254, line: 360, column: 6)
!6489 = !DILocation(line: 360, column: 17, scope: !6488)
!6490 = !DILocation(line: 360, column: 41, scope: !6488)
!6491 = !DILocation(line: 360, column: 6, scope: !6421)
!6492 = !DILocation(line: 361, column: 14, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6488, file: !6254, line: 360, column: 47)
!6494 = !DILocation(line: 362, column: 2, scope: !6493)
!6495 = !DILocation(line: 366, column: 12, scope: !6421)
!6496 = !DILocation(line: 369, column: 15, scope: !6421)
!6497 = !DILocation(line: 371, column: 2, scope: !6421)
!6498 = distinct !DISubprogram(name: "bus_fault", scope: !6254, file: !6254, line: 383, type: !6499, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6501)
!6499 = !DISubroutineType(types: !6500)
!6500 = !{!103, !2791, !103, !6321}
!6501 = !{!6502, !6503, !6504, !6505, !6506}
!6502 = !DILocalVariable(name: "esf", arg: 1, scope: !6498, file: !6254, line: 383, type: !2791)
!6503 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6498, file: !6254, line: 383, type: !103)
!6504 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6498, file: !6254, line: 383, type: !6321)
!6505 = !DILocalVariable(name: "reason", scope: !6498, file: !6254, line: 385, type: !121)
!6506 = !DILocalVariable(name: "bfar", scope: !6507, file: !6254, line: 405, type: !121)
!6507 = distinct !DILexicalBlock(scope: !6508, file: !6254, line: 395, column: 42)
!6508 = distinct !DILexicalBlock(scope: !6498, file: !6254, line: 395, column: 6)
!6509 = !DILocation(line: 0, scope: !6498)
!6510 = !DILocation(line: 389, column: 11, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6498, file: !6254, line: 389, column: 6)
!6512 = !DILocation(line: 392, column: 11, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6498, file: !6254, line: 392, column: 6)
!6514 = !DILocation(line: 395, column: 11, scope: !6508)
!6515 = !DILocation(line: 395, column: 16, scope: !6508)
!6516 = !DILocation(line: 395, column: 6, scope: !6498)
!6517 = !DILocation(line: 405, column: 3, scope: !6507)
!6518 = !DILocation(line: 0, scope: !6507)
!6519 = !DILocation(line: 407, column: 13, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6507, file: !6254, line: 407, column: 7)
!6521 = !DILocation(line: 407, column: 18, scope: !6520)
!6522 = !DILocation(line: 407, column: 44, scope: !6520)
!6523 = !DILocation(line: 407, column: 7, scope: !6507)
!6524 = !DILocation(line: 411, column: 15, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6526, file: !6254, line: 409, column: 30)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !6254, line: 409, column: 8)
!6527 = distinct !DILexicalBlock(scope: !6520, file: !6254, line: 407, column: 50)
!6528 = !DILocation(line: 412, column: 4, scope: !6525)
!6529 = !DILocation(line: 415, column: 11, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6498, file: !6254, line: 415, column: 6)
!6531 = !DILocation(line: 418, column: 12, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6498, file: !6254, line: 418, column: 6)
!6533 = !DILocation(line: 418, column: 17, scope: !6532)
!6534 = !DILocation(line: 418, column: 41, scope: !6532)
!6535 = !DILocation(line: 418, column: 6, scope: !6498)
!6536 = !DILocation(line: 423, column: 18, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6532, file: !6254, line: 423, column: 13)
!6538 = !DILocation(line: 524, column: 12, scope: !6498)
!6539 = !DILocation(line: 526, column: 15, scope: !6498)
!6540 = !DILocation(line: 528, column: 2, scope: !6498)
!6541 = distinct !DISubprogram(name: "usage_fault", scope: !6254, file: !6254, line: 539, type: !6542, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6546)
!6542 = !DISubroutineType(types: !6543)
!6543 = !{!121, !6544}
!6544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6545, size: 32)
!6545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2792)
!6546 = !{!6547, !6548}
!6547 = !DILocalVariable(name: "esf", arg: 1, scope: !6541, file: !6254, line: 539, type: !6544)
!6548 = !DILocalVariable(name: "reason", scope: !6541, file: !6254, line: 541, type: !121)
!6549 = !DILocation(line: 0, scope: !6541)
!6550 = !DILocation(line: 546, column: 12, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6541, file: !6254, line: 546, column: 6)
!6552 = !DILocation(line: 549, column: 12, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6541, file: !6254, line: 549, column: 6)
!6554 = !DILocation(line: 567, column: 12, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6541, file: !6254, line: 567, column: 6)
!6556 = !DILocation(line: 570, column: 12, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6541, file: !6254, line: 570, column: 6)
!6558 = !DILocation(line: 573, column: 12, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6541, file: !6254, line: 573, column: 6)
!6560 = !DILocation(line: 576, column: 12, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6541, file: !6254, line: 576, column: 6)
!6562 = !DILocation(line: 581, column: 12, scope: !6541)
!6563 = !DILocation(line: 583, column: 2, scope: !6541)
!6564 = distinct !DISubprogram(name: "debug_monitor", scope: !6254, file: !6254, line: 632, type: !6565, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6567)
!6565 = !DISubroutineType(types: !6566)
!6566 = !{null, !2791, !6321}
!6567 = !{!6568, !6569}
!6568 = !DILocalVariable(name: "esf", arg: 1, scope: !6564, file: !6254, line: 632, type: !2791)
!6569 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6564, file: !6254, line: 632, type: !6321)
!6570 = !DILocation(line: 0, scope: !6564)
!6571 = !DILocation(line: 634, column: 15, scope: !6564)
!6572 = !DILocation(line: 652, column: 1, scope: !6564)
!6573 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6254, file: !6254, line: 658, type: !6574, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6576)
!6574 = !DISubroutineType(types: !6575)
!6575 = !{!157, !2791}
!6576 = !{!6577, !6578, !6579}
!6577 = !DILocalVariable(name: "esf", arg: 1, scope: !6573, file: !6254, line: 658, type: !2791)
!6578 = !DILocalVariable(name: "ret_addr", scope: !6573, file: !6254, line: 660, type: !2565)
!6579 = !DILocalVariable(name: "fault_insn", scope: !6573, file: !6254, line: 686, type: !429)
!6580 = !DILocation(line: 0, scope: !6573)
!6581 = !DILocation(line: 660, column: 46, scope: !6573)
!6582 = !DILocation(line: 660, column: 23, scope: !6573)
!6583 = !DILocation(line: 682, column: 11, scope: !6573)
!6584 = !DILocation(line: 271, column: 3, scope: !6585, inlinedAt: !6586)
!6585 = distinct !DISubprogram(name: "__DSB", scope: !5953, file: !5953, line: 269, type: !3181, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !317)
!6586 = distinct !DILocation(line: 683, column: 2, scope: !6573)
!6587 = !{i64 3549610}
!6588 = !DILocation(line: 260, column: 3, scope: !6589, inlinedAt: !6590)
!6589 = distinct !DISubprogram(name: "__ISB", scope: !5953, file: !5953, line: 258, type: !3181, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !317)
!6590 = distinct !DILocation(line: 684, column: 2, scope: !6573)
!6591 = !{i64 3549327}
!6592 = !DILocation(line: 686, column: 35, scope: !6573)
!6593 = !DILocation(line: 686, column: 24, scope: !6573)
!6594 = !DILocation(line: 688, column: 11, scope: !6573)
!6595 = !DILocation(line: 271, column: 3, scope: !6585, inlinedAt: !6596)
!6596 = distinct !DILocation(line: 689, column: 2, scope: !6573)
!6597 = !DILocation(line: 260, column: 3, scope: !6589, inlinedAt: !6598)
!6598 = distinct !DILocation(line: 690, column: 2, scope: !6573)
!6599 = !DILocation(line: 693, column: 45, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6573, file: !6254, line: 693, column: 6)
!6601 = !DILocation(line: 699, column: 1, scope: !6573)
!6602 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6254, file: !6254, line: 1107, type: !3181, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !317)
!6603 = !DILocation(line: 1111, column: 11, scope: !6602)
!6604 = !DILocation(line: 1136, column: 1, scope: !6602)
!6605 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6606, file: !6606, line: 26, type: !3181, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2834, retainedNodes: !6607)
!6606 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6607 = !{!6608}
!6608 = !DILocalVariable(name: "irq", scope: !6605, file: !6606, line: 28, type: !103)
!6609 = !DILocation(line: 0, scope: !6605)
!6610 = !DILocation(line: 30, column: 2, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6605, file: !6606, line: 30, column: 2)
!6612 = !DILocation(line: 31, column: 3, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6614, file: !6606, line: 30, column: 39)
!6614 = distinct !DILexicalBlock(scope: !6611, file: !6606, line: 30, column: 2)
!6615 = !DILocation(line: 30, column: 35, scope: !6614)
!6616 = !DILocation(line: 30, column: 13, scope: !6614)
!6617 = distinct !{!6617, !6610, !6618}
!6618 = !DILocation(line: 32, column: 2, scope: !6611)
!6619 = !DILocation(line: 33, column: 1, scope: !6605)
!6620 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !5987, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2834, retainedNodes: !6621)
!6621 = !{!6622, !6623}
!6622 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6620, file: !515, line: 1814, type: !772)
!6623 = !DILocalVariable(name: "priority", arg: 2, scope: !6620, file: !515, line: 1814, type: !121)
!6624 = !DILocation(line: 0, scope: !6620)
!6625 = !DILocation(line: 1816, column: 7, scope: !6620)
!6626 = !DILocation(line: 0, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6620, file: !515, line: 1816, column: 7)
!6628 = !DILocation(line: 1824, column: 1, scope: !6620)
!6629 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6630, file: !6630, line: 27, type: !6631, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !6734)
!6630 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6631 = !DISubroutineType(types: !6632)
!6632 = !{null, !6633}
!6633 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !6634)
!6634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6635, size: 32)
!6635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !6636)
!6636 = !{!6637, !6695, !6707, !6708, !6709, !6710, !6716, !6729}
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6635, file: !379, line: 247, baseType: !6638, size: 384)
!6638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !6639)
!6639 = !{!6640, !6664, !6671, !6672, !6673, !6682, !6683, !6684}
!6640 = !DIDerivedType(tag: DW_TAG_member, scope: !6638, file: !379, line: 60, baseType: !6641, size: 64)
!6641 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6638, file: !379, line: 60, size: 64, elements: !6642)
!6642 = !{!6643, !6658}
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6641, file: !379, line: 61, baseType: !6644, size: 64)
!6644 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !6645)
!6645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !6646)
!6646 = !{!6647, !6653}
!6647 = !DIDerivedType(tag: DW_TAG_member, scope: !6645, file: !325, line: 38, baseType: !6648, size: 32)
!6648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6645, file: !325, line: 38, size: 32, elements: !6649)
!6649 = !{!6650, !6652}
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6648, file: !325, line: 39, baseType: !6651, size: 32)
!6651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6645, size: 32)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6648, file: !325, line: 40, baseType: !6651, size: 32)
!6653 = !DIDerivedType(tag: DW_TAG_member, scope: !6645, file: !325, line: 42, baseType: !6654, size: 32, offset: 32)
!6654 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6645, file: !325, line: 42, size: 32, elements: !6655)
!6655 = !{!6656, !6657}
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6654, file: !325, line: 43, baseType: !6651, size: 32)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6654, file: !325, line: 44, baseType: !6651, size: 32)
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6641, file: !379, line: 62, baseType: !6659, size: 64)
!6659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !6660)
!6660 = !{!6661}
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6659, file: !404, line: 50, baseType: !6662, size: 64)
!6662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6663, size: 64, elements: !363)
!6663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6659, size: 32)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6638, file: !379, line: 68, baseType: !6665, size: 32, offset: 64)
!6665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6666, size: 32)
!6666 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !6667)
!6667 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !6668)
!6668 = !{!6669}
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6667, file: !320, line: 232, baseType: !6670, size: 64)
!6670 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !6645)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6638, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6638, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!6673 = !DIDerivedType(tag: DW_TAG_member, scope: !6638, file: !379, line: 90, baseType: !6674, size: 16, offset: 112)
!6674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6638, file: !379, line: 90, size: 16, elements: !6675)
!6675 = !{!6676, !6681}
!6676 = !DIDerivedType(tag: DW_TAG_member, scope: !6674, file: !379, line: 91, baseType: !6677, size: 16)
!6677 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6674, file: !379, line: 91, size: 16, elements: !6678)
!6678 = !{!6679, !6680}
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6677, file: !379, line: 96, baseType: !425, size: 8)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6677, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6674, file: !379, line: 100, baseType: !429, size: 16)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6638, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6638, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6638, file: !379, line: 131, baseType: !6685, size: 192, offset: 192)
!6685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !6686)
!6686 = !{!6687, !6688, !6694}
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6685, file: !320, line: 245, baseType: !6644, size: 64)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6685, file: !320, line: 246, baseType: !6689, size: 32, offset: 64)
!6689 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !6690)
!6690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6691, size: 32)
!6691 = !DISubroutineType(types: !6692)
!6692 = !{null, !6693}
!6693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6685, size: 32)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6685, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6635, file: !379, line: 250, baseType: !6696, size: 288, offset: 384)
!6696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6697)
!6697 = !{!6698, !6699, !6700, !6701, !6702, !6703, !6704, !6705, !6706}
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6696, file: !446, line: 26, baseType: !121, size: 32)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6696, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6696, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6696, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6696, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6696, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6696, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6696, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6696, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6635, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6635, file: !379, line: 256, baseType: !6666, size: 64, offset: 704)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6635, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6635, file: !379, line: 300, baseType: !6711, size: 96, offset: 800)
!6711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !6712)
!6712 = !{!6713, !6714, !6715}
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6711, file: !379, line: 153, baseType: !22, size: 32)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6711, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6711, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6635, file: !379, line: 325, baseType: !6717, size: 32, offset: 896)
!6717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6718, size: 32)
!6718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !6719)
!6719 = !{!6720, !6726, !6727}
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6718, file: !296, line: 5074, baseType: !6721, size: 96)
!6721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !6722)
!6722 = !{!6723, !6724, !6725}
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6721, file: !472, line: 57, baseType: !475, size: 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6721, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6721, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6718, file: !296, line: 5075, baseType: !6666, size: 64, offset: 96)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6718, file: !296, line: 5076, baseType: !6728, offset: 160)
!6728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6635, file: !379, line: 343, baseType: !6730, size: 64, offset: 928)
!6730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !6731)
!6731 = !{!6732, !6733}
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6730, file: !446, line: 63, baseType: !121, size: 32)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6730, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!6734 = !{!6735}
!6735 = !DILocalVariable(name: "thread", arg: 1, scope: !6629, file: !6630, line: 27, type: !6633)
!6736 = !DILocation(line: 0, scope: !6629)
!6737 = !DILocation(line: 29, column: 6, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6629, file: !6630, line: 29, column: 6)
!6739 = !DILocation(line: 29, column: 15, scope: !6738)
!6740 = !DILocation(line: 29, column: 6, scope: !6629)
!6741 = !DILocation(line: 1031, column: 3, scope: !6742, inlinedAt: !6745)
!6742 = distinct !DISubprogram(name: "__get_IPSR", scope: !5953, file: !5953, line: 1027, type: !6034, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !6743)
!6743 = !{!6744}
!6744 = !DILocalVariable(name: "result", scope: !6742, file: !5953, line: 1029, type: !121)
!6745 = distinct !DILocation(line: 48, column: 10, scope: !6746, inlinedAt: !6750)
!6746 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6747, file: !6747, line: 46, type: !6748, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !317)
!6747 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6748 = !DISubroutineType(types: !6749)
!6749 = !{!157}
!6750 = distinct !DILocation(line: 30, column: 7, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !6630, line: 30, column: 7)
!6752 = distinct !DILexicalBlock(scope: !6738, file: !6630, line: 29, column: 26)
!6753 = !{i64 3538458}
!6754 = !DILocation(line: 0, scope: !6742, inlinedAt: !6745)
!6755 = !DILocation(line: 48, column: 9, scope: !6746, inlinedAt: !6750)
!6756 = !DILocation(line: 30, column: 7, scope: !6752)
!6757 = !DILocation(line: 42, column: 14, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6751, file: !6630, line: 30, column: 25)
!6759 = !DILocation(line: 48, column: 15, scope: !6758)
!6760 = !DILocation(line: 49, column: 3, scope: !6758)
!6761 = !DILocation(line: 52, column: 2, scope: !6629)
!6762 = !DILocation(line: 53, column: 1, scope: !6629)
!6763 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !374, file: !374, line: 127, type: !3181, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !317)
!6764 = !DILocation(line: 134, column: 2, scope: !6763)
!6765 = !DILocation(line: 156, column: 1, scope: !6763)
!6766 = !DILocation(line: 0, scope: !373)
!6767 = !DILocation(line: 289, column: 36, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !373, file: !374, line: 285, column: 2)
!6769 = !DILocation(line: 289, column: 42, scope: !6768)
!6770 = !DILocation(line: 300, column: 36, scope: !373)
!6771 = !DILocation(line: 301, column: 35, scope: !373)
!6772 = !DILocation(line: 302, column: 37, scope: !373)
!6773 = !DILocation(line: 311, column: 2, scope: !373)
!6774 = !DILocation(line: 316, column: 1, scope: !373)
!6775 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !543, file: !543, line: 180, type: !3181, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6776 = !DILocation(line: 188, column: 12, scope: !6775)
!6777 = !DILocation(line: 271, column: 3, scope: !6778, inlinedAt: !6779)
!6778 = distinct !DISubprogram(name: "__DSB", scope: !5953, file: !5953, line: 269, type: !3181, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6779 = distinct !DILocation(line: 192, column: 2, scope: !6775)
!6780 = !{i64 3699136}
!6781 = !DILocation(line: 260, column: 3, scope: !6782, inlinedAt: !6783)
!6782 = distinct !DISubprogram(name: "__ISB", scope: !5953, file: !5953, line: 258, type: !3181, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6783 = distinct !DILocation(line: 193, column: 2, scope: !6775)
!6784 = !{i64 3698853}
!6785 = !DILocation(line: 194, column: 1, scope: !6775)
!6786 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !543, file: !543, line: 199, type: !3181, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6787 = !DILocation(line: 282, column: 3, scope: !6788, inlinedAt: !6789)
!6788 = distinct !DISubprogram(name: "__DMB", scope: !5953, file: !5953, line: 280, type: !3181, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6789 = distinct !DILocation(line: 202, column: 2, scope: !6786)
!6790 = !{i64 3699412}
!6791 = !DILocation(line: 205, column: 12, scope: !6786)
!6792 = !DILocation(line: 206, column: 1, scope: !6786)
!6793 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !543, file: !543, line: 275, type: !6794, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6807)
!6794 = !DISubroutineType(types: !6795)
!6795 = !{null, !6796, !262, !6221, !6221}
!6796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6797, size: 32)
!6797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6798)
!6798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !494, line: 52, size: 96, elements: !6799)
!6799 = !{!6800, !6801, !6802}
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6798, file: !494, line: 53, baseType: !22, size: 32)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6798, file: !494, line: 54, baseType: !204, size: 32, offset: 32)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6798, file: !494, line: 55, baseType: !6803, size: 32, offset: 64)
!6803 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !500, line: 151, baseType: !6804)
!6804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 149, size: 32, elements: !6805)
!6805 = !{!6806}
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6804, file: !500, line: 150, baseType: !121, size: 32)
!6807 = !{!6808, !6809, !6810, !6811}
!6808 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6793, file: !543, line: 276, type: !6796)
!6809 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6793, file: !543, line: 276, type: !262)
!6810 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6793, file: !543, line: 277, type: !6221)
!6811 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6793, file: !543, line: 277, type: !6221)
!6812 = !DILocation(line: 0, scope: !6793)
!6813 = !DILocation(line: 279, column: 6, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6793, file: !543, line: 279, column: 6)
!6815 = !DILocation(line: 285, column: 1, scope: !6793)
!6816 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6817, file: !6817, line: 220, type: !6818, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6820)
!6817 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6818 = !DISubroutineType(types: !6819)
!6819 = !{!103, !6796, !262, !6221, !6221}
!6820 = !{!6821, !6822, !6823, !6824, !6825}
!6821 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6816, file: !6817, line: 221, type: !6796)
!6822 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6816, file: !6817, line: 221, type: !262)
!6823 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6816, file: !6817, line: 222, type: !6221)
!6824 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6816, file: !6817, line: 223, type: !6221)
!6825 = !DILocalVariable(name: "mpu_reg_index", scope: !6816, file: !6817, line: 225, type: !103)
!6826 = !DILocation(line: 0, scope: !6816)
!6827 = !DILocation(line: 225, column: 22, scope: !6816)
!6828 = !DILocation(line: 233, column: 18, scope: !6816)
!6829 = !DILocation(line: 236, column: 23, scope: !6816)
!6830 = !DILocation(line: 236, column: 21, scope: !6816)
!6831 = !DILocation(line: 238, column: 2, scope: !6816)
!6832 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !543, file: !543, line: 105, type: !6833, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6835)
!6833 = !DISubroutineType(types: !6834)
!6834 = !{!103, !6796, !154, !154, !157}
!6835 = !{!6836, !6837, !6838, !6839, !6840, !6841}
!6836 = !DILocalVariable(name: "regions", arg: 1, scope: !6832, file: !543, line: 106, type: !6796)
!6837 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6832, file: !543, line: 106, type: !154)
!6838 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6832, file: !543, line: 106, type: !154)
!6839 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6832, file: !543, line: 107, type: !157)
!6840 = !DILocalVariable(name: "i", scope: !6832, file: !543, line: 109, type: !103)
!6841 = !DILocalVariable(name: "reg_index", scope: !6832, file: !543, line: 110, type: !103)
!6842 = !DILocation(line: 0, scope: !6832)
!6843 = !DILocation(line: 110, column: 18, scope: !6832)
!6844 = !DILocation(line: 112, column: 16, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6846, file: !543, line: 112, column: 2)
!6846 = distinct !DILexicalBlock(scope: !6832, file: !543, line: 112, column: 2)
!6847 = !DILocation(line: 112, column: 2, scope: !6846)
!6848 = !DILocation(line: 113, column: 7, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !543, line: 113, column: 7)
!6850 = distinct !DILexicalBlock(scope: !6845, file: !543, line: 112, column: 36)
!6851 = !DILocation(line: 113, column: 18, scope: !6849)
!6852 = !DILocation(line: 113, column: 23, scope: !6849)
!6853 = !DILocation(line: 113, column: 7, scope: !6850)
!6854 = !DILocation(line: 118, column: 23, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6850, file: !543, line: 118, column: 7)
!6856 = !DILocation(line: 119, column: 7, scope: !6855)
!6857 = !DILocation(line: 118, column: 7, scope: !6850)
!6858 = !DILocation(line: 124, column: 36, scope: !6850)
!6859 = !DILocation(line: 124, column: 15, scope: !6850)
!6860 = !DILocation(line: 126, column: 17, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6850, file: !543, line: 126, column: 7)
!6862 = !DILocation(line: 126, column: 7, scope: !6850)
!6863 = !DILocation(line: 131, column: 12, scope: !6850)
!6864 = !DILocation(line: 132, column: 2, scope: !6850)
!6865 = !DILocation(line: 112, column: 32, scope: !6845)
!6866 = distinct !{!6866, !6847, !6867}
!6867 = !DILocation(line: 132, column: 2, scope: !6846)
!6868 = !DILocation(line: 135, column: 1, scope: !6832)
!6869 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6817, file: !6817, line: 63, type: !6870, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6872)
!6870 = !DISubroutineType(types: !6871)
!6871 = !{!103, !6796}
!6872 = !{!6873, !6874}
!6873 = !DILocalVariable(name: "part", arg: 1, scope: !6869, file: !6817, line: 63, type: !6796)
!6874 = !DILocalVariable(name: "partition_is_valid", scope: !6869, file: !6817, line: 70, type: !103)
!6875 = !DILocation(line: 0, scope: !6869)
!6876 = !DILocation(line: 71, column: 11, scope: !6869)
!6877 = !DILocation(line: 71, column: 37, scope: !6869)
!6878 = !DILocation(line: 72, column: 3, scope: !6869)
!6879 = !DILocation(line: 71, column: 30, scope: !6869)
!6880 = !DILocation(line: 75, column: 11, scope: !6869)
!6881 = !DILocation(line: 75, column: 17, scope: !6869)
!6882 = !DILocation(line: 75, column: 38, scope: !6869)
!6883 = !DILocation(line: 77, column: 2, scope: !6869)
!6884 = distinct !DISubprogram(name: "mpu_configure_region", scope: !543, file: !543, line: 79, type: !6885, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6887)
!6885 = !DISubroutineType(types: !6886)
!6886 = !{!103, !262, !6796}
!6887 = !{!6888, !6889, !6890}
!6888 = !DILocalVariable(name: "index", arg: 1, scope: !6884, file: !543, line: 79, type: !262)
!6889 = !DILocalVariable(name: "new_region", arg: 2, scope: !6884, file: !543, line: 80, type: !6796)
!6890 = !DILocalVariable(name: "region_conf", scope: !6884, file: !543, line: 82, type: !532)
!6891 = !DILocation(line: 0, scope: !6884)
!6892 = !DILocation(line: 82, column: 2, scope: !6884)
!6893 = !DILocation(line: 82, column: 24, scope: !6884)
!6894 = !DILocation(line: 87, column: 33, scope: !6884)
!6895 = !DILocation(line: 87, column: 14, scope: !6884)
!6896 = !DILocation(line: 87, column: 19, scope: !6884)
!6897 = !DILocation(line: 91, column: 55, scope: !6884)
!6898 = !DILocation(line: 92, column: 16, scope: !6884)
!6899 = !DILocation(line: 92, column: 53, scope: !6884)
!6900 = !DILocation(line: 91, column: 2, scope: !6884)
!6901 = !DILocation(line: 95, column: 9, scope: !6884)
!6902 = !DILocation(line: 97, column: 1, scope: !6884)
!6903 = !DILocation(line: 95, column: 2, scope: !6884)
!6904 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6817, file: !6817, line: 113, type: !6905, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6910)
!6905 = !DISubroutineType(types: !6906)
!6906 = !{null, !6907, !6908, !121, !121}
!6907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 32)
!6908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6909, size: 32)
!6909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6803)
!6910 = !{!6911, !6912, !6913, !6914}
!6911 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6904, file: !6817, line: 114, type: !6907)
!6912 = !DILocalVariable(name: "attr", arg: 2, scope: !6904, file: !6817, line: 115, type: !6908)
!6913 = !DILocalVariable(name: "base", arg: 3, scope: !6904, file: !6817, line: 115, type: !121)
!6914 = !DILocalVariable(name: "size", arg: 4, scope: !6904, file: !6817, line: 115, type: !121)
!6915 = !DILocation(line: 0, scope: !6904)
!6916 = !DILocation(line: 127, column: 23, scope: !6904)
!6917 = !DILocation(line: 127, column: 35, scope: !6904)
!6918 = !DILocation(line: 127, column: 33, scope: !6904)
!6919 = !DILocation(line: 127, column: 10, scope: !6904)
!6920 = !DILocation(line: 127, column: 15, scope: !6904)
!6921 = !DILocation(line: 129, column: 1, scope: !6904)
!6922 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !543, file: !543, line: 57, type: !6923, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6925)
!6923 = !DISubroutineType(types: !6924)
!6924 = !{!103, !262, !530}
!6925 = !{!6926, !6927}
!6926 = !DILocalVariable(name: "index", arg: 1, scope: !6922, file: !543, line: 57, type: !262)
!6927 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6922, file: !543, line: 58, type: !530)
!6928 = !DILocation(line: 0, scope: !6922)
!6929 = !DILocation(line: 61, column: 6, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6922, file: !543, line: 61, column: 6)
!6931 = !DILocation(line: 61, column: 12, scope: !6930)
!6932 = !DILocation(line: 61, column: 6, scope: !6922)
!6933 = !DILocation(line: 71, column: 2, scope: !6922)
!6934 = !DILocation(line: 73, column: 2, scope: !6922)
!6935 = !DILocation(line: 74, column: 1, scope: !6922)
!6936 = distinct !DISubprogram(name: "region_init", scope: !6817, file: !6817, line: 29, type: !6937, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6939)
!6937 = !DISubroutineType(types: !6938)
!6938 = !{null, !6221, !530}
!6939 = !{!6940, !6941}
!6940 = !DILocalVariable(name: "index", arg: 1, scope: !6936, file: !6817, line: 29, type: !6221)
!6941 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6936, file: !6817, line: 30, type: !530)
!6942 = !DILocation(line: 0, scope: !6936)
!6943 = !DILocation(line: 33, column: 2, scope: !6936)
!6944 = !DILocation(line: 47, column: 28, scope: !6936)
!6945 = !DILocation(line: 47, column: 33, scope: !6936)
!6946 = !DILocation(line: 48, column: 26, scope: !6936)
!6947 = !DILocation(line: 47, column: 12, scope: !6936)
!6948 = !DILocation(line: 49, column: 32, scope: !6936)
!6949 = !DILocation(line: 49, column: 37, scope: !6936)
!6950 = !DILocation(line: 49, column: 12, scope: !6936)
!6951 = !DILocation(line: 53, column: 1, scope: !6936)
!6952 = distinct !DISubprogram(name: "set_region_number", scope: !6953, file: !6953, line: 32, type: !6044, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6954)
!6953 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6954 = !{!6955}
!6955 = !DILocalVariable(name: "index", arg: 1, scope: !6952, file: !6953, line: 32, type: !121)
!6956 = !DILocation(line: 0, scope: !6952)
!6957 = !DILocation(line: 34, column: 11, scope: !6952)
!6958 = !DILocation(line: 35, column: 1, scope: !6952)
!6959 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6817, file: !6817, line: 88, type: !6960, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6962)
!6960 = !DISubroutineType(types: !6961)
!6961 = !{!121, !121}
!6962 = !{!6963}
!6963 = !DILocalVariable(name: "size", arg: 1, scope: !6959, file: !6817, line: 88, type: !121)
!6964 = !DILocation(line: 0, scope: !6959)
!6965 = !DILocation(line: 91, column: 11, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6959, file: !6817, line: 91, column: 6)
!6967 = !DILocation(line: 91, column: 6, scope: !6959)
!6968 = !DILocation(line: 100, column: 11, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6959, file: !6817, line: 100, column: 6)
!6970 = !DILocation(line: 100, column: 6, scope: !6959)
!6971 = !DILocation(line: 104, column: 35, scope: !6959)
!6972 = !DILocation(line: 104, column: 16, scope: !6959)
!6973 = !DILocation(line: 104, column: 50, scope: !6959)
!6974 = !DILocation(line: 104, column: 72, scope: !6959)
!6975 = !DILocation(line: 104, column: 2, scope: !6959)
!6976 = !DILocation(line: 106, column: 1, scope: !6959)
!6977 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !543, file: !543, line: 307, type: !6978, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6980)
!6978 = !DISubroutineType(types: !6979)
!6979 = !{null, !6796, !154}
!6980 = !{!6981, !6982}
!6981 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6977, file: !543, line: 308, type: !6796)
!6982 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6977, file: !543, line: 308, type: !154)
!6983 = !DILocation(line: 0, scope: !6977)
!6984 = !DILocation(line: 310, column: 6, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6977, file: !543, line: 310, column: 6)
!6986 = !DILocation(line: 316, column: 1, scope: !6977)
!6987 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6817, file: !6817, line: 249, type: !6988, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6990)
!6988 = !DISubroutineType(types: !6989)
!6989 = !{!103, !6796, !154}
!6990 = !{!6991, !6992, !6993, !6994}
!6991 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6987, file: !6817, line: 250, type: !6796)
!6992 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6987, file: !6817, line: 250, type: !154)
!6993 = !DILocalVariable(name: "mpu_reg_index", scope: !6987, file: !6817, line: 252, type: !103)
!6994 = !DILocalVariable(name: "i", scope: !6995, file: !6817, line: 264, type: !103)
!6995 = distinct !DILexicalBlock(scope: !6996, file: !6817, line: 264, column: 3)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !6817, line: 261, column: 32)
!6997 = distinct !DILexicalBlock(scope: !6987, file: !6817, line: 261, column: 6)
!6998 = !DILocation(line: 0, scope: !6987)
!6999 = !DILocation(line: 252, column: 22, scope: !6987)
!7000 = !DILocation(line: 258, column: 18, scope: !6987)
!7001 = !DILocation(line: 261, column: 20, scope: !6997)
!7002 = !DILocation(line: 261, column: 6, scope: !6987)
!7003 = !DILocation(line: 0, scope: !6995)
!7004 = !DILocation(line: 265, column: 4, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !6817, line: 264, column: 59)
!7006 = distinct !DILexicalBlock(scope: !6995, file: !6817, line: 264, column: 3)
!7007 = !DILocation(line: 264, column: 55, scope: !7006)
!7008 = !DILocation(line: 264, column: 33, scope: !7006)
!7009 = !DILocation(line: 264, column: 3, scope: !6995)
!7010 = distinct !{!7010, !7009, !7011}
!7011 = !DILocation(line: 266, column: 3, scope: !6995)
!7012 = !DILocation(line: 269, column: 2, scope: !6987)
!7013 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7014, file: !7014, line: 218, type: !6044, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7015)
!7014 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7015 = !{!7016}
!7016 = !DILocalVariable(name: "rnr", arg: 1, scope: !7013, file: !7014, line: 218, type: !121)
!7017 = !DILocation(line: 0, scope: !7013)
!7018 = !DILocation(line: 220, column: 12, scope: !7013)
!7019 = !DILocation(line: 221, column: 13, scope: !7013)
!7020 = !DILocation(line: 222, column: 1, scope: !7013)
!7021 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !543, file: !543, line: 326, type: !7022, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7024)
!7022 = !DISubroutineType(types: !7023)
!7023 = !{!103}
!7024 = !{!7025}
!7025 = !DILocalVariable(name: "r_index", scope: !7021, file: !543, line: 328, type: !121)
!7026 = !DILocation(line: 330, column: 17, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7021, file: !543, line: 330, column: 6)
!7028 = !DILocation(line: 330, column: 29, scope: !7027)
!7029 = !DILocation(line: 330, column: 6, scope: !7021)
!7030 = !DILocation(line: 347, column: 2, scope: !7021)
!7031 = !DILocation(line: 0, scope: !7021)
!7032 = !DILocation(line: 364, column: 29, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !543, line: 364, column: 2)
!7034 = distinct !DILexicalBlock(scope: !7021, file: !543, line: 364, column: 2)
!7035 = !DILocation(line: 364, column: 2, scope: !7034)
!7036 = !DILocation(line: 365, column: 25, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7033, file: !543, line: 364, column: 66)
!7038 = !DILocation(line: 365, column: 3, scope: !7037)
!7039 = !DILocation(line: 364, column: 62, scope: !7033)
!7040 = distinct !{!7040, !7035, !7041}
!7041 = !DILocation(line: 366, column: 2, scope: !7034)
!7042 = !DILocation(line: 369, column: 23, scope: !7021)
!7043 = !DILocation(line: 369, column: 21, scope: !7021)
!7044 = !DILocation(line: 372, column: 2, scope: !7021)
!7045 = !DILocation(line: 443, column: 2, scope: !7021)
!7046 = !DILocation(line: 444, column: 1, scope: !7021)
!7047 = distinct !DISubprogram(name: "strcpy", scope: !7048, file: !7048, line: 20, type: !7049, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7053)
!7048 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7049 = !DISubroutineType(types: !7050)
!7050 = !{!344, !7051, !7052}
!7051 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !344)
!7052 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!7053 = !{!7054, !7055, !7056}
!7054 = !DILocalVariable(name: "d", arg: 1, scope: !7047, file: !7048, line: 20, type: !7051)
!7055 = !DILocalVariable(name: "s", arg: 2, scope: !7047, file: !7048, line: 20, type: !7052)
!7056 = !DILocalVariable(name: "dest", scope: !7047, file: !7048, line: 22, type: !344)
!7057 = !DILocation(line: 0, scope: !7047)
!7058 = !DILocation(line: 24, column: 9, scope: !7047)
!7059 = !DILocation(line: 24, column: 12, scope: !7047)
!7060 = !DILocation(line: 24, column: 2, scope: !7047)
!7061 = !DILocation(line: 25, column: 6, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7047, file: !7048, line: 24, column: 21)
!7063 = !DILocation(line: 26, column: 4, scope: !7062)
!7064 = !DILocation(line: 27, column: 4, scope: !7062)
!7065 = distinct !{!7065, !7060, !7066}
!7066 = !DILocation(line: 28, column: 2, scope: !7047)
!7067 = !DILocation(line: 30, column: 5, scope: !7047)
!7068 = !DILocation(line: 32, column: 2, scope: !7047)
!7069 = distinct !DISubprogram(name: "strncpy", scope: !7048, file: !7048, line: 42, type: !7070, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7072)
!7070 = !DISubroutineType(types: !7071)
!7071 = !{!344, !7051, !7052, !204}
!7072 = !{!7073, !7074, !7075, !7076}
!7073 = !DILocalVariable(name: "d", arg: 1, scope: !7069, file: !7048, line: 42, type: !7051)
!7074 = !DILocalVariable(name: "s", arg: 2, scope: !7069, file: !7048, line: 42, type: !7052)
!7075 = !DILocalVariable(name: "n", arg: 3, scope: !7069, file: !7048, line: 42, type: !204)
!7076 = !DILocalVariable(name: "dest", scope: !7069, file: !7048, line: 44, type: !344)
!7077 = !DILocation(line: 0, scope: !7069)
!7078 = !DILocation(line: 46, column: 12, scope: !7069)
!7079 = !DILocation(line: 46, column: 17, scope: !7069)
!7080 = !DILocation(line: 46, column: 20, scope: !7069)
!7081 = !DILocation(line: 46, column: 23, scope: !7069)
!7082 = !DILocation(line: 46, column: 2, scope: !7069)
!7083 = !DILocation(line: 47, column: 6, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7069, file: !7048, line: 46, column: 32)
!7085 = !DILocation(line: 48, column: 4, scope: !7084)
!7086 = !DILocation(line: 49, column: 4, scope: !7084)
!7087 = !DILocation(line: 50, column: 4, scope: !7084)
!7088 = distinct !{!7088, !7082, !7089}
!7089 = !DILocation(line: 51, column: 2, scope: !7069)
!7090 = !DILocation(line: 54, column: 6, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7069, file: !7048, line: 53, column: 16)
!7092 = !DILocation(line: 55, column: 4, scope: !7091)
!7093 = !DILocation(line: 56, column: 4, scope: !7091)
!7094 = !DILocation(line: 53, column: 11, scope: !7069)
!7095 = !DILocation(line: 53, column: 2, scope: !7069)
!7096 = distinct !{!7096, !7095, !7097}
!7097 = !DILocation(line: 57, column: 2, scope: !7069)
!7098 = !DILocation(line: 59, column: 2, scope: !7069)
!7099 = distinct !DISubprogram(name: "strchr", scope: !7048, file: !7048, line: 69, type: !7100, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7102)
!7100 = !DISubroutineType(types: !7101)
!7101 = !{!344, !144, !103}
!7102 = !{!7103, !7104, !7105}
!7103 = !DILocalVariable(name: "s", arg: 1, scope: !7099, file: !7048, line: 69, type: !144)
!7104 = !DILocalVariable(name: "c", arg: 2, scope: !7099, file: !7048, line: 69, type: !103)
!7105 = !DILocalVariable(name: "tmp", scope: !7099, file: !7048, line: 71, type: !146)
!7106 = !DILocation(line: 0, scope: !7099)
!7107 = !DILocation(line: 73, column: 2, scope: !7099)
!7108 = !DILocation(line: 73, column: 10, scope: !7099)
!7109 = !DILocation(line: 73, column: 13, scope: !7099)
!7110 = !DILocation(line: 73, column: 21, scope: !7099)
!7111 = !DILocation(line: 74, column: 4, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7099, file: !7048, line: 73, column: 38)
!7113 = distinct !{!7113, !7107, !7114}
!7114 = !DILocation(line: 75, column: 2, scope: !7099)
!7115 = !DILocation(line: 77, column: 9, scope: !7099)
!7116 = !DILocation(line: 77, column: 2, scope: !7099)
!7117 = distinct !DISubprogram(name: "strrchr", scope: !7048, file: !7048, line: 87, type: !7100, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7118)
!7118 = !{!7119, !7120, !7121}
!7119 = !DILocalVariable(name: "s", arg: 1, scope: !7117, file: !7048, line: 87, type: !144)
!7120 = !DILocalVariable(name: "c", arg: 2, scope: !7117, file: !7048, line: 87, type: !103)
!7121 = !DILocalVariable(name: "match", scope: !7117, file: !7048, line: 89, type: !344)
!7122 = !DILocation(line: 0, scope: !7117)
!7123 = !DILocation(line: 91, column: 2, scope: !7117)
!7124 = !DILocation(line: 92, column: 7, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !7048, line: 92, column: 7)
!7126 = distinct !DILexicalBlock(scope: !7117, file: !7048, line: 91, column: 5)
!7127 = !DILocation(line: 92, column: 10, scope: !7125)
!7128 = !DILocation(line: 92, column: 7, scope: !7126)
!7129 = !DILocation(line: 95, column: 13, scope: !7117)
!7130 = !DILocation(line: 95, column: 2, scope: !7126)
!7131 = distinct !{!7131, !7123, !7132}
!7132 = !DILocation(line: 95, column: 15, scope: !7117)
!7133 = !DILocation(line: 97, column: 2, scope: !7117)
!7134 = distinct !DISubprogram(name: "strlen", scope: !7048, file: !7048, line: 107, type: !7135, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7137)
!7135 = !DISubroutineType(types: !7136)
!7136 = !{!204, !144}
!7137 = !{!7138, !7139}
!7138 = !DILocalVariable(name: "s", arg: 1, scope: !7134, file: !7048, line: 107, type: !144)
!7139 = !DILocalVariable(name: "n", scope: !7134, file: !7048, line: 109, type: !204)
!7140 = !DILocation(line: 0, scope: !7134)
!7141 = !DILocation(line: 111, column: 9, scope: !7134)
!7142 = !DILocation(line: 111, column: 12, scope: !7134)
!7143 = !DILocation(line: 111, column: 2, scope: !7134)
!7144 = !DILocation(line: 112, column: 4, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7134, file: !7048, line: 111, column: 21)
!7146 = !DILocation(line: 113, column: 4, scope: !7145)
!7147 = distinct !{!7147, !7143, !7148}
!7148 = !DILocation(line: 114, column: 2, scope: !7134)
!7149 = !DILocation(line: 116, column: 2, scope: !7134)
!7150 = distinct !DISubprogram(name: "strnlen", scope: !7048, file: !7048, line: 126, type: !7151, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7153)
!7151 = !DISubroutineType(types: !7152)
!7152 = !{!204, !144, !204}
!7153 = !{!7154, !7155, !7156}
!7154 = !DILocalVariable(name: "s", arg: 1, scope: !7150, file: !7048, line: 126, type: !144)
!7155 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7150, file: !7048, line: 126, type: !204)
!7156 = !DILocalVariable(name: "n", scope: !7150, file: !7048, line: 128, type: !204)
!7157 = !DILocation(line: 0, scope: !7150)
!7158 = !DILocation(line: 130, column: 9, scope: !7150)
!7159 = !DILocation(line: 130, column: 12, scope: !7150)
!7160 = !DILocation(line: 130, column: 20, scope: !7150)
!7161 = !DILocation(line: 130, column: 2, scope: !7150)
!7162 = !DILocation(line: 131, column: 4, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7150, file: !7048, line: 130, column: 35)
!7164 = !DILocation(line: 132, column: 4, scope: !7163)
!7165 = distinct !{!7165, !7161, !7166}
!7166 = !DILocation(line: 133, column: 2, scope: !7150)
!7167 = !DILocation(line: 135, column: 2, scope: !7150)
!7168 = distinct !DISubprogram(name: "strcmp", scope: !7048, file: !7048, line: 145, type: !7169, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7171)
!7169 = !DISubroutineType(types: !7170)
!7170 = !{!103, !144, !144}
!7171 = !{!7172, !7173}
!7172 = !DILocalVariable(name: "s1", arg: 1, scope: !7168, file: !7048, line: 145, type: !144)
!7173 = !DILocalVariable(name: "s2", arg: 2, scope: !7168, file: !7048, line: 145, type: !144)
!7174 = !DILocation(line: 0, scope: !7168)
!7175 = !DILocation(line: 147, column: 10, scope: !7168)
!7176 = !DILocation(line: 147, column: 17, scope: !7168)
!7177 = !DILocation(line: 147, column: 14, scope: !7168)
!7178 = !DILocation(line: 147, column: 22, scope: !7168)
!7179 = !DILocation(line: 148, column: 5, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7168, file: !7048, line: 147, column: 40)
!7181 = !DILocation(line: 149, column: 5, scope: !7180)
!7182 = distinct !{!7182, !7183, !7184}
!7183 = !DILocation(line: 147, column: 2, scope: !7168)
!7184 = !DILocation(line: 150, column: 2, scope: !7168)
!7185 = !DILocation(line: 152, column: 9, scope: !7168)
!7186 = !DILocation(line: 152, column: 15, scope: !7168)
!7187 = !DILocation(line: 152, column: 13, scope: !7168)
!7188 = !DILocation(line: 152, column: 2, scope: !7168)
!7189 = distinct !DISubprogram(name: "strncmp", scope: !7048, file: !7048, line: 162, type: !7190, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7192)
!7190 = !DISubroutineType(types: !7191)
!7191 = !{!103, !144, !144, !204}
!7192 = !{!7193, !7194, !7195}
!7193 = !DILocalVariable(name: "s1", arg: 1, scope: !7189, file: !7048, line: 162, type: !144)
!7194 = !DILocalVariable(name: "s2", arg: 2, scope: !7189, file: !7048, line: 162, type: !144)
!7195 = !DILocalVariable(name: "n", arg: 3, scope: !7189, file: !7048, line: 162, type: !204)
!7196 = !DILocation(line: 0, scope: !7189)
!7197 = !DILocation(line: 164, column: 17, scope: !7189)
!7198 = !DILocation(line: 164, column: 21, scope: !7189)
!7199 = !DILocation(line: 164, column: 28, scope: !7189)
!7200 = !DILocation(line: 164, column: 25, scope: !7189)
!7201 = !DILocation(line: 164, column: 33, scope: !7189)
!7202 = !DILocation(line: 165, column: 5, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7189, file: !7048, line: 164, column: 51)
!7204 = !DILocation(line: 166, column: 5, scope: !7203)
!7205 = !DILocation(line: 167, column: 4, scope: !7203)
!7206 = distinct !{!7206, !7207, !7208}
!7207 = !DILocation(line: 164, column: 2, scope: !7189)
!7208 = !DILocation(line: 168, column: 2, scope: !7189)
!7209 = !DILocation(line: 170, column: 25, scope: !7189)
!7210 = !DILocation(line: 170, column: 31, scope: !7189)
!7211 = !DILocation(line: 170, column: 29, scope: !7189)
!7212 = !DILocation(line: 170, column: 9, scope: !7189)
!7213 = !DILocation(line: 170, column: 2, scope: !7189)
!7214 = distinct !DISubprogram(name: "strtok_r", scope: !7048, file: !7048, line: 180, type: !7215, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7218)
!7215 = !DISubroutineType(types: !7216)
!7216 = !{!344, !344, !144, !7217}
!7217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!7218 = !{!7219, !7220, !7221, !7222, !7223}
!7219 = !DILocalVariable(name: "str", arg: 1, scope: !7214, file: !7048, line: 180, type: !344)
!7220 = !DILocalVariable(name: "sep", arg: 2, scope: !7214, file: !7048, line: 180, type: !144)
!7221 = !DILocalVariable(name: "state", arg: 3, scope: !7214, file: !7048, line: 180, type: !7217)
!7222 = !DILocalVariable(name: "start", scope: !7214, file: !7048, line: 182, type: !344)
!7223 = !DILocalVariable(name: "end", scope: !7214, file: !7048, line: 182, type: !344)
!7224 = !DILocation(line: 0, scope: !7214)
!7225 = !DILocation(line: 184, column: 10, scope: !7214)
!7226 = !DILocation(line: 184, column: 22, scope: !7214)
!7227 = !DILocation(line: 187, column: 9, scope: !7214)
!7228 = !DILocation(line: 187, column: 16, scope: !7214)
!7229 = !DILocation(line: 187, column: 19, scope: !7214)
!7230 = !DILocation(line: 187, column: 2, scope: !7214)
!7231 = !DILocation(line: 188, column: 8, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7214, file: !7048, line: 187, column: 40)
!7233 = distinct !{!7233, !7230, !7234}
!7234 = !DILocation(line: 189, column: 2, scope: !7214)
!7235 = !DILocation(line: 198, column: 9, scope: !7214)
!7236 = !DILocation(line: 198, column: 18, scope: !7214)
!7237 = !DILocation(line: 198, column: 17, scope: !7214)
!7238 = !DILocation(line: 198, column: 2, scope: !7214)
!7239 = !DILocation(line: 199, column: 6, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7214, file: !7048, line: 198, column: 37)
!7241 = !DILocation(line: 198, column: 14, scope: !7214)
!7242 = distinct !{!7242, !7238, !7243}
!7243 = !DILocation(line: 200, column: 2, scope: !7214)
!7244 = !DILocation(line: 203, column: 8, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7246, file: !7048, line: 202, column: 20)
!7246 = distinct !DILexicalBlock(scope: !7214, file: !7048, line: 202, column: 6)
!7247 = !DILocation(line: 204, column: 16, scope: !7245)
!7248 = !DILocation(line: 205, column: 2, scope: !7245)
!7249 = !DILocation(line: 210, column: 1, scope: !7214)
!7250 = distinct !DISubprogram(name: "strcat", scope: !7048, file: !7048, line: 212, type: !7049, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7251)
!7251 = !{!7252, !7253}
!7252 = !DILocalVariable(name: "dest", arg: 1, scope: !7250, file: !7048, line: 212, type: !7051)
!7253 = !DILocalVariable(name: "src", arg: 2, scope: !7250, file: !7048, line: 212, type: !7052)
!7254 = !DILocation(line: 0, scope: !7250)
!7255 = !DILocation(line: 214, column: 16, scope: !7250)
!7256 = !DILocation(line: 214, column: 14, scope: !7250)
!7257 = !DILocation(line: 214, column: 2, scope: !7250)
!7258 = !DILocation(line: 215, column: 2, scope: !7250)
!7259 = distinct !DISubprogram(name: "strncat", scope: !7048, file: !7048, line: 218, type: !7070, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7260)
!7260 = !{!7261, !7262, !7263, !7264, !7265}
!7261 = !DILocalVariable(name: "dest", arg: 1, scope: !7259, file: !7048, line: 218, type: !7051)
!7262 = !DILocalVariable(name: "src", arg: 2, scope: !7259, file: !7048, line: 218, type: !7052)
!7263 = !DILocalVariable(name: "n", arg: 3, scope: !7259, file: !7048, line: 219, type: !204)
!7264 = !DILocalVariable(name: "orig_dest", scope: !7259, file: !7048, line: 221, type: !344)
!7265 = !DILocalVariable(name: "len", scope: !7259, file: !7048, line: 222, type: !204)
!7266 = !DILocation(line: 0, scope: !7259)
!7267 = !DILocation(line: 222, column: 15, scope: !7259)
!7268 = !DILocation(line: 224, column: 7, scope: !7259)
!7269 = !DILocation(line: 225, column: 14, scope: !7259)
!7270 = !DILocation(line: 225, column: 19, scope: !7259)
!7271 = !DILocation(line: 225, column: 11, scope: !7259)
!7272 = !DILocation(line: 225, column: 23, scope: !7259)
!7273 = !DILocation(line: 225, column: 28, scope: !7259)
!7274 = !DILocation(line: 225, column: 2, scope: !7259)
!7275 = !DILocation(line: 226, column: 17, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7259, file: !7048, line: 225, column: 38)
!7277 = !DILocation(line: 226, column: 8, scope: !7276)
!7278 = !DILocation(line: 226, column: 11, scope: !7276)
!7279 = distinct !{!7279, !7274, !7280}
!7280 = !DILocation(line: 227, column: 2, scope: !7259)
!7281 = !DILocation(line: 228, column: 8, scope: !7259)
!7282 = !DILocation(line: 230, column: 2, scope: !7259)
!7283 = distinct !DISubprogram(name: "memcmp", scope: !7048, file: !7048, line: 239, type: !7284, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7286)
!7284 = !DISubroutineType(types: !7285)
!7285 = !{!103, !13, !13, !204}
!7286 = !{!7287, !7288, !7289, !7290, !7291}
!7287 = !DILocalVariable(name: "m1", arg: 1, scope: !7283, file: !7048, line: 239, type: !13)
!7288 = !DILocalVariable(name: "m2", arg: 2, scope: !7283, file: !7048, line: 239, type: !13)
!7289 = !DILocalVariable(name: "n", arg: 3, scope: !7283, file: !7048, line: 239, type: !204)
!7290 = !DILocalVariable(name: "c1", scope: !7283, file: !7048, line: 241, type: !144)
!7291 = !DILocalVariable(name: "c2", scope: !7283, file: !7048, line: 242, type: !144)
!7292 = !DILocation(line: 0, scope: !7283)
!7293 = !DILocation(line: 244, column: 7, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7283, file: !7048, line: 244, column: 6)
!7295 = !DILocation(line: 244, column: 6, scope: !7283)
!7296 = !DILocation(line: 248, column: 10, scope: !7283)
!7297 = !DILocation(line: 248, column: 14, scope: !7283)
!7298 = !DILocation(line: 248, column: 19, scope: !7283)
!7299 = !DILocation(line: 248, column: 2, scope: !7283)
!7300 = !DILocation(line: 248, column: 23, scope: !7283)
!7301 = !DILocation(line: 248, column: 30, scope: !7283)
!7302 = !DILocation(line: 248, column: 27, scope: !7283)
!7303 = !DILocation(line: 249, column: 5, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7283, file: !7048, line: 248, column: 36)
!7305 = !DILocation(line: 250, column: 5, scope: !7304)
!7306 = distinct !{!7306, !7299, !7307}
!7307 = !DILocation(line: 251, column: 2, scope: !7283)
!7308 = !DILocation(line: 253, column: 9, scope: !7283)
!7309 = !DILocation(line: 253, column: 15, scope: !7283)
!7310 = !DILocation(line: 253, column: 13, scope: !7283)
!7311 = !DILocation(line: 253, column: 2, scope: !7283)
!7312 = !DILocation(line: 254, column: 1, scope: !7283)
!7313 = distinct !DISubprogram(name: "memmove", scope: !7048, file: !7048, line: 263, type: !7314, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7316)
!7314 = !DISubroutineType(types: !7315)
!7315 = !{!102, !102, !13, !204}
!7316 = !{!7317, !7318, !7319, !7320, !7321}
!7317 = !DILocalVariable(name: "d", arg: 1, scope: !7313, file: !7048, line: 263, type: !102)
!7318 = !DILocalVariable(name: "s", arg: 2, scope: !7313, file: !7048, line: 263, type: !13)
!7319 = !DILocalVariable(name: "n", arg: 3, scope: !7313, file: !7048, line: 263, type: !204)
!7320 = !DILocalVariable(name: "dest", scope: !7313, file: !7048, line: 265, type: !344)
!7321 = !DILocalVariable(name: "src", scope: !7313, file: !7048, line: 266, type: !144)
!7322 = !DILocation(line: 0, scope: !7313)
!7323 = !DILocation(line: 268, column: 21, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7313, file: !7048, line: 268, column: 6)
!7325 = !DILocation(line: 268, column: 28, scope: !7324)
!7326 = !DILocation(line: 268, column: 6, scope: !7313)
!7327 = !DILocation(line: 280, column: 12, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7324, file: !7048, line: 278, column: 9)
!7329 = !DILocation(line: 280, column: 3, scope: !7328)
!7330 = !DILocation(line: 275, column: 5, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7332, file: !7048, line: 274, column: 17)
!7332 = distinct !DILexicalBlock(scope: !7324, file: !7048, line: 268, column: 33)
!7333 = !DILocation(line: 276, column: 14, scope: !7331)
!7334 = !DILocation(line: 276, column: 4, scope: !7331)
!7335 = !DILocation(line: 276, column: 12, scope: !7331)
!7336 = !DILocation(line: 274, column: 12, scope: !7332)
!7337 = !DILocation(line: 274, column: 3, scope: !7332)
!7338 = distinct !{!7338, !7337, !7339}
!7339 = !DILocation(line: 277, column: 3, scope: !7332)
!7340 = !DILocation(line: 281, column: 12, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7328, file: !7048, line: 280, column: 17)
!7342 = !DILocation(line: 281, column: 10, scope: !7341)
!7343 = !DILocation(line: 282, column: 8, scope: !7341)
!7344 = !DILocation(line: 283, column: 7, scope: !7341)
!7345 = !DILocation(line: 284, column: 5, scope: !7341)
!7346 = distinct !{!7346, !7329, !7347}
!7347 = !DILocation(line: 285, column: 3, scope: !7328)
!7348 = !DILocation(line: 288, column: 2, scope: !7313)
!7349 = distinct !DISubprogram(name: "memcpy", scope: !7048, file: !7048, line: 298, type: !7350, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7354)
!7350 = !DISubroutineType(types: !7351)
!7351 = !{!102, !7352, !7353, !204}
!7352 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7353 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7354 = !{!7355, !7356, !7357, !7358, !7359}
!7355 = !DILocalVariable(name: "d", arg: 1, scope: !7349, file: !7048, line: 298, type: !7352)
!7356 = !DILocalVariable(name: "s", arg: 2, scope: !7349, file: !7048, line: 298, type: !7353)
!7357 = !DILocalVariable(name: "n", arg: 3, scope: !7349, file: !7048, line: 298, type: !204)
!7358 = !DILocalVariable(name: "d_byte", scope: !7349, file: !7048, line: 302, type: !230)
!7359 = !DILocalVariable(name: "s_byte", scope: !7349, file: !7048, line: 303, type: !2910)
!7360 = !DILocation(line: 0, scope: !7349)
!7361 = !DILocation(line: 337, column: 11, scope: !7349)
!7362 = !DILocation(line: 337, column: 2, scope: !7349)
!7363 = !DILocation(line: 338, column: 25, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7349, file: !7048, line: 337, column: 16)
!7365 = !DILocation(line: 338, column: 17, scope: !7364)
!7366 = !DILocation(line: 338, column: 11, scope: !7364)
!7367 = !DILocation(line: 338, column: 15, scope: !7364)
!7368 = !DILocation(line: 339, column: 4, scope: !7364)
!7369 = distinct !{!7369, !7362, !7370}
!7370 = !DILocation(line: 340, column: 2, scope: !7349)
!7371 = !DILocation(line: 342, column: 2, scope: !7349)
!7372 = distinct !DISubprogram(name: "memset", scope: !7048, file: !7048, line: 352, type: !7373, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7375)
!7373 = !DISubroutineType(types: !7374)
!7374 = !{!102, !102, !103, !204}
!7375 = !{!7376, !7377, !7378, !7379, !7380}
!7376 = !DILocalVariable(name: "buf", arg: 1, scope: !7372, file: !7048, line: 352, type: !102)
!7377 = !DILocalVariable(name: "c", arg: 2, scope: !7372, file: !7048, line: 352, type: !103)
!7378 = !DILocalVariable(name: "n", arg: 3, scope: !7372, file: !7048, line: 352, type: !204)
!7379 = !DILocalVariable(name: "d_byte", scope: !7372, file: !7048, line: 356, type: !230)
!7380 = !DILocalVariable(name: "c_byte", scope: !7372, file: !7048, line: 357, type: !155)
!7381 = !DILocation(line: 0, scope: !7372)
!7382 = !DILocation(line: 357, column: 25, scope: !7372)
!7383 = !DILocation(line: 389, column: 11, scope: !7372)
!7384 = !DILocation(line: 389, column: 2, scope: !7372)
!7385 = !DILocation(line: 390, column: 11, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7372, file: !7048, line: 389, column: 16)
!7387 = !DILocation(line: 390, column: 15, scope: !7386)
!7388 = !DILocation(line: 391, column: 4, scope: !7386)
!7389 = distinct !{!7389, !7384, !7390}
!7390 = !DILocation(line: 392, column: 2, scope: !7372)
!7391 = !DILocation(line: 394, column: 2, scope: !7372)
!7392 = distinct !DISubprogram(name: "memchr", scope: !7048, file: !7048, line: 404, type: !7393, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7395)
!7393 = !DISubroutineType(types: !7394)
!7394 = !{!102, !13, !103, !204}
!7395 = !{!7396, !7397, !7398, !7399}
!7396 = !DILocalVariable(name: "s", arg: 1, scope: !7392, file: !7048, line: 404, type: !13)
!7397 = !DILocalVariable(name: "c", arg: 2, scope: !7392, file: !7048, line: 404, type: !103)
!7398 = !DILocalVariable(name: "n", arg: 3, scope: !7392, file: !7048, line: 404, type: !204)
!7399 = !DILocalVariable(name: "p", scope: !7400, file: !7048, line: 407, type: !2910)
!7400 = distinct !DILexicalBlock(scope: !7401, file: !7048, line: 406, column: 14)
!7401 = distinct !DILexicalBlock(scope: !7392, file: !7048, line: 406, column: 6)
!7402 = !DILocation(line: 0, scope: !7392)
!7403 = !DILocation(line: 406, column: 8, scope: !7401)
!7404 = !DILocation(line: 406, column: 6, scope: !7392)
!7405 = !DILocation(line: 409, column: 3, scope: !7400)
!7406 = !DILocation(line: 0, scope: !7400)
!7407 = !DILocation(line: 410, column: 8, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7409, file: !7048, line: 410, column: 8)
!7409 = distinct !DILexicalBlock(scope: !7400, file: !7048, line: 409, column: 6)
!7410 = !DILocation(line: 410, column: 13, scope: !7408)
!7411 = !DILocation(line: 410, column: 8, scope: !7409)
!7412 = distinct !{!7412, !7405, !7413}
!7413 = !DILocation(line: 414, column: 20, scope: !7400)
!7414 = !DILocation(line: 417, column: 2, scope: !7392)
!7415 = !DILocation(line: 418, column: 1, scope: !7392)
!7416 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !553, file: !553, line: 23, type: !3315, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7417)
!7417 = !{!7418}
!7418 = !DILocalVariable(name: "hook", arg: 1, scope: !7416, file: !553, line: 23, type: !106)
!7419 = !DILocation(line: 0, scope: !7416)
!7420 = !DILocation(line: 25, column: 15, scope: !7416)
!7421 = !DILocation(line: 26, column: 1, scope: !7416)
!7422 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !553, file: !553, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7423)
!7423 = !{!7424}
!7424 = !DILocalVariable(name: "c", arg: 1, scope: !7422, file: !553, line: 14, type: !103)
!7425 = !DILocation(line: 0, scope: !7422)
!7426 = !DILocation(line: 18, column: 2, scope: !7422)
!7427 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !553, file: !553, line: 28, type: !7428, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7430)
!7428 = !DISubroutineType(types: !7429)
!7429 = !{!103, !103, !549}
!7430 = !{!7431, !7432}
!7431 = !DILocalVariable(name: "c", arg: 1, scope: !7427, file: !553, line: 28, type: !103)
!7432 = !DILocalVariable(name: "stream", arg: 2, scope: !7427, file: !553, line: 28, type: !549)
!7433 = !DILocation(line: 0, scope: !7427)
!7434 = !DILocation(line: 30, column: 27, scope: !7427)
!7435 = !DILocation(line: 30, column: 50, scope: !7427)
!7436 = !DILocation(line: 30, column: 9, scope: !7427)
!7437 = !DILocation(line: 30, column: 2, scope: !7427)
!7438 = distinct !DISubprogram(name: "fputc", scope: !553, file: !553, line: 41, type: !7428, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7439)
!7439 = !{!7440, !7441}
!7440 = !DILocalVariable(name: "c", arg: 1, scope: !7438, file: !553, line: 41, type: !103)
!7441 = !DILocalVariable(name: "stream", arg: 2, scope: !7438, file: !553, line: 41, type: !549)
!7442 = !DILocation(line: 0, scope: !7438)
!7443 = !DILocation(line: 43, column: 9, scope: !7438)
!7444 = !DILocation(line: 43, column: 2, scope: !7438)
!7445 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7446, file: !7446, line: 72, type: !7428, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7447)
!7446 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!7447 = !{!7448, !7449}
!7448 = !DILocalVariable(name: "c", arg: 1, scope: !7445, file: !7446, line: 72, type: !103)
!7449 = !DILocalVariable(name: "stream", arg: 2, scope: !7445, file: !7446, line: 72, type: !549)
!7450 = !DILocation(line: 0, scope: !7445)
!7451 = !DILocation(line: 81, column: 2, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7445, file: !7446, line: 81, column: 2)
!7453 = !{i64 2154903511}
!7454 = !DILocation(line: 82, column: 9, scope: !7445)
!7455 = !DILocation(line: 82, column: 2, scope: !7445)
!7456 = distinct !DISubprogram(name: "fputs", scope: !553, file: !553, line: 46, type: !7457, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7460)
!7457 = !DISubroutineType(types: !7458)
!7458 = !{!103, !7052, !7459}
!7459 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !549)
!7460 = !{!7461, !7462, !7463, !7464}
!7461 = !DILocalVariable(name: "s", arg: 1, scope: !7456, file: !553, line: 46, type: !7052)
!7462 = !DILocalVariable(name: "stream", arg: 2, scope: !7456, file: !553, line: 46, type: !7459)
!7463 = !DILocalVariable(name: "len", scope: !7456, file: !553, line: 48, type: !103)
!7464 = !DILocalVariable(name: "ret", scope: !7456, file: !553, line: 49, type: !103)
!7465 = !DILocation(line: 0, scope: !7456)
!7466 = !DILocation(line: 48, column: 12, scope: !7456)
!7467 = !DILocation(line: 51, column: 8, scope: !7456)
!7468 = !DILocation(line: 53, column: 13, scope: !7456)
!7469 = !DILocation(line: 53, column: 9, scope: !7456)
!7470 = !DILocation(line: 53, column: 2, scope: !7456)
!7471 = distinct !DISubprogram(name: "fwrite", scope: !553, file: !553, line: 99, type: !7472, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7474)
!7472 = !DISubroutineType(types: !7473)
!7473 = !{!204, !7353, !204, !204, !7459}
!7474 = !{!7475, !7476, !7477, !7478}
!7475 = !DILocalVariable(name: "ptr", arg: 1, scope: !7471, file: !553, line: 99, type: !7353)
!7476 = !DILocalVariable(name: "size", arg: 2, scope: !7471, file: !553, line: 99, type: !204)
!7477 = !DILocalVariable(name: "nitems", arg: 3, scope: !7471, file: !553, line: 99, type: !204)
!7478 = !DILocalVariable(name: "stream", arg: 4, scope: !7471, file: !553, line: 100, type: !7459)
!7479 = !DILocation(line: 0, scope: !7471)
!7480 = !DILocation(line: 102, column: 9, scope: !7471)
!7481 = !DILocation(line: 102, column: 2, scope: !7471)
!7482 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7446, file: !7446, line: 96, type: !7472, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7483)
!7483 = !{!7484, !7485, !7486, !7487}
!7484 = !DILocalVariable(name: "ptr", arg: 1, scope: !7482, file: !7446, line: 96, type: !7353)
!7485 = !DILocalVariable(name: "size", arg: 2, scope: !7482, file: !7446, line: 96, type: !204)
!7486 = !DILocalVariable(name: "nitems", arg: 3, scope: !7482, file: !7446, line: 96, type: !204)
!7487 = !DILocalVariable(name: "stream", arg: 4, scope: !7482, file: !7446, line: 96, type: !7459)
!7488 = !DILocation(line: 0, scope: !7482)
!7489 = !DILocation(line: 107, column: 2, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7482, file: !7446, line: 107, column: 2)
!7491 = !{i64 2154903615}
!7492 = !DILocation(line: 108, column: 9, scope: !7482)
!7493 = !DILocation(line: 108, column: 2, scope: !7482)
!7494 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !553, file: !553, line: 56, type: !7472, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7495)
!7495 = !{!7496, !7497, !7498, !7499, !7500, !7501, !7502, !7503}
!7496 = !DILocalVariable(name: "ptr", arg: 1, scope: !7494, file: !553, line: 56, type: !7353)
!7497 = !DILocalVariable(name: "size", arg: 2, scope: !7494, file: !553, line: 56, type: !204)
!7498 = !DILocalVariable(name: "nitems", arg: 3, scope: !7494, file: !553, line: 57, type: !204)
!7499 = !DILocalVariable(name: "stream", arg: 4, scope: !7494, file: !553, line: 57, type: !7459)
!7500 = !DILocalVariable(name: "i", scope: !7494, file: !553, line: 59, type: !204)
!7501 = !DILocalVariable(name: "j", scope: !7494, file: !553, line: 60, type: !204)
!7502 = !DILocalVariable(name: "p", scope: !7494, file: !553, line: 61, type: !2910)
!7503 = !DILabel(scope: !7494, name: "done", file: !553, line: 82)
!7504 = !DILocation(line: 0, scope: !7494)
!7505 = !DILocation(line: 63, column: 14, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7494, file: !553, line: 63, column: 6)
!7507 = !DILocation(line: 63, column: 24, scope: !7506)
!7508 = !DILocation(line: 72, column: 3, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7494, file: !553, line: 70, column: 5)
!7510 = !DILocation(line: 0, scope: !7509)
!7511 = !DILocation(line: 73, column: 8, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7513, file: !553, line: 73, column: 8)
!7513 = distinct !DILexicalBlock(scope: !7509, file: !553, line: 72, column: 6)
!7514 = !DILocation(line: 73, column: 29, scope: !7512)
!7515 = !DILocation(line: 73, column: 27, scope: !7512)
!7516 = !DILocation(line: 73, column: 21, scope: !7512)
!7517 = !DILocation(line: 73, column: 33, scope: !7512)
!7518 = !DILocation(line: 73, column: 8, scope: !7513)
!7519 = !DILocation(line: 76, column: 5, scope: !7513)
!7520 = !DILocation(line: 77, column: 14, scope: !7509)
!7521 = !DILocation(line: 77, column: 3, scope: !7513)
!7522 = distinct !{!7522, !7508, !7523}
!7523 = !DILocation(line: 77, column: 17, scope: !7509)
!7524 = !DILocation(line: 79, column: 4, scope: !7509)
!7525 = !DILocation(line: 80, column: 13, scope: !7494)
!7526 = !DILocation(line: 80, column: 2, scope: !7509)
!7527 = distinct !{!7527, !7528, !7529}
!7528 = !DILocation(line: 70, column: 2, scope: !7494)
!7529 = !DILocation(line: 80, column: 16, scope: !7494)
!7530 = !DILocation(line: 82, column: 1, scope: !7494)
!7531 = !DILocation(line: 83, column: 17, scope: !7494)
!7532 = !DILocation(line: 83, column: 2, scope: !7494)
!7533 = !DILocation(line: 84, column: 1, scope: !7494)
!7534 = distinct !DISubprogram(name: "puts", scope: !553, file: !553, line: 106, type: !7535, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7537)
!7535 = !DISubroutineType(types: !7536)
!7536 = !{!103, !144}
!7537 = !{!7538}
!7538 = !DILocalVariable(name: "s", arg: 1, scope: !7534, file: !553, line: 106, type: !144)
!7539 = !DILocation(line: 0, scope: !7534)
!7540 = !DILocation(line: 108, column: 6, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7534, file: !553, line: 108, column: 6)
!7542 = !DILocation(line: 108, column: 23, scope: !7541)
!7543 = !DILocation(line: 108, column: 6, scope: !7534)
!7544 = !DILocation(line: 112, column: 9, scope: !7534)
!7545 = !DILocation(line: 112, column: 29, scope: !7534)
!7546 = !DILocation(line: 112, column: 2, scope: !7534)
!7547 = !DILocation(line: 113, column: 1, scope: !7534)
!7548 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !686, file: !686, line: 368, type: !739, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7549)
!7549 = !{!7550}
!7550 = !DILocalVariable(name: "dev", arg: 1, scope: !7548, file: !686, line: 368, type: !715)
!7551 = !DILocation(line: 0, scope: !7548)
!7552 = !DILocation(line: 370, column: 2, scope: !7548)
!7553 = !DILocation(line: 371, column: 1, scope: !7548)
!7554 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !686, file: !686, line: 243, type: !7555, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7557)
!7555 = !DISubroutineType(types: !7556)
!7556 = !{null, !103, !103, !715}
!7557 = !{!7558, !7559, !7560, !7561, !7563}
!7558 = !DILocalVariable(name: "min", arg: 1, scope: !7554, file: !686, line: 243, type: !103)
!7559 = !DILocalVariable(name: "max", arg: 2, scope: !7554, file: !686, line: 243, type: !103)
!7560 = !DILocalVariable(name: "dev", arg: 3, scope: !7554, file: !686, line: 243, type: !715)
!7561 = !DILocalVariable(name: "data", scope: !7554, file: !686, line: 245, type: !7562)
!7562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 32)
!7563 = !DILocalVariable(name: "line", scope: !7554, file: !686, line: 246, type: !103)
!7564 = !DILocation(line: 0, scope: !7554)
!7565 = !DILocation(line: 245, column: 38, scope: !7554)
!7566 = !DILocation(line: 249, column: 24, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7568, file: !686, line: 249, column: 2)
!7568 = distinct !DILexicalBlock(scope: !7554, file: !686, line: 249, column: 2)
!7569 = !DILocation(line: 249, column: 2, scope: !7568)
!7570 = !DILocation(line: 251, column: 7, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7572, file: !686, line: 251, column: 7)
!7572 = distinct !DILexicalBlock(scope: !7567, file: !686, line: 249, column: 39)
!7573 = !DILocation(line: 251, column: 7, scope: !7572)
!7574 = !DILocation(line: 253, column: 4, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7571, file: !686, line: 251, column: 36)
!7576 = !DILocation(line: 256, column: 24, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7575, file: !686, line: 256, column: 8)
!7578 = !DILocation(line: 256, column: 9, scope: !7577)
!7579 = !DILocation(line: 256, column: 8, scope: !7575)
!7580 = !DILocation(line: 260, column: 43, scope: !7575)
!7581 = !DILocation(line: 260, column: 4, scope: !7575)
!7582 = !DILocation(line: 261, column: 3, scope: !7575)
!7583 = !DILocation(line: 249, column: 35, scope: !7567)
!7584 = distinct !{!7584, !7569, !7585}
!7585 = !DILocation(line: 262, column: 2, scope: !7568)
!7586 = !DILocation(line: 263, column: 1, scope: !7554)
!7587 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !686, file: !686, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7588)
!7588 = !{!7589}
!7589 = !DILocalVariable(name: "line", arg: 1, scope: !7587, file: !686, line: 158, type: !103)
!7590 = !DILocation(line: 0, scope: !7587)
!7591 = !DILocation(line: 170, column: 38, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7593, file: !686, line: 160, column: 17)
!7593 = distinct !DILexicalBlock(scope: !7587, file: !686, line: 160, column: 6)
!7594 = !DILocation(line: 170, column: 10, scope: !7592)
!7595 = !DILocation(line: 176, column: 1, scope: !7587)
!7596 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !686, file: !686, line: 183, type: !7597, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7599)
!7597 = !DISubroutineType(types: !7598)
!7598 = !{null, !103}
!7599 = !{!7600}
!7600 = !DILocalVariable(name: "line", arg: 1, scope: !7596, file: !686, line: 183, type: !103)
!7601 = !DILocation(line: 0, scope: !7596)
!7602 = !DILocation(line: 195, column: 28, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7604, file: !686, line: 185, column: 17)
!7604 = distinct !DILexicalBlock(scope: !7596, file: !686, line: 185, column: 6)
!7605 = !DILocation(line: 195, column: 3, scope: !7603)
!7606 = !DILocation(line: 200, column: 1, scope: !7596)
!7607 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7608, file: !7608, line: 910, type: !6044, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7609)
!7608 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7609 = !{!7610}
!7610 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7607, file: !7608, line: 910, type: !121)
!7611 = !DILocation(line: 0, scope: !7607)
!7612 = !DILocation(line: 912, column: 3, scope: !7607)
!7613 = !DILocation(line: 913, column: 1, scope: !7607)
!7614 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7608, file: !7608, line: 834, type: !6960, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7615)
!7615 = !{!7616}
!7616 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7614, file: !7608, line: 834, type: !121)
!7617 = !DILocation(line: 0, scope: !7614)
!7618 = !DILocation(line: 836, column: 11, scope: !7614)
!7619 = !DILocation(line: 836, column: 40, scope: !7614)
!7620 = !DILocation(line: 836, column: 3, scope: !7614)
!7621 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !686, file: !686, line: 304, type: !739, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7622)
!7622 = !{!7623}
!7623 = !DILocalVariable(name: "dev", arg: 1, scope: !7621, file: !686, line: 304, type: !715)
!7624 = !DILocation(line: 0, scope: !7621)
!7625 = !DILocation(line: 306, column: 2, scope: !7621)
!7626 = !DILocation(line: 307, column: 1, scope: !7621)
!7627 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !686, file: !686, line: 299, type: !739, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7628)
!7628 = !{!7629}
!7629 = !DILocalVariable(name: "dev", arg: 1, scope: !7627, file: !686, line: 299, type: !715)
!7630 = !DILocation(line: 0, scope: !7627)
!7631 = !DILocation(line: 301, column: 2, scope: !7627)
!7632 = !DILocation(line: 302, column: 1, scope: !7627)
!7633 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !686, file: !686, line: 294, type: !739, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7634)
!7634 = !{!7635}
!7635 = !DILocalVariable(name: "dev", arg: 1, scope: !7633, file: !686, line: 294, type: !715)
!7636 = !DILocation(line: 0, scope: !7633)
!7637 = !DILocation(line: 296, column: 2, scope: !7633)
!7638 = !DILocation(line: 297, column: 1, scope: !7633)
!7639 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !686, file: !686, line: 397, type: !739, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7640)
!7640 = !{!7641}
!7641 = !DILocalVariable(name: "dev", arg: 1, scope: !7639, file: !686, line: 397, type: !715)
!7642 = !DILocation(line: 0, scope: !7639)
!7643 = !DILocation(line: 399, column: 2, scope: !7639)
!7644 = !DILocation(line: 400, column: 1, scope: !7639)
!7645 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !686, file: !686, line: 392, type: !739, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7646)
!7646 = !{!7647}
!7647 = !DILocalVariable(name: "dev", arg: 1, scope: !7645, file: !686, line: 392, type: !715)
!7648 = !DILocation(line: 0, scope: !7645)
!7649 = !DILocation(line: 394, column: 2, scope: !7645)
!7650 = !DILocation(line: 395, column: 1, scope: !7645)
!7651 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !686, file: !686, line: 289, type: !739, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7652)
!7652 = !{!7653}
!7653 = !DILocalVariable(name: "dev", arg: 1, scope: !7651, file: !686, line: 289, type: !715)
!7654 = !DILocation(line: 0, scope: !7651)
!7655 = !DILocation(line: 291, column: 2, scope: !7651)
!7656 = !DILocation(line: 292, column: 1, scope: !7651)
!7657 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !686, file: !686, line: 387, type: !739, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7658)
!7658 = !{!7659}
!7659 = !DILocalVariable(name: "dev", arg: 1, scope: !7657, file: !686, line: 387, type: !715)
!7660 = !DILocation(line: 0, scope: !7657)
!7661 = !DILocation(line: 389, column: 2, scope: !7657)
!7662 = !DILocation(line: 390, column: 1, scope: !7657)
!7663 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !686, file: !686, line: 382, type: !739, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7664)
!7664 = !{!7665}
!7665 = !DILocalVariable(name: "dev", arg: 1, scope: !7663, file: !686, line: 382, type: !715)
!7666 = !DILocation(line: 0, scope: !7663)
!7667 = !DILocation(line: 384, column: 2, scope: !7663)
!7668 = !DILocation(line: 385, column: 1, scope: !7663)
!7669 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !686, file: !686, line: 373, type: !739, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7670)
!7670 = !{!7671}
!7671 = !DILocalVariable(name: "dev", arg: 1, scope: !7669, file: !686, line: 373, type: !715)
!7672 = !DILocation(line: 0, scope: !7669)
!7673 = !DILocation(line: 375, column: 2, scope: !7669)
!7674 = !DILocation(line: 376, column: 1, scope: !7669)
!7675 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !686, file: !686, line: 284, type: !739, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7676)
!7676 = !{!7677}
!7677 = !DILocalVariable(name: "dev", arg: 1, scope: !7675, file: !686, line: 284, type: !715)
!7678 = !DILocation(line: 0, scope: !7675)
!7679 = !DILocation(line: 286, column: 2, scope: !7675)
!7680 = !DILocation(line: 287, column: 1, scope: !7675)
!7681 = distinct !DISubprogram(name: "stm32_exti_init", scope: !686, file: !686, line: 416, type: !713, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7682)
!7682 = !{!7683}
!7683 = !DILocalVariable(name: "dev", arg: 1, scope: !7681, file: !686, line: 416, type: !715)
!7684 = !DILocation(line: 0, scope: !7681)
!7685 = !DILocation(line: 418, column: 2, scope: !7681)
!7686 = !DILocation(line: 420, column: 2, scope: !7681)
!7687 = !DILocation(line: 0, scope: !738)
!7688 = !DILocation(line: 493, column: 2, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !738, file: !686, line: 493, column: 2)
!7690 = !DILocation(line: 497, column: 2, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !738, file: !686, line: 497, column: 2)
!7692 = !DILocation(line: 507, column: 2, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !738, file: !686, line: 507, column: 2)
!7694 = !DILocation(line: 512, column: 2, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !738, file: !686, line: 512, column: 2)
!7696 = !DILocation(line: 516, column: 2, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !738, file: !686, line: 516, column: 2)
!7698 = !DILocation(line: 523, column: 2, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !738, file: !686, line: 523, column: 2)
!7700 = !DILocation(line: 527, column: 2, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !738, file: !686, line: 527, column: 2)
!7702 = !DILocation(line: 581, column: 2, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !738, file: !686, line: 581, column: 2)
!7704 = !DILocation(line: 586, column: 2, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !738, file: !686, line: 586, column: 2)
!7706 = !DILocation(line: 591, column: 2, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !738, file: !686, line: 591, column: 2)
!7708 = !DILocation(line: 595, column: 2, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !738, file: !686, line: 595, column: 2)
!7710 = !DILocation(line: 607, column: 1, scope: !738)
!7711 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !686, file: !686, line: 112, type: !7597, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7712)
!7712 = !{!7713, !7714}
!7713 = !DILocalVariable(name: "line", arg: 1, scope: !7711, file: !686, line: 112, type: !103)
!7714 = !DILocalVariable(name: "irqnum", scope: !7711, file: !686, line: 114, type: !103)
!7715 = !DILocation(line: 0, scope: !7711)
!7716 = !DILocation(line: 121, column: 11, scope: !7711)
!7717 = !DILocation(line: 130, column: 26, scope: !7711)
!7718 = !DILocation(line: 130, column: 2, scope: !7711)
!7719 = !DILocation(line: 134, column: 2, scope: !7711)
!7720 = !DILocation(line: 135, column: 1, scope: !7711)
!7721 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7608, file: !7608, line: 268, type: !6044, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7722)
!7722 = !{!7723}
!7723 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7721, file: !7608, line: 268, type: !121)
!7724 = !DILocation(line: 0, scope: !7721)
!7725 = !DILocation(line: 270, column: 3, scope: !7721)
!7726 = !DILocation(line: 271, column: 1, scope: !7721)
!7727 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !686, file: !686, line: 137, type: !7597, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7728)
!7728 = !{!7729}
!7729 = !DILocalVariable(name: "line", arg: 1, scope: !7727, file: !686, line: 137, type: !103)
!7730 = !DILocation(line: 0, scope: !7727)
!7731 = !DILocation(line: 141, column: 11, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7727, file: !686, line: 141, column: 6)
!7733 = !DILocation(line: 141, column: 6, scope: !7727)
!7734 = !DILocation(line: 145, column: 28, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7732, file: !686, line: 141, column: 17)
!7736 = !DILocation(line: 145, column: 3, scope: !7735)
!7737 = !DILocation(line: 147, column: 2, scope: !7735)
!7738 = !DILocation(line: 151, column: 1, scope: !7727)
!7739 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7608, file: !7608, line: 309, type: !6044, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7740)
!7740 = !{!7741}
!7741 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7739, file: !7608, line: 309, type: !121)
!7742 = !DILocation(line: 0, scope: !7739)
!7743 = !DILocation(line: 311, column: 3, scope: !7739)
!7744 = !DILocation(line: 312, column: 1, scope: !7739)
!7745 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !686, file: !686, line: 202, type: !7746, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7748)
!7746 = !DISubroutineType(types: !7747)
!7747 = !{null, !103, !103}
!7748 = !{!7749, !7750}
!7749 = !DILocalVariable(name: "line", arg: 1, scope: !7745, file: !686, line: 202, type: !103)
!7750 = !DILocalVariable(name: "trigger", arg: 2, scope: !7745, file: !686, line: 202, type: !103)
!7751 = !DILocation(line: 0, scope: !7745)
!7752 = !DILocation(line: 211, column: 2, scope: !7745)
!7753 = !DILocation(line: 213, column: 36, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7745, file: !686, line: 211, column: 19)
!7755 = !DILocation(line: 213, column: 3, scope: !7754)
!7756 = !DILocation(line: 214, column: 3, scope: !7754)
!7757 = !DILocation(line: 215, column: 3, scope: !7754)
!7758 = !DILocation(line: 217, column: 35, scope: !7754)
!7759 = !DILocation(line: 217, column: 3, scope: !7754)
!7760 = !DILocation(line: 218, column: 3, scope: !7754)
!7761 = !DILocation(line: 219, column: 3, scope: !7754)
!7762 = !DILocation(line: 221, column: 36, scope: !7754)
!7763 = !DILocation(line: 221, column: 3, scope: !7754)
!7764 = !DILocation(line: 222, column: 3, scope: !7754)
!7765 = !DILocation(line: 223, column: 3, scope: !7754)
!7766 = !DILocation(line: 225, column: 35, scope: !7754)
!7767 = !DILocation(line: 225, column: 3, scope: !7754)
!7768 = !DILocation(line: 226, column: 3, scope: !7754)
!7769 = !DILocation(line: 227, column: 3, scope: !7754)
!7770 = !DILocation(line: 232, column: 1, scope: !7745)
!7771 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7608, file: !7608, line: 573, type: !6044, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7772)
!7772 = !{!7773}
!7773 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7771, file: !7608, line: 573, type: !121)
!7774 = !DILocation(line: 0, scope: !7771)
!7775 = !DILocation(line: 575, column: 3, scope: !7771)
!7776 = !DILocation(line: 577, column: 1, scope: !7771)
!7777 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7608, file: !7608, line: 703, type: !6044, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7778)
!7778 = !{!7779}
!7779 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7777, file: !7608, line: 703, type: !121)
!7780 = !DILocation(line: 0, scope: !7777)
!7781 = !DILocation(line: 705, column: 3, scope: !7777)
!7782 = !DILocation(line: 706, column: 1, scope: !7777)
!7783 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7608, file: !7608, line: 529, type: !6044, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7784)
!7784 = !{!7785}
!7785 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7783, file: !7608, line: 529, type: !121)
!7786 = !DILocation(line: 0, scope: !7783)
!7787 = !DILocation(line: 531, column: 3, scope: !7783)
!7788 = !DILocation(line: 533, column: 1, scope: !7783)
!7789 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7608, file: !7608, line: 661, type: !6044, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7790)
!7790 = !{!7791}
!7791 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7789, file: !7608, line: 661, type: !121)
!7792 = !DILocation(line: 0, scope: !7789)
!7793 = !DILocation(line: 663, column: 3, scope: !7789)
!7794 = !DILocation(line: 664, column: 1, scope: !7789)
!7795 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !686, file: !686, line: 433, type: !7796, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7798)
!7796 = !DISubroutineType(types: !7797)
!7797 = !{!103, !103, !726, !102}
!7798 = !{!7799, !7800, !7801, !7802, !7804}
!7799 = !DILocalVariable(name: "line", arg: 1, scope: !7795, file: !686, line: 433, type: !103)
!7800 = !DILocalVariable(name: "cb", arg: 2, scope: !7795, file: !686, line: 433, type: !726)
!7801 = !DILocalVariable(name: "arg", arg: 3, scope: !7795, file: !686, line: 433, type: !102)
!7802 = !DILocalVariable(name: "dev", scope: !7795, file: !686, line: 435, type: !7803)
!7803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !715)
!7804 = !DILocalVariable(name: "data", scope: !7795, file: !686, line: 436, type: !7562)
!7805 = !DILocation(line: 0, scope: !7795)
!7806 = !DILocation(line: 438, column: 21, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7795, file: !686, line: 438, column: 6)
!7808 = !DILocation(line: 438, column: 6, scope: !7807)
!7809 = !DILocation(line: 438, column: 6, scope: !7795)
!7810 = !DILocation(line: 442, column: 20, scope: !7795)
!7811 = !DILocation(line: 443, column: 17, scope: !7795)
!7812 = !DILocation(line: 443, column: 22, scope: !7795)
!7813 = !DILocation(line: 445, column: 2, scope: !7795)
!7814 = !DILocation(line: 446, column: 1, scope: !7795)
!7815 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !686, file: !686, line: 448, type: !7597, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7816)
!7816 = !{!7817, !7818, !7819}
!7817 = !DILocalVariable(name: "line", arg: 1, scope: !7815, file: !686, line: 448, type: !103)
!7818 = !DILocalVariable(name: "dev", scope: !7815, file: !686, line: 450, type: !7803)
!7819 = !DILocalVariable(name: "data", scope: !7815, file: !686, line: 451, type: !7562)
!7820 = !DILocation(line: 0, scope: !7815)
!7821 = !DILocation(line: 453, column: 17, scope: !7815)
!7822 = !DILocation(line: 453, column: 20, scope: !7815)
!7823 = !DILocation(line: 454, column: 17, scope: !7815)
!7824 = !DILocation(line: 454, column: 22, scope: !7815)
!7825 = !DILocation(line: 455, column: 1, scope: !7815)
!7826 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !870, file: !870, line: 183, type: !908, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !7827)
!7827 = !{!7828, !7829, !7830, !7831, !7832}
!7828 = !DILocalVariable(name: "dev", arg: 1, scope: !7826, file: !870, line: 183, type: !899)
!7829 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7826, file: !870, line: 184, type: !910)
!7830 = !DILocalVariable(name: "pclken", scope: !7826, file: !870, line: 186, type: !860)
!7831 = !DILocalVariable(name: "reg", scope: !7826, file: !870, line: 187, type: !1606)
!7832 = !DILocalVariable(name: "reg_val", scope: !7826, file: !870, line: 188, type: !121)
!7833 = !DILocation(line: 0, scope: !7826)
!7834 = !DILocation(line: 192, column: 6, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7826, file: !870, line: 192, column: 6)
!7836 = !DILocation(line: 192, column: 6, scope: !7826)
!7837 = !DILocation(line: 197, column: 52, scope: !7826)
!7838 = !DILocation(line: 197, column: 8, scope: !7826)
!7839 = !DILocation(line: 198, column: 12, scope: !7826)
!7840 = !DILocation(line: 199, column: 21, scope: !7826)
!7841 = !DILocation(line: 199, column: 10, scope: !7826)
!7842 = !DILocation(line: 200, column: 7, scope: !7826)
!7843 = !DILocation(line: 202, column: 2, scope: !7826)
!7844 = !DILocation(line: 203, column: 1, scope: !7826)
!7845 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !870, file: !870, line: 205, type: !908, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !7846)
!7846 = !{!7847, !7848, !7849, !7850, !7851}
!7847 = !DILocalVariable(name: "dev", arg: 1, scope: !7845, file: !870, line: 205, type: !899)
!7848 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7845, file: !870, line: 206, type: !910)
!7849 = !DILocalVariable(name: "pclken", scope: !7845, file: !870, line: 208, type: !860)
!7850 = !DILocalVariable(name: "reg", scope: !7845, file: !870, line: 209, type: !1606)
!7851 = !DILocalVariable(name: "reg_val", scope: !7845, file: !870, line: 210, type: !121)
!7852 = !DILocation(line: 0, scope: !7845)
!7853 = !DILocation(line: 214, column: 6, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7845, file: !870, line: 214, column: 6)
!7855 = !DILocation(line: 214, column: 6, scope: !7845)
!7856 = !DILocation(line: 219, column: 52, scope: !7845)
!7857 = !DILocation(line: 219, column: 8, scope: !7845)
!7858 = !DILocation(line: 220, column: 12, scope: !7845)
!7859 = !DILocation(line: 221, column: 22, scope: !7845)
!7860 = !DILocation(line: 221, column: 13, scope: !7845)
!7861 = !DILocation(line: 221, column: 10, scope: !7845)
!7862 = !DILocation(line: 222, column: 7, scope: !7845)
!7863 = !DILocation(line: 224, column: 2, scope: !7845)
!7864 = !DILocation(line: 225, column: 1, scope: !7845)
!7865 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !870, file: !870, line: 262, type: !924, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !7866)
!7866 = !{!7867, !7868, !7869, !7870, !7871, !7872, !7873, !7874}
!7867 = !DILocalVariable(name: "clock", arg: 1, scope: !7865, file: !870, line: 262, type: !899)
!7868 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7865, file: !870, line: 263, type: !910)
!7869 = !DILocalVariable(name: "rate", arg: 3, scope: !7865, file: !870, line: 264, type: !866)
!7870 = !DILocalVariable(name: "pclken", scope: !7865, file: !870, line: 266, type: !860)
!7871 = !DILocalVariable(name: "ahb_clock", scope: !7865, file: !870, line: 273, type: !121)
!7872 = !DILocalVariable(name: "apb1_clock", scope: !7865, file: !870, line: 274, type: !121)
!7873 = !DILocalVariable(name: "apb2_clock", scope: !7865, file: !870, line: 276, type: !121)
!7874 = !DILocalVariable(name: "ahb3_clock", scope: !7865, file: !870, line: 286, type: !121)
!7875 = !DILocation(line: 0, scope: !7865)
!7876 = !DILocation(line: 273, column: 23, scope: !7865)
!7877 = !DILocation(line: 299, column: 18, scope: !7865)
!7878 = !DILocation(line: 299, column: 2, scope: !7865)
!7879 = !DILocation(line: 274, column: 24, scope: !7865)
!7880 = !DILocation(line: 319, column: 3, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7865, file: !870, line: 299, column: 23)
!7882 = !DILocation(line: 276, column: 24, scope: !7865)
!7883 = !DILocation(line: 323, column: 3, scope: !7881)
!7884 = !DILocation(line: 346, column: 33, scope: !7881)
!7885 = !DILocation(line: 346, column: 11, scope: !7881)
!7886 = !DILocation(line: 350, column: 3, scope: !7881)
!7887 = !DILocation(line: 354, column: 33, scope: !7881)
!7888 = !DILocation(line: 354, column: 11, scope: !7881)
!7889 = !DILocation(line: 358, column: 3, scope: !7881)
!7890 = !DILocation(line: 374, column: 3, scope: !7881)
!7891 = !DILocation(line: 379, column: 3, scope: !7881)
!7892 = !DILocation(line: 0, scope: !7881)
!7893 = !DILocation(line: 396, column: 1, scope: !7865)
!7894 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !870, file: !870, line: 227, type: !940, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !7895)
!7895 = !{!7896, !7897, !7898, !7899, !7900, !7901, !7902, !7903}
!7896 = !DILocalVariable(name: "dev", arg: 1, scope: !7894, file: !870, line: 227, type: !899)
!7897 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7894, file: !870, line: 228, type: !910)
!7898 = !DILocalVariable(name: "data", arg: 3, scope: !7894, file: !870, line: 229, type: !102)
!7899 = !DILocalVariable(name: "pclken", scope: !7894, file: !870, line: 233, type: !860)
!7900 = !DILocalVariable(name: "reg", scope: !7894, file: !870, line: 234, type: !1606)
!7901 = !DILocalVariable(name: "reg_val", scope: !7894, file: !870, line: 235, type: !121)
!7902 = !DILocalVariable(name: "dt_val", scope: !7894, file: !870, line: 235, type: !121)
!7903 = !DILocalVariable(name: "err", scope: !7894, file: !870, line: 236, type: !103)
!7904 = !DILocation(line: 0, scope: !7894)
!7905 = !DILocation(line: 241, column: 30, scope: !7894)
!7906 = !DILocation(line: 241, column: 8, scope: !7894)
!7907 = !DILocation(line: 242, column: 10, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7894, file: !870, line: 242, column: 6)
!7909 = !DILocation(line: 242, column: 6, scope: !7894)
!7910 = !DILocation(line: 247, column: 11, scope: !7894)
!7911 = !DILocation(line: 248, column: 6, scope: !7894)
!7912 = !DILocation(line: 247, column: 44, scope: !7894)
!7913 = !DILocation(line: 250, column: 6, scope: !7894)
!7914 = !DILocation(line: 249, column: 52, scope: !7894)
!7915 = !DILocation(line: 249, column: 8, scope: !7894)
!7916 = !DILocation(line: 251, column: 12, scope: !7894)
!7917 = !DILocation(line: 252, column: 10, scope: !7894)
!7918 = !DILocation(line: 253, column: 7, scope: !7894)
!7919 = !DILocation(line: 255, column: 2, scope: !7894)
!7920 = !DILocation(line: 260, column: 1, scope: !7894)
!7921 = distinct !DISubprogram(name: "enabled_clock", scope: !870, file: !870, line: 100, type: !7922, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !7924)
!7922 = !DISubroutineType(types: !7923)
!7923 = !{!103, !121}
!7924 = !{!7925, !7926}
!7925 = !DILocalVariable(name: "src_clk", arg: 1, scope: !7921, file: !870, line: 100, type: !121)
!7926 = !DILocalVariable(name: "r", scope: !7921, file: !870, line: 102, type: !103)
!7927 = !DILocation(line: 0, scope: !7921)
!7928 = !DILocation(line: 104, column: 2, scope: !7921)
!7929 = !DILocation(line: 180, column: 2, scope: !7921)
!7930 = !DILocation(line: 181, column: 1, scope: !7921)
!7931 = distinct !DISubprogram(name: "get_bus_clock", scope: !870, file: !870, line: 79, type: !7932, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !7934)
!7932 = !DISubroutineType(types: !7933)
!7933 = !{!121, !121, !121}
!7934 = !{!7935, !7936}
!7935 = !DILocalVariable(name: "clock", arg: 1, scope: !7931, file: !870, line: 79, type: !121)
!7936 = !DILocalVariable(name: "prescaler", arg: 2, scope: !7931, file: !870, line: 79, type: !121)
!7937 = !DILocation(line: 0, scope: !7931)
!7938 = !DILocation(line: 81, column: 15, scope: !7931)
!7939 = !DILocation(line: 81, column: 2, scope: !7931)
!7940 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !870, file: !870, line: 68, type: !7941, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !7943)
!7941 = !DISubroutineType(types: !7942)
!7942 = !{!121, !121, !103, !103, !103}
!7943 = !{!7944, !7945, !7946, !7947}
!7944 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !7940, file: !870, line: 68, type: !121)
!7945 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !7940, file: !870, line: 69, type: !103)
!7946 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !7940, file: !870, line: 70, type: !103)
!7947 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !7940, file: !870, line: 71, type: !103)
!7948 = !DILocation(line: 0, scope: !7940)
!7949 = !DILocation(line: 75, column: 22, scope: !7940)
!7950 = !DILocation(line: 76, column: 13, scope: !7940)
!7951 = !DILocation(line: 75, column: 34, scope: !7940)
!7952 = !DILocation(line: 75, column: 2, scope: !7940)
!7953 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !870, file: !870, line: 641, type: !897, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !7954)
!7954 = !{!7955, !7956, !7957}
!7955 = !DILocalVariable(name: "dev", arg: 1, scope: !7953, file: !870, line: 641, type: !899)
!7956 = !DILocalVariable(name: "old_flash_freq", scope: !7953, file: !870, line: 664, type: !121)
!7957 = !DILocalVariable(name: "new_flash_freq", scope: !7953, file: !870, line: 665, type: !121)
!7958 = !DILocation(line: 0, scope: !7953)
!7959 = !DILocation(line: 646, column: 2, scope: !7953)
!7960 = !DILocation(line: 667, column: 19, scope: !7953)
!7961 = !DILocation(line: 674, column: 21, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7953, file: !870, line: 674, column: 6)
!7963 = !DILocation(line: 674, column: 6, scope: !7953)
!7964 = !DILocation(line: 675, column: 3, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7962, file: !870, line: 674, column: 59)
!7966 = !DILocation(line: 676, column: 2, scope: !7965)
!7967 = !DILocation(line: 680, column: 2, scope: !7953)
!7968 = !DILocation(line: 683, column: 2, scope: !7953)
!7969 = !DILocation(line: 690, column: 3, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7971, file: !870, line: 689, column: 9)
!7971 = distinct !DILexicalBlock(scope: !7953, file: !870, line: 685, column: 6)
!7972 = !DILocation(line: 695, column: 2, scope: !7953)
!7973 = !DILocation(line: 696, column: 2, scope: !7953)
!7974 = !DILocation(line: 696, column: 9, scope: !7953)
!7975 = !DILocation(line: 696, column: 34, scope: !7953)
!7976 = distinct !{!7976, !7973, !7977}
!7977 = !DILocation(line: 697, column: 2, scope: !7953)
!7978 = !DILocation(line: 720, column: 21, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7953, file: !870, line: 720, column: 6)
!7980 = !DILocation(line: 720, column: 6, scope: !7953)
!7981 = !DILocation(line: 721, column: 3, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7979, file: !870, line: 720, column: 60)
!7983 = !DILocation(line: 722, column: 2, scope: !7982)
!7984 = !DILocation(line: 725, column: 18, scope: !7953)
!7985 = !DILocation(line: 728, column: 2, scope: !7953)
!7986 = !DILocation(line: 730, column: 2, scope: !7953)
!7987 = !DILocation(line: 745, column: 2, scope: !7953)
!7988 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !7989, file: !7989, line: 3275, type: !6034, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!7989 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7990 = !DILocation(line: 3277, column: 21, scope: !7988)
!7991 = !DILocation(line: 3277, column: 3, scope: !7988)
!7992 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !870, file: !870, line: 507, type: !3181, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!7993 = !DILocation(line: 516, column: 4, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7995, file: !870, line: 515, column: 10)
!7995 = distinct !DILexicalBlock(scope: !7996, file: !870, line: 513, column: 7)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !870, line: 510, column: 37)
!7997 = distinct !DILexicalBlock(scope: !7992, file: !870, line: 510, column: 6)
!7998 = !DILocation(line: 526, column: 3, scope: !7996)
!7999 = !DILocation(line: 527, column: 3, scope: !7996)
!8000 = !DILocation(line: 527, column: 10, scope: !7996)
!8001 = !DILocation(line: 527, column: 31, scope: !7996)
!8002 = distinct !{!8002, !7999, !8003}
!8003 = !DILocation(line: 529, column: 3, scope: !7996)
!8004 = !DILocation(line: 583, column: 3, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !870, line: 577, column: 37)
!8006 = distinct !DILexicalBlock(scope: !7992, file: !870, line: 577, column: 6)
!8007 = !DILocation(line: 584, column: 3, scope: !8005)
!8008 = !DILocation(line: 584, column: 10, scope: !8005)
!8009 = !DILocation(line: 584, column: 31, scope: !8005)
!8010 = distinct !{!8010, !8007, !8011}
!8011 = !DILocation(line: 585, column: 3, scope: !8005)
!8012 = !DILocation(line: 627, column: 1, scope: !7992)
!8013 = distinct !DISubprogram(name: "set_up_plls", scope: !870, file: !870, line: 448, type: !3181, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!8014 = !DILocation(line: 460, column: 6, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8013, file: !870, line: 460, column: 6)
!8016 = !DILocation(line: 460, column: 31, scope: !8015)
!8017 = !DILocation(line: 460, column: 6, scope: !8013)
!8018 = !DILocation(line: 461, column: 3, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8015, file: !870, line: 460, column: 67)
!8020 = !DILocation(line: 462, column: 3, scope: !8019)
!8021 = !DILocation(line: 463, column: 2, scope: !8019)
!8022 = !DILocation(line: 464, column: 2, scope: !8013)
!8023 = !DILocation(line: 488, column: 2, scope: !8013)
!8024 = !DILocation(line: 492, column: 2, scope: !8013)
!8025 = !DILocation(line: 496, column: 2, scope: !8013)
!8026 = !DILocation(line: 499, column: 2, scope: !8013)
!8027 = !DILocation(line: 500, column: 2, scope: !8013)
!8028 = !DILocation(line: 500, column: 9, scope: !8013)
!8029 = !DILocation(line: 500, column: 30, scope: !8013)
!8030 = distinct !{!8030, !8027, !8031}
!8031 = !DILocation(line: 502, column: 2, scope: !8013)
!8032 = !DILocation(line: 505, column: 1, scope: !8013)
!8033 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7989, file: !7989, line: 3224, type: !6044, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !8034)
!8034 = !{!8035}
!8035 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8033, file: !7989, line: 3224, type: !121)
!8036 = !DILocation(line: 0, scope: !8033)
!8037 = !DILocation(line: 3226, column: 3, scope: !8033)
!8038 = !DILocation(line: 3227, column: 1, scope: !8033)
!8039 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7989, file: !7989, line: 3188, type: !6044, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !8040)
!8040 = !{!8041}
!8041 = !DILocalVariable(name: "Source", arg: 1, scope: !8039, file: !7989, line: 3188, type: !121)
!8042 = !DILocation(line: 0, scope: !8039)
!8043 = !DILocation(line: 3190, column: 3, scope: !8039)
!8044 = !DILocation(line: 3191, column: 1, scope: !8039)
!8045 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7989, file: !7989, line: 3204, type: !6034, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!8046 = !DILocation(line: 3206, column: 21, scope: !8045)
!8047 = !DILocation(line: 3206, column: 3, scope: !8045)
!8048 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7989, file: !7989, line: 3240, type: !6044, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !8049)
!8049 = !{!8050}
!8050 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8048, file: !7989, line: 3240, type: !121)
!8051 = !DILocation(line: 0, scope: !8048)
!8052 = !DILocation(line: 3242, column: 3, scope: !8048)
!8053 = !DILocation(line: 3243, column: 1, scope: !8048)
!8054 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7989, file: !7989, line: 3256, type: !6044, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !8055)
!8055 = !{!8056}
!8056 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8054, file: !7989, line: 3256, type: !121)
!8057 = !DILocation(line: 0, scope: !8054)
!8058 = !DILocation(line: 3258, column: 3, scope: !8054)
!8059 = !DILocation(line: 3259, column: 1, scope: !8054)
!8060 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !870, file: !870, line: 409, type: !3181, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!8061 = !DILocation(line: 412, column: 6, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8060, file: !870, line: 412, column: 6)
!8063 = !DILocation(line: 412, column: 27, scope: !8062)
!8064 = !DILocation(line: 412, column: 6, scope: !8060)
!8065 = !DILocation(line: 414, column: 3, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8062, file: !870, line: 412, column: 33)
!8067 = !DILocation(line: 415, column: 3, scope: !8066)
!8068 = !DILocation(line: 415, column: 10, scope: !8066)
!8069 = !DILocation(line: 415, column: 31, scope: !8066)
!8070 = distinct !{!8070, !8067, !8071}
!8071 = !DILocation(line: 417, column: 3, scope: !8066)
!8072 = !DILocation(line: 421, column: 2, scope: !8060)
!8073 = !DILocation(line: 422, column: 2, scope: !8060)
!8074 = !DILocation(line: 422, column: 9, scope: !8060)
!8075 = !DILocation(line: 422, column: 34, scope: !8060)
!8076 = distinct !{!8076, !8073, !8077}
!8077 = !DILocation(line: 423, column: 2, scope: !8060)
!8078 = !DILocation(line: 424, column: 1, scope: !8060)
!8079 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !7989, file: !7989, line: 4195, type: !3181, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!8080 = !DILocation(line: 4197, column: 3, scope: !8079)
!8081 = !DILocation(line: 4198, column: 1, scope: !8079)
!8082 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7989, file: !7989, line: 4184, type: !3181, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!8083 = !DILocation(line: 4186, column: 3, scope: !8082)
!8084 = !DILocation(line: 4187, column: 1, scope: !8082)
!8085 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7989, file: !7989, line: 4205, type: !6034, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!8086 = !DILocation(line: 4207, column: 11, scope: !8085)
!8087 = !DILocation(line: 4207, column: 44, scope: !8085)
!8088 = !DILocation(line: 4207, column: 3, scope: !8085)
!8089 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7989, file: !7989, line: 3007, type: !6034, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!8090 = !DILocation(line: 3009, column: 11, scope: !8089)
!8091 = !DILocation(line: 3009, column: 44, scope: !8089)
!8092 = !DILocation(line: 3009, column: 3, scope: !8089)
!8093 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7989, file: !7989, line: 2987, type: !3181, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!8094 = !DILocation(line: 2989, column: 3, scope: !8093)
!8095 = !DILocation(line: 2990, column: 1, scope: !8093)
!8096 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7989, file: !7989, line: 2939, type: !3181, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!8097 = !DILocation(line: 2941, column: 3, scope: !8096)
!8098 = !DILocation(line: 2942, column: 1, scope: !8096)
!8099 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7989, file: !7989, line: 2949, type: !3181, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!8100 = !DILocation(line: 2951, column: 3, scope: !8099)
!8101 = !DILocation(line: 2952, column: 1, scope: !8099)
!8102 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7989, file: !7989, line: 2969, type: !6034, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!8103 = !DILocation(line: 2971, column: 11, scope: !8102)
!8104 = !DILocation(line: 2971, column: 44, scope: !8102)
!8105 = !DILocation(line: 2971, column: 3, scope: !8102)
!8106 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !7989, file: !7989, line: 3143, type: !3181, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!8107 = !DILocation(line: 3145, column: 3, scope: !8106)
!8108 = !DILocation(line: 3146, column: 1, scope: !8106)
!8109 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !7989, file: !7989, line: 3163, type: !6034, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !809, retainedNodes: !317)
!8110 = !DILocation(line: 3165, column: 11, scope: !8109)
!8111 = !DILocation(line: 3165, column: 46, scope: !8109)
!8112 = !DILocation(line: 3165, column: 3, scope: !8109)
!8113 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8114, file: !8114, line: 40, type: !6034, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !317)
!8114 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8115 = !DILocation(line: 45, column: 3, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8117, file: !8114, line: 44, column: 44)
!8117 = distinct !DILexicalBlock(scope: !8118, file: !8114, line: 44, column: 13)
!8118 = distinct !DILexicalBlock(scope: !8113, file: !8114, line: 42, column: 6)
!8119 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8114, file: !8114, line: 56, type: !3181, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !317)
!8120 = !DILocation(line: 58, column: 2, scope: !8119)
!8121 = !DILocation(line: 62, column: 1, scope: !8119)
!8122 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7989, file: !7989, line: 4304, type: !8123, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !8125)
!8123 = !DISubroutineType(types: !8124)
!8124 = !{null, !121, !121, !121, !121}
!8125 = !{!8126, !8127, !8128, !8129}
!8126 = !DILocalVariable(name: "Source", arg: 1, scope: !8122, file: !7989, line: 4304, type: !121)
!8127 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8122, file: !7989, line: 4304, type: !121)
!8128 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8122, file: !7989, line: 4304, type: !121)
!8129 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8122, file: !7989, line: 4304, type: !121)
!8130 = !DILocation(line: 0, scope: !8122)
!8131 = !DILocation(line: 4306, column: 3, scope: !8122)
!8132 = !DILocation(line: 4308, column: 3, scope: !8122)
!8133 = !DILocation(line: 4312, column: 1, scope: !8122)
!8134 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8114, file: !8114, line: 69, type: !3181, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !317)
!8135 = !DILocation(line: 72, column: 2, scope: !8134)
!8136 = !DILocation(line: 73, column: 1, scope: !8134)
!8137 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8138, file: !8138, line: 1185, type: !6044, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !8139)
!8138 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8139 = !{!8140, !8141}
!8140 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8137, file: !8138, line: 1185, type: !121)
!8141 = !DILocalVariable(name: "tmpreg", scope: !8137, file: !8138, line: 1187, type: !120)
!8142 = !DILocation(line: 0, scope: !8137)
!8143 = !DILocation(line: 1187, column: 3, scope: !8137)
!8144 = !DILocation(line: 1187, column: 17, scope: !8137)
!8145 = !DILocation(line: 1188, column: 3, scope: !8137)
!8146 = !DILocation(line: 1190, column: 12, scope: !8137)
!8147 = !DILocation(line: 1190, column: 10, scope: !8137)
!8148 = !DILocation(line: 1191, column: 9, scope: !8137)
!8149 = !DILocation(line: 1192, column: 1, scope: !8137)
!8150 = distinct !DISubprogram(name: "uart_console_init", scope: !948, file: !948, line: 588, type: !985, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8151)
!8151 = !{!8152}
!8152 = !DILocalVariable(name: "arg", arg: 1, scope: !8150, file: !948, line: 588, type: !964)
!8153 = !DILocation(line: 0, scope: !8150)
!8154 = !DILocation(line: 593, column: 7, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8150, file: !948, line: 593, column: 6)
!8156 = !DILocation(line: 593, column: 6, scope: !8150)
!8157 = !DILocation(line: 597, column: 2, scope: !8150)
!8158 = !DILocation(line: 599, column: 2, scope: !8150)
!8159 = !DILocation(line: 600, column: 1, scope: !8150)
!8160 = distinct !DISubprogram(name: "device_is_ready", scope: !8161, file: !8161, line: 47, type: !8162, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8164)
!8161 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!8162 = !DISubroutineType(types: !8163)
!8163 = !{!157, !964}
!8164 = !{!8165}
!8165 = !DILocalVariable(name: "dev", arg: 1, scope: !8160, file: !8161, line: 47, type: !964)
!8166 = !DILocation(line: 0, scope: !8160)
!8167 = !DILocation(line: 55, column: 2, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8160, file: !8161, line: 55, column: 2)
!8169 = !{i64 2155043525}
!8170 = !DILocation(line: 56, column: 9, scope: !8160)
!8171 = !DILocation(line: 56, column: 2, scope: !8160)
!8172 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !948, file: !948, line: 573, type: !3181, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !317)
!8173 = !DILocation(line: 576, column: 2, scope: !8172)
!8174 = !DILocation(line: 579, column: 2, scope: !8172)
!8175 = !DILocation(line: 581, column: 1, scope: !8172)
!8176 = distinct !DISubprogram(name: "console_out", scope: !948, file: !948, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8177)
!8177 = !{!8178}
!8178 = !DILocalVariable(name: "c", arg: 1, scope: !8176, file: !948, line: 77, type: !103)
!8179 = !DILocation(line: 0, scope: !8176)
!8180 = !DILocation(line: 89, column: 11, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8176, file: !948, line: 89, column: 6)
!8182 = !DILocation(line: 89, column: 6, scope: !8176)
!8183 = !DILocation(line: 90, column: 3, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8181, file: !948, line: 89, column: 17)
!8185 = !DILocation(line: 91, column: 2, scope: !8184)
!8186 = !DILocation(line: 92, column: 34, scope: !8176)
!8187 = !DILocation(line: 92, column: 2, scope: !8176)
!8188 = !DILocation(line: 94, column: 2, scope: !8176)
!8189 = distinct !DISubprogram(name: "uart_poll_out", scope: !8190, file: !8190, line: 95, type: !981, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8191)
!8190 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getline")
!8191 = !{!8192, !8193}
!8192 = !DILocalVariable(name: "dev", arg: 1, scope: !8189, file: !8190, line: 95, type: !964)
!8193 = !DILocalVariable(name: "out_char", arg: 2, scope: !8189, file: !8190, line: 95, type: !155)
!8194 = !DILocation(line: 0, scope: !8189)
!8195 = !DILocation(line: 105, column: 2, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8189, file: !8190, line: 105, column: 2)
!8197 = !{i64 2155126770}
!8198 = !DILocation(line: 106, column: 2, scope: !8189)
!8199 = !DILocation(line: 107, column: 1, scope: !8189)
!8200 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !209, file: !209, line: 574, type: !981, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8201)
!8201 = !{!8202, !8203, !8204}
!8202 = !DILocalVariable(name: "dev", arg: 1, scope: !8200, file: !209, line: 574, type: !964)
!8203 = !DILocalVariable(name: "out_char", arg: 2, scope: !8200, file: !209, line: 575, type: !155)
!8204 = !DILocalVariable(name: "api", scope: !8200, file: !209, line: 577, type: !956)
!8205 = !DILocation(line: 0, scope: !8200)
!8206 = !DILocation(line: 578, column: 40, scope: !8200)
!8207 = !DILocation(line: 580, column: 7, scope: !8200)
!8208 = !DILocation(line: 580, column: 2, scope: !8200)
!8209 = !DILocation(line: 581, column: 1, scope: !8200)
!8210 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8162, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8211)
!8211 = !{!8212}
!8212 = !DILocalVariable(name: "dev", arg: 1, scope: !8210, file: !141, line: 730, type: !964)
!8213 = !DILocation(line: 0, scope: !8210)
!8214 = !DILocation(line: 732, column: 9, scope: !8210)
!8215 = !DILocation(line: 732, column: 2, scope: !8210)
!8216 = distinct !DISubprogram(name: "uart_register_input", scope: !948, file: !948, line: 549, type: !8217, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8219)
!8217 = !DISubroutineType(types: !8218)
!8218 = !{null, !1045, !1045, !1085}
!8219 = !{!8220, !8221, !8222}
!8220 = !DILocalVariable(name: "avail", arg: 1, scope: !8216, file: !948, line: 549, type: !1045)
!8221 = !DILocalVariable(name: "lines", arg: 2, scope: !8216, file: !948, line: 549, type: !1045)
!8222 = !DILocalVariable(name: "completion", arg: 3, scope: !8216, file: !948, line: 550, type: !1085)
!8223 = !DILocation(line: 0, scope: !8216)
!8224 = !DILocation(line: 552, column: 14, scope: !8216)
!8225 = !DILocation(line: 553, column: 14, scope: !8216)
!8226 = !DILocation(line: 554, column: 16, scope: !8216)
!8227 = !DILocation(line: 556, column: 2, scope: !8216)
!8228 = !DILocation(line: 557, column: 1, scope: !8216)
!8229 = distinct !DISubprogram(name: "console_input_init", scope: !948, file: !948, line: 532, type: !3181, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8230)
!8230 = !{!8231}
!8231 = !DILocalVariable(name: "c", scope: !8229, file: !948, line: 534, type: !154)
!8232 = !DILocation(line: 534, column: 2, scope: !8229)
!8233 = !DILocation(line: 536, column: 2, scope: !8229)
!8234 = !DILocation(line: 537, column: 2, scope: !8229)
!8235 = !DILocation(line: 539, column: 2, scope: !8229)
!8236 = !DILocation(line: 542, column: 9, scope: !8229)
!8237 = !DILocation(line: 542, column: 2, scope: !8229)
!8238 = !DILocation(line: 0, scope: !8229)
!8239 = !DILocation(line: 543, column: 3, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8229, file: !948, line: 542, column: 46)
!8241 = distinct !{!8241, !8237, !8242}
!8242 = !DILocation(line: 544, column: 2, scope: !8229)
!8243 = !DILocation(line: 546, column: 2, scope: !8229)
!8244 = !DILocation(line: 547, column: 1, scope: !8229)
!8245 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !8190, file: !8190, line: 265, type: !1015, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8246)
!8246 = !{!8247}
!8247 = !DILocalVariable(name: "dev", arg: 1, scope: !8245, file: !8190, line: 265, type: !964)
!8248 = !DILocation(line: 0, scope: !8245)
!8249 = !DILocation(line: 274, column: 2, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8245, file: !8190, line: 274, column: 2)
!8251 = !{i64 2155127246}
!8252 = !DILocation(line: 275, column: 2, scope: !8245)
!8253 = !DILocation(line: 276, column: 1, scope: !8245)
!8254 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !8190, file: !8190, line: 217, type: !1015, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8255)
!8255 = !{!8256}
!8256 = !DILocalVariable(name: "dev", arg: 1, scope: !8254, file: !8190, line: 217, type: !964)
!8257 = !DILocation(line: 0, scope: !8254)
!8258 = !DILocation(line: 226, column: 2, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8254, file: !8190, line: 226, column: 2)
!8260 = !{i64 2155127110}
!8261 = !DILocation(line: 227, column: 2, scope: !8254)
!8262 = !DILocation(line: 228, column: 1, scope: !8254)
!8263 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !209, file: !209, line: 1190, type: !8264, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8266)
!8264 = !DISubroutineType(types: !8265)
!8265 = !{null, !964, !1031}
!8266 = !{!8267, !8268}
!8267 = !DILocalVariable(name: "dev", arg: 1, scope: !8263, file: !209, line: 1190, type: !964)
!8268 = !DILocalVariable(name: "cb", arg: 2, scope: !8263, file: !209, line: 1191, type: !1031)
!8269 = !DILocation(line: 0, scope: !8263)
!8270 = !DILocation(line: 1193, column: 2, scope: !8263)
!8271 = !DILocation(line: 1194, column: 1, scope: !8263)
!8272 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !209, file: !209, line: 1024, type: !985, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8273)
!8273 = !{!8274, !8275}
!8274 = !DILocalVariable(name: "dev", arg: 1, scope: !8272, file: !209, line: 1024, type: !964)
!8275 = !DILocalVariable(name: "api", scope: !8272, file: !209, line: 1027, type: !956)
!8276 = !DILocation(line: 0, scope: !8272)
!8277 = !DILocation(line: 1028, column: 40, scope: !8272)
!8278 = !DILocation(line: 1030, column: 11, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8272, file: !209, line: 1030, column: 6)
!8280 = !DILocation(line: 1030, column: 24, scope: !8279)
!8281 = !DILocation(line: 1030, column: 6, scope: !8272)
!8282 = !DILocation(line: 1033, column: 9, scope: !8272)
!8283 = !DILocation(line: 1033, column: 2, scope: !8272)
!8284 = !DILocation(line: 1038, column: 1, scope: !8272)
!8285 = distinct !DISubprogram(name: "uart_fifo_read", scope: !209, file: !209, line: 785, type: !1011, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8286)
!8286 = !{!8287, !8288, !8289, !8290}
!8287 = !DILocalVariable(name: "dev", arg: 1, scope: !8285, file: !209, line: 785, type: !964)
!8288 = !DILocalVariable(name: "rx_data", arg: 2, scope: !8285, file: !209, line: 785, type: !267)
!8289 = !DILocalVariable(name: "size", arg: 3, scope: !8285, file: !209, line: 786, type: !268)
!8290 = !DILocalVariable(name: "api", scope: !8285, file: !209, line: 789, type: !956)
!8291 = !DILocation(line: 0, scope: !8285)
!8292 = !DILocation(line: 790, column: 40, scope: !8285)
!8293 = !DILocation(line: 792, column: 11, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8285, file: !209, line: 792, column: 6)
!8295 = !DILocation(line: 792, column: 21, scope: !8294)
!8296 = !DILocation(line: 792, column: 6, scope: !8285)
!8297 = !DILocation(line: 796, column: 9, scope: !8285)
!8298 = !DILocation(line: 796, column: 2, scope: !8285)
!8299 = !DILocation(line: 803, column: 1, scope: !8285)
!8300 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !8190, file: !8190, line: 241, type: !1015, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8301)
!8301 = !{!8302}
!8302 = !DILocalVariable(name: "dev", arg: 1, scope: !8300, file: !8190, line: 241, type: !964)
!8303 = !DILocation(line: 0, scope: !8300)
!8304 = !DILocation(line: 250, column: 2, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8300, file: !8190, line: 250, column: 2)
!8306 = !{i64 2155127178}
!8307 = !DILocation(line: 251, column: 2, scope: !8300)
!8308 = !DILocation(line: 252, column: 1, scope: !8300)
!8309 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !209, file: !209, line: 934, type: !1015, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8310)
!8310 = !{!8311, !8312}
!8311 = !DILocalVariable(name: "dev", arg: 1, scope: !8309, file: !209, line: 934, type: !964)
!8312 = !DILocalVariable(name: "api", scope: !8309, file: !209, line: 937, type: !956)
!8313 = !DILocation(line: 0, scope: !8309)
!8314 = !DILocation(line: 938, column: 40, scope: !8309)
!8315 = !DILocation(line: 940, column: 11, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8309, file: !209, line: 940, column: 6)
!8317 = !DILocation(line: 940, column: 25, scope: !8316)
!8318 = !DILocation(line: 940, column: 6, scope: !8309)
!8319 = !DILocation(line: 941, column: 3, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8316, file: !209, line: 940, column: 34)
!8321 = !DILocation(line: 942, column: 2, scope: !8320)
!8322 = !DILocation(line: 946, column: 1, scope: !8309)
!8323 = !DILocation(line: 0, scope: !1093)
!8324 = !DILocation(line: 433, column: 9, scope: !1093)
!8325 = !DILocation(line: 433, column: 43, scope: !1093)
!8326 = !DILocation(line: 434, column: 9, scope: !1093)
!8327 = !DILocation(line: 433, column: 2, scope: !1093)
!8328 = !DILocation(line: 436, column: 3, scope: !1098)
!8329 = !DILocation(line: 439, column: 8, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !1098, file: !948, line: 439, column: 7)
!8331 = !DILocation(line: 439, column: 7, scope: !1098)
!8332 = distinct !{!8332, !8327, !8333}
!8333 = !DILocation(line: 529, column: 2, scope: !1093)
!8334 = !DILocation(line: 0, scope: !1098)
!8335 = !DILocation(line: 445, column: 8, scope: !1098)
!8336 = !DILocation(line: 446, column: 10, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !1098, file: !948, line: 446, column: 7)
!8338 = !DILocation(line: 446, column: 7, scope: !1098)
!8339 = !DILocation(line: 460, column: 8, scope: !1103)
!8340 = !DILocation(line: 460, column: 7, scope: !1098)
!8341 = !DILocation(line: 461, column: 10, scope: !1101)
!8342 = !DILocation(line: 0, scope: !1101)
!8343 = !DILocation(line: 461, column: 8, scope: !1102)
!8344 = !DILocation(line: 462, column: 9, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !1102, file: !948, line: 462, column: 8)
!8346 = !DILocation(line: 462, column: 8, scope: !1102)
!8347 = !DILocation(line: 477, column: 7, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !1098, file: !948, line: 477, column: 7)
!8349 = !DILocation(line: 477, column: 7, scope: !1098)
!8350 = !DILocation(line: 478, column: 16, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8348, file: !948, line: 477, column: 46)
!8352 = !DILocation(line: 478, column: 22, scope: !8351)
!8353 = !DILocation(line: 478, column: 4, scope: !8351)
!8354 = !DILocation(line: 479, column: 4, scope: !8351)
!8355 = !DILocation(line: 483, column: 7, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !1098, file: !948, line: 483, column: 7)
!8357 = !DILocation(line: 483, column: 7, scope: !1098)
!8358 = !DILocation(line: 484, column: 13, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !948, line: 484, column: 8)
!8360 = distinct !DILexicalBlock(scope: !8356, file: !948, line: 483, column: 55)
!8361 = !DILocation(line: 484, column: 8, scope: !8360)
!8362 = !DILocation(line: 485, column: 5, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8359, file: !948, line: 484, column: 26)
!8364 = !DILocation(line: 486, column: 5, scope: !8363)
!8365 = !DILocation(line: 487, column: 4, scope: !8363)
!8366 = !DILocation(line: 493, column: 16, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !1098, file: !948, line: 493, column: 7)
!8368 = !DILocation(line: 493, column: 8, scope: !8367)
!8369 = !DILocation(line: 493, column: 7, scope: !1098)
!8370 = !DILocation(line: 494, column: 4, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8367, file: !948, line: 493, column: 23)
!8372 = !DILocation(line: 497, column: 9, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8374, file: !948, line: 497, column: 9)
!8374 = distinct !DILexicalBlock(scope: !8371, file: !948, line: 494, column: 18)
!8375 = !DILocation(line: 497, column: 13, scope: !8373)
!8376 = !DILocation(line: 497, column: 9, scope: !8374)
!8377 = !DILocation(line: 498, column: 16, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8373, file: !948, line: 497, column: 18)
!8379 = !DILocation(line: 498, column: 26, scope: !8378)
!8380 = !DILocation(line: 498, column: 34, scope: !8378)
!8381 = !DILocation(line: 498, column: 6, scope: !8378)
!8382 = !DILocation(line: 499, column: 5, scope: !8378)
!8383 = !DILocation(line: 502, column: 5, scope: !8374)
!8384 = !DILocation(line: 503, column: 5, scope: !8374)
!8385 = !DILocation(line: 505, column: 5, scope: !8374)
!8386 = !DILocation(line: 505, column: 15, scope: !8374)
!8387 = !DILocation(line: 505, column: 21, scope: !8374)
!8388 = !DILocation(line: 505, column: 19, scope: !8374)
!8389 = !DILocation(line: 505, column: 26, scope: !8374)
!8390 = !DILocation(line: 506, column: 5, scope: !8374)
!8391 = !DILocation(line: 507, column: 5, scope: !8374)
!8392 = !DILocation(line: 508, column: 9, scope: !8374)
!8393 = !DILocation(line: 509, column: 9, scope: !8374)
!8394 = !DILocation(line: 510, column: 5, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8374, file: !948, line: 510, column: 5)
!8396 = !DILocation(line: 511, column: 9, scope: !8374)
!8397 = !DILocation(line: 512, column: 5, scope: !8374)
!8398 = !DILocation(line: 514, column: 9, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8374, file: !948, line: 514, column: 9)
!8400 = !DILocation(line: 514, column: 23, scope: !8399)
!8401 = !DILocation(line: 515, column: 27, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8399, file: !948, line: 514, column: 32)
!8403 = !DILocation(line: 515, column: 38, scope: !8402)
!8404 = !DILocation(line: 515, column: 13, scope: !8402)
!8405 = !DILocation(line: 515, column: 10, scope: !8402)
!8406 = !DILocation(line: 516, column: 5, scope: !8402)
!8407 = !DILocation(line: 526, column: 7, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !1098, file: !948, line: 526, column: 7)
!8409 = !DILocation(line: 526, column: 13, scope: !8408)
!8410 = !DILocation(line: 526, column: 11, scope: !8408)
!8411 = !DILocation(line: 526, column: 17, scope: !8408)
!8412 = !DILocation(line: 526, column: 7, scope: !1098)
!8413 = !DILocation(line: 527, column: 17, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8408, file: !948, line: 526, column: 42)
!8415 = !DILocation(line: 527, column: 30, scope: !8414)
!8416 = !DILocation(line: 527, column: 4, scope: !8414)
!8417 = !DILocation(line: 528, column: 3, scope: !8414)
!8418 = !DILocation(line: 530, column: 1, scope: !1093)
!8419 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !209, file: !209, line: 1163, type: !1029, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8420)
!8420 = !{!8421, !8422, !8423, !8424}
!8421 = !DILocalVariable(name: "dev", arg: 1, scope: !8419, file: !209, line: 1163, type: !964)
!8422 = !DILocalVariable(name: "cb", arg: 2, scope: !8419, file: !209, line: 1164, type: !1031)
!8423 = !DILocalVariable(name: "user_data", arg: 3, scope: !8419, file: !209, line: 1165, type: !102)
!8424 = !DILocalVariable(name: "api", scope: !8419, file: !209, line: 1168, type: !956)
!8425 = !DILocation(line: 0, scope: !8419)
!8426 = !DILocation(line: 1169, column: 40, scope: !8419)
!8427 = !DILocation(line: 1171, column: 11, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8419, file: !209, line: 1171, column: 6)
!8429 = !DILocation(line: 1171, column: 20, scope: !8428)
!8430 = !DILocation(line: 1171, column: 29, scope: !8428)
!8431 = !DILocation(line: 1171, column: 46, scope: !8428)
!8432 = !DILocation(line: 1171, column: 6, scope: !8419)
!8433 = !DILocation(line: 1172, column: 3, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8428, file: !209, line: 1171, column: 56)
!8435 = !DILocation(line: 1173, column: 2, scope: !8434)
!8436 = !DILocation(line: 1179, column: 1, scope: !8419)
!8437 = distinct !DISubprogram(name: "uart_irq_update", scope: !8190, file: !8190, line: 360, type: !985, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8438)
!8438 = !{!8439}
!8439 = !DILocalVariable(name: "dev", arg: 1, scope: !8437, file: !8190, line: 360, type: !964)
!8440 = !DILocation(line: 0, scope: !8437)
!8441 = !DILocation(line: 368, column: 2, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8437, file: !8190, line: 368, column: 2)
!8443 = !{i64 2155127518}
!8444 = !DILocation(line: 369, column: 9, scope: !8437)
!8445 = !DILocation(line: 369, column: 2, scope: !8437)
!8446 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !8190, file: !8190, line: 337, type: !985, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8447)
!8447 = !{!8448}
!8448 = !DILocalVariable(name: "dev", arg: 1, scope: !8446, file: !8190, line: 337, type: !964)
!8449 = !DILocation(line: 0, scope: !8446)
!8450 = !DILocation(line: 345, column: 2, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8446, file: !8190, line: 345, column: 2)
!8452 = !{i64 2155127450}
!8453 = !DILocation(line: 346, column: 9, scope: !8446)
!8454 = !DILocation(line: 346, column: 2, scope: !8446)
!8455 = distinct !DISubprogram(name: "read_uart", scope: !948, file: !948, line: 127, type: !8456, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8458)
!8456 = !DISubroutineType(types: !8457)
!8457 = !{!103, !964, !267, !32}
!8458 = !{!8459, !8460, !8461, !8462}
!8459 = !DILocalVariable(name: "uart", arg: 1, scope: !8455, file: !948, line: 127, type: !964)
!8460 = !DILocalVariable(name: "buf", arg: 2, scope: !8455, file: !948, line: 127, type: !267)
!8461 = !DILocalVariable(name: "size", arg: 3, scope: !8455, file: !948, line: 128, type: !32)
!8462 = !DILocalVariable(name: "rx", scope: !8455, file: !948, line: 130, type: !103)
!8463 = !DILocation(line: 0, scope: !8455)
!8464 = !DILocation(line: 132, column: 7, scope: !8455)
!8465 = !DILocation(line: 133, column: 9, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8455, file: !948, line: 133, column: 6)
!8467 = !DILocation(line: 133, column: 6, scope: !8455)
!8468 = !DILocation(line: 135, column: 3, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8466, file: !948, line: 133, column: 14)
!8470 = !DILocation(line: 137, column: 3, scope: !8469)
!8471 = !DILocation(line: 141, column: 1, scope: !8455)
!8472 = distinct !DISubprogram(name: "k_queue_get", scope: !3617, file: !3617, line: 649, type: !8473, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8480)
!8473 = !DISubroutineType(types: !8474)
!8474 = !{!102, !8475, !8476}
!8475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!8476 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !8477)
!8477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !8478)
!8478 = !{!8479}
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8477, file: !201, line: 66, baseType: !200, size: 64)
!8480 = !{!8481, !8482}
!8481 = !DILocalVariable(name: "queue", arg: 1, scope: !8472, file: !3617, line: 649, type: !8475)
!8482 = !DILocalVariable(name: "timeout", arg: 2, scope: !8472, file: !3617, line: 649, type: !8476)
!8483 = !DILocation(line: 0, scope: !8472)
!8484 = !DILocation(line: 658, column: 2, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8472, file: !3617, line: 658, column: 2)
!8486 = !{i64 2154851365}
!8487 = !DILocation(line: 659, column: 9, scope: !8472)
!8488 = !DILocation(line: 659, column: 2, scope: !8472)
!8489 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1113, file: !1113, line: 131, type: !8490, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8494)
!8490 = !DISubroutineType(types: !8491)
!8491 = !{!157, !8492, !103}
!8492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8493, size: 32)
!8493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!8494 = !{!8495, !8496, !8497}
!8495 = !DILocalVariable(name: "target", arg: 1, scope: !8489, file: !1113, line: 131, type: !8492)
!8496 = !DILocalVariable(name: "bit", arg: 2, scope: !8489, file: !1113, line: 131, type: !103)
!8497 = !DILocalVariable(name: "val", scope: !8489, file: !1113, line: 133, type: !8498)
!8498 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1113, line: 23, baseType: !1112)
!8499 = !DILocation(line: 0, scope: !8489)
!8500 = !DILocation(line: 133, column: 21, scope: !8489)
!8501 = !DILocation(line: 135, column: 27, scope: !8489)
!8502 = !DILocation(line: 135, column: 50, scope: !8489)
!8503 = !DILocation(line: 135, column: 2, scope: !8489)
!8504 = distinct !DISubprogram(name: "handle_ansi", scope: !948, file: !948, line: 232, type: !8505, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8507)
!8505 = !DISubroutineType(types: !8506)
!8506 = !{null, !154, !344}
!8507 = !{!8508, !8509, !8510}
!8508 = !DILocalVariable(name: "byte", arg: 1, scope: !8504, file: !948, line: 232, type: !154)
!8509 = !DILocalVariable(name: "line", arg: 2, scope: !8504, file: !948, line: 232, type: !344)
!8510 = !DILabel(scope: !8504, name: "ansi_cmd", file: !948, line: 268)
!8511 = !DILocation(line: 0, scope: !8504)
!8512 = !DILocation(line: 234, column: 6, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8504, file: !948, line: 234, column: 6)
!8514 = !DILocation(line: 234, column: 6, scope: !8504)
!8515 = !DILocation(line: 235, column: 16, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !948, line: 235, column: 7)
!8517 = distinct !DILexicalBlock(scope: !8513, file: !948, line: 234, column: 61)
!8518 = !DILocation(line: 235, column: 8, scope: !8516)
!8519 = !DILocation(line: 235, column: 7, scope: !8517)
!8520 = !DILocation(line: 236, column: 13, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8516, file: !948, line: 235, column: 23)
!8522 = !DILocation(line: 237, column: 4, scope: !8521)
!8523 = !DILocation(line: 240, column: 3, scope: !8517)
!8524 = !DILocation(line: 241, column: 19, scope: !8517)
!8525 = !DILocation(line: 241, column: 12, scope: !8517)
!8526 = !DILocation(line: 242, column: 14, scope: !8517)
!8527 = !DILocation(line: 243, column: 3, scope: !8517)
!8528 = !DILocation(line: 246, column: 6, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8504, file: !948, line: 246, column: 6)
!8530 = !DILocation(line: 246, column: 6, scope: !8504)
!8531 = !DILocation(line: 247, column: 15, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8533, file: !948, line: 247, column: 7)
!8533 = distinct !DILexicalBlock(scope: !8529, file: !948, line: 246, column: 49)
!8534 = !DILocation(line: 247, column: 7, scope: !8532)
!8535 = !DILocation(line: 247, column: 7, scope: !8533)
!8536 = !DILocation(line: 248, column: 8, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8538, file: !948, line: 248, column: 8)
!8538 = distinct !DILexicalBlock(scope: !8532, file: !948, line: 247, column: 22)
!8539 = !DILocation(line: 248, column: 8, scope: !8538)
!8540 = !DILocation(line: 249, column: 16, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8537, file: !948, line: 248, column: 53)
!8542 = !DILocation(line: 250, column: 24, scope: !8541)
!8543 = !DILocation(line: 250, column: 16, scope: !8541)
!8544 = !DILocation(line: 251, column: 4, scope: !8541)
!8545 = !DILocation(line: 252, column: 14, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8537, file: !948, line: 251, column: 11)
!8547 = !DILocation(line: 253, column: 22, scope: !8546)
!8548 = !DILocation(line: 253, column: 14, scope: !8546)
!8549 = !DILocation(line: 259, column: 12, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8533, file: !948, line: 259, column: 7)
!8551 = !DILocation(line: 259, column: 19, scope: !8550)
!8552 = !DILocation(line: 260, column: 8, scope: !8550)
!8553 = !DILocation(line: 259, column: 7, scope: !8533)
!8554 = !DILocation(line: 264, column: 3, scope: !8533)
!8555 = !DILocation(line: 265, column: 3, scope: !8533)
!8556 = !DILocation(line: 266, column: 2, scope: !8533)
!8557 = !DILocation(line: 268, column: 1, scope: !8504)
!8558 = !DILocation(line: 269, column: 2, scope: !8504)
!8559 = !DILocation(line: 271, column: 7, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8561, file: !948, line: 271, column: 7)
!8561 = distinct !DILexicalBlock(scope: !8504, file: !948, line: 269, column: 16)
!8562 = !DILocation(line: 271, column: 18, scope: !8560)
!8563 = !DILocation(line: 271, column: 16, scope: !8560)
!8564 = !DILocation(line: 271, column: 7, scope: !8561)
!8565 = !DILocation(line: 275, column: 7, scope: !8561)
!8566 = !DILocation(line: 276, column: 7, scope: !8561)
!8567 = !DILocation(line: 277, column: 3, scope: !8561)
!8568 = !DILocation(line: 278, column: 3, scope: !8561)
!8569 = !DILocation(line: 280, column: 7, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8561, file: !948, line: 280, column: 7)
!8571 = !DILocation(line: 280, column: 18, scope: !8570)
!8572 = !DILocation(line: 280, column: 16, scope: !8570)
!8573 = !DILocation(line: 280, column: 7, scope: !8561)
!8574 = !DILocation(line: 284, column: 7, scope: !8561)
!8575 = !DILocation(line: 285, column: 7, scope: !8561)
!8576 = !DILocation(line: 286, column: 3, scope: !8561)
!8577 = !DILocation(line: 287, column: 3, scope: !8561)
!8578 = !DILocation(line: 289, column: 8, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8561, file: !948, line: 289, column: 7)
!8580 = !DILocation(line: 289, column: 7, scope: !8561)
!8581 = !DILocation(line: 293, column: 19, scope: !8561)
!8582 = !DILocation(line: 293, column: 3, scope: !8561)
!8583 = !DILocation(line: 294, column: 10, scope: !8561)
!8584 = !DILocation(line: 294, column: 7, scope: !8561)
!8585 = !DILocation(line: 295, column: 7, scope: !8561)
!8586 = !DILocation(line: 296, column: 3, scope: !8561)
!8587 = !DILocation(line: 298, column: 8, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8561, file: !948, line: 298, column: 7)
!8589 = !DILocation(line: 298, column: 7, scope: !8561)
!8590 = !DILocation(line: 302, column: 18, scope: !8561)
!8591 = !DILocation(line: 302, column: 3, scope: !8561)
!8592 = !DILocation(line: 303, column: 10, scope: !8561)
!8593 = !DILocation(line: 303, column: 7, scope: !8561)
!8594 = !DILocation(line: 304, column: 7, scope: !8561)
!8595 = !DILocation(line: 305, column: 3, scope: !8561)
!8596 = !DILocation(line: 307, column: 8, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8561, file: !948, line: 307, column: 7)
!8598 = !DILocation(line: 307, column: 7, scope: !8561)
!8599 = !DILocation(line: 311, column: 3, scope: !8561)
!8600 = !DILocation(line: 312, column: 18, scope: !8561)
!8601 = !DILocation(line: 312, column: 13, scope: !8561)
!8602 = !DILocation(line: 312, column: 24, scope: !8561)
!8603 = !DILocation(line: 312, column: 3, scope: !8561)
!8604 = !DILocation(line: 313, column: 3, scope: !8561)
!8605 = !DILocation(line: 318, column: 2, scope: !8504)
!8606 = !DILocation(line: 319, column: 1, scope: !8504)
!8607 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1113, file: !1113, line: 152, type: !8608, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8611)
!8608 = !DISubroutineType(types: !8609)
!8609 = !{!157, !8610, !103}
!8610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!8611 = !{!8612, !8613, !8614, !8615}
!8612 = !DILocalVariable(name: "target", arg: 1, scope: !8607, file: !1113, line: 152, type: !8610)
!8613 = !DILocalVariable(name: "bit", arg: 2, scope: !8607, file: !1113, line: 152, type: !103)
!8614 = !DILocalVariable(name: "mask", scope: !8607, file: !1113, line: 154, type: !8498)
!8615 = !DILocalVariable(name: "old", scope: !8607, file: !1113, line: 155, type: !8498)
!8616 = !DILocation(line: 0, scope: !8607)
!8617 = !DILocation(line: 154, column: 22, scope: !8607)
!8618 = !DILocation(line: 157, column: 45, scope: !8607)
!8619 = !DILocation(line: 157, column: 8, scope: !8607)
!8620 = !DILocation(line: 159, column: 14, scope: !8607)
!8621 = !DILocation(line: 159, column: 22, scope: !8607)
!8622 = !DILocation(line: 159, column: 2, scope: !8607)
!8623 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1113, file: !1113, line: 217, type: !8624, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8626)
!8624 = !DISubroutineType(types: !8625)
!8625 = !{null, !8610, !103}
!8626 = !{!8627, !8628, !8629}
!8627 = !DILocalVariable(name: "target", arg: 1, scope: !8623, file: !1113, line: 217, type: !8610)
!8628 = !DILocalVariable(name: "bit", arg: 2, scope: !8623, file: !1113, line: 217, type: !103)
!8629 = !DILocalVariable(name: "mask", scope: !8623, file: !1113, line: 219, type: !8498)
!8630 = !DILocation(line: 0, scope: !8623)
!8631 = !DILocation(line: 219, column: 22, scope: !8623)
!8632 = !DILocation(line: 221, column: 8, scope: !8623)
!8633 = !DILocation(line: 222, column: 1, scope: !8623)
!8634 = distinct !DISubprogram(name: "isprint", scope: !4934, file: !4934, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8635)
!8635 = !{!8636}
!8636 = !DILocalVariable(name: "c", arg: 1, scope: !8634, file: !4934, line: 37, type: !103)
!8637 = !DILocation(line: 0, scope: !8634)
!8638 = !DILocation(line: 39, column: 38, scope: !8634)
!8639 = !DILocation(line: 39, column: 2, scope: !8634)
!8640 = distinct !DISubprogram(name: "del_char", scope: !948, file: !948, line: 191, type: !8641, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8643)
!8641 = !DISubroutineType(types: !8642)
!8642 = !{null, !344, !154}
!8643 = !{!8644, !8645}
!8644 = !DILocalVariable(name: "pos", arg: 1, scope: !8640, file: !948, line: 191, type: !344)
!8645 = !DILocalVariable(name: "end", arg: 2, scope: !8640, file: !948, line: 191, type: !154)
!8646 = !DILocation(line: 0, scope: !8640)
!8647 = !DILocation(line: 193, column: 2, scope: !8640)
!8648 = !DILocation(line: 195, column: 10, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8640, file: !948, line: 195, column: 6)
!8650 = !DILocation(line: 195, column: 6, scope: !8640)
!8651 = !DILocation(line: 196, column: 3, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8649, file: !948, line: 195, column: 17)
!8653 = !DILocation(line: 197, column: 3, scope: !8652)
!8654 = !DILocation(line: 198, column: 3, scope: !8652)
!8655 = !DILocation(line: 201, column: 2, scope: !8640)
!8656 = !DILocation(line: 203, column: 2, scope: !8640)
!8657 = !DILocation(line: 203, column: 12, scope: !8640)
!8658 = !DILocation(line: 204, column: 16, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8640, file: !948, line: 203, column: 20)
!8660 = !DILocation(line: 204, column: 10, scope: !8659)
!8661 = !DILocation(line: 204, column: 8, scope: !8659)
!8662 = !DILocation(line: 205, column: 3, scope: !8659)
!8663 = !DILocation(line: 203, column: 15, scope: !8640)
!8664 = distinct !{!8664, !8656, !8665}
!8665 = !DILocation(line: 206, column: 2, scope: !8640)
!8666 = !DILocation(line: 208, column: 2, scope: !8640)
!8667 = !DILocation(line: 211, column: 2, scope: !8640)
!8668 = !DILocation(line: 212, column: 1, scope: !8640)
!8669 = distinct !DISubprogram(name: "insert_char", scope: !948, file: !948, line: 163, type: !8670, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8672)
!8670 = !DISubroutineType(types: !8671)
!8671 = !{null, !344, !146, !154}
!8672 = !{!8673, !8674, !8675, !8676}
!8673 = !DILocalVariable(name: "pos", arg: 1, scope: !8669, file: !948, line: 163, type: !344)
!8674 = !DILocalVariable(name: "c", arg: 2, scope: !8669, file: !948, line: 163, type: !146)
!8675 = !DILocalVariable(name: "end", arg: 3, scope: !8669, file: !948, line: 163, type: !154)
!8676 = !DILocalVariable(name: "tmp", scope: !8669, file: !948, line: 165, type: !146)
!8677 = !DILocation(line: 0, scope: !8669)
!8678 = !DILocation(line: 168, column: 2, scope: !8669)
!8679 = !DILocation(line: 170, column: 10, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8669, file: !948, line: 170, column: 6)
!8681 = !DILocation(line: 170, column: 6, scope: !8669)
!8682 = !DILocation(line: 171, column: 8, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8680, file: !948, line: 170, column: 17)
!8684 = !DILocation(line: 172, column: 3, scope: !8683)
!8685 = !DILocation(line: 175, column: 8, scope: !8669)
!8686 = !DILocation(line: 176, column: 11, scope: !8669)
!8687 = !DILocation(line: 178, column: 2, scope: !8669)
!8688 = !DILocation(line: 180, column: 2, scope: !8669)
!8689 = !DILocation(line: 180, column: 12, scope: !8669)
!8690 = !DILocation(line: 181, column: 3, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8669, file: !948, line: 180, column: 20)
!8692 = !DILocation(line: 182, column: 7, scope: !8691)
!8693 = !DILocation(line: 183, column: 12, scope: !8691)
!8694 = !DILocation(line: 180, column: 15, scope: !8669)
!8695 = distinct !{!8695, !8688, !8696}
!8696 = !DILocation(line: 185, column: 2, scope: !8669)
!8697 = !DILocation(line: 188, column: 2, scope: !8669)
!8698 = !DILocation(line: 189, column: 1, scope: !8669)
!8699 = distinct !DISubprogram(name: "cursor_save", scope: !948, file: !948, line: 153, type: !3181, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !317)
!8700 = !DILocation(line: 155, column: 2, scope: !8699)
!8701 = !DILocation(line: 156, column: 1, scope: !8699)
!8702 = distinct !DISubprogram(name: "cursor_restore", scope: !948, file: !948, line: 158, type: !3181, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !317)
!8703 = !DILocation(line: 160, column: 2, scope: !8702)
!8704 = !DILocation(line: 161, column: 1, scope: !8702)
!8705 = distinct !DISubprogram(name: "atomic_or", scope: !8706, file: !8706, line: 279, type: !8707, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8709)
!8706 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8707 = !DISubroutineType(types: !8708)
!8708 = !{!8498, !8610, !8498}
!8709 = !{!8710, !8711}
!8710 = !DILocalVariable(name: "target", arg: 1, scope: !8705, file: !8706, line: 279, type: !8610)
!8711 = !DILocalVariable(name: "value", arg: 2, scope: !8705, file: !8706, line: 279, type: !8498)
!8712 = !DILocation(line: 0, scope: !8705)
!8713 = !DILocation(line: 281, column: 9, scope: !8705)
!8714 = !DILocation(line: 281, column: 2, scope: !8705)
!8715 = distinct !DISubprogram(name: "atomic_and", scope: !8706, file: !8706, line: 319, type: !8707, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8716)
!8716 = !{!8717, !8718}
!8717 = !DILocalVariable(name: "target", arg: 1, scope: !8715, file: !8706, line: 319, type: !8610)
!8718 = !DILocalVariable(name: "value", arg: 2, scope: !8715, file: !8706, line: 319, type: !8498)
!8719 = !DILocation(line: 0, scope: !8715)
!8720 = !DILocation(line: 321, column: 9, scope: !8715)
!8721 = !DILocation(line: 321, column: 2, scope: !8715)
!8722 = distinct !DISubprogram(name: "isdigit", scope: !4934, file: !4934, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8723)
!8723 = !{!8724}
!8724 = !DILocalVariable(name: "a", arg: 1, scope: !8722, file: !4934, line: 43, type: !103)
!8725 = !DILocation(line: 0, scope: !8722)
!8726 = !DILocation(line: 45, column: 29, scope: !8722)
!8727 = !DILocation(line: 45, column: 45, scope: !8722)
!8728 = !DILocation(line: 45, column: 2, scope: !8722)
!8729 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1113, file: !1113, line: 176, type: !8608, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8730)
!8730 = !{!8731, !8732, !8733, !8734}
!8731 = !DILocalVariable(name: "target", arg: 1, scope: !8729, file: !1113, line: 176, type: !8610)
!8732 = !DILocalVariable(name: "bit", arg: 2, scope: !8729, file: !1113, line: 176, type: !103)
!8733 = !DILocalVariable(name: "mask", scope: !8729, file: !1113, line: 178, type: !8498)
!8734 = !DILocalVariable(name: "old", scope: !8729, file: !1113, line: 179, type: !8498)
!8735 = !DILocation(line: 0, scope: !8729)
!8736 = !DILocation(line: 181, column: 8, scope: !8729)
!8737 = !DILocation(line: 183, column: 14, scope: !8729)
!8738 = !DILocation(line: 183, column: 22, scope: !8729)
!8739 = !DILocation(line: 183, column: 2, scope: !8729)
!8740 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1113, file: !1113, line: 198, type: !8624, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8741)
!8741 = !{!8742, !8743, !8744}
!8742 = !DILocalVariable(name: "target", arg: 1, scope: !8740, file: !1113, line: 198, type: !8610)
!8743 = !DILocalVariable(name: "bit", arg: 2, scope: !8740, file: !1113, line: 198, type: !103)
!8744 = !DILocalVariable(name: "mask", scope: !8740, file: !1113, line: 200, type: !8498)
!8745 = !DILocation(line: 0, scope: !8740)
!8746 = !DILocation(line: 200, column: 22, scope: !8740)
!8747 = !DILocation(line: 202, column: 45, scope: !8740)
!8748 = !DILocation(line: 202, column: 8, scope: !8740)
!8749 = !DILocation(line: 203, column: 1, scope: !8740)
!8750 = distinct !DISubprogram(name: "cursor_backward", scope: !948, file: !948, line: 148, type: !5749, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8751)
!8751 = !{!8752}
!8752 = !DILocalVariable(name: "count", arg: 1, scope: !8750, file: !948, line: 148, type: !32)
!8753 = !DILocation(line: 0, scope: !8750)
!8754 = !DILocation(line: 150, column: 2, scope: !8750)
!8755 = !DILocation(line: 151, column: 1, scope: !8750)
!8756 = distinct !DISubprogram(name: "cursor_forward", scope: !948, file: !948, line: 143, type: !5749, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8757)
!8757 = !{!8758}
!8758 = !DILocalVariable(name: "count", arg: 1, scope: !8756, file: !948, line: 143, type: !32)
!8759 = !DILocation(line: 0, scope: !8756)
!8760 = !DILocation(line: 145, column: 2, scope: !8756)
!8761 = !DILocation(line: 146, column: 1, scope: !8756)
!8762 = distinct !DISubprogram(name: "atomic_get", scope: !8706, file: !8706, line: 159, type: !8763, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8765)
!8763 = !DISubroutineType(types: !8764)
!8764 = !{!8498, !8492}
!8765 = !{!8766}
!8766 = !DILocalVariable(name: "target", arg: 1, scope: !8762, file: !8706, line: 159, type: !8492)
!8767 = !DILocation(line: 0, scope: !8762)
!8768 = !DILocation(line: 161, column: 9, scope: !8762)
!8769 = !DILocation(line: 161, column: 2, scope: !8762)
!8770 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !209, file: !209, line: 1093, type: !985, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8771)
!8771 = !{!8772, !8773}
!8772 = !DILocalVariable(name: "dev", arg: 1, scope: !8770, file: !209, line: 1093, type: !964)
!8773 = !DILocalVariable(name: "api", scope: !8770, file: !209, line: 1096, type: !956)
!8774 = !DILocation(line: 0, scope: !8770)
!8775 = !DILocation(line: 1097, column: 40, scope: !8770)
!8776 = !DILocation(line: 1099, column: 11, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8770, file: !209, line: 1099, column: 6)
!8778 = !DILocation(line: 1099, column: 26, scope: !8777)
!8779 = !DILocation(line: 1099, column: 6, scope: !8770)
!8780 = !DILocation(line: 1102, column: 9, scope: !8770)
!8781 = !DILocation(line: 1102, column: 2, scope: !8770)
!8782 = !DILocation(line: 1107, column: 1, scope: !8770)
!8783 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !209, file: !209, line: 1136, type: !985, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8784)
!8784 = !{!8785, !8786}
!8785 = !DILocalVariable(name: "dev", arg: 1, scope: !8783, file: !209, line: 1136, type: !964)
!8786 = !DILocalVariable(name: "api", scope: !8783, file: !209, line: 1139, type: !956)
!8787 = !DILocation(line: 0, scope: !8783)
!8788 = !DILocation(line: 1140, column: 40, scope: !8783)
!8789 = !DILocation(line: 1142, column: 11, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8783, file: !209, line: 1142, column: 6)
!8791 = !DILocation(line: 1142, column: 22, scope: !8790)
!8792 = !DILocation(line: 1142, column: 6, scope: !8783)
!8793 = !DILocation(line: 1145, column: 9, scope: !8783)
!8794 = !DILocation(line: 1145, column: 2, scope: !8783)
!8795 = !DILocation(line: 1150, column: 1, scope: !8783)
!8796 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !209, file: !209, line: 878, type: !1015, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8797)
!8797 = !{!8798, !8799}
!8798 = !DILocalVariable(name: "dev", arg: 1, scope: !8796, file: !209, line: 878, type: !964)
!8799 = !DILocalVariable(name: "api", scope: !8796, file: !209, line: 881, type: !956)
!8800 = !DILocation(line: 0, scope: !8796)
!8801 = !DILocation(line: 882, column: 40, scope: !8796)
!8802 = !DILocation(line: 884, column: 11, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8796, file: !209, line: 884, column: 6)
!8804 = !DILocation(line: 884, column: 26, scope: !8803)
!8805 = !DILocation(line: 884, column: 6, scope: !8796)
!8806 = !DILocation(line: 885, column: 3, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8803, file: !209, line: 884, column: 35)
!8808 = !DILocation(line: 886, column: 2, scope: !8807)
!8809 = !DILocation(line: 890, column: 1, scope: !8796)
!8810 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !209, file: !209, line: 955, type: !1015, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8811)
!8811 = !{!8812, !8813}
!8812 = !DILocalVariable(name: "dev", arg: 1, scope: !8810, file: !209, line: 955, type: !964)
!8813 = !DILocalVariable(name: "api", scope: !8810, file: !209, line: 958, type: !956)
!8814 = !DILocation(line: 0, scope: !8810)
!8815 = !DILocation(line: 959, column: 40, scope: !8810)
!8816 = !DILocation(line: 961, column: 11, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8810, file: !209, line: 961, column: 6)
!8818 = !DILocation(line: 961, column: 26, scope: !8817)
!8819 = !DILocation(line: 961, column: 6, scope: !8810)
!8820 = !DILocation(line: 962, column: 3, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8817, file: !209, line: 961, column: 35)
!8822 = !DILocation(line: 963, column: 2, scope: !8821)
!8823 = !DILocation(line: 967, column: 1, scope: !8810)
!8824 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1293, file: !1293, line: 523, type: !1151, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !8825)
!8825 = !{!8826, !8827, !8828, !8829, !8830}
!8826 = !DILocalVariable(name: "dev", arg: 1, scope: !8824, file: !1293, line: 523, type: !1153)
!8827 = !DILocalVariable(name: "pin", arg: 2, scope: !8824, file: !1293, line: 524, type: !1168)
!8828 = !DILocalVariable(name: "flags", arg: 3, scope: !8824, file: !1293, line: 524, type: !1169)
!8829 = !DILocalVariable(name: "err", scope: !8824, file: !1293, line: 526, type: !103)
!8830 = !DILocalVariable(name: "pincfg", scope: !8824, file: !1293, line: 527, type: !103)
!8831 = !DILocation(line: 0, scope: !8824)
!8832 = !DILocation(line: 527, column: 2, scope: !8824)
!8833 = !DILocation(line: 532, column: 8, scope: !8824)
!8834 = !DILocation(line: 533, column: 10, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8824, file: !1293, line: 533, column: 6)
!8836 = !DILocation(line: 533, column: 6, scope: !8824)
!8837 = !DILocation(line: 543, column: 13, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8824, file: !1293, line: 543, column: 6)
!8839 = !DILocation(line: 543, column: 28, scope: !8838)
!8840 = !DILocation(line: 543, column: 6, scope: !8824)
!8841 = !DILocation(line: 544, column: 14, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !1293, line: 544, column: 7)
!8843 = distinct !DILexicalBlock(scope: !8838, file: !1293, line: 543, column: 34)
!8844 = !DILocation(line: 544, column: 39, scope: !8842)
!8845 = !DILocation(line: 544, column: 7, scope: !8843)
!8846 = !DILocation(line: 545, column: 38, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8842, file: !1293, line: 544, column: 45)
!8848 = !DILocation(line: 545, column: 4, scope: !8847)
!8849 = !DILocation(line: 546, column: 3, scope: !8847)
!8850 = !DILocation(line: 546, column: 21, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8842, file: !1293, line: 546, column: 14)
!8852 = !DILocation(line: 546, column: 45, scope: !8851)
!8853 = !DILocation(line: 546, column: 14, scope: !8842)
!8854 = !DILocation(line: 547, column: 40, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8851, file: !1293, line: 546, column: 51)
!8856 = !DILocation(line: 547, column: 4, scope: !8855)
!8857 = !DILocation(line: 548, column: 3, scope: !8855)
!8858 = !DILocation(line: 551, column: 32, scope: !8824)
!8859 = !DILocation(line: 551, column: 37, scope: !8824)
!8860 = !DILocation(line: 551, column: 2, scope: !8824)
!8861 = !DILocation(line: 554, column: 6, scope: !8824)
!8862 = !DILocation(line: 562, column: 1, scope: !8824)
!8863 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1293, file: !1293, line: 410, type: !8864, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !8866)
!8864 = !DISubroutineType(types: !8865)
!8865 = !{!103, !1153, !866}
!8866 = !{!8867, !8868, !8869, !8871}
!8867 = !DILocalVariable(name: "dev", arg: 1, scope: !8863, file: !1293, line: 410, type: !1153)
!8868 = !DILocalVariable(name: "value", arg: 2, scope: !8863, file: !1293, line: 410, type: !866)
!8869 = !DILocalVariable(name: "cfg", scope: !8863, file: !1293, line: 412, type: !8870)
!8870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!8871 = !DILocalVariable(name: "gpio", scope: !8863, file: !1293, line: 413, type: !1226)
!8872 = !DILocation(line: 0, scope: !8863)
!8873 = !DILocation(line: 412, column: 45, scope: !8863)
!8874 = !DILocation(line: 413, column: 44, scope: !8863)
!8875 = !DILocation(line: 415, column: 11, scope: !8863)
!8876 = !DILocation(line: 415, column: 9, scope: !8863)
!8877 = !DILocation(line: 417, column: 2, scope: !8863)
!8878 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1293, file: !1293, line: 420, type: !1178, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !8879)
!8879 = !{!8880, !8881, !8882, !8883, !8884, !8885}
!8880 = !DILocalVariable(name: "dev", arg: 1, scope: !8878, file: !1293, line: 420, type: !1153)
!8881 = !DILocalVariable(name: "mask", arg: 2, scope: !8878, file: !1293, line: 421, type: !1180)
!8882 = !DILocalVariable(name: "value", arg: 3, scope: !8878, file: !1293, line: 422, type: !1175)
!8883 = !DILocalVariable(name: "cfg", scope: !8878, file: !1293, line: 424, type: !8870)
!8884 = !DILocalVariable(name: "gpio", scope: !8878, file: !1293, line: 425, type: !1226)
!8885 = !DILocalVariable(name: "port_value", scope: !8878, file: !1293, line: 426, type: !121)
!8886 = !DILocation(line: 0, scope: !8878)
!8887 = !DILocation(line: 424, column: 45, scope: !8878)
!8888 = !DILocation(line: 425, column: 44, scope: !8878)
!8889 = !DILocation(line: 430, column: 15, scope: !8878)
!8890 = !DILocation(line: 431, column: 46, scope: !8878)
!8891 = !DILocation(line: 431, column: 44, scope: !8878)
!8892 = !DILocation(line: 431, column: 61, scope: !8878)
!8893 = !DILocation(line: 431, column: 53, scope: !8878)
!8894 = !DILocation(line: 431, column: 2, scope: !8878)
!8895 = !DILocation(line: 435, column: 2, scope: !8878)
!8896 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1293, file: !1293, line: 438, type: !1183, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !8897)
!8897 = !{!8898, !8899, !8900, !8901}
!8898 = !DILocalVariable(name: "dev", arg: 1, scope: !8896, file: !1293, line: 438, type: !1153)
!8899 = !DILocalVariable(name: "pins", arg: 2, scope: !8896, file: !1293, line: 439, type: !1180)
!8900 = !DILocalVariable(name: "cfg", scope: !8896, file: !1293, line: 441, type: !8870)
!8901 = !DILocalVariable(name: "gpio", scope: !8896, file: !1293, line: 442, type: !1226)
!8902 = !DILocation(line: 0, scope: !8896)
!8903 = !DILocation(line: 441, column: 45, scope: !8896)
!8904 = !DILocation(line: 442, column: 44, scope: !8896)
!8905 = !DILocation(line: 448, column: 2, scope: !8896)
!8906 = !DILocation(line: 450, column: 2, scope: !8896)
!8907 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1293, file: !1293, line: 453, type: !1183, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !8908)
!8908 = !{!8909, !8910, !8911, !8912}
!8909 = !DILocalVariable(name: "dev", arg: 1, scope: !8907, file: !1293, line: 453, type: !1153)
!8910 = !DILocalVariable(name: "pins", arg: 2, scope: !8907, file: !1293, line: 454, type: !1180)
!8911 = !DILocalVariable(name: "cfg", scope: !8907, file: !1293, line: 456, type: !8870)
!8912 = !DILocalVariable(name: "gpio", scope: !8907, file: !1293, line: 457, type: !1226)
!8913 = !DILocation(line: 0, scope: !8907)
!8914 = !DILocation(line: 456, column: 45, scope: !8907)
!8915 = !DILocation(line: 457, column: 44, scope: !8907)
!8916 = !DILocation(line: 467, column: 2, scope: !8907)
!8917 = !DILocation(line: 470, column: 2, scope: !8907)
!8918 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1293, file: !1293, line: 473, type: !1183, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !8919)
!8919 = !{!8920, !8921, !8922, !8923}
!8920 = !DILocalVariable(name: "dev", arg: 1, scope: !8918, file: !1293, line: 473, type: !1153)
!8921 = !DILocalVariable(name: "pins", arg: 2, scope: !8918, file: !1293, line: 474, type: !1180)
!8922 = !DILocalVariable(name: "cfg", scope: !8918, file: !1293, line: 476, type: !8870)
!8923 = !DILocalVariable(name: "gpio", scope: !8918, file: !1293, line: 477, type: !1226)
!8924 = !DILocation(line: 0, scope: !8918)
!8925 = !DILocation(line: 476, column: 45, scope: !8918)
!8926 = !DILocation(line: 477, column: 44, scope: !8918)
!8927 = !DILocation(line: 484, column: 2, scope: !8918)
!8928 = !DILocation(line: 487, column: 2, scope: !8918)
!8929 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1293, file: !1293, line: 594, type: !1189, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !8930)
!8930 = !{!8931, !8932, !8933, !8934, !8935, !8936, !8938, !8939, !8940}
!8931 = !DILocalVariable(name: "dev", arg: 1, scope: !8929, file: !1293, line: 594, type: !1153)
!8932 = !DILocalVariable(name: "pin", arg: 2, scope: !8929, file: !1293, line: 595, type: !1168)
!8933 = !DILocalVariable(name: "mode", arg: 3, scope: !8929, file: !1293, line: 596, type: !1127)
!8934 = !DILocalVariable(name: "trig", arg: 4, scope: !8929, file: !1293, line: 597, type: !1133)
!8935 = !DILocalVariable(name: "cfg", scope: !8929, file: !1293, line: 599, type: !8870)
!8936 = !DILocalVariable(name: "data", scope: !8929, file: !1293, line: 600, type: !8937)
!8937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 32)
!8938 = !DILocalVariable(name: "edge", scope: !8929, file: !1293, line: 601, type: !103)
!8939 = !DILocalVariable(name: "err", scope: !8929, file: !1293, line: 602, type: !103)
!8940 = !DILabel(scope: !8929, name: "exit", file: !1293, line: 643)
!8941 = !DILocation(line: 0, scope: !8929)
!8942 = !DILocation(line: 599, column: 45, scope: !8929)
!8943 = !DILocation(line: 604, column: 6, scope: !8929)
!8944 = !DILocation(line: 605, column: 34, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8946, file: !1293, line: 605, column: 7)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !1293, line: 604, column: 38)
!8947 = distinct !DILexicalBlock(scope: !8929, file: !1293, line: 604, column: 6)
!8948 = !DILocation(line: 605, column: 7, scope: !8945)
!8949 = !DILocation(line: 605, column: 47, scope: !8945)
!8950 = !DILocation(line: 605, column: 39, scope: !8945)
!8951 = !DILocation(line: 605, column: 7, scope: !8946)
!8952 = !DILocation(line: 606, column: 4, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8945, file: !1293, line: 605, column: 53)
!8954 = !DILocation(line: 607, column: 4, scope: !8953)
!8955 = !DILocation(line: 608, column: 4, scope: !8953)
!8956 = !DILocation(line: 609, column: 3, scope: !8953)
!8957 = !DILocation(line: 600, column: 38, scope: !8929)
!8958 = !DILocation(line: 620, column: 30, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8929, file: !1293, line: 620, column: 6)
!8960 = !DILocation(line: 620, column: 6, scope: !8959)
!8961 = !DILocation(line: 620, column: 57, scope: !8959)
!8962 = !DILocation(line: 620, column: 6, scope: !8929)
!8963 = !DILocation(line: 625, column: 29, scope: !8929)
!8964 = !DILocation(line: 625, column: 2, scope: !8929)
!8965 = !DILocation(line: 627, column: 2, scope: !8929)
!8966 = !DILocation(line: 630, column: 3, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8929, file: !1293, line: 627, column: 16)
!8968 = !DILocation(line: 633, column: 3, scope: !8967)
!8969 = !DILocation(line: 636, column: 3, scope: !8967)
!8970 = !DILocation(line: 639, column: 2, scope: !8929)
!8971 = !DILocation(line: 641, column: 2, scope: !8929)
!8972 = !DILocation(line: 643, column: 1, scope: !8929)
!8973 = !DILocation(line: 644, column: 2, scope: !8929)
!8974 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1293, file: !1293, line: 647, type: !1193, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !8975)
!8975 = !{!8976, !8977, !8978, !8979}
!8976 = !DILocalVariable(name: "dev", arg: 1, scope: !8974, file: !1293, line: 647, type: !1153)
!8977 = !DILocalVariable(name: "callback", arg: 2, scope: !8974, file: !1293, line: 648, type: !1195)
!8978 = !DILocalVariable(name: "set", arg: 3, scope: !8974, file: !1293, line: 649, type: !157)
!8979 = !DILocalVariable(name: "data", scope: !8974, file: !1293, line: 651, type: !8937)
!8980 = !DILocation(line: 0, scope: !8974)
!8981 = !DILocation(line: 651, column: 38, scope: !8974)
!8982 = !DILocation(line: 653, column: 37, scope: !8974)
!8983 = !DILocation(line: 653, column: 9, scope: !8974)
!8984 = !DILocation(line: 653, column: 2, scope: !8974)
!8985 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8986, file: !8986, line: 38, type: !8987, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !8990)
!8986 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8987 = !DISubroutineType(types: !8988)
!8988 = !{!103, !8989, !1195, !157}
!8989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 32)
!8990 = !{!8991, !8992, !8993}
!8991 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8985, file: !8986, line: 38, type: !8989)
!8992 = !DILocalVariable(name: "callback", arg: 2, scope: !8985, file: !8986, line: 39, type: !1195)
!8993 = !DILocalVariable(name: "set", arg: 3, scope: !8985, file: !8986, line: 40, type: !157)
!8994 = !DILocation(line: 0, scope: !8985)
!8995 = !DILocation(line: 45, column: 7, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8985, file: !8986, line: 45, column: 6)
!8997 = !DILocation(line: 45, column: 6, scope: !8985)
!8998 = !DILocation(line: 46, column: 56, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !9000, file: !8986, line: 46, column: 7)
!9000 = distinct !DILexicalBlock(scope: !8996, file: !8986, line: 45, column: 38)
!9001 = !DILocation(line: 46, column: 8, scope: !8999)
!9002 = !DILocation(line: 46, column: 7, scope: !9000)
!9003 = !DILocation(line: 51, column: 13, scope: !8996)
!9004 = !DILocation(line: 56, column: 43, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !9006, file: !8986, line: 55, column: 11)
!9006 = distinct !DILexicalBlock(scope: !8985, file: !8986, line: 55, column: 6)
!9007 = !DILocation(line: 56, column: 3, scope: !9005)
!9008 = !DILocation(line: 57, column: 2, scope: !9005)
!9009 = !DILocation(line: 60, column: 1, scope: !8985)
!9010 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1200, file: !1200, line: 261, type: !9011, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9013)
!9011 = !DISubroutineType(types: !9012)
!9012 = !{!157, !8989}
!9013 = !{!9014}
!9014 = !DILocalVariable(name: "list", arg: 1, scope: !9010, file: !1200, line: 261, type: !8989)
!9015 = !DILocation(line: 0, scope: !9010)
!9016 = !DILocation(line: 261, column: 1, scope: !9010)
!9017 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1200, file: !1200, line: 417, type: !9018, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9020)
!9018 = !DISubroutineType(types: !9019)
!9019 = !{!157, !8989, !1372}
!9020 = !{!9021, !9022, !9023, !9024}
!9021 = !DILocalVariable(name: "list", arg: 1, scope: !9017, file: !1200, line: 417, type: !8989)
!9022 = !DILocalVariable(name: "node", arg: 2, scope: !9017, file: !1200, line: 417, type: !1372)
!9023 = !DILocalVariable(name: "prev", scope: !9017, file: !1200, line: 417, type: !1372)
!9024 = !DILocalVariable(name: "test", scope: !9017, file: !1200, line: 417, type: !1372)
!9025 = !DILocation(line: 0, scope: !9017)
!9026 = !DILocation(line: 417, column: 1, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9017, file: !1200, line: 417, column: 1)
!9028 = !DILocation(line: 417, column: 1, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9027, file: !1200, line: 417, column: 1)
!9030 = !DILocation(line: 417, column: 1, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9032, file: !1200, line: 417, column: 1)
!9032 = distinct !DILexicalBlock(scope: !9029, file: !1200, line: 417, column: 1)
!9033 = !DILocation(line: 417, column: 1, scope: !9032)
!9034 = distinct !{!9034, !9026, !9026}
!9035 = !DILocation(line: 417, column: 1, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9031, file: !1200, line: 417, column: 1)
!9037 = !DILocation(line: 417, column: 1, scope: !9017)
!9038 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1200, file: !1200, line: 298, type: !9039, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9041)
!9039 = !DISubroutineType(types: !9040)
!9040 = !{null, !8989, !1372}
!9041 = !{!9042, !9043}
!9042 = !DILocalVariable(name: "list", arg: 1, scope: !9038, file: !1200, line: 298, type: !8989)
!9043 = !DILocalVariable(name: "node", arg: 2, scope: !9038, file: !1200, line: 298, type: !1372)
!9044 = !DILocation(line: 0, scope: !9038)
!9045 = !DILocation(line: 298, column: 1, scope: !9038)
!9046 = !DILocation(line: 298, column: 1, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9038, file: !1200, line: 298, column: 1)
!9048 = !DILocation(line: 298, column: 1, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9047, file: !1200, line: 298, column: 1)
!9050 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1200, file: !1200, line: 231, type: !9051, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9053)
!9051 = !DISubroutineType(types: !9052)
!9052 = !{!1372, !8989}
!9053 = !{!9054}
!9054 = !DILocalVariable(name: "list", arg: 1, scope: !9050, file: !1200, line: 231, type: !8989)
!9055 = !DILocation(line: 0, scope: !9050)
!9056 = !DILocation(line: 233, column: 15, scope: !9050)
!9057 = !DILocation(line: 233, column: 2, scope: !9050)
!9058 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1200, file: !1200, line: 209, type: !9059, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9061)
!9059 = !DISubroutineType(types: !9060)
!9060 = !{null, !1372, !1372}
!9061 = !{!9062, !9063}
!9062 = !DILocalVariable(name: "parent", arg: 1, scope: !9058, file: !1200, line: 209, type: !1372)
!9063 = !DILocalVariable(name: "child", arg: 2, scope: !9058, file: !1200, line: 209, type: !1372)
!9064 = !DILocation(line: 0, scope: !9058)
!9065 = !DILocation(line: 211, column: 10, scope: !9058)
!9066 = !DILocation(line: 211, column: 15, scope: !9058)
!9067 = !DILocation(line: 212, column: 1, scope: !9058)
!9068 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1200, file: !1200, line: 214, type: !9039, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9069)
!9069 = !{!9070, !9071}
!9070 = !DILocalVariable(name: "list", arg: 1, scope: !9068, file: !1200, line: 214, type: !8989)
!9071 = !DILocalVariable(name: "node", arg: 2, scope: !9068, file: !1200, line: 214, type: !1372)
!9072 = !DILocation(line: 0, scope: !9068)
!9073 = !DILocation(line: 216, column: 8, scope: !9068)
!9074 = !DILocation(line: 216, column: 13, scope: !9068)
!9075 = !DILocation(line: 217, column: 1, scope: !9068)
!9076 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1200, file: !1200, line: 243, type: !9051, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9077)
!9077 = !{!9078}
!9078 = !DILocalVariable(name: "list", arg: 1, scope: !9076, file: !1200, line: 243, type: !8989)
!9079 = !DILocation(line: 0, scope: !9076)
!9080 = !DILocation(line: 245, column: 15, scope: !9076)
!9081 = !DILocation(line: 245, column: 2, scope: !9076)
!9082 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1200, file: !1200, line: 219, type: !9039, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9083)
!9083 = !{!9084, !9085}
!9084 = !DILocalVariable(name: "list", arg: 1, scope: !9082, file: !1200, line: 219, type: !8989)
!9085 = !DILocalVariable(name: "node", arg: 2, scope: !9082, file: !1200, line: 219, type: !1372)
!9086 = !DILocation(line: 0, scope: !9082)
!9087 = !DILocation(line: 221, column: 8, scope: !9082)
!9088 = !DILocation(line: 221, column: 13, scope: !9082)
!9089 = !DILocation(line: 222, column: 1, scope: !9082)
!9090 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1200, file: !1200, line: 401, type: !9091, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9093)
!9091 = !DISubroutineType(types: !9092)
!9092 = !{null, !8989, !1372, !1372}
!9093 = !{!9094, !9095, !9096}
!9094 = !DILocalVariable(name: "list", arg: 1, scope: !9090, file: !1200, line: 401, type: !8989)
!9095 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9090, file: !1200, line: 401, type: !1372)
!9096 = !DILocalVariable(name: "node", arg: 3, scope: !9090, file: !1200, line: 401, type: !1372)
!9097 = !DILocation(line: 0, scope: !9090)
!9098 = !DILocation(line: 401, column: 1, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9090, file: !1200, line: 401, column: 1)
!9100 = !DILocation(line: 0, scope: !9099)
!9101 = !DILocation(line: 401, column: 1, scope: !9090)
!9102 = !DILocation(line: 401, column: 1, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9099, file: !1200, line: 401, column: 1)
!9104 = !DILocation(line: 401, column: 1, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9103, file: !1200, line: 401, column: 1)
!9106 = !DILocation(line: 401, column: 1, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9105, file: !1200, line: 401, column: 1)
!9108 = !DILocation(line: 401, column: 1, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9099, file: !1200, line: 401, column: 1)
!9110 = !DILocation(line: 401, column: 1, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9109, file: !1200, line: 401, column: 1)
!9112 = !DILocation(line: 401, column: 1, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9111, file: !1200, line: 401, column: 1)
!9114 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1200, file: !1200, line: 285, type: !9115, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9117)
!9115 = !DISubroutineType(types: !9116)
!9116 = !{!1372, !1372}
!9117 = !{!9118}
!9118 = !DILocalVariable(name: "node", arg: 1, scope: !9114, file: !1200, line: 285, type: !1372)
!9119 = !DILocation(line: 0, scope: !9114)
!9120 = !DILocation(line: 285, column: 1, scope: !9114)
!9121 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1200, file: !1200, line: 274, type: !9115, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9122)
!9122 = !{!9123}
!9123 = !DILocalVariable(name: "node", arg: 1, scope: !9121, file: !1200, line: 274, type: !1372)
!9124 = !DILocation(line: 0, scope: !9121)
!9125 = !DILocation(line: 274, column: 1, scope: !9121)
!9126 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1200, file: !1200, line: 204, type: !9115, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9127)
!9127 = !{!9128}
!9128 = !DILocalVariable(name: "node", arg: 1, scope: !9126, file: !1200, line: 204, type: !1372)
!9129 = !DILocation(line: 0, scope: !9126)
!9130 = !DILocation(line: 206, column: 15, scope: !9126)
!9131 = !DILocation(line: 206, column: 2, scope: !9126)
!9132 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1293, file: !1293, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9133)
!9133 = !{!9134, !9135, !9136}
!9134 = !DILocalVariable(name: "pin", arg: 1, scope: !9132, file: !1293, line: 342, type: !103)
!9135 = !DILocalVariable(name: "line", scope: !9132, file: !1293, line: 344, type: !121)
!9136 = !DILocalVariable(name: "port", scope: !9132, file: !1293, line: 345, type: !103)
!9137 = !DILocation(line: 0, scope: !9132)
!9138 = !DILocation(line: 344, column: 18, scope: !9132)
!9139 = !{i32 983040, i32 0}
!9140 = !DILocation(line: 356, column: 9, scope: !9132)
!9141 = !DILocation(line: 370, column: 2, scope: !9132)
!9142 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1293, file: !1293, line: 37, type: !729, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9143)
!9143 = !{!9144, !9145, !9146}
!9144 = !DILocalVariable(name: "line", arg: 1, scope: !9142, file: !1293, line: 37, type: !103)
!9145 = !DILocalVariable(name: "arg", arg: 2, scope: !9142, file: !1293, line: 37, type: !102)
!9146 = !DILocalVariable(name: "data", scope: !9142, file: !1293, line: 39, type: !8937)
!9147 = !DILocation(line: 0, scope: !9142)
!9148 = !DILocation(line: 41, column: 29, scope: !9142)
!9149 = !DILocation(line: 41, column: 39, scope: !9142)
!9150 = !DILocation(line: 41, column: 44, scope: !9142)
!9151 = !DILocation(line: 41, column: 2, scope: !9142)
!9152 = !DILocation(line: 42, column: 1, scope: !9142)
!9153 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1293, file: !1293, line: 376, type: !9154, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9156)
!9154 = !DISubroutineType(types: !9155)
!9155 = !{!103, !103, !103}
!9156 = !{!9157, !9158, !9159, !9161, !9162}
!9157 = !DILocalVariable(name: "port", arg: 1, scope: !9153, file: !1293, line: 376, type: !103)
!9158 = !DILocalVariable(name: "pin", arg: 2, scope: !9153, file: !1293, line: 376, type: !103)
!9159 = !DILocalVariable(name: "clk", scope: !9153, file: !1293, line: 386, type: !9160)
!9160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1153)
!9161 = !DILocalVariable(name: "pclken", scope: !9153, file: !1293, line: 387, type: !1419)
!9162 = !DILocalVariable(name: "ret", scope: !9153, file: !1293, line: 396, type: !103)
!9163 = !DILocation(line: 0, scope: !9153)
!9164 = !DILocation(line: 387, column: 2, scope: !9153)
!9165 = !DILocation(line: 387, column: 22, scope: !9153)
!9166 = !DILocation(line: 399, column: 8, scope: !9153)
!9167 = !DILocation(line: 400, column: 10, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9153, file: !1293, line: 400, column: 6)
!9169 = !DILocation(line: 400, column: 6, scope: !9153)
!9170 = !DILocation(line: 405, column: 2, scope: !9153)
!9171 = !DILocation(line: 407, column: 2, scope: !9153)
!9172 = !DILocation(line: 408, column: 1, scope: !9153)
!9173 = distinct !DISubprogram(name: "clock_control_on", scope: !818, file: !818, line: 123, type: !1258, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9174)
!9174 = !{!9175, !9176, !9177}
!9175 = !DILocalVariable(name: "dev", arg: 1, scope: !9173, file: !818, line: 123, type: !1153)
!9176 = !DILocalVariable(name: "sys", arg: 2, scope: !9173, file: !818, line: 124, type: !910)
!9177 = !DILocalVariable(name: "api", scope: !9173, file: !818, line: 126, type: !1251)
!9178 = !DILocation(line: 0, scope: !9173)
!9179 = !DILocation(line: 127, column: 49, scope: !9173)
!9180 = !DILocation(line: 129, column: 14, scope: !9173)
!9181 = !DILocation(line: 129, column: 9, scope: !9173)
!9182 = !DILocation(line: 129, column: 2, scope: !9173)
!9183 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1293, file: !1293, line: 311, type: !7746, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9184)
!9184 = !{!9185, !9186, !9187}
!9185 = !DILocalVariable(name: "port", arg: 1, scope: !9183, file: !1293, line: 311, type: !103)
!9186 = !DILocalVariable(name: "pin", arg: 2, scope: !9183, file: !1293, line: 311, type: !103)
!9187 = !DILocalVariable(name: "line", scope: !9183, file: !1293, line: 313, type: !121)
!9188 = !DILocation(line: 0, scope: !9183)
!9189 = !DILocation(line: 313, column: 18, scope: !9183)
!9190 = !DILocation(line: 337, column: 2, scope: !9183)
!9191 = !DILocation(line: 340, column: 1, scope: !9183)
!9192 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1293, file: !1293, line: 295, type: !9193, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9195)
!9193 = !DISubroutineType(types: !9194)
!9194 = !{!121, !103}
!9195 = !{!9196}
!9196 = !DILocalVariable(name: "pin", arg: 1, scope: !9192, file: !1293, line: 295, type: !103)
!9197 = !DILocation(line: 0, scope: !9192)
!9198 = !DILocation(line: 307, column: 46, scope: !9192)
!9199 = !DILocation(line: 307, column: 27, scope: !9192)
!9200 = !DILocation(line: 307, column: 32, scope: !9192)
!9201 = !DILocation(line: 307, column: 14, scope: !9192)
!9202 = !DILocation(line: 307, column: 39, scope: !9192)
!9203 = !DILocation(line: 307, column: 2, scope: !9192)
!9204 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5759, file: !5759, line: 671, type: !9205, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9207)
!9205 = !DISubroutineType(types: !9206)
!9206 = !{null, !121, !121}
!9207 = !{!9208, !9209}
!9208 = !DILocalVariable(name: "Port", arg: 1, scope: !9204, file: !5759, line: 671, type: !121)
!9209 = !DILocalVariable(name: "Line", arg: 2, scope: !9204, file: !5759, line: 671, type: !121)
!9210 = !DILocation(line: 0, scope: !9204)
!9211 = !DILocation(line: 673, column: 3, scope: !9204)
!9212 = !DILocalVariable(name: "value", arg: 1, scope: !9213, file: !5953, line: 373, type: !121)
!9213 = distinct !DISubprogram(name: "__RBIT", scope: !5953, file: !5953, line: 373, type: !6960, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9214)
!9214 = !{!9212, !9215}
!9215 = !DILocalVariable(name: "result", scope: !9213, file: !5953, line: 375, type: !121)
!9216 = !DILocation(line: 0, scope: !9213, inlinedAt: !9217)
!9217 = distinct !DILocation(line: 673, column: 3, scope: !9204)
!9218 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9217)
!9219 = !{i64 3545758}
!9220 = !DILocalVariable(name: "value", arg: 1, scope: !9221, file: !5953, line: 403, type: !121)
!9221 = distinct !DISubprogram(name: "__CLZ", scope: !5953, file: !5953, line: 403, type: !9222, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9224)
!9222 = !DISubroutineType(types: !9223)
!9223 = !{!154, !121}
!9224 = !{!9220}
!9225 = !DILocation(line: 0, scope: !9221, inlinedAt: !9226)
!9226 = distinct !DILocation(line: 673, column: 3, scope: !9204)
!9227 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9226)
!9228 = !DILocation(line: 674, column: 1, scope: !9204)
!9229 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8986, file: !8986, line: 69, type: !9230, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9232)
!9230 = !DISubroutineType(types: !9231)
!9231 = !{null, !8989, !1153, !121}
!9232 = !{!9233, !9234, !9235, !9236, !9237}
!9233 = !DILocalVariable(name: "list", arg: 1, scope: !9229, file: !8986, line: 69, type: !8989)
!9234 = !DILocalVariable(name: "port", arg: 2, scope: !9229, file: !8986, line: 70, type: !1153)
!9235 = !DILocalVariable(name: "pins", arg: 3, scope: !9229, file: !8986, line: 71, type: !121)
!9236 = !DILocalVariable(name: "cb", scope: !9229, file: !8986, line: 73, type: !1195)
!9237 = !DILocalVariable(name: "tmp", scope: !9229, file: !8986, line: 73, type: !1195)
!9238 = !DILocation(line: 0, scope: !9229)
!9239 = !DILocation(line: 75, column: 2, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9229, file: !8986, line: 75, column: 2)
!9241 = !DILocation(line: 0, scope: !9240)
!9242 = !DILocation(line: 76, column: 11, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9244, file: !8986, line: 76, column: 7)
!9244 = distinct !DILexicalBlock(scope: !9245, file: !8986, line: 75, column: 57)
!9245 = distinct !DILexicalBlock(scope: !9240, file: !8986, line: 75, column: 2)
!9246 = !DILocation(line: 76, column: 20, scope: !9243)
!9247 = !DILocation(line: 76, column: 7, scope: !9244)
!9248 = !DILocation(line: 78, column: 8, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9243, file: !8986, line: 76, column: 28)
!9250 = !DILocation(line: 78, column: 4, scope: !9249)
!9251 = !DILocation(line: 79, column: 3, scope: !9249)
!9252 = !DILocation(line: 75, column: 2, scope: !9245)
!9253 = !DILocation(line: 81, column: 1, scope: !9229)
!9254 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5759, file: !5759, line: 710, type: !6960, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9255)
!9255 = !{!9256}
!9256 = !DILocalVariable(name: "Line", arg: 1, scope: !9254, file: !5759, line: 710, type: !121)
!9257 = !DILocation(line: 0, scope: !9254)
!9258 = !DILocation(line: 712, column: 21, scope: !9254)
!9259 = !DILocation(line: 0, scope: !9213, inlinedAt: !9260)
!9260 = distinct !DILocation(line: 712, column: 76, scope: !9254)
!9261 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9260)
!9262 = !DILocation(line: 0, scope: !9221, inlinedAt: !9263)
!9263 = distinct !DILocation(line: 712, column: 76, scope: !9254)
!9264 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9263)
!9265 = !DILocation(line: 712, column: 73, scope: !9254)
!9266 = !DILocation(line: 712, column: 3, scope: !9254)
!9267 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9268, file: !9268, line: 910, type: !9269, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9271)
!9268 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9269 = !DISubroutineType(types: !9270)
!9270 = !{null, !1226, !121}
!9271 = !{!9272, !9273}
!9272 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9267, file: !9268, line: 910, type: !1226)
!9273 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9267, file: !9268, line: 910, type: !121)
!9274 = !DILocation(line: 0, scope: !9267)
!9275 = !DILocation(line: 912, column: 3, scope: !9267)
!9276 = !DILocation(line: 913, column: 1, scope: !9267)
!9277 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9268, file: !9268, line: 823, type: !9278, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9280)
!9278 = !DISubroutineType(types: !9279)
!9279 = !{!121, !1226}
!9280 = !{!9281}
!9281 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9277, file: !9268, line: 823, type: !1226)
!9282 = !DILocation(line: 0, scope: !9277)
!9283 = !DILocation(line: 825, column: 21, scope: !9277)
!9284 = !DILocation(line: 825, column: 3, scope: !9277)
!9285 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9268, file: !9268, line: 812, type: !9269, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9286)
!9286 = !{!9287, !9288}
!9287 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9285, file: !9268, line: 812, type: !1226)
!9288 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9285, file: !9268, line: 812, type: !121)
!9289 = !DILocation(line: 0, scope: !9285)
!9290 = !DILocation(line: 814, column: 3, scope: !9285)
!9291 = !DILocation(line: 815, column: 1, scope: !9285)
!9292 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9268, file: !9268, line: 771, type: !9278, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9293)
!9293 = !{!9294}
!9294 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9292, file: !9268, line: 771, type: !1226)
!9295 = !DILocation(line: 0, scope: !9292)
!9296 = !DILocation(line: 773, column: 21, scope: !9292)
!9297 = !DILocation(line: 773, column: 3, scope: !9292)
!9298 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1293, file: !1293, line: 47, type: !9299, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9301)
!9299 = !DISubroutineType(types: !9300)
!9300 = !{!103, !1169, !2594}
!9301 = !{!9302, !9303}
!9302 = !DILocalVariable(name: "flags", arg: 1, scope: !9298, file: !1293, line: 47, type: !1169)
!9303 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9298, file: !1293, line: 47, type: !2594)
!9304 = !DILocation(line: 0, scope: !9298)
!9305 = !DILocation(line: 50, column: 13, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9298, file: !1293, line: 50, column: 6)
!9307 = !DILocation(line: 50, column: 28, scope: !9306)
!9308 = !DILocation(line: 50, column: 6, scope: !9298)
!9309 = !DILocation(line: 53, column: 11, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9306, file: !1293, line: 50, column: 34)
!9311 = !DILocation(line: 55, column: 14, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9310, file: !1293, line: 55, column: 7)
!9313 = !DILocation(line: 55, column: 35, scope: !9312)
!9314 = !DILocation(line: 55, column: 7, scope: !9310)
!9315 = !DILocation(line: 56, column: 14, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9317, file: !1293, line: 56, column: 8)
!9317 = distinct !DILexicalBlock(scope: !9312, file: !1293, line: 55, column: 41)
!9318 = !DILocation(line: 56, column: 8, scope: !9317)
!9319 = !DILocation(line: 0, scope: !9312)
!9320 = !DILocation(line: 66, column: 14, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9310, file: !1293, line: 66, column: 7)
!9322 = !DILocation(line: 66, column: 30, scope: !9321)
!9323 = !DILocation(line: 66, column: 7, scope: !9310)
!9324 = !DILocation(line: 67, column: 12, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9321, file: !1293, line: 66, column: 36)
!9326 = !DILocation(line: 68, column: 3, scope: !9325)
!9327 = !DILocation(line: 68, column: 21, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9321, file: !1293, line: 68, column: 14)
!9329 = !DILocation(line: 68, column: 39, scope: !9328)
!9330 = !DILocation(line: 68, column: 14, scope: !9321)
!9331 = !DILocation(line: 69, column: 12, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9328, file: !1293, line: 68, column: 45)
!9333 = !DILocation(line: 70, column: 3, scope: !9332)
!9334 = !DILocation(line: 72, column: 21, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9306, file: !1293, line: 72, column: 14)
!9336 = !DILocation(line: 72, column: 35, scope: !9335)
!9337 = !DILocation(line: 72, column: 14, scope: !9306)
!9338 = !DILocation(line: 77, column: 14, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9340, file: !1293, line: 77, column: 7)
!9340 = distinct !DILexicalBlock(scope: !9335, file: !1293, line: 72, column: 41)
!9341 = !DILocation(line: 77, column: 30, scope: !9339)
!9342 = !DILocation(line: 77, column: 7, scope: !9340)
!9343 = !DILocation(line: 0, scope: !9306)
!9344 = !DILocation(line: 90, column: 1, scope: !9298)
!9345 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1293, file: !1293, line: 157, type: !9346, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9348)
!9346 = !DISubroutineType(types: !9347)
!9347 = !{null, !1153, !103, !103, !103}
!9348 = !{!9349, !9350, !9351, !9352, !9353, !9354, !9355, !9356, !9357, !9358, !9359}
!9349 = !DILocalVariable(name: "dev", arg: 1, scope: !9345, file: !1293, line: 157, type: !1153)
!9350 = !DILocalVariable(name: "pin", arg: 2, scope: !9345, file: !1293, line: 157, type: !103)
!9351 = !DILocalVariable(name: "conf", arg: 3, scope: !9345, file: !1293, line: 158, type: !103)
!9352 = !DILocalVariable(name: "func", arg: 4, scope: !9345, file: !1293, line: 158, type: !103)
!9353 = !DILocalVariable(name: "cfg", scope: !9345, file: !1293, line: 160, type: !8870)
!9354 = !DILocalVariable(name: "gpio", scope: !9345, file: !1293, line: 161, type: !1226)
!9355 = !DILocalVariable(name: "pin_ll", scope: !9345, file: !1293, line: 163, type: !103)
!9356 = !DILocalVariable(name: "mode", scope: !9345, file: !1293, line: 227, type: !32)
!9357 = !DILocalVariable(name: "otype", scope: !9345, file: !1293, line: 227, type: !32)
!9358 = !DILocalVariable(name: "ospeed", scope: !9345, file: !1293, line: 227, type: !32)
!9359 = !DILocalVariable(name: "pupd", scope: !9345, file: !1293, line: 227, type: !32)
!9360 = !DILocation(line: 0, scope: !9345)
!9361 = !DILocation(line: 160, column: 45, scope: !9345)
!9362 = !DILocation(line: 161, column: 44, scope: !9345)
!9363 = !DILocation(line: 163, column: 15, scope: !9345)
!9364 = !DILocation(line: 229, column: 14, scope: !9345)
!9365 = !DILocation(line: 246, column: 47, scope: !9345)
!9366 = !DILocation(line: 246, column: 2, scope: !9345)
!9367 = !DILocation(line: 248, column: 43, scope: !9345)
!9368 = !DILocation(line: 248, column: 2, scope: !9345)
!9369 = !DILocation(line: 250, column: 40, scope: !9345)
!9370 = !DILocation(line: 250, column: 2, scope: !9345)
!9371 = !DILocation(line: 252, column: 11, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9345, file: !1293, line: 252, column: 6)
!9373 = !DILocation(line: 252, column: 6, scope: !9345)
!9374 = !DILocation(line: 253, column: 11, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9376, file: !1293, line: 253, column: 7)
!9376 = distinct !DILexicalBlock(scope: !9372, file: !1293, line: 252, column: 36)
!9377 = !DILocation(line: 253, column: 7, scope: !9376)
!9378 = !DILocation(line: 254, column: 4, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9375, file: !1293, line: 253, column: 16)
!9380 = !DILocation(line: 255, column: 3, scope: !9379)
!9381 = !DILocation(line: 256, column: 4, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9375, file: !1293, line: 255, column: 10)
!9383 = !DILocation(line: 260, column: 40, scope: !9345)
!9384 = !DILocation(line: 260, column: 2, scope: !9345)
!9385 = !DILocation(line: 265, column: 1, scope: !9345)
!9386 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1293, file: !1293, line: 137, type: !9193, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9387)
!9387 = !{!9388, !9389}
!9388 = !DILocalVariable(name: "pin", arg: 1, scope: !9386, file: !1293, line: 137, type: !103)
!9389 = !DILocalVariable(name: "pinval", scope: !9386, file: !1293, line: 139, type: !121)
!9390 = !DILocation(line: 0, scope: !9386)
!9391 = !DILocation(line: 149, column: 13, scope: !9386)
!9392 = !DILocation(line: 151, column: 2, scope: !9386)
!9393 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9268, file: !9268, line: 342, type: !9394, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9396)
!9394 = !DISubroutineType(types: !9395)
!9395 = !{null, !1226, !121, !121}
!9396 = !{!9397, !9398, !9399}
!9397 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9393, file: !9268, line: 342, type: !1226)
!9398 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9393, file: !9268, line: 342, type: !121)
!9399 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9393, file: !9268, line: 342, type: !121)
!9400 = !DILocation(line: 0, scope: !9393)
!9401 = !DILocation(line: 344, column: 3, scope: !9393)
!9402 = !DILocation(line: 345, column: 1, scope: !9393)
!9403 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9268, file: !9268, line: 413, type: !9394, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9404)
!9404 = !{!9405, !9406, !9407}
!9405 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9403, file: !9268, line: 413, type: !1226)
!9406 = !DILocalVariable(name: "Pin", arg: 2, scope: !9403, file: !9268, line: 413, type: !121)
!9407 = !DILocalVariable(name: "Speed", arg: 3, scope: !9403, file: !9268, line: 413, type: !121)
!9408 = !DILocation(line: 0, scope: !9403)
!9409 = !DILocation(line: 415, column: 3, scope: !9403)
!9410 = !DILocation(line: 0, scope: !9213, inlinedAt: !9411)
!9411 = distinct !DILocation(line: 415, column: 3, scope: !9403)
!9412 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9411)
!9413 = !DILocation(line: 0, scope: !9221, inlinedAt: !9414)
!9414 = distinct !DILocation(line: 415, column: 3, scope: !9403)
!9415 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9414)
!9416 = !DILocation(line: 0, scope: !9213, inlinedAt: !9417)
!9417 = distinct !DILocation(line: 415, column: 3, scope: !9403)
!9418 = !DILocation(line: 0, scope: !9221, inlinedAt: !9419)
!9419 = distinct !DILocation(line: 415, column: 3, scope: !9403)
!9420 = !DILocation(line: 417, column: 1, scope: !9403)
!9421 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9268, file: !9268, line: 484, type: !9394, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9422)
!9422 = !{!9423, !9424, !9425}
!9423 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9421, file: !9268, line: 484, type: !1226)
!9424 = !DILocalVariable(name: "Pin", arg: 2, scope: !9421, file: !9268, line: 484, type: !121)
!9425 = !DILocalVariable(name: "Pull", arg: 3, scope: !9421, file: !9268, line: 484, type: !121)
!9426 = !DILocation(line: 0, scope: !9421)
!9427 = !DILocation(line: 486, column: 3, scope: !9421)
!9428 = !DILocation(line: 0, scope: !9213, inlinedAt: !9429)
!9429 = distinct !DILocation(line: 486, column: 3, scope: !9421)
!9430 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9429)
!9431 = !DILocation(line: 0, scope: !9221, inlinedAt: !9432)
!9432 = distinct !DILocation(line: 486, column: 3, scope: !9421)
!9433 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9432)
!9434 = !DILocation(line: 0, scope: !9213, inlinedAt: !9435)
!9435 = distinct !DILocation(line: 486, column: 3, scope: !9421)
!9436 = !DILocation(line: 0, scope: !9221, inlinedAt: !9437)
!9437 = distinct !DILocation(line: 486, column: 3, scope: !9421)
!9438 = !DILocation(line: 487, column: 1, scope: !9421)
!9439 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9268, file: !9268, line: 556, type: !9394, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9440)
!9440 = !{!9441, !9442, !9443}
!9441 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9439, file: !9268, line: 556, type: !1226)
!9442 = !DILocalVariable(name: "Pin", arg: 2, scope: !9439, file: !9268, line: 556, type: !121)
!9443 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9439, file: !9268, line: 556, type: !121)
!9444 = !DILocation(line: 0, scope: !9439)
!9445 = !DILocation(line: 558, column: 3, scope: !9439)
!9446 = !DILocation(line: 0, scope: !9213, inlinedAt: !9447)
!9447 = distinct !DILocation(line: 558, column: 3, scope: !9439)
!9448 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9447)
!9449 = !DILocation(line: 0, scope: !9221, inlinedAt: !9450)
!9450 = distinct !DILocation(line: 558, column: 3, scope: !9439)
!9451 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9450)
!9452 = !DILocation(line: 0, scope: !9213, inlinedAt: !9453)
!9453 = distinct !DILocation(line: 558, column: 3, scope: !9439)
!9454 = !DILocation(line: 0, scope: !9221, inlinedAt: !9455)
!9455 = distinct !DILocation(line: 558, column: 3, scope: !9439)
!9456 = !DILocation(line: 560, column: 1, scope: !9439)
!9457 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9268, file: !9268, line: 633, type: !9394, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9458)
!9458 = !{!9459, !9460, !9461}
!9459 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9457, file: !9268, line: 633, type: !1226)
!9460 = !DILocalVariable(name: "Pin", arg: 2, scope: !9457, file: !9268, line: 633, type: !121)
!9461 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9457, file: !9268, line: 633, type: !121)
!9462 = !DILocation(line: 0, scope: !9457)
!9463 = !DILocation(line: 635, column: 3, scope: !9457)
!9464 = !DILocation(line: 0, scope: !9213, inlinedAt: !9465)
!9465 = distinct !DILocation(line: 635, column: 3, scope: !9457)
!9466 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9465)
!9467 = !DILocation(line: 0, scope: !9221, inlinedAt: !9468)
!9468 = distinct !DILocation(line: 635, column: 3, scope: !9457)
!9469 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9468)
!9470 = !DILocation(line: 0, scope: !9213, inlinedAt: !9471)
!9471 = distinct !DILocation(line: 635, column: 3, scope: !9457)
!9472 = !DILocation(line: 0, scope: !9221, inlinedAt: !9473)
!9473 = distinct !DILocation(line: 635, column: 3, scope: !9457)
!9474 = !DILocation(line: 637, column: 1, scope: !9457)
!9475 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9268, file: !9268, line: 273, type: !9394, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9476)
!9476 = !{!9477, !9478, !9479}
!9477 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9475, file: !9268, line: 273, type: !1226)
!9478 = !DILocalVariable(name: "Pin", arg: 2, scope: !9475, file: !9268, line: 273, type: !121)
!9479 = !DILocalVariable(name: "Mode", arg: 3, scope: !9475, file: !9268, line: 273, type: !121)
!9480 = !DILocation(line: 0, scope: !9475)
!9481 = !DILocation(line: 275, column: 3, scope: !9475)
!9482 = !DILocation(line: 0, scope: !9213, inlinedAt: !9483)
!9483 = distinct !DILocation(line: 275, column: 3, scope: !9475)
!9484 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9483)
!9485 = !DILocation(line: 0, scope: !9221, inlinedAt: !9486)
!9486 = distinct !DILocation(line: 275, column: 3, scope: !9475)
!9487 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9486)
!9488 = !DILocation(line: 0, scope: !9213, inlinedAt: !9489)
!9489 = distinct !DILocation(line: 275, column: 3, scope: !9475)
!9490 = !DILocation(line: 0, scope: !9221, inlinedAt: !9491)
!9491 = distinct !DILocation(line: 275, column: 3, scope: !9475)
!9492 = !DILocation(line: 276, column: 1, scope: !9475)
!9493 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1293, file: !1293, line: 698, type: !1306, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9494)
!9494 = !{!9495, !9496, !9497}
!9495 = !DILocalVariable(name: "dev", arg: 1, scope: !9493, file: !1293, line: 698, type: !1153)
!9496 = !DILocalVariable(name: "data", scope: !9493, file: !1293, line: 700, type: !8937)
!9497 = !DILocalVariable(name: "ret", scope: !9493, file: !1293, line: 701, type: !103)
!9498 = !DILocation(line: 0, scope: !9493)
!9499 = !DILocation(line: 700, column: 38, scope: !9493)
!9500 = !DILocation(line: 703, column: 8, scope: !9493)
!9501 = !DILocation(line: 703, column: 12, scope: !9493)
!9502 = !DILocation(line: 705, column: 7, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9493, file: !1293, line: 705, column: 6)
!9504 = !DILocation(line: 705, column: 6, scope: !9493)
!9505 = !DILocation(line: 722, column: 8, scope: !9493)
!9506 = !DILocation(line: 723, column: 10, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9493, file: !1293, line: 723, column: 6)
!9508 = !DILocation(line: 723, column: 6, scope: !9493)
!9509 = !DILocation(line: 731, column: 1, scope: !9493)
!9510 = distinct !DISubprogram(name: "device_is_ready", scope: !8161, file: !8161, line: 47, type: !9511, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9513)
!9511 = !DISubroutineType(types: !9512)
!9512 = !{!157, !1153}
!9513 = !{!9514}
!9514 = !DILocalVariable(name: "dev", arg: 1, scope: !9510, file: !8161, line: 47, type: !1153)
!9515 = !DILocation(line: 0, scope: !9510)
!9516 = !DILocation(line: 55, column: 2, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9510, file: !8161, line: 55, column: 2)
!9518 = !{i64 2155034732}
!9519 = !DILocation(line: 56, column: 9, scope: !9510)
!9520 = !DILocation(line: 56, column: 2, scope: !9510)
!9521 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1293, file: !1293, line: 270, type: !9522, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9524)
!9522 = !DISubroutineType(types: !9523)
!9523 = !{!103, !1153, !157}
!9524 = !{!9525, !9526, !9527, !9528, !9529}
!9525 = !DILocalVariable(name: "dev", arg: 1, scope: !9521, file: !1293, line: 270, type: !1153)
!9526 = !DILocalVariable(name: "on", arg: 2, scope: !9521, file: !1293, line: 270, type: !157)
!9527 = !DILocalVariable(name: "cfg", scope: !9521, file: !1293, line: 272, type: !8870)
!9528 = !DILocalVariable(name: "ret", scope: !9521, file: !1293, line: 273, type: !103)
!9529 = !DILocalVariable(name: "clk", scope: !9521, file: !1293, line: 278, type: !9160)
!9530 = !DILocation(line: 0, scope: !9521)
!9531 = !DILocation(line: 272, column: 45, scope: !9521)
!9532 = !DILocation(line: 282, column: 38, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9534, file: !1293, line: 280, column: 10)
!9534 = distinct !DILexicalBlock(scope: !9521, file: !1293, line: 280, column: 6)
!9535 = !DILocation(line: 282, column: 6, scope: !9533)
!9536 = !DILocation(line: 281, column: 9, scope: !9533)
!9537 = !DILocation(line: 293, column: 1, scope: !9521)
!9538 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9511, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9539)
!9539 = !{!9540}
!9540 = !DILocalVariable(name: "dev", arg: 1, scope: !9538, file: !141, line: 730, type: !1153)
!9541 = !DILocation(line: 0, scope: !9538)
!9542 = !DILocation(line: 732, column: 9, scope: !9538)
!9543 = !DILocation(line: 732, column: 2, scope: !9538)
!9544 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1293, file: !1293, line: 496, type: !9545, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1124, retainedNodes: !9547)
!9545 = !DISubroutineType(types: !9546)
!9546 = !{!103, !1153, !103, !103, !103}
!9547 = !{!9548, !9549, !9550, !9551, !9552, !9553}
!9548 = !DILocalVariable(name: "dev", arg: 1, scope: !9544, file: !1293, line: 496, type: !1153)
!9549 = !DILocalVariable(name: "pin", arg: 2, scope: !9544, file: !1293, line: 496, type: !103)
!9550 = !DILocalVariable(name: "conf", arg: 3, scope: !9544, file: !1293, line: 496, type: !103)
!9551 = !DILocalVariable(name: "func", arg: 4, scope: !9544, file: !1293, line: 496, type: !103)
!9552 = !DILocalVariable(name: "ret", scope: !9544, file: !1293, line: 498, type: !103)
!9553 = !DILocalVariable(name: "gpio_out", scope: !9554, file: !1293, line: 508, type: !121)
!9554 = distinct !DILexicalBlock(scope: !9555, file: !1293, line: 507, column: 27)
!9555 = distinct !DILexicalBlock(scope: !9544, file: !1293, line: 507, column: 6)
!9556 = !DILocation(line: 0, scope: !9544)
!9557 = !DILocation(line: 505, column: 2, scope: !9544)
!9558 = !DILocation(line: 507, column: 11, scope: !9555)
!9559 = !DILocation(line: 507, column: 6, scope: !9544)
!9560 = !DILocation(line: 508, column: 28, scope: !9554)
!9561 = !DILocation(line: 0, scope: !9554)
!9562 = !DILocation(line: 510, column: 16, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9554, file: !1293, line: 510, column: 7)
!9564 = !DILocation(line: 0, scope: !9563)
!9565 = !DILocation(line: 510, column: 7, scope: !9554)
!9566 = !DILocation(line: 511, column: 4, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9563, file: !1293, line: 510, column: 32)
!9568 = !DILocation(line: 512, column: 3, scope: !9567)
!9569 = !DILocation(line: 513, column: 4, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !1293, line: 512, column: 39)
!9571 = distinct !DILexicalBlock(scope: !9563, file: !1293, line: 512, column: 14)
!9572 = !DILocation(line: 514, column: 3, scope: !9570)
!9573 = !DILocation(line: 518, column: 1, scope: !9544)
!9574 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1610, file: !1610, line: 526, type: !1481, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9575)
!9575 = !{!9576, !9577, !9578}
!9576 = !DILocalVariable(name: "dev", arg: 1, scope: !9574, file: !1610, line: 526, type: !1483)
!9577 = !DILocalVariable(name: "c", arg: 2, scope: !9574, file: !1610, line: 526, type: !230)
!9578 = !DILocalVariable(name: "config", scope: !9574, file: !1610, line: 528, type: !9579)
!9579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 32)
!9580 = !DILocation(line: 0, scope: !9574)
!9581 = !DILocation(line: 528, column: 48, scope: !9574)
!9582 = !DILocation(line: 531, column: 40, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9574, file: !1610, line: 531, column: 6)
!9584 = !DILocation(line: 531, column: 6, scope: !9583)
!9585 = !DILocation(line: 531, column: 6, scope: !9574)
!9586 = !DILocation(line: 532, column: 34, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9583, file: !1610, line: 531, column: 48)
!9588 = !DILocation(line: 532, column: 3, scope: !9587)
!9589 = !DILocation(line: 533, column: 2, scope: !9587)
!9590 = !DILocation(line: 539, column: 42, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9574, file: !1610, line: 539, column: 6)
!9592 = !DILocation(line: 539, column: 7, scope: !9591)
!9593 = !DILocation(line: 539, column: 6, scope: !9574)
!9594 = !DILocation(line: 543, column: 52, scope: !9574)
!9595 = !DILocation(line: 543, column: 22, scope: !9574)
!9596 = !DILocation(line: 543, column: 5, scope: !9574)
!9597 = !DILocation(line: 545, column: 2, scope: !9574)
!9598 = !DILocation(line: 546, column: 1, scope: !9574)
!9599 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1610, file: !1610, line: 548, type: !1500, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9600)
!9600 = !{!9601, !9602, !9603, !9604}
!9601 = !DILocalVariable(name: "dev", arg: 1, scope: !9599, file: !1610, line: 548, type: !1483)
!9602 = !DILocalVariable(name: "c", arg: 2, scope: !9599, file: !1610, line: 549, type: !155)
!9603 = !DILocalVariable(name: "config", scope: !9599, file: !1610, line: 551, type: !9579)
!9604 = !DILocalVariable(name: "key", scope: !9599, file: !1610, line: 555, type: !32)
!9605 = !DILocation(line: 0, scope: !9599)
!9606 = !DILocation(line: 551, column: 48, scope: !9599)
!9607 = !DILocation(line: 562, column: 2, scope: !9599)
!9608 = !DILocation(line: 563, column: 41, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9610, file: !1610, line: 563, column: 7)
!9610 = distinct !DILexicalBlock(scope: !9599, file: !1610, line: 562, column: 12)
!9611 = !DILocation(line: 563, column: 7, scope: !9609)
!9612 = !DILocation(line: 563, column: 7, scope: !9610)
!9613 = !DILocation(line: 55, column: 2, scope: !9614, inlinedAt: !9618)
!9614 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5738, file: !5738, line: 42, type: !5739, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9615)
!9615 = !{!9616, !9617}
!9616 = !DILocalVariable(name: "key", scope: !9614, file: !5738, line: 44, type: !32)
!9617 = !DILocalVariable(name: "tmp", scope: !9614, file: !5738, line: 53, type: !32)
!9618 = distinct !DILocation(line: 564, column: 10, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9609, file: !1610, line: 563, column: 49)
!9620 = !{i64 2271429}
!9621 = !DILocation(line: 0, scope: !9614, inlinedAt: !9618)
!9622 = !DILocation(line: 565, column: 42, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9619, file: !1610, line: 565, column: 8)
!9624 = !DILocation(line: 565, column: 8, scope: !9623)
!9625 = !DILocation(line: 565, column: 8, scope: !9619)
!9626 = !DILocalVariable(name: "key", arg: 1, scope: !9627, file: !5738, line: 84, type: !32)
!9627 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5738, file: !5738, line: 84, type: !5749, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9628)
!9628 = !{!9626}
!9629 = !DILocation(line: 0, scope: !9627, inlinedAt: !9630)
!9630 = distinct !DILocation(line: 568, column: 4, scope: !9619)
!9631 = !DILocation(line: 95, column: 2, scope: !9627, inlinedAt: !9630)
!9632 = !{i64 2272246}
!9633 = !DILocation(line: 569, column: 3, scope: !9619)
!9634 = distinct !{!9634, !9607, !9635}
!9635 = !DILocation(line: 570, column: 2, scope: !9599)
!9636 = !DILocation(line: 592, column: 33, scope: !9599)
!9637 = !DILocation(line: 592, column: 2, scope: !9599)
!9638 = !DILocation(line: 0, scope: !9627, inlinedAt: !9639)
!9639 = distinct !DILocation(line: 593, column: 2, scope: !9599)
!9640 = !DILocation(line: 95, column: 2, scope: !9627, inlinedAt: !9639)
!9641 = !DILocation(line: 594, column: 1, scope: !9599)
!9642 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1610, file: !1610, line: 596, type: !1504, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9643)
!9643 = !{!9644, !9645, !9646}
!9644 = !DILocalVariable(name: "dev", arg: 1, scope: !9642, file: !1610, line: 596, type: !1483)
!9645 = !DILocalVariable(name: "config", scope: !9642, file: !1610, line: 598, type: !9579)
!9646 = !DILocalVariable(name: "err", scope: !9642, file: !1610, line: 599, type: !121)
!9647 = !DILocation(line: 0, scope: !9642)
!9648 = !DILocation(line: 598, column: 48, scope: !9642)
!9649 = !DILocation(line: 606, column: 40, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9642, file: !1610, line: 606, column: 6)
!9651 = !DILocation(line: 606, column: 6, scope: !9650)
!9652 = !DILocation(line: 606, column: 6, scope: !9642)
!9653 = !DILocation(line: 610, column: 39, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9642, file: !1610, line: 610, column: 6)
!9655 = !DILocation(line: 610, column: 6, scope: !9654)
!9656 = !DILocation(line: 610, column: 6, scope: !9642)
!9657 = !DILocation(line: 614, column: 39, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9642, file: !1610, line: 614, column: 6)
!9659 = !DILocation(line: 614, column: 6, scope: !9658)
!9660 = !DILocation(line: 614, column: 6, scope: !9642)
!9661 = !DILocation(line: 619, column: 40, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9642, file: !1610, line: 619, column: 6)
!9663 = !DILocation(line: 619, column: 6, scope: !9662)
!9664 = !DILocation(line: 619, column: 6, scope: !9642)
!9665 = !DILocation(line: 623, column: 10, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9642, file: !1610, line: 623, column: 6)
!9667 = !DILocation(line: 623, column: 6, scope: !9642)
!9668 = !DILocation(line: 624, column: 34, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9666, file: !1610, line: 623, column: 24)
!9670 = !DILocation(line: 624, column: 3, scope: !9669)
!9671 = !DILocation(line: 625, column: 2, scope: !9669)
!9672 = !DILocation(line: 632, column: 10, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9642, file: !1610, line: 632, column: 6)
!9674 = !DILocation(line: 632, column: 6, scope: !9642)
!9675 = !DILocation(line: 633, column: 34, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9673, file: !1610, line: 632, column: 32)
!9677 = !DILocation(line: 633, column: 3, scope: !9676)
!9678 = !DILocation(line: 634, column: 2, scope: !9676)
!9679 = !DILocation(line: 636, column: 10, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9642, file: !1610, line: 636, column: 6)
!9681 = !DILocation(line: 636, column: 6, scope: !9642)
!9682 = !DILocation(line: 637, column: 33, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9680, file: !1610, line: 636, column: 31)
!9684 = !DILocation(line: 637, column: 3, scope: !9683)
!9685 = !DILocation(line: 638, column: 2, scope: !9683)
!9686 = !DILocation(line: 640, column: 10, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9642, file: !1610, line: 640, column: 6)
!9688 = !DILocation(line: 640, column: 6, scope: !9642)
!9689 = !DILocation(line: 641, column: 33, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9687, file: !1610, line: 640, column: 32)
!9691 = !DILocation(line: 641, column: 3, scope: !9690)
!9692 = !DILocation(line: 642, column: 2, scope: !9690)
!9693 = !DILocation(line: 646, column: 32, scope: !9642)
!9694 = !DILocation(line: 646, column: 2, scope: !9642)
!9695 = !DILocation(line: 648, column: 2, scope: !9642)
!9696 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1610, file: !1610, line: 419, type: !1508, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9697)
!9697 = !{!9698, !9699, !9700, !9701, !9703, !9704, !9705, !9706}
!9698 = !DILocalVariable(name: "dev", arg: 1, scope: !9696, file: !1610, line: 419, type: !1483)
!9699 = !DILocalVariable(name: "cfg", arg: 2, scope: !9696, file: !1610, line: 420, type: !1510)
!9700 = !DILocalVariable(name: "config", scope: !9696, file: !1610, line: 422, type: !9579)
!9701 = !DILocalVariable(name: "data", scope: !9696, file: !1610, line: 423, type: !9702)
!9702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!9703 = !DILocalVariable(name: "parity", scope: !9696, file: !1610, line: 424, type: !6221)
!9704 = !DILocalVariable(name: "stopbits", scope: !9696, file: !1610, line: 425, type: !6221)
!9705 = !DILocalVariable(name: "databits", scope: !9696, file: !1610, line: 426, type: !6221)
!9706 = !DILocalVariable(name: "flowctrl", scope: !9696, file: !1610, line: 428, type: !6221)
!9707 = !DILocation(line: 0, scope: !9696)
!9708 = !DILocation(line: 422, column: 48, scope: !9696)
!9709 = !DILocation(line: 423, column: 38, scope: !9696)
!9710 = !DILocation(line: 424, column: 56, scope: !9696)
!9711 = !DILocation(line: 424, column: 51, scope: !9696)
!9712 = !DILocation(line: 424, column: 26, scope: !9696)
!9713 = !DILocation(line: 425, column: 60, scope: !9696)
!9714 = !DILocation(line: 425, column: 55, scope: !9696)
!9715 = !DILocation(line: 425, column: 28, scope: !9696)
!9716 = !DILocation(line: 426, column: 60, scope: !9696)
!9717 = !DILocation(line: 426, column: 55, scope: !9696)
!9718 = !DILocation(line: 426, column: 28, scope: !9696)
!9719 = !DILocation(line: 428, column: 58, scope: !9696)
!9720 = !DILocation(line: 428, column: 53, scope: !9696)
!9721 = !DILocation(line: 428, column: 28, scope: !9696)
!9722 = !DILocation(line: 431, column: 44, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9696, file: !1610, line: 431, column: 6)
!9724 = !DILocation(line: 438, column: 22, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9696, file: !1610, line: 437, column: 6)
!9726 = !DILocation(line: 437, column: 6, scope: !9696)
!9727 = !DILocation(line: 448, column: 6, scope: !9696)
!9728 = !DILocation(line: 465, column: 47, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9696, file: !1610, line: 465, column: 6)
!9730 = !DILocation(line: 475, column: 21, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9696, file: !1610, line: 475, column: 6)
!9732 = !DILocation(line: 475, column: 6, scope: !9696)
!9733 = !DILocation(line: 476, column: 8, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !1610, line: 476, column: 7)
!9735 = distinct !DILexicalBlock(scope: !9731, file: !1610, line: 475, column: 49)
!9736 = !DILocation(line: 477, column: 34, scope: !9734)
!9737 = !DILocation(line: 476, column: 7, scope: !9735)
!9738 = !DILocation(line: 482, column: 27, scope: !9696)
!9739 = !DILocation(line: 482, column: 2, scope: !9696)
!9740 = !DILocation(line: 484, column: 16, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9696, file: !1610, line: 484, column: 6)
!9742 = !DILocation(line: 484, column: 13, scope: !9741)
!9743 = !DILocation(line: 484, column: 6, scope: !9696)
!9744 = !DILocation(line: 485, column: 3, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9741, file: !1610, line: 484, column: 44)
!9746 = !DILocation(line: 486, column: 2, scope: !9745)
!9747 = !DILocation(line: 488, column: 18, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9696, file: !1610, line: 488, column: 6)
!9749 = !DILocation(line: 488, column: 15, scope: !9748)
!9750 = !DILocation(line: 488, column: 6, scope: !9696)
!9751 = !DILocation(line: 489, column: 3, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9748, file: !1610, line: 488, column: 48)
!9753 = !DILocation(line: 490, column: 2, scope: !9752)
!9754 = !DILocation(line: 492, column: 18, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9696, file: !1610, line: 492, column: 6)
!9756 = !DILocation(line: 492, column: 15, scope: !9755)
!9757 = !DILocation(line: 492, column: 6, scope: !9696)
!9758 = !DILocation(line: 493, column: 3, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9755, file: !1610, line: 492, column: 48)
!9760 = !DILocation(line: 494, column: 2, scope: !9759)
!9761 = !DILocation(line: 496, column: 18, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9696, file: !1610, line: 496, column: 6)
!9763 = !DILocation(line: 496, column: 15, scope: !9762)
!9764 = !DILocation(line: 496, column: 6, scope: !9696)
!9765 = !DILocation(line: 497, column: 3, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9762, file: !1610, line: 496, column: 46)
!9767 = !DILocation(line: 498, column: 2, scope: !9766)
!9768 = !DILocation(line: 500, column: 11, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9696, file: !1610, line: 500, column: 6)
!9770 = !DILocation(line: 500, column: 29, scope: !9769)
!9771 = !DILocation(line: 500, column: 20, scope: !9769)
!9772 = !DILocation(line: 500, column: 6, scope: !9696)
!9773 = !DILocation(line: 501, column: 3, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9769, file: !1610, line: 500, column: 40)
!9775 = !DILocation(line: 502, column: 26, scope: !9774)
!9776 = !DILocation(line: 502, column: 19, scope: !9774)
!9777 = !DILocation(line: 503, column: 2, scope: !9774)
!9778 = !DILocation(line: 505, column: 26, scope: !9696)
!9779 = !DILocation(line: 505, column: 2, scope: !9696)
!9780 = !DILocation(line: 506, column: 2, scope: !9696)
!9781 = !DILocation(line: 507, column: 1, scope: !9696)
!9782 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1610, file: !1610, line: 509, type: !1521, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9783)
!9783 = !{!9784, !9785, !9786}
!9784 = !DILocalVariable(name: "dev", arg: 1, scope: !9782, file: !1610, line: 509, type: !1483)
!9785 = !DILocalVariable(name: "cfg", arg: 2, scope: !9782, file: !1610, line: 510, type: !1523)
!9786 = !DILocalVariable(name: "data", scope: !9782, file: !1610, line: 512, type: !9702)
!9787 = !DILocation(line: 0, scope: !9782)
!9788 = !DILocation(line: 512, column: 38, scope: !9782)
!9789 = !DILocation(line: 514, column: 24, scope: !9782)
!9790 = !DILocation(line: 514, column: 7, scope: !9782)
!9791 = !DILocation(line: 514, column: 16, scope: !9782)
!9792 = !DILocation(line: 515, column: 41, scope: !9782)
!9793 = !{i32 0, i32 1537}
!9794 = !DILocation(line: 515, column: 16, scope: !9782)
!9795 = !DILocation(line: 515, column: 7, scope: !9782)
!9796 = !DILocation(line: 515, column: 14, scope: !9782)
!9797 = !DILocation(line: 517, column: 3, scope: !9782)
!9798 = !{i32 0, i32 12289}
!9799 = !DILocation(line: 516, column: 19, scope: !9782)
!9800 = !DILocation(line: 516, column: 7, scope: !9782)
!9801 = !DILocation(line: 516, column: 17, scope: !9782)
!9802 = !DILocation(line: 519, column: 3, scope: !9782)
!9803 = !DILocation(line: 519, column: 33, scope: !9782)
!9804 = !DILocation(line: 518, column: 19, scope: !9782)
!9805 = !DILocation(line: 518, column: 7, scope: !9782)
!9806 = !DILocation(line: 518, column: 17, scope: !9782)
!9807 = !DILocation(line: 521, column: 3, scope: !9782)
!9808 = !{i32 0, i32 769}
!9809 = !DILocation(line: 520, column: 19, scope: !9782)
!9810 = !DILocation(line: 520, column: 7, scope: !9782)
!9811 = !DILocation(line: 520, column: 17, scope: !9782)
!9812 = !DILocation(line: 522, column: 2, scope: !9782)
!9813 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1610, file: !1610, line: 661, type: !1526, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9814)
!9814 = !{!9815, !9816, !9817, !9818, !9819, !9820}
!9815 = !DILocalVariable(name: "dev", arg: 1, scope: !9813, file: !1610, line: 661, type: !1483)
!9816 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9813, file: !1610, line: 662, type: !261)
!9817 = !DILocalVariable(name: "size", arg: 3, scope: !9813, file: !1610, line: 663, type: !103)
!9818 = !DILocalVariable(name: "config", scope: !9813, file: !1610, line: 665, type: !9579)
!9819 = !DILocalVariable(name: "num_tx", scope: !9813, file: !1610, line: 666, type: !154)
!9820 = !DILocalVariable(name: "key", scope: !9813, file: !1610, line: 667, type: !32)
!9821 = !DILocation(line: 0, scope: !9813)
!9822 = !DILocation(line: 665, column: 48, scope: !9813)
!9823 = !DILocation(line: 669, column: 41, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9813, file: !1610, line: 669, column: 6)
!9825 = !DILocation(line: 669, column: 7, scope: !9824)
!9826 = !DILocation(line: 669, column: 6, scope: !9813)
!9827 = !DILocation(line: 55, column: 2, scope: !9614, inlinedAt: !9828)
!9828 = distinct !DILocation(line: 674, column: 8, scope: !9813)
!9829 = !DILocation(line: 0, scope: !9614, inlinedAt: !9828)
!9830 = !DILocation(line: 676, column: 24, scope: !9813)
!9831 = !DILocation(line: 676, column: 29, scope: !9813)
!9832 = !DILocation(line: 677, column: 43, scope: !9813)
!9833 = !DILocation(line: 677, column: 9, scope: !9813)
!9834 = !DILocation(line: 676, column: 2, scope: !9813)
!9835 = !DILocation(line: 681, column: 34, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9813, file: !1610, line: 677, column: 51)
!9837 = !DILocation(line: 681, column: 55, scope: !9836)
!9838 = !DILocation(line: 681, column: 41, scope: !9836)
!9839 = !DILocation(line: 681, column: 3, scope: !9836)
!9840 = !DILocation(line: 676, column: 17, scope: !9813)
!9841 = distinct !{!9841, !9834, !9842}
!9842 = !DILocation(line: 682, column: 2, scope: !9813)
!9843 = !DILocation(line: 0, scope: !9627, inlinedAt: !9844)
!9844 = distinct !DILocation(line: 684, column: 2, scope: !9813)
!9845 = !DILocation(line: 95, column: 2, scope: !9627, inlinedAt: !9844)
!9846 = !DILocation(line: 686, column: 2, scope: !9813)
!9847 = !DILocation(line: 687, column: 1, scope: !9813)
!9848 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1610, file: !1610, line: 689, type: !1530, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9849)
!9849 = !{!9850, !9851, !9852, !9853, !9854}
!9850 = !DILocalVariable(name: "dev", arg: 1, scope: !9848, file: !1610, line: 689, type: !1483)
!9851 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9848, file: !1610, line: 689, type: !267)
!9852 = !DILocalVariable(name: "size", arg: 3, scope: !9848, file: !1610, line: 690, type: !268)
!9853 = !DILocalVariable(name: "config", scope: !9848, file: !1610, line: 692, type: !9579)
!9854 = !DILocalVariable(name: "num_rx", scope: !9848, file: !1610, line: 693, type: !154)
!9855 = !DILocation(line: 0, scope: !9848)
!9856 = !DILocation(line: 692, column: 48, scope: !9848)
!9857 = !DILocation(line: 696, column: 44, scope: !9848)
!9858 = !DILocation(line: 695, column: 24, scope: !9848)
!9859 = !DILocation(line: 695, column: 29, scope: !9848)
!9860 = !DILocation(line: 696, column: 9, scope: !9848)
!9861 = !DILocation(line: 695, column: 2, scope: !9848)
!9862 = !DILocation(line: 700, column: 53, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9848, file: !1610, line: 696, column: 52)
!9864 = !DILocation(line: 700, column: 23, scope: !9863)
!9865 = !DILocation(line: 700, column: 17, scope: !9863)
!9866 = !DILocation(line: 700, column: 3, scope: !9863)
!9867 = !DILocation(line: 700, column: 21, scope: !9863)
!9868 = !DILocation(line: 703, column: 41, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9863, file: !1610, line: 703, column: 7)
!9870 = !DILocation(line: 703, column: 7, scope: !9869)
!9871 = !DILocation(line: 703, column: 7, scope: !9863)
!9872 = !DILocation(line: 704, column: 35, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9869, file: !1610, line: 703, column: 49)
!9874 = !DILocation(line: 704, column: 4, scope: !9873)
!9875 = !DILocation(line: 709, column: 3, scope: !9873)
!9876 = !DILocation(line: 695, column: 17, scope: !9848)
!9877 = distinct !{!9877, !9861, !9878}
!9878 = !DILocation(line: 710, column: 2, scope: !9848)
!9879 = !DILocation(line: 712, column: 2, scope: !9848)
!9880 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1610, file: !1610, line: 715, type: !1534, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9881)
!9881 = !{!9882, !9883}
!9882 = !DILocalVariable(name: "dev", arg: 1, scope: !9880, file: !1610, line: 715, type: !1483)
!9883 = !DILocalVariable(name: "config", scope: !9880, file: !1610, line: 717, type: !9579)
!9884 = !DILocation(line: 0, scope: !9880)
!9885 = !DILocation(line: 717, column: 48, scope: !9880)
!9886 = !DILocation(line: 729, column: 31, scope: !9880)
!9887 = !DILocation(line: 729, column: 2, scope: !9880)
!9888 = !DILocation(line: 734, column: 1, scope: !9880)
!9889 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1610, file: !1610, line: 736, type: !1534, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9890)
!9890 = !{!9891, !9892}
!9891 = !DILocalVariable(name: "dev", arg: 1, scope: !9889, file: !1610, line: 736, type: !1483)
!9892 = !DILocalVariable(name: "config", scope: !9889, file: !1610, line: 738, type: !9579)
!9893 = !DILocation(line: 0, scope: !9889)
!9894 = !DILocation(line: 738, column: 48, scope: !9889)
!9895 = !DILocation(line: 746, column: 32, scope: !9889)
!9896 = !DILocation(line: 746, column: 2, scope: !9889)
!9897 = !DILocation(line: 756, column: 1, scope: !9889)
!9898 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1610, file: !1610, line: 758, type: !1504, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9899)
!9899 = !{!9900, !9901}
!9900 = !DILocalVariable(name: "dev", arg: 1, scope: !9898, file: !1610, line: 758, type: !1483)
!9901 = !DILocalVariable(name: "config", scope: !9898, file: !1610, line: 760, type: !9579)
!9902 = !DILocation(line: 0, scope: !9898)
!9903 = !DILocation(line: 760, column: 48, scope: !9898)
!9904 = !DILocation(line: 762, column: 43, scope: !9898)
!9905 = !DILocation(line: 762, column: 9, scope: !9898)
!9906 = !DILocation(line: 762, column: 50, scope: !9898)
!9907 = !DILocation(line: 763, column: 35, scope: !9898)
!9908 = !DILocation(line: 763, column: 3, scope: !9898)
!9909 = !DILocation(line: 762, column: 2, scope: !9898)
!9910 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1610, file: !1610, line: 773, type: !1534, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9911)
!9911 = !{!9912, !9913}
!9912 = !DILocalVariable(name: "dev", arg: 1, scope: !9910, file: !1610, line: 773, type: !1483)
!9913 = !DILocalVariable(name: "config", scope: !9910, file: !1610, line: 775, type: !9579)
!9914 = !DILocation(line: 0, scope: !9910)
!9915 = !DILocation(line: 775, column: 48, scope: !9910)
!9916 = !DILocation(line: 777, column: 33, scope: !9910)
!9917 = !DILocation(line: 777, column: 2, scope: !9910)
!9918 = !DILocation(line: 778, column: 1, scope: !9910)
!9919 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1610, file: !1610, line: 780, type: !1534, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9920)
!9920 = !{!9921, !9922}
!9921 = !DILocalVariable(name: "dev", arg: 1, scope: !9919, file: !1610, line: 780, type: !1483)
!9922 = !DILocalVariable(name: "config", scope: !9919, file: !1610, line: 782, type: !9579)
!9923 = !DILocation(line: 0, scope: !9919)
!9924 = !DILocation(line: 782, column: 48, scope: !9919)
!9925 = !DILocation(line: 784, column: 34, scope: !9919)
!9926 = !DILocation(line: 784, column: 2, scope: !9919)
!9927 = !DILocation(line: 785, column: 1, scope: !9919)
!9928 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1610, file: !1610, line: 766, type: !1504, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9929)
!9929 = !{!9930, !9931}
!9930 = !DILocalVariable(name: "dev", arg: 1, scope: !9928, file: !1610, line: 766, type: !1483)
!9931 = !DILocalVariable(name: "config", scope: !9928, file: !1610, line: 768, type: !9579)
!9932 = !DILocation(line: 0, scope: !9928)
!9933 = !DILocation(line: 768, column: 48, scope: !9928)
!9934 = !DILocation(line: 770, column: 42, scope: !9928)
!9935 = !DILocation(line: 770, column: 9, scope: !9928)
!9936 = !DILocation(line: 770, column: 2, scope: !9928)
!9937 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1610, file: !1610, line: 787, type: !1504, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9938)
!9938 = !{!9939, !9940}
!9939 = !DILocalVariable(name: "dev", arg: 1, scope: !9937, file: !1610, line: 787, type: !1483)
!9940 = !DILocalVariable(name: "config", scope: !9937, file: !1610, line: 789, type: !9579)
!9941 = !DILocation(line: 0, scope: !9937)
!9942 = !DILocation(line: 789, column: 48, scope: !9937)
!9943 = !DILocation(line: 794, column: 44, scope: !9937)
!9944 = !DILocation(line: 794, column: 9, scope: !9937)
!9945 = !DILocation(line: 794, column: 2, scope: !9937)
!9946 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1610, file: !1610, line: 797, type: !1534, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9947)
!9947 = !{!9948, !9949}
!9948 = !DILocalVariable(name: "dev", arg: 1, scope: !9946, file: !1610, line: 797, type: !1483)
!9949 = !DILocalVariable(name: "config", scope: !9946, file: !1610, line: 799, type: !9579)
!9950 = !DILocation(line: 0, scope: !9946)
!9951 = !DILocation(line: 799, column: 48, scope: !9946)
!9952 = !DILocation(line: 802, column: 34, scope: !9946)
!9953 = !DILocation(line: 802, column: 2, scope: !9946)
!9954 = !DILocation(line: 805, column: 6, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9946, file: !1610, line: 805, column: 6)
!9956 = !DILocation(line: 806, column: 3, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9955, file: !1610, line: 805, column: 43)
!9958 = !DILocation(line: 810, column: 31, scope: !9946)
!9959 = !DILocation(line: 807, column: 2, scope: !9957)
!9960 = !DILocation(line: 810, column: 2, scope: !9946)
!9961 = !DILocation(line: 811, column: 1, scope: !9946)
!9962 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1610, file: !1610, line: 813, type: !1534, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9963)
!9963 = !{!9964, !9965}
!9964 = !DILocalVariable(name: "dev", arg: 1, scope: !9962, file: !1610, line: 813, type: !1483)
!9965 = !DILocalVariable(name: "config", scope: !9962, file: !1610, line: 815, type: !9579)
!9966 = !DILocation(line: 0, scope: !9962)
!9967 = !DILocation(line: 815, column: 48, scope: !9962)
!9968 = !DILocation(line: 818, column: 35, scope: !9962)
!9969 = !DILocation(line: 818, column: 2, scope: !9962)
!9970 = !DILocation(line: 821, column: 6, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9962, file: !1610, line: 821, column: 6)
!9972 = !DILocation(line: 822, column: 3, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9971, file: !1610, line: 821, column: 43)
!9974 = !DILocation(line: 826, column: 32, scope: !9962)
!9975 = !DILocation(line: 823, column: 2, scope: !9973)
!9976 = !DILocation(line: 826, column: 2, scope: !9962)
!9977 = !DILocation(line: 827, column: 1, scope: !9962)
!9978 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1610, file: !1610, line: 829, type: !1504, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9979)
!9979 = !{!9980, !9981}
!9980 = !DILocalVariable(name: "dev", arg: 1, scope: !9978, file: !1610, line: 829, type: !1483)
!9981 = !DILocalVariable(name: "config", scope: !9978, file: !1610, line: 831, type: !9579)
!9982 = !DILocation(line: 0, scope: !9978)
!9983 = !DILocation(line: 831, column: 48, scope: !9978)
!9984 = !DILocation(line: 833, column: 46, scope: !9978)
!9985 = !DILocation(line: 833, column: 11, scope: !9978)
!9986 = !DILocation(line: 833, column: 53, scope: !9978)
!9987 = !DILocation(line: 834, column: 38, scope: !9978)
!9988 = !DILocation(line: 834, column: 4, scope: !9978)
!9989 = !DILocation(line: 834, column: 46, scope: !9978)
!9990 = !DILocation(line: 835, column: 37, scope: !9978)
!9991 = !DILocation(line: 835, column: 4, scope: !9978)
!9992 = !DILocation(line: 835, column: 44, scope: !9978)
!9993 = !DILocation(line: 836, column: 36, scope: !9978)
!9994 = !DILocation(line: 836, column: 4, scope: !9978)
!9995 = !DILocation(line: 833, column: 2, scope: !9978)
!9996 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1610, file: !1610, line: 839, type: !1504, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !9997)
!9997 = !{!9998}
!9998 = !DILocalVariable(name: "dev", arg: 1, scope: !9996, file: !1610, line: 839, type: !1483)
!9999 = !DILocation(line: 0, scope: !9996)
!10000 = !DILocation(line: 841, column: 2, scope: !9996)
!10001 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1610, file: !1610, line: 844, type: !1548, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10002)
!10002 = !{!10003, !10004, !10005, !10006}
!10003 = !DILocalVariable(name: "dev", arg: 1, scope: !10001, file: !1610, line: 844, type: !1483)
!10004 = !DILocalVariable(name: "cb", arg: 2, scope: !10001, file: !1610, line: 845, type: !1550)
!10005 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10001, file: !1610, line: 846, type: !102)
!10006 = !DILocalVariable(name: "data", scope: !10001, file: !1610, line: 848, type: !9702)
!10007 = !DILocation(line: 0, scope: !10001)
!10008 = !DILocation(line: 848, column: 38, scope: !10001)
!10009 = !DILocation(line: 850, column: 8, scope: !10001)
!10010 = !DILocation(line: 850, column: 16, scope: !10001)
!10011 = !DILocation(line: 851, column: 8, scope: !10001)
!10012 = !DILocation(line: 851, column: 18, scope: !10001)
!10013 = !DILocation(line: 852, column: 1, scope: !10001)
!10014 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10015, file: !10015, line: 1792, type: !10016, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10018)
!10015 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10016 = !DISubroutineType(types: !10017)
!10017 = !{!121, !1554}
!10018 = !{!10019}
!10019 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10014, file: !10015, line: 1792, type: !1554)
!10020 = !DILocation(line: 0, scope: !10014)
!10021 = !DILocation(line: 1794, column: 11, scope: !10014)
!10022 = !DILocation(line: 1794, column: 47, scope: !10014)
!10023 = !DILocation(line: 1794, column: 3, scope: !10014)
!10024 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10015, file: !10015, line: 2227, type: !10016, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10025)
!10025 = !{!10026}
!10026 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10024, file: !10015, line: 2227, type: !1554)
!10027 = !DILocation(line: 0, scope: !10024)
!10028 = !DILocation(line: 2229, column: 11, scope: !10024)
!10029 = !DILocation(line: 2229, column: 51, scope: !10024)
!10030 = !DILocation(line: 2229, column: 3, scope: !10024)
!10031 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10015, file: !10015, line: 1803, type: !10016, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10032)
!10032 = !{!10033}
!10033 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10031, file: !10015, line: 1803, type: !1554)
!10034 = !DILocation(line: 0, scope: !10031)
!10035 = !DILocation(line: 1805, column: 11, scope: !10031)
!10036 = !DILocation(line: 1805, column: 45, scope: !10031)
!10037 = !DILocation(line: 1805, column: 3, scope: !10031)
!10038 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10015, file: !10015, line: 2238, type: !10016, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10039)
!10039 = !{!10040}
!10040 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10038, file: !10015, line: 2238, type: !1554)
!10041 = !DILocation(line: 0, scope: !10038)
!10042 = !DILocation(line: 2240, column: 11, scope: !10038)
!10043 = !DILocation(line: 2240, column: 49, scope: !10038)
!10044 = !DILocation(line: 2240, column: 3, scope: !10038)
!10045 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10015, file: !10015, line: 2192, type: !10046, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10048)
!10046 = !DISubroutineType(types: !10047)
!10047 = !{null, !1554}
!10048 = !{!10049, !10050}
!10049 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10045, file: !10015, line: 2192, type: !1554)
!10050 = !DILocalVariable(name: "val", scope: !10051, file: !10015, line: 2194, type: !121)
!10051 = distinct !DILexicalBlock(scope: !10045, file: !10015, line: 2194, column: 3)
!10052 = !DILocation(line: 0, scope: !10045)
!10053 = !DILocation(line: 2194, column: 3, scope: !10051)
!10054 = !DILocalVariable(name: "addr", arg: 1, scope: !10055, file: !5953, line: 476, type: !1606)
!10055 = distinct !DISubprogram(name: "__LDREXW", scope: !5953, file: !5953, line: 476, type: !10056, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10058)
!10056 = !DISubroutineType(types: !10057)
!10057 = !{!121, !1606}
!10058 = !{!10054, !10059}
!10059 = !DILocalVariable(name: "result", scope: !10055, file: !5953, line: 478, type: !121)
!10060 = !DILocation(line: 0, scope: !10055, inlinedAt: !10061)
!10061 = distinct !DILocation(line: 2194, column: 3, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10051, file: !10015, line: 2194, column: 3)
!10063 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10061)
!10064 = !{i64 3573365}
!10065 = !DILocation(line: 2194, column: 3, scope: !10062)
!10066 = !DILocation(line: 0, scope: !10051)
!10067 = !DILocalVariable(name: "value", arg: 1, scope: !10068, file: !5953, line: 527, type: !121)
!10068 = distinct !DISubprogram(name: "__STREXW", scope: !5953, file: !5953, line: 527, type: !10069, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10071)
!10069 = !DISubroutineType(types: !10070)
!10070 = !{!121, !121, !1606}
!10071 = !{!10067, !10072, !10073}
!10072 = !DILocalVariable(name: "addr", arg: 2, scope: !10068, file: !5953, line: 527, type: !1606)
!10073 = !DILocalVariable(name: "result", scope: !10068, file: !5953, line: 529, type: !121)
!10074 = !DILocation(line: 0, scope: !10068, inlinedAt: !10075)
!10075 = distinct !DILocation(line: 2194, column: 3, scope: !10051)
!10076 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10075)
!10077 = !{i64 3574801}
!10078 = distinct !{!10078, !10053, !10053}
!10079 = !DILocation(line: 2195, column: 1, scope: !10045)
!10080 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10015, file: !10015, line: 2177, type: !10046, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10081)
!10081 = !{!10082}
!10082 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10080, file: !10015, line: 2177, type: !1554)
!10083 = !DILocation(line: 0, scope: !10080)
!10084 = !DILocation(line: 2179, column: 3, scope: !10080)
!10085 = !DILocation(line: 2180, column: 1, scope: !10080)
!10086 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10015, file: !10015, line: 2164, type: !10046, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10087)
!10087 = !{!10088, !10089}
!10088 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10086, file: !10015, line: 2164, type: !1554)
!10089 = !DILocalVariable(name: "val", scope: !10090, file: !10015, line: 2166, type: !121)
!10090 = distinct !DILexicalBlock(scope: !10086, file: !10015, line: 2166, column: 3)
!10091 = !DILocation(line: 0, scope: !10086)
!10092 = !DILocation(line: 2166, column: 3, scope: !10090)
!10093 = !DILocation(line: 0, scope: !10055, inlinedAt: !10094)
!10094 = distinct !DILocation(line: 2166, column: 3, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10090, file: !10015, line: 2166, column: 3)
!10096 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10094)
!10097 = !DILocation(line: 2166, column: 3, scope: !10095)
!10098 = !DILocation(line: 0, scope: !10090)
!10099 = !DILocation(line: 0, scope: !10068, inlinedAt: !10100)
!10100 = distinct !DILocation(line: 2166, column: 3, scope: !10090)
!10101 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10100)
!10102 = distinct !{!10102, !10092, !10092}
!10103 = !DILocation(line: 2167, column: 1, scope: !10086)
!10104 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10015, file: !10015, line: 2096, type: !10046, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10105)
!10105 = !{!10106, !10107}
!10106 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10104, file: !10015, line: 2096, type: !1554)
!10107 = !DILocalVariable(name: "val", scope: !10108, file: !10015, line: 2098, type: !121)
!10108 = distinct !DILexicalBlock(scope: !10104, file: !10015, line: 2098, column: 3)
!10109 = !DILocation(line: 0, scope: !10104)
!10110 = !DILocation(line: 2098, column: 3, scope: !10108)
!10111 = !DILocation(line: 0, scope: !10055, inlinedAt: !10112)
!10112 = distinct !DILocation(line: 2098, column: 3, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10108, file: !10015, line: 2098, column: 3)
!10114 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10112)
!10115 = !DILocation(line: 2098, column: 3, scope: !10113)
!10116 = !DILocation(line: 0, scope: !10108)
!10117 = !DILocation(line: 0, scope: !10068, inlinedAt: !10118)
!10118 = distinct !DILocation(line: 2098, column: 3, scope: !10108)
!10119 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10118)
!10120 = distinct !{!10120, !10110, !10110}
!10121 = !DILocation(line: 2099, column: 1, scope: !10104)
!10122 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10015, file: !10015, line: 2081, type: !10046, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10123)
!10123 = !{!10124}
!10124 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10122, file: !10015, line: 2081, type: !1554)
!10125 = !DILocation(line: 0, scope: !10122)
!10126 = !DILocation(line: 2083, column: 3, scope: !10122)
!10127 = !DILocation(line: 2084, column: 1, scope: !10122)
!10128 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10015, file: !10015, line: 2068, type: !10046, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10129)
!10129 = !{!10130, !10131}
!10130 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10128, file: !10015, line: 2068, type: !1554)
!10131 = !DILocalVariable(name: "val", scope: !10132, file: !10015, line: 2070, type: !121)
!10132 = distinct !DILexicalBlock(scope: !10128, file: !10015, line: 2070, column: 3)
!10133 = !DILocation(line: 0, scope: !10128)
!10134 = !DILocation(line: 2070, column: 3, scope: !10132)
!10135 = !DILocation(line: 0, scope: !10055, inlinedAt: !10136)
!10136 = distinct !DILocation(line: 2070, column: 3, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10132, file: !10015, line: 2070, column: 3)
!10138 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10136)
!10139 = !DILocation(line: 2070, column: 3, scope: !10137)
!10140 = !DILocation(line: 0, scope: !10132)
!10141 = !DILocation(line: 0, scope: !10068, inlinedAt: !10142)
!10142 = distinct !DILocation(line: 2070, column: 3, scope: !10132)
!10143 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10142)
!10144 = distinct !{!10144, !10134, !10134}
!10145 = !DILocation(line: 2071, column: 1, scope: !10128)
!10146 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10015, file: !10015, line: 2131, type: !10046, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10147)
!10147 = !{!10148, !10149}
!10148 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10146, file: !10015, line: 2131, type: !1554)
!10149 = !DILocalVariable(name: "val", scope: !10150, file: !10015, line: 2133, type: !121)
!10150 = distinct !DILexicalBlock(scope: !10146, file: !10015, line: 2133, column: 3)
!10151 = !DILocation(line: 0, scope: !10146)
!10152 = !DILocation(line: 2133, column: 3, scope: !10150)
!10153 = !DILocation(line: 0, scope: !10055, inlinedAt: !10154)
!10154 = distinct !DILocation(line: 2133, column: 3, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10150, file: !10015, line: 2133, column: 3)
!10156 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10154)
!10157 = !DILocation(line: 2133, column: 3, scope: !10155)
!10158 = !DILocation(line: 0, scope: !10150)
!10159 = !DILocation(line: 0, scope: !10068, inlinedAt: !10160)
!10160 = distinct !DILocation(line: 2133, column: 3, scope: !10150)
!10161 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10160)
!10162 = distinct !{!10162, !10152, !10152}
!10163 = !DILocation(line: 2134, column: 1, scope: !10146)
!10164 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10015, file: !10015, line: 2035, type: !10046, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10165)
!10165 = !{!10166, !10167}
!10166 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10164, file: !10015, line: 2035, type: !1554)
!10167 = !DILocalVariable(name: "val", scope: !10168, file: !10015, line: 2037, type: !121)
!10168 = distinct !DILexicalBlock(scope: !10164, file: !10015, line: 2037, column: 3)
!10169 = !DILocation(line: 0, scope: !10164)
!10170 = !DILocation(line: 2037, column: 3, scope: !10168)
!10171 = !DILocation(line: 0, scope: !10055, inlinedAt: !10172)
!10172 = distinct !DILocation(line: 2037, column: 3, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10168, file: !10015, line: 2037, column: 3)
!10174 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10172)
!10175 = !DILocation(line: 2037, column: 3, scope: !10173)
!10176 = !DILocation(line: 0, scope: !10168)
!10177 = !DILocation(line: 0, scope: !10068, inlinedAt: !10178)
!10178 = distinct !DILocation(line: 2037, column: 3, scope: !10168)
!10179 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10178)
!10180 = distinct !{!10180, !10170, !10170}
!10181 = !DILocation(line: 2038, column: 1, scope: !10164)
!10182 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10015, file: !10015, line: 1814, type: !10016, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10183)
!10183 = !{!10184}
!10184 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10182, file: !10015, line: 1814, type: !1554)
!10185 = !DILocation(line: 0, scope: !10182)
!10186 = !DILocation(line: 1816, column: 11, scope: !10182)
!10187 = !DILocation(line: 1816, column: 46, scope: !10182)
!10188 = !DILocation(line: 1816, column: 3, scope: !10182)
!10189 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10015, file: !10015, line: 2142, type: !10046, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10190)
!10190 = !{!10191, !10192}
!10191 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10189, file: !10015, line: 2142, type: !1554)
!10192 = !DILocalVariable(name: "val", scope: !10193, file: !10015, line: 2144, type: !121)
!10193 = distinct !DILexicalBlock(scope: !10189, file: !10015, line: 2144, column: 3)
!10194 = !DILocation(line: 0, scope: !10189)
!10195 = !DILocation(line: 2144, column: 3, scope: !10193)
!10196 = !DILocation(line: 0, scope: !10055, inlinedAt: !10197)
!10197 = distinct !DILocation(line: 2144, column: 3, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10193, file: !10015, line: 2144, column: 3)
!10199 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10197)
!10200 = !DILocation(line: 2144, column: 3, scope: !10198)
!10201 = !DILocation(line: 0, scope: !10193)
!10202 = !DILocation(line: 0, scope: !10068, inlinedAt: !10203)
!10203 = distinct !DILocation(line: 2144, column: 3, scope: !10193)
!10204 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10203)
!10205 = distinct !{!10205, !10195, !10195}
!10206 = !DILocation(line: 2145, column: 1, scope: !10189)
!10207 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10015, file: !10015, line: 2046, type: !10046, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10208)
!10208 = !{!10209, !10210}
!10209 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10207, file: !10015, line: 2046, type: !1554)
!10210 = !DILocalVariable(name: "val", scope: !10211, file: !10015, line: 2048, type: !121)
!10211 = distinct !DILexicalBlock(scope: !10207, file: !10015, line: 2048, column: 3)
!10212 = !DILocation(line: 0, scope: !10207)
!10213 = !DILocation(line: 2048, column: 3, scope: !10211)
!10214 = !DILocation(line: 0, scope: !10055, inlinedAt: !10215)
!10215 = distinct !DILocation(line: 2048, column: 3, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10211, file: !10015, line: 2048, column: 3)
!10217 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10215)
!10218 = !DILocation(line: 2048, column: 3, scope: !10216)
!10219 = !DILocation(line: 0, scope: !10211)
!10220 = !DILocation(line: 0, scope: !10068, inlinedAt: !10221)
!10221 = distinct !DILocation(line: 2048, column: 3, scope: !10211)
!10222 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10221)
!10223 = distinct !{!10223, !10213, !10213}
!10224 = !DILocation(line: 2049, column: 1, scope: !10207)
!10225 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10015, file: !10015, line: 2403, type: !10226, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10228)
!10226 = !DISubroutineType(types: !10227)
!10227 = !{!154, !1554}
!10228 = !{!10229}
!10229 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10225, file: !10015, line: 2403, type: !1554)
!10230 = !DILocation(line: 0, scope: !10225)
!10231 = !DILocation(line: 2405, column: 20, scope: !10225)
!10232 = !DILocation(line: 2405, column: 10, scope: !10225)
!10233 = !DILocation(line: 2405, column: 3, scope: !10225)
!10234 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10015, file: !10015, line: 1770, type: !10016, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10235)
!10235 = !{!10236}
!10236 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10234, file: !10015, line: 1770, type: !1554)
!10237 = !DILocation(line: 0, scope: !10234)
!10238 = !DILocation(line: 1772, column: 11, scope: !10234)
!10239 = !DILocation(line: 1772, column: 46, scope: !10234)
!10240 = !DILocation(line: 1772, column: 3, scope: !10234)
!10241 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10015, file: !10015, line: 1934, type: !10046, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10242)
!10242 = !{!10243, !10244}
!10243 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10241, file: !10015, line: 1934, type: !1554)
!10244 = !DILocalVariable(name: "tmpreg", scope: !10241, file: !10015, line: 1936, type: !120)
!10245 = !DILocation(line: 0, scope: !10241)
!10246 = !DILocation(line: 1936, column: 3, scope: !10241)
!10247 = !DILocation(line: 1936, column: 17, scope: !10241)
!10248 = !DILocation(line: 1937, column: 20, scope: !10241)
!10249 = !DILocation(line: 1937, column: 10, scope: !10241)
!10250 = !DILocation(line: 1938, column: 10, scope: !10241)
!10251 = !DILocation(line: 1939, column: 20, scope: !10241)
!10252 = !DILocation(line: 1939, column: 10, scope: !10241)
!10253 = !DILocation(line: 1940, column: 10, scope: !10241)
!10254 = !DILocation(line: 1941, column: 1, scope: !10241)
!10255 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10015, file: !10015, line: 2426, type: !10256, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10258)
!10256 = !DISubroutineType(types: !10257)
!10257 = !{null, !1554, !154}
!10258 = !{!10259, !10260}
!10259 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10255, file: !10015, line: 2426, type: !1554)
!10260 = !DILocalVariable(name: "Value", arg: 2, scope: !10255, file: !10015, line: 2426, type: !154)
!10261 = !DILocation(line: 0, scope: !10255)
!10262 = !DILocation(line: 2428, column: 16, scope: !10255)
!10263 = !DILocation(line: 2428, column: 11, scope: !10255)
!10264 = !DILocation(line: 2428, column: 14, scope: !10255)
!10265 = !DILocation(line: 2429, column: 1, scope: !10255)
!10266 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1610, file: !1610, line: 205, type: !10267, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10269)
!10267 = !DISubroutineType(types: !10268)
!10268 = !{!121, !1483}
!10269 = !{!10270, !10271}
!10270 = !DILocalVariable(name: "dev", arg: 1, scope: !10266, file: !1610, line: 205, type: !1483)
!10271 = !DILocalVariable(name: "config", scope: !10266, file: !1610, line: 207, type: !9579)
!10272 = !DILocation(line: 0, scope: !10266)
!10273 = !DILocation(line: 207, column: 48, scope: !10266)
!10274 = !DILocation(line: 209, column: 36, scope: !10266)
!10275 = !DILocation(line: 209, column: 9, scope: !10266)
!10276 = !DILocation(line: 209, column: 2, scope: !10266)
!10277 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1610, file: !1610, line: 270, type: !10278, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10280)
!10278 = !DISubroutineType(types: !10279)
!10279 = !{!1449, !121}
!10280 = !{!10281}
!10281 = !DILocalVariable(name: "parity", arg: 1, scope: !10277, file: !1610, line: 270, type: !121)
!10282 = !DILocation(line: 0, scope: !10277)
!10283 = !DILocation(line: 272, column: 2, scope: !10277)
!10284 = !DILocation(line: 281, column: 1, scope: !10277)
!10285 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1610, file: !1610, line: 220, type: !10267, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10286)
!10286 = !{!10287, !10288}
!10287 = !DILocalVariable(name: "dev", arg: 1, scope: !10285, file: !1610, line: 220, type: !1483)
!10288 = !DILocalVariable(name: "config", scope: !10285, file: !1610, line: 222, type: !9579)
!10289 = !DILocation(line: 0, scope: !10285)
!10290 = !DILocation(line: 222, column: 48, scope: !10285)
!10291 = !DILocation(line: 224, column: 44, scope: !10285)
!10292 = !DILocation(line: 224, column: 9, scope: !10285)
!10293 = !DILocation(line: 224, column: 2, scope: !10285)
!10294 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1610, file: !1610, line: 304, type: !10295, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10297)
!10295 = !DISubroutineType(types: !10296)
!10296 = !{!1463, !121}
!10297 = !{!10298}
!10298 = !DILocalVariable(name: "sb", arg: 1, scope: !10294, file: !1610, line: 304, type: !121)
!10299 = !DILocation(line: 0, scope: !10294)
!10300 = !DILocation(line: 306, column: 2, scope: !10294)
!10301 = !DILocation(line: 0, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10294, file: !1610, line: 306, column: 14)
!10303 = !DILocation(line: 323, column: 1, scope: !10294)
!10304 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1610, file: !1610, line: 235, type: !10267, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10305)
!10305 = !{!10306, !10307}
!10306 = !DILocalVariable(name: "dev", arg: 1, scope: !10304, file: !1610, line: 235, type: !1483)
!10307 = !DILocalVariable(name: "config", scope: !10304, file: !1610, line: 237, type: !9579)
!10308 = !DILocation(line: 0, scope: !10304)
!10309 = !DILocation(line: 237, column: 48, scope: !10304)
!10310 = !DILocation(line: 239, column: 39, scope: !10304)
!10311 = !DILocation(line: 239, column: 9, scope: !10304)
!10312 = !DILocation(line: 239, column: 2, scope: !10304)
!10313 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1610, file: !1610, line: 355, type: !10314, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10316)
!10314 = !DISubroutineType(types: !10315)
!10315 = !{!1456, !121, !121}
!10316 = !{!10317, !10318}
!10317 = !DILocalVariable(name: "db", arg: 1, scope: !10313, file: !1610, line: 355, type: !121)
!10318 = !DILocalVariable(name: "p", arg: 2, scope: !10313, file: !1610, line: 356, type: !121)
!10319 = !DILocation(line: 0, scope: !10313)
!10320 = !DILocation(line: 358, column: 2, scope: !10313)
!10321 = !DILocation(line: 384, column: 1, scope: !10313)
!10322 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1610, file: !1610, line: 250, type: !10267, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10323)
!10323 = !{!10324, !10325}
!10324 = !DILocalVariable(name: "dev", arg: 1, scope: !10322, file: !1610, line: 250, type: !1483)
!10325 = !DILocalVariable(name: "config", scope: !10322, file: !1610, line: 252, type: !9579)
!10326 = !DILocation(line: 0, scope: !10322)
!10327 = !DILocation(line: 252, column: 48, scope: !10322)
!10328 = !DILocation(line: 254, column: 40, scope: !10322)
!10329 = !DILocation(line: 254, column: 9, scope: !10322)
!10330 = !DILocation(line: 254, column: 2, scope: !10322)
!10331 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1610, file: !1610, line: 409, type: !10332, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10334)
!10332 = !DISubroutineType(types: !10333)
!10333 = !{!1469, !121}
!10334 = !{!10335}
!10335 = !DILocalVariable(name: "fc", arg: 1, scope: !10331, file: !1610, line: 409, type: !121)
!10336 = !DILocation(line: 0, scope: !10331)
!10337 = !DILocation(line: 411, column: 9, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10331, file: !1610, line: 411, column: 6)
!10339 = !DILocation(line: 416, column: 1, scope: !10331)
!10340 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10015, file: !10015, line: 967, type: !10016, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10341)
!10341 = !{!10342}
!10342 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10340, file: !10015, line: 967, type: !1554)
!10343 = !DILocation(line: 0, scope: !10340)
!10344 = !DILocation(line: 969, column: 21, scope: !10340)
!10345 = !DILocation(line: 969, column: 3, scope: !10340)
!10346 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10015, file: !10015, line: 601, type: !10016, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10347)
!10347 = !{!10348}
!10348 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10346, file: !10015, line: 601, type: !1554)
!10349 = !DILocation(line: 0, scope: !10346)
!10350 = !DILocation(line: 603, column: 21, scope: !10346)
!10351 = !DILocation(line: 603, column: 3, scope: !10346)
!10352 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10015, file: !10015, line: 820, type: !10016, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10353)
!10353 = !{!10354}
!10354 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10352, file: !10015, line: 820, type: !1554)
!10355 = !DILocation(line: 0, scope: !10352)
!10356 = !DILocation(line: 822, column: 21, scope: !10352)
!10357 = !DILocation(line: 822, column: 3, scope: !10352)
!10358 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10015, file: !10015, line: 547, type: !10016, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10359)
!10359 = !{!10360}
!10360 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10358, file: !10015, line: 547, type: !1554)
!10361 = !DILocation(line: 0, scope: !10358)
!10362 = !DILocation(line: 549, column: 21, scope: !10358)
!10363 = !DILocation(line: 549, column: 3, scope: !10358)
!10364 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1610, file: !1610, line: 257, type: !10365, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10367)
!10365 = !DISubroutineType(types: !10366)
!10366 = !{!121, !1449}
!10367 = !{!10368}
!10368 = !DILocalVariable(name: "parity", arg: 1, scope: !10364, file: !1610, line: 257, type: !1449)
!10369 = !DILocation(line: 0, scope: !10364)
!10370 = !DILocation(line: 259, column: 2, scope: !10364)
!10371 = !DILocation(line: 268, column: 1, scope: !10364)
!10372 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1610, file: !1610, line: 283, type: !10373, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10375)
!10373 = !DISubroutineType(types: !10374)
!10374 = !{!121, !1463}
!10375 = !{!10376}
!10376 = !DILocalVariable(name: "sb", arg: 1, scope: !10372, file: !1610, line: 283, type: !1463)
!10377 = !DILocation(line: 0, scope: !10372)
!10378 = !DILocation(line: 285, column: 2, scope: !10372)
!10379 = !DILocation(line: 0, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10372, file: !1610, line: 285, column: 14)
!10381 = !DILocation(line: 302, column: 1, scope: !10372)
!10382 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1610, file: !1610, line: 325, type: !10383, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10385)
!10383 = !DISubroutineType(types: !10384)
!10384 = !{!121, !1456, !1449}
!10385 = !{!10386, !10387}
!10386 = !DILocalVariable(name: "db", arg: 1, scope: !10382, file: !1610, line: 325, type: !1456)
!10387 = !DILocalVariable(name: "p", arg: 2, scope: !10382, file: !1610, line: 326, type: !1449)
!10388 = !DILocation(line: 0, scope: !10382)
!10389 = !DILocation(line: 328, column: 2, scope: !10382)
!10390 = !DILocation(line: 353, column: 1, scope: !10382)
!10391 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1610, file: !1610, line: 393, type: !10392, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10394)
!10392 = !DISubroutineType(types: !10393)
!10393 = !{!121, !1469}
!10394 = !{!10395}
!10395 = !DILocalVariable(name: "fc", arg: 1, scope: !10391, file: !1610, line: 393, type: !1469)
!10396 = !DILocation(line: 0, scope: !10391)
!10397 = !DILocation(line: 395, column: 9, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10391, file: !1610, line: 395, column: 6)
!10399 = !DILocation(line: 400, column: 1, scope: !10391)
!10400 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10015, file: !10015, line: 424, type: !10046, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10401)
!10401 = !{!10402}
!10402 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10400, file: !10015, line: 424, type: !1554)
!10403 = !DILocation(line: 0, scope: !10400)
!10404 = !DILocation(line: 426, column: 3, scope: !10400)
!10405 = !DILocation(line: 427, column: 1, scope: !10400)
!10406 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1610, file: !1610, line: 197, type: !10407, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10409)
!10407 = !DISubroutineType(types: !10408)
!10408 = !{null, !1483, !121}
!10409 = !{!10410, !10411, !10412}
!10410 = !DILocalVariable(name: "dev", arg: 1, scope: !10406, file: !1610, line: 197, type: !1483)
!10411 = !DILocalVariable(name: "parity", arg: 2, scope: !10406, file: !1610, line: 198, type: !121)
!10412 = !DILocalVariable(name: "config", scope: !10406, file: !1610, line: 200, type: !9579)
!10413 = !DILocation(line: 0, scope: !10406)
!10414 = !DILocation(line: 200, column: 48, scope: !10406)
!10415 = !DILocation(line: 202, column: 29, scope: !10406)
!10416 = !DILocation(line: 202, column: 2, scope: !10406)
!10417 = !DILocation(line: 203, column: 1, scope: !10406)
!10418 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1610, file: !1610, line: 212, type: !10407, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10419)
!10419 = !{!10420, !10421, !10422}
!10420 = !DILocalVariable(name: "dev", arg: 1, scope: !10418, file: !1610, line: 212, type: !1483)
!10421 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10418, file: !1610, line: 213, type: !121)
!10422 = !DILocalVariable(name: "config", scope: !10418, file: !1610, line: 215, type: !9579)
!10423 = !DILocation(line: 0, scope: !10418)
!10424 = !DILocation(line: 215, column: 48, scope: !10418)
!10425 = !DILocation(line: 217, column: 37, scope: !10418)
!10426 = !DILocation(line: 217, column: 2, scope: !10418)
!10427 = !DILocation(line: 218, column: 1, scope: !10418)
!10428 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1610, file: !1610, line: 227, type: !10407, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10429)
!10429 = !{!10430, !10431, !10432}
!10430 = !DILocalVariable(name: "dev", arg: 1, scope: !10428, file: !1610, line: 227, type: !1483)
!10431 = !DILocalVariable(name: "databits", arg: 2, scope: !10428, file: !1610, line: 228, type: !121)
!10432 = !DILocalVariable(name: "config", scope: !10428, file: !1610, line: 230, type: !9579)
!10433 = !DILocation(line: 0, scope: !10428)
!10434 = !DILocation(line: 230, column: 48, scope: !10428)
!10435 = !DILocation(line: 232, column: 32, scope: !10428)
!10436 = !DILocation(line: 232, column: 2, scope: !10428)
!10437 = !DILocation(line: 233, column: 1, scope: !10428)
!10438 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1610, file: !1610, line: 242, type: !10407, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10439)
!10439 = !{!10440, !10441, !10442}
!10440 = !DILocalVariable(name: "dev", arg: 1, scope: !10438, file: !1610, line: 242, type: !1483)
!10441 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10438, file: !1610, line: 243, type: !121)
!10442 = !DILocalVariable(name: "config", scope: !10438, file: !1610, line: 245, type: !9579)
!10443 = !DILocation(line: 0, scope: !10438)
!10444 = !DILocation(line: 245, column: 48, scope: !10438)
!10445 = !DILocation(line: 247, column: 33, scope: !10438)
!10446 = !DILocation(line: 247, column: 2, scope: !10438)
!10447 = !DILocation(line: 248, column: 1, scope: !10438)
!10448 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1610, file: !1610, line: 107, type: !10407, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10449)
!10449 = !{!10450, !10451, !10452, !10453, !10454}
!10450 = !DILocalVariable(name: "dev", arg: 1, scope: !10448, file: !1610, line: 107, type: !1483)
!10451 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10448, file: !1610, line: 107, type: !121)
!10452 = !DILocalVariable(name: "config", scope: !10448, file: !1610, line: 109, type: !9579)
!10453 = !DILocalVariable(name: "data", scope: !10448, file: !1610, line: 110, type: !9702)
!10454 = !DILocalVariable(name: "clock_rate", scope: !10448, file: !1610, line: 112, type: !121)
!10455 = !DILocation(line: 0, scope: !10448)
!10456 = !DILocation(line: 109, column: 48, scope: !10448)
!10457 = !DILocation(line: 110, column: 38, scope: !10448)
!10458 = !DILocation(line: 112, column: 2, scope: !10448)
!10459 = !DILocation(line: 123, column: 36, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10461, file: !1610, line: 123, column: 7)
!10461 = distinct !DILexicalBlock(scope: !10462, file: !1610, line: 122, column: 9)
!10462 = distinct !DILexicalBlock(scope: !10448, file: !1610, line: 115, column: 6)
!10463 = !DILocation(line: 124, column: 42, scope: !10460)
!10464 = !DILocation(line: 123, column: 7, scope: !10460)
!10465 = !DILocation(line: 125, column: 22, scope: !10460)
!10466 = !DILocation(line: 123, column: 7, scope: !10461)
!10467 = !DILocation(line: 176, column: 36, scope: !10448)
!10468 = !DILocation(line: 176, column: 3, scope: !10448)
!10469 = !DILocation(line: 179, column: 32, scope: !10448)
!10470 = !DILocation(line: 180, column: 10, scope: !10448)
!10471 = !DILocation(line: 179, column: 3, scope: !10448)
!10472 = !DILocation(line: 195, column: 1, scope: !10448)
!10473 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10015, file: !10015, line: 410, type: !10046, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10474)
!10474 = !{!10475}
!10475 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10473, file: !10015, line: 410, type: !1554)
!10476 = !DILocation(line: 0, scope: !10473)
!10477 = !DILocation(line: 412, column: 3, scope: !10473)
!10478 = !DILocation(line: 413, column: 1, scope: !10473)
!10479 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !818, file: !818, line: 216, type: !1587, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10480)
!10480 = !{!10481, !10482, !10483, !10484}
!10481 = !DILocalVariable(name: "dev", arg: 1, scope: !10479, file: !818, line: 216, type: !1483)
!10482 = !DILocalVariable(name: "sys", arg: 2, scope: !10479, file: !818, line: 217, type: !910)
!10483 = !DILocalVariable(name: "rate", arg: 3, scope: !10479, file: !818, line: 218, type: !866)
!10484 = !DILocalVariable(name: "api", scope: !10479, file: !818, line: 220, type: !1565)
!10485 = !DILocation(line: 0, scope: !10479)
!10486 = !DILocation(line: 221, column: 49, scope: !10479)
!10487 = !DILocation(line: 223, column: 11, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10479, file: !818, line: 223, column: 6)
!10489 = !DILocation(line: 223, column: 20, scope: !10488)
!10490 = !DILocation(line: 223, column: 6, scope: !10479)
!10491 = !DILocation(line: 227, column: 9, scope: !10479)
!10492 = !DILocation(line: 227, column: 2, scope: !10479)
!10493 = !DILocation(line: 228, column: 1, scope: !10479)
!10494 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10015, file: !10015, line: 615, type: !10495, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10497)
!10495 = !DISubroutineType(types: !10496)
!10496 = !{null, !1554, !121}
!10497 = !{!10498, !10499}
!10498 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10494, file: !10015, line: 615, type: !1554)
!10499 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10494, file: !10015, line: 615, type: !121)
!10500 = !DILocation(line: 0, scope: !10494)
!10501 = !DILocation(line: 617, column: 3, scope: !10494)
!10502 = !DILocation(line: 618, column: 1, scope: !10494)
!10503 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10015, file: !10015, line: 1020, type: !10504, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10506)
!10504 = !DISubroutineType(types: !10505)
!10505 = !{null, !1554, !121, !121, !121}
!10506 = !{!10507, !10508, !10509, !10510}
!10507 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10503, file: !10015, line: 1020, type: !1554)
!10508 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10503, file: !10015, line: 1020, type: !121)
!10509 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10503, file: !10015, line: 1020, type: !121)
!10510 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10503, file: !10015, line: 1021, type: !121)
!10511 = !DILocation(line: 0, scope: !10503)
!10512 = !DILocation(line: 1029, column: 30, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10514, file: !10015, line: 1028, column: 3)
!10514 = distinct !DILexicalBlock(scope: !10503, file: !10015, line: 1023, column: 7)
!10515 = !DILocation(line: 1029, column: 19, scope: !10513)
!10516 = !DILocation(line: 1029, column: 13, scope: !10513)
!10517 = !DILocation(line: 1029, column: 17, scope: !10513)
!10518 = !DILocation(line: 1031, column: 1, scope: !10503)
!10519 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10015, file: !10015, line: 949, type: !10495, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10520)
!10520 = !{!10521, !10522}
!10521 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10519, file: !10015, line: 949, type: !1554)
!10522 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10519, file: !10015, line: 949, type: !121)
!10523 = !DILocation(line: 0, scope: !10519)
!10524 = !DILocation(line: 951, column: 3, scope: !10519)
!10525 = !DILocation(line: 952, column: 1, scope: !10519)
!10526 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10015, file: !10015, line: 588, type: !10495, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10527)
!10527 = !{!10528, !10529}
!10528 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10526, file: !10015, line: 588, type: !1554)
!10529 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10526, file: !10015, line: 588, type: !121)
!10530 = !DILocation(line: 0, scope: !10526)
!10531 = !DILocation(line: 590, column: 3, scope: !10526)
!10532 = !DILocation(line: 591, column: 1, scope: !10526)
!10533 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10015, file: !10015, line: 805, type: !10495, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10534)
!10534 = !{!10535, !10536}
!10535 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10533, file: !10015, line: 805, type: !1554)
!10536 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10533, file: !10015, line: 805, type: !121)
!10537 = !DILocation(line: 0, scope: !10533)
!10538 = !DILocation(line: 807, column: 3, scope: !10533)
!10539 = !DILocation(line: 808, column: 1, scope: !10533)
!10540 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10015, file: !10015, line: 532, type: !10495, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10541)
!10541 = !{!10542, !10543}
!10542 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10540, file: !10015, line: 532, type: !1554)
!10543 = !DILocalVariable(name: "Parity", arg: 2, scope: !10540, file: !10015, line: 532, type: !121)
!10544 = !DILocation(line: 0, scope: !10540)
!10545 = !DILocation(line: 534, column: 3, scope: !10540)
!10546 = !DILocation(line: 535, column: 1, scope: !10540)
!10547 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10015, file: !10015, line: 1737, type: !10016, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10548)
!10548 = !{!10549}
!10549 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10547, file: !10015, line: 1737, type: !1554)
!10550 = !DILocation(line: 0, scope: !10547)
!10551 = !DILocation(line: 1739, column: 11, scope: !10547)
!10552 = !DILocation(line: 1739, column: 3, scope: !10547)
!10553 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10015, file: !10015, line: 1748, type: !10016, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10554)
!10554 = !{!10555}
!10555 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10553, file: !10015, line: 1748, type: !1554)
!10556 = !DILocation(line: 0, scope: !10553)
!10557 = !DILocation(line: 1750, column: 11, scope: !10553)
!10558 = !DILocation(line: 1750, column: 45, scope: !10553)
!10559 = !DILocation(line: 1750, column: 3, scope: !10553)
!10560 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10015, file: !10015, line: 1827, type: !10016, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10561)
!10561 = !{!10562}
!10562 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10560, file: !10015, line: 1827, type: !1554)
!10563 = !DILocation(line: 0, scope: !10560)
!10564 = !DILocation(line: 1829, column: 11, scope: !10560)
!10565 = !DILocation(line: 1829, column: 46, scope: !10560)
!10566 = !DILocation(line: 1829, column: 3, scope: !10560)
!10567 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10015, file: !10015, line: 1992, type: !10046, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10568)
!10568 = !{!10569}
!10569 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10567, file: !10015, line: 1992, type: !1554)
!10570 = !DILocation(line: 0, scope: !10567)
!10571 = !DILocation(line: 1994, column: 3, scope: !10567)
!10572 = !DILocation(line: 1995, column: 1, scope: !10567)
!10573 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10015, file: !10015, line: 1877, type: !10046, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10574)
!10574 = !{!10575, !10576}
!10575 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10573, file: !10015, line: 1877, type: !1554)
!10576 = !DILocalVariable(name: "tmpreg", scope: !10573, file: !10015, line: 1879, type: !120)
!10577 = !DILocation(line: 0, scope: !10573)
!10578 = !DILocation(line: 1879, column: 3, scope: !10573)
!10579 = !DILocation(line: 1879, column: 17, scope: !10573)
!10580 = !DILocation(line: 1880, column: 20, scope: !10573)
!10581 = !DILocation(line: 1880, column: 10, scope: !10573)
!10582 = !DILocation(line: 1881, column: 10, scope: !10573)
!10583 = !DILocation(line: 1882, column: 20, scope: !10573)
!10584 = !DILocation(line: 1882, column: 10, scope: !10573)
!10585 = !DILocation(line: 1883, column: 10, scope: !10573)
!10586 = !DILocation(line: 1884, column: 1, scope: !10573)
!10587 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10015, file: !10015, line: 1896, type: !10046, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10588)
!10588 = !{!10589, !10590}
!10589 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10587, file: !10015, line: 1896, type: !1554)
!10590 = !DILocalVariable(name: "tmpreg", scope: !10587, file: !10015, line: 1898, type: !120)
!10591 = !DILocation(line: 0, scope: !10587)
!10592 = !DILocation(line: 1898, column: 3, scope: !10587)
!10593 = !DILocation(line: 1898, column: 17, scope: !10587)
!10594 = !DILocation(line: 1899, column: 20, scope: !10587)
!10595 = !DILocation(line: 1899, column: 10, scope: !10587)
!10596 = !DILocation(line: 1900, column: 10, scope: !10587)
!10597 = !DILocation(line: 1901, column: 20, scope: !10587)
!10598 = !DILocation(line: 1901, column: 10, scope: !10587)
!10599 = !DILocation(line: 1902, column: 10, scope: !10587)
!10600 = !DILocation(line: 1903, column: 1, scope: !10587)
!10601 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10015, file: !10015, line: 1915, type: !10046, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10602)
!10602 = !{!10603, !10604}
!10603 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10601, file: !10015, line: 1915, type: !1554)
!10604 = !DILocalVariable(name: "tmpreg", scope: !10601, file: !10015, line: 1917, type: !120)
!10605 = !DILocation(line: 0, scope: !10601)
!10606 = !DILocation(line: 1917, column: 3, scope: !10601)
!10607 = !DILocation(line: 1917, column: 17, scope: !10601)
!10608 = !DILocation(line: 1918, column: 20, scope: !10601)
!10609 = !DILocation(line: 1918, column: 10, scope: !10601)
!10610 = !DILocation(line: 1919, column: 10, scope: !10601)
!10611 = !DILocation(line: 1920, column: 20, scope: !10601)
!10612 = !DILocation(line: 1920, column: 10, scope: !10601)
!10613 = !DILocation(line: 1921, column: 10, scope: !10601)
!10614 = !DILocation(line: 1922, column: 1, scope: !10601)
!10615 = !DILocation(line: 0, scope: !1664)
!10616 = !DILocation(line: 1914, column: 1, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !1664, file: !1610, line: 1914, column: 1)
!10618 = !DILocation(line: 1914, column: 1, scope: !1664)
!10619 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1610, file: !1610, line: 987, type: !1534, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10620)
!10620 = !{!10621, !10622}
!10621 = !DILocalVariable(name: "dev", arg: 1, scope: !10619, file: !1610, line: 987, type: !1483)
!10622 = !DILocalVariable(name: "data", scope: !10619, file: !1610, line: 989, type: !9702)
!10623 = !DILocation(line: 0, scope: !10619)
!10624 = !DILocation(line: 989, column: 38, scope: !10619)
!10625 = !DILocation(line: 1014, column: 12, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10619, file: !1610, line: 1014, column: 6)
!10627 = !DILocation(line: 1014, column: 6, scope: !10626)
!10628 = !DILocation(line: 1014, column: 6, scope: !10619)
!10629 = !DILocation(line: 1015, column: 28, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10626, file: !1610, line: 1014, column: 21)
!10631 = !DILocation(line: 1015, column: 3, scope: !10630)
!10632 = !DILocation(line: 1016, column: 2, scope: !10630)
!10633 = !DILocation(line: 1059, column: 1, scope: !10619)
!10634 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1610, file: !1610, line: 1583, type: !1504, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10635)
!10635 = !{!10636, !10637, !10638, !10639, !10640, !10641}
!10636 = !DILocalVariable(name: "dev", arg: 1, scope: !10634, file: !1610, line: 1583, type: !1483)
!10637 = !DILocalVariable(name: "config", scope: !10634, file: !1610, line: 1585, type: !9579)
!10638 = !DILocalVariable(name: "data", scope: !10634, file: !1610, line: 1586, type: !9702)
!10639 = !DILocalVariable(name: "ll_parity", scope: !10634, file: !1610, line: 1587, type: !121)
!10640 = !DILocalVariable(name: "ll_datawidth", scope: !10634, file: !1610, line: 1588, type: !121)
!10641 = !DILocalVariable(name: "err", scope: !10634, file: !1610, line: 1589, type: !103)
!10642 = !DILocation(line: 0, scope: !10634)
!10643 = !DILocation(line: 1585, column: 48, scope: !10634)
!10644 = !DILocation(line: 1586, column: 38, scope: !10634)
!10645 = !DILocation(line: 1591, column: 2, scope: !10634)
!10646 = !DILocation(line: 1593, column: 29, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10634, file: !1610, line: 1593, column: 6)
!10648 = !DILocation(line: 1593, column: 7, scope: !10647)
!10649 = !DILocation(line: 1593, column: 6, scope: !10634)
!10650 = !DILocation(line: 1599, column: 31, scope: !10634)
!10651 = !DILocation(line: 1599, column: 71, scope: !10634)
!10652 = !DILocation(line: 1599, column: 8, scope: !10634)
!10653 = !DILocation(line: 1600, column: 10, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10634, file: !1610, line: 1600, column: 6)
!10655 = !DILocation(line: 1600, column: 6, scope: !10634)
!10656 = !DILocation(line: 1616, column: 36, scope: !10634)
!10657 = !DILocation(line: 1616, column: 8, scope: !10634)
!10658 = !DILocation(line: 1617, column: 10, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10634, file: !1610, line: 1617, column: 6)
!10660 = !DILocation(line: 1617, column: 6, scope: !10634)
!10661 = !DILocation(line: 1621, column: 27, scope: !10634)
!10662 = !DILocation(line: 1621, column: 2, scope: !10634)
!10663 = !DILocation(line: 1624, column: 40, scope: !10634)
!10664 = !DILocation(line: 1624, column: 2, scope: !10634)
!10665 = !DILocation(line: 1630, column: 14, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10634, file: !1610, line: 1630, column: 6)
!10667 = !DILocation(line: 1630, column: 6, scope: !10634)
!10668 = !DILocation(line: 1638, column: 2, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10670, file: !1610, line: 1634, column: 34)
!10670 = distinct !DILexicalBlock(scope: !10666, file: !1610, line: 1634, column: 13)
!10671 = !DILocation(line: 0, scope: !10666)
!10672 = !DILocation(line: 1649, column: 35, scope: !10634)
!10673 = !DILocation(line: 1649, column: 2, scope: !10634)
!10674 = !DILocation(line: 1654, column: 14, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10634, file: !1610, line: 1654, column: 6)
!10676 = !DILocation(line: 1654, column: 6, scope: !10634)
!10677 = !DILocation(line: 1655, column: 3, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10675, file: !1610, line: 1654, column: 31)
!10679 = !DILocation(line: 1656, column: 2, scope: !10678)
!10680 = !DILocation(line: 1659, column: 37, scope: !10634)
!10681 = !DILocation(line: 1659, column: 2, scope: !10634)
!10682 = !DILocation(line: 1662, column: 14, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10634, file: !1610, line: 1662, column: 6)
!10684 = !DILocation(line: 1662, column: 6, scope: !10634)
!10685 = !DILocation(line: 1663, column: 37, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10683, file: !1610, line: 1662, column: 27)
!10687 = !DILocation(line: 1663, column: 3, scope: !10686)
!10688 = !DILocation(line: 1664, column: 2, scope: !10686)
!10689 = !DILocation(line: 1684, column: 26, scope: !10634)
!10690 = !DILocation(line: 1684, column: 2, scope: !10634)
!10691 = !DILocation(line: 1701, column: 10, scope: !10634)
!10692 = !DILocation(line: 1701, column: 2, scope: !10634)
!10693 = !DILocation(line: 1722, column: 2, scope: !10634)
!10694 = !DILocation(line: 1724, column: 1, scope: !10634)
!10695 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1610, file: !1610, line: 651, type: !1534, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10696)
!10696 = !{!10697, !10698, !10699}
!10697 = !DILocalVariable(name: "dev", arg: 1, scope: !10695, file: !1610, line: 651, type: !1483)
!10698 = !DILocalVariable(name: "data", scope: !10695, file: !1610, line: 653, type: !9702)
!10699 = !DILocalVariable(name: "clk", scope: !10695, file: !1610, line: 654, type: !10700)
!10700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1483)
!10701 = !DILocation(line: 0, scope: !10695)
!10702 = !DILocation(line: 653, column: 38, scope: !10695)
!10703 = !DILocation(line: 656, column: 8, scope: !10695)
!10704 = !DILocation(line: 656, column: 14, scope: !10695)
!10705 = !DILocation(line: 657, column: 1, scope: !10695)
!10706 = distinct !DISubprogram(name: "device_is_ready", scope: !8161, file: !8161, line: 47, type: !10707, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10709)
!10707 = !DISubroutineType(types: !10708)
!10708 = !{!157, !1483}
!10709 = !{!10710}
!10710 = !DILocalVariable(name: "dev", arg: 1, scope: !10706, file: !8161, line: 47, type: !1483)
!10711 = !DILocation(line: 0, scope: !10706)
!10712 = !DILocation(line: 55, column: 2, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10706, file: !8161, line: 55, column: 2)
!10714 = !{i64 2155125895}
!10715 = !DILocation(line: 56, column: 9, scope: !10706)
!10716 = !DILocation(line: 56, column: 2, scope: !10706)
!10717 = distinct !DISubprogram(name: "clock_control_on", scope: !818, file: !818, line: 123, type: !1572, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10718)
!10718 = !{!10719, !10720, !10721}
!10719 = !DILocalVariable(name: "dev", arg: 1, scope: !10717, file: !818, line: 123, type: !1483)
!10720 = !DILocalVariable(name: "sys", arg: 2, scope: !10717, file: !818, line: 124, type: !910)
!10721 = !DILocalVariable(name: "api", scope: !10717, file: !818, line: 126, type: !1565)
!10722 = !DILocation(line: 0, scope: !10717)
!10723 = !DILocation(line: 127, column: 49, scope: !10717)
!10724 = !DILocation(line: 129, column: 14, scope: !10717)
!10725 = !DILocation(line: 129, column: 9, scope: !10717)
!10726 = !DILocation(line: 129, column: 2, scope: !10717)
!10727 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1637, file: !1637, line: 342, type: !10728, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10730)
!10728 = !DISubroutineType(types: !10729)
!10729 = !{!103, !1698, !154}
!10730 = !{!10731, !10732, !10733, !10734}
!10731 = !DILocalVariable(name: "config", arg: 1, scope: !10727, file: !1637, line: 342, type: !1698)
!10732 = !DILocalVariable(name: "id", arg: 2, scope: !10727, file: !1637, line: 343, type: !154)
!10733 = !DILocalVariable(name: "ret", scope: !10727, file: !1637, line: 345, type: !103)
!10734 = !DILocalVariable(name: "state", scope: !10727, file: !1637, line: 346, type: !1640)
!10735 = !DILocation(line: 0, scope: !10727)
!10736 = !DILocation(line: 346, column: 2, scope: !10727)
!10737 = !DILocation(line: 348, column: 8, scope: !10727)
!10738 = !DILocation(line: 349, column: 10, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10727, file: !1637, line: 349, column: 6)
!10740 = !DILocation(line: 349, column: 6, scope: !10727)
!10741 = !DILocation(line: 353, column: 44, scope: !10727)
!10742 = !DILocation(line: 353, column: 9, scope: !10727)
!10743 = !DILocation(line: 353, column: 2, scope: !10727)
!10744 = !DILocation(line: 354, column: 1, scope: !10727)
!10745 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10015, file: !10015, line: 497, type: !10495, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10746)
!10746 = !{!10747, !10748, !10749}
!10747 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10745, file: !10015, line: 497, type: !1554)
!10748 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10745, file: !10015, line: 497, type: !121)
!10749 = !DILocalVariable(name: "val", scope: !10750, file: !10015, line: 499, type: !121)
!10750 = distinct !DILexicalBlock(scope: !10745, file: !10015, line: 499, column: 3)
!10751 = !DILocation(line: 0, scope: !10745)
!10752 = !DILocation(line: 499, column: 3, scope: !10750)
!10753 = !DILocation(line: 0, scope: !10055, inlinedAt: !10754)
!10754 = distinct !DILocation(line: 499, column: 3, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10750, file: !10015, line: 499, column: 3)
!10756 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10754)
!10757 = !DILocation(line: 499, column: 3, scope: !10755)
!10758 = !DILocation(line: 0, scope: !10750)
!10759 = !DILocation(line: 0, scope: !10068, inlinedAt: !10760)
!10760 = distinct !DILocation(line: 499, column: 3, scope: !10750)
!10761 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10760)
!10762 = distinct !{!10762, !10752, !10752}
!10763 = !DILocation(line: 500, column: 1, scope: !10745)
!10764 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10015, file: !10015, line: 850, type: !10504, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10765)
!10765 = !{!10766, !10767, !10768, !10769}
!10766 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10764, file: !10015, line: 850, type: !1554)
!10767 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10764, file: !10015, line: 850, type: !121)
!10768 = !DILocalVariable(name: "Parity", arg: 3, scope: !10764, file: !10015, line: 850, type: !121)
!10769 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10764, file: !10015, line: 851, type: !121)
!10770 = !DILocation(line: 0, scope: !10764)
!10771 = !DILocation(line: 853, column: 3, scope: !10764)
!10772 = !DILocation(line: 854, column: 3, scope: !10764)
!10773 = !DILocation(line: 855, column: 1, scope: !10764)
!10774 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10015, file: !10015, line: 1337, type: !10046, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10775)
!10775 = !{!10776}
!10776 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10774, file: !10015, line: 1337, type: !1554)
!10777 = !DILocation(line: 0, scope: !10774)
!10778 = !DILocation(line: 1339, column: 3, scope: !10774)
!10779 = !DILocation(line: 1340, column: 1, scope: !10774)
!10780 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1637, file: !1637, line: 316, type: !10781, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10783)
!10781 = !DISubroutineType(types: !10782)
!10782 = !{!103, !1698, !1640}
!10783 = !{!10784, !10785, !10786}
!10784 = !DILocalVariable(name: "config", arg: 1, scope: !10780, file: !1637, line: 317, type: !1698)
!10785 = !DILocalVariable(name: "state", arg: 2, scope: !10780, file: !1637, line: 318, type: !1640)
!10786 = !DILocalVariable(name: "reg", scope: !10780, file: !1637, line: 320, type: !22)
!10787 = !DILocation(line: 0, scope: !10780)
!10788 = !DILocation(line: 329, column: 39, scope: !10780)
!10789 = !DILocation(line: 329, column: 52, scope: !10780)
!10790 = !DILocation(line: 329, column: 9, scope: !10780)
!10791 = !DILocation(line: 329, column: 2, scope: !10780)
!10792 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !10707, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1439, retainedNodes: !10793)
!10793 = !{!10794}
!10794 = !DILocalVariable(name: "dev", arg: 1, scope: !10792, file: !141, line: 730, type: !1483)
!10795 = !DILocation(line: 0, scope: !10792)
!10796 = !DILocation(line: 732, column: 9, scope: !10792)
!10797 = !DILocation(line: 732, column: 2, scope: !10792)
!10798 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1781, file: !1781, line: 270, type: !1787, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1703, retainedNodes: !10799)
!10799 = !{!10800}
!10800 = !DILocalVariable(name: "dev", arg: 1, scope: !10798, file: !1781, line: 270, type: !1789)
!10801 = !DILocation(line: 0, scope: !10798)
!10802 = !DILocation(line: 274, column: 2, scope: !10798)
!10803 = !DILocation(line: 275, column: 12, scope: !10798)
!10804 = !DILocation(line: 276, column: 15, scope: !10798)
!10805 = !DILocation(line: 277, column: 16, scope: !10798)
!10806 = !DILocation(line: 278, column: 15, scope: !10798)
!10807 = !DILocation(line: 279, column: 16, scope: !10798)
!10808 = !DILocation(line: 282, column: 2, scope: !10798)
!10809 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !5987, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1703, retainedNodes: !10810)
!10810 = !{!10811, !10812}
!10811 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10809, file: !515, line: 1814, type: !772)
!10812 = !DILocalVariable(name: "priority", arg: 2, scope: !10809, file: !515, line: 1814, type: !121)
!10813 = !DILocation(line: 0, scope: !10809)
!10814 = !DILocation(line: 1822, column: 46, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10816, file: !515, line: 1821, column: 3)
!10816 = distinct !DILexicalBlock(scope: !10809, file: !515, line: 1816, column: 7)
!10817 = !DILocation(line: 1824, column: 1, scope: !10809)
!10818 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1781, file: !1781, line: 118, type: !5890, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1703, retainedNodes: !10819)
!10819 = !{!10820, !10821}
!10820 = !DILocalVariable(name: "arg", arg: 1, scope: !10818, file: !1781, line: 118, type: !102)
!10821 = !DILocalVariable(name: "dticks", scope: !10818, file: !1781, line: 121, type: !121)
!10822 = !DILocation(line: 0, scope: !10818)
!10823 = !DILocation(line: 124, column: 2, scope: !10818)
!10824 = !DILocation(line: 129, column: 17, scope: !10818)
!10825 = !DILocation(line: 129, column: 14, scope: !10818)
!10826 = !DILocation(line: 130, column: 15, scope: !10818)
!10827 = !DILocation(line: 145, column: 27, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !1781, line: 132, column: 16)
!10829 = distinct !DILexicalBlock(scope: !10818, file: !1781, line: 132, column: 6)
!10830 = !DILocation(line: 145, column: 25, scope: !10828)
!10831 = !DILocation(line: 145, column: 45, scope: !10828)
!10832 = !DILocation(line: 146, column: 30, scope: !10828)
!10833 = !DILocation(line: 146, column: 20, scope: !10828)
!10834 = !DILocation(line: 147, column: 3, scope: !10828)
!10835 = !DILocation(line: 151, column: 2, scope: !10818)
!10836 = !DILocation(line: 152, column: 1, scope: !10818)
!10837 = distinct !DISubprogram(name: "elapsed", scope: !1781, file: !1781, line: 85, type: !6034, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1703, retainedNodes: !10838)
!10838 = !{!10839, !10840, !10841}
!10839 = !DILocalVariable(name: "val1", scope: !10837, file: !1781, line: 87, type: !121)
!10840 = !DILocalVariable(name: "ctrl", scope: !10837, file: !1781, line: 88, type: !121)
!10841 = !DILocalVariable(name: "val2", scope: !10837, file: !1781, line: 89, type: !121)
!10842 = !DILocation(line: 87, column: 27, scope: !10837)
!10843 = !DILocation(line: 0, scope: !10837)
!10844 = !DILocation(line: 88, column: 27, scope: !10837)
!10845 = !DILocation(line: 89, column: 27, scope: !10837)
!10846 = !DILocation(line: 105, column: 12, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10837, file: !1781, line: 105, column: 6)
!10848 = !DILocation(line: 106, column: 6, scope: !10847)
!10849 = !DILocation(line: 107, column: 16, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10847, file: !1781, line: 106, column: 24)
!10851 = !DILocation(line: 111, column: 18, scope: !10850)
!10852 = !DILocation(line: 112, column: 2, scope: !10850)
!10853 = !DILocation(line: 114, column: 20, scope: !10837)
!10854 = !DILocation(line: 114, column: 30, scope: !10837)
!10855 = !DILocation(line: 114, column: 28, scope: !10837)
!10856 = !DILocation(line: 114, column: 2, scope: !10837)
!10857 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1781, file: !1781, line: 154, type: !10858, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1703, retainedNodes: !10860)
!10858 = !DISubroutineType(types: !10859)
!10859 = !{null, !746, !157}
!10860 = !{!10861, !10862, !10863, !10864, !10865, !10866, !10867, !10872, !10873}
!10861 = !DILocalVariable(name: "ticks", arg: 1, scope: !10857, file: !1781, line: 154, type: !746)
!10862 = !DILocalVariable(name: "idle", arg: 2, scope: !10857, file: !1781, line: 154, type: !157)
!10863 = !DILocalVariable(name: "delay", scope: !10857, file: !1781, line: 169, type: !121)
!10864 = !DILocalVariable(name: "val1", scope: !10857, file: !1781, line: 170, type: !121)
!10865 = !DILocalVariable(name: "val2", scope: !10857, file: !1781, line: 170, type: !121)
!10866 = !DILocalVariable(name: "last_load_", scope: !10857, file: !1781, line: 171, type: !121)
!10867 = !DILocalVariable(name: "key", scope: !10857, file: !1781, line: 176, type: !10868)
!10868 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !10869)
!10869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !10870)
!10870 = !{!10871}
!10871 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10869, file: !316, line: 33, baseType: !103, size: 32)
!10872 = !DILocalVariable(name: "pending", scope: !10857, file: !1781, line: 178, type: !121)
!10873 = !DILocalVariable(name: "unannounced", scope: !10857, file: !1781, line: 185, type: !121)
!10874 = !DILocation(line: 0, scope: !10857)
!10875 = !DILocation(line: 162, column: 49, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10857, file: !1781, line: 162, column: 6)
!10877 = !DILocation(line: 163, column: 17, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10876, file: !1781, line: 162, column: 78)
!10879 = !DILocation(line: 164, column: 13, scope: !10878)
!10880 = !DILocation(line: 165, column: 3, scope: !10878)
!10881 = !DILocation(line: 171, column: 24, scope: !10857)
!10882 = !DILocation(line: 173, column: 10, scope: !10857)
!10883 = !DILocation(line: 174, column: 10, scope: !10857)
!10884 = !DILocalVariable(name: "l", arg: 1, scope: !10885, file: !316, line: 136, type: !10888)
!10885 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !10886, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1703, retainedNodes: !10889)
!10886 = !DISubroutineType(types: !10887)
!10887 = !{!10868, !10888}
!10888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 32)
!10889 = !{!10884, !10890}
!10890 = !DILocalVariable(name: "k", scope: !10885, file: !316, line: 139, type: !10868)
!10891 = !DILocation(line: 0, scope: !10885, inlinedAt: !10892)
!10892 = distinct !DILocation(line: 176, column: 25, scope: !10857)
!10893 = !DILocation(line: 55, column: 2, scope: !10894, inlinedAt: !10898)
!10894 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5738, file: !5738, line: 42, type: !5739, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1703, retainedNodes: !10895)
!10895 = !{!10896, !10897}
!10896 = !DILocalVariable(name: "key", scope: !10894, file: !5738, line: 44, type: !32)
!10897 = !DILocalVariable(name: "tmp", scope: !10894, file: !5738, line: 53, type: !32)
!10898 = distinct !DILocation(line: 145, column: 10, scope: !10885, inlinedAt: !10892)
!10899 = !{i64 2195817}
!10900 = !DILocation(line: 0, scope: !10894, inlinedAt: !10898)
!10901 = !DILocation(line: 178, column: 21, scope: !10857)
!10902 = !DILocation(line: 180, column: 18, scope: !10857)
!10903 = !DILocation(line: 182, column: 14, scope: !10857)
!10904 = !DILocation(line: 183, column: 15, scope: !10857)
!10905 = !DILocation(line: 185, column: 39, scope: !10857)
!10906 = !DILocation(line: 185, column: 37, scope: !10857)
!10907 = !DILocation(line: 187, column: 27, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10857, file: !1781, line: 187, column: 6)
!10909 = !DILocation(line: 187, column: 6, scope: !10857)
!10910 = !DILocation(line: 202, column: 27, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10908, file: !1781, line: 195, column: 9)
!10912 = !DILocation(line: 202, column: 48, scope: !10911)
!10913 = !DILocation(line: 203, column: 9, scope: !10911)
!10914 = !DILocation(line: 204, column: 11, scope: !10911)
!10915 = !DILocation(line: 205, column: 13, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10911, file: !1781, line: 205, column: 7)
!10917 = !DILocation(line: 205, column: 7, scope: !10911)
!10918 = !DILocation(line: 0, scope: !10908)
!10919 = !DILocation(line: 212, column: 18, scope: !10857)
!10920 = !DILocation(line: 214, column: 28, scope: !10857)
!10921 = !DILocation(line: 214, column: 16, scope: !10857)
!10922 = !DILocation(line: 215, column: 15, scope: !10857)
!10923 = !DILocation(line: 227, column: 11, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10857, file: !1781, line: 227, column: 6)
!10925 = !DILocation(line: 227, column: 6, scope: !10857)
!10926 = !DILocation(line: 228, column: 15, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10924, file: !1781, line: 227, column: 19)
!10928 = !DILocation(line: 228, column: 38, scope: !10927)
!10929 = !DILocation(line: 228, column: 24, scope: !10927)
!10930 = !DILocation(line: 229, column: 2, scope: !10927)
!10931 = !DILocation(line: 230, column: 24, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10924, file: !1781, line: 229, column: 9)
!10933 = !DILocation(line: 230, column: 15, scope: !10932)
!10934 = !DILocation(line: 0, scope: !10924)
!10935 = !DILocalVariable(name: "key", arg: 2, scope: !10936, file: !316, line: 190, type: !10868)
!10936 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !10937, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1703, retainedNodes: !10939)
!10937 = !DISubroutineType(types: !10938)
!10938 = !{null, !10888, !10868}
!10939 = !{!10940, !10935}
!10940 = !DILocalVariable(name: "l", arg: 1, scope: !10936, file: !316, line: 189, type: !10888)
!10941 = !DILocation(line: 0, scope: !10936, inlinedAt: !10942)
!10942 = distinct !DILocation(line: 232, column: 2, scope: !10857)
!10943 = !DILocalVariable(name: "key", arg: 1, scope: !10944, file: !5738, line: 84, type: !32)
!10944 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5738, file: !5738, line: 84, type: !5749, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1703, retainedNodes: !10945)
!10945 = !{!10943}
!10946 = !DILocation(line: 0, scope: !10944, inlinedAt: !10947)
!10947 = distinct !DILocation(line: 215, column: 2, scope: !10936, inlinedAt: !10942)
!10948 = !DILocation(line: 95, column: 2, scope: !10944, inlinedAt: !10947)
!10949 = !{i64 2196634}
!10950 = !DILocation(line: 234, column: 1, scope: !10857)
!10951 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1781, file: !1781, line: 236, type: !6034, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1703, retainedNodes: !10952)
!10952 = !{!10953, !10954}
!10953 = !DILocalVariable(name: "key", scope: !10951, file: !1781, line: 242, type: !10868)
!10954 = !DILocalVariable(name: "cyc", scope: !10951, file: !1781, line: 243, type: !121)
!10955 = !DILocation(line: 0, scope: !10885, inlinedAt: !10956)
!10956 = distinct !DILocation(line: 242, column: 25, scope: !10951)
!10957 = !DILocation(line: 55, column: 2, scope: !10894, inlinedAt: !10958)
!10958 = distinct !DILocation(line: 145, column: 10, scope: !10885, inlinedAt: !10956)
!10959 = !DILocation(line: 0, scope: !10894, inlinedAt: !10958)
!10960 = !DILocation(line: 0, scope: !10951)
!10961 = !DILocation(line: 243, column: 17, scope: !10951)
!10962 = !DILocation(line: 243, column: 29, scope: !10951)
!10963 = !DILocation(line: 243, column: 27, scope: !10951)
!10964 = !DILocation(line: 243, column: 43, scope: !10951)
!10965 = !DILocation(line: 243, column: 41, scope: !10951)
!10966 = !DILocation(line: 0, scope: !10936, inlinedAt: !10967)
!10967 = distinct !DILocation(line: 245, column: 2, scope: !10951)
!10968 = !DILocation(line: 0, scope: !10944, inlinedAt: !10969)
!10969 = distinct !DILocation(line: 215, column: 2, scope: !10936, inlinedAt: !10967)
!10970 = !DILocation(line: 95, column: 2, scope: !10944, inlinedAt: !10969)
!10971 = !DILocation(line: 246, column: 13, scope: !10951)
!10972 = !DILocation(line: 246, column: 2, scope: !10951)
!10973 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1781, file: !1781, line: 249, type: !6034, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1703, retainedNodes: !10974)
!10974 = !{!10975, !10976}
!10975 = !DILocalVariable(name: "key", scope: !10973, file: !1781, line: 251, type: !10868)
!10976 = !DILocalVariable(name: "ret", scope: !10973, file: !1781, line: 252, type: !121)
!10977 = !DILocation(line: 0, scope: !10885, inlinedAt: !10978)
!10978 = distinct !DILocation(line: 251, column: 25, scope: !10973)
!10979 = !DILocation(line: 55, column: 2, scope: !10894, inlinedAt: !10980)
!10980 = distinct !DILocation(line: 145, column: 10, scope: !10885, inlinedAt: !10978)
!10981 = !DILocation(line: 0, scope: !10894, inlinedAt: !10980)
!10982 = !DILocation(line: 0, scope: !10973)
!10983 = !DILocation(line: 252, column: 17, scope: !10973)
!10984 = !DILocation(line: 252, column: 29, scope: !10973)
!10985 = !DILocation(line: 252, column: 27, scope: !10973)
!10986 = !DILocation(line: 0, scope: !10936, inlinedAt: !10987)
!10987 = distinct !DILocation(line: 254, column: 2, scope: !10973)
!10988 = !DILocation(line: 0, scope: !10944, inlinedAt: !10989)
!10989 = distinct !DILocation(line: 215, column: 2, scope: !10936, inlinedAt: !10987)
!10990 = !DILocation(line: 95, column: 2, scope: !10944, inlinedAt: !10989)
!10991 = !DILocation(line: 255, column: 2, scope: !10973)
!10992 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1781, file: !1781, line: 258, type: !3181, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1703, retainedNodes: !317)
!10993 = !DILocation(line: 260, column: 6, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10992, file: !1781, line: 260, column: 6)
!10995 = !DILocation(line: 260, column: 16, scope: !10994)
!10996 = !DILocation(line: 260, column: 6, scope: !10992)
!10997 = !DILocation(line: 261, column: 17, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10994, file: !1781, line: 260, column: 34)
!10999 = !DILocation(line: 262, column: 2, scope: !10998)
!11000 = !DILocation(line: 263, column: 1, scope: !10992)
!11001 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1781, file: !1781, line: 265, type: !3181, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1703, retainedNodes: !317)
!11002 = !DILocation(line: 267, column: 16, scope: !11001)
!11003 = !DILocation(line: 268, column: 1, scope: !11001)
!11004 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11005, file: !11005, line: 9, type: !11006, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2949, retainedNodes: !11029)
!11005 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11006 = !DISubroutineType(types: !11007)
!11007 = !{!103, !11008, !154, !11028}
!11008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11009, size: 32)
!11009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11010)
!11010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1637, line: 60, size: 64, elements: !11011)
!11011 = !{!11012, !11027}
!11012 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11010, file: !1637, line: 69, baseType: !11013, size: 32)
!11013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11014, size: 32)
!11014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11015)
!11015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1637, line: 50, size: 64, elements: !11016)
!11016 = !{!11017, !11025, !11026}
!11017 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11015, file: !1637, line: 52, baseType: !11018, size: 32)
!11018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11019, size: 32)
!11019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11020)
!11020 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1648, line: 37, baseType: !11021)
!11021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1648, line: 32, size: 64, elements: !11022)
!11022 = !{!11023, !11024}
!11023 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11021, file: !1648, line: 34, baseType: !121, size: 32)
!11024 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11021, file: !1648, line: 36, baseType: !121, size: 32, offset: 32)
!11025 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11015, file: !1637, line: 54, baseType: !154, size: 8, offset: 32)
!11026 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11015, file: !1637, line: 56, baseType: !154, size: 8, offset: 40)
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11010, file: !1637, line: 71, baseType: !154, size: 8, offset: 32)
!11028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11013, size: 32)
!11029 = !{!11030, !11031, !11032}
!11030 = !DILocalVariable(name: "config", arg: 1, scope: !11004, file: !11005, line: 9, type: !11008)
!11031 = !DILocalVariable(name: "id", arg: 2, scope: !11004, file: !11005, line: 9, type: !154)
!11032 = !DILocalVariable(name: "state", arg: 3, scope: !11004, file: !11005, line: 10, type: !11028)
!11033 = !DILocation(line: 0, scope: !11004)
!11034 = !DILocation(line: 12, column: 20, scope: !11004)
!11035 = !DILocation(line: 13, column: 27, scope: !11004)
!11036 = !DILocation(line: 13, column: 42, scope: !11004)
!11037 = !DILocation(line: 13, column: 19, scope: !11004)
!11038 = !DILocation(line: 13, column: 16, scope: !11004)
!11039 = !DILocation(line: 13, column: 2, scope: !11004)
!11040 = distinct !{!11040, !11039, !11041}
!11041 = !DILocation(line: 19, column: 2, scope: !11004)
!11042 = !DILocation(line: 14, column: 23, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11044, file: !11005, line: 14, column: 7)
!11044 = distinct !DILexicalBlock(scope: !11004, file: !11005, line: 13, column: 54)
!11045 = !DILocation(line: 14, column: 10, scope: !11043)
!11046 = !DILocation(line: 18, column: 11, scope: !11044)
!11047 = !DILocation(line: 14, column: 7, scope: !11044)
!11048 = !DILocation(line: 22, column: 1, scope: !11004)
!11049 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1898, file: !1898, line: 193, type: !11050, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11059)
!11050 = !DISubroutineType(types: !11051)
!11051 = !{!103, !11052, !154, !22}
!11052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11053, size: 32)
!11053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11054)
!11054 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1648, line: 37, baseType: !11055)
!11055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1648, line: 32, size: 64, elements: !11056)
!11056 = !{!11057, !11058}
!11057 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11055, file: !1648, line: 34, baseType: !121, size: 32)
!11058 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11055, file: !1648, line: 36, baseType: !121, size: 32, offset: 32)
!11059 = !{!11060, !11061, !11062, !11063, !11064, !11065, !11066, !11067, !11069}
!11060 = !DILocalVariable(name: "pins", arg: 1, scope: !11049, file: !1898, line: 193, type: !11052)
!11061 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11049, file: !1898, line: 193, type: !154)
!11062 = !DILocalVariable(name: "reg", arg: 3, scope: !11049, file: !1898, line: 194, type: !22)
!11063 = !DILocalVariable(name: "pin", scope: !11049, file: !1898, line: 196, type: !121)
!11064 = !DILocalVariable(name: "mux", scope: !11049, file: !1898, line: 196, type: !121)
!11065 = !DILocalVariable(name: "pin_cgf", scope: !11049, file: !1898, line: 197, type: !121)
!11066 = !DILocalVariable(name: "ret", scope: !11049, file: !1898, line: 198, type: !103)
!11067 = !DILocalVariable(name: "i", scope: !11068, file: !1898, line: 209, type: !154)
!11068 = distinct !DILexicalBlock(scope: !11049, file: !1898, line: 209, column: 2)
!11069 = !DILocalVariable(name: "gpio_out", scope: !11070, file: !1898, line: 239, type: !121)
!11070 = distinct !DILexicalBlock(scope: !11071, file: !1898, line: 238, column: 55)
!11071 = distinct !DILexicalBlock(scope: !11072, file: !1898, line: 238, column: 14)
!11072 = distinct !DILexicalBlock(scope: !11073, file: !1898, line: 236, column: 14)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !1898, line: 234, column: 7)
!11074 = distinct !DILexicalBlock(scope: !11075, file: !1898, line: 209, column: 41)
!11075 = distinct !DILexicalBlock(scope: !11068, file: !1898, line: 209, column: 2)
!11076 = !DILocation(line: 0, scope: !11049)
!11077 = !DILocation(line: 0, scope: !11068)
!11078 = !DILocation(line: 209, column: 25, scope: !11075)
!11079 = !DILocation(line: 209, column: 2, scope: !11068)
!11080 = distinct !{!11080, !11079, !11081}
!11081 = !DILocation(line: 259, column: 2, scope: !11068)
!11082 = !DILocation(line: 210, column: 17, scope: !11074)
!11083 = !DILocation(line: 234, column: 7, scope: !11073)
!11084 = !DILocation(line: 234, column: 33, scope: !11073)
!11085 = !DILocation(line: 234, column: 7, scope: !11074)
!11086 = !DILocation(line: 235, column: 22, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11073, file: !1898, line: 234, column: 49)
!11088 = !DILocation(line: 235, column: 29, scope: !11087)
!11089 = !DILocation(line: 236, column: 3, scope: !11087)
!11090 = !DILocation(line: 236, column: 14, scope: !11073)
!11091 = !DILocation(line: 239, column: 32, scope: !11070)
!11092 = !DILocation(line: 0, scope: !11070)
!11093 = !DILocation(line: 241, column: 8, scope: !11070)
!11094 = !DILocation(line: 246, column: 3, scope: !11070)
!11095 = !DILocation(line: 252, column: 9, scope: !11074)
!11096 = !DILocation(line: 255, column: 9, scope: !11074)
!11097 = !DILocation(line: 256, column: 11, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11074, file: !1898, line: 256, column: 7)
!11099 = !DILocation(line: 209, column: 37, scope: !11075)
!11100 = !DILocation(line: 256, column: 7, scope: !11074)
!11101 = !DILocation(line: 262, column: 1, scope: !11049)
!11102 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1898, file: !1898, line: 176, type: !11103, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11105)
!11103 = !DISubroutineType(types: !11104)
!11104 = !{!103, !121, !121, !121}
!11105 = !{!11106, !11107, !11108, !11109}
!11106 = !DILocalVariable(name: "pin", arg: 1, scope: !11102, file: !1898, line: 176, type: !121)
!11107 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11102, file: !1898, line: 176, type: !121)
!11108 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11102, file: !1898, line: 176, type: !121)
!11109 = !DILocalVariable(name: "port_device", scope: !11102, file: !1898, line: 178, type: !1828)
!11110 = !DILocation(line: 0, scope: !11102)
!11111 = !DILocation(line: 180, column: 22, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11102, file: !1898, line: 180, column: 6)
!11113 = !DILocation(line: 180, column: 6, scope: !11102)
!11114 = !DILocation(line: 180, column: 6, scope: !11112)
!11115 = !DILocation(line: 184, column: 16, scope: !11102)
!11116 = !DILocation(line: 186, column: 19, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11102, file: !1898, line: 186, column: 6)
!11118 = !DILocation(line: 186, column: 28, scope: !11117)
!11119 = !DILocation(line: 186, column: 33, scope: !11117)
!11120 = !DILocation(line: 186, column: 6, scope: !11102)
!11121 = !DILocation(line: 190, column: 43, scope: !11102)
!11122 = !DILocation(line: 190, column: 9, scope: !11102)
!11123 = !DILocation(line: 190, column: 2, scope: !11102)
!11124 = !DILocation(line: 191, column: 1, scope: !11102)
!11125 = distinct !DISubprogram(name: "device_is_ready", scope: !8161, file: !8161, line: 47, type: !11126, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11128)
!11126 = !DISubroutineType(types: !11127)
!11127 = !{!157, !1828}
!11128 = !{!11129}
!11129 = !DILocalVariable(name: "dev", arg: 1, scope: !11125, file: !8161, line: 47, type: !1828)
!11130 = !DILocation(line: 0, scope: !11125)
!11131 = !DILocation(line: 55, column: 2, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11125, file: !8161, line: 55, column: 2)
!11133 = !{i64 2149429823}
!11134 = !DILocation(line: 56, column: 9, scope: !11125)
!11135 = !DILocation(line: 56, column: 2, scope: !11125)
!11136 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !11126, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11137)
!11137 = !{!11138}
!11138 = !DILocalVariable(name: "dev", arg: 1, scope: !11136, file: !141, line: 730, type: !1828)
!11139 = !DILocation(line: 0, scope: !11136)
!11140 = !DILocation(line: 732, column: 9, scope: !11136)
!11141 = !DILocation(line: 732, column: 2, scope: !11136)
!11142 = distinct !DISubprogram(name: "SystemInit", scope: !1946, file: !1946, line: 167, type: !3181, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1906, retainedNodes: !317)
!11143 = !DILocation(line: 182, column: 1, scope: !11142)
!11144 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1946, file: !1946, line: 220, type: !3181, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1906, retainedNodes: !11145)
!11145 = !{!11146, !11147, !11148, !11149, !11150}
!11146 = !DILocalVariable(name: "tmp", scope: !11144, file: !1946, line: 222, type: !121)
!11147 = !DILocalVariable(name: "pllvco", scope: !11144, file: !1946, line: 222, type: !121)
!11148 = !DILocalVariable(name: "pllp", scope: !11144, file: !1946, line: 222, type: !121)
!11149 = !DILocalVariable(name: "pllsource", scope: !11144, file: !1946, line: 222, type: !121)
!11150 = !DILocalVariable(name: "pllm", scope: !11144, file: !1946, line: 222, type: !121)
!11151 = !DILocation(line: 0, scope: !11144)
!11152 = !DILocation(line: 225, column: 14, scope: !11144)
!11153 = !DILocation(line: 225, column: 19, scope: !11144)
!11154 = !DILocation(line: 227, column: 3, scope: !11144)
!11155 = !DILocation(line: 234, column: 7, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11144, file: !1946, line: 228, column: 3)
!11157 = !DILocation(line: 240, column: 25, scope: !11156)
!11158 = !DILocation(line: 241, column: 19, scope: !11156)
!11159 = !DILocation(line: 241, column: 27, scope: !11156)
!11160 = !DILocation(line: 243, column: 21, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11156, file: !1946, line: 243, column: 11)
!11162 = !DILocation(line: 0, scope: !11161)
!11163 = !DILocation(line: 254, column: 22, scope: !11156)
!11164 = !DILocation(line: 254, column: 62, scope: !11156)
!11165 = !DILocation(line: 255, column: 31, scope: !11156)
!11166 = !DILocation(line: 256, column: 7, scope: !11156)
!11167 = !DILocation(line: 0, scope: !11156)
!11168 = !DILocation(line: 263, column: 30, scope: !11144)
!11169 = !DILocation(line: 263, column: 52, scope: !11144)
!11170 = !DILocation(line: 263, column: 9, scope: !11144)
!11171 = !DILocation(line: 265, column: 19, scope: !11144)
!11172 = !DILocation(line: 266, column: 1, scope: !11144)
!11173 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11174, file: !11174, line: 200, type: !11175, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !317)
!11174 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11175 = !DISubroutineType(types: !11176)
!11176 = !{!11177}
!11177 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2955, line: 44, baseType: !2954)
!11178 = !DILocation(line: 202, column: 3, scope: !11173)
!11179 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11174, file: !11174, line: 219, type: !11180, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11204)
!11180 = !DISubroutineType(types: !11181)
!11181 = !{!11177, !11182}
!11182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11183, size: 32)
!11183 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11184, line: 70, baseType: !11185)
!11184 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11185 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11184, line: 49, size: 384, elements: !11186)
!11186 = !{!11187, !11188, !11189, !11190, !11191, !11192, !11193}
!11187 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11185, file: !11184, line: 51, baseType: !121, size: 32)
!11188 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11185, file: !11184, line: 54, baseType: !121, size: 32, offset: 32)
!11189 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11185, file: !11184, line: 57, baseType: !121, size: 32, offset: 64)
!11190 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11185, file: !11184, line: 60, baseType: !121, size: 32, offset: 96)
!11191 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11185, file: !11184, line: 63, baseType: !121, size: 32, offset: 128)
!11192 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11185, file: !11184, line: 66, baseType: !121, size: 32, offset: 160)
!11193 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11185, file: !11184, line: 69, baseType: !11194, size: 192, offset: 192)
!11194 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11195, line: 73, baseType: !11196)
!11195 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11196 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11195, line: 45, size: 192, elements: !11197)
!11197 = !{!11198, !11199, !11200, !11201, !11202, !11203}
!11198 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11196, file: !11195, line: 47, baseType: !121, size: 32)
!11199 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11196, file: !11195, line: 50, baseType: !121, size: 32, offset: 32)
!11200 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11196, file: !11195, line: 53, baseType: !121, size: 32, offset: 64)
!11201 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11196, file: !11195, line: 56, baseType: !121, size: 32, offset: 96)
!11202 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11196, file: !11195, line: 60, baseType: !121, size: 32, offset: 128)
!11203 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11196, file: !11195, line: 63, baseType: !121, size: 32, offset: 160)
!11204 = !{!11205, !11206, !11207, !11208, !11212}
!11205 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11179, file: !11174, line: 219, type: !11182)
!11206 = !DILocalVariable(name: "tickstart", scope: !11179, file: !11174, line: 221, type: !121)
!11207 = !DILocalVariable(name: "pll_config", scope: !11179, file: !11174, line: 221, type: !121)
!11208 = !DILocalVariable(name: "pwrclkchanged", scope: !11209, file: !11174, line: 391, type: !11211)
!11209 = distinct !DILexicalBlock(scope: !11210, file: !11174, line: 390, column: 3)
!11210 = distinct !DILexicalBlock(scope: !11179, file: !11174, line: 389, column: 6)
!11211 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !813, line: 188, baseType: !2961)
!11212 = !DILocalVariable(name: "tmpreg", scope: !11213, file: !11174, line: 400, type: !120)
!11213 = distinct !DILexicalBlock(scope: !11214, file: !11174, line: 400, column: 7)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !11174, line: 399, column: 5)
!11215 = distinct !DILexicalBlock(scope: !11209, file: !11174, line: 398, column: 8)
!11216 = !DILocation(line: 0, scope: !11179)
!11217 = !DILocation(line: 224, column: 24, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11179, file: !11174, line: 224, column: 6)
!11219 = !DILocation(line: 224, column: 6, scope: !11179)
!11220 = !DILocation(line: 232, column: 27, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11179, file: !11174, line: 232, column: 6)
!11222 = !DILocation(line: 232, column: 43, scope: !11221)
!11223 = !DILocation(line: 232, column: 69, scope: !11221)
!11224 = !DILocation(line: 232, column: 6, scope: !11179)
!11225 = !DILocation(line: 237, column: 9, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11227, file: !11174, line: 237, column: 8)
!11227 = distinct !DILexicalBlock(scope: !11221, file: !11174, line: 233, column: 3)
!11228 = !DILocation(line: 237, column: 39, scope: !11226)
!11229 = !DILocation(line: 237, column: 60, scope: !11226)
!11230 = !DILocation(line: 238, column: 9, scope: !11226)
!11231 = !DILocation(line: 238, column: 39, scope: !11226)
!11232 = !DILocation(line: 238, column: 60, scope: !11226)
!11233 = !DILocation(line: 238, column: 70, scope: !11226)
!11234 = !DILocation(line: 238, column: 78, scope: !11226)
!11235 = !DILocation(line: 238, column: 100, scope: !11226)
!11236 = !DILocation(line: 237, column: 8, scope: !11227)
!11237 = !DILocation(line: 240, column: 11, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11239, file: !11174, line: 240, column: 10)
!11239 = distinct !DILexicalBlock(scope: !11226, file: !11174, line: 239, column: 5)
!11240 = !DILocation(line: 240, column: 57, scope: !11238)
!11241 = !DILocation(line: 240, column: 80, scope: !11238)
!11242 = !DILocation(line: 240, column: 89, scope: !11238)
!11243 = !DILocation(line: 240, column: 10, scope: !11239)
!11244 = !DILocation(line: 248, column: 7, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11246, file: !11174, line: 248, column: 7)
!11246 = distinct !DILexicalBlock(scope: !11247, file: !11174, line: 248, column: 7)
!11247 = distinct !DILexicalBlock(scope: !11226, file: !11174, line: 246, column: 5)
!11248 = !DILocation(line: 248, column: 7, scope: !11246)
!11249 = !DILocation(line: 248, column: 7, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11245, file: !11174, line: 248, column: 7)
!11251 = !DILocation(line: 248, column: 7, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11253, file: !11174, line: 248, column: 7)
!11253 = distinct !DILexicalBlock(scope: !11245, file: !11174, line: 248, column: 7)
!11254 = !DILocation(line: 248, column: 7, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11253, file: !11174, line: 248, column: 7)
!11256 = !DILocation(line: 0, scope: !11245)
!11257 = !DILocation(line: 251, column: 30, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11247, file: !11174, line: 251, column: 10)
!11259 = !DILocation(line: 251, column: 40, scope: !11258)
!11260 = !DILocation(line: 0, scope: !11258)
!11261 = !DILocation(line: 251, column: 10, scope: !11247)
!11262 = !DILocation(line: 257, column: 15, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11258, file: !11174, line: 252, column: 7)
!11264 = !DILocation(line: 257, column: 51, scope: !11263)
!11265 = !DILocation(line: 257, column: 9, scope: !11263)
!11266 = !DILocation(line: 259, column: 15, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11268, file: !11174, line: 259, column: 14)
!11268 = distinct !DILexicalBlock(scope: !11263, file: !11174, line: 258, column: 9)
!11269 = !DILocation(line: 259, column: 29, scope: !11267)
!11270 = !DILocation(line: 259, column: 43, scope: !11267)
!11271 = !DILocation(line: 259, column: 14, scope: !11268)
!11272 = distinct !{!11272, !11265, !11273}
!11273 = !DILocation(line: 263, column: 9, scope: !11263)
!11274 = !DILocation(line: 271, column: 15, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11258, file: !11174, line: 266, column: 7)
!11276 = !DILocation(line: 271, column: 9, scope: !11275)
!11277 = !DILocation(line: 273, column: 15, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11279, file: !11174, line: 273, column: 14)
!11279 = distinct !DILexicalBlock(scope: !11275, file: !11174, line: 272, column: 9)
!11280 = !DILocation(line: 273, column: 29, scope: !11278)
!11281 = !DILocation(line: 273, column: 43, scope: !11278)
!11282 = !DILocation(line: 273, column: 14, scope: !11279)
!11283 = distinct !{!11283, !11276, !11284}
!11284 = !DILocation(line: 277, column: 9, scope: !11275)
!11285 = !DILocation(line: 282, column: 27, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11179, file: !11174, line: 282, column: 6)
!11287 = !DILocation(line: 282, column: 43, scope: !11286)
!11288 = !DILocation(line: 282, column: 69, scope: !11286)
!11289 = !DILocation(line: 282, column: 6, scope: !11179)
!11290 = !DILocation(line: 289, column: 9, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !11174, line: 289, column: 8)
!11292 = distinct !DILexicalBlock(scope: !11286, file: !11174, line: 283, column: 3)
!11293 = !DILocation(line: 289, column: 39, scope: !11291)
!11294 = !DILocation(line: 289, column: 60, scope: !11291)
!11295 = !DILocation(line: 290, column: 9, scope: !11291)
!11296 = !DILocation(line: 290, column: 39, scope: !11291)
!11297 = !DILocation(line: 290, column: 60, scope: !11291)
!11298 = !DILocation(line: 290, column: 70, scope: !11291)
!11299 = !DILocation(line: 290, column: 78, scope: !11291)
!11300 = !DILocation(line: 290, column: 100, scope: !11291)
!11301 = !DILocation(line: 289, column: 8, scope: !11292)
!11302 = !DILocation(line: 293, column: 11, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11304, file: !11174, line: 293, column: 10)
!11304 = distinct !DILexicalBlock(scope: !11291, file: !11174, line: 291, column: 5)
!11305 = !DILocation(line: 293, column: 57, scope: !11303)
!11306 = !DILocation(line: 293, column: 80, scope: !11303)
!11307 = !DILocation(line: 293, column: 89, scope: !11303)
!11308 = !DILocation(line: 293, column: 10, scope: !11304)
!11309 = !DILocation(line: 307, column: 30, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11311, file: !11174, line: 307, column: 10)
!11311 = distinct !DILexicalBlock(scope: !11291, file: !11174, line: 305, column: 5)
!11312 = !DILocation(line: 307, column: 39, scope: !11310)
!11313 = !DILocation(line: 307, column: 10, scope: !11311)
!11314 = !DILocation(line: 310, column: 9, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11310, file: !11174, line: 308, column: 7)
!11316 = !DILocation(line: 313, column: 21, scope: !11315)
!11317 = !DILocation(line: 316, column: 9, scope: !11315)
!11318 = !DILocation(line: 316, column: 15, scope: !11315)
!11319 = !DILocation(line: 316, column: 51, scope: !11315)
!11320 = !DILocation(line: 318, column: 15, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11322, file: !11174, line: 318, column: 14)
!11322 = distinct !DILexicalBlock(scope: !11315, file: !11174, line: 317, column: 9)
!11323 = !DILocation(line: 318, column: 29, scope: !11321)
!11324 = !DILocation(line: 318, column: 43, scope: !11321)
!11325 = !DILocation(line: 318, column: 14, scope: !11322)
!11326 = distinct !{!11326, !11317, !11327}
!11327 = !DILocation(line: 322, column: 9, scope: !11315)
!11328 = !DILocation(line: 330, column: 9, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11310, file: !11174, line: 328, column: 7)
!11330 = !DILocation(line: 333, column: 21, scope: !11329)
!11331 = !DILocation(line: 336, column: 9, scope: !11329)
!11332 = !DILocation(line: 336, column: 15, scope: !11329)
!11333 = !DILocation(line: 338, column: 15, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !11174, line: 338, column: 14)
!11335 = distinct !DILexicalBlock(scope: !11329, file: !11174, line: 337, column: 9)
!11336 = !DILocation(line: 338, column: 29, scope: !11334)
!11337 = !DILocation(line: 338, column: 43, scope: !11334)
!11338 = !DILocation(line: 338, column: 14, scope: !11335)
!11339 = distinct !{!11339, !11331, !11340}
!11340 = !DILocation(line: 342, column: 9, scope: !11329)
!11341 = !DILocation(line: 0, scope: !11291)
!11342 = !DILocation(line: 347, column: 27, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11179, file: !11174, line: 347, column: 6)
!11344 = !DILocation(line: 347, column: 43, scope: !11343)
!11345 = !DILocation(line: 347, column: 69, scope: !11343)
!11346 = !DILocation(line: 347, column: 6, scope: !11179)
!11347 = !DILocation(line: 353, column: 28, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11349, file: !11174, line: 353, column: 8)
!11349 = distinct !DILexicalBlock(scope: !11343, file: !11174, line: 348, column: 3)
!11350 = !DILocation(line: 353, column: 37, scope: !11348)
!11351 = !DILocation(line: 353, column: 8, scope: !11349)
!11352 = !DILocation(line: 356, column: 7, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11348, file: !11174, line: 354, column: 5)
!11354 = !DILocation(line: 359, column: 19, scope: !11353)
!11355 = !DILocation(line: 362, column: 7, scope: !11353)
!11356 = !DILocation(line: 362, column: 13, scope: !11353)
!11357 = !DILocation(line: 362, column: 49, scope: !11353)
!11358 = !DILocation(line: 364, column: 13, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11360, file: !11174, line: 364, column: 12)
!11360 = distinct !DILexicalBlock(scope: !11353, file: !11174, line: 363, column: 7)
!11361 = !DILocation(line: 364, column: 27, scope: !11359)
!11362 = !DILocation(line: 364, column: 41, scope: !11359)
!11363 = !DILocation(line: 364, column: 12, scope: !11360)
!11364 = distinct !{!11364, !11355, !11365}
!11365 = !DILocation(line: 368, column: 7, scope: !11353)
!11366 = !DILocation(line: 373, column: 7, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11348, file: !11174, line: 371, column: 5)
!11368 = !DILocation(line: 376, column: 19, scope: !11367)
!11369 = !DILocation(line: 379, column: 7, scope: !11367)
!11370 = !DILocation(line: 379, column: 13, scope: !11367)
!11371 = !DILocation(line: 381, column: 13, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11373, file: !11174, line: 381, column: 12)
!11373 = distinct !DILexicalBlock(scope: !11367, file: !11174, line: 380, column: 7)
!11374 = !DILocation(line: 381, column: 27, scope: !11372)
!11375 = !DILocation(line: 381, column: 41, scope: !11372)
!11376 = !DILocation(line: 381, column: 12, scope: !11373)
!11377 = distinct !{!11377, !11369, !11378}
!11378 = !DILocation(line: 385, column: 7, scope: !11367)
!11379 = !DILocation(line: 389, column: 27, scope: !11210)
!11380 = !DILocation(line: 389, column: 43, scope: !11210)
!11381 = !DILocation(line: 389, column: 69, scope: !11210)
!11382 = !DILocation(line: 389, column: 6, scope: !11179)
!11383 = !DILocation(line: 0, scope: !11209)
!11384 = !DILocation(line: 398, column: 8, scope: !11215)
!11385 = !DILocation(line: 398, column: 8, scope: !11209)
!11386 = !DILocation(line: 400, column: 7, scope: !11213)
!11387 = !DILocation(line: 400, column: 7, scope: !11214)
!11388 = !DILocation(line: 402, column: 5, scope: !11214)
!11389 = !DILocation(line: 404, column: 8, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11209, file: !11174, line: 404, column: 8)
!11391 = !DILocation(line: 404, column: 8, scope: !11209)
!11392 = !DILocation(line: 407, column: 7, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11390, file: !11174, line: 405, column: 5)
!11394 = !DILocation(line: 410, column: 19, scope: !11393)
!11395 = !DILocation(line: 412, column: 7, scope: !11393)
!11396 = !DILocation(line: 412, column: 13, scope: !11393)
!11397 = !DILocation(line: 414, column: 13, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11399, file: !11174, line: 414, column: 12)
!11399 = distinct !DILexicalBlock(scope: !11393, file: !11174, line: 413, column: 7)
!11400 = !DILocation(line: 414, column: 27, scope: !11398)
!11401 = !DILocation(line: 414, column: 40, scope: !11398)
!11402 = !DILocation(line: 414, column: 12, scope: !11399)
!11403 = distinct !{!11403, !11395, !11404}
!11404 = !DILocation(line: 418, column: 7, scope: !11393)
!11405 = !DILocation(line: 422, column: 5, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11407, file: !11174, line: 422, column: 5)
!11407 = distinct !DILexicalBlock(scope: !11209, file: !11174, line: 422, column: 5)
!11408 = !DILocation(line: 422, column: 5, scope: !11407)
!11409 = !DILocation(line: 422, column: 5, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11406, file: !11174, line: 422, column: 5)
!11411 = !DILocation(line: 422, column: 5, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11413, file: !11174, line: 422, column: 5)
!11413 = distinct !DILexicalBlock(scope: !11406, file: !11174, line: 422, column: 5)
!11414 = !DILocation(line: 422, column: 5, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11413, file: !11174, line: 422, column: 5)
!11416 = !DILocation(line: 0, scope: !11406)
!11417 = !DILocation(line: 424, column: 28, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11209, file: !11174, line: 424, column: 8)
!11419 = !DILocation(line: 424, column: 38, scope: !11418)
!11420 = !DILocation(line: 0, scope: !11418)
!11421 = !DILocation(line: 424, column: 8, scope: !11209)
!11422 = !DILocation(line: 430, column: 13, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11418, file: !11174, line: 425, column: 5)
!11424 = !DILocation(line: 430, column: 49, scope: !11423)
!11425 = !DILocation(line: 430, column: 7, scope: !11423)
!11426 = !DILocation(line: 432, column: 13, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11428, file: !11174, line: 432, column: 12)
!11428 = distinct !DILexicalBlock(scope: !11423, file: !11174, line: 431, column: 7)
!11429 = !DILocation(line: 432, column: 27, scope: !11427)
!11430 = !DILocation(line: 432, column: 41, scope: !11427)
!11431 = !DILocation(line: 432, column: 12, scope: !11428)
!11432 = distinct !{!11432, !11425, !11433}
!11433 = !DILocation(line: 436, column: 7, scope: !11423)
!11434 = !DILocation(line: 444, column: 13, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11418, file: !11174, line: 439, column: 5)
!11436 = !DILocation(line: 444, column: 7, scope: !11435)
!11437 = !DILocation(line: 446, column: 13, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11439, file: !11174, line: 446, column: 12)
!11439 = distinct !DILexicalBlock(scope: !11435, file: !11174, line: 445, column: 7)
!11440 = !DILocation(line: 446, column: 27, scope: !11438)
!11441 = !DILocation(line: 446, column: 41, scope: !11438)
!11442 = !DILocation(line: 446, column: 12, scope: !11439)
!11443 = distinct !{!11443, !11436, !11444}
!11444 = !DILocation(line: 450, column: 7, scope: !11435)
!11445 = !DILocation(line: 454, column: 8, scope: !11209)
!11446 = !DILocation(line: 456, column: 7, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11448, file: !11174, line: 455, column: 5)
!11448 = distinct !DILexicalBlock(scope: !11209, file: !11174, line: 454, column: 8)
!11449 = !DILocation(line: 457, column: 5, scope: !11447)
!11450 = !DILocation(line: 462, column: 31, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11179, file: !11174, line: 462, column: 7)
!11452 = !DILocation(line: 462, column: 41, scope: !11451)
!11453 = !DILocation(line: 462, column: 7, scope: !11179)
!11454 = !DILocation(line: 465, column: 8, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11456, file: !11174, line: 465, column: 8)
!11456 = distinct !DILexicalBlock(scope: !11451, file: !11174, line: 463, column: 3)
!11457 = !DILocation(line: 465, column: 38, scope: !11455)
!11458 = !DILocation(line: 465, column: 8, scope: !11456)
!11459 = !DILocation(line: 467, column: 44, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !11174, line: 467, column: 10)
!11461 = distinct !DILexicalBlock(scope: !11455, file: !11174, line: 466, column: 5)
!11462 = !DILocation(line: 0, scope: !11460)
!11463 = !DILocation(line: 467, column: 10, scope: !11461)
!11464 = !DILocation(line: 483, column: 15, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11460, file: !11174, line: 468, column: 7)
!11466 = !DILocation(line: 483, column: 9, scope: !11465)
!11467 = !DILocation(line: 485, column: 15, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11469, file: !11174, line: 485, column: 14)
!11469 = distinct !DILexicalBlock(scope: !11465, file: !11174, line: 484, column: 9)
!11470 = !DILocation(line: 485, column: 29, scope: !11468)
!11471 = !DILocation(line: 485, column: 43, scope: !11468)
!11472 = !DILocation(line: 485, column: 14, scope: !11469)
!11473 = distinct !{!11473, !11466, !11474}
!11474 = !DILocation(line: 489, column: 9, scope: !11465)
!11475 = !DILocation(line: 492, column: 9, scope: !11465)
!11476 = !DILocation(line: 498, column: 9, scope: !11465)
!11477 = !DILocation(line: 501, column: 21, scope: !11465)
!11478 = !DILocation(line: 504, column: 9, scope: !11465)
!11479 = !DILocation(line: 504, column: 15, scope: !11465)
!11480 = !DILocation(line: 504, column: 51, scope: !11465)
!11481 = !DILocation(line: 506, column: 15, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11483, file: !11174, line: 506, column: 14)
!11483 = distinct !DILexicalBlock(scope: !11465, file: !11174, line: 505, column: 9)
!11484 = !DILocation(line: 506, column: 29, scope: !11482)
!11485 = !DILocation(line: 506, column: 43, scope: !11482)
!11486 = !DILocation(line: 506, column: 14, scope: !11483)
!11487 = distinct !{!11487, !11478, !11488}
!11488 = !DILocation(line: 510, column: 9, scope: !11465)
!11489 = !DILocation(line: 521, column: 15, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11460, file: !11174, line: 513, column: 7)
!11491 = !DILocation(line: 521, column: 9, scope: !11490)
!11492 = !DILocation(line: 523, column: 15, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11494, file: !11174, line: 523, column: 14)
!11494 = distinct !DILexicalBlock(scope: !11490, file: !11174, line: 522, column: 9)
!11495 = !DILocation(line: 523, column: 29, scope: !11493)
!11496 = !DILocation(line: 523, column: 43, scope: !11493)
!11497 = !DILocation(line: 523, column: 14, scope: !11494)
!11498 = distinct !{!11498, !11491, !11499}
!11499 = !DILocation(line: 527, column: 9, scope: !11490)
!11500 = !DILocation(line: 533, column: 44, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !11174, line: 533, column: 10)
!11502 = distinct !DILexicalBlock(scope: !11455, file: !11174, line: 531, column: 5)
!11503 = !DILocation(line: 533, column: 10, scope: !11502)
!11504 = !DILocation(line: 540, column: 27, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11501, file: !11174, line: 538, column: 7)
!11506 = !DILocation(line: 551, column: 14, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11505, file: !11174, line: 550, column: 13)
!11508 = !DILocation(line: 551, column: 81, scope: !11507)
!11509 = !DILocation(line: 551, column: 55, scope: !11507)
!11510 = !DILocation(line: 551, column: 92, scope: !11507)
!11511 = !DILocation(line: 552, column: 14, scope: !11507)
!11512 = !DILocation(line: 552, column: 80, scope: !11507)
!11513 = !DILocation(line: 552, column: 53, scope: !11507)
!11514 = !DILocation(line: 552, column: 111, scope: !11507)
!11515 = !DILocation(line: 553, column: 14, scope: !11507)
!11516 = !DILocation(line: 553, column: 80, scope: !11507)
!11517 = !DILocation(line: 553, column: 86, scope: !11507)
!11518 = !DILocation(line: 553, column: 53, scope: !11507)
!11519 = !DILocation(line: 553, column: 111, scope: !11507)
!11520 = !DILocation(line: 554, column: 14, scope: !11507)
!11521 = !DILocation(line: 554, column: 82, scope: !11507)
!11522 = !DILocation(line: 554, column: 101, scope: !11507)
!11523 = !DILocation(line: 554, column: 53, scope: !11507)
!11524 = !DILocation(line: 554, column: 126, scope: !11507)
!11525 = !DILocation(line: 555, column: 14, scope: !11507)
!11526 = !DILocation(line: 555, column: 80, scope: !11507)
!11527 = !DILocation(line: 555, column: 85, scope: !11507)
!11528 = !DILocation(line: 555, column: 53, scope: !11507)
!11529 = !DILocation(line: 550, column: 13, scope: !11505)
!11530 = !DILocation(line: 563, column: 3, scope: !11179)
!11531 = !DILocation(line: 564, column: 1, scope: !11179)
!11532 = !DISubprogram(name: "HAL_GetTick", scope: !11533, file: !11533, line: 234, type: !6034, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11533 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11534 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11174, file: !11174, line: 591, type: !11535, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11546)
!11535 = !DISubroutineType(types: !11536)
!11536 = !{!11177, !11537, !121}
!11537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11538, size: 32)
!11538 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11184, line: 92, baseType: !11539)
!11539 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11184, line: 75, size: 160, elements: !11540)
!11540 = !{!11541, !11542, !11543, !11544, !11545}
!11541 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11539, file: !11184, line: 77, baseType: !121, size: 32)
!11542 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11539, file: !11184, line: 80, baseType: !121, size: 32, offset: 32)
!11543 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11539, file: !11184, line: 83, baseType: !121, size: 32, offset: 64)
!11544 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11539, file: !11184, line: 86, baseType: !121, size: 32, offset: 96)
!11545 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11539, file: !11184, line: 89, baseType: !121, size: 32, offset: 128)
!11546 = !{!11547, !11548, !11549}
!11547 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11534, file: !11174, line: 591, type: !11537)
!11548 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11534, file: !11174, line: 591, type: !121)
!11549 = !DILocalVariable(name: "tickstart", scope: !11534, file: !11174, line: 593, type: !121)
!11550 = !DILocation(line: 0, scope: !11534)
!11551 = !DILocation(line: 596, column: 24, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11534, file: !11174, line: 596, column: 6)
!11553 = !DILocation(line: 596, column: 6, scope: !11534)
!11554 = !DILocation(line: 610, column: 17, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11534, file: !11174, line: 610, column: 6)
!11556 = !DILocation(line: 610, column: 15, scope: !11555)
!11557 = !DILocation(line: 610, column: 6, scope: !11534)
!11558 = !DILocation(line: 613, column: 5, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11555, file: !11174, line: 611, column: 3)
!11560 = !DILocation(line: 617, column: 8, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11559, file: !11174, line: 617, column: 8)
!11562 = !DILocation(line: 617, column: 34, scope: !11561)
!11563 = !DILocation(line: 617, column: 8, scope: !11559)
!11564 = !DILocation(line: 624, column: 27, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11534, file: !11174, line: 624, column: 6)
!11566 = !DILocation(line: 624, column: 38, scope: !11565)
!11567 = !DILocation(line: 624, column: 60, scope: !11565)
!11568 = !DILocation(line: 624, column: 6, scope: !11534)
!11569 = !DILocation(line: 628, column: 40, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11571, file: !11174, line: 628, column: 8)
!11571 = distinct !DILexicalBlock(scope: !11565, file: !11174, line: 625, column: 3)
!11572 = !DILocation(line: 628, column: 63, scope: !11570)
!11573 = !DILocation(line: 628, column: 8, scope: !11571)
!11574 = !DILocation(line: 630, column: 7, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11570, file: !11174, line: 629, column: 5)
!11576 = !DILocation(line: 633, column: 29, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11571, file: !11174, line: 633, column: 8)
!11578 = !DILocation(line: 631, column: 5, scope: !11575)
!11579 = !DILocation(line: 633, column: 40, scope: !11577)
!11580 = !DILocation(line: 633, column: 63, scope: !11577)
!11581 = !DILocation(line: 633, column: 8, scope: !11571)
!11582 = !DILocation(line: 635, column: 7, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11577, file: !11174, line: 634, column: 5)
!11584 = !DILocation(line: 636, column: 5, scope: !11583)
!11585 = !DILocation(line: 639, column: 5, scope: !11571)
!11586 = !DILocation(line: 643, column: 27, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11534, file: !11174, line: 643, column: 6)
!11588 = !DILocation(line: 640, column: 3, scope: !11571)
!11589 = !DILocation(line: 643, column: 38, scope: !11587)
!11590 = !DILocation(line: 643, column: 62, scope: !11587)
!11591 = !DILocation(line: 643, column: 6, scope: !11534)
!11592 = !DILocation(line: 648, column: 27, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11594, file: !11174, line: 648, column: 8)
!11594 = distinct !DILexicalBlock(scope: !11587, file: !11174, line: 644, column: 3)
!11595 = !DILocation(line: 648, column: 8, scope: !11594)
!11596 = !DILocation(line: 651, column: 10, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11598, file: !11174, line: 651, column: 10)
!11598 = distinct !DILexicalBlock(scope: !11593, file: !11174, line: 649, column: 5)
!11599 = !DILocation(line: 651, column: 46, scope: !11597)
!11600 = !DILocation(line: 651, column: 10, scope: !11598)
!11601 = !DILocation(line: 661, column: 10, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11603, file: !11174, line: 661, column: 10)
!11603 = distinct !DILexicalBlock(scope: !11604, file: !11174, line: 659, column: 5)
!11604 = distinct !DILexicalBlock(scope: !11593, file: !11174, line: 657, column: 13)
!11605 = !DILocation(line: 661, column: 46, scope: !11602)
!11606 = !DILocation(line: 661, column: 10, scope: !11603)
!11607 = !DILocation(line: 670, column: 10, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11609, file: !11174, line: 670, column: 10)
!11609 = distinct !DILexicalBlock(scope: !11604, file: !11174, line: 668, column: 5)
!11610 = !DILocation(line: 670, column: 46, scope: !11608)
!11611 = !DILocation(line: 670, column: 10, scope: !11609)
!11612 = !DILocation(line: 676, column: 5, scope: !11594)
!11613 = !DILocation(line: 679, column: 17, scope: !11594)
!11614 = !DILocation(line: 681, column: 5, scope: !11594)
!11615 = !DILocation(line: 681, column: 12, scope: !11594)
!11616 = !DILocation(line: 681, column: 65, scope: !11594)
!11617 = !DILocation(line: 681, column: 78, scope: !11594)
!11618 = !DILocation(line: 681, column: 42, scope: !11594)
!11619 = !DILocation(line: 683, column: 12, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11621, file: !11174, line: 683, column: 11)
!11621 = distinct !DILexicalBlock(scope: !11594, file: !11174, line: 682, column: 5)
!11622 = !DILocation(line: 683, column: 26, scope: !11620)
!11623 = !DILocation(line: 683, column: 39, scope: !11620)
!11624 = !DILocation(line: 683, column: 11, scope: !11621)
!11625 = distinct !{!11625, !11614, !11626}
!11626 = !DILocation(line: 687, column: 5, scope: !11594)
!11627 = !DILocation(line: 691, column: 17, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11534, file: !11174, line: 691, column: 6)
!11629 = !DILocation(line: 691, column: 15, scope: !11628)
!11630 = !DILocation(line: 691, column: 6, scope: !11534)
!11631 = !DILocation(line: 694, column: 5, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11628, file: !11174, line: 692, column: 3)
!11633 = !DILocation(line: 698, column: 8, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11632, file: !11174, line: 698, column: 8)
!11635 = !DILocation(line: 698, column: 34, scope: !11634)
!11636 = !DILocation(line: 698, column: 8, scope: !11632)
!11637 = !DILocation(line: 705, column: 27, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11534, file: !11174, line: 705, column: 6)
!11639 = !DILocation(line: 705, column: 38, scope: !11638)
!11640 = !DILocation(line: 705, column: 61, scope: !11638)
!11641 = !DILocation(line: 705, column: 6, scope: !11534)
!11642 = !DILocation(line: 708, column: 5, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11638, file: !11174, line: 706, column: 3)
!11644 = !DILocation(line: 712, column: 27, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11534, file: !11174, line: 712, column: 6)
!11646 = !DILocation(line: 709, column: 3, scope: !11643)
!11647 = !DILocation(line: 712, column: 38, scope: !11645)
!11648 = !DILocation(line: 712, column: 61, scope: !11645)
!11649 = !DILocation(line: 712, column: 6, scope: !11534)
!11650 = !DILocation(line: 715, column: 5, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11645, file: !11174, line: 713, column: 3)
!11652 = !DILocation(line: 716, column: 3, scope: !11651)
!11653 = !DILocation(line: 719, column: 21, scope: !11534)
!11654 = !DILocation(line: 719, column: 70, scope: !11534)
!11655 = !DILocation(line: 719, column: 91, scope: !11534)
!11656 = !DILocation(line: 719, column: 50, scope: !11534)
!11657 = !DILocation(line: 719, column: 47, scope: !11534)
!11658 = !DILocation(line: 719, column: 19, scope: !11534)
!11659 = !DILocation(line: 722, column: 17, scope: !11534)
!11660 = !DILocation(line: 722, column: 3, scope: !11534)
!11661 = !DILocation(line: 724, column: 3, scope: !11534)
!11662 = !DILocation(line: 725, column: 1, scope: !11534)
!11663 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11174, file: !11174, line: 885, type: !6034, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11664)
!11664 = !{!11665, !11666, !11667, !11668}
!11665 = !DILocalVariable(name: "pllm", scope: !11663, file: !11174, line: 887, type: !121)
!11666 = !DILocalVariable(name: "pllvco", scope: !11663, file: !11174, line: 887, type: !121)
!11667 = !DILocalVariable(name: "pllp", scope: !11663, file: !11174, line: 887, type: !121)
!11668 = !DILocalVariable(name: "sysclockfreq", scope: !11663, file: !11174, line: 888, type: !121)
!11669 = !DILocation(line: 0, scope: !11663)
!11670 = !DILocation(line: 891, column: 16, scope: !11663)
!11671 = !DILocation(line: 891, column: 21, scope: !11663)
!11672 = !DILocation(line: 891, column: 3, scope: !11663)
!11673 = !DILocation(line: 901, column: 7, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !11174, line: 899, column: 5)
!11675 = distinct !DILexicalBlock(scope: !11663, file: !11174, line: 892, column: 3)
!11676 = !DILocation(line: 907, column: 19, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11675, file: !11174, line: 904, column: 5)
!11678 = !DILocation(line: 907, column: 27, scope: !11677)
!11679 = !DILocation(line: 908, column: 10, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11677, file: !11174, line: 908, column: 10)
!11681 = !DILocation(line: 908, column: 40, scope: !11680)
!11682 = !DILocation(line: 0, scope: !11680)
!11683 = !DILocation(line: 918, column: 23, scope: !11677)
!11684 = !DILocation(line: 918, column: 82, scope: !11677)
!11685 = !DILocation(line: 920, column: 28, scope: !11677)
!11686 = !DILocation(line: 921, column: 7, scope: !11677)
!11687 = !DILocation(line: 0, scope: !11675)
!11688 = !DILocation(line: 929, column: 3, scope: !11663)
!11689 = !DISubprogram(name: "HAL_InitTick", scope: !11533, file: !11533, line: 223, type: !11690, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11690 = !DISubroutineType(types: !11691)
!11691 = !{!11177, !121}
!11692 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11174, file: !11174, line: 775, type: !11693, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11695)
!11693 = !DISubroutineType(types: !11694)
!11694 = !{null, !121, !121, !121}
!11695 = !{!11696, !11697, !11698, !11699, !11709, !11713}
!11696 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11692, file: !11174, line: 775, type: !121)
!11697 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11692, file: !11174, line: 775, type: !121)
!11698 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11692, file: !11174, line: 775, type: !121)
!11699 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11692, file: !11174, line: 777, type: !11700)
!11700 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11701, line: 62, baseType: !11702)
!11701 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11701, line: 46, size: 160, elements: !11703)
!11703 = !{!11704, !11705, !11706, !11707, !11708}
!11704 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11702, file: !11701, line: 48, baseType: !121, size: 32)
!11705 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11702, file: !11701, line: 51, baseType: !121, size: 32, offset: 32)
!11706 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11702, file: !11701, line: 54, baseType: !121, size: 32, offset: 64)
!11707 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11702, file: !11701, line: 57, baseType: !121, size: 32, offset: 96)
!11708 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11702, file: !11701, line: 60, baseType: !121, size: 32, offset: 128)
!11709 = !DILocalVariable(name: "tmpreg", scope: !11710, file: !11174, line: 787, type: !120)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !11174, line: 787, column: 5)
!11711 = distinct !DILexicalBlock(scope: !11712, file: !11174, line: 783, column: 3)
!11712 = distinct !DILexicalBlock(scope: !11692, file: !11174, line: 782, column: 6)
!11713 = !DILocalVariable(name: "tmpreg", scope: !11714, file: !11174, line: 811, type: !120)
!11714 = distinct !DILexicalBlock(scope: !11715, file: !11174, line: 811, column: 5)
!11715 = distinct !DILexicalBlock(scope: !11712, file: !11174, line: 807, column: 3)
!11716 = !DILocation(line: 0, scope: !11692)
!11717 = !DILocation(line: 777, column: 3, scope: !11692)
!11718 = !DILocation(line: 777, column: 20, scope: !11692)
!11719 = !DILocation(line: 782, column: 15, scope: !11712)
!11720 = !DILocation(line: 782, column: 6, scope: !11692)
!11721 = !DILocation(line: 787, column: 5, scope: !11710)
!11722 = !DILocation(line: 787, column: 5, scope: !11711)
!11723 = !DILocation(line: 790, column: 21, scope: !11711)
!11724 = !DILocation(line: 790, column: 25, scope: !11711)
!11725 = !DILocation(line: 791, column: 21, scope: !11711)
!11726 = !DILocation(line: 791, column: 26, scope: !11711)
!11727 = !DILocation(line: 792, column: 21, scope: !11711)
!11728 = !DILocation(line: 792, column: 27, scope: !11711)
!11729 = !DILocation(line: 793, column: 21, scope: !11711)
!11730 = !DILocation(line: 793, column: 26, scope: !11711)
!11731 = !DILocation(line: 794, column: 21, scope: !11711)
!11732 = !DILocation(line: 794, column: 31, scope: !11711)
!11733 = !DILocation(line: 795, column: 5, scope: !11711)
!11734 = !DILocation(line: 798, column: 5, scope: !11711)
!11735 = !DILocation(line: 804, column: 3, scope: !11711)
!11736 = !DILocation(line: 811, column: 5, scope: !11714)
!11737 = !DILocation(line: 811, column: 5, scope: !11715)
!11738 = !DILocation(line: 814, column: 21, scope: !11715)
!11739 = !DILocation(line: 814, column: 25, scope: !11715)
!11740 = !DILocation(line: 815, column: 21, scope: !11715)
!11741 = !DILocation(line: 815, column: 26, scope: !11715)
!11742 = !DILocation(line: 816, column: 21, scope: !11715)
!11743 = !DILocation(line: 816, column: 27, scope: !11715)
!11744 = !DILocation(line: 817, column: 21, scope: !11715)
!11745 = !DILocation(line: 817, column: 26, scope: !11715)
!11746 = !DILocation(line: 818, column: 21, scope: !11715)
!11747 = !DILocation(line: 818, column: 31, scope: !11715)
!11748 = !DILocation(line: 819, column: 5, scope: !11715)
!11749 = !DILocation(line: 822, column: 5, scope: !11715)
!11750 = !DILocation(line: 0, scope: !11712)
!11751 = !DILocation(line: 830, column: 1, scope: !11692)
!11752 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11701, file: !11701, line: 224, type: !11753, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11753 = !DISubroutineType(types: !11754)
!11754 = !{null, !3022, !11755}
!11755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11700, size: 32)
!11756 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11174, file: !11174, line: 841, type: !3181, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !317)
!11757 = !DILocation(line: 843, column: 38, scope: !11756)
!11758 = !DILocation(line: 844, column: 1, scope: !11756)
!11759 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11174, file: !11174, line: 850, type: !3181, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !317)
!11760 = !DILocation(line: 852, column: 38, scope: !11759)
!11761 = !DILocation(line: 853, column: 1, scope: !11759)
!11762 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11174, file: !11174, line: 941, type: !6034, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !317)
!11763 = !DILocation(line: 943, column: 10, scope: !11762)
!11764 = !DILocation(line: 943, column: 3, scope: !11762)
!11765 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11174, file: !11174, line: 952, type: !6034, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !317)
!11766 = !DILocation(line: 955, column: 11, scope: !11765)
!11767 = !DILocation(line: 955, column: 56, scope: !11765)
!11768 = !DILocation(line: 955, column: 78, scope: !11765)
!11769 = !DILocation(line: 955, column: 36, scope: !11765)
!11770 = !DILocation(line: 955, column: 33, scope: !11765)
!11771 = !DILocation(line: 955, column: 3, scope: !11765)
!11772 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11174, file: !11174, line: 964, type: !6034, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !317)
!11773 = !DILocation(line: 967, column: 11, scope: !11772)
!11774 = !DILocation(line: 967, column: 55, scope: !11772)
!11775 = !DILocation(line: 967, column: 77, scope: !11772)
!11776 = !DILocation(line: 967, column: 35, scope: !11772)
!11777 = !DILocation(line: 967, column: 32, scope: !11772)
!11778 = !DILocation(line: 967, column: 3, scope: !11772)
!11779 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11174, file: !11174, line: 977, type: !11780, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11782)
!11780 = !DISubroutineType(types: !11781)
!11781 = !{null, !11182}
!11782 = !{!11783}
!11783 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11779, file: !11174, line: 977, type: !11182)
!11784 = !DILocation(line: 0, scope: !11779)
!11785 = !DILocation(line: 980, column: 22, scope: !11779)
!11786 = !DILocation(line: 980, column: 37, scope: !11779)
!11787 = !DILocation(line: 983, column: 12, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11779, file: !11174, line: 983, column: 6)
!11789 = !DILocation(line: 983, column: 15, scope: !11788)
!11790 = !DILocation(line: 983, column: 31, scope: !11788)
!11791 = !DILocation(line: 983, column: 6, scope: !11779)
!11792 = !DILocation(line: 985, column: 24, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11788, file: !11174, line: 984, column: 3)
!11794 = !DILocation(line: 985, column: 33, scope: !11793)
!11795 = !DILocation(line: 986, column: 3, scope: !11793)
!11796 = !DILocation(line: 987, column: 17, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11788, file: !11174, line: 987, column: 11)
!11798 = !DILocation(line: 987, column: 20, scope: !11797)
!11799 = !DILocation(line: 987, column: 35, scope: !11797)
!11800 = !DILocation(line: 0, scope: !11797)
!11801 = !DILocation(line: 987, column: 11, scope: !11788)
!11802 = !DILocation(line: 989, column: 33, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11797, file: !11174, line: 988, column: 3)
!11804 = !DILocation(line: 990, column: 3, scope: !11803)
!11805 = !DILocation(line: 993, column: 33, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11797, file: !11174, line: 992, column: 3)
!11807 = !DILocation(line: 997, column: 12, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11779, file: !11174, line: 997, column: 6)
!11809 = !DILocation(line: 997, column: 15, scope: !11808)
!11810 = !DILocation(line: 1003, column: 24, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11808, file: !11174, line: 1002, column: 3)
!11812 = !DILocation(line: 1003, column: 33, scope: !11811)
!11813 = !DILocation(line: 1006, column: 61, scope: !11779)
!11814 = !DILocation(line: 1006, column: 81, scope: !11779)
!11815 = !DILocation(line: 1006, column: 22, scope: !11779)
!11816 = !DILocation(line: 1006, column: 42, scope: !11779)
!11817 = !DILocation(line: 1009, column: 12, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11779, file: !11174, line: 1009, column: 6)
!11819 = !DILocation(line: 1009, column: 17, scope: !11818)
!11820 = !DILocation(line: 1009, column: 35, scope: !11818)
!11821 = !DILocation(line: 1009, column: 6, scope: !11779)
!11822 = !DILocation(line: 1011, column: 24, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11818, file: !11174, line: 1010, column: 3)
!11824 = !DILocation(line: 1011, column: 33, scope: !11823)
!11825 = !DILocation(line: 1012, column: 3, scope: !11823)
!11826 = !DILocation(line: 1013, column: 17, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11818, file: !11174, line: 1013, column: 11)
!11828 = !DILocation(line: 1013, column: 22, scope: !11827)
!11829 = !DILocation(line: 1013, column: 39, scope: !11827)
!11830 = !DILocation(line: 0, scope: !11827)
!11831 = !DILocation(line: 1013, column: 11, scope: !11818)
!11832 = !DILocation(line: 1015, column: 33, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11827, file: !11174, line: 1014, column: 3)
!11834 = !DILocation(line: 1016, column: 3, scope: !11833)
!11835 = !DILocation(line: 1019, column: 33, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11827, file: !11174, line: 1018, column: 3)
!11837 = !DILocation(line: 1023, column: 12, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11779, file: !11174, line: 1023, column: 6)
!11839 = !DILocation(line: 1023, column: 16, scope: !11838)
!11840 = !DILocation(line: 1029, column: 24, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11838, file: !11174, line: 1028, column: 3)
!11842 = !DILocation(line: 1029, column: 33, scope: !11841)
!11843 = !DILocation(line: 1033, column: 12, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11779, file: !11174, line: 1033, column: 6)
!11845 = !DILocation(line: 1033, column: 15, scope: !11844)
!11846 = !DILocation(line: 1033, column: 30, scope: !11844)
!11847 = !DILocation(line: 1033, column: 6, scope: !11779)
!11848 = !DILocation(line: 1039, column: 28, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11844, file: !11174, line: 1038, column: 3)
!11850 = !DILocation(line: 1039, column: 37, scope: !11849)
!11851 = !DILocation(line: 1041, column: 54, scope: !11779)
!11852 = !DILocation(line: 1041, column: 62, scope: !11779)
!11853 = !DILocation(line: 1041, column: 26, scope: !11779)
!11854 = !DILocation(line: 1041, column: 36, scope: !11779)
!11855 = !DILocation(line: 1042, column: 49, scope: !11779)
!11856 = !DILocation(line: 1042, column: 57, scope: !11779)
!11857 = !DILocation(line: 1042, column: 26, scope: !11779)
!11858 = !DILocation(line: 1042, column: 31, scope: !11779)
!11859 = !DILocation(line: 1043, column: 50, scope: !11779)
!11860 = !DILocation(line: 1043, column: 78, scope: !11779)
!11861 = !DILocation(line: 1043, column: 26, scope: !11779)
!11862 = !DILocation(line: 1043, column: 31, scope: !11779)
!11863 = !DILocation(line: 1044, column: 52, scope: !11779)
!11864 = !DILocation(line: 1044, column: 102, scope: !11779)
!11865 = !DILocation(line: 1044, column: 109, scope: !11779)
!11866 = !DILocation(line: 1044, column: 26, scope: !11779)
!11867 = !DILocation(line: 1044, column: 31, scope: !11779)
!11868 = !DILocation(line: 1045, column: 50, scope: !11779)
!11869 = !DILocation(line: 1045, column: 78, scope: !11779)
!11870 = !DILocation(line: 1045, column: 26, scope: !11779)
!11871 = !DILocation(line: 1045, column: 31, scope: !11779)
!11872 = !DILocation(line: 1046, column: 1, scope: !11779)
!11873 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11174, file: !11174, line: 1056, type: !11874, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11876)
!11874 = !DISubroutineType(types: !11875)
!11875 = !{null, !11537, !866}
!11876 = !{!11877, !11878}
!11877 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11873, file: !11174, line: 1056, type: !11537)
!11878 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11873, file: !11174, line: 1056, type: !866)
!11879 = !DILocation(line: 0, scope: !11873)
!11880 = !DILocation(line: 1059, column: 22, scope: !11873)
!11881 = !DILocation(line: 1059, column: 32, scope: !11873)
!11882 = !DILocation(line: 1062, column: 53, scope: !11873)
!11883 = !DILocation(line: 1062, column: 58, scope: !11873)
!11884 = !DILocation(line: 1062, column: 22, scope: !11873)
!11885 = !DILocation(line: 1062, column: 35, scope: !11873)
!11886 = !DILocation(line: 1065, column: 54, scope: !11873)
!11887 = !DILocation(line: 1065, column: 59, scope: !11873)
!11888 = !DILocation(line: 1065, column: 22, scope: !11873)
!11889 = !DILocation(line: 1065, column: 36, scope: !11873)
!11890 = !DILocation(line: 1068, column: 55, scope: !11873)
!11891 = !DILocation(line: 1068, column: 60, scope: !11873)
!11892 = !DILocation(line: 1068, column: 22, scope: !11873)
!11893 = !DILocation(line: 1068, column: 37, scope: !11873)
!11894 = !DILocation(line: 1071, column: 56, scope: !11873)
!11895 = !DILocation(line: 1071, column: 79, scope: !11873)
!11896 = !DILocation(line: 1071, column: 22, scope: !11873)
!11897 = !DILocation(line: 1071, column: 37, scope: !11873)
!11898 = !DILocation(line: 1074, column: 34, scope: !11873)
!11899 = !DILocation(line: 1074, column: 38, scope: !11873)
!11900 = !DILocation(line: 1074, column: 14, scope: !11873)
!11901 = !DILocation(line: 1075, column: 1, scope: !11873)
!11902 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11174, file: !11174, line: 1082, type: !3181, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !317)
!11903 = !DILocation(line: 1085, column: 6, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11902, file: !11174, line: 1085, column: 6)
!11905 = !DILocation(line: 1085, column: 6, scope: !11902)
!11906 = !DILocation(line: 1088, column: 5, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11904, file: !11174, line: 1086, column: 3)
!11908 = !DILocation(line: 1091, column: 5, scope: !11907)
!11909 = !DILocation(line: 1092, column: 3, scope: !11907)
!11910 = !DILocation(line: 1093, column: 1, scope: !11902)
!11911 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11174, file: !11174, line: 1099, type: !3181, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !317)
!11912 = !DILocation(line: 1104, column: 1, scope: !11911)
!11913 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11914, file: !11914, line: 257, type: !6044, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11915)
!11914 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11915 = !{!11916}
!11916 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11913, file: !11914, line: 257, type: !121)
!11917 = !DILocation(line: 0, scope: !11913)
!11918 = !DILocation(line: 260, column: 3, scope: !11913)
!11919 = !DILocation(line: 261, column: 1, scope: !11913)
!11920 = distinct !DISubprogram(name: "LL_InitTick", scope: !11921, file: !11921, line: 260, type: !9205, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11922)
!11921 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11922 = !{!11923, !11924}
!11923 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11920, file: !11921, line: 260, type: !121)
!11924 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11920, file: !11921, line: 260, type: !121)
!11925 = !DILocation(line: 0, scope: !11920)
!11926 = !DILocation(line: 263, column: 46, scope: !11920)
!11927 = !DILocation(line: 263, column: 55, scope: !11920)
!11928 = !DILocation(line: 263, column: 18, scope: !11920)
!11929 = !DILocation(line: 264, column: 18, scope: !11920)
!11930 = !DILocation(line: 265, column: 18, scope: !11920)
!11931 = !DILocation(line: 267, column: 1, scope: !11920)
!11932 = distinct !DISubprogram(name: "LL_mDelay", scope: !11914, file: !11914, line: 273, type: !6044, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11933)
!11933 = !{!11934, !11935}
!11934 = !DILocalVariable(name: "Delay", arg: 1, scope: !11932, file: !11914, line: 273, type: !121)
!11935 = !DILocalVariable(name: "tmp", scope: !11932, file: !11914, line: 275, type: !120)
!11936 = !DILocation(line: 0, scope: !11932)
!11937 = !DILocation(line: 275, column: 3, scope: !11932)
!11938 = !DILocation(line: 275, column: 18, scope: !11932)
!11939 = !DILocation(line: 275, column: 33, scope: !11932)
!11940 = !DILocation(line: 277, column: 10, scope: !11932)
!11941 = !DILocation(line: 280, column: 12, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11932, file: !11914, line: 280, column: 6)
!11943 = !DILocation(line: 285, column: 3, scope: !11932)
!11944 = !DILocation(line: 287, column: 18, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11946, file: !11914, line: 287, column: 8)
!11946 = distinct !DILexicalBlock(scope: !11932, file: !11914, line: 286, column: 3)
!11947 = !DILocation(line: 292, column: 1, scope: !11932)
!11948 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11914, file: !11914, line: 323, type: !6044, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11949)
!11949 = !{!11950}
!11950 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11948, file: !11914, line: 323, type: !121)
!11951 = !DILocation(line: 0, scope: !11948)
!11952 = !DILocation(line: 326, column: 19, scope: !11948)
!11953 = !DILocation(line: 327, column: 1, scope: !11948)
!11954 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11914, file: !11914, line: 338, type: !11955, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11958)
!11955 = !DISubroutineType(types: !11956)
!11956 = !{!11957, !121}
!11957 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !813, line: 201, baseType: !812)
!11958 = !{!11959, !11960, !11961, !11962, !11963}
!11959 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11954, file: !11914, line: 338, type: !121)
!11960 = !DILocalVariable(name: "timeout", scope: !11954, file: !11914, line: 340, type: !121)
!11961 = !DILocalVariable(name: "getlatency", scope: !11954, file: !11914, line: 341, type: !121)
!11962 = !DILocalVariable(name: "latency", scope: !11954, file: !11914, line: 342, type: !121)
!11963 = !DILocalVariable(name: "status", scope: !11954, file: !11914, line: 343, type: !11957)
!11964 = !DILocation(line: 0, scope: !11954)
!11965 = !DILocation(line: 347, column: 21, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11954, file: !11914, line: 347, column: 6)
!11967 = !DILocation(line: 347, column: 6, scope: !11954)
!11968 = !DILocation(line: 353, column: 8, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11970, file: !11914, line: 353, column: 8)
!11970 = distinct !DILexicalBlock(scope: !11966, file: !11914, line: 352, column: 3)
!11971 = !DILocation(line: 353, column: 40, scope: !11969)
!11972 = !DILocation(line: 353, column: 8, scope: !11970)
!11973 = !DILocation(line: 356, column: 26, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11975, file: !11914, line: 356, column: 10)
!11975 = distinct !DILexicalBlock(scope: !11969, file: !11914, line: 354, column: 5)
!11976 = !DILocation(line: 356, column: 55, scope: !11974)
!11977 = !DILocation(line: 362, column: 55, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11975, file: !11914, line: 362, column: 10)
!11979 = !DILocation(line: 368, column: 55, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11975, file: !11914, line: 368, column: 10)
!11981 = !DILocation(line: 374, column: 26, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11975, file: !11914, line: 374, column: 10)
!11983 = !DILocation(line: 374, column: 55, scope: !11982)
!11984 = !DILocation(line: 380, column: 28, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11986, file: !11914, line: 380, column: 12)
!11986 = distinct !DILexicalBlock(scope: !11982, file: !11914, line: 379, column: 7)
!11987 = !DILocation(line: 380, column: 57, scope: !11985)
!11988 = !DILocation(line: 387, column: 8, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11970, file: !11914, line: 387, column: 8)
!11990 = !DILocation(line: 387, column: 40, scope: !11989)
!11991 = !DILocation(line: 387, column: 8, scope: !11970)
!11992 = !DILocation(line: 396, column: 26, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11994, file: !11914, line: 396, column: 10)
!11994 = distinct !DILexicalBlock(scope: !11989, file: !11914, line: 388, column: 5)
!11995 = !DILocation(line: 396, column: 55, scope: !11993)
!11996 = !DILocation(line: 402, column: 26, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11994, file: !11914, line: 402, column: 10)
!11998 = !DILocation(line: 402, column: 55, scope: !11997)
!11999 = !DILocation(line: 407, column: 26, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !11994, file: !11914, line: 407, column: 10)
!12001 = !DILocation(line: 407, column: 55, scope: !12000)
!12002 = !DILocation(line: 413, column: 28, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !12004, file: !11914, line: 413, column: 12)
!12004 = distinct !DILexicalBlock(scope: !12000, file: !11914, line: 412, column: 7)
!12005 = !DILocation(line: 413, column: 57, scope: !12003)
!12006 = !DILocation(line: 0, scope: !11970)
!12007 = !DILocation(line: 444, column: 5, scope: !11970)
!12008 = !DILocation(line: 448, column: 5, scope: !11970)
!12009 = !DILocation(line: 451, column: 18, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !11970, file: !11914, line: 449, column: 5)
!12011 = !DILocation(line: 452, column: 12, scope: !12010)
!12012 = !DILocation(line: 453, column: 26, scope: !11970)
!12013 = !DILocation(line: 453, column: 38, scope: !11970)
!12014 = !DILocation(line: 453, column: 5, scope: !12010)
!12015 = distinct !{!12015, !12008, !12016}
!12016 = !DILocation(line: 453, column: 54, scope: !11970)
!12017 = !DILocation(line: 0, scope: !11966)
!12018 = !DILocation(line: 464, column: 3, scope: !11954)
!12019 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12020, file: !12020, line: 519, type: !6034, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !317)
!12020 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12021 = !DILocation(line: 521, column: 21, scope: !12019)
!12022 = !DILocation(line: 521, column: 3, scope: !12019)
!12023 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5759, file: !5759, line: 1543, type: !6044, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12024)
!12024 = !{!12025}
!12025 = !DILocalVariable(name: "Latency", arg: 1, scope: !12023, file: !5759, line: 1543, type: !121)
!12026 = !DILocation(line: 0, scope: !12023)
!12027 = !DILocation(line: 1545, column: 3, scope: !12023)
!12028 = !DILocation(line: 1546, column: 1, scope: !12023)
!12029 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5759, file: !5759, line: 1569, type: !6034, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !317)
!12030 = !DILocation(line: 1571, column: 21, scope: !12029)
!12031 = !DILocation(line: 1571, column: 3, scope: !12029)
!12032 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11914, file: !11914, line: 483, type: !12033, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12049)
!12033 = !DISubroutineType(types: !12034)
!12034 = !{!11957, !12035, !12042}
!12035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12036, size: 32)
!12036 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11921, line: 114, baseType: !12037)
!12037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11921, line: 94, size: 96, elements: !12038)
!12038 = !{!12039, !12040, !12041}
!12039 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12037, file: !11921, line: 96, baseType: !121, size: 32)
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12037, file: !11921, line: 102, baseType: !121, size: 32, offset: 32)
!12041 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12037, file: !11921, line: 109, baseType: !121, size: 32, offset: 64)
!12042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12043, size: 32)
!12043 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11921, line: 139, baseType: !12044)
!12044 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11921, line: 119, size: 96, elements: !12045)
!12045 = !{!12046, !12047, !12048}
!12046 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12044, file: !11921, line: 121, baseType: !121, size: 32)
!12047 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12044, file: !11921, line: 127, baseType: !121, size: 32, offset: 32)
!12048 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12044, file: !11921, line: 133, baseType: !121, size: 32, offset: 64)
!12049 = !{!12050, !12051, !12052, !12053}
!12050 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12032, file: !11914, line: 483, type: !12035)
!12051 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12032, file: !11914, line: 484, type: !12042)
!12052 = !DILocalVariable(name: "status", scope: !12032, file: !11914, line: 486, type: !11957)
!12053 = !DILocalVariable(name: "pllfreq", scope: !12032, file: !11914, line: 487, type: !121)
!12054 = !DILocation(line: 0, scope: !12032)
!12055 = !DILocation(line: 490, column: 6, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12032, file: !11914, line: 490, column: 6)
!12057 = !DILocation(line: 490, column: 25, scope: !12056)
!12058 = !DILocation(line: 490, column: 6, scope: !12032)
!12059 = !DILocation(line: 493, column: 15, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12056, file: !11914, line: 491, column: 3)
!12061 = !DILocation(line: 496, column: 8, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12060, file: !11914, line: 496, column: 8)
!12063 = !DILocation(line: 496, column: 29, scope: !12062)
!12064 = !DILocation(line: 496, column: 8, scope: !12060)
!12065 = !DILocation(line: 498, column: 7, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12062, file: !11914, line: 497, column: 5)
!12067 = !DILocation(line: 499, column: 7, scope: !12066)
!12068 = !DILocation(line: 499, column: 14, scope: !12066)
!12069 = !DILocation(line: 499, column: 35, scope: !12066)
!12070 = distinct !{!12070, !12067, !12071}
!12071 = !DILocation(line: 502, column: 7, scope: !12066)
!12072 = !DILocation(line: 506, column: 76, scope: !12060)
!12073 = !DILocation(line: 506, column: 103, scope: !12060)
!12074 = !DILocation(line: 507, column: 54, scope: !12060)
!12075 = !DILocation(line: 506, column: 5, scope: !12060)
!12076 = !DILocation(line: 510, column: 14, scope: !12060)
!12077 = !DILocation(line: 511, column: 3, scope: !12060)
!12078 = !DILocation(line: 0, scope: !12056)
!12079 = !DILocation(line: 518, column: 3, scope: !12032)
!12080 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11914, file: !11914, line: 642, type: !12081, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12083)
!12081 = !DISubroutineType(types: !12082)
!12082 = !{!11957}
!12083 = !{!12084}
!12084 = !DILocalVariable(name: "status", scope: !12080, file: !11914, line: 644, type: !11957)
!12085 = !DILocation(line: 0, scope: !12080)
!12086 = !DILocation(line: 647, column: 6, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12080, file: !11914, line: 647, column: 6)
!12088 = !DILocation(line: 647, column: 27, scope: !12087)
!12089 = !DILocation(line: 663, column: 6, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12080, file: !11914, line: 663, column: 6)
!12091 = !DILocation(line: 663, column: 30, scope: !12090)
!12092 = !DILocation(line: 663, column: 6, scope: !12080)
!12093 = !DILocation(line: 669, column: 3, scope: !12080)
!12094 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11914, file: !11914, line: 611, type: !12095, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12097)
!12095 = !DISubroutineType(types: !12096)
!12096 = !{!121, !121, !12035}
!12097 = !{!12098, !12099, !12100}
!12098 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12094, file: !11914, line: 611, type: !121)
!12099 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12094, file: !11914, line: 611, type: !12035)
!12100 = !DILocalVariable(name: "pllfreq", scope: !12094, file: !11914, line: 613, type: !121)
!12101 = !DILocation(line: 0, scope: !12094)
!12102 = !DILocation(line: 622, column: 56, scope: !12094)
!12103 = !DILocation(line: 622, column: 61, scope: !12094)
!12104 = !DILocation(line: 622, column: 32, scope: !12094)
!12105 = !DILocation(line: 626, column: 45, scope: !12094)
!12106 = !DILocation(line: 626, column: 50, scope: !12094)
!12107 = !DILocation(line: 626, column: 21, scope: !12094)
!12108 = !DILocation(line: 630, column: 47, scope: !12094)
!12109 = !DILocation(line: 630, column: 82, scope: !12094)
!12110 = !DILocation(line: 630, column: 21, scope: !12094)
!12111 = !DILocation(line: 633, column: 3, scope: !12094)
!12112 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7989, file: !7989, line: 3007, type: !6034, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !317)
!12113 = !DILocation(line: 3009, column: 11, scope: !12112)
!12114 = !DILocation(line: 3009, column: 44, scope: !12112)
!12115 = !DILocation(line: 3009, column: 3, scope: !12112)
!12116 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7989, file: !7989, line: 2987, type: !3181, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !317)
!12117 = !DILocation(line: 2989, column: 3, scope: !12116)
!12118 = !DILocation(line: 2990, column: 1, scope: !12116)
!12119 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7989, file: !7989, line: 4304, type: !8123, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12120)
!12120 = !{!12121, !12122, !12123, !12124}
!12121 = !DILocalVariable(name: "Source", arg: 1, scope: !12119, file: !7989, line: 4304, type: !121)
!12122 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12119, file: !7989, line: 4304, type: !121)
!12123 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12119, file: !7989, line: 4304, type: !121)
!12124 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12119, file: !7989, line: 4304, type: !121)
!12125 = !DILocation(line: 0, scope: !12119)
!12126 = !DILocation(line: 4306, column: 3, scope: !12119)
!12127 = !DILocation(line: 4308, column: 3, scope: !12119)
!12128 = !DILocation(line: 4312, column: 1, scope: !12119)
!12129 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11914, file: !11914, line: 681, type: !12130, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12132)
!12130 = !DISubroutineType(types: !12131)
!12131 = !{!11957, !121, !12042}
!12132 = !{!12133, !12134, !12135, !12136}
!12133 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12129, file: !11914, line: 681, type: !121)
!12134 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12129, file: !11914, line: 681, type: !12042)
!12135 = !DILocalVariable(name: "status", scope: !12129, file: !11914, line: 683, type: !11957)
!12136 = !DILocalVariable(name: "hclk_frequency", scope: !12129, file: !11914, line: 684, type: !121)
!12137 = !DILocation(line: 0, scope: !12129)
!12138 = !DILocation(line: 691, column: 20, scope: !12129)
!12139 = !DILocation(line: 694, column: 6, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12129, file: !11914, line: 694, column: 6)
!12141 = !DILocation(line: 694, column: 22, scope: !12140)
!12142 = !DILocation(line: 694, column: 6, scope: !12129)
!12143 = !DILocation(line: 697, column: 14, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12140, file: !11914, line: 695, column: 3)
!12145 = !DILocation(line: 701, column: 13, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12129, file: !11914, line: 701, column: 6)
!12147 = !DILocation(line: 701, column: 6, scope: !12129)
!12148 = !DILocation(line: 704, column: 5, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12146, file: !11914, line: 702, column: 3)
!12150 = !DILocation(line: 705, column: 5, scope: !12149)
!12151 = !DILocation(line: 705, column: 12, scope: !12149)
!12152 = !DILocation(line: 705, column: 33, scope: !12149)
!12153 = distinct !{!12153, !12150, !12154}
!12154 = !DILocation(line: 708, column: 5, scope: !12149)
!12155 = !DILocation(line: 711, column: 49, scope: !12149)
!12156 = !DILocation(line: 711, column: 5, scope: !12149)
!12157 = !DILocation(line: 712, column: 5, scope: !12149)
!12158 = !DILocation(line: 713, column: 5, scope: !12149)
!12159 = !DILocation(line: 713, column: 12, scope: !12149)
!12160 = !DILocation(line: 713, column: 37, scope: !12149)
!12161 = distinct !{!12161, !12158, !12162}
!12162 = !DILocation(line: 716, column: 5, scope: !12149)
!12163 = !DILocation(line: 719, column: 50, scope: !12149)
!12164 = !DILocation(line: 719, column: 5, scope: !12149)
!12165 = !DILocation(line: 720, column: 50, scope: !12149)
!12166 = !DILocation(line: 720, column: 5, scope: !12149)
!12167 = !DILocation(line: 721, column: 3, scope: !12149)
!12168 = !DILocation(line: 724, column: 6, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12129, file: !11914, line: 724, column: 6)
!12170 = !DILocation(line: 724, column: 22, scope: !12169)
!12171 = !DILocation(line: 724, column: 6, scope: !12129)
!12172 = !DILocation(line: 727, column: 14, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12169, file: !11914, line: 725, column: 3)
!12174 = !DILocation(line: 728, column: 3, scope: !12173)
!12175 = !DILocation(line: 731, column: 13, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12129, file: !11914, line: 731, column: 6)
!12177 = !DILocation(line: 731, column: 6, scope: !12129)
!12178 = !DILocation(line: 733, column: 5, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12176, file: !11914, line: 732, column: 3)
!12180 = !DILocation(line: 734, column: 3, scope: !12179)
!12181 = !DILocation(line: 736, column: 3, scope: !12129)
!12182 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7989, file: !7989, line: 4184, type: !3181, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !317)
!12183 = !DILocation(line: 4186, column: 3, scope: !12182)
!12184 = !DILocation(line: 4187, column: 1, scope: !12182)
!12185 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7989, file: !7989, line: 4205, type: !6034, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !317)
!12186 = !DILocation(line: 4207, column: 11, scope: !12185)
!12187 = !DILocation(line: 4207, column: 44, scope: !12185)
!12188 = !DILocation(line: 4207, column: 3, scope: !12185)
!12189 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7989, file: !7989, line: 3224, type: !6044, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12190)
!12190 = !{!12191}
!12191 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12189, file: !7989, line: 3224, type: !121)
!12192 = !DILocation(line: 0, scope: !12189)
!12193 = !DILocation(line: 3226, column: 3, scope: !12189)
!12194 = !DILocation(line: 3227, column: 1, scope: !12189)
!12195 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7989, file: !7989, line: 3188, type: !6044, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12196)
!12196 = !{!12197}
!12197 = !DILocalVariable(name: "Source", arg: 1, scope: !12195, file: !7989, line: 3188, type: !121)
!12198 = !DILocation(line: 0, scope: !12195)
!12199 = !DILocation(line: 3190, column: 3, scope: !12195)
!12200 = !DILocation(line: 3191, column: 1, scope: !12195)
!12201 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7989, file: !7989, line: 3204, type: !6034, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !317)
!12202 = !DILocation(line: 3206, column: 21, scope: !12201)
!12203 = !DILocation(line: 3206, column: 3, scope: !12201)
!12204 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7989, file: !7989, line: 3240, type: !6044, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12205)
!12205 = !{!12206}
!12206 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12204, file: !7989, line: 3240, type: !121)
!12207 = !DILocation(line: 0, scope: !12204)
!12208 = !DILocation(line: 3242, column: 3, scope: !12204)
!12209 = !DILocation(line: 3243, column: 1, scope: !12204)
!12210 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7989, file: !7989, line: 3256, type: !6044, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12211)
!12211 = !{!12212}
!12212 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12210, file: !7989, line: 3256, type: !121)
!12213 = !DILocation(line: 0, scope: !12210)
!12214 = !DILocation(line: 3258, column: 3, scope: !12210)
!12215 = !DILocation(line: 3259, column: 1, scope: !12210)
!12216 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !7989, file: !7989, line: 5153, type: !6034, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !317)
!12217 = !DILocation(line: 5155, column: 11, scope: !12216)
!12218 = !DILocation(line: 5155, column: 47, scope: !12216)
!12219 = !DILocation(line: 5155, column: 3, scope: !12216)
!12220 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11914, file: !11914, line: 540, type: !12221, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12223)
!12221 = !DISubroutineType(types: !12222)
!12222 = !{!11957, !121, !121, !12035, !12042}
!12223 = !{!12224, !12225, !12226, !12227, !12228, !12229}
!12224 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12220, file: !11914, line: 540, type: !121)
!12225 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12220, file: !11914, line: 540, type: !121)
!12226 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12220, file: !11914, line: 541, type: !12035)
!12227 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12220, file: !11914, line: 541, type: !12042)
!12228 = !DILocalVariable(name: "status", scope: !12220, file: !11914, line: 543, type: !11957)
!12229 = !DILocalVariable(name: "pllfreq", scope: !12220, file: !11914, line: 544, type: !121)
!12230 = !DILocation(line: 0, scope: !12220)
!12231 = !DILocation(line: 551, column: 6, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12220, file: !11914, line: 551, column: 6)
!12233 = !DILocation(line: 551, column: 25, scope: !12232)
!12234 = !DILocation(line: 551, column: 6, scope: !12220)
!12235 = !DILocation(line: 554, column: 15, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12232, file: !11914, line: 552, column: 3)
!12237 = !DILocation(line: 557, column: 8, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12236, file: !11914, line: 557, column: 8)
!12239 = !DILocation(line: 557, column: 29, scope: !12238)
!12240 = !DILocation(line: 557, column: 8, scope: !12236)
!12241 = !DILocation(line: 560, column: 20, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12243, file: !11914, line: 560, column: 10)
!12243 = distinct !DILexicalBlock(scope: !12238, file: !11914, line: 558, column: 5)
!12244 = !DILocation(line: 560, column: 10, scope: !12243)
!12245 = !DILocation(line: 562, column: 9, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12242, file: !11914, line: 561, column: 7)
!12247 = !DILocation(line: 563, column: 7, scope: !12246)
!12248 = !DILocation(line: 566, column: 9, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12242, file: !11914, line: 565, column: 7)
!12250 = !DILocation(line: 570, column: 7, scope: !12243)
!12251 = !DILocation(line: 571, column: 7, scope: !12243)
!12252 = !DILocation(line: 571, column: 14, scope: !12243)
!12253 = !DILocation(line: 571, column: 35, scope: !12243)
!12254 = distinct !{!12254, !12251, !12255}
!12255 = !DILocation(line: 574, column: 7, scope: !12243)
!12256 = !DILocation(line: 578, column: 76, scope: !12236)
!12257 = !DILocation(line: 578, column: 103, scope: !12236)
!12258 = !DILocation(line: 579, column: 54, scope: !12236)
!12259 = !DILocation(line: 578, column: 5, scope: !12236)
!12260 = !DILocation(line: 582, column: 14, scope: !12236)
!12261 = !DILocation(line: 583, column: 3, scope: !12236)
!12262 = !DILocation(line: 0, scope: !12232)
!12263 = !DILocation(line: 590, column: 3, scope: !12220)
!12264 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7989, file: !7989, line: 2969, type: !6034, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !317)
!12265 = !DILocation(line: 2971, column: 11, scope: !12264)
!12266 = !DILocation(line: 2971, column: 44, scope: !12264)
!12267 = !DILocation(line: 2971, column: 3, scope: !12264)
!12268 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !7989, file: !7989, line: 2929, type: !3181, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !317)
!12269 = !DILocation(line: 2931, column: 3, scope: !12268)
!12270 = !DILocation(line: 2932, column: 1, scope: !12268)
!12271 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7989, file: !7989, line: 2939, type: !3181, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !317)
!12272 = !DILocation(line: 2941, column: 3, scope: !12271)
!12273 = !DILocation(line: 2942, column: 1, scope: !12271)
!12274 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7989, file: !7989, line: 2949, type: !3181, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !317)
!12275 = !DILocation(line: 2951, column: 3, scope: !12274)
!12276 = !DILocation(line: 2952, column: 1, scope: !12274)
!12277 = distinct !DISubprogram(name: "z_device_state_init", scope: !12278, file: !12278, line: 23, type: !3181, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12279)
!12278 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12279 = !{!12280}
!12280 = !DILocalVariable(name: "dev", scope: !12277, file: !12278, line: 25, type: !12281)
!12281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12282, size: 32)
!12282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12283)
!12283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !12284)
!12284 = !{!12285, !12286, !12287, !12288, !12294, !12295}
!12285 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12283, file: !141, line: 380, baseType: !144, size: 32)
!12286 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12283, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!12287 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12283, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!12288 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12283, file: !141, line: 386, baseType: !12289, size: 32, offset: 96)
!12289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12290, size: 32)
!12290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !12291)
!12291 = !{!12292, !12293}
!12292 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12290, file: !141, line: 359, baseType: !154, size: 8)
!12293 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12290, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12294 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12283, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!12295 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12283, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!12296 = !DILocation(line: 0, scope: !12277)
!12297 = !DILocation(line: 31, column: 1, scope: !12277)
!12298 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12278, file: !12278, line: 33, type: !12299, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12301)
!12299 = !DISubroutineType(types: !12300)
!12300 = !{!12281, !144}
!12301 = !{!12302, !12303}
!12302 = !DILocalVariable(name: "name", arg: 1, scope: !12298, file: !12278, line: 33, type: !144)
!12303 = !DILocalVariable(name: "dev", scope: !12298, file: !12278, line: 35, type: !12281)
!12304 = !DILocation(line: 0, scope: !12298)
!12305 = !DILocation(line: 40, column: 12, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12298, file: !12278, line: 40, column: 6)
!12307 = !DILocation(line: 40, column: 21, scope: !12306)
!12308 = !DILocation(line: 40, column: 25, scope: !12306)
!12309 = !DILocation(line: 40, column: 33, scope: !12306)
!12310 = !DILocation(line: 40, column: 6, scope: !12298)
!12311 = !DILocation(line: 55, column: 2, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12298, file: !12278, line: 55, column: 2)
!12313 = !DILocation(line: 50, column: 7, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12315, file: !12278, line: 50, column: 7)
!12315 = distinct !DILexicalBlock(scope: !12316, file: !12278, line: 49, column: 57)
!12316 = distinct !DILexicalBlock(scope: !12317, file: !12278, line: 49, column: 2)
!12317 = distinct !DILexicalBlock(scope: !12298, file: !12278, line: 49, column: 2)
!12318 = !DILocation(line: 50, column: 30, scope: !12314)
!12319 = !DILocation(line: 50, column: 39, scope: !12314)
!12320 = !DILocation(line: 50, column: 44, scope: !12314)
!12321 = !DILocation(line: 50, column: 7, scope: !12315)
!12322 = !DILocation(line: 49, column: 53, scope: !12316)
!12323 = !DILocation(line: 49, column: 33, scope: !12316)
!12324 = !DILocation(line: 49, column: 2, scope: !12317)
!12325 = distinct !{!12325, !12324, !12326}
!12326 = !DILocation(line: 53, column: 2, scope: !12317)
!12327 = !DILocation(line: 56, column: 7, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12329, file: !12278, line: 56, column: 7)
!12329 = distinct !DILexicalBlock(scope: !12330, file: !12278, line: 55, column: 57)
!12330 = distinct !DILexicalBlock(scope: !12312, file: !12278, line: 55, column: 2)
!12331 = !DILocation(line: 56, column: 30, scope: !12328)
!12332 = !DILocation(line: 56, column: 52, scope: !12328)
!12333 = !DILocation(line: 56, column: 34, scope: !12328)
!12334 = !DILocation(line: 56, column: 58, scope: !12328)
!12335 = !DILocation(line: 56, column: 7, scope: !12329)
!12336 = !DILocation(line: 55, column: 53, scope: !12330)
!12337 = !DILocation(line: 55, column: 33, scope: !12330)
!12338 = distinct !{!12338, !12311, !12339}
!12339 = !DILocation(line: 59, column: 2, scope: !12312)
!12340 = !DILocation(line: 62, column: 1, scope: !12298)
!12341 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12278, file: !12278, line: 93, type: !12342, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12344)
!12342 = !DISubroutineType(types: !12343)
!12343 = !{!157, !12281}
!12344 = !{!12345}
!12345 = !DILocalVariable(name: "dev", arg: 1, scope: !12341, file: !12278, line: 93, type: !12281)
!12346 = !DILocation(line: 0, scope: !12341)
!12347 = !DILocation(line: 99, column: 10, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12341, file: !12278, line: 99, column: 6)
!12349 = !DILocation(line: 99, column: 6, scope: !12341)
!12350 = !DILocation(line: 103, column: 14, scope: !12341)
!12351 = !DILocation(line: 103, column: 21, scope: !12341)
!12352 = !DILocation(line: 103, column: 33, scope: !12341)
!12353 = !DILocation(line: 103, column: 49, scope: !12341)
!12354 = !DILocation(line: 103, column: 58, scope: !12341)
!12355 = !DILocation(line: 104, column: 1, scope: !12341)
!12356 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12278, file: !12278, line: 87, type: !12357, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12360)
!12357 = !DISubroutineType(types: !12358)
!12358 = !{!204, !12359}
!12359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12281, size: 32)
!12360 = !{!12361}
!12361 = !DILocalVariable(name: "devices", arg: 1, scope: !12356, file: !12278, line: 87, type: !12359)
!12362 = !DILocation(line: 0, scope: !12356)
!12363 = !DILocation(line: 89, column: 11, scope: !12356)
!12364 = !DILocation(line: 90, column: 2, scope: !12356)
!12365 = distinct !DISubprogram(name: "device_required_foreach", scope: !12278, file: !12278, line: 125, type: !12366, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12372)
!12366 = !DISubroutineType(types: !12367)
!12367 = !{!103, !12281, !12368, !102}
!12368 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !12369)
!12369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12370, size: 32)
!12370 = !DISubroutineType(types: !12371)
!12371 = !{!103, !12281, !102}
!12372 = !{!12373, !12374, !12375, !12376, !12377}
!12373 = !DILocalVariable(name: "dev", arg: 1, scope: !12365, file: !12278, line: 125, type: !12281)
!12374 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12365, file: !12278, line: 126, type: !12368)
!12375 = !DILocalVariable(name: "context", arg: 3, scope: !12365, file: !12278, line: 127, type: !102)
!12376 = !DILocalVariable(name: "handle_count", scope: !12365, file: !12278, line: 129, type: !204)
!12377 = !DILocalVariable(name: "handles", scope: !12365, file: !12278, line: 130, type: !160)
!12378 = !DILocation(line: 0, scope: !12365)
!12379 = !DILocation(line: 129, column: 2, scope: !12365)
!12380 = !DILocation(line: 129, column: 9, scope: !12365)
!12381 = !DILocation(line: 130, column: 35, scope: !12365)
!12382 = !DILocation(line: 132, column: 33, scope: !12365)
!12383 = !DILocation(line: 132, column: 9, scope: !12365)
!12384 = !DILocation(line: 133, column: 1, scope: !12365)
!12385 = !DILocation(line: 132, column: 2, scope: !12365)
!12386 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !12387, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12389)
!12387 = !DISubroutineType(types: !12388)
!12388 = !{!160, !12281, !2600}
!12389 = !{!12390, !12391, !12392, !12393}
!12390 = !DILocalVariable(name: "dev", arg: 1, scope: !12386, file: !141, line: 493, type: !12281)
!12391 = !DILocalVariable(name: "count", arg: 2, scope: !12386, file: !141, line: 493, type: !2600)
!12392 = !DILocalVariable(name: "rv", scope: !12386, file: !141, line: 495, type: !160)
!12393 = !DILocalVariable(name: "i", scope: !12394, file: !141, line: 498, type: !204)
!12394 = distinct !DILexicalBlock(scope: !12395, file: !141, line: 497, column: 18)
!12395 = distinct !DILexicalBlock(scope: !12386, file: !141, line: 497, column: 6)
!12396 = !DILocation(line: 0, scope: !12386)
!12397 = !DILocation(line: 495, column: 35, scope: !12386)
!12398 = !DILocation(line: 497, column: 9, scope: !12395)
!12399 = !DILocation(line: 497, column: 6, scope: !12386)
!12400 = !DILocation(line: 0, scope: !12394)
!12401 = !DILocation(line: 500, column: 11, scope: !12394)
!12402 = !DILocation(line: 500, column: 40, scope: !12394)
!12403 = !DILocation(line: 502, column: 4, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12394, file: !141, line: 501, column: 40)
!12405 = distinct !{!12405, !12406, !12407}
!12406 = !DILocation(line: 500, column: 3, scope: !12394)
!12407 = !DILocation(line: 503, column: 3, scope: !12394)
!12408 = !DILocation(line: 504, column: 10, scope: !12394)
!12409 = !DILocation(line: 505, column: 2, scope: !12394)
!12410 = !DILocation(line: 507, column: 2, scope: !12386)
!12411 = distinct !DISubprogram(name: "device_visitor", scope: !12278, file: !12278, line: 106, type: !12412, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12414)
!12412 = !DISubroutineType(types: !12413)
!12413 = !{!103, !160, !204, !12368, !102}
!12414 = !{!12415, !12416, !12417, !12418, !12419, !12421, !12424, !12425}
!12415 = !DILocalVariable(name: "handles", arg: 1, scope: !12411, file: !12278, line: 106, type: !160)
!12416 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12411, file: !12278, line: 107, type: !204)
!12417 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12411, file: !12278, line: 108, type: !12368)
!12418 = !DILocalVariable(name: "context", arg: 4, scope: !12411, file: !12278, line: 109, type: !102)
!12419 = !DILocalVariable(name: "i", scope: !12420, file: !12278, line: 112, type: !204)
!12420 = distinct !DILexicalBlock(scope: !12411, file: !12278, line: 112, column: 2)
!12421 = !DILocalVariable(name: "dh", scope: !12422, file: !12278, line: 113, type: !162)
!12422 = distinct !DILexicalBlock(scope: !12423, file: !12278, line: 112, column: 44)
!12423 = distinct !DILexicalBlock(scope: !12420, file: !12278, line: 112, column: 2)
!12424 = !DILocalVariable(name: "rdev", scope: !12422, file: !12278, line: 114, type: !12281)
!12425 = !DILocalVariable(name: "rc", scope: !12422, file: !12278, line: 115, type: !103)
!12426 = !DILocation(line: 0, scope: !12411)
!12427 = !DILocation(line: 0, scope: !12420)
!12428 = !DILocation(line: 112, column: 23, scope: !12423)
!12429 = !DILocation(line: 112, column: 2, scope: !12420)
!12430 = distinct !{!12430, !12429, !12431}
!12431 = !DILocation(line: 120, column: 2, scope: !12420)
!12432 = !DILocation(line: 113, column: 24, scope: !12422)
!12433 = !DILocation(line: 0, scope: !12422)
!12434 = !DILocation(line: 114, column: 31, scope: !12422)
!12435 = !DILocation(line: 115, column: 12, scope: !12422)
!12436 = !DILocation(line: 117, column: 10, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12422, file: !12278, line: 117, column: 7)
!12438 = !DILocation(line: 112, column: 39, scope: !12423)
!12439 = !DILocation(line: 123, column: 1, scope: !12411)
!12440 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !12441, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12443)
!12441 = !DISubroutineType(types: !12442)
!12442 = !{!12281, !162}
!12443 = !{!12444, !12445, !12446}
!12444 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12440, file: !141, line: 439, type: !162)
!12445 = !DILocalVariable(name: "dev", scope: !12440, file: !141, line: 443, type: !12281)
!12446 = !DILocalVariable(name: "numdev", scope: !12440, file: !141, line: 444, type: !204)
!12447 = !DILocation(line: 0, scope: !12440)
!12448 = !DILocation(line: 446, column: 7, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12440, file: !141, line: 446, column: 6)
!12450 = !DILocation(line: 446, column: 18, scope: !12449)
!12451 = !DILocation(line: 446, column: 23, scope: !12449)
!12452 = !DILocation(line: 450, column: 2, scope: !12440)
!12453 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12278, file: !12278, line: 135, type: !12366, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12454)
!12454 = !{!12455, !12456, !12457, !12458, !12459}
!12455 = !DILocalVariable(name: "dev", arg: 1, scope: !12453, file: !12278, line: 135, type: !12281)
!12456 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12453, file: !12278, line: 136, type: !12368)
!12457 = !DILocalVariable(name: "context", arg: 3, scope: !12453, file: !12278, line: 137, type: !102)
!12458 = !DILocalVariable(name: "handle_count", scope: !12453, file: !12278, line: 139, type: !204)
!12459 = !DILocalVariable(name: "handles", scope: !12453, file: !12278, line: 140, type: !160)
!12460 = !DILocation(line: 0, scope: !12453)
!12461 = !DILocation(line: 139, column: 2, scope: !12453)
!12462 = !DILocation(line: 139, column: 9, scope: !12453)
!12463 = !DILocation(line: 140, column: 35, scope: !12453)
!12464 = !DILocation(line: 142, column: 33, scope: !12453)
!12465 = !DILocation(line: 142, column: 9, scope: !12453)
!12466 = !DILocation(line: 143, column: 1, scope: !12453)
!12467 = !DILocation(line: 142, column: 2, scope: !12453)
!12468 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !12387, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12469)
!12469 = !{!12470, !12471, !12472, !12473, !12474}
!12470 = !DILocalVariable(name: "dev", arg: 1, scope: !12468, file: !141, line: 573, type: !12281)
!12471 = !DILocalVariable(name: "count", arg: 2, scope: !12468, file: !141, line: 573, type: !2600)
!12472 = !DILocalVariable(name: "rv", scope: !12468, file: !141, line: 575, type: !160)
!12473 = !DILocalVariable(name: "region", scope: !12468, file: !141, line: 576, type: !204)
!12474 = !DILocalVariable(name: "i", scope: !12468, file: !141, line: 577, type: !204)
!12475 = !DILocation(line: 0, scope: !12468)
!12476 = !DILocation(line: 575, column: 35, scope: !12468)
!12477 = !DILocation(line: 579, column: 9, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12468, file: !141, line: 579, column: 6)
!12479 = !DILocation(line: 579, column: 6, scope: !12468)
!12480 = !DILocation(line: 582, column: 8, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12482, file: !141, line: 582, column: 8)
!12482 = distinct !DILexicalBlock(scope: !12483, file: !141, line: 581, column: 23)
!12483 = distinct !DILexicalBlock(scope: !12478, file: !141, line: 579, column: 18)
!12484 = !DILocation(line: 582, column: 12, scope: !12481)
!12485 = !DILocation(line: 585, column: 6, scope: !12482)
!12486 = !DILocation(line: 0, scope: !12483)
!12487 = !DILocation(line: 581, column: 17, scope: !12483)
!12488 = !DILocation(line: 581, column: 3, scope: !12483)
!12489 = !DILocation(line: 588, column: 10, scope: !12483)
!12490 = !DILocation(line: 588, column: 16, scope: !12483)
!12491 = !DILocation(line: 589, column: 4, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12483, file: !141, line: 588, column: 39)
!12493 = !DILocation(line: 588, column: 3, scope: !12483)
!12494 = distinct !{!12494, !12493, !12495}
!12495 = !DILocation(line: 590, column: 3, scope: !12483)
!12496 = !DILocation(line: 591, column: 10, scope: !12483)
!12497 = !DILocation(line: 592, column: 2, scope: !12483)
!12498 = !DILocation(line: 575, column: 25, scope: !12468)
!12499 = !DILocation(line: 594, column: 2, scope: !12468)
!12500 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1958, file: !1958, line: 49, type: !12501, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1955, retainedNodes: !317)
!12501 = !DISubroutineType(types: !12502)
!12502 = !{!2594}
!12503 = !DILocation(line: 51, column: 10, scope: !12500)
!12504 = !DILocation(line: 51, column: 20, scope: !12500)
!12505 = !DILocation(line: 51, column: 2, scope: !12500)
!12506 = distinct !DISubprogram(name: "coredump", scope: !3105, file: !3105, line: 209, type: !12507, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !12653)
!12507 = !DISubroutineType(types: !12508)
!12508 = !{null, !32, !12509, !12553}
!12509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12510, size: 32)
!12510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12511)
!12511 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2725, line: 141, baseType: !12512)
!12512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2725, line: 97, size: 256, elements: !12513)
!12513 = !{!12514}
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12512, file: !2725, line: 107, baseType: !12515, size: 256)
!12515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2725, line: 98, size: 256, elements: !12516)
!12516 = !{!12517, !12522, !12527, !12532, !12537, !12542, !12547, !12552}
!12517 = !DIDerivedType(tag: DW_TAG_member, scope: !12515, file: !2725, line: 99, baseType: !12518, size: 32)
!12518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12515, file: !2725, line: 99, size: 32, elements: !12519)
!12519 = !{!12520, !12521}
!12520 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12518, file: !2725, line: 99, baseType: !121, size: 32)
!12521 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12518, file: !2725, line: 99, baseType: !121, size: 32)
!12522 = !DIDerivedType(tag: DW_TAG_member, scope: !12515, file: !2725, line: 100, baseType: !12523, size: 32, offset: 32)
!12523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12515, file: !2725, line: 100, size: 32, elements: !12524)
!12524 = !{!12525, !12526}
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12523, file: !2725, line: 100, baseType: !121, size: 32)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12523, file: !2725, line: 100, baseType: !121, size: 32)
!12527 = !DIDerivedType(tag: DW_TAG_member, scope: !12515, file: !2725, line: 101, baseType: !12528, size: 32, offset: 64)
!12528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12515, file: !2725, line: 101, size: 32, elements: !12529)
!12529 = !{!12530, !12531}
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12528, file: !2725, line: 101, baseType: !121, size: 32)
!12531 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12528, file: !2725, line: 101, baseType: !121, size: 32)
!12532 = !DIDerivedType(tag: DW_TAG_member, scope: !12515, file: !2725, line: 102, baseType: !12533, size: 32, offset: 96)
!12533 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12515, file: !2725, line: 102, size: 32, elements: !12534)
!12534 = !{!12535, !12536}
!12535 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12533, file: !2725, line: 102, baseType: !121, size: 32)
!12536 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12533, file: !2725, line: 102, baseType: !121, size: 32)
!12537 = !DIDerivedType(tag: DW_TAG_member, scope: !12515, file: !2725, line: 103, baseType: !12538, size: 32, offset: 128)
!12538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12515, file: !2725, line: 103, size: 32, elements: !12539)
!12539 = !{!12540, !12541}
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12538, file: !2725, line: 103, baseType: !121, size: 32)
!12541 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12538, file: !2725, line: 103, baseType: !121, size: 32)
!12542 = !DIDerivedType(tag: DW_TAG_member, scope: !12515, file: !2725, line: 104, baseType: !12543, size: 32, offset: 160)
!12543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12515, file: !2725, line: 104, size: 32, elements: !12544)
!12544 = !{!12545, !12546}
!12545 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12543, file: !2725, line: 104, baseType: !121, size: 32)
!12546 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12543, file: !2725, line: 104, baseType: !121, size: 32)
!12547 = !DIDerivedType(tag: DW_TAG_member, scope: !12515, file: !2725, line: 105, baseType: !12548, size: 32, offset: 192)
!12548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12515, file: !2725, line: 105, size: 32, elements: !12549)
!12549 = !{!12550, !12551}
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12548, file: !2725, line: 105, baseType: !121, size: 32)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12548, file: !2725, line: 105, baseType: !121, size: 32)
!12552 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12515, file: !2725, line: 106, baseType: !121, size: 32, offset: 224)
!12553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12554, size: 32)
!12554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !12555)
!12555 = !{!12556, !12614, !12626, !12627, !12628, !12629, !12635, !12648}
!12556 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12554, file: !379, line: 247, baseType: !12557, size: 384)
!12557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !12558)
!12558 = !{!12559, !12583, !12590, !12591, !12592, !12601, !12602, !12603}
!12559 = !DIDerivedType(tag: DW_TAG_member, scope: !12557, file: !379, line: 60, baseType: !12560, size: 64)
!12560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12557, file: !379, line: 60, size: 64, elements: !12561)
!12561 = !{!12562, !12577}
!12562 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12560, file: !379, line: 61, baseType: !12563, size: 64)
!12563 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !12564)
!12564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !12565)
!12565 = !{!12566, !12572}
!12566 = !DIDerivedType(tag: DW_TAG_member, scope: !12564, file: !325, line: 38, baseType: !12567, size: 32)
!12567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12564, file: !325, line: 38, size: 32, elements: !12568)
!12568 = !{!12569, !12571}
!12569 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12567, file: !325, line: 39, baseType: !12570, size: 32)
!12570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12564, size: 32)
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12567, file: !325, line: 40, baseType: !12570, size: 32)
!12572 = !DIDerivedType(tag: DW_TAG_member, scope: !12564, file: !325, line: 42, baseType: !12573, size: 32, offset: 32)
!12573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12564, file: !325, line: 42, size: 32, elements: !12574)
!12574 = !{!12575, !12576}
!12575 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12573, file: !325, line: 43, baseType: !12570, size: 32)
!12576 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12573, file: !325, line: 44, baseType: !12570, size: 32)
!12577 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12560, file: !379, line: 62, baseType: !12578, size: 64)
!12578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !12579)
!12579 = !{!12580}
!12580 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12578, file: !404, line: 50, baseType: !12581, size: 64)
!12581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12582, size: 64, elements: !363)
!12582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12578, size: 32)
!12583 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12557, file: !379, line: 68, baseType: !12584, size: 32, offset: 64)
!12584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12585, size: 32)
!12585 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !12586)
!12586 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !12587)
!12587 = !{!12588}
!12588 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12586, file: !320, line: 232, baseType: !12589, size: 64)
!12589 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !12564)
!12590 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12557, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!12591 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12557, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!12592 = !DIDerivedType(tag: DW_TAG_member, scope: !12557, file: !379, line: 90, baseType: !12593, size: 16, offset: 112)
!12593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12557, file: !379, line: 90, size: 16, elements: !12594)
!12594 = !{!12595, !12600}
!12595 = !DIDerivedType(tag: DW_TAG_member, scope: !12593, file: !379, line: 91, baseType: !12596, size: 16)
!12596 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12593, file: !379, line: 91, size: 16, elements: !12597)
!12597 = !{!12598, !12599}
!12598 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12596, file: !379, line: 96, baseType: !425, size: 8)
!12599 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12596, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!12600 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12593, file: !379, line: 100, baseType: !429, size: 16)
!12601 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12557, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!12602 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12557, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!12603 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12557, file: !379, line: 131, baseType: !12604, size: 192, offset: 192)
!12604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !12605)
!12605 = !{!12606, !12607, !12613}
!12606 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12604, file: !320, line: 245, baseType: !12563, size: 64)
!12607 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12604, file: !320, line: 246, baseType: !12608, size: 32, offset: 64)
!12608 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !12609)
!12609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12610, size: 32)
!12610 = !DISubroutineType(types: !12611)
!12611 = !{null, !12612}
!12612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12604, size: 32)
!12613 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12604, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!12614 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12554, file: !379, line: 250, baseType: !12615, size: 288, offset: 384)
!12615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !12616)
!12616 = !{!12617, !12618, !12619, !12620, !12621, !12622, !12623, !12624, !12625}
!12617 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12615, file: !446, line: 26, baseType: !121, size: 32)
!12618 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12615, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!12619 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12615, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!12620 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12615, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!12621 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12615, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!12622 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12615, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!12623 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12615, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!12624 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12615, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!12625 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12615, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!12626 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12554, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!12627 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12554, file: !379, line: 256, baseType: !12585, size: 64, offset: 704)
!12628 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12554, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!12629 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12554, file: !379, line: 300, baseType: !12630, size: 96, offset: 800)
!12630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !12631)
!12631 = !{!12632, !12633, !12634}
!12632 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12630, file: !379, line: 153, baseType: !22, size: 32)
!12633 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12630, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!12634 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12630, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!12635 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12554, file: !379, line: 325, baseType: !12636, size: 32, offset: 896)
!12636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12637, size: 32)
!12637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !12638)
!12638 = !{!12639, !12645, !12646}
!12639 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12637, file: !296, line: 5074, baseType: !12640, size: 96)
!12640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !12641)
!12641 = !{!12642, !12643, !12644}
!12642 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12640, file: !472, line: 57, baseType: !475, size: 32)
!12643 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12640, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!12644 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12640, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!12645 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12637, file: !296, line: 5075, baseType: !12585, size: 64, offset: 96)
!12646 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12637, file: !296, line: 5076, baseType: !12647, offset: 160)
!12647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!12648 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12554, file: !379, line: 343, baseType: !12649, size: 64, offset: 928)
!12649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !12650)
!12650 = !{!12651, !12652}
!12651 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12649, file: !446, line: 63, baseType: !121, size: 32)
!12652 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12649, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!12653 = !{!12654, !12655, !12656}
!12654 = !DILocalVariable(name: "reason", arg: 1, scope: !12506, file: !3105, line: 209, type: !32)
!12655 = !DILocalVariable(name: "esf", arg: 2, scope: !12506, file: !3105, line: 209, type: !12509)
!12656 = !DILocalVariable(name: "thread", arg: 3, scope: !12506, file: !3105, line: 210, type: !12553)
!12657 = !DILocation(line: 0, scope: !12506)
!12658 = !DILocation(line: 212, column: 1, scope: !12506)
!12659 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3105, file: !3105, line: 214, type: !12660, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !12662)
!12660 = !DISubroutineType(types: !12661)
!12661 = !{null, !22, !22}
!12662 = !{!12663, !12664}
!12663 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12659, file: !3105, line: 214, type: !22)
!12664 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12659, file: !3105, line: 214, type: !22)
!12665 = !DILocation(line: 0, scope: !12659)
!12666 = !DILocation(line: 216, column: 1, scope: !12659)
!12667 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3105, file: !3105, line: 218, type: !12668, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !12670)
!12668 = !DISubroutineType(types: !12669)
!12669 = !{null, !267, !204}
!12670 = !{!12671, !12672}
!12671 = !DILocalVariable(name: "buf", arg: 1, scope: !12667, file: !3105, line: 218, type: !267)
!12672 = !DILocalVariable(name: "buflen", arg: 2, scope: !12667, file: !3105, line: 218, type: !204)
!12673 = !DILocation(line: 0, scope: !12667)
!12674 = !DILocation(line: 220, column: 1, scope: !12667)
!12675 = distinct !DISubprogram(name: "coredump_query", scope: !3105, file: !3105, line: 222, type: !12676, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !12678)
!12676 = !DISubroutineType(types: !12677)
!12677 = !{!103, !3104, !102}
!12678 = !{!12679, !12680}
!12679 = !DILocalVariable(name: "query_id", arg: 1, scope: !12675, file: !3105, line: 222, type: !3104)
!12680 = !DILocalVariable(name: "arg", arg: 2, scope: !12675, file: !3105, line: 222, type: !102)
!12681 = !DILocation(line: 0, scope: !12675)
!12682 = !DILocation(line: 224, column: 2, scope: !12675)
!12683 = distinct !DISubprogram(name: "coredump_cmd", scope: !3105, file: !3105, line: 227, type: !12684, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !12686)
!12684 = !DISubroutineType(types: !12685)
!12685 = !{!103, !3111, !102}
!12686 = !{!12687, !12688}
!12687 = !DILocalVariable(name: "query_id", arg: 1, scope: !12683, file: !3105, line: 227, type: !3111)
!12688 = !DILocalVariable(name: "arg", arg: 2, scope: !12683, file: !3105, line: 227, type: !102)
!12689 = !DILocation(line: 0, scope: !12683)
!12690 = !DILocation(line: 229, column: 2, scope: !12683)
!12691 = distinct !DISubprogram(name: "arch_system_halt", scope: !12692, file: !12692, line: 23, type: !5749, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !12693)
!12692 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12693 = !{!12694}
!12694 = !DILocalVariable(name: "reason", arg: 1, scope: !12691, file: !12692, line: 23, type: !32)
!12695 = !DILocation(line: 0, scope: !12691)
!12696 = !DILocation(line: 55, column: 2, scope: !12697, inlinedAt: !12701)
!12697 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5738, file: !5738, line: 42, type: !5739, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !12698)
!12698 = !{!12699, !12700}
!12699 = !DILocalVariable(name: "key", scope: !12697, file: !5738, line: 44, type: !32)
!12700 = !DILocalVariable(name: "tmp", scope: !12697, file: !5738, line: 53, type: !32)
!12701 = distinct !DILocation(line: 31, column: 8, scope: !12691)
!12702 = !{i64 2223989}
!12703 = !DILocation(line: 0, scope: !12697, inlinedAt: !12701)
!12704 = !DILocation(line: 32, column: 2, scope: !12691)
!12705 = !DILocation(line: 32, column: 2, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12707, file: !12692, line: 32, column: 2)
!12707 = distinct !DILexicalBlock(scope: !12691, file: !12692, line: 32, column: 2)
!12708 = distinct !{!12708, !12709, !12710}
!12709 = !DILocation(line: 32, column: 2, scope: !12707)
!12710 = !DILocation(line: 34, column: 2, scope: !12707)
!12711 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12692, file: !12692, line: 39, type: !12712, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !12714)
!12712 = !DISubroutineType(types: !12713)
!12713 = !{null, !32, !12509}
!12714 = !{!12715, !12716}
!12715 = !DILocalVariable(name: "reason", arg: 1, scope: !12711, file: !12692, line: 39, type: !32)
!12716 = !DILocalVariable(name: "esf", arg: 2, scope: !12711, file: !12692, line: 40, type: !12509)
!12717 = !DILocation(line: 0, scope: !12711)
!12718 = !DILocation(line: 46, column: 2, scope: !12711)
!12719 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12692, file: !12692, line: 81, type: !5749, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !12720)
!12720 = !{!12721}
!12721 = !DILocalVariable(name: "reason", arg: 1, scope: !12719, file: !12692, line: 81, type: !32)
!12722 = !DILocation(line: 0, scope: !12719)
!12723 = !DILocation(line: 83, column: 2, scope: !12719)
!12724 = distinct !DISubprogram(name: "z_fatal_error", scope: !12692, file: !12692, line: 96, type: !12712, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !12725)
!12725 = !{!12726, !12727, !12728, !12729}
!12726 = !DILocalVariable(name: "reason", arg: 1, scope: !12724, file: !12692, line: 96, type: !32)
!12727 = !DILocalVariable(name: "esf", arg: 2, scope: !12724, file: !12692, line: 96, type: !12509)
!12728 = !DILocalVariable(name: "key", scope: !12724, file: !12692, line: 102, type: !32)
!12729 = !DILocalVariable(name: "thread", scope: !12724, file: !12692, line: 103, type: !12553)
!12730 = !DILocation(line: 0, scope: !12724)
!12731 = !DILocation(line: 55, column: 2, scope: !12697, inlinedAt: !12732)
!12732 = distinct !DILocation(line: 102, column: 21, scope: !12724)
!12733 = !DILocation(line: 0, scope: !12697, inlinedAt: !12732)
!12734 = !DILocation(line: 119, column: 11, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12724, file: !12692, line: 119, column: 6)
!12736 = !DILocation(line: 119, column: 20, scope: !12735)
!12737 = !DILocation(line: 131, column: 2, scope: !12724)
!12738 = !DILocation(line: 151, column: 7, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12740, file: !12692, line: 146, column: 32)
!12740 = distinct !DILexicalBlock(scope: !12724, file: !12692, line: 146, column: 6)
!12741 = !DILocation(line: 151, column: 21, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12739, file: !12692, line: 151, column: 7)
!12743 = !DILocation(line: 104, column: 4, scope: !12724)
!12744 = !DILocalVariable(name: "key", arg: 1, scope: !12745, file: !5738, line: 84, type: !32)
!12745 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5738, file: !5738, line: 84, type: !5749, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !12746)
!12746 = !{!12744}
!12747 = !DILocation(line: 0, scope: !12745, inlinedAt: !12748)
!12748 = distinct !DILocation(line: 186, column: 2, scope: !12724)
!12749 = !DILocation(line: 95, column: 2, scope: !12745, inlinedAt: !12748)
!12750 = !{i64 2224806}
!12751 = !DILocation(line: 189, column: 3, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12753, file: !12692, line: 188, column: 41)
!12753 = distinct !DILexicalBlock(scope: !12724, file: !12692, line: 188, column: 6)
!12754 = !DILocation(line: 191, column: 1, scope: !12724)
!12755 = distinct !DISubprogram(name: "k_current_get", scope: !296, file: !296, line: 530, type: !12756, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !317)
!12756 = !DISubroutineType(types: !12757)
!12757 = !{!12758}
!12758 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !12553)
!12759 = !DILocation(line: 535, column: 9, scope: !12755)
!12760 = !DILocation(line: 535, column: 2, scope: !12755)
!12761 = distinct !DISubprogram(name: "k_thread_abort", scope: !3617, file: !3617, line: 188, type: !12762, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !12764)
!12762 = !DISubroutineType(types: !12763)
!12763 = !{null, !12758}
!12764 = !{!12765}
!12765 = !DILocalVariable(name: "thread", arg: 1, scope: !12761, file: !3617, line: 188, type: !12758)
!12766 = !DILocation(line: 0, scope: !12761)
!12767 = !DILocation(line: 197, column: 2, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12761, file: !3617, line: 197, column: 2)
!12769 = !{i64 2154841751}
!12770 = !DILocation(line: 198, column: 2, scope: !12761)
!12771 = !DILocation(line: 199, column: 1, scope: !12761)
!12772 = distinct !DISubprogram(name: "z_current_get", scope: !3617, file: !3617, line: 173, type: !12756, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !317)
!12773 = !DILocation(line: 180, column: 2, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12772, file: !3617, line: 180, column: 2)
!12775 = !{i64 2154841683}
!12776 = !DILocation(line: 181, column: 9, scope: !12772)
!12777 = !DILocation(line: 181, column: 2, scope: !12772)
!12778 = distinct !DISubprogram(name: "z_early_memset", scope: !1965, file: !1965, line: 108, type: !12779, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12781)
!12779 = !DISubroutineType(types: !12780)
!12780 = !{null, !102, !103, !204}
!12781 = !{!12782, !12783, !12784}
!12782 = !DILocalVariable(name: "dst", arg: 1, scope: !12778, file: !1965, line: 108, type: !102)
!12783 = !DILocalVariable(name: "c", arg: 2, scope: !12778, file: !1965, line: 108, type: !103)
!12784 = !DILocalVariable(name: "n", arg: 3, scope: !12778, file: !1965, line: 108, type: !204)
!12785 = !DILocation(line: 0, scope: !12778)
!12786 = !DILocation(line: 110, column: 9, scope: !12778)
!12787 = !DILocation(line: 111, column: 1, scope: !12778)
!12788 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1965, file: !1965, line: 121, type: !12789, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12791)
!12789 = !DISubroutineType(types: !12790)
!12790 = !{null, !102, !13, !204}
!12791 = !{!12792, !12793, !12794}
!12792 = !DILocalVariable(name: "dst", arg: 1, scope: !12788, file: !1965, line: 121, type: !102)
!12793 = !DILocalVariable(name: "src", arg: 2, scope: !12788, file: !1965, line: 121, type: !13)
!12794 = !DILocalVariable(name: "n", arg: 3, scope: !12788, file: !1965, line: 121, type: !204)
!12795 = !DILocation(line: 0, scope: !12788)
!12796 = !DILocation(line: 123, column: 9, scope: !12788)
!12797 = !DILocation(line: 124, column: 1, scope: !12788)
!12798 = distinct !DISubprogram(name: "z_bss_zero", scope: !1965, file: !1965, line: 132, type: !3181, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !317)
!12799 = !DILocation(line: 143, column: 2, scope: !12798)
!12800 = !DILocation(line: 145, column: 2, scope: !12798)
!12801 = !DILocation(line: 168, column: 1, scope: !12798)
!12802 = distinct !DISubprogram(name: "z_init_cpu", scope: !1965, file: !1965, line: 372, type: !7597, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12803)
!12803 = !{!12804}
!12804 = !DILocalVariable(name: "id", arg: 1, scope: !12802, file: !1965, line: 372, type: !103)
!12805 = !DILocation(line: 0, scope: !12802)
!12806 = !DILocation(line: 374, column: 2, scope: !12802)
!12807 = !DILocation(line: 375, column: 34, scope: !12802)
!12808 = !DILocation(line: 375, column: 19, scope: !12802)
!12809 = !DILocation(line: 375, column: 31, scope: !12802)
!12810 = !DILocation(line: 376, column: 24, scope: !12802)
!12811 = !DILocation(line: 376, column: 19, scope: !12802)
!12812 = !DILocation(line: 376, column: 22, scope: !12802)
!12813 = !DILocation(line: 378, column: 26, scope: !12802)
!12814 = !DILocation(line: 378, column: 4, scope: !12802)
!12815 = !DILocation(line: 378, column: 50, scope: !12802)
!12816 = !DILocation(line: 377, column: 19, scope: !12802)
!12817 = !DILocation(line: 377, column: 29, scope: !12802)
!12818 = !DILocation(line: 384, column: 1, scope: !12802)
!12819 = distinct !DISubprogram(name: "init_idle_thread", scope: !1965, file: !1965, line: 343, type: !7597, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12820)
!12820 = !{!12821, !12822, !12823, !12826}
!12821 = !DILocalVariable(name: "i", arg: 1, scope: !12819, file: !1965, line: 343, type: !103)
!12822 = !DILocalVariable(name: "thread", scope: !12819, file: !1965, line: 345, type: !2057)
!12823 = !DILocalVariable(name: "stack", scope: !12819, file: !1965, line: 346, type: !12824)
!12824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12825, size: 32)
!12825 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3496, line: 44, baseType: !2171)
!12826 = !DILocalVariable(name: "tname", scope: !12819, file: !1965, line: 358, type: !344)
!12827 = !DILocation(line: 0, scope: !12819)
!12828 = !DILocation(line: 345, column: 29, scope: !12819)
!12829 = !DILocation(line: 346, column: 28, scope: !12819)
!12830 = !DILocation(line: 362, column: 37, scope: !12819)
!12831 = !DILocation(line: 362, column: 36, scope: !12819)
!12832 = !DILocation(line: 361, column: 2, scope: !12819)
!12833 = !DILocation(line: 365, column: 2, scope: !12819)
!12834 = !DILocation(line: 370, column: 1, scope: !12819)
!12835 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2172, file: !2172, line: 331, type: !12836, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12838)
!12836 = !DISubroutineType(types: !12837)
!12837 = !{!344, !12824}
!12838 = !{!12839}
!12839 = !DILocalVariable(name: "sym", arg: 1, scope: !12835, file: !2172, line: 331, type: !12824)
!12840 = !DILocation(line: 0, scope: !12835)
!12841 = !DILocation(line: 333, column: 21, scope: !12835)
!12842 = !DILocation(line: 333, column: 2, scope: !12835)
!12843 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12844, file: !12844, line: 155, type: !12845, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12847)
!12844 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12845 = !DISubroutineType(types: !12846)
!12846 = !{null, !2057}
!12847 = !{!12848}
!12848 = !DILocalVariable(name: "thread", arg: 1, scope: !12843, file: !12844, line: 155, type: !2057)
!12849 = !DILocation(line: 0, scope: !12843)
!12850 = !DILocation(line: 157, column: 15, scope: !12843)
!12851 = !DILocation(line: 157, column: 28, scope: !12843)
!12852 = !DILocation(line: 158, column: 1, scope: !12843)
!12853 = distinct !DISubprogram(name: "z_cstart", scope: !1965, file: !1965, line: 501, type: !3181, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12854)
!12854 = !{!12855}
!12855 = !DILocalVariable(name: "dummy_thread", scope: !12853, file: !1965, line: 518, type: !2058)
!12856 = !DILocation(line: 507, column: 2, scope: !12853)
!12857 = !DILocation(line: 43, column: 14, scope: !12858, inlinedAt: !12862)
!12858 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12859, file: !12859, line: 40, type: !3181, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12860)
!12859 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12860 = !{!12861}
!12861 = !DILocalVariable(name: "msp", scope: !12858, file: !12859, line: 42, type: !121)
!12862 = distinct !DILocation(line: 44, column: 2, scope: !12863, inlinedAt: !12865)
!12863 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12864, file: !12864, line: 42, type: !3181, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !317)
!12864 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12865 = distinct !DILocation(line: 510, column: 2, scope: !12853)
!12866 = !DILocation(line: 43, column: 3, scope: !12858, inlinedAt: !12862)
!12867 = !DILocation(line: 43, column: 60, scope: !12858, inlinedAt: !12862)
!12868 = !DILocation(line: 0, scope: !12858, inlinedAt: !12862)
!12869 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12870, file: !5953, line: 1153, type: !121)
!12870 = distinct !DISubprogram(name: "__set_MSP", scope: !5953, file: !5953, line: 1153, type: !6044, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12871)
!12871 = !{!12869}
!12872 = !DILocation(line: 0, scope: !12870, inlinedAt: !12873)
!12873 = distinct !DILocation(line: 46, column: 2, scope: !12858, inlinedAt: !12862)
!12874 = !DILocation(line: 1155, column: 3, scope: !12870, inlinedAt: !12873)
!12875 = !{i64 3561107}
!12876 = !DILocation(line: 62, column: 11, scope: !12858, inlinedAt: !12862)
!12877 = !DILocation(line: 102, column: 2, scope: !12878, inlinedAt: !12879)
!12878 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6747, file: !6747, line: 97, type: !3181, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !317)
!12879 = distinct !DILocation(line: 45, column: 2, scope: !12863, inlinedAt: !12865)
!12880 = !DILocation(line: 108, column: 2, scope: !12878, inlinedAt: !12879)
!12881 = !DILocation(line: 112, column: 2, scope: !12878, inlinedAt: !12879)
!12882 = !DILocation(line: 113, column: 2, scope: !12878, inlinedAt: !12879)
!12883 = !DILocation(line: 114, column: 2, scope: !12878, inlinedAt: !12879)
!12884 = !DILocation(line: 116, column: 2, scope: !12878, inlinedAt: !12879)
!12885 = !DILocation(line: 123, column: 13, scope: !12878, inlinedAt: !12879)
!12886 = !DILocation(line: 46, column: 2, scope: !12863, inlinedAt: !12865)
!12887 = !DILocation(line: 47, column: 2, scope: !12863, inlinedAt: !12865)
!12888 = !DILocation(line: 174, column: 12, scope: !12889, inlinedAt: !12890)
!12889 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6747, file: !6747, line: 169, type: !3181, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !317)
!12890 = distinct !DILocation(line: 48, column: 2, scope: !12863, inlinedAt: !12865)
!12891 = !DILocation(line: 179, column: 12, scope: !12889, inlinedAt: !12890)
!12892 = !DILocation(line: 50, column: 2, scope: !12863, inlinedAt: !12865)
!12893 = !DILocation(line: 57, column: 2, scope: !12863, inlinedAt: !12865)
!12894 = !DILocation(line: 518, column: 2, scope: !12853)
!12895 = !DILocation(line: 518, column: 18, scope: !12853)
!12896 = !DILocation(line: 520, column: 2, scope: !12853)
!12897 = !DILocation(line: 523, column: 2, scope: !12853)
!12898 = !DILocation(line: 526, column: 2, scope: !12853)
!12899 = !DILocation(line: 527, column: 2, scope: !12853)
!12900 = !DILocation(line: 543, column: 24, scope: !12853)
!12901 = !DILocation(line: 543, column: 2, scope: !12853)
!12902 = !DILocation(line: 0, scope: !2191)
!12903 = !DILocation(line: 246, column: 15, scope: !2209)
!12904 = !DILocation(line: 246, column: 36, scope: !2208)
!12905 = !DILocation(line: 246, column: 2, scope: !2209)
!12906 = !DILocation(line: 247, column: 37, scope: !2207)
!12907 = !DILocation(line: 0, scope: !2207)
!12908 = !DILocation(line: 248, column: 19, scope: !2207)
!12909 = !DILocation(line: 248, column: 12, scope: !2207)
!12910 = !DILocation(line: 250, column: 11, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !2207, file: !1965, line: 250, column: 7)
!12912 = !DILocation(line: 250, column: 7, scope: !2207)
!12913 = !DILocation(line: 254, column: 11, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12915, file: !1965, line: 254, column: 8)
!12915 = distinct !DILexicalBlock(scope: !12911, file: !1965, line: 250, column: 20)
!12916 = !DILocation(line: 254, column: 8, scope: !12915)
!12917 = !DILocation(line: 255, column: 9, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12914, file: !1965, line: 254, column: 17)
!12919 = !DILocation(line: 258, column: 9, scope: !12918)
!12920 = !DILocation(line: 261, column: 28, scope: !12918)
!12921 = !DILocation(line: 261, column: 10, scope: !12918)
!12922 = !DILocation(line: 261, column: 17, scope: !12918)
!12923 = !DILocation(line: 261, column: 26, scope: !12918)
!12924 = !DILocation(line: 262, column: 4, scope: !12918)
!12925 = !DILocation(line: 263, column: 9, scope: !12915)
!12926 = !DILocation(line: 263, column: 16, scope: !12915)
!12927 = !DILocation(line: 263, column: 28, scope: !12915)
!12928 = !DILocation(line: 264, column: 3, scope: !12915)
!12929 = !DILocation(line: 246, column: 60, scope: !2208)
!12930 = distinct !{!12930, !12905, !12931}
!12931 = !DILocation(line: 265, column: 2, scope: !2209)
!12932 = !DILocation(line: 266, column: 1, scope: !2191)
!12933 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !5987, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12934)
!12934 = !{!12935, !12936}
!12935 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12933, file: !515, line: 1814, type: !772)
!12936 = !DILocalVariable(name: "priority", arg: 2, scope: !12933, file: !515, line: 1814, type: !121)
!12937 = !DILocation(line: 0, scope: !12933)
!12938 = !DILocation(line: 1822, column: 48, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12940, file: !515, line: 1821, column: 3)
!12940 = distinct !DILexicalBlock(scope: !12933, file: !515, line: 1816, column: 7)
!12941 = !DILocation(line: 1822, column: 32, scope: !12939)
!12942 = !DILocation(line: 1822, column: 40, scope: !12939)
!12943 = !DILocation(line: 1822, column: 5, scope: !12939)
!12944 = !DILocation(line: 1822, column: 46, scope: !12939)
!12945 = !DILocation(line: 1824, column: 1, scope: !12933)
!12946 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12864, file: !12864, line: 32, type: !3181, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!12947 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12948, file: !12948, line: 215, type: !12845, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12949)
!12948 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12949 = !{!12950}
!12950 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12947, file: !12948, line: 215, type: !2057)
!12951 = !DILocation(line: 0, scope: !12947)
!12952 = !DILocation(line: 217, column: 21, scope: !12947)
!12953 = !DILocation(line: 217, column: 34, scope: !12947)
!12954 = !DILocation(line: 221, column: 21, scope: !12947)
!12955 = !DILocation(line: 221, column: 34, scope: !12947)
!12956 = !DILocation(line: 223, column: 27, scope: !12947)
!12957 = !DILocation(line: 223, column: 33, scope: !12947)
!12958 = !DILocation(line: 224, column: 27, scope: !12947)
!12959 = !DILocation(line: 224, column: 32, scope: !12947)
!12960 = !DILocation(line: 232, column: 16, scope: !12947)
!12961 = !DILocation(line: 232, column: 30, scope: !12947)
!12962 = !DILocation(line: 239, column: 24, scope: !12947)
!12963 = !DILocation(line: 240, column: 1, scope: !12947)
!12964 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1965, file: !1965, line: 399, type: !342, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12965)
!12965 = !{!12966}
!12966 = !DILocalVariable(name: "stack_ptr", scope: !12964, file: !1965, line: 401, type: !344)
!12967 = !DILocation(line: 404, column: 2, scope: !12964)
!12968 = !DILocation(line: 416, column: 24, scope: !12964)
!12969 = !DILocation(line: 418, column: 14, scope: !12964)
!12970 = !DILocation(line: 0, scope: !12964)
!12971 = !DILocation(line: 423, column: 2, scope: !12964)
!12972 = !DILocation(line: 424, column: 2, scope: !12964)
!12973 = !DILocation(line: 426, column: 2, scope: !12964)
!12974 = !DILocation(line: 428, column: 2, scope: !12964)
!12975 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1965, file: !1965, line: 432, type: !12976, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12978)
!12976 = !DISubroutineType(types: !12977)
!12977 = !{null, !344}
!12978 = !{!12979}
!12979 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12975, file: !1965, line: 432, type: !344)
!12980 = !DILocation(line: 0, scope: !12975)
!12981 = !DILocation(line: 435, column: 2, scope: !12975)
!12982 = !DILocation(line: 445, column: 2, scope: !12975)
!12983 = distinct !DISubprogram(name: "bg_thread_main", scope: !1965, file: !1965, line: 277, type: !3498, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !12984)
!12984 = !{!12985, !12986, !12987}
!12985 = !DILocalVariable(name: "unused1", arg: 1, scope: !12983, file: !1965, line: 277, type: !102)
!12986 = !DILocalVariable(name: "unused2", arg: 2, scope: !12983, file: !1965, line: 277, type: !102)
!12987 = !DILocalVariable(name: "unused3", arg: 3, scope: !12983, file: !1965, line: 277, type: !102)
!12988 = !DILocation(line: 0, scope: !12983)
!12989 = !DILocation(line: 291, column: 20, scope: !12983)
!12990 = !DILocation(line: 293, column: 2, scope: !12983)
!12991 = !DILocation(line: 297, column: 2, scope: !12983)
!12992 = !DILocation(line: 305, column: 2, scope: !12983)
!12993 = !DILocation(line: 307, column: 2, scope: !12983)
!12994 = !DILocation(line: 330, column: 8, scope: !12983)
!12995 = !DILocation(line: 333, column: 34, scope: !12983)
!12996 = !DILocation(line: 339, column: 1, scope: !12983)
!12997 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2218, file: !2218, line: 45, type: !12998, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13006)
!12998 = !DISubroutineType(types: !12999)
!12999 = !{null, !13000, !102}
!13000 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !296, line: 103, baseType: !13001)
!13001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13002, size: 32)
!13002 = !DISubroutineType(types: !13003)
!13003 = !{null, !13004, !102}
!13004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13005, size: 32)
!13005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2223)
!13006 = !{!13007, !13008}
!13007 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12997, file: !2218, line: 45, type: !13000)
!13008 = !DILocalVariable(name: "user_data", arg: 2, scope: !12997, file: !2218, line: 45, type: !102)
!13009 = !DILocation(line: 0, scope: !12997)
!13010 = !DILocation(line: 71, column: 1, scope: !12997)
!13011 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2218, file: !2218, line: 73, type: !12998, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13012)
!13012 = !{!13013, !13014}
!13013 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13011, file: !2218, line: 73, type: !13000)
!13014 = !DILocalVariable(name: "user_data", arg: 2, scope: !13011, file: !2218, line: 73, type: !102)
!13015 = !DILocation(line: 0, scope: !13011)
!13016 = !DILocation(line: 95, column: 1, scope: !13011)
!13017 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2218, file: !2218, line: 97, type: !6748, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !317)
!13018 = !DILocation(line: 1031, column: 3, scope: !13019, inlinedAt: !13022)
!13019 = distinct !DISubprogram(name: "__get_IPSR", scope: !5953, file: !5953, line: 1027, type: !6034, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13020)
!13020 = !{!13021}
!13021 = !DILocalVariable(name: "result", scope: !13019, file: !5953, line: 1029, type: !121)
!13022 = distinct !DILocation(line: 48, column: 10, scope: !13023, inlinedAt: !13024)
!13023 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6747, file: !6747, line: 46, type: !6748, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !317)
!13024 = distinct !DILocation(line: 99, column: 9, scope: !13017)
!13025 = !{i64 3566758}
!13026 = !DILocation(line: 0, scope: !13019, inlinedAt: !13022)
!13027 = !DILocation(line: 48, column: 9, scope: !13023, inlinedAt: !13024)
!13028 = !DILocation(line: 99, column: 2, scope: !13017)
!13029 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2218, file: !2218, line: 106, type: !3181, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !317)
!13030 = !DILocation(line: 108, column: 2, scope: !13029)
!13031 = !DILocation(line: 108, column: 17, scope: !13029)
!13032 = !DILocation(line: 108, column: 30, scope: !13029)
!13033 = !DILocation(line: 109, column: 1, scope: !13029)
!13034 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2218, file: !2218, line: 116, type: !3181, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !317)
!13035 = !DILocation(line: 118, column: 2, scope: !13034)
!13036 = !DILocation(line: 118, column: 17, scope: !13034)
!13037 = !DILocation(line: 118, column: 30, scope: !13034)
!13038 = !DILocation(line: 119, column: 1, scope: !13034)
!13039 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2218, file: !2218, line: 126, type: !6748, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !317)
!13040 = !DILocation(line: 128, column: 10, scope: !13039)
!13041 = !DILocation(line: 128, column: 25, scope: !13039)
!13042 = !DILocation(line: 128, column: 38, scope: !13039)
!13043 = !DILocation(line: 128, column: 53, scope: !13039)
!13044 = !DILocation(line: 128, column: 2, scope: !13039)
!13045 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2218, file: !2218, line: 187, type: !13046, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13048)
!13046 = !DISubroutineType(types: !13047)
!13047 = !{!103, !2222, !144}
!13048 = !{!13049, !13050}
!13049 = !DILocalVariable(name: "thread", arg: 1, scope: !13045, file: !2218, line: 187, type: !2222)
!13050 = !DILocalVariable(name: "value", arg: 2, scope: !13045, file: !2218, line: 187, type: !144)
!13051 = !DILocation(line: 0, scope: !13045)
!13052 = !DILocation(line: 206, column: 2, scope: !13045)
!13053 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2218, file: !2218, line: 238, type: !13054, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13056)
!13054 = !DISubroutineType(types: !13055)
!13055 = !{!144, !2222}
!13056 = !{!13057}
!13057 = !DILocalVariable(name: "thread", arg: 1, scope: !13053, file: !2218, line: 238, type: !2222)
!13058 = !DILocation(line: 0, scope: !13053)
!13059 = !DILocation(line: 244, column: 2, scope: !13053)
!13060 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2218, file: !2218, line: 248, type: !13061, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13063)
!13061 = !DISubroutineType(types: !13062)
!13062 = !{!103, !2221, !344, !204}
!13063 = !{!13064, !13065, !13066}
!13064 = !DILocalVariable(name: "thread", arg: 1, scope: !13060, file: !2218, line: 248, type: !2221)
!13065 = !DILocalVariable(name: "buf", arg: 2, scope: !13060, file: !2218, line: 248, type: !344)
!13066 = !DILocalVariable(name: "size", arg: 3, scope: !13060, file: !2218, line: 248, type: !204)
!13067 = !DILocation(line: 0, scope: !13060)
!13068 = !DILocation(line: 257, column: 2, scope: !13060)
!13069 = !DILocation(line: 0, scope: !2217)
!13070 = !DILocation(line: 281, column: 11, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !2217, file: !2218, line: 281, column: 6)
!13072 = !DILocation(line: 281, column: 20, scope: !13071)
!13073 = !DILocation(line: 275, column: 45, scope: !2217)
!13074 = !DILocation(line: 285, column: 10, scope: !2217)
!13075 = !DILocation(line: 0, scope: !2338)
!13076 = !DILocation(line: 293, column: 39, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !2338, file: !2218, line: 293, column: 2)
!13078 = !DILocation(line: 293, column: 2, scope: !2338)
!13079 = !DILocation(line: 273, column: 14, scope: !2217)
!13080 = !DILocation(line: 309, column: 2, scope: !2217)
!13081 = !DILocation(line: 309, column: 11, scope: !2217)
!13082 = !DILocation(line: 311, column: 2, scope: !2217)
!13083 = !DILocation(line: 293, column: 26, scope: !13077)
!13084 = !DILocation(line: 294, column: 9, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13077, file: !2218, line: 293, column: 54)
!13086 = !DILocation(line: 295, column: 21, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13085, file: !2218, line: 295, column: 7)
!13088 = !DILocation(line: 295, column: 28, scope: !13087)
!13089 = !DILocation(line: 295, column: 7, scope: !13085)
!13090 = !DILocation(line: 299, column: 25, scope: !13085)
!13091 = !DILocation(line: 299, column: 41, scope: !13085)
!13092 = !DILocation(line: 300, column: 7, scope: !13085)
!13093 = !DILocation(line: 300, column: 26, scope: !13085)
!13094 = !DILocation(line: 299, column: 10, scope: !13085)
!13095 = !DILocation(line: 299, column: 7, scope: !13085)
!13096 = !DILocation(line: 302, column: 16, scope: !13085)
!13097 = !DILocation(line: 304, column: 20, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13085, file: !2218, line: 304, column: 7)
!13099 = !DILocation(line: 304, column: 7, scope: !13085)
!13100 = !DILocation(line: 305, column: 26, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13098, file: !2218, line: 304, column: 26)
!13102 = !DILocation(line: 305, column: 42, scope: !13101)
!13103 = !DILocation(line: 305, column: 11, scope: !13101)
!13104 = !DILocation(line: 305, column: 8, scope: !13101)
!13105 = !DILocation(line: 306, column: 3, scope: !13101)
!13106 = !DILocation(line: 293, column: 50, scope: !13077)
!13107 = !DILocation(line: 312, column: 1, scope: !2217)
!13108 = distinct !DISubprogram(name: "copy_bytes", scope: !2218, file: !2218, line: 261, type: !13109, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13111)
!13109 = !DISubroutineType(types: !13110)
!13110 = !{!204, !344, !204, !144, !204}
!13111 = !{!13112, !13113, !13114, !13115, !13116}
!13112 = !DILocalVariable(name: "dest", arg: 1, scope: !13108, file: !2218, line: 261, type: !344)
!13113 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13108, file: !2218, line: 261, type: !204)
!13114 = !DILocalVariable(name: "src", arg: 3, scope: !13108, file: !2218, line: 261, type: !144)
!13115 = !DILocalVariable(name: "src_size", arg: 4, scope: !13108, file: !2218, line: 261, type: !204)
!13116 = !DILocalVariable(name: "bytes_to_copy", scope: !13108, file: !2218, line: 263, type: !204)
!13117 = !DILocation(line: 0, scope: !13108)
!13118 = !DILocation(line: 265, column: 18, scope: !13108)
!13119 = !DILocation(line: 266, column: 2, scope: !13108)
!13120 = !DILocation(line: 268, column: 2, scope: !13108)
!13121 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2218, file: !2218, line: 383, type: !13122, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13124)
!13122 = !DISubroutineType(types: !13123)
!13123 = !{null, !2222}
!13124 = !{!13125}
!13125 = !DILocalVariable(name: "thread", arg: 1, scope: !13121, file: !2218, line: 383, type: !2222)
!13126 = !DILocation(line: 0, scope: !13121)
!13127 = !DILocation(line: 387, column: 2, scope: !13121)
!13128 = !DILocation(line: 388, column: 1, scope: !13121)
!13129 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2218, file: !2218, line: 528, type: !13130, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13137)
!13130 = !DISubroutineType(types: !13131)
!13131 = !{!344, !2222, !13132, !204, !3495, !102, !102, !102, !103, !121, !144}
!13132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13133, size: 32)
!13133 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3496, line: 44, baseType: !13134)
!13134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2172, line: 47, size: 8, elements: !13135)
!13135 = !{!13136}
!13136 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13134, file: !2172, line: 48, baseType: !146, size: 8)
!13137 = !{!13138, !13139, !13140, !13141, !13142, !13143, !13144, !13145, !13146, !13147, !13148}
!13138 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13129, file: !2218, line: 528, type: !2222)
!13139 = !DILocalVariable(name: "stack", arg: 2, scope: !13129, file: !2218, line: 529, type: !13132)
!13140 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13129, file: !2218, line: 529, type: !204)
!13141 = !DILocalVariable(name: "entry", arg: 4, scope: !13129, file: !2218, line: 530, type: !3495)
!13142 = !DILocalVariable(name: "p1", arg: 5, scope: !13129, file: !2218, line: 531, type: !102)
!13143 = !DILocalVariable(name: "p2", arg: 6, scope: !13129, file: !2218, line: 531, type: !102)
!13144 = !DILocalVariable(name: "p3", arg: 7, scope: !13129, file: !2218, line: 531, type: !102)
!13145 = !DILocalVariable(name: "prio", arg: 8, scope: !13129, file: !2218, line: 532, type: !103)
!13146 = !DILocalVariable(name: "options", arg: 9, scope: !13129, file: !2218, line: 532, type: !121)
!13147 = !DILocalVariable(name: "name", arg: 10, scope: !13129, file: !2218, line: 532, type: !144)
!13148 = !DILocalVariable(name: "stack_ptr", scope: !13129, file: !2218, line: 534, type: !344)
!13149 = !DILocation(line: 0, scope: !13129)
!13150 = !DILocation(line: 550, column: 28, scope: !13129)
!13151 = !DILocation(line: 550, column: 2, scope: !13129)
!13152 = !DILocation(line: 553, column: 34, scope: !13129)
!13153 = !DILocation(line: 553, column: 2, scope: !13129)
!13154 = !DILocation(line: 554, column: 14, scope: !13129)
!13155 = !DILocation(line: 564, column: 2, scope: !13129)
!13156 = !DILocation(line: 567, column: 14, scope: !13129)
!13157 = !DILocation(line: 567, column: 24, scope: !13129)
!13158 = !DILocation(line: 612, column: 7, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13129, file: !2218, line: 612, column: 6)
!13160 = !DILocation(line: 612, column: 6, scope: !13129)
!13161 = !DILocation(line: 627, column: 40, scope: !13129)
!13162 = !DILocation(line: 637, column: 2, scope: !13129)
!13163 = !DILocation(line: 613, column: 15, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13159, file: !2218, line: 612, column: 17)
!13165 = !DILocation(line: 613, column: 29, scope: !13164)
!13166 = !DILocation(line: 638, column: 1, scope: !13129)
!13167 = distinct !DISubprogram(name: "z_waitq_init", scope: !13168, file: !13168, line: 47, type: !13169, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13171)
!13168 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13169 = !DISubroutineType(types: !13170)
!13170 = !{null, !2253}
!13171 = !{!13172}
!13172 = !DILocalVariable(name: "w", arg: 1, scope: !13167, file: !13168, line: 47, type: !2253)
!13173 = !DILocation(line: 0, scope: !13167)
!13174 = !DILocation(line: 49, column: 21, scope: !13167)
!13175 = !DILocation(line: 49, column: 2, scope: !13167)
!13176 = !DILocation(line: 50, column: 1, scope: !13167)
!13177 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2218, file: !2218, line: 791, type: !13178, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13181)
!13178 = !DISubroutineType(types: !13179)
!13179 = !{null, !13180, !103, !121, !32}
!13180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 32)
!13181 = !{!13182, !13183, !13184, !13185}
!13182 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13177, file: !2218, line: 791, type: !13180)
!13183 = !DILocalVariable(name: "priority", arg: 2, scope: !13177, file: !2218, line: 791, type: !103)
!13184 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13177, file: !2218, line: 792, type: !121)
!13185 = !DILocalVariable(name: "options", arg: 4, scope: !13177, file: !2218, line: 792, type: !32)
!13186 = !DILocation(line: 0, scope: !13177)
!13187 = !DILocation(line: 795, column: 15, scope: !13177)
!13188 = !DILocation(line: 795, column: 25, scope: !13177)
!13189 = !DILocation(line: 796, column: 30, scope: !13177)
!13190 = !DILocation(line: 796, column: 15, scope: !13177)
!13191 = !DILocation(line: 796, column: 28, scope: !13177)
!13192 = !DILocation(line: 797, column: 30, scope: !13177)
!13193 = !DILocation(line: 797, column: 15, scope: !13177)
!13194 = !DILocation(line: 797, column: 28, scope: !13177)
!13195 = !DILocation(line: 799, column: 22, scope: !13177)
!13196 = !DILocation(line: 799, column: 15, scope: !13177)
!13197 = !DILocation(line: 799, column: 20, scope: !13177)
!13198 = !DILocation(line: 801, column: 15, scope: !13177)
!13199 = !DILocation(line: 801, column: 28, scope: !13177)
!13200 = !DILocation(line: 814, column: 2, scope: !13177)
!13201 = !DILocation(line: 815, column: 1, scope: !13177)
!13202 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2218, file: !2218, line: 449, type: !13203, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13205)
!13203 = !DISubroutineType(types: !13204)
!13204 = !{!344, !2222, !13132, !204}
!13205 = !{!13206, !13207, !13208, !13209, !13210, !13211, !13212, !13213}
!13206 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13202, file: !2218, line: 449, type: !2222)
!13207 = !DILocalVariable(name: "stack", arg: 2, scope: !13202, file: !2218, line: 450, type: !13132)
!13208 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13202, file: !2218, line: 450, type: !204)
!13209 = !DILocalVariable(name: "stack_obj_size", scope: !13202, file: !2218, line: 452, type: !204)
!13210 = !DILocalVariable(name: "stack_buf_size", scope: !13202, file: !2218, line: 452, type: !204)
!13211 = !DILocalVariable(name: "stack_ptr", scope: !13202, file: !2218, line: 453, type: !344)
!13212 = !DILocalVariable(name: "stack_buf_start", scope: !13202, file: !2218, line: 453, type: !344)
!13213 = !DILocalVariable(name: "delta", scope: !13202, file: !2218, line: 454, type: !204)
!13214 = !DILocation(line: 0, scope: !13202)
!13215 = !DILocation(line: 465, column: 20, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13202, file: !2218, line: 463, column: 2)
!13217 = !DILocation(line: 466, column: 21, scope: !13216)
!13218 = !DILocation(line: 473, column: 28, scope: !13202)
!13219 = !DILocation(line: 514, column: 33, scope: !13202)
!13220 = !DILocation(line: 514, column: 25, scope: !13202)
!13221 = !DILocation(line: 514, column: 31, scope: !13202)
!13222 = !DILocation(line: 515, column: 25, scope: !13202)
!13223 = !DILocation(line: 515, column: 30, scope: !13202)
!13224 = !DILocation(line: 516, column: 25, scope: !13202)
!13225 = !DILocation(line: 516, column: 31, scope: !13202)
!13226 = !DILocation(line: 520, column: 2, scope: !13202)
!13227 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2172, file: !2172, line: 331, type: !13228, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13230)
!13228 = !DISubroutineType(types: !13229)
!13229 = !{!344, !13132}
!13230 = !{!13231}
!13231 = !DILocalVariable(name: "sym", arg: 1, scope: !13227, file: !2172, line: 331, type: !13132)
!13232 = !DILocation(line: 0, scope: !13227)
!13233 = !DILocation(line: 333, column: 21, scope: !13227)
!13234 = !DILocation(line: 333, column: 2, scope: !13227)
!13235 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13236, file: !13236, line: 40, type: !13237, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13239)
!13236 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13237 = !DISubroutineType(types: !13238)
!13238 = !{null, !13180}
!13239 = !{!13240}
!13240 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13235, file: !13236, line: 40, type: !13180)
!13241 = !DILocation(line: 0, scope: !13235)
!13242 = !DILocation(line: 42, column: 31, scope: !13235)
!13243 = !DILocation(line: 42, column: 2, scope: !13235)
!13244 = !DILocation(line: 43, column: 1, scope: !13235)
!13245 = distinct !DISubprogram(name: "z_init_timeout", scope: !13236, file: !13236, line: 25, type: !2279, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13246)
!13246 = !{!13247}
!13247 = !DILocalVariable(name: "to", arg: 1, scope: !13245, file: !13236, line: 25, type: !2281)
!13248 = !DILocation(line: 0, scope: !13245)
!13249 = !DILocation(line: 27, column: 22, scope: !13245)
!13250 = !DILocation(line: 27, column: 2, scope: !13245)
!13251 = !DILocation(line: 28, column: 1, scope: !13245)
!13252 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !13253, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13255)
!13253 = !DISubroutineType(types: !13254)
!13254 = !{null, !2325}
!13255 = !{!13256}
!13256 = !DILocalVariable(name: "node", arg: 1, scope: !13252, file: !325, line: 211, type: !2325)
!13257 = !DILocation(line: 0, scope: !13252)
!13258 = !DILocation(line: 213, column: 8, scope: !13252)
!13259 = !DILocation(line: 213, column: 13, scope: !13252)
!13260 = !DILocation(line: 214, column: 8, scope: !13252)
!13261 = !DILocation(line: 214, column: 13, scope: !13252)
!13262 = !DILocation(line: 215, column: 1, scope: !13252)
!13263 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !13264, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13267)
!13264 = !DISubroutineType(types: !13265)
!13265 = !{null, !13266}
!13266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!13267 = !{!13268}
!13268 = !DILocalVariable(name: "list", arg: 1, scope: !13263, file: !325, line: 197, type: !13266)
!13269 = !DILocation(line: 0, scope: !13263)
!13270 = !DILocation(line: 199, column: 8, scope: !13263)
!13271 = !DILocation(line: 199, column: 13, scope: !13263)
!13272 = !DILocation(line: 200, column: 8, scope: !13263)
!13273 = !DILocation(line: 200, column: 13, scope: !13263)
!13274 = !DILocation(line: 201, column: 1, scope: !13263)
!13275 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2218, file: !2218, line: 641, type: !13276, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13282)
!13276 = !DISubroutineType(types: !13277)
!13277 = !{!2221, !2222, !13132, !204, !3495, !102, !102, !102, !103, !121, !13278}
!13278 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !13279)
!13279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !13280)
!13280 = !{!13281}
!13281 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13279, file: !201, line: 66, baseType: !200, size: 64)
!13282 = !{!13283, !13284, !13285, !13286, !13287, !13288, !13289, !13290, !13291, !13292}
!13283 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13275, file: !2218, line: 641, type: !2222)
!13284 = !DILocalVariable(name: "stack", arg: 2, scope: !13275, file: !2218, line: 642, type: !13132)
!13285 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13275, file: !2218, line: 643, type: !204)
!13286 = !DILocalVariable(name: "entry", arg: 4, scope: !13275, file: !2218, line: 643, type: !3495)
!13287 = !DILocalVariable(name: "p1", arg: 5, scope: !13275, file: !2218, line: 644, type: !102)
!13288 = !DILocalVariable(name: "p2", arg: 6, scope: !13275, file: !2218, line: 644, type: !102)
!13289 = !DILocalVariable(name: "p3", arg: 7, scope: !13275, file: !2218, line: 644, type: !102)
!13290 = !DILocalVariable(name: "prio", arg: 8, scope: !13275, file: !2218, line: 645, type: !103)
!13291 = !DILocalVariable(name: "options", arg: 9, scope: !13275, file: !2218, line: 645, type: !121)
!13292 = !DILocalVariable(name: "delay", arg: 10, scope: !13275, file: !2218, line: 645, type: !13278)
!13293 = !DILocation(line: 0, scope: !13275)
!13294 = !DILocation(line: 649, column: 2, scope: !13275)
!13295 = !DILocation(line: 652, column: 7, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13275, file: !2218, line: 652, column: 6)
!13297 = !DILocation(line: 652, column: 6, scope: !13275)
!13298 = !DILocation(line: 653, column: 3, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13296, file: !2218, line: 652, column: 39)
!13300 = !DILocation(line: 654, column: 2, scope: !13299)
!13301 = !DILocation(line: 656, column: 2, scope: !13275)
!13302 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2218, file: !2218, line: 401, type: !13303, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13305)
!13303 = !DISubroutineType(types: !13304)
!13304 = !{null, !2222, !13278}
!13305 = !{!13306, !13307}
!13306 = !DILocalVariable(name: "thread", arg: 1, scope: !13302, file: !2218, line: 401, type: !2222)
!13307 = !DILocalVariable(name: "delay", arg: 2, scope: !13302, file: !2218, line: 401, type: !13278)
!13308 = !DILocation(line: 0, scope: !13302)
!13309 = !DILocation(line: 404, column: 6, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13302, file: !2218, line: 404, column: 6)
!13311 = !DILocation(line: 404, column: 6, scope: !13302)
!13312 = !DILocation(line: 405, column: 3, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13310, file: !2218, line: 404, column: 38)
!13314 = !DILocation(line: 406, column: 2, scope: !13313)
!13315 = !DILocation(line: 407, column: 3, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13310, file: !2218, line: 406, column: 9)
!13317 = !DILocation(line: 413, column: 1, scope: !13302)
!13318 = distinct !DISubprogram(name: "k_thread_start", scope: !3617, file: !3617, line: 205, type: !13319, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13321)
!13319 = !DISubroutineType(types: !13320)
!13320 = !{null, !2221}
!13321 = !{!13322}
!13322 = !DILocalVariable(name: "thread", arg: 1, scope: !13318, file: !3617, line: 205, type: !2221)
!13323 = !DILocation(line: 0, scope: !13318)
!13324 = !DILocation(line: 214, column: 2, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13318, file: !3617, line: 214, column: 2)
!13326 = !{i64 2154866975}
!13327 = !DILocation(line: 215, column: 2, scope: !13318)
!13328 = !DILocation(line: 216, column: 1, scope: !13318)
!13329 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13236, file: !13236, line: 47, type: !13303, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13330)
!13330 = !{!13331, !13332}
!13331 = !DILocalVariable(name: "thread", arg: 1, scope: !13329, file: !13236, line: 47, type: !2222)
!13332 = !DILocalVariable(name: "ticks", arg: 2, scope: !13329, file: !13236, line: 47, type: !13278)
!13333 = !DILocation(line: 0, scope: !13329)
!13334 = !DILocation(line: 49, column: 30, scope: !13329)
!13335 = !DILocation(line: 49, column: 2, scope: !13329)
!13336 = !DILocation(line: 50, column: 1, scope: !13329)
!13337 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2218, file: !2218, line: 748, type: !3181, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13338)
!13338 = !{!13339, !13357}
!13339 = !DILocalVariable(name: "thread_data", scope: !13340, file: !2218, line: 750, type: !13341)
!13340 = distinct !DILexicalBlock(scope: !13337, file: !2218, line: 750, column: 2)
!13341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13342, size: 32)
!13342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !296, line: 620, size: 384, elements: !13343)
!13343 = !{!13344, !13345, !13346, !13347, !13348, !13349, !13350, !13351, !13352, !13353, !13354, !13356}
!13344 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13342, file: !296, line: 621, baseType: !2222, size: 32)
!13345 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13342, file: !296, line: 622, baseType: !13132, size: 32, offset: 32)
!13346 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13342, file: !296, line: 623, baseType: !32, size: 32, offset: 64)
!13347 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13342, file: !296, line: 624, baseType: !3495, size: 32, offset: 96)
!13348 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13342, file: !296, line: 625, baseType: !102, size: 32, offset: 128)
!13349 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13342, file: !296, line: 626, baseType: !102, size: 32, offset: 160)
!13350 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13342, file: !296, line: 627, baseType: !102, size: 32, offset: 192)
!13351 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13342, file: !296, line: 628, baseType: !103, size: 32, offset: 224)
!13352 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13342, file: !296, line: 629, baseType: !121, size: 32, offset: 256)
!13353 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13342, file: !296, line: 630, baseType: !746, size: 32, offset: 288)
!13354 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13342, file: !296, line: 631, baseType: !13355, size: 32, offset: 320)
!13355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 32)
!13356 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13342, file: !296, line: 632, baseType: !144, size: 32, offset: 352)
!13357 = !DILocalVariable(name: "thread_data", scope: !13358, file: !2218, line: 781, type: !13341)
!13358 = distinct !DILexicalBlock(scope: !13337, file: !2218, line: 781, column: 2)
!13359 = !DILocation(line: 0, scope: !13340)
!13360 = !DILocation(line: 750, column: 2, scope: !13340)
!13361 = !DILocation(line: 780, column: 2, scope: !13337)
!13362 = !DILocation(line: 0, scope: !13358)
!13363 = !DILocation(line: 781, column: 2, scope: !13358)
!13364 = !DILocation(line: 752, column: 17, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13366, file: !2218, line: 750, column: 38)
!13366 = distinct !DILexicalBlock(scope: !13340, file: !2218, line: 750, column: 2)
!13367 = !DILocation(line: 753, column: 17, scope: !13365)
!13368 = !DILocation(line: 754, column: 17, scope: !13365)
!13369 = !DILocation(line: 755, column: 17, scope: !13365)
!13370 = !DILocation(line: 756, column: 17, scope: !13365)
!13371 = !DILocation(line: 757, column: 17, scope: !13365)
!13372 = !DILocation(line: 758, column: 17, scope: !13365)
!13373 = !DILocation(line: 759, column: 17, scope: !13365)
!13374 = !DILocation(line: 760, column: 17, scope: !13365)
!13375 = !DILocation(line: 751, column: 3, scope: !13365)
!13376 = !DILocation(line: 763, column: 16, scope: !13365)
!13377 = !DILocation(line: 763, column: 29, scope: !13365)
!13378 = !DILocation(line: 763, column: 39, scope: !13365)
!13379 = !DILocation(line: 750, column: 2, scope: !13366)
!13380 = !DILocation(line: 750, column: 2, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13366, file: !2218, line: 750, column: 2)
!13382 = distinct !{!13382, !13360, !13383}
!13383 = !DILocation(line: 764, column: 2, scope: !13340)
!13384 = !DILocation(line: 787, column: 2, scope: !13337)
!13385 = !DILocation(line: 788, column: 1, scope: !13337)
!13386 = !DILocation(line: 782, column: 20, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13388, file: !2218, line: 782, column: 7)
!13388 = distinct !DILexicalBlock(scope: !13389, file: !2218, line: 781, column: 38)
!13389 = distinct !DILexicalBlock(scope: !13358, file: !2218, line: 781, column: 2)
!13390 = !DILocation(line: 782, column: 31, scope: !13387)
!13391 = !DILocation(line: 782, column: 7, scope: !13388)
!13392 = !DILocation(line: 783, column: 37, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13387, file: !2218, line: 782, column: 51)
!13394 = !DILocation(line: 784, column: 10, scope: !13393)
!13395 = !DILocation(line: 783, column: 4, scope: !13393)
!13396 = !DILocation(line: 785, column: 3, scope: !13393)
!13397 = !DILocation(line: 781, column: 2, scope: !13389)
!13398 = !DILocation(line: 781, column: 2, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13389, file: !2218, line: 781, column: 2)
!13400 = distinct !{!13400, !13363, !13401}
!13401 = !DILocation(line: 786, column: 2, scope: !13358)
!13402 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13403, file: !13403, line: 403, type: !13404, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13406)
!13403 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13404 = !DISubroutineType(types: !13405)
!13405 = !{!1604, !1604}
!13406 = !{!13407}
!13407 = !DILocalVariable(name: "t", arg: 1, scope: !13402, file: !13403, line: 403, type: !1604)
!13408 = !DILocation(line: 0, scope: !13402)
!13409 = !DILocalVariable(name: "t", arg: 1, scope: !13410, file: !13403, line: 102, type: !1604)
!13410 = distinct !DISubprogram(name: "z_tmcvt", scope: !13403, file: !13403, line: 102, type: !13411, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13413)
!13411 = !DISubroutineType(types: !13412)
!13412 = !{!1604, !1604, !121, !121, !157, !157, !157, !157}
!13413 = !{!13409, !13414, !13415, !13416, !13417, !13418, !13419, !13420, !13421, !13422, !13423}
!13414 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13410, file: !13403, line: 102, type: !121)
!13415 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13410, file: !13403, line: 103, type: !121)
!13416 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13410, file: !13403, line: 103, type: !157)
!13417 = !DILocalVariable(name: "result32", arg: 5, scope: !13410, file: !13403, line: 104, type: !157)
!13418 = !DILocalVariable(name: "round_up", arg: 6, scope: !13410, file: !13403, line: 104, type: !157)
!13419 = !DILocalVariable(name: "round_off", arg: 7, scope: !13410, file: !13403, line: 105, type: !157)
!13420 = !DILocalVariable(name: "mul_ratio", scope: !13410, file: !13403, line: 107, type: !157)
!13421 = !DILocalVariable(name: "div_ratio", scope: !13410, file: !13403, line: 109, type: !157)
!13422 = !DILocalVariable(name: "off", scope: !13410, file: !13403, line: 116, type: !1604)
!13423 = !DILocalVariable(name: "rdivisor", scope: !13424, file: !13403, line: 119, type: !121)
!13424 = distinct !DILexicalBlock(scope: !13425, file: !13403, line: 118, column: 18)
!13425 = distinct !DILexicalBlock(scope: !13410, file: !13403, line: 118, column: 6)
!13426 = !DILocation(line: 0, scope: !13410, inlinedAt: !13427)
!13427 = distinct !DILocation(line: 406, column: 9, scope: !13402)
!13428 = !DILocation(line: 145, column: 13, scope: !13429, inlinedAt: !13427)
!13429 = distinct !DILexicalBlock(scope: !13430, file: !13403, line: 144, column: 10)
!13430 = distinct !DILexicalBlock(scope: !13431, file: !13403, line: 142, column: 7)
!13431 = distinct !DILexicalBlock(scope: !13432, file: !13403, line: 141, column: 24)
!13432 = distinct !DILexicalBlock(scope: !13433, file: !13403, line: 141, column: 13)
!13433 = distinct !DILexicalBlock(scope: !13410, file: !13403, line: 134, column: 6)
!13434 = !DILocation(line: 406, column: 2, scope: !13402)
!13435 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2218, file: !2218, line: 817, type: !3493, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13436)
!13436 = !{!13437, !13438, !13439, !13440}
!13437 = !DILocalVariable(name: "entry", arg: 1, scope: !13435, file: !2218, line: 817, type: !3495)
!13438 = !DILocalVariable(name: "p1", arg: 2, scope: !13435, file: !2218, line: 818, type: !102)
!13439 = !DILocalVariable(name: "p2", arg: 3, scope: !13435, file: !2218, line: 818, type: !102)
!13440 = !DILocalVariable(name: "p3", arg: 4, scope: !13435, file: !2218, line: 818, type: !102)
!13441 = !DILocation(line: 0, scope: !13435)
!13442 = !DILocation(line: 822, column: 2, scope: !13435)
!13443 = !DILocation(line: 822, column: 17, scope: !13435)
!13444 = !DILocation(line: 822, column: 30, scope: !13435)
!13445 = !DILocation(line: 823, column: 2, scope: !13435)
!13446 = !DILocation(line: 845, column: 2, scope: !13435)
!13447 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2218, file: !2218, line: 888, type: !13448, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13450)
!13448 = !DISubroutineType(types: !13449)
!13449 = !{!103, !2222}
!13450 = !{!13451}
!13451 = !DILocalVariable(name: "thread", arg: 1, scope: !13447, file: !2218, line: 888, type: !2222)
!13452 = !DILocation(line: 0, scope: !13447)
!13453 = !DILocation(line: 893, column: 2, scope: !13447)
!13454 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2218, file: !2218, line: 897, type: !13455, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13457)
!13455 = !DISubroutineType(types: !13456)
!13456 = !{!103, !2222, !32}
!13457 = !{!13458, !13459}
!13458 = !DILocalVariable(name: "thread", arg: 1, scope: !13454, file: !2218, line: 897, type: !2222)
!13459 = !DILocalVariable(name: "options", arg: 2, scope: !13454, file: !2218, line: 897, type: !32)
!13460 = !DILocation(line: 0, scope: !13454)
!13461 = !DILocation(line: 902, column: 2, scope: !13454)
!13462 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2218, file: !2218, line: 1072, type: !13463, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13468)
!13463 = !DISubroutineType(types: !13464)
!13464 = !{!103, !2221, !13465}
!13465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13466, size: 32)
!13466 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !379, line: 234, baseType: !13467)
!13467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !379, line: 192, elements: !317)
!13468 = !{!13469, !13470}
!13469 = !DILocalVariable(name: "thread", arg: 1, scope: !13462, file: !2218, line: 1072, type: !2221)
!13470 = !DILocalVariable(name: "stats", arg: 2, scope: !13462, file: !2218, line: 1073, type: !13465)
!13471 = !DILocation(line: 0, scope: !13462)
!13472 = !DILocation(line: 1075, column: 14, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13462, file: !2218, line: 1075, column: 6)
!13474 = !DILocation(line: 1075, column: 23, scope: !13473)
!13475 = !DILocation(line: 1086, column: 1, scope: !13462)
!13476 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2218, file: !2218, line: 1088, type: !13477, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !13479)
!13477 = !DISubroutineType(types: !13478)
!13478 = !{!103, !13465}
!13479 = !{!13480}
!13480 = !DILocalVariable(name: "stats", arg: 1, scope: !13476, file: !2218, line: 1088, type: !13465)
!13481 = !DILocation(line: 0, scope: !13476)
!13482 = !DILocation(line: 1094, column: 12, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13476, file: !2218, line: 1094, column: 6)
!13484 = !DILocation(line: 1120, column: 1, scope: !13476)
!13485 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13486, file: !13486, line: 20, type: !3181, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3119, retainedNodes: !317)
!13486 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13487 = !DILocation(line: 30, column: 2, scope: !13485)
!13488 = !DILocation(line: 31, column: 1, scope: !13485)
!13489 = distinct !DISubprogram(name: "idle", scope: !13486, file: !13486, line: 33, type: !3498, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3119, retainedNodes: !13490)
!13490 = !{!13491, !13492, !13493}
!13491 = !DILocalVariable(name: "unused1", arg: 1, scope: !13489, file: !13486, line: 33, type: !102)
!13492 = !DILocalVariable(name: "unused2", arg: 2, scope: !13489, file: !13486, line: 33, type: !102)
!13493 = !DILocalVariable(name: "unused3", arg: 3, scope: !13489, file: !13486, line: 33, type: !102)
!13494 = !DILocation(line: 0, scope: !13489)
!13495 = !DILocation(line: 41, column: 2, scope: !13489)
!13496 = !DILocation(line: 55, column: 2, scope: !13497, inlinedAt: !13501)
!13497 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5738, file: !5738, line: 42, type: !5739, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3119, retainedNodes: !13498)
!13498 = !{!13499, !13500}
!13499 = !DILocalVariable(name: "key", scope: !13497, file: !5738, line: 44, type: !32)
!13500 = !DILocalVariable(name: "tmp", scope: !13497, file: !5738, line: 53, type: !32)
!13501 = distinct !DILocation(line: 62, column: 10, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13489, file: !13486, line: 41, column: 15)
!13503 = !{i64 2222331}
!13504 = !DILocation(line: 0, scope: !13497, inlinedAt: !13501)
!13505 = !DILocation(line: 86, column: 3, scope: !13502)
!13506 = distinct !{!13506, !13495, !13507}
!13507 = !DILocation(line: 105, column: 2, scope: !13489)
!13508 = distinct !DISubprogram(name: "k_cpu_idle", scope: !296, file: !296, line: 5627, type: !3181, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3119, retainedNodes: !317)
!13509 = !DILocation(line: 5629, column: 2, scope: !13508)
!13510 = !DILocation(line: 5630, column: 1, scope: !13508)
!13511 = !DISubprogram(name: "arch_cpu_idle", scope: !3496, file: !3496, line: 167, type: !3181, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!13512 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !3137, file: !3137, line: 30, type: !13513, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13515)
!13513 = !DISubroutineType(types: !13514)
!13514 = !{!102, !3146, !157}
!13515 = !{!13516, !13517, !13518, !13519}
!13516 = !DILocalVariable(name: "node", arg: 1, scope: !13512, file: !3137, line: 30, type: !3146)
!13517 = !DILocalVariable(name: "needs_free", arg: 2, scope: !13512, file: !3137, line: 30, type: !157)
!13518 = !DILocalVariable(name: "ret", scope: !13512, file: !3137, line: 32, type: !102)
!13519 = !DILocalVariable(name: "anode", scope: !13520, file: !3137, line: 40, type: !3135)
!13520 = distinct !DILexicalBlock(scope: !13521, file: !3137, line: 34, column: 68)
!13521 = distinct !DILexicalBlock(scope: !13512, file: !3137, line: 34, column: 6)
!13522 = !DILocation(line: 0, scope: !13512)
!13523 = !DILocation(line: 34, column: 12, scope: !13521)
!13524 = !DILocation(line: 34, column: 21, scope: !13521)
!13525 = !DILocation(line: 34, column: 25, scope: !13521)
!13526 = !DILocation(line: 34, column: 52, scope: !13521)
!13527 = !DILocation(line: 34, column: 6, scope: !13512)
!13528 = !DILocation(line: 0, scope: !13520)
!13529 = !DILocation(line: 43, column: 16, scope: !13520)
!13530 = !DILocation(line: 44, column: 7, scope: !13520)
!13531 = !DILocation(line: 42, column: 11, scope: !13520)
!13532 = !DILocation(line: 45, column: 4, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13534, file: !3137, line: 44, column: 19)
!13534 = distinct !DILexicalBlock(scope: !13520, file: !3137, line: 44, column: 7)
!13535 = !DILocation(line: 46, column: 3, scope: !13533)
!13536 = !DILocation(line: 52, column: 9, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13521, file: !3137, line: 47, column: 9)
!13538 = !DILocation(line: 0, scope: !13521)
!13539 = !DILocation(line: 55, column: 2, scope: !13512)
!13540 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !303, file: !303, line: 270, type: !13541, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13543)
!13541 = !DISubroutineType(types: !13542)
!13542 = !{!154, !3146}
!13543 = !{!13544}
!13544 = !DILocalVariable(name: "node", arg: 1, scope: !13540, file: !303, line: 270, type: !3146)
!13545 = !DILocation(line: 0, scope: !13540)
!13546 = !DILocation(line: 272, column: 15, scope: !13540)
!13547 = !DILocation(line: 272, column: 9, scope: !13540)
!13548 = !DILocation(line: 272, column: 2, scope: !13540)
!13549 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !3137, file: !3137, line: 58, type: !13550, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13569)
!13550 = !DISubroutineType(types: !13551)
!13551 = !{null, !13552}
!13552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13553, size: 32)
!13553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !13554)
!13554 = !{!13555, !13561, !13563}
!13555 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !13553, file: !296, line: 1710, baseType: !13556, size: 64)
!13556 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !13557)
!13557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !13558)
!13558 = !{!13559, !13560}
!13559 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13557, file: !303, line: 42, baseType: !3146, size: 32)
!13560 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13557, file: !303, line: 43, baseType: !3146, size: 32, offset: 32)
!13561 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13553, file: !296, line: 1711, baseType: !13562, offset: 64)
!13562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!13563 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13553, file: !296, line: 1712, baseType: !13564, size: 64, offset: 64)
!13564 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !13565)
!13565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !13566)
!13566 = !{!13567}
!13567 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13565, file: !320, line: 232, baseType: !13568, size: 64)
!13568 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !3149)
!13569 = !{!13570}
!13570 = !DILocalVariable(name: "queue", arg: 1, scope: !13549, file: !3137, line: 58, type: !13552)
!13571 = !DILocation(line: 0, scope: !13549)
!13572 = !DILocation(line: 60, column: 26, scope: !13549)
!13573 = !DILocation(line: 60, column: 2, scope: !13549)
!13574 = !DILocation(line: 62, column: 23, scope: !13549)
!13575 = !DILocation(line: 62, column: 2, scope: !13549)
!13576 = !DILocation(line: 70, column: 1, scope: !13549)
!13577 = distinct !DISubprogram(name: "sys_sflist_init", scope: !303, file: !303, line: 202, type: !13578, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13581)
!13578 = !DISubroutineType(types: !13579)
!13579 = !{null, !13580}
!13580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13556, size: 32)
!13581 = !{!13582}
!13582 = !DILocalVariable(name: "list", arg: 1, scope: !13577, file: !303, line: 202, type: !13580)
!13583 = !DILocation(line: 0, scope: !13577)
!13584 = !DILocation(line: 204, column: 8, scope: !13577)
!13585 = !DILocation(line: 204, column: 13, scope: !13577)
!13586 = !DILocation(line: 205, column: 8, scope: !13577)
!13587 = !DILocation(line: 205, column: 13, scope: !13577)
!13588 = !DILocation(line: 206, column: 1, scope: !13577)
!13589 = distinct !DISubprogram(name: "z_waitq_init", scope: !13168, file: !13168, line: 47, type: !13590, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13593)
!13590 = !DISubroutineType(types: !13591)
!13591 = !{null, !13592}
!13592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13564, size: 32)
!13593 = !{!13594}
!13594 = !DILocalVariable(name: "w", arg: 1, scope: !13589, file: !13168, line: 47, type: !13592)
!13595 = !DILocation(line: 0, scope: !13589)
!13596 = !DILocation(line: 49, column: 21, scope: !13589)
!13597 = !DILocation(line: 49, column: 2, scope: !13589)
!13598 = !DILocation(line: 50, column: 1, scope: !13589)
!13599 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !13600, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13603)
!13600 = !DISubroutineType(types: !13601)
!13601 = !{null, !13602}
!13602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13568, size: 32)
!13603 = !{!13604}
!13604 = !DILocalVariable(name: "list", arg: 1, scope: !13599, file: !325, line: 197, type: !13602)
!13605 = !DILocation(line: 0, scope: !13599)
!13606 = !DILocation(line: 199, column: 8, scope: !13599)
!13607 = !DILocation(line: 199, column: 13, scope: !13599)
!13608 = !DILocation(line: 200, column: 8, scope: !13599)
!13609 = !DILocation(line: 200, column: 13, scope: !13599)
!13610 = !DILocation(line: 201, column: 1, scope: !13599)
!13611 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !3137, file: !3137, line: 94, type: !13550, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13612)
!13612 = !{!13613, !13614, !13619}
!13613 = !DILocalVariable(name: "queue", arg: 1, scope: !13611, file: !3137, line: 94, type: !13552)
!13614 = !DILocalVariable(name: "key", scope: !13611, file: !3137, line: 98, type: !13615)
!13615 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !13616)
!13616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !13617)
!13617 = !{!13618}
!13618 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13616, file: !316, line: 33, baseType: !103, size: 32)
!13619 = !DILocalVariable(name: "first_pending_thread", scope: !13611, file: !3137, line: 99, type: !13620)
!13620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13621, size: 32)
!13621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !13622)
!13622 = !{!13623, !13661, !13673, !13674, !13675, !13676, !13682, !13694}
!13623 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13621, file: !379, line: 247, baseType: !13624, size: 384)
!13624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !13625)
!13625 = !{!13626, !13636, !13637, !13638, !13639, !13648, !13649, !13650}
!13626 = !DIDerivedType(tag: DW_TAG_member, scope: !13624, file: !379, line: 60, baseType: !13627, size: 64)
!13627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13624, file: !379, line: 60, size: 64, elements: !13628)
!13628 = !{!13629, !13630}
!13629 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13627, file: !379, line: 61, baseType: !3148, size: 64)
!13630 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13627, file: !379, line: 62, baseType: !13631, size: 64)
!13631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !13632)
!13632 = !{!13633}
!13633 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13631, file: !404, line: 50, baseType: !13634, size: 64)
!13634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13635, size: 64, elements: !363)
!13635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13631, size: 32)
!13636 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13624, file: !379, line: 68, baseType: !13592, size: 32, offset: 64)
!13637 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13624, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!13638 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13624, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!13639 = !DIDerivedType(tag: DW_TAG_member, scope: !13624, file: !379, line: 90, baseType: !13640, size: 16, offset: 112)
!13640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13624, file: !379, line: 90, size: 16, elements: !13641)
!13641 = !{!13642, !13647}
!13642 = !DIDerivedType(tag: DW_TAG_member, scope: !13640, file: !379, line: 91, baseType: !13643, size: 16)
!13643 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13640, file: !379, line: 91, size: 16, elements: !13644)
!13644 = !{!13645, !13646}
!13645 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13643, file: !379, line: 96, baseType: !425, size: 8)
!13646 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13643, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!13647 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13640, file: !379, line: 100, baseType: !429, size: 16)
!13648 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13624, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!13649 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13624, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!13650 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13624, file: !379, line: 131, baseType: !13651, size: 192, offset: 192)
!13651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !13652)
!13652 = !{!13653, !13654, !13660}
!13653 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13651, file: !320, line: 245, baseType: !3148, size: 64)
!13654 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13651, file: !320, line: 246, baseType: !13655, size: 32, offset: 64)
!13655 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !13656)
!13656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13657, size: 32)
!13657 = !DISubroutineType(types: !13658)
!13658 = !{null, !13659}
!13659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13651, size: 32)
!13660 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13651, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!13661 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13621, file: !379, line: 250, baseType: !13662, size: 288, offset: 384)
!13662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !13663)
!13663 = !{!13664, !13665, !13666, !13667, !13668, !13669, !13670, !13671, !13672}
!13664 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13662, file: !446, line: 26, baseType: !121, size: 32)
!13665 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13662, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!13666 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13662, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!13667 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13662, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!13668 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13662, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!13669 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13662, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!13670 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13662, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!13671 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13662, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!13672 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13662, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!13673 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13621, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!13674 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13621, file: !379, line: 256, baseType: !13564, size: 64, offset: 704)
!13675 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13621, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!13676 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13621, file: !379, line: 300, baseType: !13677, size: 96, offset: 800)
!13677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !13678)
!13678 = !{!13679, !13680, !13681}
!13679 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13677, file: !379, line: 153, baseType: !22, size: 32)
!13680 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13677, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!13681 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13677, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!13682 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13621, file: !379, line: 325, baseType: !13683, size: 32, offset: 896)
!13683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13684, size: 32)
!13684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !13685)
!13685 = !{!13686, !13692, !13693}
!13686 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13684, file: !296, line: 5074, baseType: !13687, size: 96)
!13687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !13688)
!13688 = !{!13689, !13690, !13691}
!13689 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13687, file: !472, line: 57, baseType: !475, size: 32)
!13690 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13687, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!13691 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13687, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!13692 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13684, file: !296, line: 5075, baseType: !13564, size: 64, offset: 96)
!13693 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13684, file: !296, line: 5076, baseType: !13562, offset: 160)
!13694 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13621, file: !379, line: 343, baseType: !13695, size: 64, offset: 928)
!13695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !13696)
!13696 = !{!13697, !13698}
!13697 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13695, file: !446, line: 63, baseType: !121, size: 32)
!13698 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13695, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!13699 = !DILocation(line: 0, scope: !13611)
!13700 = !DILocalVariable(name: "l", arg: 1, scope: !13701, file: !316, line: 136, type: !13704)
!13701 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !13702, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13705)
!13702 = !DISubroutineType(types: !13703)
!13703 = !{!13615, !13704}
!13704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13562, size: 32)
!13705 = !{!13700, !13706}
!13706 = !DILocalVariable(name: "k", scope: !13701, file: !316, line: 139, type: !13615)
!13707 = !DILocation(line: 0, scope: !13701, inlinedAt: !13708)
!13708 = distinct !DILocation(line: 98, column: 25, scope: !13611)
!13709 = !DILocation(line: 55, column: 2, scope: !13710, inlinedAt: !13714)
!13710 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5738, file: !5738, line: 42, type: !5739, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13711)
!13711 = !{!13712, !13713}
!13712 = !DILocalVariable(name: "key", scope: !13710, file: !5738, line: 44, type: !32)
!13713 = !DILocalVariable(name: "tmp", scope: !13710, file: !5738, line: 53, type: !32)
!13714 = distinct !DILocation(line: 145, column: 10, scope: !13701, inlinedAt: !13708)
!13715 = !{i64 2230072}
!13716 = !DILocation(line: 0, scope: !13710, inlinedAt: !13714)
!13717 = !DILocation(line: 101, column: 55, scope: !13611)
!13718 = !DILocation(line: 101, column: 25, scope: !13611)
!13719 = !DILocation(line: 103, column: 27, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13611, file: !3137, line: 103, column: 6)
!13721 = !DILocation(line: 103, column: 6, scope: !13611)
!13722 = !DILocation(line: 104, column: 3, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13720, file: !3137, line: 103, column: 36)
!13724 = !DILocation(line: 105, column: 2, scope: !13723)
!13725 = !DILocation(line: 98, column: 45, scope: !13611)
!13726 = !DILocation(line: 108, column: 2, scope: !13611)
!13727 = !DILocation(line: 109, column: 1, scope: !13611)
!13728 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !3137, file: !3137, line: 81, type: !13729, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13731)
!13729 = !DISubroutineType(types: !13730)
!13730 = !{null, !13620, !102}
!13731 = !{!13732, !13733}
!13732 = !DILocalVariable(name: "thread", arg: 1, scope: !13728, file: !3137, line: 81, type: !13620)
!13733 = !DILocalVariable(name: "data", arg: 2, scope: !13728, file: !3137, line: 81, type: !102)
!13734 = !DILocation(line: 0, scope: !13728)
!13735 = !DILocalVariable(name: "thread", arg: 1, scope: !13736, file: !13737, line: 134, type: !13620)
!13736 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13737, file: !13737, line: 134, type: !13738, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13740)
!13737 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13738 = !DISubroutineType(types: !13739)
!13739 = !{null, !13620, !32, !102}
!13740 = !{!13735, !13741, !13742}
!13741 = !DILocalVariable(name: "value", arg: 2, scope: !13736, file: !13737, line: 135, type: !32)
!13742 = !DILocalVariable(name: "data", arg: 3, scope: !13736, file: !13737, line: 136, type: !102)
!13743 = !DILocation(line: 0, scope: !13736, inlinedAt: !13744)
!13744 = distinct !DILocation(line: 83, column: 2, scope: !13728)
!13745 = !DILocalVariable(name: "thread", arg: 1, scope: !13746, file: !12864, line: 65, type: !13620)
!13746 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12864, file: !12864, line: 65, type: !13747, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13749)
!13747 = !DISubroutineType(types: !13748)
!13748 = !{null, !13620, !32}
!13749 = !{!13745, !13750}
!13750 = !DILocalVariable(name: "value", arg: 2, scope: !13746, file: !12864, line: 65, type: !32)
!13751 = !DILocation(line: 0, scope: !13746, inlinedAt: !13752)
!13752 = distinct !DILocation(line: 138, column: 2, scope: !13736, inlinedAt: !13744)
!13753 = !DILocation(line: 67, column: 15, scope: !13746, inlinedAt: !13752)
!13754 = !DILocation(line: 67, column: 33, scope: !13746, inlinedAt: !13752)
!13755 = !DILocation(line: 139, column: 15, scope: !13736, inlinedAt: !13744)
!13756 = !DILocation(line: 139, column: 25, scope: !13736, inlinedAt: !13744)
!13757 = !DILocation(line: 84, column: 2, scope: !13728)
!13758 = !DILocation(line: 85, column: 1, scope: !13728)
!13759 = distinct !DISubprogram(name: "k_queue_insert", scope: !3137, file: !3137, line: 175, type: !13760, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13762)
!13760 = !DISubroutineType(types: !13761)
!13761 = !{null, !13552, !102, !102}
!13762 = !{!13763, !13764, !13765}
!13763 = !DILocalVariable(name: "queue", arg: 1, scope: !13759, file: !3137, line: 175, type: !13552)
!13764 = !DILocalVariable(name: "prev", arg: 2, scope: !13759, file: !3137, line: 175, type: !102)
!13765 = !DILocalVariable(name: "data", arg: 3, scope: !13759, file: !3137, line: 175, type: !102)
!13766 = !DILocation(line: 0, scope: !13759)
!13767 = !DILocation(line: 179, column: 8, scope: !13759)
!13768 = !DILocation(line: 182, column: 1, scope: !13759)
!13769 = distinct !DISubprogram(name: "queue_insert", scope: !3137, file: !3137, line: 120, type: !13770, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13772)
!13770 = !DISubroutineType(types: !13771)
!13771 = !{!746, !13552, !102, !102, !157, !157}
!13772 = !{!13773, !13774, !13775, !13776, !13777, !13778, !13779, !13780}
!13773 = !DILocalVariable(name: "queue", arg: 1, scope: !13769, file: !3137, line: 120, type: !13552)
!13774 = !DILocalVariable(name: "prev", arg: 2, scope: !13769, file: !3137, line: 120, type: !102)
!13775 = !DILocalVariable(name: "data", arg: 3, scope: !13769, file: !3137, line: 120, type: !102)
!13776 = !DILocalVariable(name: "alloc", arg: 4, scope: !13769, file: !3137, line: 121, type: !157)
!13777 = !DILocalVariable(name: "is_append", arg: 5, scope: !13769, file: !3137, line: 121, type: !157)
!13778 = !DILocalVariable(name: "first_pending_thread", scope: !13769, file: !3137, line: 123, type: !13620)
!13779 = !DILocalVariable(name: "key", scope: !13769, file: !3137, line: 124, type: !13615)
!13780 = !DILocalVariable(name: "anode", scope: !13781, file: !3137, line: 146, type: !3135)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !3137, line: 145, column: 13)
!13782 = distinct !DILexicalBlock(scope: !13769, file: !3137, line: 145, column: 6)
!13783 = !DILocation(line: 0, scope: !13769)
!13784 = !DILocation(line: 124, column: 45, scope: !13769)
!13785 = !DILocation(line: 0, scope: !13701, inlinedAt: !13786)
!13786 = distinct !DILocation(line: 124, column: 25, scope: !13769)
!13787 = !DILocation(line: 55, column: 2, scope: !13710, inlinedAt: !13788)
!13788 = distinct !DILocation(line: 145, column: 10, scope: !13701, inlinedAt: !13786)
!13789 = !DILocation(line: 0, scope: !13710, inlinedAt: !13788)
!13790 = !DILocation(line: 128, column: 6, scope: !13769)
!13791 = !DILocation(line: 129, column: 39, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13793, file: !3137, line: 128, column: 17)
!13793 = distinct !DILexicalBlock(scope: !13769, file: !3137, line: 128, column: 6)
!13794 = !DILocation(line: 129, column: 10, scope: !13792)
!13795 = !DILocation(line: 130, column: 2, scope: !13792)
!13796 = !DILocation(line: 131, column: 55, scope: !13769)
!13797 = !DILocation(line: 131, column: 25, scope: !13769)
!13798 = !DILocation(line: 133, column: 27, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13769, file: !3137, line: 133, column: 6)
!13800 = !DILocation(line: 133, column: 6, scope: !13769)
!13801 = !DILocation(line: 136, column: 3, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13799, file: !3137, line: 133, column: 36)
!13803 = !DILocation(line: 137, column: 3, scope: !13802)
!13804 = !DILocation(line: 141, column: 3, scope: !13802)
!13805 = !DILocation(line: 145, column: 6, scope: !13769)
!13806 = !DILocation(line: 148, column: 11, scope: !13781)
!13807 = !DILocation(line: 0, scope: !13781)
!13808 = !DILocation(line: 149, column: 13, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13781, file: !3137, line: 149, column: 7)
!13810 = !DILocation(line: 149, column: 7, scope: !13781)
!13811 = !DILocalVariable(name: "key", arg: 2, scope: !13812, file: !316, line: 190, type: !13615)
!13812 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !13813, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13815)
!13813 = !DISubroutineType(types: !13814)
!13814 = !{null, !13704, !13615}
!13815 = !{!13816, !13811}
!13816 = !DILocalVariable(name: "l", arg: 1, scope: !13812, file: !316, line: 189, type: !13704)
!13817 = !DILocation(line: 0, scope: !13812, inlinedAt: !13818)
!13818 = distinct !DILocation(line: 150, column: 4, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13809, file: !3137, line: 149, column: 22)
!13820 = !DILocalVariable(name: "key", arg: 1, scope: !13821, file: !5738, line: 84, type: !32)
!13821 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5738, file: !5738, line: 84, type: !5749, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13822)
!13822 = !{!13820}
!13823 = !DILocation(line: 0, scope: !13821, inlinedAt: !13824)
!13824 = distinct !DILocation(line: 215, column: 2, scope: !13812, inlinedAt: !13818)
!13825 = !DILocation(line: 95, column: 2, scope: !13821, inlinedAt: !13824)
!13826 = !{i64 2230889}
!13827 = !DILocation(line: 157, column: 10, scope: !13781)
!13828 = !DILocation(line: 157, column: 15, scope: !13781)
!13829 = !DILocation(line: 158, column: 27, scope: !13781)
!13830 = !DILocation(line: 158, column: 3, scope: !13781)
!13831 = !DILocation(line: 161, column: 19, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13782, file: !3137, line: 160, column: 9)
!13833 = !DILocation(line: 161, column: 3, scope: !13832)
!13834 = !DILocation(line: 166, column: 42, scope: !13769)
!13835 = !DILocation(line: 166, column: 28, scope: !13769)
!13836 = !DILocation(line: 166, column: 36, scope: !13769)
!13837 = !DILocation(line: 166, column: 2, scope: !13769)
!13838 = !DILocation(line: 168, column: 2, scope: !13769)
!13839 = !DILocation(line: 172, column: 2, scope: !13769)
!13840 = !DILocation(line: 173, column: 1, scope: !13769)
!13841 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !303, file: !303, line: 255, type: !13842, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13844)
!13842 = !DISubroutineType(types: !13843)
!13843 = !{!3146, !13580}
!13844 = !{!13845}
!13845 = !DILocalVariable(name: "list", arg: 1, scope: !13841, file: !303, line: 255, type: !13580)
!13846 = !DILocation(line: 0, scope: !13841)
!13847 = !DILocation(line: 257, column: 15, scope: !13841)
!13848 = !DILocation(line: 257, column: 2, scope: !13841)
!13849 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13737, file: !13737, line: 102, type: !13850, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13851)
!13850 = !DISubroutineType(types: !3100)
!13851 = !{!13852}
!13852 = !DILocalVariable(name: "size", arg: 1, scope: !13849, file: !13737, line: 102, type: !204)
!13853 = !DILocation(line: 0, scope: !13849)
!13854 = !DILocation(line: 104, column: 9, scope: !13849)
!13855 = !DILocation(line: 104, column: 2, scope: !13849)
!13856 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !303, file: !303, line: 288, type: !13857, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13859)
!13857 = !DISubroutineType(types: !13858)
!13858 = !{null, !3146, !154}
!13859 = !{!13860, !13861}
!13860 = !DILocalVariable(name: "node", arg: 1, scope: !13856, file: !303, line: 288, type: !3146)
!13861 = !DILocalVariable(name: "flags", arg: 2, scope: !13856, file: !303, line: 288, type: !154)
!13862 = !DILocation(line: 0, scope: !13856)
!13863 = !DILocation(line: 291, column: 25, scope: !13856)
!13864 = !DILocation(line: 291, column: 8, scope: !13856)
!13865 = !DILocation(line: 291, column: 23, scope: !13856)
!13866 = !DILocation(line: 292, column: 1, scope: !13856)
!13867 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !303, file: !303, line: 420, type: !13868, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13870)
!13868 = !DISubroutineType(types: !13869)
!13869 = !{null, !13580, !3146, !3146}
!13870 = !{!13871, !13872, !13873}
!13871 = !DILocalVariable(name: "list", arg: 1, scope: !13867, file: !303, line: 420, type: !13580)
!13872 = !DILocalVariable(name: "prev", arg: 2, scope: !13867, file: !303, line: 420, type: !3146)
!13873 = !DILocalVariable(name: "node", arg: 3, scope: !13867, file: !303, line: 420, type: !3146)
!13874 = !DILocation(line: 0, scope: !13867)
!13875 = !DILocation(line: 420, column: 1, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13867, file: !303, line: 420, column: 1)
!13877 = !DILocation(line: 420, column: 1, scope: !13867)
!13878 = !DILocation(line: 420, column: 1, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13876, file: !303, line: 420, column: 1)
!13880 = !DILocation(line: 420, column: 1, scope: !13881)
!13881 = distinct !DILexicalBlock(scope: !13876, file: !303, line: 420, column: 1)
!13882 = !DILocation(line: 420, column: 1, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13881, file: !303, line: 420, column: 1)
!13884 = !DILocation(line: 420, column: 1, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13881, file: !303, line: 420, column: 1)
!13886 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !303, file: !303, line: 360, type: !13887, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13889)
!13887 = !DISubroutineType(types: !13888)
!13888 = !{null, !13580, !3146}
!13889 = !{!13890, !13891}
!13890 = !DILocalVariable(name: "list", arg: 1, scope: !13886, file: !303, line: 360, type: !13580)
!13891 = !DILocalVariable(name: "node", arg: 2, scope: !13886, file: !303, line: 360, type: !3146)
!13892 = !DILocation(line: 0, scope: !13886)
!13893 = !DILocation(line: 360, column: 1, scope: !13886)
!13894 = !DILocation(line: 360, column: 1, scope: !13895)
!13895 = distinct !DILexicalBlock(scope: !13886, file: !303, line: 360, column: 1)
!13896 = !DILocation(line: 360, column: 1, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13895, file: !303, line: 360, column: 1)
!13898 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !303, file: !303, line: 211, type: !13899, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13901)
!13899 = !DISubroutineType(types: !13900)
!13900 = !{!3146, !3146}
!13901 = !{!13902}
!13902 = !DILocalVariable(name: "node", arg: 1, scope: !13898, file: !303, line: 211, type: !3146)
!13903 = !DILocation(line: 0, scope: !13898)
!13904 = !DILocation(line: 213, column: 32, scope: !13898)
!13905 = !DILocation(line: 213, column: 47, scope: !13898)
!13906 = !DILocation(line: 213, column: 9, scope: !13898)
!13907 = !DILocation(line: 213, column: 2, scope: !13898)
!13908 = distinct !DISubprogram(name: "sys_sflist_append", scope: !303, file: !303, line: 373, type: !13887, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13909)
!13909 = !{!13910, !13911}
!13910 = !DILocalVariable(name: "list", arg: 1, scope: !13908, file: !303, line: 373, type: !13580)
!13911 = !DILocalVariable(name: "node", arg: 2, scope: !13908, file: !303, line: 373, type: !3146)
!13912 = !DILocation(line: 0, scope: !13908)
!13913 = !DILocation(line: 373, column: 1, scope: !13908)
!13914 = !DILocation(line: 373, column: 1, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13908, file: !303, line: 373, column: 1)
!13916 = !DILocation(line: 373, column: 1, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13915, file: !303, line: 373, column: 1)
!13918 = !DILocation(line: 373, column: 1, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13915, file: !303, line: 373, column: 1)
!13920 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !303, file: !303, line: 218, type: !13921, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13923)
!13921 = !DISubroutineType(types: !13922)
!13922 = !{null, !3146, !3146}
!13923 = !{!13924, !13925, !13926}
!13924 = !DILocalVariable(name: "parent", arg: 1, scope: !13920, file: !303, line: 218, type: !3146)
!13925 = !DILocalVariable(name: "child", arg: 2, scope: !13920, file: !303, line: 219, type: !3146)
!13926 = !DILocalVariable(name: "cur_flags", scope: !13920, file: !303, line: 221, type: !154)
!13927 = !DILocation(line: 0, scope: !13920)
!13928 = !DILocation(line: 221, column: 22, scope: !13920)
!13929 = !DILocation(line: 223, column: 27, scope: !13920)
!13930 = !DILocation(line: 223, column: 39, scope: !13920)
!13931 = !DILocation(line: 223, column: 37, scope: !13920)
!13932 = !DILocation(line: 223, column: 10, scope: !13920)
!13933 = !DILocation(line: 223, column: 25, scope: !13920)
!13934 = !DILocation(line: 224, column: 1, scope: !13920)
!13935 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !303, file: !303, line: 231, type: !13887, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13936)
!13936 = !{!13937, !13938}
!13937 = !DILocalVariable(name: "list", arg: 1, scope: !13935, file: !303, line: 231, type: !13580)
!13938 = !DILocalVariable(name: "node", arg: 2, scope: !13935, file: !303, line: 231, type: !3146)
!13939 = !DILocation(line: 0, scope: !13935)
!13940 = !DILocation(line: 233, column: 8, scope: !13935)
!13941 = !DILocation(line: 233, column: 13, scope: !13935)
!13942 = !DILocation(line: 234, column: 1, scope: !13935)
!13943 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !303, file: !303, line: 226, type: !13887, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13944)
!13944 = !{!13945, !13946}
!13945 = !DILocalVariable(name: "list", arg: 1, scope: !13943, file: !303, line: 226, type: !13580)
!13946 = !DILocalVariable(name: "node", arg: 2, scope: !13943, file: !303, line: 226, type: !3146)
!13947 = !DILocation(line: 0, scope: !13943)
!13948 = !DILocation(line: 228, column: 8, scope: !13943)
!13949 = !DILocation(line: 228, column: 13, scope: !13943)
!13950 = !DILocation(line: 229, column: 1, scope: !13943)
!13951 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !303, file: !303, line: 243, type: !13842, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13952)
!13952 = !{!13953}
!13953 = !DILocalVariable(name: "list", arg: 1, scope: !13951, file: !303, line: 243, type: !13580)
!13954 = !DILocation(line: 0, scope: !13951)
!13955 = !DILocation(line: 245, column: 15, scope: !13951)
!13956 = !DILocation(line: 245, column: 2, scope: !13951)
!13957 = distinct !DISubprogram(name: "k_queue_append", scope: !3137, file: !3137, line: 184, type: !13958, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13960)
!13958 = !DISubroutineType(types: !13959)
!13959 = !{null, !13552, !102}
!13960 = !{!13961, !13962}
!13961 = !DILocalVariable(name: "queue", arg: 1, scope: !13957, file: !3137, line: 184, type: !13552)
!13962 = !DILocalVariable(name: "data", arg: 2, scope: !13957, file: !3137, line: 184, type: !102)
!13963 = !DILocation(line: 0, scope: !13957)
!13964 = !DILocation(line: 188, column: 8, scope: !13957)
!13965 = !DILocation(line: 191, column: 1, scope: !13957)
!13966 = distinct !DISubprogram(name: "k_queue_prepend", scope: !3137, file: !3137, line: 193, type: !13958, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13967)
!13967 = !{!13968, !13969}
!13968 = !DILocalVariable(name: "queue", arg: 1, scope: !13966, file: !3137, line: 193, type: !13552)
!13969 = !DILocalVariable(name: "data", arg: 2, scope: !13966, file: !3137, line: 193, type: !102)
!13970 = !DILocation(line: 0, scope: !13966)
!13971 = !DILocation(line: 197, column: 8, scope: !13966)
!13972 = !DILocation(line: 200, column: 1, scope: !13966)
!13973 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !3137, file: !3137, line: 202, type: !13974, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13976)
!13974 = !DISubroutineType(types: !13975)
!13975 = !{!746, !13552, !102}
!13976 = !{!13977, !13978, !13979}
!13977 = !DILocalVariable(name: "queue", arg: 1, scope: !13973, file: !3137, line: 202, type: !13552)
!13978 = !DILocalVariable(name: "data", arg: 2, scope: !13973, file: !3137, line: 202, type: !102)
!13979 = !DILocalVariable(name: "ret", scope: !13973, file: !3137, line: 206, type: !746)
!13980 = !DILocation(line: 0, scope: !13973)
!13981 = !DILocation(line: 206, column: 16, scope: !13973)
!13982 = !DILocation(line: 210, column: 2, scope: !13973)
!13983 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !3137, file: !3137, line: 223, type: !13974, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13984)
!13984 = !{!13985, !13986, !13987}
!13985 = !DILocalVariable(name: "queue", arg: 1, scope: !13983, file: !3137, line: 223, type: !13552)
!13986 = !DILocalVariable(name: "data", arg: 2, scope: !13983, file: !3137, line: 223, type: !102)
!13987 = !DILocalVariable(name: "ret", scope: !13983, file: !3137, line: 227, type: !746)
!13988 = !DILocation(line: 0, scope: !13983)
!13989 = !DILocation(line: 227, column: 16, scope: !13983)
!13990 = !DILocation(line: 231, column: 2, scope: !13983)
!13991 = distinct !DISubprogram(name: "k_queue_append_list", scope: !3137, file: !3137, line: 244, type: !13992, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !13994)
!13992 = !DISubroutineType(types: !13993)
!13993 = !{!103, !13552, !102, !102}
!13994 = !{!13995, !13996, !13997, !13998, !13999}
!13995 = !DILocalVariable(name: "queue", arg: 1, scope: !13991, file: !3137, line: 244, type: !13552)
!13996 = !DILocalVariable(name: "head", arg: 2, scope: !13991, file: !3137, line: 244, type: !102)
!13997 = !DILocalVariable(name: "tail", arg: 3, scope: !13991, file: !3137, line: 244, type: !102)
!13998 = !DILocalVariable(name: "key", scope: !13991, file: !3137, line: 255, type: !13615)
!13999 = !DILocalVariable(name: "thread", scope: !13991, file: !3137, line: 256, type: !13620)
!14000 = !DILocation(line: 0, scope: !13991)
!14001 = !DILocation(line: 249, column: 2, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !13991, file: !3137, line: 249, column: 2)
!14003 = !DILocation(line: 255, column: 45, scope: !13991)
!14004 = !DILocation(line: 0, scope: !13701, inlinedAt: !14005)
!14005 = distinct !DILocation(line: 255, column: 25, scope: !13991)
!14006 = !DILocation(line: 55, column: 2, scope: !13710, inlinedAt: !14007)
!14007 = distinct !DILocation(line: 145, column: 10, scope: !13701, inlinedAt: !14005)
!14008 = !DILocation(line: 0, scope: !13710, inlinedAt: !14007)
!14009 = !DILocation(line: 259, column: 42, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !14011, file: !3137, line: 258, column: 20)
!14011 = distinct !DILexicalBlock(scope: !13991, file: !3137, line: 258, column: 6)
!14012 = !DILocation(line: 259, column: 12, scope: !14010)
!14013 = !DILocation(line: 262, column: 24, scope: !13991)
!14014 = !DILocation(line: 262, column: 2, scope: !13991)
!14015 = !DILocation(line: 263, column: 3, scope: !14016)
!14016 = distinct !DILexicalBlock(scope: !13991, file: !3137, line: 262, column: 45)
!14017 = !DILocation(line: 264, column: 11, scope: !14016)
!14018 = !DILocation(line: 264, column: 10, scope: !14016)
!14019 = !DILocation(line: 265, column: 12, scope: !14016)
!14020 = !DILocation(line: 262, column: 15, scope: !13991)
!14021 = distinct !{!14021, !14014, !14022}
!14022 = !DILocation(line: 266, column: 2, scope: !13991)
!14023 = !DILocation(line: 268, column: 6, scope: !13991)
!14024 = !DILocation(line: 269, column: 34, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !14026, file: !3137, line: 268, column: 20)
!14026 = distinct !DILexicalBlock(scope: !13991, file: !3137, line: 268, column: 6)
!14027 = !DILocation(line: 269, column: 3, scope: !14025)
!14028 = !DILocation(line: 270, column: 2, scope: !14025)
!14029 = !DILocation(line: 275, column: 2, scope: !13991)
!14030 = !DILocation(line: 277, column: 1, scope: !13991)
!14031 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !303, file: !303, line: 391, type: !14032, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14034)
!14032 = !DISubroutineType(types: !14033)
!14033 = !{null, !13580, !102, !102}
!14034 = !{!14035, !14036, !14037}
!14035 = !DILocalVariable(name: "list", arg: 1, scope: !14031, file: !303, line: 391, type: !13580)
!14036 = !DILocalVariable(name: "head", arg: 2, scope: !14031, file: !303, line: 391, type: !102)
!14037 = !DILocalVariable(name: "tail", arg: 3, scope: !14031, file: !303, line: 391, type: !102)
!14038 = !DILocation(line: 0, scope: !14031)
!14039 = !DILocation(line: 391, column: 1, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14031, file: !303, line: 391, column: 1)
!14041 = !DILocation(line: 391, column: 1, scope: !14042)
!14042 = distinct !DILexicalBlock(scope: !14043, file: !303, line: 391, column: 1)
!14043 = distinct !DILexicalBlock(scope: !14040, file: !303, line: 391, column: 1)
!14044 = !DILocation(line: 0, scope: !14042)
!14045 = !DILocation(line: 391, column: 1, scope: !14043)
!14046 = !DILocation(line: 391, column: 1, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14042, file: !303, line: 391, column: 1)
!14048 = !DILocation(line: 391, column: 1, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14042, file: !303, line: 391, column: 1)
!14050 = !DILocation(line: 391, column: 1, scope: !14031)
!14051 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !3137, file: !3137, line: 279, type: !14052, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14066)
!14052 = !DISubroutineType(types: !14053)
!14053 = !{!103, !13552, !14054}
!14054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14055, size: 32)
!14055 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1200, line: 40, baseType: !14056)
!14056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1200, line: 35, size: 64, elements: !14057)
!14057 = !{!14058, !14065}
!14058 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14056, file: !1200, line: 36, baseType: !14059, size: 32)
!14059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14060, size: 32)
!14060 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1200, line: 33, baseType: !14061)
!14061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1200, line: 29, size: 32, elements: !14062)
!14062 = !{!14063}
!14063 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14061, file: !1200, line: 30, baseType: !14064, size: 32)
!14064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14061, size: 32)
!14065 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14056, file: !1200, line: 37, baseType: !14059, size: 32, offset: 32)
!14066 = !{!14067, !14068, !14069}
!14067 = !DILocalVariable(name: "queue", arg: 1, scope: !14051, file: !3137, line: 279, type: !13552)
!14068 = !DILocalVariable(name: "list", arg: 2, scope: !14051, file: !3137, line: 279, type: !14054)
!14069 = !DILocalVariable(name: "ret", scope: !14051, file: !3137, line: 281, type: !103)
!14070 = !DILocation(line: 0, scope: !14051)
!14071 = !DILocation(line: 286, column: 2, scope: !14072)
!14072 = distinct !DILexicalBlock(scope: !14051, file: !3137, line: 286, column: 2)
!14073 = !DILocation(line: 286, column: 2, scope: !14051)
!14074 = !DILocation(line: 301, column: 41, scope: !14051)
!14075 = !DILocation(line: 301, column: 53, scope: !14051)
!14076 = !DILocation(line: 301, column: 8, scope: !14051)
!14077 = !DILocation(line: 302, column: 2, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14051, file: !3137, line: 302, column: 2)
!14079 = !DILocation(line: 302, column: 2, scope: !14051)
!14080 = !DILocation(line: 307, column: 2, scope: !14051)
!14081 = !DILocation(line: 311, column: 2, scope: !14051)
!14082 = !DILocation(line: 312, column: 1, scope: !14051)
!14083 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1200, file: !1200, line: 261, type: !14084, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14086)
!14084 = !DISubroutineType(types: !14085)
!14085 = !{!157, !14054}
!14086 = !{!14087}
!14087 = !DILocalVariable(name: "list", arg: 1, scope: !14083, file: !1200, line: 261, type: !14054)
!14088 = !DILocation(line: 0, scope: !14083)
!14089 = !DILocation(line: 261, column: 1, scope: !14083)
!14090 = distinct !DISubprogram(name: "sys_slist_init", scope: !1200, file: !1200, line: 196, type: !14091, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14093)
!14091 = !DISubroutineType(types: !14092)
!14092 = !{null, !14054}
!14093 = !{!14094}
!14094 = !DILocalVariable(name: "list", arg: 1, scope: !14090, file: !1200, line: 196, type: !14054)
!14095 = !DILocation(line: 0, scope: !14090)
!14096 = !DILocation(line: 198, column: 8, scope: !14090)
!14097 = !DILocation(line: 198, column: 13, scope: !14090)
!14098 = !DILocation(line: 199, column: 8, scope: !14090)
!14099 = !DILocation(line: 199, column: 13, scope: !14090)
!14100 = !DILocation(line: 200, column: 1, scope: !14090)
!14101 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1200, file: !1200, line: 231, type: !14102, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14104)
!14102 = !DISubroutineType(types: !14103)
!14103 = !{!14059, !14054}
!14104 = !{!14105}
!14105 = !DILocalVariable(name: "list", arg: 1, scope: !14101, file: !1200, line: 231, type: !14054)
!14106 = !DILocation(line: 0, scope: !14101)
!14107 = !DILocation(line: 233, column: 15, scope: !14101)
!14108 = !DILocation(line: 233, column: 2, scope: !14101)
!14109 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !3137, file: !3137, line: 314, type: !14110, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14116)
!14110 = !DISubroutineType(types: !14111)
!14111 = !{!102, !13552, !14112}
!14112 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !14113)
!14113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !14114)
!14114 = !{!14115}
!14115 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14113, file: !201, line: 66, baseType: !200, size: 64)
!14116 = !{!14117, !14118, !14119, !14120, !14121, !14124}
!14117 = !DILocalVariable(name: "queue", arg: 1, scope: !14109, file: !3137, line: 314, type: !13552)
!14118 = !DILocalVariable(name: "timeout", arg: 2, scope: !14109, file: !3137, line: 314, type: !14112)
!14119 = !DILocalVariable(name: "key", scope: !14109, file: !3137, line: 316, type: !13615)
!14120 = !DILocalVariable(name: "data", scope: !14109, file: !3137, line: 317, type: !102)
!14121 = !DILocalVariable(name: "node", scope: !14122, file: !3137, line: 322, type: !3146)
!14122 = distinct !DILexicalBlock(scope: !14123, file: !3137, line: 321, column: 52)
!14123 = distinct !DILexicalBlock(scope: !14109, file: !3137, line: 321, column: 6)
!14124 = !DILocalVariable(name: "ret", scope: !14109, file: !3137, line: 343, type: !103)
!14125 = !DILocation(line: 0, scope: !14109)
!14126 = !DILocation(line: 316, column: 45, scope: !14109)
!14127 = !DILocation(line: 0, scope: !13701, inlinedAt: !14128)
!14128 = distinct !DILocation(line: 316, column: 25, scope: !14109)
!14129 = !DILocation(line: 55, column: 2, scope: !13710, inlinedAt: !14130)
!14130 = distinct !DILocation(line: 145, column: 10, scope: !13701, inlinedAt: !14128)
!14131 = !DILocation(line: 0, scope: !13710, inlinedAt: !14130)
!14132 = !DILocation(line: 321, column: 6, scope: !14123)
!14133 = !DILocation(line: 321, column: 6, scope: !14109)
!14134 = !{!"branch_weights", i32 1, i32 2000}
!14135 = !DILocation(line: 324, column: 10, scope: !14122)
!14136 = !DILocation(line: 0, scope: !14122)
!14137 = !DILocation(line: 325, column: 10, scope: !14122)
!14138 = !DILocation(line: 0, scope: !13812, inlinedAt: !14139)
!14139 = distinct !DILocation(line: 326, column: 3, scope: !14122)
!14140 = !DILocation(line: 0, scope: !13821, inlinedAt: !14141)
!14141 = distinct !DILocation(line: 215, column: 2, scope: !13812, inlinedAt: !14139)
!14142 = !DILocation(line: 95, column: 2, scope: !13821, inlinedAt: !14141)
!14143 = !DILocation(line: 335, column: 6, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14109, file: !3137, line: 335, column: 6)
!14145 = !DILocation(line: 335, column: 6, scope: !14109)
!14146 = !DILocation(line: 0, scope: !13812, inlinedAt: !14147)
!14147 = distinct !DILocation(line: 336, column: 3, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14144, file: !3137, line: 335, column: 40)
!14149 = !DILocation(line: 0, scope: !13821, inlinedAt: !14150)
!14150 = distinct !DILocation(line: 215, column: 2, scope: !13812, inlinedAt: !14147)
!14151 = !DILocation(line: 95, column: 2, scope: !13821, inlinedAt: !14150)
!14152 = !DILocation(line: 340, column: 3, scope: !14148)
!14153 = !DILocation(line: 343, column: 51, scope: !14109)
!14154 = !DILocation(line: 343, column: 12, scope: !14109)
!14155 = !DILocation(line: 348, column: 14, scope: !14109)
!14156 = !DILocation(line: 348, column: 9, scope: !14109)
!14157 = !DILocation(line: 348, column: 29, scope: !14109)
!14158 = !DILocation(line: 348, column: 44, scope: !14109)
!14159 = !DILocation(line: 349, column: 1, scope: !14109)
!14160 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !303, file: !303, line: 323, type: !14161, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14163)
!14161 = !DISubroutineType(types: !14162)
!14162 = !{!157, !13580}
!14163 = !{!14164}
!14164 = !DILocalVariable(name: "list", arg: 1, scope: !14160, file: !303, line: 323, type: !13580)
!14165 = !DILocation(line: 0, scope: !14160)
!14166 = !DILocation(line: 323, column: 1, scope: !14160)
!14167 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !303, file: !303, line: 434, type: !13842, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14168)
!14168 = !{!14169, !14170}
!14169 = !DILocalVariable(name: "list", arg: 1, scope: !14167, file: !303, line: 434, type: !13580)
!14170 = !DILocalVariable(name: "node", scope: !14167, file: !303, line: 434, type: !3146)
!14171 = !DILocation(line: 0, scope: !14167)
!14172 = !DILocation(line: 434, column: 1, scope: !14167)
!14173 = !DILocation(line: 434, column: 1, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14167, file: !303, line: 434, column: 1)
!14175 = !DILocation(line: 434, column: 1, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14174, file: !303, line: 434, column: 1)
!14177 = distinct !DISubprogram(name: "k_queue_remove", scope: !3137, file: !3137, line: 351, type: !14178, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14180)
!14178 = !DISubroutineType(types: !14179)
!14179 = !{!157, !13552, !102}
!14180 = !{!14181, !14182, !14183}
!14181 = !DILocalVariable(name: "queue", arg: 1, scope: !14177, file: !3137, line: 351, type: !13552)
!14182 = !DILocalVariable(name: "data", arg: 2, scope: !14177, file: !3137, line: 351, type: !102)
!14183 = !DILocalVariable(name: "ret", scope: !14177, file: !3137, line: 355, type: !157)
!14184 = !DILocation(line: 0, scope: !14177)
!14185 = !DILocation(line: 355, column: 48, scope: !14177)
!14186 = !DILocation(line: 355, column: 56, scope: !14177)
!14187 = !DILocation(line: 355, column: 13, scope: !14177)
!14188 = !DILocation(line: 359, column: 2, scope: !14177)
!14189 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !303, file: !303, line: 478, type: !14190, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14192)
!14190 = !DISubroutineType(types: !14191)
!14191 = !{!157, !13580, !3146}
!14192 = !{!14193, !14194, !14195, !14196}
!14193 = !DILocalVariable(name: "list", arg: 1, scope: !14189, file: !303, line: 478, type: !13580)
!14194 = !DILocalVariable(name: "node", arg: 2, scope: !14189, file: !303, line: 478, type: !3146)
!14195 = !DILocalVariable(name: "prev", scope: !14189, file: !303, line: 478, type: !3146)
!14196 = !DILocalVariable(name: "test", scope: !14189, file: !303, line: 478, type: !3146)
!14197 = !DILocation(line: 0, scope: !14189)
!14198 = !DILocation(line: 478, column: 1, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14189, file: !303, line: 478, column: 1)
!14200 = !DILocation(line: 478, column: 1, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14199, file: !303, line: 478, column: 1)
!14202 = !DILocation(line: 478, column: 1, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14204, file: !303, line: 478, column: 1)
!14204 = distinct !DILexicalBlock(scope: !14201, file: !303, line: 478, column: 1)
!14205 = !DILocation(line: 478, column: 1, scope: !14204)
!14206 = distinct !{!14206, !14198, !14198}
!14207 = !DILocation(line: 478, column: 1, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14203, file: !303, line: 478, column: 1)
!14209 = !DILocation(line: 478, column: 1, scope: !14189)
!14210 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !303, file: !303, line: 463, type: !13868, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14211)
!14211 = !{!14212, !14213, !14214}
!14212 = !DILocalVariable(name: "list", arg: 1, scope: !14210, file: !303, line: 463, type: !13580)
!14213 = !DILocalVariable(name: "prev_node", arg: 2, scope: !14210, file: !303, line: 463, type: !3146)
!14214 = !DILocalVariable(name: "node", arg: 3, scope: !14210, file: !303, line: 463, type: !3146)
!14215 = !DILocation(line: 0, scope: !14210)
!14216 = !DILocation(line: 463, column: 1, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14210, file: !303, line: 463, column: 1)
!14218 = !DILocation(line: 0, scope: !14217)
!14219 = !DILocation(line: 463, column: 1, scope: !14210)
!14220 = !DILocation(line: 463, column: 1, scope: !14221)
!14221 = distinct !DILexicalBlock(scope: !14217, file: !303, line: 463, column: 1)
!14222 = !DILocation(line: 463, column: 1, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14221, file: !303, line: 463, column: 1)
!14224 = !DILocation(line: 463, column: 1, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14223, file: !303, line: 463, column: 1)
!14226 = !DILocation(line: 463, column: 1, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14217, file: !303, line: 463, column: 1)
!14228 = !DILocation(line: 463, column: 1, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14227, file: !303, line: 463, column: 1)
!14230 = !DILocation(line: 463, column: 1, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14229, file: !303, line: 463, column: 1)
!14232 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !303, file: !303, line: 347, type: !13899, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14233)
!14233 = !{!14234}
!14234 = !DILocalVariable(name: "node", arg: 1, scope: !14232, file: !303, line: 347, type: !3146)
!14235 = !DILocation(line: 0, scope: !14232)
!14236 = !DILocation(line: 347, column: 1, scope: !14232)
!14237 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !303, file: !303, line: 336, type: !13899, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14238)
!14238 = !{!14239}
!14239 = !DILocalVariable(name: "node", arg: 1, scope: !14237, file: !303, line: 336, type: !3146)
!14240 = !DILocation(line: 0, scope: !14237)
!14241 = !DILocation(line: 336, column: 1, scope: !14237)
!14242 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !3137, file: !3137, line: 362, type: !14178, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14243)
!14243 = !{!14244, !14245, !14246}
!14244 = !DILocalVariable(name: "queue", arg: 1, scope: !14242, file: !3137, line: 362, type: !13552)
!14245 = !DILocalVariable(name: "data", arg: 2, scope: !14242, file: !3137, line: 362, type: !102)
!14246 = !DILocalVariable(name: "test", scope: !14242, file: !3137, line: 366, type: !3146)
!14247 = !DILocation(line: 0, scope: !14242)
!14248 = !DILocation(line: 368, column: 2, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14242, file: !3137, line: 368, column: 2)
!14250 = !DILocation(line: 368, column: 2, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14249, file: !3137, line: 368, column: 2)
!14252 = !DILocation(line: 369, column: 12, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14254, file: !3137, line: 369, column: 7)
!14254 = distinct !DILexicalBlock(scope: !14251, file: !3137, line: 368, column: 49)
!14255 = !DILocation(line: 369, column: 7, scope: !14254)
!14256 = distinct !{!14256, !14248, !14257}
!14257 = !DILocation(line: 374, column: 2, scope: !14249)
!14258 = !DILocation(line: 376, column: 2, scope: !14242)
!14259 = !DILocation(line: 380, column: 2, scope: !14242)
!14260 = !DILocation(line: 381, column: 1, scope: !14242)
!14261 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !3137, file: !3137, line: 383, type: !14262, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14264)
!14262 = !DISubroutineType(types: !14263)
!14263 = !{!102, !13552}
!14264 = !{!14265, !14266}
!14265 = !DILocalVariable(name: "queue", arg: 1, scope: !14261, file: !3137, line: 383, type: !13552)
!14266 = !DILocalVariable(name: "ret", scope: !14261, file: !3137, line: 385, type: !102)
!14267 = !DILocation(line: 0, scope: !14261)
!14268 = !DILocation(line: 385, column: 61, scope: !14261)
!14269 = !DILocation(line: 385, column: 32, scope: !14261)
!14270 = !DILocation(line: 385, column: 14, scope: !14261)
!14271 = !DILocation(line: 389, column: 2, scope: !14261)
!14272 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !3137, file: !3137, line: 392, type: !14262, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !14273)
!14273 = !{!14274, !14275}
!14274 = !DILocalVariable(name: "queue", arg: 1, scope: !14272, file: !3137, line: 392, type: !13552)
!14275 = !DILocalVariable(name: "ret", scope: !14272, file: !3137, line: 394, type: !102)
!14276 = !DILocation(line: 0, scope: !14272)
!14277 = !DILocation(line: 394, column: 61, scope: !14272)
!14278 = !DILocation(line: 394, column: 32, scope: !14272)
!14279 = !DILocation(line: 394, column: 14, scope: !14272)
!14280 = !DILocation(line: 398, column: 2, scope: !14272)
!14281 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2450, file: !2450, line: 93, type: !14282, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14284)
!14282 = !DISubroutineType(types: !14283)
!14283 = !{!746, !2345, !2345}
!14284 = !{!14285, !14286, !14287, !14288}
!14285 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14281, file: !2450, line: 93, type: !2345)
!14286 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14281, file: !2450, line: 94, type: !2345)
!14287 = !DILocalVariable(name: "b1", scope: !14281, file: !2450, line: 97, type: !746)
!14288 = !DILocalVariable(name: "b2", scope: !14281, file: !2450, line: 98, type: !746)
!14289 = !DILocation(line: 0, scope: !14281)
!14290 = !DILocation(line: 97, column: 30, scope: !14281)
!14291 = !DILocation(line: 98, column: 30, scope: !14281)
!14292 = !DILocation(line: 100, column: 9, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14281, file: !2450, line: 100, column: 6)
!14294 = !DILocation(line: 100, column: 6, scope: !14281)
!14295 = !DILocation(line: 125, column: 1, scope: !14281)
!14296 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2450, file: !2450, line: 428, type: !14297, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14299)
!14297 = !DISubroutineType(types: !14298)
!14298 = !{null, !2345}
!14299 = !{!14300}
!14300 = !DILocalVariable(name: "curr", arg: 1, scope: !14296, file: !2450, line: 428, type: !2345)
!14301 = !DILocation(line: 0, scope: !14296)
!14302 = !DILocation(line: 434, column: 6, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14296, file: !2450, line: 434, column: 6)
!14304 = !DILocation(line: 434, column: 23, scope: !14303)
!14305 = !DILocation(line: 434, column: 6, scope: !14296)
!14306 = !DILocation(line: 435, column: 50, scope: !14307)
!14307 = distinct !DILexicalBlock(scope: !14303, file: !2450, line: 434, column: 29)
!14308 = !DILocation(line: 435, column: 48, scope: !14307)
!14309 = !DILocation(line: 435, column: 29, scope: !14307)
!14310 = !DILocation(line: 436, column: 24, scope: !14307)
!14311 = !DILocation(line: 436, column: 3, scope: !14307)
!14312 = !DILocation(line: 437, column: 2, scope: !14307)
!14313 = !DILocation(line: 438, column: 1, scope: !14296)
!14314 = distinct !DISubprogram(name: "slice_time", scope: !2450, file: !2450, line: 407, type: !14315, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14317)
!14315 = !DISubroutineType(types: !14316)
!14316 = !{!103, !2345}
!14317 = !{!14318, !14319}
!14318 = !DILocalVariable(name: "curr", arg: 1, scope: !14314, file: !2450, line: 407, type: !2345)
!14319 = !DILocalVariable(name: "ret", scope: !14314, file: !2450, line: 409, type: !103)
!14320 = !DILocation(line: 0, scope: !14314)
!14321 = !DILocation(line: 409, column: 12, scope: !14314)
!14322 = !DILocation(line: 416, column: 2, scope: !14314)
!14323 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2450, file: !2450, line: 440, type: !14324, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14326)
!14324 = !DISubroutineType(types: !14325)
!14325 = !{null, !746, !103}
!14326 = !{!14327, !14328, !14329, !14335}
!14327 = !DILocalVariable(name: "slice", arg: 1, scope: !14323, file: !2450, line: 440, type: !746)
!14328 = !DILocalVariable(name: "prio", arg: 2, scope: !14323, file: !2450, line: 440, type: !103)
!14329 = !DILocalVariable(name: "__i", scope: !14330, file: !2450, line: 442, type: !14331)
!14330 = distinct !DILexicalBlock(scope: !14323, file: !2450, line: 442, column: 2)
!14331 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !14332)
!14332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !14333)
!14333 = !{!14334}
!14334 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14332, file: !316, line: 33, baseType: !103, size: 32)
!14335 = !DILocalVariable(name: "__key", scope: !14330, file: !2450, line: 442, type: !14331)
!14336 = !DILocation(line: 0, scope: !14323)
!14337 = !DILocation(line: 0, scope: !14330)
!14338 = !DILocalVariable(name: "l", arg: 1, scope: !14339, file: !316, line: 136, type: !14342)
!14339 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !14340, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14343)
!14340 = !DISubroutineType(types: !14341)
!14341 = !{!14331, !14342}
!14342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 32)
!14343 = !{!14338, !14344}
!14344 = !DILocalVariable(name: "k", scope: !14339, file: !316, line: 139, type: !14331)
!14345 = !DILocation(line: 0, scope: !14339, inlinedAt: !14346)
!14346 = distinct !DILocation(line: 442, column: 2, scope: !14330)
!14347 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !14352)
!14348 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5738, file: !5738, line: 42, type: !5739, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14349)
!14349 = !{!14350, !14351}
!14350 = !DILocalVariable(name: "key", scope: !14348, file: !5738, line: 44, type: !32)
!14351 = !DILocalVariable(name: "tmp", scope: !14348, file: !5738, line: 53, type: !32)
!14352 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !14346)
!14353 = !{i64 2266302}
!14354 = !DILocation(line: 0, scope: !14348, inlinedAt: !14352)
!14355 = !DILocation(line: 443, column: 29, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14357, file: !2450, line: 442, column: 26)
!14357 = distinct !DILexicalBlock(scope: !14330, file: !2450, line: 442, column: 2)
!14358 = !DILocation(line: 444, column: 17, scope: !14356)
!14359 = !DILocation(line: 445, column: 51, scope: !14360)
!14360 = distinct !DILexicalBlock(scope: !14356, file: !2450, line: 445, column: 7)
!14361 = !DILocation(line: 445, column: 7, scope: !14356)
!14362 = !DILocation(line: 0, scope: !14356)
!14363 = !DILocation(line: 451, column: 18, scope: !14356)
!14364 = !DILocation(line: 452, column: 3, scope: !14356)
!14365 = !DILocalVariable(name: "key", arg: 2, scope: !14366, file: !316, line: 190, type: !14331)
!14366 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !14367, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14369)
!14367 = !DISubroutineType(types: !14368)
!14368 = !{null, !14342, !14331}
!14369 = !{!14370, !14365}
!14370 = !DILocalVariable(name: "l", arg: 1, scope: !14366, file: !316, line: 189, type: !14342)
!14371 = !DILocation(line: 0, scope: !14366, inlinedAt: !14372)
!14372 = distinct !DILocation(line: 442, column: 2, scope: !14357)
!14373 = !DILocalVariable(name: "key", arg: 1, scope: !14374, file: !5738, line: 84, type: !32)
!14374 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5738, file: !5738, line: 84, type: !5749, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14375)
!14375 = !{!14373}
!14376 = !DILocation(line: 0, scope: !14374, inlinedAt: !14377)
!14377 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !14372)
!14378 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !14377)
!14379 = !{i64 2267119}
!14380 = !DILocation(line: 454, column: 1, scope: !14323)
!14381 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13403, file: !13403, line: 389, type: !6960, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14382)
!14382 = !{!14383}
!14383 = !DILocalVariable(name: "t", arg: 1, scope: !14381, file: !13403, line: 389, type: !121)
!14384 = !DILocation(line: 0, scope: !14381)
!14385 = !DILocalVariable(name: "t", arg: 1, scope: !14386, file: !13403, line: 102, type: !1604)
!14386 = distinct !DISubprogram(name: "z_tmcvt", scope: !13403, file: !13403, line: 102, type: !13411, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14387)
!14387 = !{!14385, !14388, !14389, !14390, !14391, !14392, !14393, !14394, !14395, !14396, !14397}
!14388 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14386, file: !13403, line: 102, type: !121)
!14389 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14386, file: !13403, line: 103, type: !121)
!14390 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14386, file: !13403, line: 103, type: !157)
!14391 = !DILocalVariable(name: "result32", arg: 5, scope: !14386, file: !13403, line: 104, type: !157)
!14392 = !DILocalVariable(name: "round_up", arg: 6, scope: !14386, file: !13403, line: 104, type: !157)
!14393 = !DILocalVariable(name: "round_off", arg: 7, scope: !14386, file: !13403, line: 105, type: !157)
!14394 = !DILocalVariable(name: "mul_ratio", scope: !14386, file: !13403, line: 107, type: !157)
!14395 = !DILocalVariable(name: "div_ratio", scope: !14386, file: !13403, line: 109, type: !157)
!14396 = !DILocalVariable(name: "off", scope: !14386, file: !13403, line: 116, type: !1604)
!14397 = !DILocalVariable(name: "rdivisor", scope: !14398, file: !13403, line: 119, type: !121)
!14398 = distinct !DILexicalBlock(scope: !14399, file: !13403, line: 118, column: 18)
!14399 = distinct !DILexicalBlock(scope: !14386, file: !13403, line: 118, column: 6)
!14400 = !DILocation(line: 0, scope: !14386, inlinedAt: !14401)
!14401 = distinct !DILocation(line: 392, column: 9, scope: !14381)
!14402 = !DILocation(line: 143, column: 25, scope: !14403, inlinedAt: !14401)
!14403 = distinct !DILexicalBlock(scope: !14404, file: !13403, line: 142, column: 17)
!14404 = distinct !DILexicalBlock(scope: !14405, file: !13403, line: 142, column: 7)
!14405 = distinct !DILexicalBlock(scope: !14406, file: !13403, line: 141, column: 24)
!14406 = distinct !DILexicalBlock(scope: !14407, file: !13403, line: 141, column: 13)
!14407 = distinct !DILexicalBlock(scope: !14386, file: !13403, line: 134, column: 6)
!14408 = !DILocation(line: 392, column: 2, scope: !14381)
!14409 = distinct !DISubprogram(name: "z_time_slice", scope: !2450, file: !2450, line: 502, type: !7597, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14410)
!14410 = !{!14411, !14412}
!14411 = !DILocalVariable(name: "ticks", arg: 1, scope: !14409, file: !2450, line: 502, type: !103)
!14412 = !DILocalVariable(name: "key", scope: !14409, file: !2450, line: 511, type: !14331)
!14413 = !DILocation(line: 0, scope: !14409)
!14414 = !DILocation(line: 0, scope: !14339, inlinedAt: !14415)
!14415 = distinct !DILocation(line: 511, column: 25, scope: !14409)
!14416 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !14417)
!14417 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !14415)
!14418 = !DILocation(line: 0, scope: !14348, inlinedAt: !14417)
!14419 = !DILocation(line: 514, column: 6, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14409, file: !2450, line: 514, column: 6)
!14421 = !DILocation(line: 514, column: 25, scope: !14420)
!14422 = !DILocation(line: 514, column: 22, scope: !14420)
!14423 = !DILocation(line: 514, column: 6, scope: !14409)
!14424 = !DILocation(line: 515, column: 3, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14420, file: !2450, line: 514, column: 35)
!14426 = !DILocation(line: 0, scope: !14366, inlinedAt: !14427)
!14427 = distinct !DILocation(line: 516, column: 3, scope: !14425)
!14428 = !DILocation(line: 0, scope: !14374, inlinedAt: !14429)
!14429 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !14427)
!14430 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !14429)
!14431 = !DILocation(line: 517, column: 3, scope: !14425)
!14432 = !DILocation(line: 519, column: 18, scope: !14409)
!14433 = !DILocation(line: 522, column: 6, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14409, file: !2450, line: 522, column: 6)
!14435 = !DILocation(line: 522, column: 27, scope: !14434)
!14436 = !DILocation(line: 522, column: 30, scope: !14434)
!14437 = !DILocation(line: 522, column: 6, scope: !14409)
!14438 = !DILocation(line: 523, column: 30, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14440, file: !2450, line: 523, column: 7)
!14440 = distinct !DILexicalBlock(scope: !14434, file: !2450, line: 522, column: 51)
!14441 = !DILocation(line: 523, column: 13, scope: !14439)
!14442 = !DILocation(line: 523, column: 7, scope: !14440)
!14443 = !DILocation(line: 530, column: 10, scope: !14444)
!14444 = distinct !DILexicalBlock(scope: !14439, file: !2450, line: 523, column: 43)
!14445 = !DILocation(line: 531, column: 3, scope: !14444)
!14446 = !DILocation(line: 532, column: 30, scope: !14447)
!14447 = distinct !DILexicalBlock(scope: !14439, file: !2450, line: 531, column: 10)
!14448 = !DILocation(line: 535, column: 29, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14434, file: !2450, line: 534, column: 9)
!14450 = !DILocation(line: 0, scope: !14366, inlinedAt: !14451)
!14451 = distinct !DILocation(line: 537, column: 2, scope: !14409)
!14452 = !DILocation(line: 0, scope: !14374, inlinedAt: !14453)
!14453 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !14451)
!14454 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !14453)
!14455 = !DILocation(line: 538, column: 1, scope: !14409)
!14456 = distinct !DISubprogram(name: "sliceable", scope: !2450, file: !2450, line: 468, type: !14457, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14459)
!14457 = !DISubroutineType(types: !14458)
!14458 = !{!157, !2345}
!14459 = !{!14460, !14461}
!14460 = !DILocalVariable(name: "thread", arg: 1, scope: !14456, file: !2450, line: 468, type: !2345)
!14461 = !DILocalVariable(name: "ret", scope: !14456, file: !2450, line: 470, type: !157)
!14462 = !DILocation(line: 0, scope: !14456)
!14463 = !DILocation(line: 470, column: 13, scope: !14456)
!14464 = !DILocation(line: 471, column: 3, scope: !14456)
!14465 = !DILocation(line: 471, column: 7, scope: !14456)
!14466 = !DILocation(line: 472, column: 3, scope: !14456)
!14467 = !DILocation(line: 472, column: 37, scope: !14456)
!14468 = !DILocation(line: 472, column: 24, scope: !14456)
!14469 = !DILocation(line: 472, column: 43, scope: !14456)
!14470 = !DILocation(line: 472, column: 7, scope: !14456)
!14471 = !DILocation(line: 473, column: 3, scope: !14456)
!14472 = !DILocation(line: 473, column: 7, scope: !14456)
!14473 = !DILocation(line: 473, column: 6, scope: !14456)
!14474 = !DILocation(line: 479, column: 2, scope: !14456)
!14475 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2450, file: !2450, line: 482, type: !14476, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14478)
!14476 = !DISubroutineType(types: !14477)
!14477 = !{!14331, !14331}
!14478 = !{!14479, !14480}
!14479 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14475, file: !2450, line: 482, type: !14331)
!14480 = !DILocalVariable(name: "curr", scope: !14475, file: !2450, line: 484, type: !2345)
!14481 = !DILocation(line: 0, scope: !14475)
!14482 = !DILocation(line: 484, column: 26, scope: !14475)
!14483 = !DILocation(line: 493, column: 7, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14475, file: !2450, line: 493, column: 6)
!14485 = !DILocation(line: 493, column: 6, scope: !14475)
!14486 = !DILocation(line: 494, column: 3, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14484, file: !2450, line: 493, column: 49)
!14488 = !DILocation(line: 495, column: 2, scope: !14487)
!14489 = !DILocation(line: 496, column: 2, scope: !14475)
!14490 = !DILocation(line: 499, column: 1, scope: !14475)
!14491 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12844, file: !12844, line: 106, type: !14457, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14492)
!14492 = !{!14493, !14494}
!14493 = !DILocalVariable(name: "thread", arg: 1, scope: !14491, file: !12844, line: 106, type: !2345)
!14494 = !DILocalVariable(name: "state", scope: !14491, file: !12844, line: 108, type: !154)
!14495 = !DILocation(line: 0, scope: !14491)
!14496 = !DILocation(line: 108, column: 31, scope: !14491)
!14497 = !DILocation(line: 110, column: 16, scope: !14491)
!14498 = !DILocation(line: 111, column: 41, scope: !14491)
!14499 = !DILocation(line: 110, column: 2, scope: !14491)
!14500 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2450, file: !2450, line: 393, type: !14297, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14501)
!14501 = !{!14502}
!14502 = !DILocalVariable(name: "thread", arg: 1, scope: !14500, file: !2450, line: 393, type: !2345)
!14503 = !DILocation(line: 0, scope: !14500)
!14504 = !DILocation(line: 395, column: 6, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14500, file: !2450, line: 395, column: 6)
!14506 = !DILocation(line: 395, column: 6, scope: !14500)
!14507 = !DILocalVariable(name: "thread", arg: 1, scope: !14508, file: !2450, line: 264, type: !2345)
!14508 = distinct !DISubprogram(name: "dequeue_thread", scope: !2450, file: !2450, line: 264, type: !14297, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14509)
!14509 = !{!14507}
!14510 = !DILocation(line: 0, scope: !14508, inlinedAt: !14511)
!14511 = distinct !DILocation(line: 396, column: 3, scope: !14512)
!14512 = distinct !DILexicalBlock(scope: !14505, file: !2450, line: 395, column: 34)
!14513 = !DILocation(line: 266, column: 15, scope: !14508, inlinedAt: !14511)
!14514 = !DILocation(line: 266, column: 28, scope: !14508, inlinedAt: !14511)
!14515 = !DILocalVariable(name: "thread", arg: 1, scope: !14516, file: !2450, line: 232, type: !2345)
!14516 = distinct !DISubprogram(name: "runq_remove", scope: !2450, file: !2450, line: 232, type: !14297, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14517)
!14517 = !{!14515}
!14518 = !DILocation(line: 0, scope: !14516, inlinedAt: !14519)
!14519 = distinct !DILocation(line: 268, column: 3, scope: !14520, inlinedAt: !14511)
!14520 = distinct !DILexicalBlock(scope: !14521, file: !2450, line: 267, column: 35)
!14521 = distinct !DILexicalBlock(scope: !14508, file: !2450, line: 267, column: 6)
!14522 = !DILocation(line: 234, column: 2, scope: !14516, inlinedAt: !14519)
!14523 = !DILocation(line: 397, column: 2, scope: !14512)
!14524 = !DILocalVariable(name: "thread", arg: 1, scope: !14525, file: !2450, line: 250, type: !2345)
!14525 = distinct !DISubprogram(name: "queue_thread", scope: !2450, file: !2450, line: 250, type: !14297, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14526)
!14526 = !{!14524}
!14527 = !DILocation(line: 0, scope: !14525, inlinedAt: !14528)
!14528 = distinct !DILocation(line: 398, column: 2, scope: !14500)
!14529 = !DILocation(line: 252, column: 15, scope: !14525, inlinedAt: !14528)
!14530 = !DILocation(line: 252, column: 28, scope: !14525, inlinedAt: !14528)
!14531 = !DILocalVariable(name: "thread", arg: 1, scope: !14532, file: !2450, line: 227, type: !2345)
!14532 = distinct !DISubprogram(name: "runq_add", scope: !2450, file: !2450, line: 227, type: !14297, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14533)
!14533 = !{!14531}
!14534 = !DILocation(line: 0, scope: !14532, inlinedAt: !14535)
!14535 = distinct !DILocation(line: 254, column: 3, scope: !14536, inlinedAt: !14528)
!14536 = distinct !DILexicalBlock(scope: !14537, file: !2450, line: 253, column: 35)
!14537 = distinct !DILexicalBlock(scope: !14525, file: !2450, line: 253, column: 6)
!14538 = !DILocalVariable(name: "pq", arg: 1, scope: !14539, file: !2450, line: 181, type: !14542)
!14539 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2450, file: !2450, line: 181, type: !14540, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14543)
!14540 = !DISubroutineType(types: !14541)
!14541 = !{null, !14542, !2345}
!14542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 32)
!14543 = !{!14538, !14544, !14545}
!14544 = !DILocalVariable(name: "thread", arg: 2, scope: !14539, file: !2450, line: 182, type: !2345)
!14545 = !DILocalVariable(name: "t", scope: !14539, file: !2450, line: 184, type: !2345)
!14546 = !DILocation(line: 0, scope: !14539, inlinedAt: !14547)
!14547 = distinct !DILocation(line: 229, column: 2, scope: !14532, inlinedAt: !14535)
!14548 = !DILocation(line: 188, column: 2, scope: !14549, inlinedAt: !14547)
!14549 = distinct !DILexicalBlock(scope: !14539, file: !2450, line: 188, column: 2)
!14550 = !DILocation(line: 188, column: 2, scope: !14551, inlinedAt: !14547)
!14551 = distinct !DILexicalBlock(scope: !14549, file: !2450, line: 188, column: 2)
!14552 = !DILocation(line: 0, scope: !14549, inlinedAt: !14547)
!14553 = !DILocation(line: 189, column: 7, scope: !14554, inlinedAt: !14547)
!14554 = distinct !DILexicalBlock(scope: !14555, file: !2450, line: 189, column: 7)
!14555 = distinct !DILexicalBlock(scope: !14551, file: !2450, line: 188, column: 56)
!14556 = !DILocation(line: 189, column: 35, scope: !14554, inlinedAt: !14547)
!14557 = !DILocation(line: 189, column: 7, scope: !14555, inlinedAt: !14547)
!14558 = !DILocation(line: 191, column: 21, scope: !14559, inlinedAt: !14547)
!14559 = distinct !DILexicalBlock(scope: !14554, file: !2450, line: 189, column: 40)
!14560 = !DILocation(line: 190, column: 4, scope: !14559, inlinedAt: !14547)
!14561 = !DILocation(line: 192, column: 4, scope: !14559, inlinedAt: !14547)
!14562 = distinct !{!14562, !14548, !14563}
!14563 = !DILocation(line: 194, column: 2, scope: !14549, inlinedAt: !14547)
!14564 = !DILocation(line: 196, column: 37, scope: !14539, inlinedAt: !14547)
!14565 = !DILocation(line: 196, column: 2, scope: !14539, inlinedAt: !14547)
!14566 = !DILocation(line: 197, column: 1, scope: !14539, inlinedAt: !14547)
!14567 = !DILocation(line: 399, column: 25, scope: !14500)
!14568 = !DILocation(line: 399, column: 22, scope: !14500)
!14569 = !DILocation(line: 399, column: 2, scope: !14500)
!14570 = !DILocation(line: 400, column: 1, scope: !14500)
!14571 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12844, file: !12844, line: 136, type: !14457, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14572)
!14572 = !{!14573}
!14573 = !DILocalVariable(name: "thread", arg: 1, scope: !14571, file: !12844, line: 136, type: !2345)
!14574 = !DILocation(line: 0, scope: !14571)
!14575 = !DILocation(line: 138, column: 9, scope: !14571)
!14576 = !DILocation(line: 138, column: 2, scope: !14571)
!14577 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2450, file: !2450, line: 1137, type: !14540, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14578)
!14578 = !{!14579, !14580}
!14579 = !DILocalVariable(name: "pq", arg: 1, scope: !14577, file: !2450, line: 1137, type: !14542)
!14580 = !DILocalVariable(name: "thread", arg: 2, scope: !14577, file: !2450, line: 1137, type: !2345)
!14581 = !DILocation(line: 0, scope: !14577)
!14582 = !DILocation(line: 1141, column: 33, scope: !14577)
!14583 = !DILocation(line: 1141, column: 2, scope: !14577)
!14584 = !DILocation(line: 1142, column: 1, scope: !14577)
!14585 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !325, file: !325, line: 294, type: !14586, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14588)
!14586 = !DISubroutineType(types: !14587)
!14587 = !{!2446, !14542}
!14588 = !{!14589}
!14589 = !DILocalVariable(name: "list", arg: 1, scope: !14585, file: !325, line: 294, type: !14542)
!14590 = !DILocation(line: 0, scope: !14585)
!14591 = !DILocation(line: 296, column: 9, scope: !14585)
!14592 = !DILocation(line: 296, column: 49, scope: !14585)
!14593 = !DILocation(line: 296, column: 2, scope: !14585)
!14594 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !325, file: !325, line: 443, type: !14595, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14597)
!14595 = !DISubroutineType(types: !14596)
!14596 = !{null, !2446, !2446}
!14597 = !{!14598, !14599, !14600}
!14598 = !DILocalVariable(name: "successor", arg: 1, scope: !14594, file: !325, line: 443, type: !2446)
!14599 = !DILocalVariable(name: "node", arg: 2, scope: !14594, file: !325, line: 443, type: !2446)
!14600 = !DILocalVariable(name: "prev", scope: !14594, file: !325, line: 445, type: !14601)
!14601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2446)
!14602 = !DILocation(line: 0, scope: !14594)
!14603 = !DILocation(line: 445, column: 39, scope: !14594)
!14604 = !DILocation(line: 447, column: 8, scope: !14594)
!14605 = !DILocation(line: 447, column: 13, scope: !14594)
!14606 = !DILocation(line: 448, column: 8, scope: !14594)
!14607 = !DILocation(line: 448, column: 13, scope: !14594)
!14608 = !DILocation(line: 449, column: 8, scope: !14594)
!14609 = !DILocation(line: 449, column: 13, scope: !14594)
!14610 = !DILocation(line: 450, column: 18, scope: !14594)
!14611 = !DILocation(line: 451, column: 1, scope: !14594)
!14612 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !325, file: !325, line: 341, type: !14613, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14615)
!14613 = !DISubroutineType(types: !14614)
!14614 = !{!2446, !14542, !2446}
!14615 = !{!14616, !14617}
!14616 = !DILocalVariable(name: "list", arg: 1, scope: !14612, file: !325, line: 341, type: !14542)
!14617 = !DILocalVariable(name: "node", arg: 2, scope: !14612, file: !325, line: 342, type: !2446)
!14618 = !DILocation(line: 0, scope: !14612)
!14619 = !DILocation(line: 344, column: 15, scope: !14612)
!14620 = !DILocation(line: 344, column: 9, scope: !14612)
!14621 = !DILocation(line: 344, column: 26, scope: !14612)
!14622 = !DILocation(line: 344, column: 2, scope: !14612)
!14623 = distinct !DISubprogram(name: "sys_dlist_append", scope: !325, file: !325, line: 404, type: !14624, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14626)
!14624 = !DISubroutineType(types: !14625)
!14625 = !{null, !14542, !2446}
!14626 = !{!14627, !14628, !14629}
!14627 = !DILocalVariable(name: "list", arg: 1, scope: !14623, file: !325, line: 404, type: !14542)
!14628 = !DILocalVariable(name: "node", arg: 2, scope: !14623, file: !325, line: 404, type: !2446)
!14629 = !DILocalVariable(name: "tail", scope: !14623, file: !325, line: 406, type: !14601)
!14630 = !DILocation(line: 0, scope: !14623)
!14631 = !DILocation(line: 406, column: 34, scope: !14623)
!14632 = !DILocation(line: 408, column: 8, scope: !14623)
!14633 = !DILocation(line: 408, column: 13, scope: !14623)
!14634 = !DILocation(line: 409, column: 8, scope: !14623)
!14635 = !DILocation(line: 409, column: 13, scope: !14623)
!14636 = !DILocation(line: 411, column: 8, scope: !14623)
!14637 = !DILocation(line: 411, column: 13, scope: !14623)
!14638 = !DILocation(line: 412, column: 13, scope: !14623)
!14639 = !DILocation(line: 413, column: 1, scope: !14623)
!14640 = distinct !DISubprogram(name: "update_cache", scope: !2450, file: !2450, line: 559, type: !7597, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14641)
!14641 = !{!14642, !14643}
!14642 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14640, file: !2450, line: 559, type: !103)
!14643 = !DILocalVariable(name: "thread", scope: !14640, file: !2450, line: 562, type: !2345)
!14644 = !DILocation(line: 0, scope: !14640)
!14645 = !DILocation(line: 239, column: 9, scope: !14646, inlinedAt: !14649)
!14646 = distinct !DISubprogram(name: "runq_best", scope: !2450, file: !2450, line: 237, type: !14647, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !317)
!14647 = !DISubroutineType(types: !14648)
!14648 = !{!2345}
!14649 = distinct !DILocation(line: 314, column: 28, scope: !14650, inlinedAt: !14653)
!14650 = distinct !DISubprogram(name: "next_up", scope: !2450, file: !2450, line: 312, type: !14647, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14651)
!14651 = !{!14652}
!14652 = !DILocalVariable(name: "thread", scope: !14650, file: !2450, line: 314, type: !2345)
!14653 = distinct !DILocation(line: 562, column: 28, scope: !14640)
!14654 = !DILocation(line: 0, scope: !14650, inlinedAt: !14653)
!14655 = !DILocation(line: 340, column: 17, scope: !14650, inlinedAt: !14653)
!14656 = !DILocation(line: 340, column: 9, scope: !14650, inlinedAt: !14653)
!14657 = !DILocalVariable(name: "thread", arg: 1, scope: !14658, file: !2450, line: 127, type: !2345)
!14658 = distinct !DISubprogram(name: "should_preempt", scope: !2450, file: !2450, line: 127, type: !14659, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14661)
!14659 = !DISubroutineType(types: !14660)
!14660 = !{!157, !2345, !103}
!14661 = !{!14657, !14662}
!14662 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14658, file: !2450, line: 128, type: !103)
!14663 = !DILocation(line: 0, scope: !14658, inlinedAt: !14664)
!14664 = distinct !DILocation(line: 564, column: 6, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14640, file: !2450, line: 564, column: 6)
!14666 = !DILocation(line: 133, column: 17, scope: !14667, inlinedAt: !14664)
!14667 = distinct !DILexicalBlock(scope: !14658, file: !2450, line: 133, column: 6)
!14668 = !DILocation(line: 0, scope: !14665)
!14669 = !DILocation(line: 133, column: 6, scope: !14658, inlinedAt: !14664)
!14670 = !DILocation(line: 140, column: 6, scope: !14671, inlinedAt: !14664)
!14671 = distinct !DILexicalBlock(scope: !14658, file: !2450, line: 140, column: 6)
!14672 = !DILocation(line: 140, column: 6, scope: !14658, inlinedAt: !14664)
!14673 = !DILocation(line: 150, column: 9, scope: !14674, inlinedAt: !14664)
!14674 = distinct !DILexicalBlock(scope: !14658, file: !2450, line: 149, column: 6)
!14675 = !DILocation(line: 149, column: 6, scope: !14658, inlinedAt: !14664)
!14676 = !DILocation(line: 157, column: 6, scope: !14677, inlinedAt: !14664)
!14677 = distinct !DILexicalBlock(scope: !14658, file: !2450, line: 157, column: 6)
!14678 = !DILocation(line: 564, column: 6, scope: !14640)
!14679 = !DILocation(line: 566, column: 14, scope: !14680)
!14680 = distinct !DILexicalBlock(scope: !14681, file: !2450, line: 566, column: 7)
!14681 = distinct !DILexicalBlock(scope: !14665, file: !2450, line: 564, column: 42)
!14682 = !DILocation(line: 566, column: 7, scope: !14681)
!14683 = !DILocation(line: 567, column: 4, scope: !14684)
!14684 = distinct !DILexicalBlock(scope: !14680, file: !2450, line: 566, column: 27)
!14685 = !DILocation(line: 568, column: 3, scope: !14684)
!14686 = !DILocation(line: 585, column: 1, scope: !14640)
!14687 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2450, file: !2450, line: 1144, type: !14688, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14690)
!14688 = !DISubroutineType(types: !14689)
!14689 = !{!2345, !14542}
!14690 = !{!14691, !14692, !14693}
!14691 = !DILocalVariable(name: "pq", arg: 1, scope: !14687, file: !2450, line: 1144, type: !14542)
!14692 = !DILocalVariable(name: "thread", scope: !14687, file: !2450, line: 1146, type: !2345)
!14693 = !DILocalVariable(name: "n", scope: !14687, file: !2450, line: 1147, type: !2446)
!14694 = !DILocation(line: 0, scope: !14687)
!14695 = !DILocation(line: 1147, column: 19, scope: !14687)
!14696 = !DILocation(line: 1152, column: 2, scope: !14687)
!14697 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12844, file: !12844, line: 115, type: !14457, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14698)
!14698 = !{!14699}
!14699 = !DILocalVariable(name: "thread", arg: 1, scope: !14697, file: !12844, line: 115, type: !2345)
!14700 = !DILocation(line: 0, scope: !14697)
!14701 = !DILocation(line: 117, column: 46, scope: !14697)
!14702 = !DILocation(line: 117, column: 10, scope: !14697)
!14703 = !DILocation(line: 117, column: 9, scope: !14697)
!14704 = !DILocation(line: 117, column: 2, scope: !14697)
!14705 = distinct !DISubprogram(name: "is_preempt", scope: !2450, file: !2450, line: 62, type: !14315, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14706)
!14706 = !{!14707}
!14707 = !DILocalVariable(name: "thread", arg: 1, scope: !14705, file: !2450, line: 62, type: !2345)
!14708 = !DILocation(line: 0, scope: !14705)
!14709 = !DILocation(line: 65, column: 22, scope: !14705)
!14710 = !DILocation(line: 65, column: 30, scope: !14705)
!14711 = !DILocation(line: 65, column: 2, scope: !14705)
!14712 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13236, file: !13236, line: 35, type: !14713, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14717)
!14713 = !DISubroutineType(types: !14714)
!14714 = !{!157, !14715}
!14715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14716, size: 32)
!14716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2396)
!14717 = !{!14718}
!14718 = !DILocalVariable(name: "to", arg: 1, scope: !14712, file: !13236, line: 35, type: !14715)
!14719 = !DILocation(line: 0, scope: !14712)
!14720 = !DILocation(line: 37, column: 35, scope: !14712)
!14721 = !DILocation(line: 37, column: 10, scope: !14712)
!14722 = !DILocation(line: 37, column: 9, scope: !14712)
!14723 = !DILocation(line: 37, column: 2, scope: !14712)
!14724 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !325, file: !325, line: 225, type: !14725, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14729)
!14725 = !DISubroutineType(types: !14726)
!14726 = !{!157, !14727}
!14727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14728, size: 32)
!14728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2355)
!14729 = !{!14730}
!14730 = !DILocalVariable(name: "node", arg: 1, scope: !14724, file: !325, line: 225, type: !14727)
!14731 = !DILocation(line: 0, scope: !14724)
!14732 = !DILocation(line: 227, column: 15, scope: !14724)
!14733 = !DILocation(line: 227, column: 20, scope: !14724)
!14734 = !DILocation(line: 227, column: 2, scope: !14724)
!14735 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !325, file: !325, line: 325, type: !14613, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14736)
!14736 = !{!14737, !14738}
!14737 = !DILocalVariable(name: "list", arg: 1, scope: !14735, file: !325, line: 325, type: !14542)
!14738 = !DILocalVariable(name: "node", arg: 2, scope: !14735, file: !325, line: 326, type: !2446)
!14739 = !DILocation(line: 0, scope: !14735)
!14740 = !DILocation(line: 328, column: 24, scope: !14735)
!14741 = !DILocation(line: 328, column: 15, scope: !14735)
!14742 = !DILocation(line: 328, column: 9, scope: !14735)
!14743 = !DILocation(line: 328, column: 45, scope: !14735)
!14744 = !DILocation(line: 328, column: 2, scope: !14735)
!14745 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !325, file: !325, line: 266, type: !14746, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14748)
!14746 = !DISubroutineType(types: !14747)
!14747 = !{!157, !14542}
!14748 = !{!14749}
!14749 = !DILocalVariable(name: "list", arg: 1, scope: !14745, file: !325, line: 266, type: !14542)
!14750 = !DILocation(line: 0, scope: !14745)
!14751 = !DILocation(line: 268, column: 15, scope: !14745)
!14752 = !DILocation(line: 268, column: 20, scope: !14745)
!14753 = !DILocation(line: 268, column: 2, scope: !14745)
!14754 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !325, file: !325, line: 496, type: !14755, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14757)
!14755 = !DISubroutineType(types: !14756)
!14756 = !{null, !2446}
!14757 = !{!14758, !14759, !14760}
!14758 = !DILocalVariable(name: "node", arg: 1, scope: !14754, file: !325, line: 496, type: !2446)
!14759 = !DILocalVariable(name: "prev", scope: !14754, file: !325, line: 498, type: !14601)
!14760 = !DILocalVariable(name: "next", scope: !14754, file: !325, line: 499, type: !14601)
!14761 = !DILocation(line: 0, scope: !14754)
!14762 = !DILocation(line: 498, column: 34, scope: !14754)
!14763 = !DILocation(line: 499, column: 34, scope: !14754)
!14764 = !DILocation(line: 501, column: 8, scope: !14754)
!14765 = !DILocation(line: 501, column: 13, scope: !14754)
!14766 = !DILocation(line: 502, column: 8, scope: !14754)
!14767 = !DILocation(line: 502, column: 13, scope: !14754)
!14768 = !DILocation(line: 503, column: 2, scope: !14754)
!14769 = !DILocation(line: 504, column: 1, scope: !14754)
!14770 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !14755, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14771)
!14771 = !{!14772}
!14772 = !DILocalVariable(name: "node", arg: 1, scope: !14770, file: !325, line: 211, type: !2446)
!14773 = !DILocation(line: 0, scope: !14770)
!14774 = !DILocation(line: 213, column: 8, scope: !14770)
!14775 = !DILocation(line: 213, column: 13, scope: !14770)
!14776 = !DILocation(line: 214, column: 8, scope: !14770)
!14777 = !DILocation(line: 214, column: 13, scope: !14770)
!14778 = !DILocation(line: 215, column: 1, scope: !14770)
!14779 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12844, file: !12844, line: 131, type: !14780, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14782)
!14780 = !DISubroutineType(types: !14781)
!14781 = !{!157, !2345, !121}
!14782 = !{!14783, !14784}
!14783 = !DILocalVariable(name: "thread", arg: 1, scope: !14779, file: !12844, line: 131, type: !2345)
!14784 = !DILocalVariable(name: "state", arg: 2, scope: !14779, file: !12844, line: 131, type: !121)
!14785 = !DILocation(line: 0, scope: !14779)
!14786 = !DILocation(line: 133, column: 23, scope: !14779)
!14787 = !DILocation(line: 133, column: 45, scope: !14779)
!14788 = !DILocation(line: 133, column: 2, scope: !14779)
!14789 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12844, file: !12844, line: 211, type: !14790, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14792)
!14790 = !DISubroutineType(types: !14791)
!14791 = !{!157, !103, !103}
!14792 = !{!14793, !14794}
!14793 = !DILocalVariable(name: "prio", arg: 1, scope: !14789, file: !12844, line: 211, type: !103)
!14794 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14789, file: !12844, line: 211, type: !103)
!14795 = !DILocation(line: 0, scope: !14789)
!14796 = !DILocation(line: 213, column: 9, scope: !14789)
!14797 = !DILocation(line: 213, column: 2, scope: !14789)
!14798 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12844, file: !12844, line: 83, type: !14457, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14799)
!14799 = !{!14800}
!14800 = !DILocalVariable(name: "thread", arg: 1, scope: !14798, file: !12844, line: 83, type: !2345)
!14801 = !DILocation(line: 0, scope: !14798)
!14802 = !DILocation(line: 89, column: 16, scope: !14798)
!14803 = !DILocation(line: 89, column: 2, scope: !14798)
!14804 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12844, file: !12844, line: 206, type: !14790, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14805)
!14805 = !{!14806, !14807}
!14806 = !DILocalVariable(name: "prio1", arg: 1, scope: !14804, file: !12844, line: 206, type: !103)
!14807 = !DILocalVariable(name: "prio2", arg: 2, scope: !14804, file: !12844, line: 206, type: !103)
!14808 = !DILocation(line: 0, scope: !14804)
!14809 = !DILocation(line: 208, column: 15, scope: !14804)
!14810 = !DILocation(line: 208, column: 2, scope: !14804)
!14811 = distinct !DISubprogram(name: "z_ready_thread", scope: !2450, file: !2450, line: 635, type: !14297, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14812)
!14812 = !{!14813, !14814, !14816}
!14813 = !DILocalVariable(name: "thread", arg: 1, scope: !14811, file: !2450, line: 635, type: !2345)
!14814 = !DILocalVariable(name: "__i", scope: !14815, file: !2450, line: 637, type: !14331)
!14815 = distinct !DILexicalBlock(scope: !14811, file: !2450, line: 637, column: 2)
!14816 = !DILocalVariable(name: "__key", scope: !14815, file: !2450, line: 637, type: !14331)
!14817 = !DILocation(line: 0, scope: !14811)
!14818 = !DILocation(line: 0, scope: !14815)
!14819 = !DILocation(line: 0, scope: !14339, inlinedAt: !14820)
!14820 = distinct !DILocation(line: 637, column: 2, scope: !14815)
!14821 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !14822)
!14822 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !14820)
!14823 = !DILocation(line: 0, scope: !14348, inlinedAt: !14822)
!14824 = !DILocation(line: 639, column: 4, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14826, file: !2450, line: 638, column: 41)
!14826 = distinct !DILexicalBlock(scope: !14827, file: !2450, line: 638, column: 7)
!14827 = distinct !DILexicalBlock(scope: !14828, file: !2450, line: 637, column: 26)
!14828 = distinct !DILexicalBlock(scope: !14815, file: !2450, line: 637, column: 2)
!14829 = !DILocation(line: 0, scope: !14366, inlinedAt: !14830)
!14830 = distinct !DILocation(line: 637, column: 2, scope: !14828)
!14831 = !DILocation(line: 0, scope: !14374, inlinedAt: !14832)
!14832 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !14830)
!14833 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !14832)
!14834 = !DILocation(line: 642, column: 1, scope: !14811)
!14835 = distinct !DISubprogram(name: "ready_thread", scope: !2450, file: !2450, line: 617, type: !14297, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14836)
!14836 = !{!14837}
!14837 = !DILocalVariable(name: "thread", arg: 1, scope: !14835, file: !2450, line: 617, type: !2345)
!14838 = !DILocation(line: 0, scope: !14835)
!14839 = !DILocation(line: 626, column: 7, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14835, file: !2450, line: 626, column: 6)
!14841 = !DILocation(line: 626, column: 34, scope: !14840)
!14842 = !DILocation(line: 626, column: 37, scope: !14840)
!14843 = !DILocation(line: 626, column: 6, scope: !14835)
!14844 = !DILocation(line: 0, scope: !14525, inlinedAt: !14845)
!14845 = distinct !DILocation(line: 629, column: 3, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14840, file: !2450, line: 626, column: 64)
!14847 = !DILocation(line: 252, column: 15, scope: !14525, inlinedAt: !14845)
!14848 = !DILocation(line: 252, column: 28, scope: !14525, inlinedAt: !14845)
!14849 = !DILocation(line: 0, scope: !14532, inlinedAt: !14850)
!14850 = distinct !DILocation(line: 254, column: 3, scope: !14536, inlinedAt: !14845)
!14851 = !DILocation(line: 0, scope: !14539, inlinedAt: !14852)
!14852 = distinct !DILocation(line: 229, column: 2, scope: !14532, inlinedAt: !14850)
!14853 = !DILocation(line: 188, column: 2, scope: !14549, inlinedAt: !14852)
!14854 = !DILocation(line: 188, column: 2, scope: !14551, inlinedAt: !14852)
!14855 = !DILocation(line: 0, scope: !14549, inlinedAt: !14852)
!14856 = !DILocation(line: 189, column: 7, scope: !14554, inlinedAt: !14852)
!14857 = !DILocation(line: 189, column: 35, scope: !14554, inlinedAt: !14852)
!14858 = !DILocation(line: 189, column: 7, scope: !14555, inlinedAt: !14852)
!14859 = !DILocation(line: 191, column: 21, scope: !14559, inlinedAt: !14852)
!14860 = !DILocation(line: 190, column: 4, scope: !14559, inlinedAt: !14852)
!14861 = !DILocation(line: 192, column: 4, scope: !14559, inlinedAt: !14852)
!14862 = distinct !{!14862, !14853, !14863}
!14863 = !DILocation(line: 194, column: 2, scope: !14549, inlinedAt: !14852)
!14864 = !DILocation(line: 196, column: 37, scope: !14539, inlinedAt: !14852)
!14865 = !DILocation(line: 196, column: 2, scope: !14539, inlinedAt: !14852)
!14866 = !DILocation(line: 197, column: 1, scope: !14539, inlinedAt: !14852)
!14867 = !DILocation(line: 630, column: 3, scope: !14846)
!14868 = !DILocation(line: 632, column: 2, scope: !14846)
!14869 = !DILocation(line: 633, column: 1, scope: !14835)
!14870 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12844, file: !12844, line: 120, type: !14457, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14871)
!14871 = !{!14872}
!14872 = !DILocalVariable(name: "thread", arg: 1, scope: !14870, file: !12844, line: 120, type: !2345)
!14873 = !DILocation(line: 0, scope: !14870)
!14874 = !DILocation(line: 122, column: 12, scope: !14870)
!14875 = !DILocation(line: 122, column: 62, scope: !14870)
!14876 = !DILocation(line: 123, column: 4, scope: !14870)
!14877 = !DILocation(line: 122, column: 2, scope: !14870)
!14878 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2450, file: !2450, line: 644, type: !14297, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14879)
!14879 = !{!14880, !14881, !14883}
!14880 = !DILocalVariable(name: "thread", arg: 1, scope: !14878, file: !2450, line: 644, type: !2345)
!14881 = !DILocalVariable(name: "__i", scope: !14882, file: !2450, line: 646, type: !14331)
!14882 = distinct !DILexicalBlock(scope: !14878, file: !2450, line: 646, column: 2)
!14883 = !DILocalVariable(name: "__key", scope: !14882, file: !2450, line: 646, type: !14331)
!14884 = !DILocation(line: 0, scope: !14878)
!14885 = !DILocation(line: 0, scope: !14882)
!14886 = !DILocation(line: 0, scope: !14339, inlinedAt: !14887)
!14887 = distinct !DILocation(line: 646, column: 2, scope: !14882)
!14888 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !14889)
!14889 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !14887)
!14890 = !DILocation(line: 0, scope: !14348, inlinedAt: !14889)
!14891 = !DILocation(line: 647, column: 3, scope: !14892)
!14892 = distinct !DILexicalBlock(scope: !14893, file: !2450, line: 646, column: 26)
!14893 = distinct !DILexicalBlock(scope: !14882, file: !2450, line: 646, column: 2)
!14894 = !DILocation(line: 0, scope: !14366, inlinedAt: !14895)
!14895 = distinct !DILocation(line: 646, column: 2, scope: !14893)
!14896 = !DILocation(line: 0, scope: !14374, inlinedAt: !14897)
!14897 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !14895)
!14898 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !14897)
!14899 = !DILocation(line: 649, column: 1, scope: !14878)
!14900 = distinct !DISubprogram(name: "z_sched_start", scope: !2450, file: !2450, line: 651, type: !14297, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14901)
!14901 = !{!14902, !14903}
!14902 = !DILocalVariable(name: "thread", arg: 1, scope: !14900, file: !2450, line: 651, type: !2345)
!14903 = !DILocalVariable(name: "key", scope: !14900, file: !2450, line: 653, type: !14331)
!14904 = !DILocation(line: 0, scope: !14900)
!14905 = !DILocation(line: 0, scope: !14339, inlinedAt: !14906)
!14906 = distinct !DILocation(line: 653, column: 25, scope: !14900)
!14907 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !14908)
!14908 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !14906)
!14909 = !DILocation(line: 0, scope: !14348, inlinedAt: !14908)
!14910 = !DILocation(line: 655, column: 6, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14900, file: !2450, line: 655, column: 6)
!14912 = !DILocation(line: 655, column: 6, scope: !14900)
!14913 = !DILocation(line: 0, scope: !14366, inlinedAt: !14914)
!14914 = distinct !DILocation(line: 656, column: 3, scope: !14915)
!14915 = distinct !DILexicalBlock(scope: !14911, file: !2450, line: 655, column: 36)
!14916 = !DILocation(line: 0, scope: !14374, inlinedAt: !14917)
!14917 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !14914)
!14918 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !14917)
!14919 = !DILocation(line: 657, column: 3, scope: !14915)
!14920 = !DILocation(line: 660, column: 2, scope: !14900)
!14921 = !DILocation(line: 661, column: 2, scope: !14900)
!14922 = !DILocation(line: 662, column: 2, scope: !14900)
!14923 = !DILocation(line: 663, column: 1, scope: !14900)
!14924 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12844, file: !12844, line: 126, type: !14457, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14925)
!14925 = !{!14926}
!14926 = !DILocalVariable(name: "thread", arg: 1, scope: !14924, file: !12844, line: 126, type: !2345)
!14927 = !DILocation(line: 0, scope: !14924)
!14928 = !DILocation(line: 128, column: 23, scope: !14924)
!14929 = !DILocation(line: 128, column: 36, scope: !14924)
!14930 = !DILocation(line: 128, column: 56, scope: !14924)
!14931 = !DILocation(line: 128, column: 2, scope: !14924)
!14932 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12844, file: !12844, line: 155, type: !14297, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14933)
!14933 = !{!14934}
!14934 = !DILocalVariable(name: "thread", arg: 1, scope: !14932, file: !12844, line: 155, type: !2345)
!14935 = !DILocation(line: 0, scope: !14932)
!14936 = !DILocation(line: 157, column: 15, scope: !14932)
!14937 = !DILocation(line: 157, column: 28, scope: !14932)
!14938 = !DILocation(line: 158, column: 1, scope: !14932)
!14939 = distinct !DISubprogram(name: "z_reschedule", scope: !2450, file: !2450, line: 967, type: !14367, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14940)
!14940 = !{!14941, !14942}
!14941 = !DILocalVariable(name: "lock", arg: 1, scope: !14939, file: !2450, line: 967, type: !14342)
!14942 = !DILocalVariable(name: "key", arg: 2, scope: !14939, file: !2450, line: 967, type: !14331)
!14943 = !DILocation(line: 0, scope: !14939)
!14944 = !DILocation(line: 969, column: 6, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14939, file: !2450, line: 969, column: 6)
!14946 = !DILocation(line: 969, column: 23, scope: !14945)
!14947 = !DILocation(line: 969, column: 26, scope: !14945)
!14948 = !DILocation(line: 969, column: 6, scope: !14939)
!14949 = !DILocalVariable(name: "key", arg: 2, scope: !14950, file: !12948, line: 193, type: !14331)
!14950 = distinct !DISubprogram(name: "z_swap", scope: !12948, file: !12948, line: 193, type: !14951, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14953)
!14951 = !DISubroutineType(types: !14952)
!14952 = !{!103, !14342, !14331}
!14953 = !{!14954, !14949}
!14954 = !DILocalVariable(name: "lock", arg: 1, scope: !14950, file: !12948, line: 193, type: !14342)
!14955 = !DILocation(line: 0, scope: !14950, inlinedAt: !14956)
!14956 = distinct !DILocation(line: 970, column: 3, scope: !14957)
!14957 = distinct !DILexicalBlock(scope: !14945, file: !2450, line: 969, column: 39)
!14958 = !DILocation(line: 196, column: 9, scope: !14950, inlinedAt: !14956)
!14959 = !DILocation(line: 971, column: 2, scope: !14957)
!14960 = !DILocation(line: 0, scope: !14366, inlinedAt: !14961)
!14961 = distinct !DILocation(line: 972, column: 3, scope: !14962)
!14962 = distinct !DILexicalBlock(scope: !14945, file: !2450, line: 971, column: 9)
!14963 = !DILocation(line: 0, scope: !14374, inlinedAt: !14964)
!14964 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !14961)
!14965 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !14964)
!14966 = !DILocation(line: 975, column: 1, scope: !14939)
!14967 = distinct !DISubprogram(name: "resched", scope: !2450, file: !2450, line: 940, type: !14968, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14970)
!14968 = !DISubroutineType(types: !14969)
!14969 = !{!157, !121}
!14970 = !{!14971}
!14971 = !DILocalVariable(name: "key", arg: 1, scope: !14967, file: !2450, line: 940, type: !121)
!14972 = !DILocation(line: 0, scope: !14967)
!14973 = !DILocalVariable(name: "key", arg: 1, scope: !14974, file: !5738, line: 112, type: !32)
!14974 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5738, file: !5738, line: 112, type: !14975, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14977)
!14975 = !DISubroutineType(types: !14976)
!14976 = !{!157, !32}
!14977 = !{!14973}
!14978 = !DILocation(line: 0, scope: !14974, inlinedAt: !14979)
!14979 = distinct !DILocation(line: 946, column: 9, scope: !14967)
!14980 = !DILocation(line: 115, column: 13, scope: !14974, inlinedAt: !14979)
!14981 = !DILocation(line: 946, column: 32, scope: !14967)
!14982 = !DILocation(line: 1031, column: 3, scope: !14983, inlinedAt: !14986)
!14983 = distinct !DISubprogram(name: "__get_IPSR", scope: !5953, file: !5953, line: 1027, type: !6034, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14984)
!14984 = !{!14985}
!14985 = !DILocalVariable(name: "result", scope: !14983, file: !5953, line: 1029, type: !121)
!14986 = distinct !DILocation(line: 48, column: 10, scope: !14987, inlinedAt: !14988)
!14987 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6747, file: !6747, line: 46, type: !6748, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !317)
!14988 = distinct !DILocation(line: 946, column: 36, scope: !14967)
!14989 = !{i64 3583915}
!14990 = !DILocation(line: 0, scope: !14983, inlinedAt: !14986)
!14991 = !DILocation(line: 48, column: 9, scope: !14987, inlinedAt: !14988)
!14992 = !DILocation(line: 946, column: 2, scope: !14967)
!14993 = distinct !DISubprogram(name: "need_swap", scope: !2450, file: !2450, line: 953, type: !6748, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14994)
!14994 = !{!14995}
!14995 = !DILocalVariable(name: "new_thread", scope: !14993, file: !2450, line: 959, type: !2345)
!14996 = !DILocation(line: 962, column: 31, scope: !14993)
!14997 = !DILocation(line: 0, scope: !14993)
!14998 = !DILocation(line: 963, column: 23, scope: !14993)
!14999 = !DILocation(line: 963, column: 20, scope: !14993)
!15000 = !DILocation(line: 963, column: 2, scope: !14993)
!15001 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12948, file: !12948, line: 181, type: !5963, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15002)
!15002 = !{!15003, !15004}
!15003 = !DILocalVariable(name: "key", arg: 1, scope: !15001, file: !12948, line: 181, type: !32)
!15004 = !DILocalVariable(name: "ret", scope: !15001, file: !12948, line: 183, type: !103)
!15005 = !DILocation(line: 0, scope: !15001)
!15006 = !DILocation(line: 185, column: 8, scope: !15001)
!15007 = !DILocation(line: 186, column: 2, scope: !15001)
!15008 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2450, file: !2450, line: 665, type: !14297, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15009)
!15009 = !{!15010, !15011, !15013}
!15010 = !DILocalVariable(name: "thread", arg: 1, scope: !15008, file: !2450, line: 665, type: !2345)
!15011 = !DILocalVariable(name: "__i", scope: !15012, file: !2450, line: 671, type: !14331)
!15012 = distinct !DILexicalBlock(scope: !15008, file: !2450, line: 671, column: 2)
!15013 = !DILocalVariable(name: "__key", scope: !15012, file: !2450, line: 671, type: !14331)
!15014 = !DILocation(line: 0, scope: !15008)
!15015 = !DILocation(line: 669, column: 8, scope: !15008)
!15016 = !DILocation(line: 0, scope: !15012)
!15017 = !DILocation(line: 0, scope: !14339, inlinedAt: !15018)
!15018 = distinct !DILocation(line: 671, column: 2, scope: !15012)
!15019 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15020)
!15020 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15018)
!15021 = !DILocation(line: 0, scope: !14348, inlinedAt: !15020)
!15022 = !DILocation(line: 672, column: 7, scope: !15023)
!15023 = distinct !DILexicalBlock(scope: !15024, file: !2450, line: 672, column: 7)
!15024 = distinct !DILexicalBlock(scope: !15025, file: !2450, line: 671, column: 26)
!15025 = distinct !DILexicalBlock(scope: !15012, file: !2450, line: 671, column: 2)
!15026 = !DILocation(line: 672, column: 7, scope: !15024)
!15027 = !DILocation(line: 0, scope: !14508, inlinedAt: !15028)
!15028 = distinct !DILocation(line: 673, column: 4, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !15023, file: !2450, line: 672, column: 35)
!15030 = !DILocation(line: 266, column: 15, scope: !14508, inlinedAt: !15028)
!15031 = !DILocation(line: 266, column: 28, scope: !14508, inlinedAt: !15028)
!15032 = !DILocation(line: 0, scope: !14516, inlinedAt: !15033)
!15033 = distinct !DILocation(line: 268, column: 3, scope: !14520, inlinedAt: !15028)
!15034 = !DILocation(line: 234, column: 2, scope: !14516, inlinedAt: !15033)
!15035 = !DILocation(line: 674, column: 3, scope: !15029)
!15036 = !DILocation(line: 675, column: 3, scope: !15024)
!15037 = !DILocation(line: 676, column: 26, scope: !15024)
!15038 = !DILocation(line: 676, column: 23, scope: !15024)
!15039 = !DILocation(line: 676, column: 3, scope: !15024)
!15040 = !DILocation(line: 0, scope: !14366, inlinedAt: !15041)
!15041 = distinct !DILocation(line: 671, column: 2, scope: !15025)
!15042 = !DILocation(line: 0, scope: !14374, inlinedAt: !15043)
!15043 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !15041)
!15044 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !15043)
!15045 = !DILocation(line: 679, column: 16, scope: !15046)
!15046 = distinct !DILexicalBlock(scope: !15008, file: !2450, line: 679, column: 6)
!15047 = !DILocation(line: 679, column: 13, scope: !15046)
!15048 = !DILocation(line: 679, column: 6, scope: !15008)
!15049 = !DILocation(line: 680, column: 3, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15046, file: !2450, line: 679, column: 26)
!15051 = !DILocation(line: 681, column: 2, scope: !15050)
!15052 = !DILocation(line: 684, column: 1, scope: !15008)
!15053 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13236, file: !13236, line: 52, type: !14315, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15054)
!15054 = !{!15055}
!15055 = !DILocalVariable(name: "thread", arg: 1, scope: !15053, file: !13236, line: 52, type: !2345)
!15056 = !DILocation(line: 0, scope: !15053)
!15057 = !DILocation(line: 54, column: 39, scope: !15053)
!15058 = !DILocation(line: 54, column: 9, scope: !15053)
!15059 = !DILocation(line: 54, column: 2, scope: !15053)
!15060 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12844, file: !12844, line: 141, type: !14297, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15061)
!15061 = !{!15062}
!15062 = !DILocalVariable(name: "thread", arg: 1, scope: !15060, file: !12844, line: 141, type: !2345)
!15063 = !DILocation(line: 0, scope: !15060)
!15064 = !DILocation(line: 143, column: 15, scope: !15060)
!15065 = !DILocation(line: 143, column: 28, scope: !15060)
!15066 = !DILocation(line: 146, column: 1, scope: !15060)
!15067 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12844, file: !12844, line: 73, type: !3181, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !317)
!15068 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15069)
!15069 = distinct !DILocation(line: 75, column: 30, scope: !15067)
!15070 = !DILocation(line: 0, scope: !14348, inlinedAt: !15069)
!15071 = !DILocation(line: 75, column: 9, scope: !15067)
!15072 = !DILocation(line: 76, column: 1, scope: !15067)
!15073 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2450, file: !2450, line: 977, type: !6044, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15074)
!15074 = !{!15075}
!15075 = !DILocalVariable(name: "key", arg: 1, scope: !15073, file: !2450, line: 977, type: !121)
!15076 = !DILocation(line: 0, scope: !15073)
!15077 = !DILocation(line: 979, column: 6, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !15073, file: !2450, line: 979, column: 6)
!15079 = !DILocation(line: 979, column: 6, scope: !15073)
!15080 = !DILocation(line: 980, column: 3, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !15078, file: !2450, line: 979, column: 20)
!15082 = !DILocation(line: 981, column: 2, scope: !15081)
!15083 = !DILocation(line: 0, scope: !14374, inlinedAt: !15084)
!15084 = distinct !DILocation(line: 982, column: 3, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !15078, file: !2450, line: 981, column: 9)
!15086 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !15084)
!15087 = !DILocation(line: 985, column: 1, scope: !15073)
!15088 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2450, file: !2450, line: 695, type: !14297, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15089)
!15089 = !{!15090, !15091}
!15090 = !DILocalVariable(name: "thread", arg: 1, scope: !15088, file: !2450, line: 695, type: !2345)
!15091 = !DILocalVariable(name: "key", scope: !15088, file: !2450, line: 699, type: !14331)
!15092 = !DILocation(line: 0, scope: !15088)
!15093 = !DILocation(line: 0, scope: !14339, inlinedAt: !15094)
!15094 = distinct !DILocation(line: 699, column: 25, scope: !15088)
!15095 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15096)
!15096 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15094)
!15097 = !DILocation(line: 0, scope: !14348, inlinedAt: !15096)
!15098 = !DILocation(line: 702, column: 7, scope: !15099)
!15099 = distinct !DILexicalBlock(scope: !15088, file: !2450, line: 702, column: 6)
!15100 = !DILocation(line: 702, column: 6, scope: !15088)
!15101 = !DILocation(line: 0, scope: !14366, inlinedAt: !15102)
!15102 = distinct !DILocation(line: 703, column: 3, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15099, file: !2450, line: 702, column: 38)
!15104 = !DILocation(line: 0, scope: !14374, inlinedAt: !15105)
!15105 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !15102)
!15106 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !15105)
!15107 = !DILocation(line: 704, column: 3, scope: !15103)
!15108 = !DILocation(line: 707, column: 2, scope: !15088)
!15109 = !DILocation(line: 708, column: 2, scope: !15088)
!15110 = !DILocation(line: 710, column: 2, scope: !15088)
!15111 = !DILocation(line: 713, column: 1, scope: !15088)
!15112 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12844, file: !12844, line: 96, type: !14457, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15113)
!15113 = !{!15114}
!15114 = !DILocalVariable(name: "thread", arg: 1, scope: !15112, file: !12844, line: 96, type: !2345)
!15115 = !DILocation(line: 0, scope: !15112)
!15116 = !DILocation(line: 98, column: 23, scope: !15112)
!15117 = !DILocation(line: 98, column: 36, scope: !15112)
!15118 = !DILocation(line: 98, column: 57, scope: !15112)
!15119 = !DILocation(line: 98, column: 2, scope: !15112)
!15120 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12844, file: !12844, line: 148, type: !14297, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15121)
!15121 = !{!15122}
!15122 = !DILocalVariable(name: "thread", arg: 1, scope: !15120, file: !12844, line: 148, type: !2345)
!15123 = !DILocation(line: 0, scope: !15120)
!15124 = !DILocation(line: 150, column: 15, scope: !15120)
!15125 = !DILocation(line: 150, column: 28, scope: !15120)
!15126 = !DILocation(line: 153, column: 1, scope: !15120)
!15127 = distinct !DISubprogram(name: "z_pend_thread", scope: !2450, file: !2450, line: 770, type: !15128, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15134)
!15128 = !DISubroutineType(types: !15129)
!15129 = !{null, !2345, !2376, !15130}
!15130 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !15131)
!15131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !15132)
!15132 = !{!15133}
!15133 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15131, file: !201, line: 66, baseType: !200, size: 64)
!15134 = !{!15135, !15136, !15137, !15138, !15140}
!15135 = !DILocalVariable(name: "thread", arg: 1, scope: !15127, file: !2450, line: 770, type: !2345)
!15136 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15127, file: !2450, line: 770, type: !2376)
!15137 = !DILocalVariable(name: "timeout", arg: 3, scope: !15127, file: !2450, line: 771, type: !15130)
!15138 = !DILocalVariable(name: "__i", scope: !15139, file: !2450, line: 774, type: !14331)
!15139 = distinct !DILexicalBlock(scope: !15127, file: !2450, line: 774, column: 2)
!15140 = !DILocalVariable(name: "__key", scope: !15139, file: !2450, line: 774, type: !14331)
!15141 = !DILocation(line: 0, scope: !15127)
!15142 = !DILocation(line: 0, scope: !15139)
!15143 = !DILocation(line: 0, scope: !14339, inlinedAt: !15144)
!15144 = distinct !DILocation(line: 774, column: 2, scope: !15139)
!15145 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15146)
!15146 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15144)
!15147 = !DILocation(line: 0, scope: !14348, inlinedAt: !15146)
!15148 = !DILocation(line: 775, column: 3, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15150, file: !2450, line: 774, column: 26)
!15150 = distinct !DILexicalBlock(scope: !15139, file: !2450, line: 774, column: 2)
!15151 = !DILocation(line: 0, scope: !14366, inlinedAt: !15152)
!15152 = distinct !DILocation(line: 774, column: 2, scope: !15150)
!15153 = !DILocation(line: 0, scope: !14374, inlinedAt: !15154)
!15154 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !15152)
!15155 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !15154)
!15156 = !DILocation(line: 777, column: 1, scope: !15127)
!15157 = distinct !DISubprogram(name: "pend_locked", scope: !2450, file: !2450, line: 760, type: !15128, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15158)
!15158 = !{!15159, !15160, !15161}
!15159 = !DILocalVariable(name: "thread", arg: 1, scope: !15157, file: !2450, line: 760, type: !2345)
!15160 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15157, file: !2450, line: 760, type: !2376)
!15161 = !DILocalVariable(name: "timeout", arg: 3, scope: !15157, file: !2450, line: 761, type: !15130)
!15162 = !DILocation(line: 0, scope: !15157)
!15163 = !DILocation(line: 766, column: 2, scope: !15157)
!15164 = !DILocation(line: 767, column: 2, scope: !15157)
!15165 = !DILocation(line: 768, column: 1, scope: !15157)
!15166 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2450, file: !2450, line: 740, type: !15167, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15169)
!15167 = !DISubroutineType(types: !15168)
!15168 = !{null, !2345, !2376}
!15169 = !{!15170, !15171}
!15170 = !DILocalVariable(name: "thread", arg: 1, scope: !15166, file: !2450, line: 740, type: !2345)
!15171 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15166, file: !2450, line: 740, type: !2376)
!15172 = !DILocation(line: 0, scope: !15166)
!15173 = !DILocation(line: 742, column: 2, scope: !15166)
!15174 = !DILocation(line: 743, column: 2, scope: !15166)
!15175 = !DILocation(line: 747, column: 13, scope: !15176)
!15176 = distinct !DILexicalBlock(scope: !15166, file: !2450, line: 747, column: 6)
!15177 = !DILocation(line: 747, column: 6, scope: !15166)
!15178 = !DILocation(line: 748, column: 16, scope: !15179)
!15179 = distinct !DILexicalBlock(scope: !15176, file: !2450, line: 747, column: 22)
!15180 = !DILocation(line: 748, column: 26, scope: !15179)
!15181 = !DILocation(line: 749, column: 28, scope: !15179)
!15182 = !DILocation(line: 0, scope: !14539, inlinedAt: !15183)
!15183 = distinct !DILocation(line: 749, column: 3, scope: !15179)
!15184 = !DILocation(line: 188, column: 2, scope: !14549, inlinedAt: !15183)
!15185 = !DILocation(line: 188, column: 2, scope: !14551, inlinedAt: !15183)
!15186 = !DILocation(line: 0, scope: !14549, inlinedAt: !15183)
!15187 = !DILocation(line: 189, column: 7, scope: !14554, inlinedAt: !15183)
!15188 = !DILocation(line: 189, column: 35, scope: !14554, inlinedAt: !15183)
!15189 = !DILocation(line: 189, column: 7, scope: !14555, inlinedAt: !15183)
!15190 = !DILocation(line: 191, column: 21, scope: !14559, inlinedAt: !15183)
!15191 = !DILocation(line: 190, column: 4, scope: !14559, inlinedAt: !15183)
!15192 = !DILocation(line: 192, column: 4, scope: !14559, inlinedAt: !15183)
!15193 = distinct !{!15193, !15184, !15194}
!15194 = !DILocation(line: 194, column: 2, scope: !14549, inlinedAt: !15183)
!15195 = !DILocation(line: 196, column: 37, scope: !14539, inlinedAt: !15183)
!15196 = !DILocation(line: 196, column: 2, scope: !14539, inlinedAt: !15183)
!15197 = !DILocation(line: 197, column: 1, scope: !14539, inlinedAt: !15183)
!15198 = !DILocation(line: 751, column: 1, scope: !15166)
!15199 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2450, file: !2450, line: 753, type: !15200, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15202)
!15200 = !DISubroutineType(types: !15201)
!15201 = !{null, !2345, !15130}
!15202 = !{!15203, !15204}
!15203 = !DILocalVariable(name: "thread", arg: 1, scope: !15199, file: !2450, line: 753, type: !2345)
!15204 = !DILocalVariable(name: "timeout", arg: 2, scope: !15199, file: !2450, line: 753, type: !15130)
!15205 = !DILocation(line: 0, scope: !15199)
!15206 = !DILocation(line: 755, column: 7, scope: !15207)
!15207 = distinct !DILexicalBlock(scope: !15199, file: !2450, line: 755, column: 6)
!15208 = !DILocation(line: 755, column: 6, scope: !15199)
!15209 = !DILocation(line: 756, column: 3, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15207, file: !2450, line: 755, column: 41)
!15211 = !DILocation(line: 757, column: 2, scope: !15210)
!15212 = !DILocation(line: 758, column: 1, scope: !15199)
!15213 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13236, file: !13236, line: 47, type: !15200, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15214)
!15214 = !{!15215, !15216}
!15215 = !DILocalVariable(name: "thread", arg: 1, scope: !15213, file: !13236, line: 47, type: !2345)
!15216 = !DILocalVariable(name: "ticks", arg: 2, scope: !15213, file: !13236, line: 47, type: !15130)
!15217 = !DILocation(line: 0, scope: !15213)
!15218 = !DILocation(line: 49, column: 30, scope: !15213)
!15219 = !DILocation(line: 49, column: 2, scope: !15213)
!15220 = !DILocation(line: 50, column: 1, scope: !15213)
!15221 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2450, file: !2450, line: 795, type: !2402, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15222)
!15222 = !{!15223, !15224, !15225, !15227, !15228}
!15223 = !DILocalVariable(name: "timeout", arg: 1, scope: !15221, file: !2450, line: 795, type: !2404)
!15224 = !DILocalVariable(name: "thread", scope: !15221, file: !2450, line: 797, type: !2345)
!15225 = !DILocalVariable(name: "__i", scope: !15226, file: !2450, line: 800, type: !14331)
!15226 = distinct !DILexicalBlock(scope: !15221, file: !2450, line: 800, column: 2)
!15227 = !DILocalVariable(name: "__key", scope: !15226, file: !2450, line: 800, type: !14331)
!15228 = !DILocalVariable(name: "killed", scope: !15229, file: !2450, line: 801, type: !157)
!15229 = distinct !DILexicalBlock(scope: !15230, file: !2450, line: 800, column: 26)
!15230 = distinct !DILexicalBlock(scope: !15226, file: !2450, line: 800, column: 2)
!15231 = !DILocation(line: 0, scope: !15221)
!15232 = !DILocation(line: 797, column: 28, scope: !15221)
!15233 = !DILocation(line: 0, scope: !15226)
!15234 = !DILocation(line: 0, scope: !14339, inlinedAt: !15235)
!15235 = distinct !DILocation(line: 800, column: 2, scope: !15226)
!15236 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15237)
!15237 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15235)
!15238 = !DILocation(line: 0, scope: !14348, inlinedAt: !15237)
!15239 = !DILocation(line: 801, column: 27, scope: !15229)
!15240 = !DILocation(line: 801, column: 32, scope: !15229)
!15241 = !DILocation(line: 801, column: 61, scope: !15229)
!15242 = !DILocation(line: 0, scope: !15229)
!15243 = !DILocation(line: 804, column: 7, scope: !15229)
!15244 = !DILocation(line: 805, column: 21, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15246, file: !2450, line: 805, column: 8)
!15246 = distinct !DILexicalBlock(scope: !15247, file: !2450, line: 804, column: 16)
!15247 = distinct !DILexicalBlock(scope: !15229, file: !2450, line: 804, column: 7)
!15248 = !DILocation(line: 805, column: 31, scope: !15245)
!15249 = !DILocation(line: 805, column: 8, scope: !15246)
!15250 = !DILocation(line: 806, column: 5, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15245, file: !2450, line: 805, column: 40)
!15252 = !DILocation(line: 807, column: 4, scope: !15251)
!15253 = !DILocation(line: 808, column: 4, scope: !15246)
!15254 = !DILocation(line: 809, column: 4, scope: !15246)
!15255 = !DILocation(line: 810, column: 4, scope: !15246)
!15256 = !DILocation(line: 811, column: 3, scope: !15246)
!15257 = !DILocation(line: 0, scope: !14366, inlinedAt: !15258)
!15258 = distinct !DILocation(line: 800, column: 2, scope: !15230)
!15259 = !DILocation(line: 0, scope: !14374, inlinedAt: !15260)
!15260 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !15258)
!15261 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !15260)
!15262 = !DILocation(line: 813, column: 1, scope: !15221)
!15263 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2450, file: !2450, line: 779, type: !14297, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15264)
!15264 = !{!15265}
!15265 = !DILocalVariable(name: "thread", arg: 1, scope: !15263, file: !2450, line: 779, type: !2345)
!15266 = !DILocation(line: 0, scope: !15263)
!15267 = !DILocation(line: 781, column: 2, scope: !15263)
!15268 = !DILocation(line: 782, column: 2, scope: !15263)
!15269 = !DILocation(line: 783, column: 15, scope: !15263)
!15270 = !DILocation(line: 783, column: 25, scope: !15263)
!15271 = !DILocation(line: 784, column: 1, scope: !15263)
!15272 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12844, file: !12844, line: 165, type: !14297, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15273)
!15273 = !{!15274}
!15274 = !DILocalVariable(name: "thread", arg: 1, scope: !15272, file: !12844, line: 165, type: !2345)
!15275 = !DILocation(line: 0, scope: !15272)
!15276 = !DILocation(line: 167, column: 15, scope: !15272)
!15277 = !DILocation(line: 167, column: 28, scope: !15272)
!15278 = !DILocation(line: 168, column: 1, scope: !15272)
!15279 = distinct !DISubprogram(name: "unready_thread", scope: !2450, file: !2450, line: 731, type: !14297, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15280)
!15280 = !{!15281}
!15281 = !DILocalVariable(name: "thread", arg: 1, scope: !15279, file: !2450, line: 731, type: !2345)
!15282 = !DILocation(line: 0, scope: !15279)
!15283 = !DILocation(line: 733, column: 6, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15279, file: !2450, line: 733, column: 6)
!15285 = !DILocation(line: 733, column: 6, scope: !15279)
!15286 = !DILocation(line: 0, scope: !14508, inlinedAt: !15287)
!15287 = distinct !DILocation(line: 734, column: 3, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !15284, file: !2450, line: 733, column: 34)
!15289 = !DILocation(line: 266, column: 15, scope: !14508, inlinedAt: !15287)
!15290 = !DILocation(line: 266, column: 28, scope: !14508, inlinedAt: !15287)
!15291 = !DILocation(line: 0, scope: !14516, inlinedAt: !15292)
!15292 = distinct !DILocation(line: 268, column: 3, scope: !14520, inlinedAt: !15287)
!15293 = !DILocation(line: 234, column: 2, scope: !14516, inlinedAt: !15292)
!15294 = !DILocation(line: 735, column: 2, scope: !15288)
!15295 = !DILocation(line: 736, column: 25, scope: !15279)
!15296 = !DILocation(line: 736, column: 22, scope: !15279)
!15297 = !DILocation(line: 736, column: 2, scope: !15279)
!15298 = !DILocation(line: 737, column: 1, scope: !15279)
!15299 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12844, file: !12844, line: 160, type: !14297, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15300)
!15300 = !{!15301}
!15301 = !DILocalVariable(name: "thread", arg: 1, scope: !15299, file: !12844, line: 160, type: !2345)
!15302 = !DILocation(line: 0, scope: !15299)
!15303 = !DILocation(line: 162, column: 15, scope: !15299)
!15304 = !DILocation(line: 162, column: 28, scope: !15299)
!15305 = !DILocation(line: 163, column: 1, scope: !15299)
!15306 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2450, file: !2450, line: 786, type: !14297, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15307)
!15307 = !{!15308, !15309, !15311}
!15308 = !DILocalVariable(name: "thread", arg: 1, scope: !15306, file: !2450, line: 786, type: !2345)
!15309 = !DILocalVariable(name: "__i", scope: !15310, file: !2450, line: 788, type: !14331)
!15310 = distinct !DILexicalBlock(scope: !15306, file: !2450, line: 788, column: 2)
!15311 = !DILocalVariable(name: "__key", scope: !15310, file: !2450, line: 788, type: !14331)
!15312 = !DILocation(line: 0, scope: !15306)
!15313 = !DILocation(line: 0, scope: !15310)
!15314 = !DILocation(line: 0, scope: !14339, inlinedAt: !15315)
!15315 = distinct !DILocation(line: 788, column: 2, scope: !15310)
!15316 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15317)
!15317 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15315)
!15318 = !DILocation(line: 0, scope: !14348, inlinedAt: !15317)
!15319 = !DILocation(line: 789, column: 3, scope: !15320)
!15320 = distinct !DILexicalBlock(scope: !15321, file: !2450, line: 788, column: 26)
!15321 = distinct !DILexicalBlock(scope: !15310, file: !2450, line: 788, column: 2)
!15322 = !DILocation(line: 0, scope: !14366, inlinedAt: !15323)
!15323 = distinct !DILocation(line: 788, column: 2, scope: !15321)
!15324 = !DILocation(line: 0, scope: !14374, inlinedAt: !15325)
!15325 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !15323)
!15326 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !15325)
!15327 = !DILocation(line: 791, column: 1, scope: !15306)
!15328 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2450, file: !2450, line: 816, type: !15329, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15331)
!15329 = !DISubroutineType(types: !15330)
!15330 = !{!103, !121, !2376, !15130}
!15331 = !{!15332, !15333, !15334, !15335, !15336, !15338}
!15332 = !DILocalVariable(name: "key", arg: 1, scope: !15328, file: !2450, line: 816, type: !121)
!15333 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15328, file: !2450, line: 816, type: !2376)
!15334 = !DILocalVariable(name: "timeout", arg: 3, scope: !15328, file: !2450, line: 816, type: !15130)
!15335 = !DILocalVariable(name: "ret", scope: !15328, file: !2450, line: 828, type: !103)
!15336 = !DILocalVariable(name: "__i", scope: !15337, file: !2450, line: 829, type: !14331)
!15337 = distinct !DILexicalBlock(scope: !15328, file: !2450, line: 829, column: 2)
!15338 = !DILocalVariable(name: "__key", scope: !15337, file: !2450, line: 829, type: !14331)
!15339 = !DILocation(line: 0, scope: !15328)
!15340 = !DILocation(line: 823, column: 14, scope: !15328)
!15341 = !DILocation(line: 823, column: 2, scope: !15328)
!15342 = !DILocation(line: 826, column: 20, scope: !15328)
!15343 = !DILocation(line: 826, column: 18, scope: !15328)
!15344 = !DILocation(line: 828, column: 12, scope: !15328)
!15345 = !DILocation(line: 0, scope: !15337)
!15346 = !DILocation(line: 0, scope: !14339, inlinedAt: !15347)
!15347 = distinct !DILocation(line: 829, column: 2, scope: !15337)
!15348 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15349)
!15349 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15347)
!15350 = !DILocation(line: 0, scope: !14348, inlinedAt: !15349)
!15351 = !DILocation(line: 830, column: 7, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15353, file: !2450, line: 830, column: 7)
!15353 = distinct !DILexicalBlock(scope: !15354, file: !2450, line: 829, column: 26)
!15354 = distinct !DILexicalBlock(scope: !15337, file: !2450, line: 829, column: 2)
!15355 = !DILocation(line: 830, column: 26, scope: !15352)
!15356 = !DILocation(line: 830, column: 23, scope: !15352)
!15357 = !DILocation(line: 830, column: 7, scope: !15353)
!15358 = !DILocation(line: 831, column: 20, scope: !15359)
!15359 = distinct !DILexicalBlock(scope: !15352, file: !2450, line: 830, column: 36)
!15360 = !DILocation(line: 832, column: 3, scope: !15359)
!15361 = !DILocation(line: 0, scope: !14366, inlinedAt: !15362)
!15362 = distinct !DILocation(line: 829, column: 2, scope: !15354)
!15363 = !DILocation(line: 0, scope: !14374, inlinedAt: !15364)
!15364 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !15362)
!15365 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !15364)
!15366 = !DILocation(line: 834, column: 2, scope: !15328)
!15367 = distinct !DISubprogram(name: "z_pend_curr", scope: !2450, file: !2450, line: 840, type: !15368, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15370)
!15368 = !DISubroutineType(types: !15369)
!15369 = !{!103, !14342, !14331, !2376, !15130}
!15370 = !{!15371, !15372, !15373, !15374}
!15371 = !DILocalVariable(name: "lock", arg: 1, scope: !15367, file: !2450, line: 840, type: !14342)
!15372 = !DILocalVariable(name: "key", arg: 2, scope: !15367, file: !2450, line: 840, type: !14331)
!15373 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15367, file: !2450, line: 841, type: !2376)
!15374 = !DILocalVariable(name: "timeout", arg: 4, scope: !15367, file: !2450, line: 841, type: !15130)
!15375 = !DILocation(line: 0, scope: !15367)
!15376 = !DILocation(line: 844, column: 20, scope: !15367)
!15377 = !DILocation(line: 844, column: 18, scope: !15367)
!15378 = !DILocation(line: 0, scope: !14339, inlinedAt: !15379)
!15379 = distinct !DILocation(line: 856, column: 9, scope: !15367)
!15380 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15381)
!15381 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15379)
!15382 = !DILocation(line: 0, scope: !14348, inlinedAt: !15381)
!15383 = !DILocation(line: 857, column: 14, scope: !15367)
!15384 = !DILocation(line: 857, column: 2, scope: !15367)
!15385 = !DILocation(line: 0, scope: !14950, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 859, column: 9, scope: !15367)
!15387 = !DILocation(line: 196, column: 9, scope: !14950, inlinedAt: !15386)
!15388 = !DILocation(line: 859, column: 2, scope: !15367)
!15389 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2450, file: !2450, line: 862, type: !15390, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15392)
!15390 = !DISubroutineType(types: !15391)
!15391 = !{!2345, !2376}
!15392 = !{!15393, !15394, !15395, !15397}
!15393 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15389, file: !2450, line: 862, type: !2376)
!15394 = !DILocalVariable(name: "thread", scope: !15389, file: !2450, line: 864, type: !2345)
!15395 = !DILocalVariable(name: "__i", scope: !15396, file: !2450, line: 866, type: !14331)
!15396 = distinct !DILexicalBlock(scope: !15389, file: !2450, line: 866, column: 2)
!15397 = !DILocalVariable(name: "__key", scope: !15396, file: !2450, line: 866, type: !14331)
!15398 = !DILocation(line: 0, scope: !15389)
!15399 = !DILocation(line: 0, scope: !15396)
!15400 = !DILocation(line: 0, scope: !14339, inlinedAt: !15401)
!15401 = distinct !DILocation(line: 866, column: 2, scope: !15396)
!15402 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15403)
!15403 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15401)
!15404 = !DILocation(line: 0, scope: !14348, inlinedAt: !15403)
!15405 = !DILocation(line: 867, column: 12, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15407, file: !2450, line: 866, column: 26)
!15407 = distinct !DILexicalBlock(scope: !15396, file: !2450, line: 866, column: 2)
!15408 = !DILocation(line: 869, column: 14, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15406, file: !2450, line: 869, column: 7)
!15410 = !DILocation(line: 869, column: 7, scope: !15406)
!15411 = !DILocation(line: 870, column: 4, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !15409, file: !2450, line: 869, column: 23)
!15413 = !DILocation(line: 871, column: 3, scope: !15412)
!15414 = !DILocation(line: 0, scope: !14366, inlinedAt: !15415)
!15415 = distinct !DILocation(line: 866, column: 2, scope: !15407)
!15416 = !DILocation(line: 0, scope: !14374, inlinedAt: !15417)
!15417 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !15415)
!15418 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !15417)
!15419 = !DILocation(line: 874, column: 2, scope: !15389)
!15420 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2450, file: !2450, line: 877, type: !15390, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15421)
!15421 = !{!15422, !15423, !15424, !15426}
!15422 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15420, file: !2450, line: 877, type: !2376)
!15423 = !DILocalVariable(name: "thread", scope: !15420, file: !2450, line: 879, type: !2345)
!15424 = !DILocalVariable(name: "__i", scope: !15425, file: !2450, line: 881, type: !14331)
!15425 = distinct !DILexicalBlock(scope: !15420, file: !2450, line: 881, column: 2)
!15426 = !DILocalVariable(name: "__key", scope: !15425, file: !2450, line: 881, type: !14331)
!15427 = !DILocation(line: 0, scope: !15420)
!15428 = !DILocation(line: 0, scope: !15425)
!15429 = !DILocation(line: 0, scope: !14339, inlinedAt: !15430)
!15430 = distinct !DILocation(line: 881, column: 2, scope: !15425)
!15431 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15432)
!15432 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15430)
!15433 = !DILocation(line: 0, scope: !14348, inlinedAt: !15432)
!15434 = !DILocation(line: 882, column: 12, scope: !15435)
!15435 = distinct !DILexicalBlock(scope: !15436, file: !2450, line: 881, column: 26)
!15436 = distinct !DILexicalBlock(scope: !15425, file: !2450, line: 881, column: 2)
!15437 = !DILocation(line: 884, column: 14, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15435, file: !2450, line: 884, column: 7)
!15439 = !DILocation(line: 884, column: 7, scope: !15435)
!15440 = !DILocation(line: 885, column: 4, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15438, file: !2450, line: 884, column: 23)
!15442 = !DILocation(line: 886, column: 10, scope: !15441)
!15443 = !DILocation(line: 887, column: 3, scope: !15441)
!15444 = !DILocation(line: 0, scope: !14366, inlinedAt: !15445)
!15445 = distinct !DILocation(line: 881, column: 2, scope: !15436)
!15446 = !DILocation(line: 0, scope: !14374, inlinedAt: !15447)
!15447 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !15445)
!15448 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !15447)
!15449 = !DILocation(line: 890, column: 2, scope: !15420)
!15450 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2450, file: !2450, line: 893, type: !14297, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15451)
!15451 = !{!15452}
!15452 = !DILocalVariable(name: "thread", arg: 1, scope: !15450, file: !2450, line: 893, type: !2345)
!15453 = !DILocation(line: 0, scope: !15450)
!15454 = !DILocation(line: 0, scope: !15306, inlinedAt: !15455)
!15455 = distinct !DILocation(line: 895, column: 2, scope: !15450)
!15456 = !DILocation(line: 0, scope: !15310, inlinedAt: !15455)
!15457 = !DILocation(line: 0, scope: !14339, inlinedAt: !15458)
!15458 = distinct !DILocation(line: 788, column: 2, scope: !15310, inlinedAt: !15455)
!15459 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15460)
!15460 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15458)
!15461 = !DILocation(line: 0, scope: !14348, inlinedAt: !15460)
!15462 = !DILocation(line: 789, column: 3, scope: !15320, inlinedAt: !15455)
!15463 = !DILocation(line: 0, scope: !14366, inlinedAt: !15464)
!15464 = distinct !DILocation(line: 788, column: 2, scope: !15321, inlinedAt: !15455)
!15465 = !DILocation(line: 0, scope: !14374, inlinedAt: !15466)
!15466 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !15464)
!15467 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !15466)
!15468 = !DILocation(line: 896, column: 8, scope: !15450)
!15469 = !DILocation(line: 897, column: 1, scope: !15450)
!15470 = distinct !DISubprogram(name: "z_set_prio", scope: !2450, file: !2450, line: 902, type: !14659, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15471)
!15471 = !{!15472, !15473, !15474, !15475, !15477}
!15472 = !DILocalVariable(name: "thread", arg: 1, scope: !15470, file: !2450, line: 902, type: !2345)
!15473 = !DILocalVariable(name: "prio", arg: 2, scope: !15470, file: !2450, line: 902, type: !103)
!15474 = !DILocalVariable(name: "need_sched", scope: !15470, file: !2450, line: 904, type: !157)
!15475 = !DILocalVariable(name: "__i", scope: !15476, file: !2450, line: 906, type: !14331)
!15476 = distinct !DILexicalBlock(scope: !15470, file: !2450, line: 906, column: 2)
!15477 = !DILocalVariable(name: "__key", scope: !15476, file: !2450, line: 906, type: !14331)
!15478 = !DILocation(line: 0, scope: !15470)
!15479 = !DILocation(line: 0, scope: !15476)
!15480 = !DILocation(line: 0, scope: !14339, inlinedAt: !15481)
!15481 = distinct !DILocation(line: 906, column: 2, scope: !15476)
!15482 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15483)
!15483 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15481)
!15484 = !DILocation(line: 0, scope: !14348, inlinedAt: !15483)
!15485 = !DILocation(line: 907, column: 16, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15487, file: !2450, line: 906, column: 26)
!15487 = distinct !DILexicalBlock(scope: !15476, file: !2450, line: 906, column: 2)
!15488 = !DILocation(line: 909, column: 7, scope: !15486)
!15489 = !DILocation(line: 0, scope: !14508, inlinedAt: !15490)
!15490 = distinct !DILocation(line: 912, column: 5, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15492, file: !2450, line: 911, column: 63)
!15492 = distinct !DILexicalBlock(scope: !15493, file: !2450, line: 911, column: 8)
!15493 = distinct !DILexicalBlock(scope: !15494, file: !2450, line: 909, column: 19)
!15494 = distinct !DILexicalBlock(scope: !15486, file: !2450, line: 909, column: 7)
!15495 = !DILocation(line: 266, column: 28, scope: !14508, inlinedAt: !15490)
!15496 = !DILocation(line: 0, scope: !14516, inlinedAt: !15497)
!15497 = distinct !DILocation(line: 268, column: 3, scope: !14520, inlinedAt: !15490)
!15498 = !DILocation(line: 234, column: 2, scope: !14516, inlinedAt: !15497)
!15499 = !DILocation(line: 913, column: 23, scope: !15491)
!15500 = !DILocation(line: 0, scope: !14525, inlinedAt: !15501)
!15501 = distinct !DILocation(line: 914, column: 5, scope: !15491)
!15502 = !DILocation(line: 252, column: 28, scope: !14525, inlinedAt: !15501)
!15503 = !DILocation(line: 0, scope: !14532, inlinedAt: !15504)
!15504 = distinct !DILocation(line: 254, column: 3, scope: !14536, inlinedAt: !15501)
!15505 = !DILocation(line: 0, scope: !14539, inlinedAt: !15506)
!15506 = distinct !DILocation(line: 229, column: 2, scope: !14532, inlinedAt: !15504)
!15507 = !DILocation(line: 188, column: 2, scope: !14549, inlinedAt: !15506)
!15508 = !DILocation(line: 188, column: 2, scope: !14551, inlinedAt: !15506)
!15509 = !DILocation(line: 0, scope: !14549, inlinedAt: !15506)
!15510 = !DILocation(line: 189, column: 7, scope: !14554, inlinedAt: !15506)
!15511 = !DILocation(line: 189, column: 35, scope: !14554, inlinedAt: !15506)
!15512 = !DILocation(line: 189, column: 7, scope: !14555, inlinedAt: !15506)
!15513 = !DILocation(line: 190, column: 4, scope: !14559, inlinedAt: !15506)
!15514 = !DILocation(line: 192, column: 4, scope: !14559, inlinedAt: !15506)
!15515 = distinct !{!15515, !15507, !15516}
!15516 = !DILocation(line: 194, column: 2, scope: !14549, inlinedAt: !15506)
!15517 = !DILocation(line: 196, column: 2, scope: !14539, inlinedAt: !15506)
!15518 = !DILocation(line: 197, column: 1, scope: !14539, inlinedAt: !15506)
!15519 = !DILocation(line: 918, column: 4, scope: !15493)
!15520 = !DILocation(line: 919, column: 3, scope: !15493)
!15521 = !DILocation(line: 920, column: 22, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15494, file: !2450, line: 919, column: 10)
!15523 = !DILocation(line: 0, scope: !14366, inlinedAt: !15524)
!15524 = distinct !DILocation(line: 906, column: 2, scope: !15487)
!15525 = !DILocation(line: 0, scope: !14374, inlinedAt: !15526)
!15526 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !15524)
!15527 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !15526)
!15528 = !DILocation(line: 926, column: 2, scope: !15470)
!15529 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2450, file: !2450, line: 929, type: !15530, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15532)
!15530 = !DISubroutineType(types: !15531)
!15531 = !{null, !2345, !103}
!15532 = !{!15533, !15534, !15535}
!15533 = !DILocalVariable(name: "thread", arg: 1, scope: !15529, file: !2450, line: 929, type: !2345)
!15534 = !DILocalVariable(name: "prio", arg: 2, scope: !15529, file: !2450, line: 929, type: !103)
!15535 = !DILocalVariable(name: "need_sched", scope: !15529, file: !2450, line: 931, type: !157)
!15536 = !DILocation(line: 0, scope: !15529)
!15537 = !DILocation(line: 931, column: 20, scope: !15529)
!15538 = !DILocation(line: 935, column: 17, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15529, file: !2450, line: 935, column: 6)
!15540 = !DILocation(line: 935, column: 20, scope: !15539)
!15541 = !DILocation(line: 935, column: 35, scope: !15539)
!15542 = !DILocation(line: 935, column: 48, scope: !15539)
!15543 = !DILocation(line: 935, column: 6, scope: !15529)
!15544 = !DILocation(line: 936, column: 3, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15539, file: !2450, line: 935, column: 55)
!15546 = !DILocation(line: 937, column: 2, scope: !15545)
!15547 = !DILocation(line: 938, column: 1, scope: !15529)
!15548 = distinct !DISubprogram(name: "k_sched_lock", scope: !2450, file: !2450, line: 987, type: !3181, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15549)
!15549 = !{!15550, !15552}
!15550 = !DILocalVariable(name: "__i", scope: !15551, file: !2450, line: 989, type: !14331)
!15551 = distinct !DILexicalBlock(scope: !15548, file: !2450, line: 989, column: 2)
!15552 = !DILocalVariable(name: "__key", scope: !15551, file: !2450, line: 989, type: !14331)
!15553 = !DILocation(line: 0, scope: !15551)
!15554 = !DILocation(line: 0, scope: !14339, inlinedAt: !15555)
!15555 = distinct !DILocation(line: 989, column: 2, scope: !15551)
!15556 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15557)
!15557 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15555)
!15558 = !DILocation(line: 0, scope: !14348, inlinedAt: !15557)
!15559 = !DILocation(line: 992, column: 3, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15561, file: !2450, line: 989, column: 26)
!15561 = distinct !DILexicalBlock(scope: !15551, file: !2450, line: 989, column: 2)
!15562 = !DILocation(line: 0, scope: !14366, inlinedAt: !15563)
!15563 = distinct !DILocation(line: 989, column: 2, scope: !15561)
!15564 = !DILocation(line: 0, scope: !14374, inlinedAt: !15565)
!15565 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !15563)
!15566 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !15565)
!15567 = !DILocation(line: 994, column: 1, scope: !15548)
!15568 = distinct !DISubprogram(name: "z_sched_lock", scope: !12844, file: !12844, line: 251, type: !3181, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !317)
!15569 = !DILocation(line: 256, column: 4, scope: !15568)
!15570 = !DILocation(line: 256, column: 19, scope: !15568)
!15571 = !DILocation(line: 256, column: 2, scope: !15568)
!15572 = !DILocation(line: 258, column: 2, scope: !15573)
!15573 = distinct !DILexicalBlock(scope: !15568, file: !12844, line: 258, column: 2)
!15574 = !{i64 2154966151}
!15575 = !DILocation(line: 259, column: 1, scope: !15568)
!15576 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2450, file: !2450, line: 996, type: !3181, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15577)
!15577 = !{!15578, !15580}
!15578 = !DILocalVariable(name: "__i", scope: !15579, file: !2450, line: 998, type: !14331)
!15579 = distinct !DILexicalBlock(scope: !15576, file: !2450, line: 998, column: 2)
!15580 = !DILocalVariable(name: "__key", scope: !15579, file: !2450, line: 998, type: !14331)
!15581 = !DILocation(line: 0, scope: !15579)
!15582 = !DILocation(line: 0, scope: !14339, inlinedAt: !15583)
!15583 = distinct !DILocation(line: 998, column: 2, scope: !15579)
!15584 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15585)
!15585 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15583)
!15586 = !DILocation(line: 0, scope: !14348, inlinedAt: !15585)
!15587 = !DILocation(line: 1002, column: 5, scope: !15588)
!15588 = distinct !DILexicalBlock(scope: !15589, file: !2450, line: 998, column: 26)
!15589 = distinct !DILexicalBlock(scope: !15579, file: !2450, line: 998, column: 2)
!15590 = !DILocation(line: 1002, column: 20, scope: !15588)
!15591 = !DILocation(line: 1002, column: 3, scope: !15588)
!15592 = !DILocation(line: 1003, column: 3, scope: !15588)
!15593 = !DILocation(line: 0, scope: !14366, inlinedAt: !15594)
!15594 = distinct !DILocation(line: 998, column: 2, scope: !15589)
!15595 = !DILocation(line: 0, scope: !14374, inlinedAt: !15596)
!15596 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !15594)
!15597 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !15596)
!15598 = !DILocation(line: 1011, column: 2, scope: !15576)
!15599 = !DILocation(line: 1012, column: 1, scope: !15576)
!15600 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2450, file: !2450, line: 1014, type: !14647, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !317)
!15601 = !DILocation(line: 1028, column: 25, scope: !15600)
!15602 = !DILocation(line: 1028, column: 2, scope: !15600)
!15603 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2450, file: !2450, line: 1155, type: !15604, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15606)
!15604 = !DISubroutineType(types: !15605)
!15605 = !{!157, !2374, !2374}
!15606 = !{!15607, !15608, !15609, !15610, !15611}
!15607 = !DILocalVariable(name: "a", arg: 1, scope: !15603, file: !2450, line: 1155, type: !2374)
!15608 = !DILocalVariable(name: "b", arg: 2, scope: !15603, file: !2450, line: 1155, type: !2374)
!15609 = !DILocalVariable(name: "thread_a", scope: !15603, file: !2450, line: 1157, type: !2345)
!15610 = !DILocalVariable(name: "thread_b", scope: !15603, file: !2450, line: 1157, type: !2345)
!15611 = !DILocalVariable(name: "cmp", scope: !15603, file: !2450, line: 1158, type: !746)
!15612 = !DILocation(line: 0, scope: !15603)
!15613 = !DILocation(line: 1160, column: 13, scope: !15603)
!15614 = !DILocation(line: 1161, column: 13, scope: !15603)
!15615 = !DILocation(line: 1163, column: 8, scope: !15603)
!15616 = !DILocation(line: 1165, column: 10, scope: !15617)
!15617 = distinct !DILexicalBlock(scope: !15603, file: !2450, line: 1165, column: 6)
!15618 = !DILocation(line: 1165, column: 6, scope: !15603)
!15619 = !DILocation(line: 1167, column: 17, scope: !15620)
!15620 = distinct !DILexicalBlock(scope: !15617, file: !2450, line: 1167, column: 13)
!15621 = !DILocation(line: 1167, column: 13, scope: !15617)
!15622 = !DILocation(line: 1170, column: 25, scope: !15623)
!15623 = distinct !DILexicalBlock(scope: !15620, file: !2450, line: 1169, column: 9)
!15624 = !DILocation(line: 1170, column: 52, scope: !15623)
!15625 = !DILocation(line: 1170, column: 35, scope: !15623)
!15626 = !DILocation(line: 1170, column: 3, scope: !15623)
!15627 = !DILocation(line: 0, scope: !15617)
!15628 = !DILocation(line: 1173, column: 1, scope: !15603)
!15629 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2450, file: !2450, line: 1175, type: !15630, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15645)
!15630 = !DISubroutineType(types: !15631)
!15631 = !{null, !15632, !2345}
!15632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15633, size: 32)
!15633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15634, line: 37, size: 128, elements: !15635)
!15634 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15635 = !{!15636, !15644}
!15636 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15633, file: !15634, line: 38, baseType: !15637, size: 96)
!15637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !404, line: 83, size: 96, elements: !15638)
!15638 = !{!15639, !15640, !15643}
!15639 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15637, file: !404, line: 84, baseType: !2374, size: 32)
!15640 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15637, file: !404, line: 85, baseType: !15641, size: 32, offset: 32)
!15641 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !404, line: 81, baseType: !15642)
!15642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15604, size: 32)
!15643 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15637, file: !404, line: 86, baseType: !103, size: 32, offset: 64)
!15644 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15633, file: !15634, line: 39, baseType: !103, size: 32, offset: 96)
!15645 = !{!15646, !15647, !15648, !15649, !15658}
!15646 = !DILocalVariable(name: "pq", arg: 1, scope: !15629, file: !2450, line: 1175, type: !15632)
!15647 = !DILocalVariable(name: "thread", arg: 2, scope: !15629, file: !2450, line: 1175, type: !2345)
!15648 = !DILocalVariable(name: "t", scope: !15629, file: !2450, line: 1177, type: !2345)
!15649 = !DILocalVariable(name: "__f", scope: !15650, file: !2450, line: 1190, type: !15653)
!15650 = distinct !DILexicalBlock(scope: !15651, file: !2450, line: 1190, column: 3)
!15651 = distinct !DILexicalBlock(scope: !15652, file: !2450, line: 1189, column: 27)
!15652 = distinct !DILexicalBlock(scope: !15629, file: !2450, line: 1189, column: 6)
!15653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !404, line: 155, size: 96, elements: !15654)
!15654 = !{!15655, !15656, !15657}
!15655 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15653, file: !404, line: 156, baseType: !2445, size: 32)
!15656 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15653, file: !404, line: 157, baseType: !267, size: 32, offset: 32)
!15657 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15653, file: !404, line: 158, baseType: !746, size: 32, offset: 64)
!15658 = !DILocalVariable(name: "n", scope: !15659, file: !2450, line: 1190, type: !2374)
!15659 = distinct !DILexicalBlock(scope: !15660, file: !2450, line: 1190, column: 3)
!15660 = distinct !DILexicalBlock(scope: !15650, file: !2450, line: 1190, column: 3)
!15661 = !DILocation(line: 0, scope: !15629)
!15662 = !DILocation(line: 1181, column: 31, scope: !15629)
!15663 = !DILocation(line: 1181, column: 45, scope: !15629)
!15664 = !DILocation(line: 1181, column: 15, scope: !15629)
!15665 = !DILocation(line: 1181, column: 25, scope: !15629)
!15666 = !DILocation(line: 1189, column: 11, scope: !15652)
!15667 = !DILocation(line: 1189, column: 7, scope: !15652)
!15668 = !DILocation(line: 1189, column: 6, scope: !15629)
!15669 = !DILocation(line: 1190, column: 3, scope: !15650)
!15670 = !DILocation(line: 1190, column: 3, scope: !15659)
!15671 = !DILocation(line: 0, scope: !15659)
!15672 = !DILocation(line: 1190, column: 3, scope: !15660)
!15673 = !DILocation(line: 1193, column: 2, scope: !15651)
!15674 = !DILocation(line: 1191, column: 42, scope: !15675)
!15675 = distinct !DILexicalBlock(scope: !15660, file: !2450, line: 1190, column: 54)
!15676 = !DILocation(line: 1191, column: 12, scope: !15675)
!15677 = !DILocation(line: 1191, column: 22, scope: !15675)
!15678 = distinct !{!15678, !15669, !15679}
!15679 = !DILocation(line: 1192, column: 3, scope: !15650)
!15680 = !DILocation(line: 1195, column: 17, scope: !15629)
!15681 = !DILocation(line: 1195, column: 37, scope: !15629)
!15682 = !DILocation(line: 1195, column: 2, scope: !15629)
!15683 = !DILocation(line: 1196, column: 1, scope: !15629)
!15684 = !DISubprogram(name: "z_rb_foreach_next", scope: !404, file: !404, line: 176, type: !15685, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15685 = !DISubroutineType(types: !15686)
!15686 = !{!2374, !15687, !15688}
!15687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15637, size: 32)
!15688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15653, size: 32)
!15689 = !DISubprogram(name: "rb_insert", scope: !404, file: !404, line: 105, type: !15690, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15690 = !DISubroutineType(types: !15691)
!15691 = !{null, !15687, !2374}
!15692 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2450, file: !2450, line: 1198, type: !15630, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15693)
!15693 = !{!15694, !15695}
!15694 = !DILocalVariable(name: "pq", arg: 1, scope: !15692, file: !2450, line: 1198, type: !15632)
!15695 = !DILocalVariable(name: "thread", arg: 2, scope: !15692, file: !2450, line: 1198, type: !2345)
!15696 = !DILocation(line: 0, scope: !15692)
!15697 = !DILocation(line: 1202, column: 17, scope: !15692)
!15698 = !DILocation(line: 1202, column: 37, scope: !15692)
!15699 = !DILocation(line: 1202, column: 2, scope: !15692)
!15700 = !DILocation(line: 1204, column: 16, scope: !15701)
!15701 = distinct !DILexicalBlock(scope: !15692, file: !2450, line: 1204, column: 6)
!15702 = !DILocation(line: 1204, column: 7, scope: !15701)
!15703 = !DILocation(line: 1204, column: 6, scope: !15692)
!15704 = !DILocation(line: 1205, column: 7, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15701, file: !2450, line: 1204, column: 22)
!15706 = !DILocation(line: 1205, column: 22, scope: !15705)
!15707 = !DILocation(line: 1206, column: 2, scope: !15705)
!15708 = !DILocation(line: 1207, column: 1, scope: !15692)
!15709 = !DISubprogram(name: "rb_remove", scope: !404, file: !404, line: 110, type: !15690, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15710 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2450, file: !2450, line: 1209, type: !15711, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15713)
!15711 = !DISubroutineType(types: !15712)
!15712 = !{!2345, !15632}
!15713 = !{!15714, !15715, !15716}
!15714 = !DILocalVariable(name: "pq", arg: 1, scope: !15710, file: !2450, line: 1209, type: !15632)
!15715 = !DILocalVariable(name: "thread", scope: !15710, file: !2450, line: 1211, type: !2345)
!15716 = !DILocalVariable(name: "n", scope: !15710, file: !2450, line: 1212, type: !2374)
!15717 = !DILocation(line: 0, scope: !15710)
!15718 = !DILocation(line: 1212, column: 37, scope: !15710)
!15719 = !DILocation(line: 1212, column: 21, scope: !15710)
!15720 = !DILocation(line: 1217, column: 2, scope: !15710)
!15721 = distinct !DISubprogram(name: "rb_get_min", scope: !404, file: !404, line: 115, type: !15722, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15724)
!15722 = !DISubroutineType(types: !15723)
!15723 = !{!2374, !15687}
!15724 = !{!15725}
!15725 = !DILocalVariable(name: "tree", arg: 1, scope: !15721, file: !404, line: 115, type: !15687)
!15726 = !DILocation(line: 0, scope: !15721)
!15727 = !DILocation(line: 117, column: 9, scope: !15721)
!15728 = !DILocation(line: 117, column: 2, scope: !15721)
!15729 = !DISubprogram(name: "z_rb_get_minmax", scope: !404, file: !404, line: 100, type: !15730, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15730 = !DISubroutineType(types: !15731)
!15731 = !{!2374, !15687, !154}
!15732 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2450, file: !2450, line: 1246, type: !15733, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15743)
!15733 = !DISubroutineType(types: !15734)
!15734 = !{!2345, !15735}
!15735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15736, size: 32)
!15736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15634, line: 53, size: 2080, elements: !15737)
!15737 = !{!15738, !15742}
!15738 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15736, file: !15634, line: 54, baseType: !15739, size: 2048)
!15739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2381, size: 2048, elements: !15740)
!15740 = !{!15741}
!15741 = !DISubrange(count: 32)
!15742 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15736, file: !15634, line: 55, baseType: !32, size: 32, offset: 2048)
!15743 = !{!15744, !15745, !15746, !15747}
!15744 = !DILocalVariable(name: "pq", arg: 1, scope: !15732, file: !2450, line: 1246, type: !15735)
!15745 = !DILocalVariable(name: "thread", scope: !15732, file: !2450, line: 1252, type: !2345)
!15746 = !DILocalVariable(name: "l", scope: !15732, file: !2450, line: 1253, type: !14542)
!15747 = !DILocalVariable(name: "n", scope: !15732, file: !2450, line: 1254, type: !2446)
!15748 = !DILocation(line: 0, scope: !15732)
!15749 = !DILocation(line: 1248, column: 11, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !15732, file: !2450, line: 1248, column: 6)
!15751 = !DILocation(line: 1248, column: 7, scope: !15750)
!15752 = !DILocation(line: 1248, column: 6, scope: !15732)
!15753 = !DILocation(line: 1253, column: 31, scope: !15732)
!15754 = !DILocation(line: 1253, column: 20, scope: !15732)
!15755 = !DILocation(line: 1254, column: 19, scope: !15732)
!15756 = !DILocation(line: 1260, column: 1, scope: !15732)
!15757 = distinct !DISubprogram(name: "z_unpend_all", scope: !2450, file: !2450, line: 1262, type: !15758, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15760)
!15758 = !DISubroutineType(types: !15759)
!15759 = !{!103, !2376}
!15760 = !{!15761, !15762, !15763}
!15761 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15757, file: !2450, line: 1262, type: !2376)
!15762 = !DILocalVariable(name: "need_sched", scope: !15757, file: !2450, line: 1264, type: !103)
!15763 = !DILocalVariable(name: "thread", scope: !15757, file: !2450, line: 1265, type: !2345)
!15764 = !DILocation(line: 0, scope: !15757)
!15765 = !DILocation(line: 1267, column: 19, scope: !15757)
!15766 = !DILocation(line: 1267, column: 41, scope: !15757)
!15767 = !DILocation(line: 1267, column: 2, scope: !15757)
!15768 = !DILocation(line: 1268, column: 3, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15757, file: !2450, line: 1267, column: 50)
!15770 = !DILocation(line: 1269, column: 3, scope: !15769)
!15771 = distinct !{!15771, !15767, !15772}
!15772 = !DILocation(line: 1271, column: 2, scope: !15757)
!15773 = !DILocation(line: 1273, column: 2, scope: !15757)
!15774 = distinct !DISubprogram(name: "z_waitq_head", scope: !13168, file: !13168, line: 52, type: !15390, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15775)
!15775 = !{!15776}
!15776 = !DILocalVariable(name: "w", arg: 1, scope: !15774, file: !13168, line: 52, type: !2376)
!15777 = !DILocation(line: 0, scope: !15774)
!15778 = !DILocation(line: 54, column: 52, scope: !15774)
!15779 = !DILocation(line: 54, column: 28, scope: !15774)
!15780 = !DILocation(line: 54, column: 9, scope: !15774)
!15781 = !DILocation(line: 54, column: 2, scope: !15774)
!15782 = distinct !DISubprogram(name: "init_ready_q", scope: !2450, file: !2450, line: 1276, type: !15783, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15790)
!15783 = !DISubroutineType(types: !15784)
!15784 = !{null, !15785}
!15785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15786, size: 32)
!15786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !320, line: 83, size: 96, elements: !15787)
!15787 = !{!15788, !15789}
!15788 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15786, file: !320, line: 86, baseType: !2345, size: 32)
!15789 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15786, file: !320, line: 90, baseType: !2381, size: 64, offset: 32)
!15790 = !{!15791}
!15791 = !DILocalVariable(name: "rq", arg: 1, scope: !15782, file: !2450, line: 1276, type: !15785)
!15792 = !DILocation(line: 0, scope: !15782)
!15793 = !DILocation(line: 1289, column: 22, scope: !15782)
!15794 = !DILocation(line: 1289, column: 2, scope: !15782)
!15795 = !DILocation(line: 1291, column: 1, scope: !15782)
!15796 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !15797, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15799)
!15797 = !DISubroutineType(types: !15798)
!15798 = !{null, !14542}
!15799 = !{!15800}
!15800 = !DILocalVariable(name: "list", arg: 1, scope: !15796, file: !325, line: 197, type: !14542)
!15801 = !DILocation(line: 0, scope: !15796)
!15802 = !DILocation(line: 199, column: 8, scope: !15796)
!15803 = !DILocation(line: 199, column: 13, scope: !15796)
!15804 = !DILocation(line: 200, column: 8, scope: !15796)
!15805 = !DILocation(line: 200, column: 13, scope: !15796)
!15806 = !DILocation(line: 201, column: 1, scope: !15796)
!15807 = distinct !DISubprogram(name: "z_sched_init", scope: !2450, file: !2450, line: 1293, type: !3181, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !317)
!15808 = !DILocation(line: 1302, column: 2, scope: !15807)
!15809 = !DILocation(line: 1306, column: 2, scope: !15807)
!15810 = !DILocation(line: 1309, column: 1, scope: !15807)
!15811 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2450, file: !2450, line: 1311, type: !15812, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15815)
!15812 = !DISubroutineType(types: !15813)
!15813 = !{!103, !15814}
!15814 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !2345)
!15815 = !{!15816}
!15816 = !DILocalVariable(name: "thread", arg: 1, scope: !15811, file: !2450, line: 1311, type: !15814)
!15817 = !DILocation(line: 0, scope: !15811)
!15818 = !DILocation(line: 1313, column: 22, scope: !15811)
!15819 = !DILocation(line: 1313, column: 9, scope: !15811)
!15820 = !DILocation(line: 1313, column: 2, scope: !15811)
!15821 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2450, file: !2450, line: 1325, type: !15822, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15824)
!15822 = !DISubroutineType(types: !15823)
!15823 = !{null, !15814, !103}
!15824 = !{!15825, !15826, !15827}
!15825 = !DILocalVariable(name: "thread", arg: 1, scope: !15821, file: !2450, line: 1325, type: !15814)
!15826 = !DILocalVariable(name: "prio", arg: 2, scope: !15821, file: !2450, line: 1325, type: !103)
!15827 = !DILocalVariable(name: "th", scope: !15821, file: !2450, line: 1334, type: !2345)
!15828 = !DILocation(line: 0, scope: !15821)
!15829 = !DILocation(line: 1336, column: 2, scope: !15821)
!15830 = !DILocation(line: 1337, column: 1, scope: !15821)
!15831 = distinct !DISubprogram(name: "k_can_yield", scope: !2450, file: !2450, line: 1384, type: !6748, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !317)
!15832 = !DILocation(line: 1386, column: 11, scope: !15831)
!15833 = !DILocation(line: 1386, column: 29, scope: !15831)
!15834 = !DILocation(line: 1386, column: 32, scope: !15831)
!15835 = !DILocation(line: 1386, column: 46, scope: !15831)
!15836 = !DILocation(line: 1387, column: 28, scope: !15831)
!15837 = !DILocation(line: 1387, column: 4, scope: !15831)
!15838 = !DILocation(line: 1386, column: 2, scope: !15831)
!15839 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !296, file: !296, line: 989, type: !6748, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !317)
!15840 = !DILocation(line: 993, column: 10, scope: !15839)
!15841 = !DILocation(line: 993, column: 2, scope: !15839)
!15842 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2450, file: !2450, line: 1390, type: !3181, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15843)
!15843 = !{!15844}
!15844 = !DILocalVariable(name: "key", scope: !15842, file: !2450, line: 1396, type: !14331)
!15845 = !DILocation(line: 0, scope: !14339, inlinedAt: !15846)
!15846 = distinct !DILocation(line: 1396, column: 25, scope: !15842)
!15847 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15848)
!15848 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15846)
!15849 = !DILocation(line: 0, scope: !14348, inlinedAt: !15848)
!15850 = !DILocation(line: 0, scope: !15842)
!15851 = !DILocation(line: 1400, column: 18, scope: !15852)
!15852 = distinct !DILexicalBlock(scope: !15853, file: !2450, line: 1399, column: 36)
!15853 = distinct !DILexicalBlock(scope: !15842, file: !2450, line: 1398, column: 6)
!15854 = !DILocation(line: 0, scope: !14508, inlinedAt: !15855)
!15855 = distinct !DILocation(line: 1400, column: 3, scope: !15852)
!15856 = !DILocation(line: 266, column: 15, scope: !14508, inlinedAt: !15855)
!15857 = !DILocation(line: 266, column: 28, scope: !14508, inlinedAt: !15855)
!15858 = !DILocation(line: 0, scope: !14516, inlinedAt: !15859)
!15859 = distinct !DILocation(line: 268, column: 3, scope: !14520, inlinedAt: !15855)
!15860 = !DILocation(line: 234, column: 2, scope: !14516, inlinedAt: !15859)
!15861 = !DILocation(line: 1402, column: 15, scope: !15842)
!15862 = !DILocation(line: 0, scope: !14525, inlinedAt: !15863)
!15863 = distinct !DILocation(line: 1402, column: 2, scope: !15842)
!15864 = !DILocation(line: 252, column: 15, scope: !14525, inlinedAt: !15863)
!15865 = !DILocation(line: 252, column: 28, scope: !14525, inlinedAt: !15863)
!15866 = !DILocation(line: 0, scope: !14532, inlinedAt: !15867)
!15867 = distinct !DILocation(line: 254, column: 3, scope: !14536, inlinedAt: !15863)
!15868 = !DILocation(line: 0, scope: !14539, inlinedAt: !15869)
!15869 = distinct !DILocation(line: 229, column: 2, scope: !14532, inlinedAt: !15867)
!15870 = !DILocation(line: 188, column: 2, scope: !14549, inlinedAt: !15869)
!15871 = !DILocation(line: 188, column: 2, scope: !14551, inlinedAt: !15869)
!15872 = !DILocation(line: 0, scope: !14549, inlinedAt: !15869)
!15873 = !DILocation(line: 189, column: 7, scope: !14554, inlinedAt: !15869)
!15874 = !DILocation(line: 189, column: 35, scope: !14554, inlinedAt: !15869)
!15875 = !DILocation(line: 189, column: 7, scope: !14555, inlinedAt: !15869)
!15876 = !DILocation(line: 191, column: 21, scope: !14559, inlinedAt: !15869)
!15877 = !DILocation(line: 190, column: 4, scope: !14559, inlinedAt: !15869)
!15878 = !DILocation(line: 192, column: 4, scope: !14559, inlinedAt: !15869)
!15879 = distinct !{!15879, !15870, !15880}
!15880 = !DILocation(line: 194, column: 2, scope: !14549, inlinedAt: !15869)
!15881 = !DILocation(line: 196, column: 37, scope: !14539, inlinedAt: !15869)
!15882 = !DILocation(line: 196, column: 2, scope: !14539, inlinedAt: !15869)
!15883 = !DILocation(line: 197, column: 1, scope: !14539, inlinedAt: !15869)
!15884 = !DILocation(line: 1403, column: 2, scope: !15842)
!15885 = !DILocation(line: 0, scope: !14950, inlinedAt: !15886)
!15886 = distinct !DILocation(line: 1404, column: 2, scope: !15842)
!15887 = !DILocation(line: 196, column: 9, scope: !14950, inlinedAt: !15886)
!15888 = !DILocation(line: 1405, column: 1, scope: !15842)
!15889 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2450, file: !2450, line: 1459, type: !15890, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15892)
!15890 = !DISubroutineType(types: !15891)
!15891 = !{!746, !15130}
!15892 = !{!15893, !15894, !15895}
!15893 = !DILocalVariable(name: "timeout", arg: 1, scope: !15889, file: !2450, line: 1459, type: !15130)
!15894 = !DILocalVariable(name: "ticks", scope: !15889, file: !2450, line: 1461, type: !200)
!15895 = !DILocalVariable(name: "ret", scope: !15889, file: !2450, line: 1480, type: !746)
!15896 = !DILocation(line: 0, scope: !15889)
!15897 = !DILocation(line: 1468, column: 6, scope: !15898)
!15898 = distinct !DILexicalBlock(scope: !15889, file: !2450, line: 1468, column: 6)
!15899 = !DILocation(line: 1468, column: 6, scope: !15889)
!15900 = !DILocation(line: 1469, column: 20, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15898, file: !2450, line: 1468, column: 40)
!15902 = !DILocation(line: 1469, column: 3, scope: !15901)
!15903 = !DILocation(line: 1473, column: 3, scope: !15901)
!15904 = !DILocation(line: 1478, column: 10, scope: !15889)
!15905 = !DILocation(line: 1480, column: 16, scope: !15889)
!15906 = !DILocation(line: 1485, column: 1, scope: !15889)
!15907 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3617, file: !3617, line: 310, type: !15908, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15910)
!15908 = !DISubroutineType(types: !15909)
!15909 = !{null, !15814}
!15910 = !{!15911}
!15911 = !DILocalVariable(name: "thread", arg: 1, scope: !15907, file: !3617, line: 310, type: !15814)
!15912 = !DILocation(line: 0, scope: !15907)
!15913 = !DILocation(line: 319, column: 2, scope: !15914)
!15914 = distinct !DILexicalBlock(scope: !15907, file: !3617, line: 319, column: 2)
!15915 = !{i64 2154884540}
!15916 = !DILocation(line: 320, column: 2, scope: !15907)
!15917 = !DILocation(line: 321, column: 1, scope: !15907)
!15918 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2450, file: !2450, line: 1415, type: !15919, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15921)
!15919 = !DISubroutineType(types: !15920)
!15920 = !{!746, !200}
!15921 = !{!15922, !15923, !15924, !15925}
!15922 = !DILocalVariable(name: "ticks", arg: 1, scope: !15918, file: !2450, line: 1415, type: !200)
!15923 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15918, file: !2450, line: 1418, type: !121)
!15924 = !DILocalVariable(name: "timeout", scope: !15918, file: !2450, line: 1430, type: !15130)
!15925 = !DILocalVariable(name: "key", scope: !15918, file: !2450, line: 1437, type: !14331)
!15926 = !DILocation(line: 0, scope: !15918)
!15927 = !DILocation(line: 1425, column: 12, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !15918, file: !2450, line: 1425, column: 6)
!15929 = !DILocation(line: 1425, column: 6, scope: !15918)
!15930 = !DILocation(line: 1426, column: 3, scope: !15931)
!15931 = distinct !DILexicalBlock(scope: !15928, file: !2450, line: 1425, column: 18)
!15932 = !DILocation(line: 1427, column: 3, scope: !15931)
!15933 = !DILocation(line: 1431, column: 24, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15918, file: !2450, line: 1431, column: 6)
!15935 = !DILocation(line: 1431, column: 6, scope: !15918)
!15936 = !DILocation(line: 1432, column: 35, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15934, file: !2450, line: 1431, column: 30)
!15938 = !DILocation(line: 1432, column: 27, scope: !15937)
!15939 = !DILocation(line: 1433, column: 2, scope: !15937)
!15940 = !DILocation(line: 1434, column: 27, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15934, file: !2450, line: 1433, column: 9)
!15942 = !DILocation(line: 0, scope: !15934)
!15943 = !DILocation(line: 0, scope: !14339, inlinedAt: !15944)
!15944 = distinct !DILocation(line: 1437, column: 25, scope: !15918)
!15945 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !15946)
!15946 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !15944)
!15947 = !DILocation(line: 0, scope: !14348, inlinedAt: !15946)
!15948 = !DILocation(line: 1440, column: 20, scope: !15918)
!15949 = !DILocation(line: 1440, column: 18, scope: !15918)
!15950 = !DILocation(line: 1442, column: 2, scope: !15918)
!15951 = !DILocation(line: 1443, column: 23, scope: !15918)
!15952 = !DILocation(line: 1443, column: 2, scope: !15918)
!15953 = !DILocation(line: 1444, column: 29, scope: !15918)
!15954 = !DILocation(line: 1444, column: 2, scope: !15918)
!15955 = !DILocation(line: 0, scope: !14950, inlinedAt: !15956)
!15956 = distinct !DILocation(line: 1446, column: 8, scope: !15918)
!15957 = !DILocation(line: 196, column: 9, scope: !14950, inlinedAt: !15956)
!15958 = !DILocation(line: 1450, column: 10, scope: !15918)
!15959 = !DILocation(line: 1450, column: 45, scope: !15918)
!15960 = !DILocation(line: 1450, column: 43, scope: !15918)
!15961 = !DILocation(line: 1451, column: 6, scope: !15918)
!15962 = !DILocation(line: 1457, column: 1, scope: !15918)
!15963 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13403, file: !13403, line: 1103, type: !13404, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15964)
!15964 = !{!15965}
!15965 = !DILocalVariable(name: "t", arg: 1, scope: !15963, file: !13403, line: 1103, type: !1604)
!15966 = !DILocation(line: 0, scope: !15963)
!15967 = !DILocation(line: 0, scope: !14386, inlinedAt: !15968)
!15968 = distinct !DILocation(line: 1106, column: 9, scope: !15963)
!15969 = !DILocation(line: 139, column: 13, scope: !15970, inlinedAt: !15968)
!15970 = distinct !DILexicalBlock(scope: !15971, file: !13403, line: 138, column: 10)
!15971 = distinct !DILexicalBlock(scope: !15972, file: !13403, line: 136, column: 7)
!15972 = distinct !DILexicalBlock(scope: !14407, file: !13403, line: 134, column: 17)
!15973 = !DILocation(line: 1106, column: 2, scope: !15963)
!15974 = distinct !DISubprogram(name: "k_yield", scope: !3617, file: !3617, line: 140, type: !3181, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !317)
!15975 = !DILocation(line: 148, column: 2, scope: !15976)
!15976 = distinct !DILexicalBlock(scope: !15974, file: !3617, line: 148, column: 2)
!15977 = !{i64 2154883860}
!15978 = !DILocation(line: 149, column: 2, scope: !15974)
!15979 = !DILocation(line: 150, column: 1, scope: !15974)
!15980 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2450, file: !2450, line: 1495, type: !15981, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15983)
!15981 = !DISubroutineType(types: !15982)
!15982 = !{!746, !103}
!15983 = !{!15984, !15985}
!15984 = !DILocalVariable(name: "us", arg: 1, scope: !15980, file: !2450, line: 1495, type: !103)
!15985 = !DILocalVariable(name: "ticks", scope: !15980, file: !2450, line: 1497, type: !746)
!15986 = !DILocation(line: 0, scope: !15980)
!15987 = !DILocation(line: 1501, column: 31, scope: !15980)
!15988 = !DILocation(line: 1501, column: 10, scope: !15980)
!15989 = !DILocation(line: 1502, column: 23, scope: !15980)
!15990 = !DILocation(line: 1502, column: 10, scope: !15980)
!15991 = !DILocation(line: 1506, column: 31, scope: !15980)
!15992 = !DILocation(line: 1506, column: 9, scope: !15980)
!15993 = !DILocation(line: 1506, column: 2, scope: !15980)
!15994 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13403, file: !13403, line: 571, type: !13404, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15995)
!15995 = !{!15996}
!15996 = !DILocalVariable(name: "t", arg: 1, scope: !15994, file: !13403, line: 571, type: !1604)
!15997 = !DILocation(line: 0, scope: !15994)
!15998 = !DILocation(line: 0, scope: !14386, inlinedAt: !15999)
!15999 = distinct !DILocation(line: 574, column: 9, scope: !15994)
!16000 = !DILocation(line: 135, column: 5, scope: !15972, inlinedAt: !15999)
!16001 = !DILocation(line: 139, column: 13, scope: !15970, inlinedAt: !15999)
!16002 = !DILocation(line: 574, column: 2, scope: !15994)
!16003 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13403, file: !13403, line: 1187, type: !13404, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16004)
!16004 = !{!16005}
!16005 = !DILocalVariable(name: "t", arg: 1, scope: !16003, file: !13403, line: 1187, type: !1604)
!16006 = !DILocation(line: 0, scope: !16003)
!16007 = !DILocation(line: 0, scope: !14386, inlinedAt: !16008)
!16008 = distinct !DILocation(line: 1190, column: 9, scope: !16003)
!16009 = !DILocation(line: 145, column: 13, scope: !16010, inlinedAt: !16008)
!16010 = distinct !DILexicalBlock(scope: !14404, file: !13403, line: 144, column: 10)
!16011 = !DILocation(line: 1190, column: 2, scope: !16003)
!16012 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2450, file: !2450, line: 1517, type: !15908, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16013)
!16013 = !{!16014}
!16014 = !DILocalVariable(name: "thread", arg: 1, scope: !16012, file: !2450, line: 1517, type: !15814)
!16015 = !DILocation(line: 0, scope: !16012)
!16016 = !DILocation(line: 1521, column: 6, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16012, file: !2450, line: 1521, column: 6)
!16018 = !DILocation(line: 1521, column: 6, scope: !16012)
!16019 = !DILocation(line: 1525, column: 6, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !16012, file: !2450, line: 1525, column: 6)
!16021 = !DILocation(line: 1525, column: 37, scope: !16020)
!16022 = !DILocation(line: 1525, column: 6, scope: !16012)
!16023 = !DILocation(line: 1527, column: 20, scope: !16024)
!16024 = distinct !DILexicalBlock(scope: !16025, file: !2450, line: 1527, column: 7)
!16025 = distinct !DILexicalBlock(scope: !16020, file: !2450, line: 1525, column: 42)
!16026 = !DILocation(line: 1527, column: 33, scope: !16024)
!16027 = !DILocation(line: 1527, column: 7, scope: !16025)
!16028 = !DILocation(line: 1532, column: 2, scope: !16012)
!16029 = !DILocation(line: 1533, column: 2, scope: !16012)
!16030 = !DILocation(line: 1031, column: 3, scope: !14983, inlinedAt: !16031)
!16031 = distinct !DILocation(line: 48, column: 10, scope: !14987, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 1537, column: 7, scope: !16033)
!16033 = distinct !DILexicalBlock(scope: !16012, file: !2450, line: 1537, column: 6)
!16034 = !DILocation(line: 0, scope: !14983, inlinedAt: !16031)
!16035 = !DILocation(line: 48, column: 9, scope: !14987, inlinedAt: !16032)
!16036 = !DILocation(line: 1537, column: 6, scope: !16012)
!16037 = !DILocation(line: 1538, column: 3, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16033, file: !2450, line: 1537, column: 25)
!16039 = !DILocation(line: 1539, column: 2, scope: !16038)
!16040 = !DILocation(line: 1540, column: 1, scope: !16012)
!16041 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12844, file: !12844, line: 101, type: !14457, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16042)
!16042 = !{!16043}
!16043 = !DILocalVariable(name: "thread", arg: 1, scope: !16041, file: !12844, line: 101, type: !2345)
!16044 = !DILocation(line: 0, scope: !16041)
!16045 = !DILocation(line: 103, column: 23, scope: !16041)
!16046 = !DILocation(line: 103, column: 36, scope: !16041)
!16047 = !DILocation(line: 103, column: 55, scope: !16041)
!16048 = !DILocation(line: 103, column: 2, scope: !16041)
!16049 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2450, file: !2450, line: 1567, type: !16050, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16052)
!16050 = !DISubroutineType(types: !16051)
!16051 = !{!15814}
!16052 = !{!16053}
!16053 = !DILocalVariable(name: "ret", scope: !16049, file: !2450, line: 1577, type: !15814)
!16054 = !DILocation(line: 1577, column: 30, scope: !16049)
!16055 = !DILocation(line: 0, scope: !16049)
!16056 = !DILocation(line: 1582, column: 2, scope: !16049)
!16057 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2450, file: !2450, line: 1593, type: !7022, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !317)
!16058 = !DILocation(line: 1031, column: 3, scope: !14983, inlinedAt: !16059)
!16059 = distinct !DILocation(line: 48, column: 10, scope: !14987, inlinedAt: !16060)
!16060 = distinct !DILocation(line: 1595, column: 10, scope: !16057)
!16061 = !DILocation(line: 0, scope: !14983, inlinedAt: !16059)
!16062 = !DILocation(line: 48, column: 9, scope: !14987, inlinedAt: !16060)
!16063 = !DILocation(line: 1595, column: 27, scope: !16057)
!16064 = !DILocation(line: 1595, column: 41, scope: !16057)
!16065 = !DILocation(line: 1595, column: 30, scope: !16057)
!16066 = !DILocation(line: 1595, column: 2, scope: !16057)
!16067 = distinct !DISubprogram(name: "z_thread_abort", scope: !2450, file: !2450, line: 1725, type: !14297, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16068)
!16068 = !{!16069, !16070}
!16069 = !DILocalVariable(name: "thread", arg: 1, scope: !16067, file: !2450, line: 1725, type: !2345)
!16070 = !DILocalVariable(name: "key", scope: !16067, file: !2450, line: 1727, type: !14331)
!16071 = !DILocation(line: 0, scope: !16067)
!16072 = !DILocation(line: 0, scope: !14339, inlinedAt: !16073)
!16073 = distinct !DILocation(line: 1727, column: 25, scope: !16067)
!16074 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !16075)
!16075 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !16073)
!16076 = !DILocation(line: 0, scope: !14348, inlinedAt: !16075)
!16077 = !DILocation(line: 1729, column: 20, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16067, file: !2450, line: 1729, column: 6)
!16079 = !DILocation(line: 1729, column: 33, scope: !16078)
!16080 = !DILocation(line: 1729, column: 48, scope: !16078)
!16081 = !DILocation(line: 1729, column: 6, scope: !16067)
!16082 = !DILocation(line: 0, scope: !14366, inlinedAt: !16083)
!16083 = distinct !DILocation(line: 1730, column: 3, scope: !16084)
!16084 = distinct !DILexicalBlock(scope: !16078, file: !2450, line: 1729, column: 54)
!16085 = !DILocation(line: 0, scope: !14374, inlinedAt: !16086)
!16086 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !16083)
!16087 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !16086)
!16088 = !DILocation(line: 1732, column: 3, scope: !16089)
!16089 = distinct !DILexicalBlock(scope: !16084, file: !2450, line: 1732, column: 3)
!16090 = !{i64 2155621270, i64 2155621286, i64 2155621312, i64 2155621340, i64 2155621360}
!16091 = !DILocation(line: 1733, column: 3, scope: !16084)
!16092 = !DILocation(line: 1736, column: 20, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !16067, file: !2450, line: 1736, column: 6)
!16094 = !DILocation(line: 1736, column: 33, scope: !16093)
!16095 = !DILocation(line: 1736, column: 49, scope: !16093)
!16096 = !DILocation(line: 1736, column: 6, scope: !16067)
!16097 = !DILocation(line: 0, scope: !14366, inlinedAt: !16098)
!16098 = distinct !DILocation(line: 1737, column: 3, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16093, file: !2450, line: 1736, column: 56)
!16100 = !DILocation(line: 0, scope: !14374, inlinedAt: !16101)
!16101 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !16098)
!16102 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !16101)
!16103 = !DILocation(line: 1738, column: 3, scope: !16099)
!16104 = !DILocation(line: 1775, column: 2, scope: !16067)
!16105 = !DILocation(line: 1776, column: 16, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16067, file: !2450, line: 1776, column: 6)
!16107 = !DILocation(line: 1776, column: 13, scope: !16106)
!16108 = !DILocation(line: 1776, column: 25, scope: !16106)
!16109 = !DILocation(line: 1031, column: 3, scope: !14983, inlinedAt: !16110)
!16110 = distinct !DILocation(line: 48, column: 10, scope: !14987, inlinedAt: !16111)
!16111 = distinct !DILocation(line: 1776, column: 29, scope: !16106)
!16112 = !DILocation(line: 0, scope: !14983, inlinedAt: !16110)
!16113 = !DILocation(line: 48, column: 9, scope: !14987, inlinedAt: !16111)
!16114 = !DILocation(line: 1776, column: 6, scope: !16067)
!16115 = !DILocation(line: 0, scope: !14950, inlinedAt: !16116)
!16116 = distinct !DILocation(line: 1777, column: 3, scope: !16117)
!16117 = distinct !DILexicalBlock(scope: !16106, file: !2450, line: 1776, column: 47)
!16118 = !DILocation(line: 196, column: 9, scope: !14950, inlinedAt: !16116)
!16119 = !DILocation(line: 1779, column: 2, scope: !16117)
!16120 = !DILocation(line: 0, scope: !14366, inlinedAt: !16121)
!16121 = distinct !DILocation(line: 1780, column: 2, scope: !16067)
!16122 = !DILocation(line: 0, scope: !14374, inlinedAt: !16123)
!16123 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !16121)
!16124 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !16123)
!16125 = !DILocation(line: 1781, column: 1, scope: !16067)
!16126 = distinct !DISubprogram(name: "end_thread", scope: !2450, file: !2450, line: 1690, type: !14297, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16127)
!16127 = !{!16128}
!16128 = !DILocalVariable(name: "thread", arg: 1, scope: !16126, file: !2450, line: 1690, type: !2345)
!16129 = !DILocation(line: 0, scope: !16126)
!16130 = !DILocation(line: 1695, column: 20, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16126, file: !2450, line: 1695, column: 6)
!16132 = !DILocation(line: 1695, column: 33, scope: !16131)
!16133 = !DILocation(line: 1695, column: 49, scope: !16131)
!16134 = !DILocation(line: 1695, column: 6, scope: !16126)
!16135 = !DILocation(line: 1697, column: 29, scope: !16136)
!16136 = distinct !DILexicalBlock(scope: !16131, file: !2450, line: 1695, column: 56)
!16137 = !DILocation(line: 1698, column: 7, scope: !16138)
!16138 = distinct !DILexicalBlock(scope: !16136, file: !2450, line: 1698, column: 7)
!16139 = !DILocation(line: 1698, column: 7, scope: !16136)
!16140 = !DILocation(line: 0, scope: !14508, inlinedAt: !16141)
!16141 = distinct !DILocation(line: 1699, column: 4, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16138, file: !2450, line: 1698, column: 35)
!16143 = !DILocation(line: 266, column: 28, scope: !14508, inlinedAt: !16141)
!16144 = !DILocation(line: 0, scope: !14516, inlinedAt: !16145)
!16145 = distinct !DILocation(line: 268, column: 3, scope: !14520, inlinedAt: !16141)
!16146 = !DILocation(line: 234, column: 2, scope: !14516, inlinedAt: !16145)
!16147 = !DILocation(line: 1700, column: 3, scope: !16142)
!16148 = !DILocation(line: 1701, column: 20, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16136, file: !2450, line: 1701, column: 7)
!16150 = !DILocation(line: 1701, column: 30, scope: !16149)
!16151 = !DILocation(line: 1701, column: 7, scope: !16136)
!16152 = !DILocation(line: 1702, column: 4, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !16149, file: !2450, line: 1701, column: 39)
!16154 = !DILocation(line: 1703, column: 3, scope: !16153)
!16155 = !DILocation(line: 1704, column: 9, scope: !16136)
!16156 = !DILocation(line: 1705, column: 23, scope: !16136)
!16157 = !DILocation(line: 1705, column: 3, scope: !16136)
!16158 = !DILocation(line: 1706, column: 3, scope: !16136)
!16159 = !DILocation(line: 1722, column: 2, scope: !16136)
!16160 = !DILocation(line: 1723, column: 1, scope: !16126)
!16161 = distinct !DISubprogram(name: "unpend_all", scope: !2450, file: !2450, line: 1674, type: !16162, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16164)
!16162 = !DISubroutineType(types: !16163)
!16163 = !{null, !2376}
!16164 = !{!16165, !16166}
!16165 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16161, file: !2450, line: 1674, type: !2376)
!16166 = !DILocalVariable(name: "thread", scope: !16161, file: !2450, line: 1676, type: !2345)
!16167 = !DILocation(line: 0, scope: !16161)
!16168 = !DILocation(line: 1678, column: 19, scope: !16161)
!16169 = !DILocation(line: 1678, column: 41, scope: !16161)
!16170 = !DILocation(line: 1678, column: 2, scope: !16161)
!16171 = !DILocation(line: 1679, column: 3, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16161, file: !2450, line: 1678, column: 50)
!16173 = !DILocation(line: 1680, column: 9, scope: !16172)
!16174 = !DILocalVariable(name: "thread", arg: 1, scope: !16175, file: !12864, line: 65, type: !2345)
!16175 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12864, file: !12864, line: 65, type: !16176, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16178)
!16176 = !DISubroutineType(types: !16177)
!16177 = !{null, !2345, !32}
!16178 = !{!16174, !16179}
!16179 = !DILocalVariable(name: "value", arg: 2, scope: !16175, file: !12864, line: 65, type: !32)
!16180 = !DILocation(line: 0, scope: !16175, inlinedAt: !16181)
!16181 = distinct !DILocation(line: 1681, column: 3, scope: !16172)
!16182 = !DILocation(line: 67, column: 15, scope: !16175, inlinedAt: !16181)
!16183 = !DILocation(line: 67, column: 33, scope: !16175, inlinedAt: !16181)
!16184 = !DILocation(line: 1682, column: 3, scope: !16172)
!16185 = distinct !{!16185, !16170, !16186}
!16186 = !DILocation(line: 1683, column: 2, scope: !16161)
!16187 = !DILocation(line: 1684, column: 1, scope: !16161)
!16188 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2450, file: !2450, line: 1794, type: !16189, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16191)
!16189 = !DISubroutineType(types: !16190)
!16190 = !{!103, !2345, !15130}
!16191 = !{!16192, !16193, !16194, !16195}
!16192 = !DILocalVariable(name: "thread", arg: 1, scope: !16188, file: !2450, line: 1794, type: !2345)
!16193 = !DILocalVariable(name: "timeout", arg: 2, scope: !16188, file: !2450, line: 1794, type: !15130)
!16194 = !DILocalVariable(name: "key", scope: !16188, file: !2450, line: 1796, type: !14331)
!16195 = !DILocalVariable(name: "ret", scope: !16188, file: !2450, line: 1797, type: !103)
!16196 = !DILocation(line: 0, scope: !16188)
!16197 = !DILocation(line: 0, scope: !14339, inlinedAt: !16198)
!16198 = distinct !DILocation(line: 1796, column: 25, scope: !16188)
!16199 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !16200)
!16200 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !16198)
!16201 = !DILocation(line: 0, scope: !14348, inlinedAt: !16200)
!16202 = !DILocation(line: 1801, column: 20, scope: !16203)
!16203 = distinct !DILexicalBlock(scope: !16188, file: !2450, line: 1801, column: 6)
!16204 = !DILocation(line: 1801, column: 33, scope: !16203)
!16205 = !DILocation(line: 1801, column: 49, scope: !16203)
!16206 = !DILocation(line: 1801, column: 6, scope: !16188)
!16207 = !DILocation(line: 1803, column: 13, scope: !16208)
!16208 = distinct !DILexicalBlock(scope: !16203, file: !2450, line: 1803, column: 13)
!16209 = !DILocation(line: 1803, column: 13, scope: !16203)
!16210 = !DILocation(line: 1805, column: 24, scope: !16211)
!16211 = distinct !DILexicalBlock(scope: !16208, file: !2450, line: 1805, column: 13)
!16212 = !DILocation(line: 1805, column: 21, scope: !16211)
!16213 = !DILocation(line: 1805, column: 34, scope: !16211)
!16214 = !DILocation(line: 1806, column: 20, scope: !16211)
!16215 = !DILocation(line: 1806, column: 44, scope: !16211)
!16216 = !DILocation(line: 1806, column: 30, scope: !16211)
!16217 = !DILocation(line: 1805, column: 13, scope: !16208)
!16218 = !DILocation(line: 1810, column: 42, scope: !16219)
!16219 = distinct !DILexicalBlock(scope: !16211, file: !2450, line: 1808, column: 9)
!16220 = !DILocation(line: 1810, column: 3, scope: !16219)
!16221 = !DILocation(line: 1811, column: 22, scope: !16219)
!16222 = !DILocation(line: 1811, column: 3, scope: !16219)
!16223 = !DILocation(line: 0, scope: !14950, inlinedAt: !16224)
!16224 = distinct !DILocation(line: 1814, column: 9, scope: !16219)
!16225 = !DILocation(line: 196, column: 9, scope: !14950, inlinedAt: !16224)
!16226 = !DILocation(line: 1817, column: 3, scope: !16219)
!16227 = !DILocation(line: 0, scope: !16203)
!16228 = !DILocation(line: 0, scope: !14366, inlinedAt: !16229)
!16229 = distinct !DILocation(line: 1822, column: 2, scope: !16188)
!16230 = !DILocation(line: 0, scope: !14374, inlinedAt: !16231)
!16231 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !16229)
!16232 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !16231)
!16233 = !DILocation(line: 1823, column: 2, scope: !16188)
!16234 = !DILocation(line: 1824, column: 1, scope: !16188)
!16235 = distinct !DISubprogram(name: "z_sched_wake", scope: !2450, file: !2450, line: 1882, type: !16236, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16238)
!16236 = !DISubroutineType(types: !16237)
!16237 = !{!157, !2376, !103, !102}
!16238 = !{!16239, !16240, !16241, !16242, !16243, !16244, !16246}
!16239 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16235, file: !2450, line: 1882, type: !2376)
!16240 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16235, file: !2450, line: 1882, type: !103)
!16241 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16235, file: !2450, line: 1882, type: !102)
!16242 = !DILocalVariable(name: "thread", scope: !16235, file: !2450, line: 1884, type: !2345)
!16243 = !DILocalVariable(name: "ret", scope: !16235, file: !2450, line: 1885, type: !157)
!16244 = !DILocalVariable(name: "__i", scope: !16245, file: !2450, line: 1887, type: !14331)
!16245 = distinct !DILexicalBlock(scope: !16235, file: !2450, line: 1887, column: 2)
!16246 = !DILocalVariable(name: "__key", scope: !16245, file: !2450, line: 1887, type: !14331)
!16247 = !DILocation(line: 0, scope: !16235)
!16248 = !DILocation(line: 0, scope: !16245)
!16249 = !DILocation(line: 0, scope: !14339, inlinedAt: !16250)
!16250 = distinct !DILocation(line: 1887, column: 2, scope: !16245)
!16251 = !DILocation(line: 55, column: 2, scope: !14348, inlinedAt: !16252)
!16252 = distinct !DILocation(line: 145, column: 10, scope: !14339, inlinedAt: !16250)
!16253 = !DILocation(line: 0, scope: !14348, inlinedAt: !16252)
!16254 = !DILocation(line: 1888, column: 12, scope: !16255)
!16255 = distinct !DILexicalBlock(scope: !16256, file: !2450, line: 1887, column: 26)
!16256 = distinct !DILexicalBlock(scope: !16245, file: !2450, line: 1887, column: 2)
!16257 = !DILocation(line: 1890, column: 14, scope: !16258)
!16258 = distinct !DILexicalBlock(scope: !16255, file: !2450, line: 1890, column: 7)
!16259 = !DILocation(line: 1890, column: 7, scope: !16255)
!16260 = !DILocalVariable(name: "thread", arg: 1, scope: !16261, file: !13737, line: 134, type: !2345)
!16261 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13737, file: !13737, line: 134, type: !16262, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16264)
!16262 = !DISubroutineType(types: !16263)
!16263 = !{null, !2345, !32, !102}
!16264 = !{!16260, !16265, !16266}
!16265 = !DILocalVariable(name: "value", arg: 2, scope: !16261, file: !13737, line: 135, type: !32)
!16266 = !DILocalVariable(name: "data", arg: 3, scope: !16261, file: !13737, line: 136, type: !102)
!16267 = !DILocation(line: 0, scope: !16261, inlinedAt: !16268)
!16268 = distinct !DILocation(line: 1891, column: 4, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16258, file: !2450, line: 1890, column: 23)
!16270 = !DILocation(line: 0, scope: !16175, inlinedAt: !16271)
!16271 = distinct !DILocation(line: 138, column: 2, scope: !16261, inlinedAt: !16268)
!16272 = !DILocation(line: 67, column: 15, scope: !16175, inlinedAt: !16271)
!16273 = !DILocation(line: 67, column: 33, scope: !16175, inlinedAt: !16271)
!16274 = !DILocation(line: 139, column: 15, scope: !16261, inlinedAt: !16268)
!16275 = !DILocation(line: 139, column: 25, scope: !16261, inlinedAt: !16268)
!16276 = !DILocation(line: 1894, column: 4, scope: !16269)
!16277 = !DILocation(line: 1895, column: 10, scope: !16269)
!16278 = !DILocation(line: 1896, column: 4, scope: !16269)
!16279 = !DILocation(line: 1898, column: 3, scope: !16269)
!16280 = !DILocation(line: 0, scope: !14366, inlinedAt: !16281)
!16281 = distinct !DILocation(line: 1887, column: 2, scope: !16256)
!16282 = !DILocation(line: 0, scope: !14374, inlinedAt: !16283)
!16283 = distinct !DILocation(line: 215, column: 2, scope: !14366, inlinedAt: !16281)
!16284 = !DILocation(line: 95, column: 2, scope: !14374, inlinedAt: !16283)
!16285 = !DILocation(line: 1901, column: 2, scope: !16235)
!16286 = distinct !DISubprogram(name: "z_sched_wait", scope: !2450, file: !2450, line: 1904, type: !16287, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16289)
!16287 = !DISubroutineType(types: !16288)
!16288 = !{!103, !14342, !14331, !2376, !15130, !3145}
!16289 = !{!16290, !16291, !16292, !16293, !16294, !16295}
!16290 = !DILocalVariable(name: "lock", arg: 1, scope: !16286, file: !2450, line: 1904, type: !14342)
!16291 = !DILocalVariable(name: "key", arg: 2, scope: !16286, file: !2450, line: 1904, type: !14331)
!16292 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16286, file: !2450, line: 1905, type: !2376)
!16293 = !DILocalVariable(name: "timeout", arg: 4, scope: !16286, file: !2450, line: 1905, type: !15130)
!16294 = !DILocalVariable(name: "data", arg: 5, scope: !16286, file: !2450, line: 1905, type: !3145)
!16295 = !DILocalVariable(name: "ret", scope: !16286, file: !2450, line: 1907, type: !103)
!16296 = !DILocation(line: 0, scope: !16286)
!16297 = !DILocation(line: 1907, column: 12, scope: !16286)
!16298 = !DILocation(line: 1909, column: 11, scope: !16299)
!16299 = distinct !DILexicalBlock(scope: !16286, file: !2450, line: 1909, column: 6)
!16300 = !DILocation(line: 1909, column: 6, scope: !16286)
!16301 = !DILocation(line: 1910, column: 11, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16299, file: !2450, line: 1909, column: 20)
!16303 = !DILocation(line: 1910, column: 26, scope: !16302)
!16304 = !DILocation(line: 1910, column: 9, scope: !16302)
!16305 = !DILocation(line: 1911, column: 2, scope: !16302)
!16306 = !DILocation(line: 1912, column: 2, scope: !16286)
!16307 = distinct !DISubprogram(name: "z_data_copy", scope: !16308, file: !16308, line: 22, type: !3181, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !317)
!16308 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16309 = !DILocation(line: 24, column: 2, scope: !16307)
!16310 = !DILocation(line: 27, column: 2, scope: !16307)
!16311 = !DILocation(line: 31, column: 2, scope: !16307)
!16312 = !DILocation(line: 71, column: 1, scope: !16307)
!16313 = distinct !DISubprogram(name: "z_add_timeout", scope: !2487, file: !2487, line: 88, type: !16314, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16320)
!16314 = !DISubroutineType(types: !16315)
!16315 = !{null, !2460, !2479, !16316}
!16316 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !16317)
!16317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !16318)
!16318 = !{!16319}
!16319 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16317, file: !201, line: 66, baseType: !200, size: 64)
!16320 = !{!16321, !16322, !16323, !16324, !16330, !16331, !16334, !16337}
!16321 = !DILocalVariable(name: "to", arg: 1, scope: !16313, file: !2487, line: 88, type: !2460)
!16322 = !DILocalVariable(name: "fn", arg: 2, scope: !16313, file: !2487, line: 88, type: !2479)
!16323 = !DILocalVariable(name: "timeout", arg: 3, scope: !16313, file: !2487, line: 89, type: !16316)
!16324 = !DILocalVariable(name: "__i", scope: !16325, file: !2487, line: 102, type: !16326)
!16325 = distinct !DILexicalBlock(scope: !16313, file: !2487, line: 102, column: 2)
!16326 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !16327)
!16327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !16328)
!16328 = !{!16329}
!16329 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16327, file: !316, line: 33, baseType: !103, size: 32)
!16330 = !DILocalVariable(name: "__key", scope: !16325, file: !2487, line: 102, type: !16326)
!16331 = !DILocalVariable(name: "t", scope: !16332, file: !2487, line: 103, type: !2460)
!16332 = distinct !DILexicalBlock(scope: !16333, file: !2487, line: 102, column: 24)
!16333 = distinct !DILexicalBlock(scope: !16325, file: !2487, line: 102, column: 2)
!16334 = !DILocalVariable(name: "ticks", scope: !16335, file: !2487, line: 107, type: !200)
!16335 = distinct !DILexicalBlock(scope: !16336, file: !2487, line: 106, column: 39)
!16336 = distinct !DILexicalBlock(scope: !16332, file: !2487, line: 105, column: 7)
!16337 = !DILocalVariable(name: "next_time", scope: !16338, file: !2487, line: 137, type: !746)
!16338 = distinct !DILexicalBlock(scope: !16339, file: !2487, line: 127, column: 22)
!16339 = distinct !DILexicalBlock(scope: !16332, file: !2487, line: 127, column: 7)
!16340 = !DILocation(line: 0, scope: !16313)
!16341 = !DILocation(line: 91, column: 6, scope: !16342)
!16342 = distinct !DILexicalBlock(scope: !16313, file: !2487, line: 91, column: 6)
!16343 = !DILocation(line: 91, column: 6, scope: !16313)
!16344 = !DILocation(line: 100, column: 6, scope: !16313)
!16345 = !DILocation(line: 100, column: 9, scope: !16313)
!16346 = !DILocation(line: 0, scope: !16325)
!16347 = !DILocalVariable(name: "l", arg: 1, scope: !16348, file: !316, line: 136, type: !16351)
!16348 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !16349, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16352)
!16349 = !DISubroutineType(types: !16350)
!16350 = !{!16326, !16351}
!16351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!16352 = !{!16347, !16353}
!16353 = !DILocalVariable(name: "k", scope: !16348, file: !316, line: 139, type: !16326)
!16354 = !DILocation(line: 0, scope: !16348, inlinedAt: !16355)
!16355 = distinct !DILocation(line: 102, column: 2, scope: !16325)
!16356 = !DILocation(line: 55, column: 2, scope: !16357, inlinedAt: !16361)
!16357 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5738, file: !5738, line: 42, type: !5739, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16358)
!16358 = !{!16359, !16360}
!16359 = !DILocalVariable(name: "key", scope: !16357, file: !5738, line: 44, type: !32)
!16360 = !DILocalVariable(name: "tmp", scope: !16357, file: !5738, line: 53, type: !32)
!16361 = distinct !DILocation(line: 145, column: 10, scope: !16348, inlinedAt: !16355)
!16362 = !{i64 2227844}
!16363 = !DILocation(line: 0, scope: !16357, inlinedAt: !16361)
!16364 = !DILocation(line: 106, column: 33, scope: !16336)
!16365 = !DILocation(line: 105, column: 7, scope: !16332)
!16366 = !DILocation(line: 107, column: 50, scope: !16335)
!16367 = !DILocation(line: 107, column: 48, scope: !16335)
!16368 = !DILocation(line: 0, scope: !16335)
!16369 = !DILocation(line: 109, column: 17, scope: !16335)
!16370 = !DILocation(line: 110, column: 3, scope: !16335)
!16371 = !DILocation(line: 111, column: 31, scope: !16372)
!16372 = distinct !DILexicalBlock(scope: !16336, file: !2487, line: 110, column: 10)
!16373 = !DILocation(line: 111, column: 37, scope: !16372)
!16374 = !DILocation(line: 111, column: 35, scope: !16372)
!16375 = !DILocation(line: 0, scope: !16336)
!16376 = !DILocation(line: 109, column: 8, scope: !16335)
!16377 = !DILocation(line: 109, column: 15, scope: !16335)
!16378 = !DILocation(line: 114, column: 12, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16332, file: !2487, line: 114, column: 3)
!16380 = !DILocation(line: 0, scope: !16332)
!16381 = !DILocation(line: 114, column: 3, scope: !16379)
!16382 = !DILocation(line: 115, column: 24, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16384, file: !2487, line: 115, column: 8)
!16384 = distinct !DILexicalBlock(scope: !16385, file: !2487, line: 114, column: 45)
!16385 = distinct !DILexicalBlock(scope: !16379, file: !2487, line: 114, column: 3)
!16386 = !DILocation(line: 115, column: 11, scope: !16383)
!16387 = !DILocation(line: 115, column: 18, scope: !16383)
!16388 = !DILocation(line: 115, column: 8, scope: !16384)
!16389 = !DILocation(line: 116, column: 15, scope: !16390)
!16390 = distinct !DILexicalBlock(scope: !16383, file: !2487, line: 115, column: 32)
!16391 = !DILocation(line: 117, column: 26, scope: !16390)
!16392 = !DILocation(line: 117, column: 37, scope: !16390)
!16393 = !DILocation(line: 117, column: 5, scope: !16390)
!16394 = !DILocation(line: 123, column: 7, scope: !16332)
!16395 = !DILocation(line: 120, column: 15, scope: !16384)
!16396 = !DILocation(line: 114, column: 36, scope: !16385)
!16397 = distinct !{!16397, !16381, !16398}
!16398 = !DILocation(line: 121, column: 3, scope: !16379)
!16399 = !DILocation(line: 124, column: 41, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16401, file: !2487, line: 123, column: 18)
!16401 = distinct !DILexicalBlock(scope: !16332, file: !2487, line: 123, column: 7)
!16402 = !DILocation(line: 124, column: 4, scope: !16400)
!16403 = !DILocation(line: 125, column: 3, scope: !16400)
!16404 = !DILocation(line: 127, column: 13, scope: !16339)
!16405 = !DILocation(line: 127, column: 10, scope: !16339)
!16406 = !DILocation(line: 127, column: 7, scope: !16332)
!16407 = !DILocation(line: 137, column: 24, scope: !16338)
!16408 = !DILocation(line: 0, scope: !16338)
!16409 = !DILocation(line: 139, column: 18, scope: !16410)
!16410 = distinct !DILexicalBlock(scope: !16338, file: !2487, line: 139, column: 8)
!16411 = !DILocation(line: 139, column: 23, scope: !16410)
!16412 = !DILocation(line: 141, column: 5, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16410, file: !2487, line: 140, column: 48)
!16414 = !DILocation(line: 142, column: 4, scope: !16413)
!16415 = !DILocalVariable(name: "key", arg: 2, scope: !16416, file: !316, line: 190, type: !16326)
!16416 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !16417, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16419)
!16417 = !DISubroutineType(types: !16418)
!16418 = !{null, !16351, !16326}
!16419 = !{!16420, !16415}
!16420 = !DILocalVariable(name: "l", arg: 1, scope: !16416, file: !316, line: 189, type: !16351)
!16421 = !DILocation(line: 0, scope: !16416, inlinedAt: !16422)
!16422 = distinct !DILocation(line: 102, column: 2, scope: !16333)
!16423 = !DILocalVariable(name: "key", arg: 1, scope: !16424, file: !5738, line: 84, type: !32)
!16424 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5738, file: !5738, line: 84, type: !5749, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16425)
!16425 = !{!16423}
!16426 = !DILocation(line: 0, scope: !16424, inlinedAt: !16427)
!16427 = distinct !DILocation(line: 215, column: 2, scope: !16416, inlinedAt: !16422)
!16428 = !DILocation(line: 95, column: 2, scope: !16424, inlinedAt: !16427)
!16429 = !{i64 2228661}
!16430 = !DILocation(line: 148, column: 1, scope: !16313)
!16431 = distinct !DISubprogram(name: "elapsed", scope: !2487, file: !2487, line: 62, type: !16432, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !317)
!16432 = !DISubroutineType(types: !16433)
!16433 = !{!746}
!16434 = !DILocation(line: 64, column: 9, scope: !16431)
!16435 = !DILocation(line: 64, column: 28, scope: !16431)
!16436 = !DILocation(line: 64, column: 35, scope: !16431)
!16437 = !DILocation(line: 64, column: 2, scope: !16431)
!16438 = distinct !DISubprogram(name: "first", scope: !2487, file: !2487, line: 39, type: !16439, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16441)
!16439 = !DISubroutineType(types: !16440)
!16440 = !{!2460}
!16441 = !{!16442}
!16442 = !DILocalVariable(name: "t", scope: !16438, file: !2487, line: 41, type: !16443)
!16443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!16444 = !DILocation(line: 41, column: 19, scope: !16438)
!16445 = !DILocation(line: 0, scope: !16438)
!16446 = !DILocation(line: 43, column: 9, scope: !16438)
!16447 = !DILocation(line: 43, column: 2, scope: !16438)
!16448 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !325, file: !325, line: 443, type: !16449, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16451)
!16449 = !DISubroutineType(types: !16450)
!16450 = !{null, !16443, !16443}
!16451 = !{!16452, !16453, !16454}
!16452 = !DILocalVariable(name: "successor", arg: 1, scope: !16448, file: !325, line: 443, type: !16443)
!16453 = !DILocalVariable(name: "node", arg: 2, scope: !16448, file: !325, line: 443, type: !16443)
!16454 = !DILocalVariable(name: "prev", scope: !16448, file: !325, line: 445, type: !16455)
!16455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16443)
!16456 = !DILocation(line: 0, scope: !16448)
!16457 = !DILocation(line: 445, column: 39, scope: !16448)
!16458 = !DILocation(line: 447, column: 8, scope: !16448)
!16459 = !DILocation(line: 447, column: 13, scope: !16448)
!16460 = !DILocation(line: 448, column: 8, scope: !16448)
!16461 = !DILocation(line: 448, column: 13, scope: !16448)
!16462 = !DILocation(line: 449, column: 8, scope: !16448)
!16463 = !DILocation(line: 449, column: 13, scope: !16448)
!16464 = !DILocation(line: 450, column: 18, scope: !16448)
!16465 = !DILocation(line: 451, column: 1, scope: !16448)
!16466 = distinct !DISubprogram(name: "next", scope: !2487, file: !2487, line: 46, type: !16467, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16469)
!16467 = !DISubroutineType(types: !16468)
!16468 = !{!2460, !2460}
!16469 = !{!16470, !16471}
!16470 = !DILocalVariable(name: "t", arg: 1, scope: !16466, file: !2487, line: 46, type: !2460)
!16471 = !DILocalVariable(name: "n", scope: !16466, file: !2487, line: 48, type: !16443)
!16472 = !DILocation(line: 0, scope: !16466)
!16473 = !DILocation(line: 48, column: 58, scope: !16466)
!16474 = !DILocation(line: 48, column: 19, scope: !16466)
!16475 = !DILocation(line: 50, column: 9, scope: !16466)
!16476 = !DILocation(line: 50, column: 2, scope: !16466)
!16477 = distinct !DISubprogram(name: "sys_dlist_append", scope: !325, file: !325, line: 404, type: !16478, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16481)
!16478 = !DISubroutineType(types: !16479)
!16479 = !{null, !16480, !16443}
!16480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 32)
!16481 = !{!16482, !16483, !16484}
!16482 = !DILocalVariable(name: "list", arg: 1, scope: !16477, file: !325, line: 404, type: !16480)
!16483 = !DILocalVariable(name: "node", arg: 2, scope: !16477, file: !325, line: 404, type: !16443)
!16484 = !DILocalVariable(name: "tail", scope: !16477, file: !325, line: 406, type: !16455)
!16485 = !DILocation(line: 0, scope: !16477)
!16486 = !DILocation(line: 406, column: 34, scope: !16477)
!16487 = !DILocation(line: 408, column: 8, scope: !16477)
!16488 = !DILocation(line: 408, column: 13, scope: !16477)
!16489 = !DILocation(line: 409, column: 8, scope: !16477)
!16490 = !DILocation(line: 409, column: 13, scope: !16477)
!16491 = !DILocation(line: 411, column: 8, scope: !16477)
!16492 = !DILocation(line: 411, column: 13, scope: !16477)
!16493 = !DILocation(line: 412, column: 13, scope: !16477)
!16494 = !DILocation(line: 413, column: 1, scope: !16477)
!16495 = distinct !DISubprogram(name: "next_timeout", scope: !2487, file: !2487, line: 67, type: !16432, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16496)
!16496 = !{!16497, !16498, !16499}
!16497 = !DILocalVariable(name: "to", scope: !16495, file: !2487, line: 69, type: !2460)
!16498 = !DILocalVariable(name: "ticks_elapsed", scope: !16495, file: !2487, line: 70, type: !746)
!16499 = !DILocalVariable(name: "ret", scope: !16495, file: !2487, line: 71, type: !746)
!16500 = !DILocation(line: 69, column: 24, scope: !16495)
!16501 = !DILocation(line: 0, scope: !16495)
!16502 = !DILocation(line: 70, column: 26, scope: !16495)
!16503 = !DILocation(line: 73, column: 10, scope: !16504)
!16504 = distinct !DILexicalBlock(scope: !16495, file: !2487, line: 73, column: 6)
!16505 = !DILocation(line: 73, column: 19, scope: !16504)
!16506 = !DILocation(line: 74, column: 21, scope: !16504)
!16507 = !DILocation(line: 74, column: 30, scope: !16504)
!16508 = !DILocation(line: 74, column: 28, scope: !16504)
!16509 = !DILocation(line: 74, column: 45, scope: !16504)
!16510 = !DILocation(line: 73, column: 6, scope: !16495)
!16511 = !DILocation(line: 77, column: 9, scope: !16512)
!16512 = distinct !DILexicalBlock(scope: !16504, file: !2487, line: 76, column: 9)
!16513 = !DILocation(line: 0, scope: !16504)
!16514 = !DILocation(line: 81, column: 20, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16495, file: !2487, line: 81, column: 6)
!16516 = !DILocation(line: 81, column: 6, scope: !16515)
!16517 = !DILocation(line: 81, column: 32, scope: !16515)
!16518 = !DILocation(line: 85, column: 2, scope: !16495)
!16519 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !325, file: !325, line: 341, type: !16520, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16522)
!16520 = !DISubroutineType(types: !16521)
!16521 = !{!16443, !16480, !16443}
!16522 = !{!16523, !16524}
!16523 = !DILocalVariable(name: "list", arg: 1, scope: !16519, file: !325, line: 341, type: !16480)
!16524 = !DILocalVariable(name: "node", arg: 2, scope: !16519, file: !325, line: 342, type: !16443)
!16525 = !DILocation(line: 0, scope: !16519)
!16526 = !DILocation(line: 344, column: 15, scope: !16519)
!16527 = !DILocation(line: 344, column: 9, scope: !16519)
!16528 = !DILocation(line: 344, column: 26, scope: !16519)
!16529 = !DILocation(line: 344, column: 2, scope: !16519)
!16530 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !325, file: !325, line: 325, type: !16520, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16531)
!16531 = !{!16532, !16533}
!16532 = !DILocalVariable(name: "list", arg: 1, scope: !16530, file: !325, line: 325, type: !16480)
!16533 = !DILocalVariable(name: "node", arg: 2, scope: !16530, file: !325, line: 326, type: !16443)
!16534 = !DILocation(line: 0, scope: !16530)
!16535 = !DILocation(line: 328, column: 24, scope: !16530)
!16536 = !DILocation(line: 328, column: 15, scope: !16530)
!16537 = !DILocation(line: 328, column: 9, scope: !16530)
!16538 = !DILocation(line: 328, column: 45, scope: !16530)
!16539 = !DILocation(line: 328, column: 2, scope: !16530)
!16540 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !325, file: !325, line: 294, type: !16541, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16543)
!16541 = !DISubroutineType(types: !16542)
!16542 = !{!16443, !16480}
!16543 = !{!16544}
!16544 = !DILocalVariable(name: "list", arg: 1, scope: !16540, file: !325, line: 294, type: !16480)
!16545 = !DILocation(line: 0, scope: !16540)
!16546 = !DILocation(line: 296, column: 9, scope: !16540)
!16547 = !DILocation(line: 296, column: 2, scope: !16540)
!16548 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !325, file: !325, line: 266, type: !16549, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16551)
!16549 = !DISubroutineType(types: !16550)
!16550 = !{!157, !16480}
!16551 = !{!16552}
!16552 = !DILocalVariable(name: "list", arg: 1, scope: !16548, file: !325, line: 266, type: !16480)
!16553 = !DILocation(line: 0, scope: !16548)
!16554 = !DILocation(line: 268, column: 15, scope: !16548)
!16555 = !DILocation(line: 268, column: 20, scope: !16548)
!16556 = !DILocation(line: 268, column: 2, scope: !16548)
!16557 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2487, file: !2487, line: 150, type: !16558, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16560)
!16558 = !DISubroutineType(types: !16559)
!16559 = !{!103, !2460}
!16560 = !{!16561, !16562, !16563, !16565}
!16561 = !DILocalVariable(name: "to", arg: 1, scope: !16557, file: !2487, line: 150, type: !2460)
!16562 = !DILocalVariable(name: "ret", scope: !16557, file: !2487, line: 152, type: !103)
!16563 = !DILocalVariable(name: "__i", scope: !16564, file: !2487, line: 154, type: !16326)
!16564 = distinct !DILexicalBlock(scope: !16557, file: !2487, line: 154, column: 2)
!16565 = !DILocalVariable(name: "__key", scope: !16564, file: !2487, line: 154, type: !16326)
!16566 = !DILocation(line: 0, scope: !16557)
!16567 = !DILocation(line: 0, scope: !16564)
!16568 = !DILocation(line: 0, scope: !16348, inlinedAt: !16569)
!16569 = distinct !DILocation(line: 154, column: 2, scope: !16564)
!16570 = !DILocation(line: 55, column: 2, scope: !16357, inlinedAt: !16571)
!16571 = distinct !DILocation(line: 145, column: 10, scope: !16348, inlinedAt: !16569)
!16572 = !DILocation(line: 0, scope: !16357, inlinedAt: !16571)
!16573 = !DILocation(line: 155, column: 7, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16575, file: !2487, line: 155, column: 7)
!16575 = distinct !DILexicalBlock(scope: !16576, file: !2487, line: 154, column: 24)
!16576 = distinct !DILexicalBlock(scope: !16564, file: !2487, line: 154, column: 2)
!16577 = !DILocation(line: 155, column: 7, scope: !16575)
!16578 = !DILocation(line: 156, column: 4, scope: !16579)
!16579 = distinct !DILexicalBlock(scope: !16574, file: !2487, line: 155, column: 39)
!16580 = !DILocation(line: 158, column: 3, scope: !16579)
!16581 = !DILocation(line: 0, scope: !16416, inlinedAt: !16582)
!16582 = distinct !DILocation(line: 154, column: 2, scope: !16576)
!16583 = !DILocation(line: 0, scope: !16424, inlinedAt: !16584)
!16584 = distinct !DILocation(line: 215, column: 2, scope: !16416, inlinedAt: !16582)
!16585 = !DILocation(line: 95, column: 2, scope: !16424, inlinedAt: !16584)
!16586 = !DILocation(line: 161, column: 2, scope: !16557)
!16587 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !325, file: !325, line: 225, type: !16588, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16592)
!16588 = !DISubroutineType(types: !16589)
!16589 = !{!157, !16590}
!16590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16591, size: 32)
!16591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2464)
!16592 = !{!16593}
!16593 = !DILocalVariable(name: "node", arg: 1, scope: !16587, file: !325, line: 225, type: !16590)
!16594 = !DILocation(line: 0, scope: !16587)
!16595 = !DILocation(line: 227, column: 15, scope: !16587)
!16596 = !DILocation(line: 227, column: 20, scope: !16587)
!16597 = !DILocation(line: 227, column: 2, scope: !16587)
!16598 = distinct !DISubprogram(name: "remove_timeout", scope: !2487, file: !2487, line: 53, type: !2481, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16599)
!16599 = !{!16600}
!16600 = !DILocalVariable(name: "t", arg: 1, scope: !16598, file: !2487, line: 53, type: !2460)
!16601 = !DILocation(line: 0, scope: !16598)
!16602 = !DILocation(line: 55, column: 6, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16598, file: !2487, line: 55, column: 6)
!16604 = !DILocation(line: 55, column: 14, scope: !16603)
!16605 = !DILocation(line: 55, column: 6, scope: !16598)
!16606 = !DILocation(line: 56, column: 25, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16603, file: !2487, line: 55, column: 23)
!16608 = !DILocation(line: 56, column: 12, scope: !16607)
!16609 = !DILocation(line: 56, column: 19, scope: !16607)
!16610 = !DILocation(line: 57, column: 2, scope: !16607)
!16611 = !DILocation(line: 59, column: 23, scope: !16598)
!16612 = !DILocation(line: 59, column: 2, scope: !16598)
!16613 = !DILocation(line: 60, column: 1, scope: !16598)
!16614 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !325, file: !325, line: 496, type: !16615, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16617)
!16615 = !DISubroutineType(types: !16616)
!16616 = !{null, !16443}
!16617 = !{!16618, !16619, !16620}
!16618 = !DILocalVariable(name: "node", arg: 1, scope: !16614, file: !325, line: 496, type: !16443)
!16619 = !DILocalVariable(name: "prev", scope: !16614, file: !325, line: 498, type: !16455)
!16620 = !DILocalVariable(name: "next", scope: !16614, file: !325, line: 499, type: !16455)
!16621 = !DILocation(line: 0, scope: !16614)
!16622 = !DILocation(line: 498, column: 34, scope: !16614)
!16623 = !DILocation(line: 499, column: 34, scope: !16614)
!16624 = !DILocation(line: 501, column: 8, scope: !16614)
!16625 = !DILocation(line: 501, column: 13, scope: !16614)
!16626 = !DILocation(line: 502, column: 8, scope: !16614)
!16627 = !DILocation(line: 502, column: 13, scope: !16614)
!16628 = !DILocation(line: 503, column: 2, scope: !16614)
!16629 = !DILocation(line: 504, column: 1, scope: !16614)
!16630 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !16615, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16631)
!16631 = !{!16632}
!16632 = !DILocalVariable(name: "node", arg: 1, scope: !16630, file: !325, line: 211, type: !16443)
!16633 = !DILocation(line: 0, scope: !16630)
!16634 = !DILocation(line: 213, column: 8, scope: !16630)
!16635 = !DILocation(line: 213, column: 13, scope: !16630)
!16636 = !DILocation(line: 214, column: 8, scope: !16630)
!16637 = !DILocation(line: 214, column: 13, scope: !16630)
!16638 = !DILocation(line: 215, column: 1, scope: !16630)
!16639 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2487, file: !2487, line: 183, type: !16640, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16644)
!16640 = !DISubroutineType(types: !16641)
!16641 = !{!200, !16642}
!16642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16643, size: 32)
!16643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2461)
!16644 = !{!16645, !16646, !16647, !16649}
!16645 = !DILocalVariable(name: "timeout", arg: 1, scope: !16639, file: !2487, line: 183, type: !16642)
!16646 = !DILocalVariable(name: "ticks", scope: !16639, file: !2487, line: 185, type: !200)
!16647 = !DILocalVariable(name: "__i", scope: !16648, file: !2487, line: 187, type: !16326)
!16648 = distinct !DILexicalBlock(scope: !16639, file: !2487, line: 187, column: 2)
!16649 = !DILocalVariable(name: "__key", scope: !16648, file: !2487, line: 187, type: !16326)
!16650 = !DILocation(line: 0, scope: !16639)
!16651 = !DILocation(line: 0, scope: !16648)
!16652 = !DILocation(line: 0, scope: !16348, inlinedAt: !16653)
!16653 = distinct !DILocation(line: 187, column: 2, scope: !16648)
!16654 = !DILocation(line: 55, column: 2, scope: !16357, inlinedAt: !16655)
!16655 = distinct !DILocation(line: 145, column: 10, scope: !16348, inlinedAt: !16653)
!16656 = !DILocation(line: 0, scope: !16357, inlinedAt: !16655)
!16657 = !DILocation(line: 188, column: 11, scope: !16658)
!16658 = distinct !DILexicalBlock(scope: !16659, file: !2487, line: 187, column: 24)
!16659 = distinct !DILexicalBlock(scope: !16648, file: !2487, line: 187, column: 2)
!16660 = !DILocation(line: 0, scope: !16416, inlinedAt: !16661)
!16661 = distinct !DILocation(line: 187, column: 2, scope: !16659)
!16662 = !DILocation(line: 0, scope: !16424, inlinedAt: !16663)
!16663 = distinct !DILocation(line: 215, column: 2, scope: !16416, inlinedAt: !16661)
!16664 = !DILocation(line: 95, column: 2, scope: !16424, inlinedAt: !16663)
!16665 = !DILocation(line: 191, column: 2, scope: !16639)
!16666 = distinct !DISubprogram(name: "timeout_rem", scope: !2487, file: !2487, line: 165, type: !16640, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16667)
!16667 = !{!16668, !16669, !16670}
!16668 = !DILocalVariable(name: "timeout", arg: 1, scope: !16666, file: !2487, line: 165, type: !16642)
!16669 = !DILocalVariable(name: "ticks", scope: !16666, file: !2487, line: 167, type: !200)
!16670 = !DILocalVariable(name: "t", scope: !16671, file: !2487, line: 173, type: !2460)
!16671 = distinct !DILexicalBlock(scope: !16666, file: !2487, line: 173, column: 2)
!16672 = !DILocation(line: 0, scope: !16666)
!16673 = !DILocation(line: 169, column: 6, scope: !16674)
!16674 = distinct !DILexicalBlock(scope: !16666, file: !2487, line: 169, column: 6)
!16675 = !DILocation(line: 169, column: 6, scope: !16666)
!16676 = !DILocation(line: 173, column: 28, scope: !16671)
!16677 = !DILocation(line: 0, scope: !16671)
!16678 = !DILocation(line: 173, column: 39, scope: !16679)
!16679 = distinct !DILexicalBlock(scope: !16671, file: !2487, line: 173, column: 2)
!16680 = !DILocation(line: 173, column: 2, scope: !16671)
!16681 = !DILocation(line: 174, column: 15, scope: !16682)
!16682 = distinct !DILexicalBlock(scope: !16679, file: !2487, line: 173, column: 61)
!16683 = !DILocation(line: 174, column: 9, scope: !16682)
!16684 = !DILocation(line: 175, column: 15, scope: !16685)
!16685 = distinct !DILexicalBlock(scope: !16682, file: !2487, line: 175, column: 7)
!16686 = !DILocation(line: 175, column: 7, scope: !16682)
!16687 = !DILocation(line: 173, column: 52, scope: !16679)
!16688 = distinct !{!16688, !16680, !16689}
!16689 = !DILocation(line: 178, column: 2, scope: !16671)
!16690 = !DILocation(line: 180, column: 17, scope: !16666)
!16691 = !DILocation(line: 180, column: 15, scope: !16666)
!16692 = !DILocation(line: 180, column: 2, scope: !16666)
!16693 = !DILocation(line: 181, column: 1, scope: !16666)
!16694 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13236, file: !13236, line: 35, type: !16695, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16697)
!16695 = !DISubroutineType(types: !16696)
!16696 = !{!157, !16642}
!16697 = !{!16698}
!16698 = !DILocalVariable(name: "to", arg: 1, scope: !16694, file: !13236, line: 35, type: !16642)
!16699 = !DILocation(line: 0, scope: !16694)
!16700 = !DILocation(line: 37, column: 35, scope: !16694)
!16701 = !DILocation(line: 37, column: 10, scope: !16694)
!16702 = !DILocation(line: 37, column: 9, scope: !16694)
!16703 = !DILocation(line: 37, column: 2, scope: !16694)
!16704 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2487, file: !2487, line: 194, type: !16640, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16705)
!16705 = !{!16706, !16707, !16708, !16710}
!16706 = !DILocalVariable(name: "timeout", arg: 1, scope: !16704, file: !2487, line: 194, type: !16642)
!16707 = !DILocalVariable(name: "ticks", scope: !16704, file: !2487, line: 196, type: !200)
!16708 = !DILocalVariable(name: "__i", scope: !16709, file: !2487, line: 198, type: !16326)
!16709 = distinct !DILexicalBlock(scope: !16704, file: !2487, line: 198, column: 2)
!16710 = !DILocalVariable(name: "__key", scope: !16709, file: !2487, line: 198, type: !16326)
!16711 = !DILocation(line: 0, scope: !16704)
!16712 = !DILocation(line: 0, scope: !16709)
!16713 = !DILocation(line: 0, scope: !16348, inlinedAt: !16714)
!16714 = distinct !DILocation(line: 198, column: 2, scope: !16709)
!16715 = !DILocation(line: 55, column: 2, scope: !16357, inlinedAt: !16716)
!16716 = distinct !DILocation(line: 145, column: 10, scope: !16348, inlinedAt: !16714)
!16717 = !DILocation(line: 0, scope: !16357, inlinedAt: !16716)
!16718 = !DILocation(line: 199, column: 11, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16720, file: !2487, line: 198, column: 24)
!16720 = distinct !DILexicalBlock(scope: !16709, file: !2487, line: 198, column: 2)
!16721 = !DILocation(line: 199, column: 23, scope: !16719)
!16722 = !DILocation(line: 0, scope: !16416, inlinedAt: !16723)
!16723 = distinct !DILocation(line: 198, column: 2, scope: !16720)
!16724 = !DILocation(line: 0, scope: !16424, inlinedAt: !16725)
!16725 = distinct !DILocation(line: 215, column: 2, scope: !16416, inlinedAt: !16723)
!16726 = !DILocation(line: 95, column: 2, scope: !16424, inlinedAt: !16725)
!16727 = !DILocation(line: 199, column: 21, scope: !16719)
!16728 = !DILocation(line: 202, column: 2, scope: !16704)
!16729 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2487, file: !2487, line: 205, type: !16432, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16730)
!16730 = !{!16731, !16732, !16734}
!16731 = !DILocalVariable(name: "ret", scope: !16729, file: !2487, line: 207, type: !746)
!16732 = !DILocalVariable(name: "__i", scope: !16733, file: !2487, line: 209, type: !16326)
!16733 = distinct !DILexicalBlock(scope: !16729, file: !2487, line: 209, column: 2)
!16734 = !DILocalVariable(name: "__key", scope: !16733, file: !2487, line: 209, type: !16326)
!16735 = !DILocation(line: 0, scope: !16729)
!16736 = !DILocation(line: 0, scope: !16733)
!16737 = !DILocation(line: 0, scope: !16348, inlinedAt: !16738)
!16738 = distinct !DILocation(line: 209, column: 2, scope: !16733)
!16739 = !DILocation(line: 55, column: 2, scope: !16357, inlinedAt: !16740)
!16740 = distinct !DILocation(line: 145, column: 10, scope: !16348, inlinedAt: !16738)
!16741 = !DILocation(line: 0, scope: !16357, inlinedAt: !16740)
!16742 = !DILocation(line: 210, column: 9, scope: !16743)
!16743 = distinct !DILexicalBlock(scope: !16744, file: !2487, line: 209, column: 24)
!16744 = distinct !DILexicalBlock(scope: !16733, file: !2487, line: 209, column: 2)
!16745 = !DILocation(line: 0, scope: !16416, inlinedAt: !16746)
!16746 = distinct !DILocation(line: 209, column: 2, scope: !16744)
!16747 = !DILocation(line: 0, scope: !16424, inlinedAt: !16748)
!16748 = distinct !DILocation(line: 215, column: 2, scope: !16416, inlinedAt: !16746)
!16749 = !DILocation(line: 95, column: 2, scope: !16424, inlinedAt: !16748)
!16750 = !DILocation(line: 212, column: 2, scope: !16729)
!16751 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2487, file: !2487, line: 215, type: !10858, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16752)
!16752 = !{!16753, !16754, !16755, !16757, !16758, !16761, !16762}
!16753 = !DILocalVariable(name: "ticks", arg: 1, scope: !16751, file: !2487, line: 215, type: !746)
!16754 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16751, file: !2487, line: 215, type: !157)
!16755 = !DILocalVariable(name: "__i", scope: !16756, file: !2487, line: 217, type: !16326)
!16756 = distinct !DILexicalBlock(scope: !16751, file: !2487, line: 217, column: 2)
!16757 = !DILocalVariable(name: "__key", scope: !16756, file: !2487, line: 217, type: !16326)
!16758 = !DILocalVariable(name: "next_to", scope: !16759, file: !2487, line: 218, type: !103)
!16759 = distinct !DILexicalBlock(scope: !16760, file: !2487, line: 217, column: 24)
!16760 = distinct !DILexicalBlock(scope: !16756, file: !2487, line: 217, column: 2)
!16761 = !DILocalVariable(name: "sooner", scope: !16759, file: !2487, line: 219, type: !157)
!16762 = !DILocalVariable(name: "imminent", scope: !16759, file: !2487, line: 221, type: !157)
!16763 = !DILocation(line: 0, scope: !16751)
!16764 = !DILocation(line: 0, scope: !16756)
!16765 = !DILocation(line: 0, scope: !16348, inlinedAt: !16766)
!16766 = distinct !DILocation(line: 217, column: 2, scope: !16756)
!16767 = !DILocation(line: 55, column: 2, scope: !16357, inlinedAt: !16768)
!16768 = distinct !DILocation(line: 145, column: 10, scope: !16348, inlinedAt: !16766)
!16769 = !DILocation(line: 0, scope: !16357, inlinedAt: !16768)
!16770 = !DILocation(line: 218, column: 17, scope: !16759)
!16771 = !DILocation(line: 0, scope: !16759)
!16772 = !DILocation(line: 221, column: 27, scope: !16759)
!16773 = !DILocation(line: 233, column: 17, scope: !16774)
!16774 = distinct !DILexicalBlock(scope: !16759, file: !2487, line: 233, column: 7)
!16775 = !DILocation(line: 234, column: 26, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16774, file: !2487, line: 233, column: 56)
!16777 = !DILocation(line: 234, column: 4, scope: !16776)
!16778 = !DILocation(line: 235, column: 3, scope: !16776)
!16779 = !DILocation(line: 0, scope: !16416, inlinedAt: !16780)
!16780 = distinct !DILocation(line: 217, column: 2, scope: !16760)
!16781 = !DILocation(line: 0, scope: !16424, inlinedAt: !16782)
!16782 = distinct !DILocation(line: 215, column: 2, scope: !16416, inlinedAt: !16780)
!16783 = !DILocation(line: 95, column: 2, scope: !16424, inlinedAt: !16782)
!16784 = !DILocation(line: 237, column: 1, scope: !16751)
!16785 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2487, file: !2487, line: 239, type: !16786, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16788)
!16786 = !DISubroutineType(types: !16787)
!16787 = !{null, !746}
!16788 = !{!16789, !16790, !16791, !16793}
!16789 = !DILocalVariable(name: "ticks", arg: 1, scope: !16785, file: !2487, line: 239, type: !746)
!16790 = !DILocalVariable(name: "key", scope: !16785, file: !2487, line: 245, type: !16326)
!16791 = !DILocalVariable(name: "t", scope: !16792, file: !2487, line: 262, type: !2460)
!16792 = distinct !DILexicalBlock(scope: !16785, file: !2487, line: 261, column: 67)
!16793 = !DILocalVariable(name: "dt", scope: !16792, file: !2487, line: 263, type: !103)
!16794 = !DILocation(line: 0, scope: !16785)
!16795 = !DILocation(line: 242, column: 2, scope: !16785)
!16796 = !DILocation(line: 0, scope: !16348, inlinedAt: !16797)
!16797 = distinct !DILocation(line: 245, column: 25, scope: !16785)
!16798 = !DILocation(line: 55, column: 2, scope: !16357, inlinedAt: !16799)
!16799 = distinct !DILocation(line: 145, column: 10, scope: !16348, inlinedAt: !16797)
!16800 = !DILocation(line: 0, scope: !16357, inlinedAt: !16799)
!16801 = !DILocation(line: 261, column: 9, scope: !16785)
!16802 = !DILocation(line: 261, column: 17, scope: !16785)
!16803 = !DILocation(line: 261, column: 25, scope: !16785)
!16804 = !DILocation(line: 261, column: 37, scope: !16785)
!16805 = !DILocation(line: 261, column: 47, scope: !16785)
!16806 = !DILocation(line: 261, column: 44, scope: !16785)
!16807 = !DILocation(line: 261, column: 2, scope: !16785)
!16808 = !DILocation(line: 0, scope: !16792)
!16809 = !DILocation(line: 263, column: 12, scope: !16792)
!16810 = !DILocation(line: 265, column: 16, scope: !16792)
!16811 = !DILocation(line: 265, column: 13, scope: !16792)
!16812 = !DILocation(line: 266, column: 13, scope: !16792)
!16813 = !DILocation(line: 267, column: 3, scope: !16792)
!16814 = !DILocation(line: 0, scope: !16416, inlinedAt: !16815)
!16815 = distinct !DILocation(line: 269, column: 3, scope: !16792)
!16816 = !DILocation(line: 0, scope: !16424, inlinedAt: !16817)
!16817 = distinct !DILocation(line: 215, column: 2, scope: !16416, inlinedAt: !16815)
!16818 = !DILocation(line: 95, column: 2, scope: !16424, inlinedAt: !16817)
!16819 = !DILocation(line: 270, column: 6, scope: !16792)
!16820 = !DILocation(line: 270, column: 3, scope: !16792)
!16821 = !DILocation(line: 0, scope: !16348, inlinedAt: !16822)
!16822 = distinct !DILocation(line: 271, column: 9, scope: !16792)
!16823 = !DILocation(line: 55, column: 2, scope: !16357, inlinedAt: !16824)
!16824 = distinct !DILocation(line: 145, column: 10, scope: !16348, inlinedAt: !16822)
!16825 = !DILocation(line: 0, scope: !16357, inlinedAt: !16824)
!16826 = !DILocation(line: 272, column: 22, scope: !16792)
!16827 = distinct !{!16827, !16807, !16828}
!16828 = !DILocation(line: 273, column: 2, scope: !16785)
!16829 = !DILocation(line: 276, column: 19, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16831, file: !2487, line: 275, column: 23)
!16831 = distinct !DILexicalBlock(scope: !16785, file: !2487, line: 275, column: 6)
!16832 = !DILocation(line: 277, column: 2, scope: !16830)
!16833 = !DILocation(line: 279, column: 15, scope: !16785)
!16834 = !DILocation(line: 279, column: 12, scope: !16785)
!16835 = !DILocation(line: 280, column: 21, scope: !16785)
!16836 = !DILocation(line: 282, column: 24, scope: !16785)
!16837 = !DILocation(line: 282, column: 2, scope: !16785)
!16838 = !DILocation(line: 0, scope: !16416, inlinedAt: !16839)
!16839 = distinct !DILocation(line: 284, column: 2, scope: !16785)
!16840 = !DILocation(line: 0, scope: !16424, inlinedAt: !16841)
!16841 = distinct !DILocation(line: 215, column: 2, scope: !16416, inlinedAt: !16839)
!16842 = !DILocation(line: 95, column: 2, scope: !16424, inlinedAt: !16841)
!16843 = !DILocation(line: 285, column: 1, scope: !16785)
!16844 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2487, file: !2487, line: 287, type: !16845, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16847)
!16845 = !DISubroutineType(types: !16846)
!16846 = !{!202}
!16847 = !{!16848, !16849, !16851}
!16848 = !DILocalVariable(name: "t", scope: !16844, file: !2487, line: 289, type: !1604)
!16849 = !DILocalVariable(name: "__i", scope: !16850, file: !2487, line: 291, type: !16326)
!16850 = distinct !DILexicalBlock(scope: !16844, file: !2487, line: 291, column: 2)
!16851 = !DILocalVariable(name: "__key", scope: !16850, file: !2487, line: 291, type: !16326)
!16852 = !DILocation(line: 0, scope: !16844)
!16853 = !DILocation(line: 0, scope: !16850)
!16854 = !DILocation(line: 0, scope: !16348, inlinedAt: !16855)
!16855 = distinct !DILocation(line: 291, column: 2, scope: !16850)
!16856 = !DILocation(line: 55, column: 2, scope: !16357, inlinedAt: !16857)
!16857 = distinct !DILocation(line: 145, column: 10, scope: !16348, inlinedAt: !16855)
!16858 = !DILocation(line: 0, scope: !16357, inlinedAt: !16857)
!16859 = !DILocation(line: 292, column: 7, scope: !16860)
!16860 = distinct !DILexicalBlock(scope: !16861, file: !2487, line: 291, column: 24)
!16861 = distinct !DILexicalBlock(scope: !16850, file: !2487, line: 291, column: 2)
!16862 = !DILocation(line: 292, column: 19, scope: !16860)
!16863 = !DILocation(line: 0, scope: !16416, inlinedAt: !16864)
!16864 = distinct !DILocation(line: 291, column: 2, scope: !16861)
!16865 = !DILocation(line: 0, scope: !16424, inlinedAt: !16866)
!16866 = distinct !DILocation(line: 215, column: 2, scope: !16416, inlinedAt: !16864)
!16867 = !DILocation(line: 95, column: 2, scope: !16424, inlinedAt: !16866)
!16868 = !DILocation(line: 292, column: 17, scope: !16860)
!16869 = !DILocation(line: 294, column: 2, scope: !16844)
!16870 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2487, file: !2487, line: 297, type: !6034, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !317)
!16871 = !DILocation(line: 300, column: 19, scope: !16870)
!16872 = !DILocation(line: 300, column: 9, scope: !16870)
!16873 = !DILocation(line: 300, column: 2, scope: !16870)
!16874 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2487, file: !2487, line: 306, type: !16845, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !317)
!16875 = !DILocation(line: 308, column: 9, scope: !16874)
!16876 = !DILocation(line: 308, column: 2, scope: !16874)
!16877 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2487, file: !2487, line: 319, type: !6044, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16878)
!16878 = !{!16879, !16880, !16881, !16882}
!16879 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16877, file: !2487, line: 319, type: !121)
!16880 = !DILocalVariable(name: "start_cycles", scope: !16877, file: !2487, line: 328, type: !121)
!16881 = !DILocalVariable(name: "cycles_to_wait", scope: !16877, file: !2487, line: 331, type: !121)
!16882 = !DILocalVariable(name: "current_cycles", scope: !16883, file: !2487, line: 338, type: !121)
!16883 = distinct !DILexicalBlock(scope: !16884, file: !2487, line: 337, column: 11)
!16884 = distinct !DILexicalBlock(scope: !16885, file: !2487, line: 337, column: 2)
!16885 = distinct !DILexicalBlock(scope: !16877, file: !2487, line: 337, column: 2)
!16886 = !DILocation(line: 0, scope: !16877)
!16887 = !DILocation(line: 322, column: 19, scope: !16888)
!16888 = distinct !DILexicalBlock(scope: !16877, file: !2487, line: 322, column: 6)
!16889 = !DILocation(line: 322, column: 6, scope: !16877)
!16890 = !DILocation(line: 328, column: 26, scope: !16877)
!16891 = !DILocation(line: 333, column: 43, scope: !16877)
!16892 = !DILocation(line: 337, column: 2, scope: !16877)
!16893 = !DILocation(line: 338, column: 29, scope: !16883)
!16894 = !DILocation(line: 0, scope: !16883)
!16895 = !DILocation(line: 341, column: 23, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16883, file: !2487, line: 341, column: 7)
!16897 = !DILocation(line: 341, column: 39, scope: !16896)
!16898 = !DILocation(line: 349, column: 1, scope: !16877)
!16899 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !296, file: !296, line: 1675, type: !6034, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !317)
!16900 = !DILocation(line: 1677, column: 9, scope: !16899)
!16901 = !DILocation(line: 1677, column: 2, scope: !16899)
!16902 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16903, file: !16903, line: 24, type: !6034, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !317)
!16903 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16904 = !DILocation(line: 26, column: 9, scope: !16902)
!16905 = !DILocation(line: 26, column: 2, scope: !16902)
!16906 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2487, file: !2487, line: 364, type: !16907, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16909)
!16907 = !DISubroutineType(types: !16908)
!16908 = !{!1604, !16316}
!16909 = !{!16910, !16911}
!16910 = !DILocalVariable(name: "timeout", arg: 1, scope: !16906, file: !2487, line: 364, type: !16316)
!16911 = !DILocalVariable(name: "dt", scope: !16906, file: !2487, line: 366, type: !200)
!16912 = !DILocation(line: 0, scope: !16906)
!16913 = !DILocation(line: 368, column: 6, scope: !16906)
!16914 = !DILocation(line: 371, column: 10, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16916, file: !2487, line: 370, column: 47)
!16916 = distinct !DILexicalBlock(scope: !16917, file: !2487, line: 370, column: 13)
!16917 = distinct !DILexicalBlock(scope: !16906, file: !2487, line: 368, column: 6)
!16918 = !DILocation(line: 371, column: 3, scope: !16915)
!16919 = !DILocation(line: 376, column: 58, scope: !16920)
!16920 = distinct !DILexicalBlock(scope: !16921, file: !2487, line: 376, column: 7)
!16921 = distinct !DILexicalBlock(scope: !16916, file: !2487, line: 372, column: 9)
!16922 = !DILocation(line: 376, column: 7, scope: !16921)
!16923 = !DILocation(line: 376, column: 43, scope: !16920)
!16924 = !DILocation(line: 377, column: 4, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16920, file: !2487, line: 376, column: 64)
!16926 = !DILocation(line: 379, column: 10, scope: !16921)
!16927 = !DILocation(line: 379, column: 33, scope: !16921)
!16928 = !DILocation(line: 379, column: 31, scope: !16921)
!16929 = !DILocation(line: 379, column: 3, scope: !16921)
!16930 = !DILocation(line: 0, scope: !16917)
!16931 = !DILocation(line: 381, column: 1, scope: !16906)
!16932 = distinct !DISubprogram(name: "k_free", scope: !16933, file: !16933, line: 43, type: !5890, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3165, retainedNodes: !16934)
!16933 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16934 = !{!16935, !16936}
!16935 = !DILocalVariable(name: "ptr", arg: 1, scope: !16932, file: !16933, line: 43, type: !102)
!16936 = !DILocalVariable(name: "heap_ref", scope: !16932, file: !16933, line: 45, type: !16937)
!16937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16938, size: 32)
!16938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16939, size: 32)
!16939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !16940)
!16940 = !{!16941, !16947, !16966}
!16941 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16939, file: !296, line: 5074, baseType: !16942, size: 96)
!16942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !16943)
!16943 = !{!16944, !16945, !16946}
!16944 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16942, file: !472, line: 57, baseType: !475, size: 32)
!16945 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16942, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!16946 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16942, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!16947 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16939, file: !296, line: 5075, baseType: !16948, size: 64, offset: 96)
!16948 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !16949)
!16949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !16950)
!16950 = !{!16951}
!16951 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16949, file: !320, line: 232, baseType: !16952, size: 64)
!16952 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !16953)
!16953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !16954)
!16954 = !{!16955, !16961}
!16955 = !DIDerivedType(tag: DW_TAG_member, scope: !16953, file: !325, line: 38, baseType: !16956, size: 32)
!16956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16953, file: !325, line: 38, size: 32, elements: !16957)
!16957 = !{!16958, !16960}
!16958 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !16956, file: !325, line: 39, baseType: !16959, size: 32)
!16959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16953, size: 32)
!16960 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !16956, file: !325, line: 40, baseType: !16959, size: 32)
!16961 = !DIDerivedType(tag: DW_TAG_member, scope: !16953, file: !325, line: 42, baseType: !16962, size: 32, offset: 32)
!16962 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16953, file: !325, line: 42, size: 32, elements: !16963)
!16963 = !{!16964, !16965}
!16964 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !16962, file: !325, line: 43, baseType: !16959, size: 32)
!16965 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !16962, file: !325, line: 44, baseType: !16959, size: 32)
!16966 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16939, file: !296, line: 5076, baseType: !16967, offset: 160)
!16967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!16968 = !DILocation(line: 0, scope: !16932)
!16969 = !DILocation(line: 47, column: 10, scope: !16970)
!16970 = distinct !DILexicalBlock(scope: !16932, file: !16933, line: 47, column: 6)
!16971 = !DILocation(line: 47, column: 6, scope: !16932)
!16972 = !DILocation(line: 49, column: 9, scope: !16973)
!16973 = distinct !DILexicalBlock(scope: !16970, file: !16933, line: 47, column: 19)
!16974 = !DILocation(line: 53, column: 15, scope: !16973)
!16975 = !DILocation(line: 53, column: 3, scope: !16973)
!16976 = !DILocation(line: 56, column: 2, scope: !16973)
!16977 = !DILocation(line: 57, column: 1, scope: !16932)
!16978 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !16933, file: !16933, line: 124, type: !16979, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3165, retainedNodes: !16981)
!16979 = !DISubroutineType(types: !16980)
!16980 = !{!102, !204, !204}
!16981 = !{!16982, !16983, !16984, !16985}
!16982 = !DILocalVariable(name: "align", arg: 1, scope: !16978, file: !16933, line: 124, type: !204)
!16983 = !DILocalVariable(name: "size", arg: 2, scope: !16978, file: !16933, line: 124, type: !204)
!16984 = !DILocalVariable(name: "ret", scope: !16978, file: !16933, line: 126, type: !102)
!16985 = !DILocalVariable(name: "heap", scope: !16978, file: !16933, line: 127, type: !16938)
!16986 = !DILocation(line: 0, scope: !16978)
!16987 = !DILocation(line: 129, column: 6, scope: !16988)
!16988 = distinct !DILexicalBlock(scope: !16978, file: !16933, line: 129, column: 6)
!16989 = !DILocation(line: 129, column: 6, scope: !16978)
!16990 = !DILocation(line: 132, column: 10, scope: !16991)
!16991 = distinct !DILexicalBlock(scope: !16988, file: !16933, line: 131, column: 9)
!16992 = !DILocation(line: 132, column: 20, scope: !16991)
!16993 = !DILocation(line: 135, column: 11, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16978, file: !16933, line: 135, column: 6)
!16995 = !DILocation(line: 135, column: 6, scope: !16978)
!16996 = !DILocation(line: 136, column: 9, scope: !16997)
!16997 = distinct !DILexicalBlock(scope: !16994, file: !16933, line: 135, column: 20)
!16998 = !DILocation(line: 137, column: 2, scope: !16997)
!16999 = !DILocation(line: 0, scope: !16994)
!17000 = !DILocation(line: 141, column: 2, scope: !16978)
!17001 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !16933, file: !16933, line: 12, type: !17002, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3165, retainedNodes: !17004)
!17002 = !DISubroutineType(types: !17003)
!17003 = !{!102, !16938, !204, !204}
!17004 = !{!17005, !17006, !17007, !17008, !17009, !17010}
!17005 = !DILocalVariable(name: "heap", arg: 1, scope: !17001, file: !16933, line: 12, type: !16938)
!17006 = !DILocalVariable(name: "align", arg: 2, scope: !17001, file: !16933, line: 12, type: !204)
!17007 = !DILocalVariable(name: "size", arg: 3, scope: !17001, file: !16933, line: 12, type: !204)
!17008 = !DILocalVariable(name: "mem", scope: !17001, file: !16933, line: 14, type: !102)
!17009 = !DILocalVariable(name: "heap_ref", scope: !17001, file: !16933, line: 15, type: !16937)
!17010 = !DILocalVariable(name: "__align", scope: !17001, file: !16933, line: 16, type: !204)
!17011 = !DILocation(line: 0, scope: !17001)
!17012 = !DILocation(line: 24, column: 6, scope: !17013)
!17013 = distinct !DILexicalBlock(scope: !17001, file: !16933, line: 24, column: 6)
!17014 = !DILocation(line: 24, column: 6, scope: !17001)
!17015 = !DILocation(line: 27, column: 18, scope: !17001)
!17016 = !DILocation(line: 29, column: 44, scope: !17001)
!17017 = !DILocation(line: 29, column: 8, scope: !17001)
!17018 = !DILocation(line: 30, column: 10, scope: !17019)
!17019 = distinct !DILexicalBlock(scope: !17001, file: !16933, line: 30, column: 6)
!17020 = !DILocation(line: 30, column: 6, scope: !17001)
!17021 = !DILocation(line: 34, column: 13, scope: !17001)
!17022 = !DILocation(line: 35, column: 12, scope: !17001)
!17023 = !DILocation(line: 36, column: 8, scope: !17001)
!17024 = !DILocation(line: 40, column: 2, scope: !17001)
!17025 = !DILocation(line: 41, column: 1, scope: !17001)
!17026 = distinct !DISubprogram(name: "size_add_overflow", scope: !17027, file: !17027, line: 47, type: !17028, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3165, retainedNodes: !17030)
!17027 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17028 = !DISubroutineType(types: !17029)
!17029 = !{!157, !204, !204, !2600}
!17030 = !{!17031, !17032, !17033}
!17031 = !DILocalVariable(name: "a", arg: 1, scope: !17026, file: !17027, line: 47, type: !204)
!17032 = !DILocalVariable(name: "b", arg: 2, scope: !17026, file: !17027, line: 47, type: !204)
!17033 = !DILocalVariable(name: "result", arg: 3, scope: !17026, file: !17027, line: 47, type: !2600)
!17034 = !DILocation(line: 0, scope: !17026)
!17035 = !DILocation(line: 49, column: 9, scope: !17026)
!17036 = !DILocation(line: 49, column: 2, scope: !17026)
!17037 = distinct !DISubprogram(name: "boot_banner", scope: !17038, file: !17038, line: 26, type: !3181, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3167, retainedNodes: !317)
!17038 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17039 = !DILocation(line: 34, column: 2, scope: !17037)
!17040 = !DILocation(line: 36, column: 1, scope: !17037)
!17041 = distinct !DISubprogram(name: "statics_init", scope: !2515, file: !2515, line: 21, type: !2521, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2496, retainedNodes: !17042)
!17042 = !{!17043, !17044}
!17043 = !DILocalVariable(name: "unused", arg: 1, scope: !17041, file: !2515, line: 21, type: !2523)
!17044 = !DILocalVariable(name: "h", scope: !17045, file: !2515, line: 24, type: !17046)
!17045 = distinct !DILexicalBlock(scope: !17041, file: !2515, line: 24, column: 2)
!17046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17047, size: 32)
!17047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !17048)
!17048 = !{!17049, !17055, !17061}
!17049 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17047, file: !296, line: 5074, baseType: !17050, size: 96)
!17050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !17051)
!17051 = !{!17052, !17053, !17054}
!17052 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17050, file: !472, line: 57, baseType: !475, size: 32)
!17053 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17050, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!17054 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17050, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!17055 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17047, file: !296, line: 5075, baseType: !17056, size: 64, offset: 96)
!17056 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !17057)
!17057 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !17058)
!17058 = !{!17059}
!17059 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17057, file: !320, line: 232, baseType: !17060, size: 64)
!17060 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2501)
!17061 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17047, file: !296, line: 5076, baseType: !17062, offset: 160)
!17062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!17063 = !DILocation(line: 0, scope: !17041)
!17064 = !DILocation(line: 0, scope: !17045)
!17065 = !DILocation(line: 24, column: 2, scope: !17045)
!17066 = !DILocation(line: 52, column: 2, scope: !17041)
!17067 = !DILocation(line: 49, column: 27, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17069, file: !2515, line: 48, column: 3)
!17069 = distinct !DILexicalBlock(scope: !17070, file: !2515, line: 24, column: 36)
!17070 = distinct !DILexicalBlock(scope: !17045, file: !2515, line: 24, column: 2)
!17071 = !DILocation(line: 49, column: 45, scope: !17068)
!17072 = !DILocation(line: 49, column: 4, scope: !17068)
!17073 = !DILocation(line: 24, column: 2, scope: !17070)
!17074 = !DILocation(line: 24, column: 2, scope: !17075)
!17075 = distinct !DILexicalBlock(scope: !17070, file: !2515, line: 24, column: 2)
!17076 = distinct !{!17076, !17065, !17077}
!17077 = !DILocation(line: 51, column: 2, scope: !17045)
!17078 = distinct !DISubprogram(name: "k_heap_init", scope: !2515, file: !2515, line: 13, type: !17079, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2496, retainedNodes: !17081)
!17079 = !DISubroutineType(types: !17080)
!17080 = !{null, !17046, !102, !204}
!17081 = !{!17082, !17083, !17084}
!17082 = !DILocalVariable(name: "h", arg: 1, scope: !17078, file: !2515, line: 13, type: !17046)
!17083 = !DILocalVariable(name: "mem", arg: 2, scope: !17078, file: !2515, line: 13, type: !102)
!17084 = !DILocalVariable(name: "bytes", arg: 3, scope: !17078, file: !2515, line: 13, type: !204)
!17085 = !DILocation(line: 0, scope: !17078)
!17086 = !DILocation(line: 15, column: 19, scope: !17078)
!17087 = !DILocation(line: 15, column: 2, scope: !17078)
!17088 = !DILocation(line: 16, column: 20, scope: !17078)
!17089 = !DILocation(line: 16, column: 2, scope: !17078)
!17090 = !DILocation(line: 19, column: 1, scope: !17078)
!17091 = distinct !DISubprogram(name: "z_waitq_init", scope: !13168, file: !13168, line: 47, type: !17092, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2496, retainedNodes: !17095)
!17092 = !DISubroutineType(types: !17093)
!17093 = !{null, !17094}
!17094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17056, size: 32)
!17095 = !{!17096}
!17096 = !DILocalVariable(name: "w", arg: 1, scope: !17091, file: !13168, line: 47, type: !17094)
!17097 = !DILocation(line: 0, scope: !17091)
!17098 = !DILocation(line: 49, column: 21, scope: !17091)
!17099 = !DILocation(line: 49, column: 2, scope: !17091)
!17100 = !DILocation(line: 50, column: 1, scope: !17091)
!17101 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !17102, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2496, retainedNodes: !17105)
!17102 = !DISubroutineType(types: !17103)
!17103 = !{null, !17104}
!17104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17060, size: 32)
!17105 = !{!17106}
!17106 = !DILocalVariable(name: "list", arg: 1, scope: !17101, file: !325, line: 197, type: !17104)
!17107 = !DILocation(line: 0, scope: !17101)
!17108 = !DILocation(line: 199, column: 8, scope: !17101)
!17109 = !DILocation(line: 199, column: 13, scope: !17101)
!17110 = !DILocation(line: 200, column: 8, scope: !17101)
!17111 = !DILocation(line: 200, column: 13, scope: !17101)
!17112 = !DILocation(line: 201, column: 1, scope: !17101)
!17113 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2515, file: !2515, line: 64, type: !17114, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2496, retainedNodes: !17120)
!17114 = !DISubroutineType(types: !17115)
!17115 = !{!102, !17046, !204, !204, !17116}
!17116 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !17117)
!17117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !17118)
!17118 = !{!17119}
!17119 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17117, file: !201, line: 66, baseType: !200, size: 64)
!17120 = !{!17121, !17122, !17123, !17124, !17125, !17126, !17127, !17128, !17133}
!17121 = !DILocalVariable(name: "h", arg: 1, scope: !17113, file: !2515, line: 64, type: !17046)
!17122 = !DILocalVariable(name: "align", arg: 2, scope: !17113, file: !2515, line: 64, type: !204)
!17123 = !DILocalVariable(name: "bytes", arg: 3, scope: !17113, file: !2515, line: 64, type: !204)
!17124 = !DILocalVariable(name: "timeout", arg: 4, scope: !17113, file: !2515, line: 65, type: !17116)
!17125 = !DILocalVariable(name: "now", scope: !17113, file: !2515, line: 67, type: !202)
!17126 = !DILocalVariable(name: "end", scope: !17113, file: !2515, line: 67, type: !202)
!17127 = !DILocalVariable(name: "ret", scope: !17113, file: !2515, line: 68, type: !102)
!17128 = !DILocalVariable(name: "key", scope: !17113, file: !2515, line: 72, type: !17129)
!17129 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !17130)
!17130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !17131)
!17131 = !{!17132}
!17132 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17130, file: !316, line: 33, baseType: !103, size: 32)
!17133 = !DILocalVariable(name: "blocked_alloc", scope: !17113, file: !2515, line: 78, type: !157)
!17134 = !DILocation(line: 0, scope: !17113)
!17135 = !DILocation(line: 67, column: 21, scope: !17113)
!17136 = !DILocation(line: 70, column: 8, scope: !17113)
!17137 = !DILocation(line: 72, column: 41, scope: !17113)
!17138 = !DILocalVariable(name: "l", arg: 1, scope: !17139, file: !316, line: 136, type: !17142)
!17139 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !17140, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2496, retainedNodes: !17143)
!17140 = !DISubroutineType(types: !17141)
!17141 = !{!17129, !17142}
!17142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17062, size: 32)
!17143 = !{!17138, !17144}
!17144 = !DILocalVariable(name: "k", scope: !17139, file: !316, line: 139, type: !17129)
!17145 = !DILocation(line: 0, scope: !17139, inlinedAt: !17146)
!17146 = distinct !DILocation(line: 72, column: 25, scope: !17113)
!17147 = !DILocation(line: 55, column: 2, scope: !17148, inlinedAt: !17152)
!17148 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5738, file: !5738, line: 42, type: !5739, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2496, retainedNodes: !17149)
!17149 = !{!17150, !17151}
!17150 = !DILocalVariable(name: "key", scope: !17148, file: !5738, line: 44, type: !32)
!17151 = !DILocalVariable(name: "tmp", scope: !17148, file: !5738, line: 53, type: !32)
!17152 = distinct !DILocation(line: 145, column: 10, scope: !17139, inlinedAt: !17146)
!17153 = !{i64 2222898}
!17154 = !DILocation(line: 0, scope: !17148, inlinedAt: !17152)
!17155 = !DILocation(line: 81, column: 9, scope: !17156)
!17156 = distinct !DILexicalBlock(scope: !17113, file: !2515, line: 80, column: 22)
!17157 = !DILocation(line: 83, column: 9, scope: !17156)
!17158 = !DILocation(line: 85, column: 12, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17156, file: !2515, line: 84, column: 7)
!17160 = !DILocation(line: 85, column: 21, scope: !17159)
!17161 = !DILocation(line: 85, column: 30, scope: !17159)
!17162 = !DILocation(line: 85, column: 37, scope: !17159)
!17163 = !DILocation(line: 84, column: 7, scope: !17156)
!17164 = !DILocation(line: 99, column: 10, scope: !17156)
!17165 = !DILocation(line: 0, scope: !17139, inlinedAt: !17166)
!17166 = distinct !DILocation(line: 101, column: 9, scope: !17156)
!17167 = !DILocation(line: 55, column: 2, scope: !17148, inlinedAt: !17168)
!17168 = distinct !DILocation(line: 145, column: 10, scope: !17139, inlinedAt: !17166)
!17169 = !DILocation(line: 0, scope: !17148, inlinedAt: !17168)
!17170 = distinct !{!17170, !17171, !17172}
!17171 = !DILocation(line: 80, column: 2, scope: !17113)
!17172 = !DILocation(line: 102, column: 2, scope: !17113)
!17173 = !DILocalVariable(name: "key", arg: 2, scope: !17174, file: !316, line: 190, type: !17129)
!17174 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !17175, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2496, retainedNodes: !17177)
!17175 = !DISubroutineType(types: !17176)
!17176 = !{null, !17142, !17129}
!17177 = !{!17178, !17173}
!17178 = !DILocalVariable(name: "l", arg: 1, scope: !17174, file: !316, line: 189, type: !17142)
!17179 = !DILocation(line: 0, scope: !17174, inlinedAt: !17180)
!17180 = distinct !DILocation(line: 106, column: 2, scope: !17113)
!17181 = !DILocalVariable(name: "key", arg: 1, scope: !17182, file: !5738, line: 84, type: !32)
!17182 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5738, file: !5738, line: 84, type: !5749, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2496, retainedNodes: !17183)
!17183 = !{!17181}
!17184 = !DILocation(line: 0, scope: !17182, inlinedAt: !17185)
!17185 = distinct !DILocation(line: 215, column: 2, scope: !17174, inlinedAt: !17180)
!17186 = !DILocation(line: 95, column: 2, scope: !17182, inlinedAt: !17185)
!17187 = !{i64 2223715}
!17188 = !DILocation(line: 107, column: 2, scope: !17113)
!17189 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2515, file: !2515, line: 110, type: !17190, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2496, retainedNodes: !17192)
!17190 = !DISubroutineType(types: !17191)
!17191 = !{!102, !17046, !204, !17116}
!17192 = !{!17193, !17194, !17195, !17196}
!17193 = !DILocalVariable(name: "h", arg: 1, scope: !17189, file: !2515, line: 110, type: !17046)
!17194 = !DILocalVariable(name: "bytes", arg: 2, scope: !17189, file: !2515, line: 110, type: !204)
!17195 = !DILocalVariable(name: "timeout", arg: 3, scope: !17189, file: !2515, line: 110, type: !17116)
!17196 = !DILocalVariable(name: "ret", scope: !17189, file: !2515, line: 114, type: !102)
!17197 = !DILocation(line: 0, scope: !17189)
!17198 = !DILocation(line: 114, column: 14, scope: !17189)
!17199 = !DILocation(line: 118, column: 2, scope: !17189)
!17200 = distinct !DISubprogram(name: "k_heap_free", scope: !2515, file: !2515, line: 121, type: !17201, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2496, retainedNodes: !17203)
!17201 = !DISubroutineType(types: !17202)
!17202 = !{null, !17046, !102}
!17203 = !{!17204, !17205, !17206}
!17204 = !DILocalVariable(name: "h", arg: 1, scope: !17200, file: !2515, line: 121, type: !17046)
!17205 = !DILocalVariable(name: "mem", arg: 2, scope: !17200, file: !2515, line: 121, type: !102)
!17206 = !DILocalVariable(name: "key", scope: !17200, file: !2515, line: 123, type: !17129)
!17207 = !DILocation(line: 0, scope: !17200)
!17208 = !DILocation(line: 0, scope: !17139, inlinedAt: !17209)
!17209 = distinct !DILocation(line: 123, column: 25, scope: !17200)
!17210 = !DILocation(line: 55, column: 2, scope: !17148, inlinedAt: !17211)
!17211 = distinct !DILocation(line: 145, column: 10, scope: !17139, inlinedAt: !17209)
!17212 = !DILocation(line: 0, scope: !17148, inlinedAt: !17211)
!17213 = !DILocation(line: 125, column: 20, scope: !17200)
!17214 = !DILocation(line: 125, column: 2, scope: !17200)
!17215 = !DILocation(line: 128, column: 60, scope: !17216)
!17216 = distinct !DILexicalBlock(scope: !17200, file: !2515, line: 128, column: 6)
!17217 = !DILocation(line: 128, column: 43, scope: !17216)
!17218 = !DILocation(line: 128, column: 68, scope: !17216)
!17219 = !DILocation(line: 128, column: 6, scope: !17200)
!17220 = !DILocation(line: 123, column: 41, scope: !17200)
!17221 = !DILocation(line: 129, column: 3, scope: !17222)
!17222 = distinct !DILexicalBlock(scope: !17216, file: !2515, line: 128, column: 74)
!17223 = !DILocation(line: 130, column: 2, scope: !17222)
!17224 = !DILocation(line: 0, scope: !17174, inlinedAt: !17225)
!17225 = distinct !DILocation(line: 131, column: 3, scope: !17226)
!17226 = distinct !DILexicalBlock(scope: !17216, file: !2515, line: 130, column: 9)
!17227 = !DILocation(line: 0, scope: !17182, inlinedAt: !17228)
!17228 = distinct !DILocation(line: 215, column: 2, scope: !17174, inlinedAt: !17225)
!17229 = !DILocation(line: 95, column: 2, scope: !17182, inlinedAt: !17228)
!17230 = !DILocation(line: 133, column: 1, scope: !17200)
